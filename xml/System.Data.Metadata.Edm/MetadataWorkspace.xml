<Type Name="MetadataWorkspace" FullName="System.Data.Metadata.Edm.MetadataWorkspace">
  <TypeSignature Language="C#" Value="public sealed class MetadataWorkspace" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MetadataWorkspace extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Metadata.Edm.MetadataWorkspace" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MetadataWorkspace" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetadataWorkspace sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="83770-101">다양한 소스에서 메타데이터를 검색할 수 있도록 지원하는 ADO.NET 메타데이터 런타임 서비스 구성 요소를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="83770-101">Represents the ADO.NET metadata runtime service component that provides support for retrieving metadata from various sources.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83770-102"><xref:System.Data.Metadata.Edm.MetadataWorkspace> 클래스는 지정된 된 응용 프로그램의 컨텍스트에서 개념적 모델 메타 데이터와 상호 작용 하는 데 사용할 수 있는 중앙 런타임 서비스 구성 요소를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="83770-102">The <xref:System.Data.Metadata.Edm.MetadataWorkspace> class provides a central runtime service component that you can use to interact with conceptual model metadata in the context of a given application.</span></span> <span data-ttu-id="83770-103">자세한 내용은 참조 [메타 데이터 작업 영역](http://msdn.microsoft.com/library/601aee56-3eda-4caa-9082-a01df76c5e84)합니다.</span><span class="sxs-lookup"><span data-stu-id="83770-103">For more information, see [Metadata Workspace](http://msdn.microsoft.com/library/601aee56-3eda-4caa-9082-a01df76c5e84).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="83770-104"><see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="83770-104">Initializes a new instance of the <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetadataWorkspace ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MetadataWorkspace();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="83770-105"><see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="83770-105">Initializes a new instance of the <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetadataWorkspace (System.Collections.Generic.IEnumerable&lt;string&gt; paths, System.Collections.Generic.IEnumerable&lt;System.Reflection.Assembly&gt; assembliesToConsider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;string&gt; paths, class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.Assembly&gt; assembliesToConsider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.Reflection.Assembly})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (paths As IEnumerable(Of String), assembliesToConsider As IEnumerable(Of Assembly))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MetadataWorkspace(System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ paths, System::Collections::Generic::IEnumerable&lt;System::Reflection::Assembly ^&gt; ^ assembliesToConsider);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="paths" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="assembliesToConsider" Type="System.Collections.Generic.IEnumerable&lt;System.Reflection.Assembly&gt;" />
      </Parameters>
      <Docs>
        <param name="paths"><span data-ttu-id="83770-106">작업 영역 메타데이터에 대한 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-106">The paths to workspace metadata.</span></span></param>
        <param name="assembliesToConsider"><span data-ttu-id="83770-107">작업 영역을 생성하는 데 사용되는 어셈블리의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-107">The names of assemblies used to construct workspace.</span></span></param>
        <summary><span data-ttu-id="83770-108">지정된 경로 및 어셈블리를 사용하여 <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="83770-108">Initializes a new instance of the <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> class using the specified paths and assemblies.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearCache">
      <MemberSignature Language="C#" Value="public static void ClearCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearCache() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.ClearCache" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearCache ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearCache();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="83770-109">메타데이터 캐시 항목을 모두 지웁니다.</span><span class="sxs-lookup"><span data-stu-id="83770-109">Clears all the metadata cache entries.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEntitySqlParser">
      <MemberSignature Language="C#" Value="public System.Data.Common.EntitySql.EntitySqlParser CreateEntitySqlParser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.EntitySql.EntitySqlParser CreateEntitySqlParser() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.CreateEntitySqlParser" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateEntitySqlParser () As EntitySqlParser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::EntitySql::EntitySqlParser ^ CreateEntitySqlParser();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.EntitySql.EntitySqlParser</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="83770-110"><see cref="T:System.Data.Common.EntitySql.EntitySqlParser" /> 데이터 공간을 사용하도록 구성된 <see cref="F:System.Data.Metadata.Edm.DataSpace.CSpace" />를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="83770-110">Creates an <see cref="T:System.Data.Common.EntitySql.EntitySqlParser" /> configured to use the <see cref="F:System.Data.Metadata.Edm.DataSpace.CSpace" /> data space.</span></span></summary>
        <returns><span data-ttu-id="83770-111">만들어진 파서 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-111">The created parser object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateQueryCommandTree">
      <MemberSignature Language="C#" Value="public System.Data.Common.CommandTrees.DbQueryCommandTree CreateQueryCommandTree (System.Data.Common.CommandTrees.DbExpression query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.CommandTrees.DbQueryCommandTree CreateQueryCommandTree(class System.Data.Common.CommandTrees.DbExpression query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.CreateQueryCommandTree(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateQueryCommandTree (query As DbExpression) As DbQueryCommandTree" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::CommandTrees::DbQueryCommandTree ^ CreateQueryCommandTree(System::Data::Common::CommandTrees::DbExpression ^ query);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbQueryCommandTree</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="query"><span data-ttu-id="83770-112">쿼리를 정의하는 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-112">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that defines the query.</span></span></param>
        <summary><span data-ttu-id="83770-113">지정된 쿼리 식에 기반하여 이 메타데이터 작업 영역에 바인딩되는 새 <see cref="T:System.Data.Common.CommandTrees.DbQueryCommandTree" />를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="83770-113">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbQueryCommandTree" /> bound to this metadata workspace based on the specified query expression.</span></span></summary>
        <returns><span data-ttu-id="83770-114">지정된 식을 <see cref="T:System.Data.Common.CommandTrees.DbQueryCommandTree" /> 속성으로 사용하는 새 <see cref="P:System.Data.Common.CommandTrees.DbQueryCommandTree.Query" />입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-114">A new <see cref="T:System.Data.Common.CommandTrees.DbQueryCommandTree" /> with the specified expression as it's <see cref="P:System.Data.Common.CommandTrees.DbQueryCommandTree.Query" /> property.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="query" />
        </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="query" />
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEdmSpaceType">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="83770-115"><paramref name="objectSpaceType" /> 매개 변수에서 제공하는 형식과 일치하는 <see cref="T:System.Data.Metadata.Edm.StructuralType" />을 나타내는 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="83770-115">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" /> that matches the type supplied by the parameter <paramref name="objectSpaceType" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEdmSpaceType">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EnumType GetEdmSpaceType (System.Data.Metadata.Edm.EnumType objectSpaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.EnumType GetEdmSpaceType(class System.Data.Metadata.Edm.EnumType objectSpaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetEdmSpaceType(System.Data.Metadata.Edm.EnumType)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEdmSpaceType (objectSpaceType As EnumType) As EnumType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::EnumType ^ GetEdmSpaceType(System::Data::Metadata::Edm::EnumType ^ objectSpaceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EnumType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectSpaceType" Type="System.Data.Metadata.Edm.EnumType" />
      </Parameters>
      <Docs>
        <param name="objectSpaceType"><span data-ttu-id="83770-116">개체 공간의 형식을 제공하는 <see cref="T:System.Data.Metadata.Edm.EnumlType" />입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-116">A <see cref="T:System.Data.Metadata.Edm.EnumlType" /> that supplies the type in the object space.</span></span></param>
        <summary><span data-ttu-id="83770-117"><paramref name="objectSpaceType" /> 매개 변수에서 제공하는 형식과 일치하는 <see cref="T:System.Data.Metadata.Edm.StructuralType" />을 나타내는 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="83770-117">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" /> that matches the type supplied by the parameter <paramref name="objectSpaceType" />.</span></span></summary>
        <returns><span data-ttu-id="83770-118"><see cref="T:System.Data.Metadata.Edm.StructuralType" />을 나타내는 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-118">A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span></span> <span data-ttu-id="83770-119">일치하는 형식이 없으면 null이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="83770-119">If there is no matched type, this method returns null.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEdmSpaceType">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.StructuralType GetEdmSpaceType (System.Data.Metadata.Edm.StructuralType objectSpaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.StructuralType GetEdmSpaceType(class System.Data.Metadata.Edm.StructuralType objectSpaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetEdmSpaceType(System.Data.Metadata.Edm.StructuralType)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEdmSpaceType (objectSpaceType As StructuralType) As StructuralType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::StructuralType ^ GetEdmSpaceType(System::Data::Metadata::Edm::StructuralType ^ objectSpaceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.StructuralType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectSpaceType" Type="System.Data.Metadata.Edm.StructuralType" />
      </Parameters>
      <Docs>
        <param name="objectSpaceType"><span data-ttu-id="83770-120">개체 공간의 형식을 제공하는 <see cref="T:System.Data.Metadata.Edm.StructuralType" />입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-120">A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> that supplies the type in the object space.</span></span></param>
        <summary><span data-ttu-id="83770-121"><paramref name="objectSpaceType" /> 매개 변수에서 제공하는 형식과 일치하는 <see cref="T:System.Data.Metadata.Edm.StructuralType" />을 나타내는 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="83770-121">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" /> that matches the type supplied by the parameter <paramref name="objectSpaceType" />.</span></span></summary>
        <returns><span data-ttu-id="83770-122"><see cref="T:System.Data.Metadata.Edm.StructuralType" />을 나타내는 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-122">A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span></span> <span data-ttu-id="83770-123">일치하는 형식이 없으면 null이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="83770-123">If there is no matched type, this method returns null.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEntityContainer">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="83770-124">지정된 엔터티 컨테이너 이름과 데이터 모델을 사용하여 <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="83770-124">Returns an <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object by using the specified entity container name and the data model.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEntityContainer">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EntityContainer GetEntityContainer (string name, System.Data.Metadata.Edm.DataSpace dataSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.EntityContainer GetEntityContainer(string name, valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetEntityContainer(System.String,System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::EntityContainer ^ GetEntityContainer(System::String ^ name, System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EntityContainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="83770-125">엔터티 컨테이너의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-125">The name of the entity container.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="83770-126">엔터티 컨테이너를 검색할 개념적 모델입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-126">The conceptual model on which the entity container is searched.</span></span></param>
        <summary><span data-ttu-id="83770-127">지정된 엔터티 컨테이너 이름과 데이터 모델을 사용하여 <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="83770-127">Returns an <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object by using the specified entity container name and the data model.</span></span></summary>
        <returns><span data-ttu-id="83770-128">엔터티 컨테이너가 없으면 이 메서드는 null을 반환하고, 그렇지 않으면 첫 번째 엔터티 컨테이너를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="83770-128">If there is no entity container, this method returns null; otherwise, it returns the first entity container.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEntityContainer">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EntityContainer GetEntityContainer (string name, bool ignoreCase, System.Data.Metadata.Edm.DataSpace dataSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.EntityContainer GetEntityContainer(string name, bool ignoreCase, valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetEntityContainer(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::EntityContainer ^ GetEntityContainer(System::String ^ name, bool ignoreCase, System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EntityContainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="83770-129">엔터티 컨테이너의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-129">The name of the entity container.</span></span></param>
        <param name="ignoreCase">
          <span data-ttu-id="83770-130">대/소문자를 구분하지 않고 검색하려면 <see langword="true" />로 설정하고, 그렇지 않으면 <see langword="false" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="83770-130"><see langword="true" /> to perform the case-insensitive search; otherwise, <see langword="false" />.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="83770-131">엔터티 컨테이너를 검색할 개념적 모델입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-131">The conceptual model on which the entity container is searched.</span></span></param>
        <summary><span data-ttu-id="83770-132">지정된 엔터티 컨테이너 이름과 데이터 모델을 사용하여 <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="83770-132">Returns an <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object by using the specified entity container name and the data model.</span></span></summary>
        <returns><span data-ttu-id="83770-133">엔터티 컨테이너가 없으면 이 메서드는 null을 반환하고, 그렇지 않으면 첫 번째 엔터티 컨테이너를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="83770-133">If there is no entity container, this method returns null; otherwise, it returns the first entity container.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFunctions">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="83770-134">지정된 이름, 네임스페이스 이름 및 데이터 모델을 사용하여 이 항목 컬렉션에서 함수의 모든 오버로드를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="83770-134">Returns all the overloads of the functions by using the specified name, namespace name, and data model.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFunctions">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt; GetFunctions (string name, string namespaceName, System.Data.Metadata.Edm.DataSpace dataSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Metadata.Edm.EdmFunction&gt; GetFunctions(string name, string namespaceName, valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetFunctions(System.String,System.String,System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Metadata::Edm::EdmFunction ^&gt; ^ GetFunctions(System::String ^ name, System::String ^ namespaceName, System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="83770-135">함수의 이름.</span><span class="sxs-lookup"><span data-stu-id="83770-135">The name of the function.</span></span></param>
        <param name="namespaceName"><span data-ttu-id="83770-136">함수의 네임스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-136">The namespace of the function.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="83770-137">함수를 검색할 개념적 모델입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-137">The conceptual model in which the functions are searched.</span></span></param>
        <summary><span data-ttu-id="83770-138">지정된 이름, 네임스페이스 이름 및 데이터 모델을 사용하여 이 항목 컬렉션에서 함수의 모든 오버로드를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="83770-138">Returns all the overloads of the functions by using the specified name, namespace name, and data model.</span></span></summary>
        <returns><span data-ttu-id="83770-139">지정된 네임스페이스와 데이터 모델에서 지정된 이름과 일치하는 모든 함수가 포함된 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 형식의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-139">A collection of type <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> that contains all the functions that match the specified name in a given namespace and a data model.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFunctions">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt; GetFunctions (string name, string namespaceName, System.Data.Metadata.Edm.DataSpace dataSpace, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Metadata.Edm.EdmFunction&gt; GetFunctions(string name, string namespaceName, valuetype System.Data.Metadata.Edm.DataSpace dataSpace, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetFunctions(System.String,System.String,System.Data.Metadata.Edm.DataSpace,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Metadata::Edm::EdmFunction ^&gt; ^ GetFunctions(System::String ^ name, System::String ^ namespaceName, System::Data::Metadata::Edm::DataSpace dataSpace, bool ignoreCase);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="83770-140">함수의 이름.</span><span class="sxs-lookup"><span data-stu-id="83770-140">The name of the function.</span></span></param>
        <param name="namespaceName"><span data-ttu-id="83770-141">함수의 네임스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-141">The namespace of the function.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="83770-142">함수를 검색할 개념적 모델입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-142">The conceptual model in which the functions are searched.</span></span></param>
        <param name="ignoreCase">
          <span data-ttu-id="83770-143">대/소문자를 구분하지 않고 검색하려면 <see langword="true" />로 설정하고, 그렇지 않으면 <see langword="false" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="83770-143"><see langword="true" /> to perform the case-insensitive search; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="83770-144">지정된 이름, 네임스페이스 이름 및 데이터 모델을 사용하여 이 항목 컬렉션에서 함수의 모든 오버로드를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="83770-144">Returns all the overloads of the functions by using the specified name, namespace name, and data model.</span></span></summary>
        <returns><span data-ttu-id="83770-145">지정된 네임스페이스와 데이터 모델에서 지정된 이름과 일치하는 모든 함수가 포함된 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 형식의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-145">A collection of type <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> that contains all the functions that match the specified name in a given namespace and a data model.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetItem&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="83770-146">지정된 ID와 데이터 모델을 사용하여 항목을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="83770-146">Returns an item by using the specified identity and the data model.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetItem&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetItem&lt;T&gt; (string identity, System.Data.Metadata.Edm.DataSpace dataSpace) where T : System.Data.Metadata.Edm.GlobalItem;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetItem&lt;(class System.Data.Metadata.Edm.GlobalItem) T&gt;(string identity, valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetItem``1(System.String,System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::Metadata::Edm::GlobalItem T GetItem(System::String ^ identity, System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.Metadata.Edm.GlobalItem</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="83770-147">메서드에서 반환하는 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-147">The type returned by the method.</span></span></typeparam>
        <param name="identity"><span data-ttu-id="83770-148">항목의 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-148">The identity of the item.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="83770-149">항목을 검색할 개념적 모델입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-149">The conceptual model in which the item is searched.</span></span></param>
        <summary><span data-ttu-id="83770-150">지정된 ID와 데이터 모델을 사용하여 항목을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="83770-150">Returns an item by using the specified identity and the data model.</span></span></summary>
        <returns><span data-ttu-id="83770-151">지정된 데이터 모델에서 지정된 ID와 일치하는 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-151">The item that matches the given identity in the specified data model.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItem&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetItem&lt;T&gt; (string identity, bool ignoreCase, System.Data.Metadata.Edm.DataSpace dataSpace) where T : System.Data.Metadata.Edm.GlobalItem;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetItem&lt;(class System.Data.Metadata.Edm.GlobalItem) T&gt;(string identity, bool ignoreCase, valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetItem``1(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::Metadata::Edm::GlobalItem T GetItem(System::String ^ identity, bool ignoreCase, System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.Metadata.Edm.GlobalItem</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="83770-152">메서드에서 반환하는 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-152">The type returned by the method.</span></span></typeparam>
        <param name="identity"><span data-ttu-id="83770-153">항목의 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-153">The identity of the item.</span></span></param>
        <param name="ignoreCase">
          <span data-ttu-id="83770-154">대/소문자를 구분하지 않고 검색하려면 <see langword="true" />로 설정하고, 그렇지 않으면 <see langword="false" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="83770-154"><see langword="true" /> to perform the case-insensitive search; otherwise, <see langword="false" />.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="83770-155">항목을 검색할 개념적 모델입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-155">The conceptual model on which the item is searched.</span></span></param>
        <summary><span data-ttu-id="83770-156">지정된 ID와 데이터 모델을 사용하여 항목을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="83770-156">Returns an item by using the specified identity and the data model.</span></span></summary>
        <returns><span data-ttu-id="83770-157">지정된 데이터 모델에서 지정된 ID와 일치하는 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-157">The item that matches the given identity in the specified data model.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemCollection">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.ItemCollection GetItemCollection (System.Data.Metadata.Edm.DataSpace dataSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.ItemCollection GetItemCollection(valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetItemCollection(System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::ItemCollection ^ GetItemCollection(System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.ItemCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <param name="dataSpace"><span data-ttu-id="83770-158">항목을 검색할 <see cref="T:System.Data.Metadata.Edm.DataSpace" />입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-158">The <see cref="T:System.Data.Metadata.Edm.DataSpace" /> from which to retrieve items.</span></span></param>
        <summary><span data-ttu-id="83770-159"><see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> 항목을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="83770-159">Gets <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> items.</span></span></summary>
        <returns><span data-ttu-id="83770-160"><see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-160">The <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> items.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItems">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.GlobalItem&gt; GetItems (System.Data.Metadata.Edm.DataSpace dataSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Metadata.Edm.GlobalItem&gt; GetItems(valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetItems(System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Metadata::Edm::GlobalItem ^&gt; ^ GetItems(System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.GlobalItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <param name="dataSpace"><span data-ttu-id="83770-161">항목의 목록이 필요한 개념적 모델입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-161">The conceptual model for which the list of items is needed.</span></span></param>
        <summary><span data-ttu-id="83770-162">지정된 데이터 모델의 모든 항목을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="83770-162">Gets all the items in the specified data model.</span></span></summary>
        <returns><span data-ttu-id="83770-163">지정된 데이터 모델의 모든 항목이 포함된 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 형식의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-163">A collection of type <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> that contains all the items in the specified data model.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItems&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt; GetItems&lt;T&gt; (System.Data.Metadata.Edm.DataSpace dataSpace) where T : System.Data.Metadata.Edm.GlobalItem;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;!!T&gt; GetItems&lt;(class System.Data.Metadata.Edm.GlobalItem) T&gt;(valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetItems``1(System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::Metadata::Edm::GlobalItem System::Collections::ObjectModel::ReadOnlyCollection&lt;T&gt; ^ GetItems(System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.Metadata.Edm.GlobalItem</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="83770-164">메서드에서 반환하는 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-164">The type returned by the method.</span></span></typeparam>
        <param name="dataSpace"><span data-ttu-id="83770-165">항목의 목록이 필요한 개념적 모델입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-165">The conceptual model for which the list of items is needed.</span></span></param>
        <summary><span data-ttu-id="83770-166">지정된 데이터 모델의 모든 항목을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="83770-166">Gets all the items in the specified data model.</span></span></summary>
        <returns><span data-ttu-id="83770-167">지정된 데이터 모델의 모든 항목이 포함된 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 형식의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-167">A collection of type <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> that contains all the items in the specified data model.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetObjectSpaceType">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="83770-168"><paramref name="edmSpaceType" /> 매개 변수에서 제공하는 형식과 일치하는 개체 공간 형식을 나타내는 <see cref="T:System.Data.Metadata.Edm.StructuralType" /> 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="83770-168">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the object space type that matches the type supplied by the parameter <paramref name="edmSpaceType" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetObjectSpaceType">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EnumType GetObjectSpaceType (System.Data.Metadata.Edm.EnumType edmSpaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.EnumType GetObjectSpaceType(class System.Data.Metadata.Edm.EnumType edmSpaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetObjectSpaceType(System.Data.Metadata.Edm.EnumType)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObjectSpaceType (edmSpaceType As EnumType) As EnumType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::EnumType ^ GetObjectSpaceType(System::Data::Metadata::Edm::EnumType ^ edmSpaceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EnumType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="edmSpaceType" Type="System.Data.Metadata.Edm.EnumType" />
      </Parameters>
      <Docs>
        <param name="edmSpaceType"><span data-ttu-id="83770-169"><see cref="T:System.Data.Metadata.Edm.EnumType" />을 나타내는 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-169">A <see cref="T:System.Data.Metadata.Edm.EnumType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span></span></param>
        <summary><span data-ttu-id="83770-170"><paramref name="edmSpaceType" /> 매개 변수에서 제공하는 형식과 일치하는 개체 공간 형식을 나타내는 <see cref="T:System.Data.Metadata.Edm.StructuralType" /> 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="83770-170">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the object space type that matches the type supplied by the parameter <paramref name="edmSpaceType" />.</span></span></summary>
        <returns><span data-ttu-id="83770-171">개체 공간 형식을 나타내는 <see cref="T:System.Data.Metadata.Edm.StructuralType" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-171">A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the Object space type.</span></span> <span data-ttu-id="83770-172">일치하는 형식이 없으면 null이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="83770-172">If there is no matched type, this method returns null.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectSpaceType">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.StructuralType GetObjectSpaceType (System.Data.Metadata.Edm.StructuralType edmSpaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.StructuralType GetObjectSpaceType(class System.Data.Metadata.Edm.StructuralType edmSpaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetObjectSpaceType(System.Data.Metadata.Edm.StructuralType)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObjectSpaceType (edmSpaceType As StructuralType) As StructuralType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::StructuralType ^ GetObjectSpaceType(System::Data::Metadata::Edm::StructuralType ^ edmSpaceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.StructuralType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="edmSpaceType" Type="System.Data.Metadata.Edm.StructuralType" />
      </Parameters>
      <Docs>
        <param name="edmSpaceType"><span data-ttu-id="83770-173"><see cref="T:System.Data.Metadata.Edm.StructuralType" />을 나타내는 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-173">A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span></span></param>
        <summary><span data-ttu-id="83770-174"><paramref name="edmSpaceType" /> 매개 변수에서 제공하는 형식과 일치하는 개체 공간 형식을 나타내는 <see cref="T:System.Data.Metadata.Edm.StructuralType" /> 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="83770-174">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the object space type that matches the type supplied by the parameter <paramref name="edmSpaceType" />.</span></span></summary>
        <returns><span data-ttu-id="83770-175">개체 공간 형식을 나타내는 <see cref="T:System.Data.Metadata.Edm.StructuralType" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-175">A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the Object space type.</span></span> <span data-ttu-id="83770-176">일치하는 형식이 없으면 null이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="83770-176">If there is no matched type, this method returns null.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrimitiveTypes">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.PrimitiveType&gt; GetPrimitiveTypes (System.Data.Metadata.Edm.DataSpace dataSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Metadata.Edm.PrimitiveType&gt; GetPrimitiveTypes(valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetPrimitiveTypes(System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Metadata::Edm::PrimitiveType ^&gt; ^ GetPrimitiveTypes(System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.PrimitiveType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <param name="dataSpace"><span data-ttu-id="83770-177">기본 형식 목록이 필요한 데이터 모델입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-177">The data model for which you need the list of primitive types.</span></span></param>
        <summary><span data-ttu-id="83770-178">지정된 데이터 모델의 기본 형식 목록을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="83770-178">Returns the list of primitive types in the specified data model.</span></span></summary>
        <returns><span data-ttu-id="83770-179">지정된 데이터 모델의 모든 기본 형식이 포함된 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 형식의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-179">A collection of type <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> that contains all the primitive types in the specified data model.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRelevantMembersForUpdate">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmMember&gt; GetRelevantMembersForUpdate (System.Data.Metadata.Edm.EntitySetBase entitySet, System.Data.Metadata.Edm.EntityTypeBase entityType, bool partialUpdateSupported);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Metadata.Edm.EdmMember&gt; GetRelevantMembersForUpdate(class System.Data.Metadata.Edm.EntitySetBase entitySet, class System.Data.Metadata.Edm.EntityTypeBase entityType, bool partialUpdateSupported) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetRelevantMembersForUpdate(System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.EntityTypeBase,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelevantMembersForUpdate (entitySet As EntitySetBase, entityType As EntityTypeBase, partialUpdateSupported As Boolean) As ReadOnlyCollection(Of EdmMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Metadata::Edm::EdmMember ^&gt; ^ GetRelevantMembersForUpdate(System::Data::Metadata::Edm::EntitySetBase ^ entitySet, System::Data::Metadata::Edm::EntityTypeBase ^ entityType, bool partialUpdateSupported);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySetBase" />
        <Parameter Name="entityType" Type="System.Data.Metadata.Edm.EntityTypeBase" />
        <Parameter Name="partialUpdateSupported" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="entitySet"><span data-ttu-id="83770-180">C-공간에 속하는 <see cref="T:System.Data.Metadata.Edm.EntitySet" />입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-180">An <see cref="T:System.Data.Metadata.Edm.EntitySet" /> belonging to the C-Space.</span></span></param>
        <param name="entityType"><span data-ttu-id="83770-181">지정된 <see cref="T:System.Data.Metadata.Edm.EntityType" />에 참여하는 <see cref="T:System.Data.Metadata.Edm.EntitySet" />입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-181">An <see cref="T:System.Data.Metadata.Edm.EntityType" /> that participates in the given <see cref="T:System.Data.Metadata.Edm.EntitySet" />.</span></span></param>
        <param name="partialUpdateSupported">
          <span data-ttu-id="83770-182">엔터티가 부분적으로 업데이트될 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-182"><see langword="true" /> if entities may be updated partially; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="83770-183">엔터티를 수정할 때 필요한 원래 값에 대한 지정된 <see cref="T:System.Data.Metadata.Edm.EntitySet" />/<see cref="T:System.Data.Metadata.Edm.EntityType" />의 멤버를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="83770-183">Returns members of a given <see cref="T:System.Data.Metadata.Edm.EntitySet" />/<see cref="T:System.Data.Metadata.Edm.EntityType" /> for which original values are needed when modifying an entity.</span></span></summary>
        <returns><span data-ttu-id="83770-184">원래 값이 필요한 <see cref="T:System.Data.Metadata.Edm.EdmMember" />입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-184">The <see cref="T:System.Data.Metadata.Edm.EdmMember" />s for which original value is required.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRequiredOriginalValueMembers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Data.Metadata.Edm.EdmMember&gt; GetRequiredOriginalValueMembers (System.Data.Metadata.Edm.EntitySetBase entitySet, System.Data.Metadata.Edm.EntityTypeBase entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Metadata.Edm.EdmMember&gt; GetRequiredOriginalValueMembers(class System.Data.Metadata.Edm.EntitySetBase entitySet, class System.Data.Metadata.Edm.EntityTypeBase entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetRequiredOriginalValueMembers(System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.EntityTypeBase)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRequiredOriginalValueMembers (entitySet As EntitySetBase, entityType As EntityTypeBase) As IEnumerable(Of EdmMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Data::Metadata::Edm::EdmMember ^&gt; ^ GetRequiredOriginalValueMembers(System::Data::Metadata::Edm::EntitySetBase ^ entitySet, System::Data::Metadata::Edm::EntityTypeBase ^ entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use MetadataWorkspace.GetRelevantMembersForUpdate(EntitySetBase, EntityTypeBase, bool) instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Data.Metadata.Edm.EdmMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySetBase" />
        <Parameter Name="entityType" Type="System.Data.Metadata.Edm.EntityTypeBase" />
      </Parameters>
      <Docs>
        <param name="entitySet"><span data-ttu-id="83770-185">원래 값을 검색할 엔터티 집합입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-185">The entity set from which to retrieve original values.</span></span></param>
        <param name="entityType"><span data-ttu-id="83770-186">원래 값을 검색할 엔터티 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-186">The entity type of which to retrieve original values.</span></span></param>
        <summary><span data-ttu-id="83770-187">엔터티 집합 및 엔터티 형식에서 원래 값 멤버를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="83770-187">Gets original value members from an entity set and entity type.</span></span></summary>
        <returns><span data-ttu-id="83770-188">엔터티 집합 및 엔터티 형식의 원래 값 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-188">The original value members from an entity set and entity type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetType">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="83770-189">지정된 형식 이름, 네임스페이스 이름 및 데이터 모델을 사용하여 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 개체를 통해 정의된 형식 메타데이터를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="83770-189">Returns the type metadata that is described via an <see cref="T:System.Data.Metadata.Edm.EdmType" /> object by using the specified type name, the namespace name, and the data model.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EdmType GetType (string name, string namespaceName, System.Data.Metadata.Edm.DataSpace dataSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.EdmType GetType(string name, string namespaceName, valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetType(System.String,System.String,System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::EdmType ^ GetType(System::String ^ name, System::String ^ namespaceName, System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EdmType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="83770-190">형식의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-190">The name of the type.</span></span></param>
        <param name="namespaceName"><span data-ttu-id="83770-191">형식의 네임스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-191">The namespace of the type.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="83770-192">형식을 검색할 개념적 모델입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-192">The conceptual model on which the type is searched.</span></span></param>
        <summary><span data-ttu-id="83770-193">지정된 형식 이름, 네임스페이스 이름 및 데이터 모델을 사용하여 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="83770-193">Returns an <see cref="T:System.Data.Metadata.Edm.EdmType" /> object by using the specified type name, namespace name, and data model.</span></span></summary>
        <returns><span data-ttu-id="83770-194">지정된 데이터 모델에서 지정된 형식 이름 및 네임스페이스 이름과 일치하는 형식을 나타내는 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-194">An <see cref="T:System.Data.Metadata.Edm.EdmType" /> object that represents the type that matches the given type name and the namespace name in the specified data model.</span></span> <span data-ttu-id="83770-195">일치하는 형식이 없으면 null이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="83770-195">If there is no matched type, this method returns null.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EdmType GetType (string name, string namespaceName, bool ignoreCase, System.Data.Metadata.Edm.DataSpace dataSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.EdmType GetType(string name, string namespaceName, bool ignoreCase, valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetType(System.String,System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::EdmType ^ GetType(System::String ^ name, System::String ^ namespaceName, bool ignoreCase, System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EdmType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="83770-196">형식의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-196">The name of the type.</span></span></param>
        <param name="namespaceName"><span data-ttu-id="83770-197">형식의 네임스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-197">The namespace of the type.</span></span></param>
        <param name="ignoreCase">
          <span data-ttu-id="83770-198">대/소문자를 구분하지 않고 검색하려면 <see langword="true" />로 설정하고, 그렇지 않으면 <see langword="false" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="83770-198"><see langword="true" /> to perform the case-insensitive search; otherwise, <see langword="false" />.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="83770-199">형식을 검색할 개념적 모델입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-199">The conceptual model on which the type is searched.</span></span></param>
        <summary><span data-ttu-id="83770-200">지정된 형식 이름, 네임스페이스 이름 및 데이터 모델을 사용하여 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="83770-200">Returns an <see cref="T:System.Data.Metadata.Edm.EdmType" /> object by using the specified type name, namespace name, and data model.</span></span></summary>
        <returns><span data-ttu-id="83770-201"><see cref="T:System.Data.Metadata.Edm.EdmType" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-201">An <see cref="T:System.Data.Metadata.Edm.EdmType" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadFromAssembly">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="83770-202">어셈블리에서 메타데이터를 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="83770-202">Loads metadata from an assembly.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadFromAssembly">
      <MemberSignature Language="C#" Value="public void LoadFromAssembly (System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadFromAssembly(class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.LoadFromAssembly(System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadFromAssembly(System::Reflection::Assembly ^ assembly);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="assembly"><span data-ttu-id="83770-203">메타데이터를 로드할 어셈블리입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-203">The assembly from which the metadata will be loaded.</span></span></param>
        <summary><span data-ttu-id="83770-204">지정된 어셈블리에서 메타데이터를 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="83770-204">Loads metadata from the given assembly.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadFromAssembly">
      <MemberSignature Language="C#" Value="public void LoadFromAssembly (System.Reflection.Assembly assembly, Action&lt;string&gt; logLoadMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadFromAssembly(class System.Reflection.Assembly assembly, class System.Action`1&lt;string&gt; logLoadMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.LoadFromAssembly(System.Reflection.Assembly,System.Action{System.String})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadFromAssembly(System::Reflection::Assembly ^ assembly, Action&lt;System::String ^&gt; ^ logLoadMessage);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
        <Parameter Name="logLoadMessage" Type="System.Action&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="assembly"><span data-ttu-id="83770-205">메타데이터를 로드할 어셈블리입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-205">The assembly from which the metadata will be loaded.</span></span></param>
        <param name="logLoadMessage"><span data-ttu-id="83770-206">로드 메시지를 로깅하는 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-206">The delegate for logging the load messages.</span></span></param>
        <summary><span data-ttu-id="83770-207">지정된 어셈블리에서 메타데이터를 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="83770-207">Loads metadata from the given assembly.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumEdmVersionSupported">
      <MemberSignature Language="C#" Value="public static readonly double MaximumEdmVersionSupported;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly float64 MaximumEdmVersionSupported" />
      <MemberSignature Language="DocId" Value="F:System.Data.Metadata.Edm.MetadataWorkspace.MaximumEdmVersionSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaximumEdmVersionSupported As Double " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly double MaximumEdmVersionSupported;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="83770-208">Entity Framework 런타임에서 지원하는 EDM(엔터티 데이터 모델)의 최대 버전을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="83770-208">Represents the maximum Entity Data Model (EDM) version supported by the Entity Framework runtime.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterItemCollection">
      <MemberSignature Language="C#" Value="public void RegisterItemCollection (System.Data.Metadata.Edm.ItemCollection collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterItemCollection(class System.Data.Metadata.Edm.ItemCollection collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.RegisterItemCollection(System.Data.Metadata.Edm.ItemCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterItemCollection (collection As ItemCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterItemCollection(System::Data::Metadata::Edm::ItemCollection ^ collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Metadata.Edm.ItemCollection" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="83770-209">채워야 할 출력 매개 변수 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-209">The output parameter collection that needs to be filled up.</span></span></param>
        <summary><span data-ttu-id="83770-210">연결된 각 데이터 모델에 항목 컬렉션을 등록합니다.</span><span class="sxs-lookup"><span data-stu-id="83770-210">Registers the item collection with each associated data model.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryGetEdmSpaceType">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="83770-211"><paramref name="edmSpaceType" />에서 제공하는 형식과 일치하는 <see cref="T:System.Data.Metadata.Edm.StructuralType" />을 나타내는 매개 변수 <paramref name="objectSpaceType" />를 통해 <see cref="T:System.Data.Metadata.Edm.EnumType" /> 또는 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="83770-211">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> or <see cref="T:System.Data.Metadata.Edm.EnumType" /> object via the out parameter <paramref name="edmSpaceType" /> that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" /> that matches the type supplied by the parameter <paramref name="objectSpaceType" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryGetEdmSpaceType">
      <MemberSignature Language="C#" Value="public bool TryGetEdmSpaceType (System.Data.Metadata.Edm.EnumType objectSpaceType, out System.Data.Metadata.Edm.EnumType edmSpaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetEdmSpaceType(class System.Data.Metadata.Edm.EnumType objectSpaceType, [out] class System.Data.Metadata.Edm.EnumType&amp; edmSpaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetEdmSpaceType(System.Data.Metadata.Edm.EnumType,System.Data.Metadata.Edm.EnumType@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetEdmSpaceType (objectSpaceType As EnumType, ByRef edmSpaceType As EnumType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetEdmSpaceType(System::Data::Metadata::Edm::EnumType ^ objectSpaceType, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::EnumType ^ % edmSpaceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectSpaceType" Type="System.Data.Metadata.Edm.EnumType" />
        <Parameter Name="edmSpaceType" Type="System.Data.Metadata.Edm.EnumType&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="objectSpaceType"><span data-ttu-id="83770-212">개체 공간 형식을 나타내는 <see cref="T:System.Data.Metadata.Edm.EnumType" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-212">A <see cref="T:System.Data.Metadata.Edm.EnumType" /> object that represents the object space type.</span></span></param>
        <param name="edmSpaceType"><span data-ttu-id="83770-213">이 메서드가 반환될 때 <see cref="T:System.Data.Metadata.Edm.EnumType" />을 나타내는 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 개체가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="83770-213">When this method returns, contains a <see cref="T:System.Data.Metadata.Edm.EnumType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span></span> <span data-ttu-id="83770-214">이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</span><span class="sxs-lookup"><span data-stu-id="83770-214">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="83770-215"><paramref name="edmSpaceType" /> 매개 변수에서 제공하는 형식과 일치하는 <see cref="T:System.Data.Metadata.Edm.EnumType" />을 나타내는 out 매개 변수 <paramref name="objectSpaceType" />을 통해 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="83770-215">Returns a <see cref="T:System.Data.Metadata.Edm.EnumType" /> object via the out parameter <paramref name="edmSpaceType" /> that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" /> that matches the type supplied by the parameter <paramref name="objectSpaceType" />.</span></span></summary>
        <returns>
          <span data-ttu-id="83770-216">성공이면 <see langword="true" />이고, 실패면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-216"><see langword="true" /> on success, <see langword="false" /> on failure.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetEdmSpaceType">
      <MemberSignature Language="C#" Value="public bool TryGetEdmSpaceType (System.Data.Metadata.Edm.StructuralType objectSpaceType, out System.Data.Metadata.Edm.StructuralType edmSpaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetEdmSpaceType(class System.Data.Metadata.Edm.StructuralType objectSpaceType, [out] class System.Data.Metadata.Edm.StructuralType&amp; edmSpaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetEdmSpaceType(System.Data.Metadata.Edm.StructuralType,System.Data.Metadata.Edm.StructuralType@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetEdmSpaceType (objectSpaceType As StructuralType, ByRef edmSpaceType As StructuralType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetEdmSpaceType(System::Data::Metadata::Edm::StructuralType ^ objectSpaceType, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::StructuralType ^ % edmSpaceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectSpaceType" Type="System.Data.Metadata.Edm.StructuralType" />
        <Parameter Name="edmSpaceType" Type="System.Data.Metadata.Edm.StructuralType&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="objectSpaceType"><span data-ttu-id="83770-217">개체 공간 형식을 나타내는 <see cref="T:System.Data.Metadata.Edm.StructuralType" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-217">A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the object space type.</span></span></param>
        <param name="edmSpaceType"><span data-ttu-id="83770-218">이 메서드가 반환될 때 <see cref="T:System.Data.Metadata.Edm.StructuralType" />을 나타내는 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 개체가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="83770-218">When this method returns, contains a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span></span> <span data-ttu-id="83770-219">이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</span><span class="sxs-lookup"><span data-stu-id="83770-219">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="83770-220"><paramref name="edmSpaceType" /> 매개 변수에서 제공하는 형식과 일치하는 <see cref="T:System.Data.Metadata.Edm.StructuralType" />을 나타내는 out 매개 변수 <paramref name="objectSpaceType" />을 통해 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="83770-220">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object via the out parameter <paramref name="edmSpaceType" /> that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" /> that matches the type supplied by the parameter <paramref name="objectSpaceType" />.</span></span></summary>
        <returns>
          <span data-ttu-id="83770-221">검색 조건과 일치하는 형식이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-221"><see langword="true" /> if there is a type that matches the search criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryGetEntityContainer">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="83770-222">지정된 엔터티 컨테이너 이름과 데이터 모델을 사용하여 <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="83770-222">Returns an <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object by using the specified entity container name and the data model.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryGetEntityContainer">
      <MemberSignature Language="C#" Value="public bool TryGetEntityContainer (string name, System.Data.Metadata.Edm.DataSpace dataSpace, out System.Data.Metadata.Edm.EntityContainer entityContainer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetEntityContainer(string name, valuetype System.Data.Metadata.Edm.DataSpace dataSpace, [out] class System.Data.Metadata.Edm.EntityContainer&amp; entityContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetEntityContainer(System.String,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EntityContainer@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetEntityContainer(System::String ^ name, System::Data::Metadata::Edm::DataSpace dataSpace, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::EntityContainer ^ % entityContainer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
        <Parameter Name="entityContainer" Type="System.Data.Metadata.Edm.EntityContainer&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="83770-223">엔터티 컨테이너의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-223">The name of the entity container.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="83770-224">엔터티 컨테이너를 검색할 개념적 모델입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-224">The conceptual model on which the entity container is searched.</span></span></param>
        <param name="entityContainer"><span data-ttu-id="83770-225">이 메서드의 반환 값에는 <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> 개체가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="83770-225">When this method returns, contains an <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object.</span></span> <span data-ttu-id="83770-226">엔터티 컨테이너가 없으면 이 출력 매개 변수에 null이 포함되고, 그렇지 않으면 첫 번째 엔터티 컨테이너가 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="83770-226">If there is no entity container, this output parameter contains null; otherwise, it returns the first entity container.</span></span> <span data-ttu-id="83770-227">이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</span><span class="sxs-lookup"><span data-stu-id="83770-227">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="83770-228">지정된 엔터티 컨테이너 이름과 데이터 모델을 사용하여 <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="83770-228">Returns an <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object by using the specified entity container name and the data model.</span></span></summary>
        <returns>
          <span data-ttu-id="83770-229">검색 조건과 일치하는 엔터티 컨테이너가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-229"><see langword="true" /> if there is an entity container that matches the search criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetEntityContainer">
      <MemberSignature Language="C#" Value="public bool TryGetEntityContainer (string name, bool ignoreCase, System.Data.Metadata.Edm.DataSpace dataSpace, out System.Data.Metadata.Edm.EntityContainer entityContainer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetEntityContainer(string name, bool ignoreCase, valuetype System.Data.Metadata.Edm.DataSpace dataSpace, [out] class System.Data.Metadata.Edm.EntityContainer&amp; entityContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetEntityContainer(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EntityContainer@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetEntityContainer(System::String ^ name, bool ignoreCase, System::Data::Metadata::Edm::DataSpace dataSpace, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::EntityContainer ^ % entityContainer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
        <Parameter Name="entityContainer" Type="System.Data.Metadata.Edm.EntityContainer&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="83770-230">엔터티 컨테이너의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-230">The name of the entity container.</span></span></param>
        <param name="ignoreCase">
          <span data-ttu-id="83770-231">대/소문자를 구분하지 않고 검색하려면 <see langword="true" />로 설정하고, 그렇지 않으면 <see langword="false" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="83770-231"><see langword="true" /> to perform the case-insensitive search; otherwise, <see langword="false" />.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="83770-232">엔터티 컨테이너를 검색할 개념적 모델입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-232">The conceptual model on which the entity container is searched.</span></span></param>
        <param name="entityContainer"><span data-ttu-id="83770-233">이 메서드의 반환 값에는 <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> 개체가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="83770-233">When this method returns, contains an <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object.</span></span> <span data-ttu-id="83770-234">엔터티 컨테이너가 없으면 이 출력 매개 변수에 null이 포함되고, 그렇지 않으면 첫 번째 엔터티 컨테이너가 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="83770-234">If there is no entity container, this output parameter contains null; otherwise, it returns the first entity container.</span></span> <span data-ttu-id="83770-235">이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</span><span class="sxs-lookup"><span data-stu-id="83770-235">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="83770-236">지정된 엔터티 컨테이너 이름과 데이터 모델을 사용하여 <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="83770-236">Returns an <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object by using the specified entity container name and the data model.</span></span></summary>
        <returns>
          <span data-ttu-id="83770-237">검색 조건과 일치하는 엔터티 컨테이너가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-237"><see langword="true" /> if there is an entity container that matches the search criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryGetItem&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="83770-238">지정된 ID와 데이터 모델을 사용하여 항목을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="83770-238">Returns an item by using the specified identity and the data model.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryGetItem&lt;T&gt;">
      <MemberSignature Language="C#" Value="public bool TryGetItem&lt;T&gt; (string identity, System.Data.Metadata.Edm.DataSpace space, out T item) where T : System.Data.Metadata.Edm.GlobalItem;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetItem&lt;(class System.Data.Metadata.Edm.GlobalItem) T&gt;(string identity, valuetype System.Data.Metadata.Edm.DataSpace space, [out] !!T&amp; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetItem``1(System.String,System.Data.Metadata.Edm.DataSpace,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetItem(Of T As GlobalItem) (identity As String, space As DataSpace, ByRef item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::Metadata::Edm::GlobalItem bool TryGetItem(System::String ^ identity, System::Data::Metadata::Edm::DataSpace space, [Runtime::InteropServices::Out] T % item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.Metadata.Edm.GlobalItem</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="space" Type="System.Data.Metadata.Edm.DataSpace" />
        <Parameter Name="item" Type="T&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="83770-239">메서드에서 반환하는 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-239">The type returned by the method.</span></span></typeparam>
        <param name="identity"><span data-ttu-id="83770-240">항목을 검색할 개념적 모델입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-240">The conceptual model on which the item is searched.</span></span></param>
        <param name="space"><span data-ttu-id="83770-241">항목을 검색할 개념적 모델입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-241">The conceptual model on which the item is searched.</span></span></param>
        <param name="item"><span data-ttu-id="83770-242">이 메서드의 반환 값에는 <see cref="T:System.Data.Metadata.Edm.GlobalIem" /> 개체가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="83770-242">When this method returns, contains a <see cref="T:System.Data.Metadata.Edm.GlobalIem" /> object.</span></span> <span data-ttu-id="83770-243">이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</span><span class="sxs-lookup"><span data-stu-id="83770-243">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="83770-244">지정된 ID와 데이터 모델을 사용하여 항목을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="83770-244">Returns an item by using the specified identity and the data model.</span></span></summary>
        <returns>
          <span data-ttu-id="83770-245">검색 조건과 일치하는 항목이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-245"><see langword="true" /> if there is an item that matches the search criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetItem&lt;T&gt;">
      <MemberSignature Language="C#" Value="public bool TryGetItem&lt;T&gt; (string identity, bool ignoreCase, System.Data.Metadata.Edm.DataSpace dataSpace, out T item) where T : System.Data.Metadata.Edm.GlobalItem;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetItem&lt;(class System.Data.Metadata.Edm.GlobalItem) T&gt;(string identity, bool ignoreCase, valuetype System.Data.Metadata.Edm.DataSpace dataSpace, [out] !!T&amp; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetItem``1(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace,``0@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::Metadata::Edm::GlobalItem bool TryGetItem(System::String ^ identity, bool ignoreCase, System::Data::Metadata::Edm::DataSpace dataSpace, [Runtime::InteropServices::Out] T % item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.Metadata.Edm.GlobalItem</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
        <Parameter Name="item" Type="T&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="83770-246">메서드에서 반환하는 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-246">The type returned by the method.</span></span></typeparam>
        <param name="identity"><span data-ttu-id="83770-247">항목을 검색할 개념적 모델입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-247">The conceptual model on which the item is searched.</span></span></param>
        <param name="ignoreCase">
          <span data-ttu-id="83770-248">대/소문자를 구분하지 않고 검색하려면 <see langword="true" />로 설정하고, 그렇지 않으면 <see langword="false" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="83770-248"><see langword="true" /> to perform the case-insensitive search; otherwise, <see langword="false" />.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="83770-249">항목을 검색할 개념적 모델입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-249">The conceptual model on which the item is searched.</span></span></param>
        <param name="item"><span data-ttu-id="83770-250">이 메서드의 반환 값에는 <see cref="T:System.Data.Metadata.Edm.GlobalIem" /> 개체가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="83770-250">When this method returns, contains a <see cref="T:System.Data.Metadata.Edm.GlobalIem" /> object.</span></span> <span data-ttu-id="83770-251">이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</span><span class="sxs-lookup"><span data-stu-id="83770-251">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="83770-252">지정된 ID와 데이터 모델을 사용하여 항목을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="83770-252">Returns an item by using the specified identity and the data model.</span></span></summary>
        <returns>
          <span data-ttu-id="83770-253">검색 조건과 일치하는 항목이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-253"><see langword="true" /> if there is an item that matches the search criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetItemCollection">
      <MemberSignature Language="C#" Value="public bool TryGetItemCollection (System.Data.Metadata.Edm.DataSpace dataSpace, out System.Data.Metadata.Edm.ItemCollection collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetItemCollection(valuetype System.Data.Metadata.Edm.DataSpace dataSpace, [out] class System.Data.Metadata.Edm.ItemCollection&amp; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetItemCollection(System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.ItemCollection@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetItemCollection(System::Data::Metadata::Edm::DataSpace dataSpace, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::ItemCollection ^ % collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
        <Parameter Name="collection" Type="System.Data.Metadata.Edm.ItemCollection&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="dataSpace"><span data-ttu-id="83770-254"><see cref="T:System.Data.Metadata.Edm.DataSpace" /> 검색을 시도할 <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" />입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-254">The <see cref="T:System.Data.Metadata.Edm.DataSpace" /> from which to attempt retrieval of <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" />.</span></span></param>
        <param name="collection"><span data-ttu-id="83770-255">이 메서드는 반환될 때 항목 컬렉션을 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="83770-255">When this method returns, contains the item collection.</span></span> <span data-ttu-id="83770-256">이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</span><span class="sxs-lookup"><span data-stu-id="83770-256">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="83770-257"><see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> 검색을 테스트합니다.</span><span class="sxs-lookup"><span data-stu-id="83770-257">Tests the retrieval of <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" />.</span></span></summary>
        <returns>
          <span data-ttu-id="83770-258">검색에 성공했으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-258"><see langword="true" /> if the retrieval was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryGetObjectSpaceType">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="83770-259">매개 변수 <paramref name="objectSpaceType" />에서 제공하는 <see cref="T:System.Data.Metadata.Edm.StructuralType" />과 일치하는 형식을 나타내는 매개 변수 <paramref name="edmSpaceType" />를 통해 <see cref="T:System.Data.Metadata.Edm.EnumType" /> 또는 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="83770-259">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> or <see cref="T:System.Data.Metadata.Edm.EnumType" /> object via the out parameter <paramref name="objectSpaceType" /> that represents the type that matches the <see cref="T:System.Data.Metadata.Edm.EdmType" /> supplied by the parameter <paramref name="edmSpaceType" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryGetObjectSpaceType">
      <MemberSignature Language="C#" Value="public bool TryGetObjectSpaceType (System.Data.Metadata.Edm.EnumType edmSpaceType, out System.Data.Metadata.Edm.EnumType objectSpaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetObjectSpaceType(class System.Data.Metadata.Edm.EnumType edmSpaceType, [out] class System.Data.Metadata.Edm.EnumType&amp; objectSpaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetObjectSpaceType(System.Data.Metadata.Edm.EnumType,System.Data.Metadata.Edm.EnumType@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetObjectSpaceType (edmSpaceType As EnumType, ByRef objectSpaceType As EnumType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetObjectSpaceType(System::Data::Metadata::Edm::EnumType ^ edmSpaceType, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::EnumType ^ % objectSpaceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="edmSpaceType" Type="System.Data.Metadata.Edm.EnumType" />
        <Parameter Name="objectSpaceType" Type="System.Data.Metadata.Edm.EnumType&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="edmSpaceType"><span data-ttu-id="83770-260"><see cref="T:System.Data.Metadata.Edm.EnumType" />을 나타내는 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-260">A <see cref="T:System.Data.Metadata.Edm.EnumType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span></span></param>
        <param name="objectSpaceType"><span data-ttu-id="83770-261">이 메서드가 반환될 때 개체 공간 형식을 나타내는 <see cref="T:System.Data.Metadata.Edm.EnumType" /> 개체가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="83770-261">When this method returns, contains a <see cref="T:System.Data.Metadata.Edm.EnumType" /> object that represents the Object space type.</span></span> <span data-ttu-id="83770-262">이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</span><span class="sxs-lookup"><span data-stu-id="83770-262">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="83770-263"><paramref name="objectSpaceType" /> 매개 변수에서 제공하는 <see cref="T:System.Data.Metadata.Edm.EnumType" />과 일치하는 형식을 나타내는 out 매개 변수 <paramref name="edmSpaceType" />을 통해 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="83770-263">Returns a <see cref="T:System.Data.Metadata.Edm.EnumType" /> object via the out parameter <paramref name="objectSpaceType" /> that represents the type that matches the <see cref="T:System.Data.Metadata.Edm.EdmType" /> supplied by the parameter <paramref name="edmSpaceType" />.</span></span></summary>
        <returns>
          <span data-ttu-id="83770-264">검색 조건과 일치하는 형식이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-264"><see langword="true" /> if there is a type that matches the search criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetObjectSpaceType">
      <MemberSignature Language="C#" Value="public bool TryGetObjectSpaceType (System.Data.Metadata.Edm.StructuralType edmSpaceType, out System.Data.Metadata.Edm.StructuralType objectSpaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetObjectSpaceType(class System.Data.Metadata.Edm.StructuralType edmSpaceType, [out] class System.Data.Metadata.Edm.StructuralType&amp; objectSpaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetObjectSpaceType(System.Data.Metadata.Edm.StructuralType,System.Data.Metadata.Edm.StructuralType@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetObjectSpaceType (edmSpaceType As StructuralType, ByRef objectSpaceType As StructuralType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetObjectSpaceType(System::Data::Metadata::Edm::StructuralType ^ edmSpaceType, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::StructuralType ^ % objectSpaceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="edmSpaceType" Type="System.Data.Metadata.Edm.StructuralType" />
        <Parameter Name="objectSpaceType" Type="System.Data.Metadata.Edm.StructuralType&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="edmSpaceType"><span data-ttu-id="83770-265"><see cref="T:System.Data.Metadata.Edm.StructuralType" />을 나타내는 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-265">A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span></span></param>
        <param name="objectSpaceType"><span data-ttu-id="83770-266">이 메서드가 반환될 때 개체 공간 형식을 나타내는 <see cref="T:System.Data.Metadata.Edm.StructuralType" /> 개체가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="83770-266">When this method returns, contains a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the Object space type.</span></span> <span data-ttu-id="83770-267">이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</span><span class="sxs-lookup"><span data-stu-id="83770-267">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="83770-268"><paramref name="objectSpaceType" /> 매개 변수에서 제공하는 <see cref="T:System.Data.Metadata.Edm.StructuralType" />과 일치하는 형식을 나타내는 out 매개 변수 <paramref name="edmSpaceType" />을 통해 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="83770-268">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object via the out parameter <paramref name="objectSpaceType" /> that represents the type that matches the <see cref="T:System.Data.Metadata.Edm.EdmType" /> supplied by the parameter <paramref name="edmSpaceType" />.</span></span></summary>
        <returns>
          <span data-ttu-id="83770-269">검색 조건과 일치하는 형식이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-269"><see langword="true" /> if there is a type that matches the search criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryGetType">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="83770-270">지정된 형식 이름, 네임스페이스 이름 및 데이터 모델을 사용하여 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="83770-270">Returns an <see cref="T:System.Data.Metadata.Edm.EdmType" /> object by using the specified type name, namespace name, and data model.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryGetType">
      <MemberSignature Language="C#" Value="public bool TryGetType (string name, string namespaceName, System.Data.Metadata.Edm.DataSpace dataSpace, out System.Data.Metadata.Edm.EdmType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetType(string name, string namespaceName, valuetype System.Data.Metadata.Edm.DataSpace dataSpace, [out] class System.Data.Metadata.Edm.EdmType&amp; type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetType(System.String,System.String,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EdmType@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetType(System::String ^ name, System::String ^ namespaceName, System::Data::Metadata::Edm::DataSpace dataSpace, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::EdmType ^ % type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
        <Parameter Name="type" Type="System.Data.Metadata.Edm.EdmType&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="83770-271">형식의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-271">The name of the type.</span></span></param>
        <param name="namespaceName"><span data-ttu-id="83770-272">형식의 네임스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-272">The namespace of the type.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="83770-273">형식을 검색할 개념적 모델입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-273">The conceptual model on which the type is searched.</span></span></param>
        <param name="type"><span data-ttu-id="83770-274">이 메서드의 반환 값에는 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 개체가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="83770-274">When this method returns, contains an <see cref="T:System.Data.Metadata.Edm.EdmType" /> object.</span></span> <span data-ttu-id="83770-275">이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</span><span class="sxs-lookup"><span data-stu-id="83770-275">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="83770-276">지정된 형식 이름, 네임스페이스 이름 및 데이터 모델을 사용하여 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="83770-276">Returns an <see cref="T:System.Data.Metadata.Edm.EdmType" /> object by using the specified type name, namespace name, and data model.</span></span></summary>
        <returns>
          <span data-ttu-id="83770-277">검색 조건과 일치하는 형식이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-277"><see langword="true" /> if there is a type that matches the search criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetType">
      <MemberSignature Language="C#" Value="public bool TryGetType (string name, string namespaceName, bool ignoreCase, System.Data.Metadata.Edm.DataSpace dataSpace, out System.Data.Metadata.Edm.EdmType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetType(string name, string namespaceName, bool ignoreCase, valuetype System.Data.Metadata.Edm.DataSpace dataSpace, [out] class System.Data.Metadata.Edm.EdmType&amp; type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetType(System.String,System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EdmType@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetType(System::String ^ name, System::String ^ namespaceName, bool ignoreCase, System::Data::Metadata::Edm::DataSpace dataSpace, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::EdmType ^ % type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
        <Parameter Name="type" Type="System.Data.Metadata.Edm.EdmType&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="83770-278">형식의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-278">The name of the type.</span></span></param>
        <param name="namespaceName"><span data-ttu-id="83770-279">형식의 네임스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-279">The namespace of the type.</span></span></param>
        <param name="ignoreCase">
          <span data-ttu-id="83770-280">대/소문자를 구분하지 않고 검색하려면 <see langword="true" />로 설정하고, 그렇지 않으면 <see langword="false" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="83770-280"><see langword="true" /> to perform the case-insensitive search; otherwise, <see langword="false" />.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="83770-281">형식을 검색할 개념적 모델입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-281">The conceptual model on which the type is searched.</span></span></param>
        <param name="type"><span data-ttu-id="83770-282">이 메서드의 반환 값에는 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 개체가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="83770-282">When this method returns, contains an <see cref="T:System.Data.Metadata.Edm.EdmType" /> object.</span></span> <span data-ttu-id="83770-283">이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</span><span class="sxs-lookup"><span data-stu-id="83770-283">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="83770-284">지정된 형식 이름, 네임스페이스 이름 및 데이터 모델을 사용하여 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="83770-284">Returns an <see cref="T:System.Data.Metadata.Edm.EdmType" /> object by using the specified type name, namespace name, and data model.</span></span></summary>
        <returns>
          <span data-ttu-id="83770-285">검색 조건과 일치하는 형식이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="83770-285"><see langword="true" /> if there is a type that matches the search criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>