<Type Name="XsltArgumentList" FullName="System.Xml.Xsl.XsltArgumentList">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9cc99ddb1da2667212b1ce408db107e7e7a4a7c0" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30720117" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XsltArgumentList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XsltArgumentList extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Xsl.XsltArgumentList" />
  <TypeSignature Language="VB.NET" Value="Public Class XsltArgumentList" />
  <TypeSignature Language="C++ CLI" Value="public ref class XsltArgumentList" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>XSLT 매개 변수이거나 확장 개체인 여러 가지 인수를 포함합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 클래스에서 사용 되는 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 메서드. 매개 변수와 확장명 개체를 스타일 시트 내에서 호출할 수 있습니다.  
  
 매개 변수 및 개체에 추가 될 때는 <xref:System.Xml.Xsl.XsltArgumentList>, 각각 네임 스페이스 정규화 된 이름 및 네임 스페이스 URI와 연결 되어 있습니다.  
  
 다음은와 같은 포함 된 스크립트를 사용 하는 대신 개체를 전달 하 여 장점이 `<msxsl:script>`:  
  
-   클래스 캡슐화 및 재사용에 효과적입니다.  
  
-   스타일 시트를를 더 작은 및 보다 쉽게 관리할 수 있습니다.  
  
-   노드 조각을 전달할 (통해는 <xref:System.Xml.XPath.XPathNavigator>) 스타일 시트입니다.  
  
 사용 하는 방법에 대 한 자세한 내용은 <xref:System.Xml.Xsl.XsltArgumentList>, 참조 [XSLT 확장 개체](~/docs/standard/data/xml/xslt-extension-objects.md) 및 [XSLT 매개 변수](~/docs/standard/data/xml/xslt-parameters.md)합니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XsltArgumentList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XsltArgumentList.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XsltArgumentList();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Xml.Xsl.XsltArgumentList" />의 새 인스턴스를 구현합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddExtensionObject">
      <MemberSignature Language="C#" Value="public void AddExtensionObject (string namespaceUri, object extension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddExtensionObject(string namespaceUri, object extension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XsltArgumentList.AddExtensionObject(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddExtensionObject (namespaceUri As String, extension As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddExtensionObject(System::String ^ namespaceUri, System::Object ^ extension);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceUri" Type="System.String" />
        <Parameter Name="extension" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="namespaceUri">개체에 연결할 네임스페이스 URI입니다. 기본 네임스페이스를 사용하려면 빈 문자열을 지정합니다.</param>
        <param name="extension">목록에 추가할 개체입니다.</param>
        <summary>
          <see cref="T:System.Xml.Xsl.XsltArgumentList" />에 새 개체를 추가하고 이를 네임스페이스 URI와 연결합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `params` 키워드에 전달 될 매개 변수 개수는 지정 되지 않은 허용 하는 현재 지원 되지 않습니다. 로 정의 된 메서드를 사용 하는 XSLT 스타일 시트는 `params` 키워드 제대로 작동 하지 않습니다. 자세한 내용은 참조 [params](~/docs/csharp/language-reference/keywords/params.md)합니다.  
  
   
  
## Examples  
 다음 예제에서는 스타일 시트를 사용 하 여 XSLT 확장 개체도 서 가격을 변환 합니다.  
  
 [!code-csharp[XsltArgumentList.AddExtensionObject#1](~/samples/snippets/csharp/VS_Snippets_Data/XsltArgumentList.AddExtensionObject/CS/addextobj.cs#1)]
 [!code-vb[XsltArgumentList.AddExtensionObject#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XsltArgumentList.AddExtensionObject/VB/addextobj.vb#1)]  
  
 이 예제에서는 입력으로 다음과 같은 데이터 파일을 사용합니다.  
  
 `books.xml`  
  
 [!code-xml[XsltArgumentList.AddExtensionObject#2](~/samples/snippets/xml/VS_Snippets_Data/XsltArgumentList.AddExtensionObject/XML/books.xml#2)]  
  
 `prices.xsl`  
  
 [!code-xml[XsltArgumentList.AddExtensionObject#3](~/samples/snippets/xml/VS_Snippets_Data/XsltArgumentList.AddExtensionObject/XML/prices.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="namespaceUri" />가 <see langword="null" /> 또는 http://www.w3.org/1999/XSL/Transform인 경우  
  
 <paramref name="namespaceUri" />에 이미 연결된 확장 개체가 있는 경우</exception>
        <exception cref="T:System.Security.SecurityException">호출자에게 이 메서드를 호출할 수 있는 권한이 없는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="AddParam">
      <MemberSignature Language="C#" Value="public void AddParam (string name, string namespaceUri, object parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddParam(string name, string namespaceUri, object parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XsltArgumentList.AddParam(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddParam (name As String, namespaceUri As String, parameter As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddParam(System::String ^ name, System::String ^ namespaceUri, System::Object ^ parameter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceUri" Type="System.String" />
        <Parameter Name="parameter" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">매개 변수에 연결할 이름입니다.</param>
        <param name="namespaceUri">매개 변수에 연결할 네임스페이스 URI입니다. 기본 네임스페이스를 사용하려면 빈 문자열을 지정합니다.</param>
        <param name="parameter">목록에 추가할 매개 변수 값 또는 개체입니다.</param>
        <summary>
          <see cref="T:System.Xml.Xsl.XsltArgumentList" />에 매개 변수를 추가하고 이를 네임스페이스 정규화 이름과 연결합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `parameter` W3C 형식과 일치 해야 합니다. 다음 표에서 W3C 형식, XPath 또는 XSLT, 및 corresponding.NET 클래스입니다.  
  
|W3C 형식|Equivalent.NET 클래스 (형식)|  
|--------------|-----------------------------------|  
|`String` XPath)|<xref:System.String>|  
|`Boolean` XPath)|<xref:System.Boolean>|  
|`Number` XPath)|<xref:System.Double>|  
|`Result Tree Fragment` (XSLT)|<xref:System.Xml.XPath.XPathNavigator>|  
|`Node Set` XPath)|<xref:System.Xml.XPath.XPathNodeIterator><br /><br /> `XPathNavigator[]`|  
|`Node`* (XPath)|<xref:System.Xml.XPath.XPathNavigator>|  
  
 *단일 노드가 포함된 노드 집합과 같습니다.  
  
 스타일 시트 내에서 호출 되는 매개 변수 개체가 위 내용 중 하나가 아닌 경우에 다음 규칙에 따라 변환 됩니다.  
  
-   CLR 숫자 형식은 <xref:System.Double>로 변환됩니다.  
  
-   <xref:System.DateTime> 형식은 <xref:System.String>으로 변환되고,  
  
-   <xref:System.Xml.XPath.IXPathNavigable> 형식은 <xref:System.Xml.XPath.XPathNavigator>로 변환됩니다. `XPathNavigator[]` 변환할 <xref:System.Xml.XPath.XPathNodeIterator>합니다.  
  
 다른 모든 형식은 오류를 throw합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Xml.Xsl.XsltArgumentList.AddParam%2A> 메서드를 현재 날짜 및 시간을 나타내는 매개 변수를 만듭니다.  
  
 [!code-csharp[XsltArgumentList.AddParam#1](~/samples/snippets/csharp/VS_Snippets_Data/XsltArgumentList.AddParam/CS/addparam.cs#1)]
 [!code-vb[XsltArgumentList.AddParam#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XsltArgumentList.AddParam/VB/addparam.vb#1)]  
  
 이 예제에서는 입력으로 다음 두 개의 데이터 파일을 사용합니다.  
  
 `order.xml`  
  
 [!code-xml[XsltArgumentList.AddParam#2](~/samples/snippets/xml/VS_Snippets_Data/XsltArgumentList.AddParam/XML/order.xml#2)]  
  
 `order.xsl`  
  
 [!code-xml[XsltArgumentList.AddParam#3](~/samples/snippets/xml/VS_Snippets_Data/XsltArgumentList.AddParam/XML/order.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="namespaceUri" />가 <see langword="null" /> 또는 http://www.w3.org/1999/XSL/Transform인 경우  
  
 <paramref name="name" />이 W3C XML 사양에 따른 올바른 이름이 아닌 경우  
  
 <paramref name="namespaceUri" />에 이미 연결된 매개 변수가 있는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XsltArgumentList.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Xml.Xsl.XsltArgumentList" />에서 모든 매개 변수와 확장 개체를 제거합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExtensionObject">
      <MemberSignature Language="C#" Value="public object GetExtensionObject (string namespaceUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetExtensionObject(string namespaceUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XsltArgumentList.GetExtensionObject(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExtensionObject (namespaceUri As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetExtensionObject(System::String ^ namespaceUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="namespaceUri">개체의 네임스페이스 URI입니다.</param>
        <summary>지정한 네임스페이스에 연결된 개체를 가져옵니다.</summary>
        <returns>네임스페이스 URI 개체가 반환되고, 이 개체가 없는 경우 <see langword="null" />이 반환됩니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParam">
      <MemberSignature Language="C#" Value="public object GetParam (string name, string namespaceUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetParam(string name, string namespaceUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XsltArgumentList.GetParam(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParam (name As String, namespaceUri As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetParam(System::String ^ name, System::String ^ namespaceUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">매개 변수의 이름입니다. <see cref="T:System.Xml.Xsl.XsltArgumentList" />는 전달된 이름이 올바른 로컬 이름인지 검사하지 않지만 이 이름은 <see langword="null" />이 될 수 없습니다.</param>
        <param name="namespaceUri">매개 변수에 연결된 네임스페이스 URI입니다.</param>
        <summary>네임스페이스 정규화 이름에 연결된 매개 변수를 가져옵니다.</summary>
        <returns>매개 변수 개체가 반환되고, 이 개체가 없는 경우 <see langword="null" />이 반환됩니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveExtensionObject">
      <MemberSignature Language="C#" Value="public object RemoveExtensionObject (string namespaceUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object RemoveExtensionObject(string namespaceUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XsltArgumentList.RemoveExtensionObject(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveExtensionObject (namespaceUri As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ RemoveExtensionObject(System::String ^ namespaceUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="namespaceUri">제거할 개체에 연결된 네임스페이스 URI입니다.</param>
        <summary>
          <see cref="T:System.Xml.Xsl.XsltArgumentList" />에서 네임스페이스 URI가 있는 개체를 제거합니다.</summary>
        <returns>네임스페이스 URI가 있는 개체가 반환되고, 이 개체가 없는 경우 <see langword="null" />이 반환됩니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveParam">
      <MemberSignature Language="C#" Value="public object RemoveParam (string name, string namespaceUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object RemoveParam(string name, string namespaceUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XsltArgumentList.RemoveParam(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveParam (name As String, namespaceUri As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ RemoveParam(System::String ^ name, System::String ^ namespaceUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">제거할 매개 변수의 이름입니다. <see cref="T:System.Xml.Xsl.XsltArgumentList" />는 전달된 이름이 올바른 로컬 이름인지 검사하지 않지만 이 이름은 <see langword="null" />이 될 수 없습니다.</param>
        <param name="namespaceUri">제거할 매개 변수의 네임스페이스 URI입니다.</param>
        <summary>
          <see cref="T:System.Xml.Xsl.XsltArgumentList" />에서 매개 변수를 제거합니다.</summary>
        <returns>매개 변수 개체가 반환되고, 이 개체가 없는 경우 <see langword="null" />이 반환됩니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XsltMessageEncountered">
      <MemberSignature Language="C#" Value="public event System.Xml.Xsl.XsltMessageEncounteredEventHandler XsltMessageEncountered;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.Xsl.XsltMessageEncounteredEventHandler XsltMessageEncountered" />
      <MemberSignature Language="DocId" Value="E:System.Xml.Xsl.XsltArgumentList.XsltMessageEncountered" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event XsltMessageEncountered As XsltMessageEncounteredEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::Xsl::XsltMessageEncounteredEventHandler ^ XsltMessageEncountered;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Xsl.XsltMessageEncounteredEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>스타일시트에 <c>xsl:message</c> 요소를 사용하여 지정된 메시지가 있는 경우 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트 등록 되지 않은 경우 모든 메시지를 표준 출력으로 파이프 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>