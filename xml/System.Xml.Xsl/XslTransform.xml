<Type Name="XslTransform" FullName="System.Xml.Xsl.XslTransform">
  <TypeSignature Language="C#" Value="public sealed class XslTransform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XslTransform extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Xsl.XslTransform" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XslTransform" />
  <TypeSignature Language="C++ CLI" Value="public ref class XslTransform sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("This class has been deprecated. Please use System.Xml.Xsl.XslCompiledTransform instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="55afa-101">XSLT(Extensible Stylesheet Language for Transformations) 스타일시트를 사용하여 XML 데이터를 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-101">Transforms XML data using an Extensible Stylesheet Language for Transformations (XSLT) style sheet.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="55afa-102"><xref:System.Xml.Xsl.XslTransform> 클래스는 Microsoft.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-102">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the Microsoft .NET Framework version 2.0.</span></span> <span data-ttu-id="55afa-103"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-103">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="55afa-104">자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 및 [마이그레이션 XslTransform 클래스에서](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-104">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="55afa-105"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-105"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="55afa-106">XSLT 스타일 시트 네임 스페이스를 사용 해야 `http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-106">The XSLT style sheet must use the namespace `http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="55afa-107">추가 인수를 사용 하 여 스타일 시트에 추가할 수도 있습니다는 <xref:System.Xml.Xsl.XsltArgumentList> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-107">Additional arguments can also be added to the style sheet using the <xref:System.Xml.Xsl.XsltArgumentList> class.</span></span> <span data-ttu-id="55afa-108">이 클래스는 스타일 시트에서 호출할 수 있는 스타일 시트 및 확장 개체에 대 한 입력된 매개 변수를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-108">This class contains input parameters for the style sheet and extension objects which can be called from the style sheet.</span></span>  
  
 <span data-ttu-id="55afa-109">XML 데이터를 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-109">To transform XML data:</span></span>  
  
1.  <span data-ttu-id="55afa-110">만들기는 <xref:System.Xml.Xsl.XslTransform> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-110">Create an <xref:System.Xml.Xsl.XslTransform> object.</span></span>  
  
2.  <span data-ttu-id="55afa-111">사용 하 여는 <xref:System.Xml.Xsl.XslTransform.Load%2A> 변환에 대 한 스타일 시트를 로드 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="55afa-111">Use the <xref:System.Xml.Xsl.XslTransform.Load%2A> method to load the style sheet for the transformation.</span></span> <span data-ttu-id="55afa-112">이 메서드는 여러 오버 로드가 하 고 사용 하 여 스타일 시트를 로드할 수는 <xref:System.Xml.XmlReader>, <xref:System.Xml.XPath.XPathNavigator>, <xref:System.Xml.XPath.IXPathNavigable>, 또는 파일의 위치를 포함 하는 URL입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-112">This method has several overloads and can load a style sheet using an <xref:System.Xml.XmlReader>, <xref:System.Xml.XPath.XPathNavigator>, <xref:System.Xml.XPath.IXPathNavigable>, or a URL with the location of the file.</span></span>  
  
3.  <span data-ttu-id="55afa-113">사용 된 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 메서드를 XML 데이터를 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-113">Use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method to transform the XML data.</span></span> <span data-ttu-id="55afa-114">이 메서드는 여러 오버 로드가 하며 다양 한 유형의 입력 및 출력을 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-114">This method has several overloads and can handle different types of input and output.</span></span> <span data-ttu-id="55afa-115">지정할 수 있습니다는 <xref:System.Xml.Xsl.XsltArgumentList> 변환 중에 입력으로 사용할 추가 인수를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-115">You can also specify an <xref:System.Xml.Xsl.XsltArgumentList> containing additional arguments to use as input during the transformation.</span></span>  
  
 <span data-ttu-id="55afa-116">**보안 고려 사항**</span><span class="sxs-lookup"><span data-stu-id="55afa-116">**Security Considerations**</span></span>  
  
 <span data-ttu-id="55afa-117"><xref:System.Xml.Xsl.XslTransform> 클래스를 사용하는 응용 프로그램을 만드는 경우 다음 항목 및 그 의미에 대해 알아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-117">When creating an application that uses the <xref:System.Xml.Xsl.XslTransform> class, you should be aware of the following items and their implications:</span></span>  
  
-   <span data-ttu-id="55afa-118">확장 개체는 기본적으로 활성화되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-118">Extension objects are enabled by default.</span></span> <span data-ttu-id="55afa-119">확장 개체가 포함된 <xref:System.Xml.Xsl.XsltArgumentList> 개체를 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 메서드에 전달하면 이 확장 개체가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-119">If an <xref:System.Xml.Xsl.XsltArgumentList> object containing extension objects is passed to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method, they are utilized.</span></span>  
  
-   <span data-ttu-id="55afa-120">XSLT 스타일시트에는 다른 파일에 대한 참조 및 포함 스크립트 블록이 포함될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-120">XSLT style sheets can include references to other files and embedded script blocks.</span></span> <span data-ttu-id="55afa-121">악의적인 사용자 데이터와 함께 제공 하 여 악용할 수 있습니다 또는 스타일 시트를 실행 하면 시스템 리소스에서 컴퓨터가 느리게 실행 될 때까지 처리를 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-121">A malicious user can exploit this by supplying you with data or style sheets that when executed will cause your system to process until the computer runs low on resources.</span></span>  
  
-   <span data-ttu-id="55afa-122">혼합 신뢰 환경에서 XSLT 응용 프로그램을 실행하면 스타일시트가 스푸핑될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-122">XSLT applications that run in a mixed trust environment can result in style sheet spoofing.</span></span> <span data-ttu-id="55afa-123">예를 들어, 악의적인 사용자는 해로운 스타일시트가 포함된 개체를 로드한 후 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 메서드를 호출하고 변환을 실행할 다른 사용자에게 전달할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-123">For example, a malicious user can load an object with a harmful style sheet and hand it off to another user who subsequently calls the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method and executes the transformation.</span></span>  
  
 <span data-ttu-id="55afa-124">허용 하지 않음으로써 이러한 보안 문제를 완화 될 <xref:System.Xml.Xsl.XslTransform> 개체, XSLT 스타일 시트 또는 신뢰할 수 없는 소스의 XML 원본 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-124">These security issues can be mitigated by not accepting <xref:System.Xml.Xsl.XslTransform> objects, XSLT style sheets, or XML source data from untrusted sources.</span></span>  
  
 <span data-ttu-id="55afa-125">**스크립팅 지원**</span><span class="sxs-lookup"><span data-stu-id="55afa-125">**Scripting Support**</span></span>  
  
 <span data-ttu-id="55afa-126">이 클래스를 사용 하 여 포함 스크립트를 지원는 `msxsl:script` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-126">This class supports embedded scripting using the `msxsl:script` element.</span></span>  
  
 <span data-ttu-id="55afa-127">.NET Framework의 버전 1.1에서는 스타일 시트의 증명 정보 포함 된 스크립트에 지정 된 권한을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-127">In version 1.1 of the .NET Framework, the evidence of the style sheet determines what permissions are given to embedded scripts.</span></span>  
  
-   <span data-ttu-id="55afa-128">스타일 시트에서는 식별자 URI (Uniform Resource)를 로드 하 고, 증명 정보를 만들려면 URI ´ ù.</span><span class="sxs-lookup"><span data-stu-id="55afa-128">If the style sheet was loaded from a Uniform Resource Identifier (URI), the URI is used to create the evidence.</span></span> <span data-ttu-id="55afa-129">이 증명 정보가 해당 사이트 및 영역 함께 URI를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-129">This evidence includes the URI along with its site and zone.</span></span>  
  
-   <span data-ttu-id="55afa-130">다른 원본을 사용 하 여 스타일 시트를 로드할 경우 전달 하 여 증명 정보를 제공할 수 있습니다는 <xref:System.Security.Policy.Evidence?displayProperty=nameWithType> 개체는 <xref:System.Xml.Xsl.XslTransform.Load%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="55afa-130">If the style sheet was loaded using another source, you can provide evidence by passing a <xref:System.Security.Policy.Evidence?displayProperty=nameWithType> object to the <xref:System.Xml.Xsl.XslTransform.Load%2A> method.</span></span> <span data-ttu-id="55afa-131">그렇지 않으면 스크립트 어셈블리에 완전 신뢰 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-131">Otherwise, the script assembly has full trust.</span></span>  
  
 <span data-ttu-id="55afa-132">부분적으로 신뢰할 수 있는 호출자: `UnmanagedCode` 권한이 포함 된 스크립트를 컴파일하는 데 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-132">Semi-trusted callers: `UnmanagedCode` permission is required to compile the embedded script.</span></span> <span data-ttu-id="55afa-133">`ControlEvidence` 사용 권한을 제공 해야 합니다. <xref:System.Security.Policy.Evidence> 에 <xref:System.Xml.Xsl.XslTransform.Load%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="55afa-133">`ControlEvidence` permission is required to provide <xref:System.Security.Policy.Evidence> to the <xref:System.Xml.Xsl.XslTransform.Load%2A> method.</span></span> <span data-ttu-id="55afa-134">A <xref:System.Security.SecurityException> 호출자에 게 필요한 권한이 없는 경우 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-134">A <xref:System.Security.SecurityException> is thrown if the caller does not have the necessary permissions.</span></span> <span data-ttu-id="55afa-135">자세한 내용은 <xref:System.Security.Permissions.SecurityPermission?displayProperty=nameWithType> 및 <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=nameWithType>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="55afa-135">See <xref:System.Security.Permissions.SecurityPermission?displayProperty=nameWithType> and <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=nameWithType> for more information.</span></span>  
  
 <span data-ttu-id="55afa-136">`msxsl:script` 요소에는 다음 요구 사항을:</span><span class="sxs-lookup"><span data-stu-id="55afa-136">The `msxsl:script` element has the following requirements:</span></span>  
  
-   <span data-ttu-id="55afa-137">`msxsl:script` 요소가 속한는 `urn:schemas-microsoft-com:xslt` 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-137">The `msxsl:script` element belongs to the `urn:schemas-microsoft-com:xslt` namespace.</span></span> <span data-ttu-id="55afa-138">스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:msxsl=urn:schemas-microsoft-com:xslt`합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-138">The style sheet must include the namespace declaration `xmlns:msxsl=urn:schemas-microsoft-com:xslt`.</span></span>  
  
-   <span data-ttu-id="55afa-139">`msxsl:script` 요소에 포함 될 수는 `language` 사용할 스크립트 언어를 지정 하는 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-139">The `msxsl:script` element can include a `language` attribute that specifies the scripting language to use.</span></span> <span data-ttu-id="55afa-140">값은 `language` 특성에서 다음 중 하나 여야 합니다: C#, CSharp, VB, VisualBasic, JScript, 또는 JavaScript 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-140">The value of the `language` attribute must be one of the following: C#, CSharp, VB, VisualBasic, JScript, or JavaScript.</span></span> <span data-ttu-id="55afa-141">언어 이름은 대/소문자 구분 없기 때문에 JavaScript 및 javascript은 모두 유효 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-141">Because the language name is not case-sensitive, JavaScript and javascript are both valid.</span></span> <span data-ttu-id="55afa-142">경우는 `language` 특성을 지정 하지 않으면 기본값은 JScript입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-142">If a `language` attribute is not specified, it defaults to JScript.</span></span>  
  
-   <span data-ttu-id="55afa-143">`msxsl:script` 요소 포함 되어야 합니다는 `implements-prefix` 나타내는 스크립트 블록에 연결 된 네임 스페이스 접두사가 포함 된 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-143">The `msxsl:script` element must include an `implements-prefix` attribute that contains the prefix representing the namespace associated with the script block.</span></span> <span data-ttu-id="55afa-144">이 네임 스페이스는 스타일 시트 내에서 정의 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-144">This namespace must be defined within the style sheet.</span></span> <span data-ttu-id="55afa-145">스타일 시트는 그룹화 된 네임 스페이스는 여러 개의 스크립트 블록을 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-145">A style sheet can include multiple script blocks which are grouped by namespace.</span></span> <span data-ttu-id="55afa-146">동일한 네임 스페이스 내에서 여러 언어를 사용 하 여 스크립트 블록을 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-146">You cannot have script blocks with multiple languages within the same namespace.</span></span> <span data-ttu-id="55afa-147">동일한 네임 스페이스 내에 있는 스크립트 블록의 제공 된 스크립트 블록에서 다른 스크립트 블록에 정의 된 함수를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-147">Script blocks can call a function defined in another script block, provided the script blocks reside within the same namespace.</span></span> <span data-ttu-id="55afa-148">규칙 및 스크립트 언어의 구문에 따라 스크립트 블록의 내용을 구문 분석 (제공한는 `language` 특성).</span><span class="sxs-lookup"><span data-stu-id="55afa-148">The contents of a script block are parsed according to the rules and syntax of the scripting language (supplied by the `language` attribute).</span></span> <span data-ttu-id="55afa-149">예를 들어 C# 스크립트 블록을 설치한 경우 메모 접두사로 옵니다는 `//` 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-149">For example, if you had a C# script block, comments would be prefixed by the `//` characters.</span></span> <span data-ttu-id="55afa-150">주석은 유효한 XML 콘텐츠 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-150">The comments must be valid XML content.</span></span>  
  
 <span data-ttu-id="55afa-151">`Note` CDATA 섹션의 스크립트 블록을 래핑하는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-151">`Note` It is recommended that you wrap script blocks in a CDATA section.</span></span>  
  
```  
<msxsl:script implements-prefix='xy' language='C#'>  
  <![CDATA[  
  // Add code here.  
  ]]]><![CDATA[]>  
</msxsl:script>  
```  
  
 <span data-ttu-id="55afa-152">함수는 `msxsl:script` 요소 내에서 선언할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-152">Functions can be declared within the `msxsl:script` element.</span></span> <span data-ttu-id="55afa-153">다음 표에서는 기본적으로 지원되는 네임스페이스를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-153">The following table shows the namespaces that are supported by default.</span></span>  
  
|<span data-ttu-id="55afa-154">지원 되는 네임 스페이스</span><span class="sxs-lookup"><span data-stu-id="55afa-154">Supported Namespaces</span></span>|<span data-ttu-id="55afa-155">설명</span><span class="sxs-lookup"><span data-stu-id="55afa-155">Description</span></span>|  
|--------------------------|-----------------|  
|`System`|<span data-ttu-id="55afa-156">시스템 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-156">System classes.</span></span>|  
|`System.Collection`|<span data-ttu-id="55afa-157">Collection 클래스</span><span class="sxs-lookup"><span data-stu-id="55afa-157">Collection classes.</span></span>|  
|`System.Text`|<span data-ttu-id="55afa-158">텍스트 처리 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-158">Text handling classes.</span></span>|  
|`System.Xml`|<span data-ttu-id="55afa-159">핵심 XML 클래스</span><span class="sxs-lookup"><span data-stu-id="55afa-159">Core XML classes.</span></span>|  
|`System.Xml.Xsl`|<span data-ttu-id="55afa-160">XSLT 클래스</span><span class="sxs-lookup"><span data-stu-id="55afa-160">XSLT classes.</span></span>|  
|`System.Xml.XPath`|<span data-ttu-id="55afa-161">XPath(XML Path Language) 클래스</span><span class="sxs-lookup"><span data-stu-id="55afa-161">XML Path Language (XPath) classes.</span></span>|  
  
 <span data-ttu-id="55afa-162">인수와 스크립트 함수에 의해 정의 된 반환 값은 아래 나열 된 World Wide Web Consortium (W3C) 형식 중 하나 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-162">The supplied arguments and return values defined by the script functions must be one of the World Wide Web Consortium (W3C) types listed below.</span></span> <span data-ttu-id="55afa-163">다음 표에서 XPath 또는 XSLT, W3C 형식 간의 매핑을 설명 및 해당.NET Framework 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-163">The following table details the mapping between the W3C types, either XPath or XSLT, and the corresponding .NET Framework classes.</span></span>  
  
|<span data-ttu-id="55afa-164">W3C 형식</span><span class="sxs-lookup"><span data-stu-id="55afa-164">W3C Type</span></span>|<span data-ttu-id="55afa-165">해당 하는.NET 클래스</span><span class="sxs-lookup"><span data-stu-id="55afa-165">Equivalent .NET class</span></span>|  
|--------------|---------------------------|  
|<span data-ttu-id="55afa-166">문자열 (XPath)</span><span class="sxs-lookup"><span data-stu-id="55afa-166">String (XPath)</span></span>|`System.String`|  
|<span data-ttu-id="55afa-167">부울 값 (XPath)</span><span class="sxs-lookup"><span data-stu-id="55afa-167">Boolean (XPath)</span></span>|`System.Boolean`|  
|<span data-ttu-id="55afa-168">숫자 (XPath)</span><span class="sxs-lookup"><span data-stu-id="55afa-168">Number (XPath)</span></span>|`System.Double`|  
|<span data-ttu-id="55afa-169">결과 트리 조각 (XSLT)</span><span class="sxs-lookup"><span data-stu-id="55afa-169">Result Tree Fragment (XSLT)</span></span>|`System.Xml.XPath.XPathNavigator`|  
|<span data-ttu-id="55afa-170">노드 집합 (XPath)</span><span class="sxs-lookup"><span data-stu-id="55afa-170">Node Set (XPath)</span></span>|`System.Xml.XPath.XPathNodeIterator`|  
  
 <span data-ttu-id="55afa-171">스크립트 함수는 다음과 같은 숫자 형식 중 하나를 사용 하는 경우: Int16, UInt16, Int32, UInt32, Int64, UInt64, Single 또는 Decimal, 이러한 형식은로 강제 변환 W3C XPath 형식의 숫자에 매핑되는 Double입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-171">If the script function utilizes one of the following numeric types: Int16, UInt16, Int32, UInt32, Int64, UInt64, Single, or Decimal, these types are coerced to Double, which maps to the W3C XPath type number.</span></span>  
  
 <span data-ttu-id="55afa-172">예외가 발생 하는 함수가 호출 될 때 필요한 형식 중 하나에 결과 인수를 변환할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-172">An exception is thrown when a function is called that cannot convert the argument result to one of the required types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="55afa-173">`msxsl:script` 및 `msxsl:node-list` 에서 유일한 함수는 `urn:schemas-microsoft-com:xslt` 에서 지원 되는 네임 스페이스는 <xref:System.Xml.Xsl.XslTransform> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-173">`msxsl:script` and `msxsl:node-list` are the only functions from the `urn:schemas-microsoft-com:xslt` namespace that are supported by the <xref:System.Xml.Xsl.XslTransform> class.</span></span>  
  
 <span data-ttu-id="55afa-174"><xref:System.Xml.Xsl.XslTransform> 공용 언어 런타임 (CLR) 코드 확장명 메커니즘으로 사용할 수 있도록을 있습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-174"><xref:System.Xml.Xsl.XslTransform> has the ability to utilize common language runtime (CLR) code as an extension mechanism.</span></span> <span data-ttu-id="55afa-175">에 대 한 클래스의 인스턴스를 전달 하 여 이렇게는 <xref:System.Xml.Xsl.XslTransform> 클래스 및 XSLT 스타일 시트 내에서 공용 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-175">This is accomplished by passing an instance of a class to the <xref:System.Xml.Xsl.XslTransform> class and calling its public methods within an XSLT style sheet.</span></span> <span data-ttu-id="55afa-176">정의 된 메서드는 `params` 키워드에 전달 될 매개 변수 개수는 지정 되지 않은 허용 하는이 시나리오에서 제대로 작동 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-176">Methods that are defined with the `params` keyword, which allows an unspecified number of parameters to be passed, do not work correctly in this scenario.</span></span> <span data-ttu-id="55afa-177">참조 [params](~/docs/csharp/language-reference/keywords/params.md) 내용을 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-177">See [params](~/docs/csharp/language-reference/keywords/params.md) for more details.</span></span>  
  
 <span data-ttu-id="55afa-178">자세한 내용은 참조 [XslTransform 클래스도 XSLT 변형을 수행할](~/docs/standard/data/xml/xslt-transformations-with-the-xsltransform-class.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-178">For more information see [XSLT Transformations with the XslTransform Class](~/docs/standard/data/xml/xslt-transformations-with-the-xsltransform-class.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="55afa-179">다음 예제에서는 지정된 된 XML 문서 변환한 결과를 콘솔에 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-179">The following example transforms the specified XML document and outputs the result to the console.</span></span>  
  
 [!code-csharp[Classic WebData XslTransform Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XslTransform Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XslTransform Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XslTransform Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="55afa-180"><see cref="T:System.Xml.Xsl.XslTransform" /> 개체는 변환 작업에 대 한 유일한 스레드로부터 안전 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-180"><see cref="T:System.Xml.Xsl.XslTransform" /> objects are only thread-safe for transform operations.</span></span> <span data-ttu-id="55afa-181">다른 작업은 스레드로부터의 안전성이 보장 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-181">Other operations are not guaranteed to be thread-safe.</span></span> <span data-ttu-id="55afa-182">로드 작업 중 다른 메서드가 없는 개체에서 호출 되는 것이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-182">You must ensure that no other methods are called on the object during load operations.</span></span></threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XslTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XslTransform();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="55afa-183"><see cref="T:System.Xml.Xsl.XslTransform" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-183">Initializes a new instance of the <see cref="T:System.Xml.Xsl.XslTransform" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="55afa-184"><see langword="xsl:include" /> 및 <see langword="xsl:import" /> 요소에서 참조하는 스타일시트가 들어 있는 XSLT 스타일시트를 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-184">Loads the XSLT style sheet, including style sheets referenced in <see langword="xsl:include" /> and <see langword="xsl:import" /> elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="55afa-185"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-185">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="55afa-186"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-186">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="55afa-187">자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 및 [마이그레이션 XslTransform 클래스에서](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-187">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ url);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="55afa-188">로드할 XSLT 스타일시트를 지정하는 URL입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-188">The URL that specifies the XSLT style sheet to load.</span></span></param>
        <summary><span data-ttu-id="55afa-189">URL로 지정된 XSLT 스타일시트를 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-189">Loads the XSLT style sheet specified by a URL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="55afa-190"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-190">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="55afa-191"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-191">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="55afa-192">자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 및 [마이그레이션 XslTransform 클래스에서](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-192">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="55afa-193"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-193"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="55afa-194">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl="http://www.w3.org/1999/XSL/Transform"`합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-194">The XSLT style sheet must include the namespace declaration `xmlns:xsl="http://www.w3.org/1999/XSL/Transform"`.</span></span>  
  
 <span data-ttu-id="55afa-195">이 메서드는에서 참조 되는 모든 스타일 시트를 포함 하 여 XSLT 스타일 시트를 로드 `xsl:include` 및 `xsl:import` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-195">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="55afa-196">사용 하 여 외부 리소스는 확인 된 <xref:System.Xml.XmlUrlResolver> 자격 증명이 없는 사용자입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-196">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="55afa-197">사용 하는 오버 로드를 사용 하 여 스타일 시트에 인증을 요구 하는 네트워크 리소스가 있으면는 <xref:System.Xml.XmlResolver> 인수 중 하나로 지정 하 고는 <xref:System.Xml.XmlResolver> 에 필요한 자격 증명입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-197">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="55afa-198">스타일 시트가 포함 된 스크립트가 들어 있는 경우 스크립트는 어셈블리에 컴파일됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-198">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="55afa-199">스타일 시트의 URI는 어셈블리에 적용 되는 증명 정보를 만드는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-199">The URI of the style sheet is used to create evidence, which is applied to the assembly.</span></span> <span data-ttu-id="55afa-200">문제에 대 한는 <xref:System.Xml.Xsl.XslTransform.Load%2A> 포함 된 스크립트에 있는 메서드 및 스타일 시트 문서 Q316755에서 Microsoft 기술 자료에서 참조 http://support.microsoft.com합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-200">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="55afa-201">호출자에 게 없는 경우 `UnmanagedCode` 권한, 포함 된 스크립트는 컴파일되지 및 <xref:System.Security.SecurityException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-201">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="55afa-202">자세한 내용은 <xref:System.Security.Permissions.SecurityPermission> 및 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="55afa-202">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="55afa-203">다음 예제에서는 HTML 문서에 XML 문서를 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-203">The following example transforms an XML document into an HTML document.</span></span> <span data-ttu-id="55afa-204">테이블에서 ISBN, 제목 및 각 책의 가격은 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-204">It displays the ISBN, title, and price for each book in a table.</span></span>  
  
 [!code-cpp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="55afa-205">이 샘플에서는 다음 두 입력 파일을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-205">The sample uses the following two input files.</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="55afa-206">로드된 리소스가 올바른 스타일시트가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-206">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="55afa-207">스타일시트에 포함 스크립트가 들어 있고 호출자에 <see langword="UnmanagedCode" /> 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="55afa-207">The style sheet contains embedded script, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="55afa-208">XSLT 스타일시트가 들어 있는 <see cref="T:System.Xml.XmlReader" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-208">An <see cref="T:System.Xml.XmlReader" /> object that contains the XSLT style sheet.</span></span></param>
        <summary><span data-ttu-id="55afa-209"><see cref="T:System.Xml.XmlReader" />에 포함된 XSLT 스타일시트를 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-209">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="55afa-210"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-210">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="55afa-211"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-211">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="55afa-212">자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 및 [마이그레이션 XslTransform 클래스에서](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-212">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="55afa-213"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-213"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="55afa-214">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-214">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="55afa-215">이 메서드는에서 참조 되는 모든 스타일 시트를 포함 하 여 XSLT 스타일 시트를 로드 `xsl:include` 및 `xsl:import` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-215">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="55afa-216">사용 하 여 외부 리소스는 확인 된 <xref:System.Xml.XmlUrlResolver> 자격 증명이 없는 사용자입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-216">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="55afa-217">사용 하는 오버 로드를 사용 하 여 스타일 시트에 인증을 요구 하는 네트워크 리소스가 있으면는 <xref:System.Xml.XmlResolver> 인수 중 하나로 지정 하 고는 <xref:System.Xml.XmlResolver> 에 필요한 자격 증명입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-217">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="55afa-218">스타일 시트의 현재 노드로부터 로드는 <xref:System.Xml.XmlReader> 모든 자식을 통해 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-218">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="55afa-219">그러면 스타일 시트와 문서의 일부를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-219">This enables you to use a portion of a document as the style sheet.</span></span> <span data-ttu-id="55afa-220">후의 <xref:System.Xml.Xsl.XslTransform.Load%2A> 메서드가 반환 되 면는 <xref:System.Xml.XmlReader> 스타일 시트의 끝 다음에 다음 노드에 배치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-220">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="55afa-221">문서 끝에 도달하면 <xref:System.Xml.XmlReader>가 EOF(파일 끝)에 배치됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-221">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
 <span data-ttu-id="55afa-222">지정 해야 하는 경우 스타일 시트 포함 엔터티는 <xref:System.Xml.XmlReader> 엔터티를 확인할 수 있는 (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> 반환 `true`).</span><span class="sxs-lookup"><span data-stu-id="55afa-222">If the style sheet contains entities, you should specify an <xref:System.Xml.XmlReader> that can resolve entities (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> returns `true`).</span></span> <span data-ttu-id="55afa-223">이 경우에 <xref:System.Xml.XmlValidatingReader> 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-223">In this case, an <xref:System.Xml.XmlValidatingReader> can be used.</span></span>  
  
 <span data-ttu-id="55afa-224">스타일 시트가 포함 된 스크립트가 들어 있는 경우 스크립트는 어셈블리에 컴파일됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-224">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="55afa-225">이 어셈블리가 완전히 신뢰 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-225">The assembly has full trust.</span></span> <span data-ttu-id="55afa-226">증명 정보를 사용 하 여 제공 하는 것이 좋습니다는 <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="55afa-226">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span> <span data-ttu-id="55afa-227">문제에 대 한는 <xref:System.Xml.Xsl.XslTransform.Load%2A> 포함 된 스크립트에 있는 메서드 및 스타일 시트 문서 Q316755에서 Microsoft 기술 자료에서 참조 http://support.microsoft.com합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-227">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="55afa-228">호출자에 게 없는 경우 `UnmanagedCode` 권한, 포함 된 스크립트는 컴파일되지 및 <xref:System.Security.SecurityException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-228">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="55afa-229">자세한 내용은 <xref:System.Security.Permissions.SecurityPermission> 및 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="55afa-229">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="55afa-230">다음 예제에서는 모든 책 제목을 기준으로 정렬 하는 XML 파일을 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-230">The following example transforms an XML file sorting all the books by title.</span></span>  
  
 [!code-cpp[XslTransform.Load3#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Load3/CPP/trans3.cpp#1)]
 [!code-csharp[XslTransform.Load3#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load3/CS/trans3.cs#1)]
 [!code-vb[XslTransform.Load3#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load3/VB/trans3.vb#1)]  
  
 <span data-ttu-id="55afa-231">이 예제에서는 입력으로 다음과 같은 데이터 파일을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-231">The example uses the following data files as input.</span></span>  
  
 `books.xml`  
  
 [!code-xml[XslTransform.Load3#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load3/XML/books.xml#2)]  
  
 `titles.xsl`  
  
 [!code-xml[XslTransform.Load3#3](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load3/XML/titles.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="55afa-232">현재 노드가 올바른 스타일시트에 맞지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-232">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="55afa-233">스타일시트에 포함 스크립트가 들어 있고 호출자에 <see langword="UnmanagedCode" /> 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-233">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="55afa-234"><see cref="T:System.Xml.XPath.IXPathNavigable" /> 인터페이스를 구현하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-234">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="55afa-235">.NET Framework에서 이 개체는 <see cref="T:System.Xml.XmlNode" />(대개 <see cref="T:System.Xml.XmlDocument" />) 또는 XSLT 스타일시트를 포함하는 <see cref="T:System.Xml.XPath.XPathDocument" />일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-235">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the XSLT style sheet.</span></span></param>
        <summary><span data-ttu-id="55afa-236"><see cref="T:System.Xml.XPath.IXPathNavigable" />에 포함된 XSLT 스타일시트를 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-236">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="55afa-237"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-237">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="55afa-238"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-238">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="55afa-239">자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 및 [마이그레이션 XslTransform 클래스에서](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-239">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="55afa-240"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-240"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="55afa-241">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-241">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="55afa-242">이 메서드는에서 참조 되는 모든 스타일 시트를 포함 하 여 XSLT 스타일 시트를 로드 `xsl:include` 및 `xsl:import` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-242">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="55afa-243">사용 하 여 외부 리소스는 확인 된 <xref:System.Xml.XmlUrlResolver> 자격 증명이 없는 사용자입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-243">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="55afa-244">사용 하는 오버 로드를 사용 하 여 스타일 시트에 인증을 요구 하는 네트워크 리소스가 있으면는 <xref:System.Xml.XmlResolver> 인수 중 하나로 지정 하 고는 <xref:System.Xml.XmlResolver> 에 필요한 자격 증명입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-244">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="55afa-245">스타일 시트가 포함 된 스크립트가 들어 있는 경우 스크립트는 어셈블리에 컴파일됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-245">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="55afa-246">이 어셈블리가 완전히 신뢰 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-246">The assembly has full trust.</span></span> <span data-ttu-id="55afa-247">증명 정보를 사용 하 여 제공 하는 것이 좋습니다는 <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="55afa-247">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span> <span data-ttu-id="55afa-248">문제에 대 한는 <xref:System.Xml.Xsl.XslTransform.Load%2A> 포함 된 스크립트에 있는 메서드 및 스타일 시트 문서 Q316755에서 Microsoft 기술 자료에서 참조 http://support.microsoft.com합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-248">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="55afa-249">호출자에 게 없는 경우 `UnmanagedCode` 권한, 포함 된 스크립트는 컴파일되지 및 <xref:System.Security.SecurityException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-249">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="55afa-250">자세한 내용은 <xref:System.Security.Permissions.SecurityPermission> 및 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="55afa-250">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="55afa-251">로드된 리소스가 올바른 스타일시트가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-251">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="55afa-252">스타일시트에 포함 스크립트가 들어 있고 호출자에 <see langword="UnmanagedCode" /> 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-252">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XPathNavigator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="55afa-253">XSLT 스타일시트가 들어 있는 <see cref="T:System.Xml.XPath.XPathNavigator" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-253">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object that contains the XSLT style sheet.</span></span></param>
        <summary><span data-ttu-id="55afa-254"><see cref="T:System.Xml.XPath.XPathNavigator" />에 포함된 XSLT 스타일시트를 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-254">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.XPathNavigator" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="55afa-255"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-255">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="55afa-256"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-256">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="55afa-257">자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 및 [마이그레이션 XslTransform 클래스에서](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-257">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="55afa-258"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-258"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="55afa-259">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-259">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="55afa-260">이 메서드는에서 참조 되는 모든 스타일 시트를 포함 하 여 XSLT 스타일 시트를 로드 `xsl:include` 및 `xsl:import` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-260">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="55afa-261">사용 하 여 외부 리소스는 확인 된 <xref:System.Xml.XmlUrlResolver> 자격 증명이 없는 사용자입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-261">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="55afa-262">사용 하는 오버 로드를 사용 하 여 스타일 시트에 인증을 요구 하는 네트워크 리소스가 있으면는 <xref:System.Xml.XmlResolver> 인수 중 하나로 지정 하 고는 <xref:System.Xml.XmlResolver> 에 필요한 자격 증명입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-262">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="55afa-263">스타일 시트의 현재 위치에서 로드 되는 <xref:System.Xml.XPath.XPathNavigator>합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-263">The style sheet is loaded from the current position of the <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="55afa-264">로드 된 문서의 일부만 스타일 시트를 사용 하려면 스타일 시트의 시작 부분에 해당 노드로 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-264">To use just a portion of the loaded document as the style sheet, navigate to the node corresponding to the beginning of the style sheet.</span></span> <span data-ttu-id="55afa-265">후의 <xref:System.Xml.Xsl.XslTransform.Load%2A> 메서드가 반환 되 면는 <xref:System.Xml.XPath.XPathNavigator> 스타일 시트의 시작 부분에 배치 됩니다 (에 `xsl:style sheet` 노드).</span><span class="sxs-lookup"><span data-stu-id="55afa-265">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XPath.XPathNavigator> is positioned at the beginning of the style sheet (on the `xsl:style sheet` node).</span></span>  
  
 <span data-ttu-id="55afa-266">스타일 시트가 포함 된 스크립트가 들어 있는 경우 스크립트는 어셈블리에 컴파일됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-266">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="55afa-267">이 어셈블리가 완전히 신뢰 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-267">The assembly has full trust.</span></span> <span data-ttu-id="55afa-268">증명 정보를 사용 하 여 제공 하는 것이 좋습니다는 <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="55afa-268">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span> <span data-ttu-id="55afa-269">문제에 대 한는 <xref:System.Xml.Xsl.XslTransform.Load%2A> 포함 된 스크립트에 있는 메서드 및 스타일 시트 문서 Q316755에서 Microsoft 기술 자료에서 참조 http://support.microsoft.com합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-269">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="55afa-270">호출자에 게 없는 경우 `UnmanagedCode` 권한, 포함 된 스크립트는 컴파일되지 및 <xref:System.Security.SecurityException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-270">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="55afa-271">자세한 내용은 <xref:System.Security.Permissions.SecurityPermission> 및 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="55afa-271">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="55afa-272">현재 노드가 올바른 스타일시트에 맞지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-272">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="55afa-273">스타일시트에 포함 스크립트가 들어 있고 호출자에 <see langword="UnmanagedCode" /> 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-273">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string url, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string url, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (url As String, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ url, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="55afa-274">로드할 XSLT 스타일시트를 지정하는 URL입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-274">The URL that specifies the XSLT style sheet to load.</span></span></param>
        <param name="resolver"><span data-ttu-id="55afa-275">스타일시트와 <c>xsl:import</c> 및 <c>xsl:include</c> 요소에 참조된 모든 스타일시트를 로드하는 데 사용할 <see cref="T:System.Xml.XmlResolver" />입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-275">The <see cref="T:System.Xml.XmlResolver" /> to use to load the style sheet and any style sheet(s) referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span>  
  
 <span data-ttu-id="55afa-276">이 값이 <see langword="null" />이면 사용자 자격 증명 없는 기본 <see cref="T:System.Xml.XmlUrlResolver" />를 사용하여 스타일시트를 엽니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-276">If this is <see langword="null" />, a default <see cref="T:System.Xml.XmlUrlResolver" /> with no user credentials is used to open the style sheet.</span></span> <span data-ttu-id="55afa-277">스타일시트의 외부 리소스를 확인하는 데 기본 <see cref="T:System.Xml.XmlUrlResolver" />가 사용되지 않으므로 <c>xsl:import</c> 및 <c>xsl:include</c> 요소는 확인되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-277">The default <see cref="T:System.Xml.XmlUrlResolver" /> is not used to resolve any external resources in the style sheet, so <c>xsl:import</c> and <c>xsl:include</c> elements are not resolved.</span></span>  
  
 <span data-ttu-id="55afa-278"><see cref="T:System.Xml.XmlResolver" /> 메서드가 완료된 다음 <see cref="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" />가 캐시되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-278">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="55afa-279">URL로 지정된 XSLT 스타일시트를 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-279">Loads the XSLT style sheet specified by a URL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="55afa-280"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-280">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="55afa-281"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-281">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="55afa-282">자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 및 [마이그레이션 XslTransform 클래스에서](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-282">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="55afa-283"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-283"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="55afa-284">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-284">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="55afa-285">스타일 시트가 포함 된 스크립트가 들어 있는 경우 스크립트는 어셈블리에 컴파일됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-285">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="55afa-286">스타일 시트의 URI는 어셈블리에 적용 되는 증명 정보를 만드는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-286">The URI of the style sheet is used to create evidence, which is applied to the assembly.</span></span> <span data-ttu-id="55afa-287">문제에 대 한는 <xref:System.Xml.Xsl.XslTransform.Load%2A> 포함 된 스크립트에 있는 메서드 및 스타일 시트 문서 Q316755에서 Microsoft 기술 자료에서 참조 http://support.microsoft.com합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-287">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="55afa-288">호출자에 게 없는 경우 `UnmanagedCode` 권한, 포함 된 스크립트는 컴파일되지 및 <xref:System.Security.SecurityException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-288">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="55afa-289">자세한 내용은 <xref:System.Security.Permissions.SecurityPermission> 및 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="55afa-289">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="55afa-290">다음 예제에서는 HTML 문서에 XML 문서를 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-290">The following example transforms an XML document into an HTML document.</span></span> <span data-ttu-id="55afa-291">이 예제에서는 포함 된 XSLT 스타일 시트를 로드 한 `xsl:include` 다른 스타일 시트를 참조 하는 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-291">The example loads an XSLT style sheet which contains an `xsl:include` element referencing another style sheet.</span></span> <span data-ttu-id="55afa-292"><xref:System.Xml.XmlUrlResolver> 에 전달 되는 <xref:System.Xml.Xsl.XslTransform.Load%2A> 메서드는 포함 된 스타일 시트에 대 한 네트워크 리소스에 액세스 하는 데 필요한 자격 증명을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-292">An <xref:System.Xml.XmlUrlResolver> is passed to the <xref:System.Xml.Xsl.XslTransform.Load%2A> method which sets the credentials necessary to access the network resource for the included style sheet.</span></span>  
  
 [!code-csharp[XslTransform.Load2#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load2/CS/trans2.cs#1)]
 [!code-vb[XslTransform.Load2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load2/VB/trans2.vb#1)]  
  
 <span data-ttu-id="55afa-293">이 예제에서는 입력으로 다음과 같은 데이터 파일을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-293">The example uses the following data files as input.</span></span>  
  
 `books.xml`  
  
 [!code-xml[XslTransform.Load2#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/books.xml#2)]  
  
 `sort.xsl`  
  
 [!code-xml[XslTransform.Load2#3](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/sort.xsl#3)]  
  
 `includefile.xsl`  
  
 [!code-xml[XslTransform.Load2#4](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/includefile.xsl#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="55afa-294">로드된 리소스가 올바른 스타일시트가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-294">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="55afa-295">스타일시트에 포함 스크립트가 들어 있고 호출자에 <see langword="UnmanagedCode" /> 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="55afa-295">The style sheet contains embedded script, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="55afa-296">XSLT 스타일시트가 들어 있는 <see cref="T:System.Xml.XmlReader" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-296">An <see cref="T:System.Xml.XmlReader" /> object that contains the XSLT style sheet.</span></span></param>
        <param name="resolver"><span data-ttu-id="55afa-297"><c>xsl:import</c> 및 <c>xsl:include</c> 요소에서 참조된 모든 스타일시트를 로그하는 데 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-297">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="55afa-298">이 값이 <see langword="null" />이면 외부 리소스가 확인되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-298">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
 <span data-ttu-id="55afa-299"><see cref="T:System.Xml.XmlResolver" /> 메서드가 완료된 다음 <see cref="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" />가 캐시되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-299">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="55afa-300"><see cref="T:System.Xml.XmlReader" />에 포함된 XSLT 스타일시트를 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-300">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="55afa-301"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-301">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="55afa-302"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-302">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="55afa-303">자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 및 [마이그레이션 XslTransform 클래스에서](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-303">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="55afa-304"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-304"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="55afa-305">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-305">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="55afa-306">이 메서드는에서 참조 되는 모든 스타일 시트를 포함 하 여 XSLT 스타일 시트를 로드 `xsl:include` 및 `xsl:import` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-306">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="55afa-307">스타일 시트의 현재 노드로부터 로드는 <xref:System.Xml.XmlReader> 모든 자식을 통해 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-307">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="55afa-308">그러면 스타일 시트와 문서의 일부를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-308">This enables you to use a portion of a document as the style sheet.</span></span>  
  
 <span data-ttu-id="55afa-309">후의 <xref:System.Xml.Xsl.XslTransform.Load%2A> 메서드가 반환 되 면는 <xref:System.Xml.XmlReader> 스타일 시트의 끝 다음에 다음 노드에 배치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-309">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="55afa-310">문서 끝에 도달하면 <xref:System.Xml.XmlReader>가 EOF(파일 끝)에 배치됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-310">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
 <span data-ttu-id="55afa-311">지정 해야 하는 경우 스타일 시트 포함 엔터티는 <xref:System.Xml.XmlReader> 엔터티를 확인할 수 있는 (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> 반환 `true`).</span><span class="sxs-lookup"><span data-stu-id="55afa-311">If the style sheet contains entities, you should specify an <xref:System.Xml.XmlReader> that can resolve entities (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> returns `true`).</span></span> <span data-ttu-id="55afa-312">이 경우에 <xref:System.Xml.XmlValidatingReader> 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-312">In this case, an <xref:System.Xml.XmlValidatingReader> can be used.</span></span>  
  
 <span data-ttu-id="55afa-313">스타일 시트가 포함 된 스크립트가 들어 있는 경우 스크립트는 어셈블리에 컴파일됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-313">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="55afa-314">이 어셈블리가 완전히 신뢰 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-314">The assembly has full trust.</span></span> <span data-ttu-id="55afa-315">증명 정보를 사용 하 여 제공 하는 것이 좋습니다는 <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="55afa-315">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span> <span data-ttu-id="55afa-316">문제에 대 한는 <xref:System.Xml.Xsl.XslTransform.Load%2A> 포함 된 스크립트에 있는 메서드 및 스타일 시트 참조에서 Microsoft 기술 자료에서 문서 Q316755 http://support.microsoft.com합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-316">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="55afa-317">호출자에 게 없는 경우 `UnmanagedCode` 권한, 포함 된 스크립트는 컴파일되지 및 <xref:System.Security.SecurityException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-317">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="55afa-318">자세한 내용은 <xref:System.Security.Permissions.SecurityPermission> 및 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="55afa-318">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="55afa-319">현재 노드가 올바른 스타일시트에 맞지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-319">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="55afa-320">스타일시트에 포함 스크립트가 들어 있고 호출자에 <see langword="UnmanagedCode" /> 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-320">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="55afa-321"><see cref="T:System.Xml.XPath.IXPathNavigable" /> 인터페이스를 구현하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-321">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="55afa-322">.NET Framework에서 이 개체는 <see cref="T:System.Xml.XmlNode" />(대개 <see cref="T:System.Xml.XmlDocument" />) 또는 XSLT 스타일시트를 포함하는 <see cref="T:System.Xml.XPath.XPathDocument" />일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-322">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the XSLT style sheet.</span></span></param>
        <param name="resolver"><span data-ttu-id="55afa-323"><c>xsl:import</c> 및 <c>xsl:include</c> 요소에서 참조된 모든 스타일시트를 로그하는 데 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-323">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="55afa-324">이 값이 <see langword="null" />이면 외부 리소스가 확인되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-324">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
 <span data-ttu-id="55afa-325"><see cref="T:System.Xml.XmlResolver" /> 메서드가 완료된 다음 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />가 캐시되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-325">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <summary><span data-ttu-id="55afa-326"><see cref="T:System.Xml.XPath.IXPathNavigable" />에 포함된 XSLT 스타일시트를 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-326">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="55afa-327"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-327">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="55afa-328"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-328">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="55afa-329">자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 및 [마이그레이션 XslTransform 클래스에서](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-329">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="55afa-330"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-330"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="55afa-331">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-331">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="55afa-332">스타일 시트가 포함 된 스크립트가 들어 있는 경우 스크립트는 어셈블리에 컴파일됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-332">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="55afa-333">이 어셈블리가 완전히 신뢰 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-333">The assembly has full trust.</span></span> <span data-ttu-id="55afa-334">증명 정보를 사용 하 여 제공 하는 것이 좋습니다는 <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="55afa-334">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span> <span data-ttu-id="55afa-335">문제에 대 한는 <xref:System.Xml.Xsl.XslTransform.Load%2A> 포함 된 스크립트에 있는 메서드 및 스타일 시트 문서 Q316755에서 Microsoft 기술 자료에서 참조 http://support.microsoft.com합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-335">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="55afa-336">호출자에 게 없는 경우 `UnmanagedCode` 권한, 포함 된 스크립트는 컴파일되지 및 <xref:System.Security.SecurityException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-336">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="55afa-337">자세한 내용은 <xref:System.Security.Permissions.SecurityPermission> 및 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="55afa-337">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="55afa-338">로드된 리소스가 올바른 스타일시트가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-338">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="55afa-339">스타일시트에 포함 스크립트가 들어 있고 호출자에 <see langword="UnmanagedCode" /> 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-339">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XPathNavigator, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="55afa-340">XSLT 스타일시트가 들어 있는 <see cref="T:System.Xml.XPath.XPathNavigator" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-340">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object that contains the XSLT style sheet.</span></span></param>
        <param name="resolver"><span data-ttu-id="55afa-341"><c>xsl:import</c> 및 <c>xsl:include</c> 요소에서 참조된 모든 스타일시트를 로그하는 데 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-341">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="55afa-342">이 값이 <see langword="null" />이면 외부 리소스가 확인되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-342">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
 <span data-ttu-id="55afa-343"><see cref="T:System.Xml.XmlResolver" /> 메서드가 완료된 다음 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />가 캐시되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-343">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <summary><span data-ttu-id="55afa-344"><see cref="T:System.Xml.XPath.XPathNavigator" />에 포함된 XSLT 스타일시트를 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-344">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.XPathNavigator" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="55afa-345"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-345">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="55afa-346"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-346">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="55afa-347">자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 및 [마이그레이션 XslTransform 클래스에서](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-347">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="55afa-348"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-348"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="55afa-349">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-349">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="55afa-350">스타일 시트의 현재 위치에서 로드 되는 <xref:System.Xml.XPath.XPathNavigator>합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-350">The style sheet is loaded from the current position of the <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="55afa-351">로드 된 문서의 일부 스타일 시트를 사용 하려면 스타일 시트의 시작 부분에 해당 노드로 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-351">To use a portion of the loaded document as the style sheet, navigate to the node corresponding to the beginning of the style sheet.</span></span> <span data-ttu-id="55afa-352">후의 <xref:System.Xml.Xsl.XslTransform.Load%2A> 메서드가 반환 되 면는 <xref:System.Xml.XPath.XPathNavigator> 스타일 시트의 시작 부분에 배치 됩니다 (에 `xsl:style sheet` 노드).</span><span class="sxs-lookup"><span data-stu-id="55afa-352">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XPath.XPathNavigator> is positioned at the beginning of the style sheet (on the `xsl:style sheet` node).</span></span>  
  
 <span data-ttu-id="55afa-353">스타일 시트가 포함 된 스크립트가 들어 있는 경우 스크립트는 어셈블리에 컴파일됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-353">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="55afa-354">이 어셈블리가 완전히 신뢰 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-354">The assembly has full trust.</span></span> <span data-ttu-id="55afa-355">증명 정보를 사용 하 여 제공 하는 것이 좋습니다는 <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-355">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>.</span></span> <span data-ttu-id="55afa-356">문제에 대 한는 <xref:System.Xml.Xsl.XslTransform.Load%2A> 포함 된 스크립트에 있는 메서드 및 스타일 시트 문서 Q316755에서 Microsoft 기술 자료에서 참조 http://support.microsoft.com합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-356">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="55afa-357">호출자에 게 없는 경우 `UnmanagedCode` 권한, 포함 된 스크립트는 컴파일되지 및 <xref:System.Security.SecurityException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-357">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="55afa-358">자세한 내용은 <xref:System.Security.Permissions.SecurityPermission> 및 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="55afa-358">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="55afa-359">현재 노드가 올바른 스타일시트에 맞지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-359">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="55afa-360">스타일시트에 포함 스크립트가 들어 있고 호출자에 <see langword="UnmanagedCode" /> 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-360">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="55afa-361">로드할 스타일시트를 포함하는 <see cref="T:System.Xml.XmlReader" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-361">An <see cref="T:System.Xml.XmlReader" /> object containing the style sheet to load.</span></span></param>
        <param name="resolver"><span data-ttu-id="55afa-362"><c>xsl:import</c> 및 <c>xsl:include</c> 요소에서 참조된 모든 스타일시트를 로그하는 데 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-362">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="55afa-363">이 값이 <see langword="null" />이면 외부 리소스가 확인되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-363">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
 <span data-ttu-id="55afa-364"><see cref="T:System.Xml.XmlResolver" /> 메서드가 완료된 다음 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />가 캐시되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-364">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <param name="evidence"><span data-ttu-id="55afa-365">XSLT 스타일시트의 스크립트 블록에 대해 생성된 어셈블리에 설정된 <see cref="T:System.Security.Policy.Evidence" />입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-365">The <see cref="T:System.Security.Policy.Evidence" /> set on the assembly generated for the script block in the XSLT style sheet.</span></span>  
  
 <span data-ttu-id="55afa-366">이 값이 <see langword="null" />이면 스크립트 블록이 처리되지 않고, XSLT <c>document()</c> 함수가 지원되지 않으며, 권한이 필요한 확장 개체를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-366">If this is <see langword="null" />, script blocks are not processed, the XSLT <c>document()</c> function is not supported, and privileged extension objects are disallowed.</span></span>  
  
 <span data-ttu-id="55afa-367">스크립트 어셈블리에 대해 증명 정보를 제공하려면 호출자에게 <see langword="ControlEvidence" /> 권한이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-367">The caller must have <see langword="ControlEvidence" /> permission in order to supply evidence for the script assembly.</span></span> <span data-ttu-id="55afa-368">부분적으로 신뢰할 수 있는 호출자의 경우 이 매개 변수를 <see langword="null" />로 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-368">Semi-trusted callers can set this parameter to <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="55afa-369"><see cref="T:System.Xml.XmlReader" />에 포함된 XSLT 스타일시트를 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-369">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span></span> <span data-ttu-id="55afa-370">이 메서드를 사용하면 증명 정보를 지정하여 스타일시트의 권한을 제한할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-370">This method allows you to limit the permissions of the style sheet by specifying evidence.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="55afa-371"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-371">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="55afa-372"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-372">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="55afa-373">자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 및 [마이그레이션 XslTransform 클래스에서](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-373">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="55afa-374"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-374"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="55afa-375">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-375">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="55afa-376">이 메서드는에서 참조 되는 모든 스타일 시트를 포함 하 여 XSLT 스타일 시트를 로드 `xsl:include` 및 `xsl:import` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-376">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="55afa-377">스타일 시트의 현재 노드로부터 로드는 <xref:System.Xml.XmlReader> 모든 자식을 통해 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-377">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="55afa-378">그러면 스타일 시트와 문서의 일부를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-378">This enables you to use a portion of a document as the style sheet.</span></span>  
  
 <span data-ttu-id="55afa-379">후의 <xref:System.Xml.Xsl.XslTransform.Load%2A> 메서드가 반환 되 면는 <xref:System.Xml.XmlReader> 스타일 시트의 끝 다음에 다음 노드에 배치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-379">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="55afa-380">문서 끝에 도달하면 <xref:System.Xml.XmlReader>가 EOF(파일 끝)에 배치됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-380">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
 <span data-ttu-id="55afa-381">지정 해야 하는 경우 스타일 시트 포함 엔터티는 <xref:System.Xml.XmlReader> 엔터티를 확인할 수 있는 (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> 반환 `true`).</span><span class="sxs-lookup"><span data-stu-id="55afa-381">If the style sheet contains entities, you should specify an <xref:System.Xml.XmlReader> that can resolve entities (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> returns `true`).</span></span> <span data-ttu-id="55afa-382">이 경우에 <xref:System.Xml.XmlValidatingReader> 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-382">In this case, an <xref:System.Xml.XmlValidatingReader> can be used.</span></span>  
  
 <span data-ttu-id="55afa-383">문제에 대 한는 <xref:System.Xml.Xsl.XslTransform.Load%2A> 포함 된 스크립트에 있는 메서드 및 스타일 시트 문서 Q316755에서 Microsoft 기술 자료에서 참조 http://support.microsoft.com합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-383">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
 <span data-ttu-id="55afa-384">여러 가지 방법으로 증명 정보를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-384">There are different ways to provide evidence.</span></span> <span data-ttu-id="55afa-385">다음 표에서 어떤 유형의 일반적인 사용자 시나리오에 대 한 제공할 증명 정보를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-385">The following table describes what type of evidence to provide for common user scenarios.</span></span>  
  
    
  
## Examples  
 <span data-ttu-id="55afa-386">다음 예제에서는 XSLT 변환을 수행 여기서 `xsltReader` 는 <xref:System.Xml.XmlReader> 스타일 시트가 포함 된 및 `secureURL` 만드는 데 사용할 수 있는 신뢰할 수 있는 URL은 <xref:System.Security.Policy.Evidence>합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-386">The following example performs an XSLT transformation where `xsltReader` is an <xref:System.Xml.XmlReader> containing a style sheet and `secureURL` is a trusted URL that can be used to create <xref:System.Security.Policy.Evidence>.</span></span> <span data-ttu-id="55afa-387"><xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A?displayProperty=nameWithType> 메서드를 만드는 데는 <xref:System.Security.Policy.Evidence> 스타일 시트에 적용 되는 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-387">The <xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A?displayProperty=nameWithType> method is used to create <xref:System.Security.Policy.Evidence> which is applied to the style sheet.</span></span>  
  
 [!code-cpp[XslTransform.Load4#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Load4/CPP/trans_ev.cpp#1)]
 [!code-csharp[XslTransform.Load4#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load4/CS/trans_ev.cs#1)]
 [!code-vb[XslTransform.Load4#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load4/VB/trans_ev.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="55afa-388">현재 노드가 올바른 스타일시트에 맞지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-388">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="55afa-389">참조되는 스타일시트에는 제공된 증명 정보에서 허용하지 않는 기능이 필요한 경우</span><span class="sxs-lookup"><span data-stu-id="55afa-389">The referenced style sheet requires functionality that is not allowed by the evidence provided.</span></span>  
  
 <span data-ttu-id="55afa-390">호출자가 증명 정보를 제공하려 했지만 <see langword="ControlEvidence" /> 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="55afa-390">The caller tries to supply evidence and does not have <see langword="ControlEvidence" /> permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="55afa-391">증명 정보를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-391">for providing evidence.</span></span> <span data-ttu-id="55afa-392">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="55afa-392">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="55afa-393"><see cref="T:System.Xml.XPath.IXPathNavigable" /> 인터페이스를 구현하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-393">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="55afa-394">.NET Framework에서 이 개체는 <see cref="T:System.Xml.XmlNode" />(대개 <see cref="T:System.Xml.XmlDocument" />) 또는 XSLT 스타일시트를 포함하는 <see cref="T:System.Xml.XPath.XPathDocument" />일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-394">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the XSLT style sheet.</span></span></param>
        <param name="resolver"><span data-ttu-id="55afa-395"><c>xsl:import</c> 및 <c>xsl:include</c> 요소에서 참조된 모든 스타일시트를 로그하는 데 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-395">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="55afa-396">이 값이 <see langword="null" />이면 외부 리소스가 확인되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-396">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
 <span data-ttu-id="55afa-397"><see cref="T:System.Xml.XmlResolver" /> 메서드가 완료된 다음 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />가 캐시되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-397">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <param name="evidence"><span data-ttu-id="55afa-398">XSLT 스타일시트의 스크립트 블록에 대해 생성된 어셈블리에 설정된 <see cref="T:System.Security.Policy.Evidence" />입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-398">The <see cref="T:System.Security.Policy.Evidence" /> set on the assembly generated for the script block in the XSLT style sheet.</span></span>  
  
 <span data-ttu-id="55afa-399">이 값이 <see langword="null" />이면 스크립트 블록이 처리되지 않고, XSLT <c>document()</c> 함수가 지원되지 않으며, 권한이 필요한 확장 개체를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-399">If this is <see langword="null" />, script blocks are not processed, the XSLT <c>document()</c> function is not supported, and privileged extension objects are disallowed.</span></span>  
  
 <span data-ttu-id="55afa-400">스크립트 어셈블리에 대해 증명 정보를 제공하려면 호출자에게 <see langword="ControlEvidence" /> 권한이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-400">The caller must have <see langword="ControlEvidence" /> permission in order to supply evidence for the script assembly.</span></span> <span data-ttu-id="55afa-401">부분적으로 신뢰할 수 있는 호출자의 경우 이 매개 변수를 <see langword="null" />로 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-401">Semi-trusted callers can set this parameter to <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="55afa-402"><see cref="T:System.Xml.XPath.IXPathNavigable" />에 포함된 XSLT 스타일시트를 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-402">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</span></span> <span data-ttu-id="55afa-403">이 메서드를 사용하면 증명 정보를 지정하여 스타일시트의 권한을 제한할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-403">This method allows you to limit the permissions of the style sheet by specifying evidence.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="55afa-404"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-404">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="55afa-405"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-405">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="55afa-406">자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 및 [마이그레이션 XslTransform 클래스에서](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-406">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="55afa-407"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-407"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="55afa-408">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-408">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="55afa-409">문제에 대 한는 <xref:System.Xml.Xsl.XslTransform.Load%2A> 포함 된 스크립트에 있는 메서드 및 스타일 시트 문서 Q316755에서 Microsoft 기술 자료에서 참조 http://support.microsoft.com합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-409">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
 <span data-ttu-id="55afa-410">여러 가지 방법으로 증명 정보를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-410">There are different ways to provide evidence.</span></span> <span data-ttu-id="55afa-411">다음 표에서 어떤 유형의 일반적인 사용자 시나리오에 대 한 제공할 증명 정보를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-411">The following table describes what type of evidence to provide for common user scenarios.</span></span>  
  
  ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="55afa-412">로드된 리소스가 올바른 스타일시트가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-412">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="55afa-413">참조되는 스타일시트에는 제공된 증명 정보에서 허용하지 않는 기능이 필요한 경우</span><span class="sxs-lookup"><span data-stu-id="55afa-413">The referenced style sheet requires functionality that is not allowed by the evidence provided.</span></span>  
  
 <span data-ttu-id="55afa-414">호출자가 증명 정보를 제공하려 했지만 <see langword="ControlEvidence" /> 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="55afa-414">The caller tries to supply evidence and does not have <see langword="ControlEvidence" /> permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="55afa-415">증명 정보를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-415">for providing evidence.</span></span> <span data-ttu-id="55afa-416">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="55afa-416">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="55afa-417">로드할 스타일시트를 포함하는 <see cref="T:System.Xml.XPath.XPathNavigator" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-417">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object containing the style sheet to load.</span></span></param>
        <param name="resolver"><span data-ttu-id="55afa-418"><c>xsl:import</c> 및 <c>xsl:include</c> 요소에서 참조된 모든 스타일시트를 로그하는 데 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-418">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="55afa-419">이 값이 <see langword="null" />이면 외부 리소스가 확인되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-419">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
 <span data-ttu-id="55afa-420"><see cref="T:System.Xml.XmlResolver" /> 메서드가 완료된 다음 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />가 캐시되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-420">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <param name="evidence"><span data-ttu-id="55afa-421">XSLT 스타일시트의 스크립트 블록에 대해 생성된 어셈블리에 설정된 <see cref="T:System.Security.Policy.Evidence" />입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-421">The <see cref="T:System.Security.Policy.Evidence" /> set on the assembly generated for the script block in the XSLT style sheet.</span></span>  
  
 <span data-ttu-id="55afa-422">이 값이 <see langword="null" />이면 스크립트 블록이 처리되지 않고, XSLT <c>document()</c> 함수가 지원되지 않으며, 권한이 필요한 확장 개체를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-422">If this is <see langword="null" />, script blocks are not processed, the XSLT <c>document()</c> function is not supported, and privileged extension objects are disallowed.</span></span>  
  
 <span data-ttu-id="55afa-423">스크립트 어셈블리에 대해 증명 정보를 제공하려면 호출자에게 <see langword="ControlEvidence" /> 권한이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-423">The caller must have <see langword="ControlEvidence" /> permission in order to supply evidence for the script assembly.</span></span> <span data-ttu-id="55afa-424">부분적으로 신뢰할 수 있는 호출자의 경우 이 매개 변수를 <see langword="null" />로 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-424">Semi-trusted callers can set this parameter to <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="55afa-425"><see cref="T:System.Xml.XPath.XPathNavigator" />에 포함된 XSLT 스타일시트를 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-425">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.XPathNavigator" />.</span></span> <span data-ttu-id="55afa-426">이 메서드를 사용하면 증명 정보를 지정하여 스타일시트의 권한을 제한할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-426">This method allows you to limit the permissions of the style sheet by specifying evidence.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="55afa-427"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-427">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="55afa-428"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-428">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="55afa-429">자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 및 [마이그레이션 XslTransform 클래스에서](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-429">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="55afa-430"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-430"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="55afa-431">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-431">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="55afa-432">스타일 시트의 현재 위치에서 로드 되는 <xref:System.Xml.XPath.XPathNavigator>합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-432">The style sheet is loaded from the current position of the <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="55afa-433">로드 된 문서의 일부 스타일 시트를 사용 하려면 스타일 시트의 시작 부분에 해당 노드로 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-433">To use a portion of the loaded document as the style sheet, navigate to the node corresponding to the beginning of the style sheet.</span></span> <span data-ttu-id="55afa-434">후의 <xref:System.Xml.Xsl.XslTransform.Load%2A> 메서드가 반환 되 면는 <xref:System.Xml.XPath.XPathNavigator> 스타일 시트의 시작 부분에 배치 됩니다 (에 `xsl:style sheet` 노드).</span><span class="sxs-lookup"><span data-stu-id="55afa-434">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XPath.XPathNavigator> is positioned at the beginning of the style sheet (on the `xsl:style sheet` node).</span></span>  
  
 <span data-ttu-id="55afa-435">문제에 대 한는 <xref:System.Xml.Xsl.XslTransform.Load%2A> 포함 된 스크립트에 있는 메서드 및 스타일 시트 문서 Q316755에서 Microsoft 기술 자료에서 참조 http://support.microsoft.com합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-435">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
 <span data-ttu-id="55afa-436">여러 가지 방법으로 증명 정보를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-436">There are different ways to provide evidence.</span></span> <span data-ttu-id="55afa-437">다음 표에서 어떤 유형의 일반적인 사용자 시나리오에 대 한 제공할 증명 정보를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-437">The following table describes what type of evidence to provide for common user scenarios.</span></span>  
  
    
  
## Examples  
 <span data-ttu-id="55afa-438">다음 예제에서는 외부 소스에서 스타일 시트를 사용 하 여 XSLT 변환을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-438">The following example performs an XSLT transformation using a style sheet from an outside source.</span></span> <span data-ttu-id="55afa-439">신뢰할 수 없는 소스에서 스타일 시트를 가져온 때문에 `resolver` 및 `evidence` 매개 변수를 설정 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-439">Because the style sheet comes from an untrusted source, the `resolver` and `evidence` parameters are set to `null`.</span></span>  
  
 [!code-csharp[XslTransform.Load5#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load5/CS/trans_noev.cs#1)]
 [!code-vb[XslTransform.Load5#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load5/VB/trans_noev.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="55afa-440">현재 노드가 올바른 스타일시트에 맞지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-440">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="55afa-441">참조되는 스타일시트에는 제공된 증명 정보에서 허용하지 않는 기능이 필요한 경우</span><span class="sxs-lookup"><span data-stu-id="55afa-441">The referenced style sheet requires functionality that is not allowed by the evidence provided.</span></span>  
  
 <span data-ttu-id="55afa-442">호출자가 증명 정보를 제공하려 했지만 <see langword="ControlEvidence" /> 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="55afa-442">The caller tries to supply evidence and does not have <see langword="ControlEvidence" /> permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="55afa-443">증명 정보를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-443">for providing evidence.</span></span> <span data-ttu-id="55afa-444">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="55afa-444">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Transform">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="55afa-445">로드한 XSLT 스타일시트를 사용하여 XML 데이터를 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-445">Transforms the XML data using the loaded XSLT style sheet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="55afa-446"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-446">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="55afa-447"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-447">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="55afa-448">자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 및 [마이그레이션 XslTransform 클래스에서](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-448">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputfile, string outputfile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputfile, string outputfile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputfile As String, outputfile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputfile, System::String ^ outputfile);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputfile" Type="System.String" />
        <Parameter Name="outputfile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputfile"><span data-ttu-id="55afa-449">변환할 소스 문서의 URL입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-449">The URL of the source document to be transformed.</span></span></param>
        <param name="outputfile"><span data-ttu-id="55afa-450">출력 파일의 URL입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-450">The URL of the output file.</span></span></param>
        <summary><span data-ttu-id="55afa-451">입력 파일의 XML 데이터를 변환하고 그 결과를 출력 파일로 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-451">Transforms the XML data in the input file and outputs the result to an output file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="55afa-452"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-452">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="55afa-453"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-453">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="55afa-454">자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 및 [마이그레이션 XslTransform 클래스에서](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-454">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="55afa-455"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-455"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="55afa-456">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-456">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="55afa-457">이 메서드는.NET Framework의 버전 1.1에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-457">This method is obsolete in version 1.1 of the .NET Framework.</span></span> <span data-ttu-id="55afa-458">설정에서 <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> 속성 결정 방법을 XSLT `document()` 함수는 해결 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-458">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="55afa-459">사용 하는 것이 좋습니다는 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 사용 메서드는 <xref:System.Xml.XmlResolver> 개체를 해당 인수의 하나로 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-459">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="55afa-460">다음 예제에서는 변환는 `books.xml` 사용 하 여 파일의 `output.xsl` 스타일 시트에 결과 출력 하 고는 `books.html` 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-460">The following example transforms the `books.xml` file using the `output.xsl` style sheet and outputs the results to the `books.html` file.</span></span>  
  
 [!code-cpp[XslTransform.Transform3#1](~/samples/snippets/cpp/VS_Snippets_Data/xsltransform.transform3/CPP/trans_snip2.cpp#1)]
 [!code-csharp[XslTransform.Transform3#1](~/samples/snippets/csharp/VS_Snippets_Data/xsltransform.transform3/CS/trans_snip2.cs#1)]
 [!code-vb[XslTransform.Transform3#1](~/samples/snippets/visualbasic/VS_Snippets_Data/xsltransform.transform3/VB/trans_snip2.vb#1)]  
  
 <span data-ttu-id="55afa-461">이 샘플에서는 다음과 같은 두 개의 입력된 파일을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-461">The sample uses the following two input files:</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As IXPathNavigable, args As XsltArgumentList) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="55afa-462"><see cref="T:System.Xml.XPath.IXPathNavigable" /> 인터페이스를 구현하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-462">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="55afa-463">.NET Framework에서 이 개체는 변환할 데이터를 포함하는 <see cref="T:System.Xml.XmlNode" />(대개 <see cref="T:System.Xml.XmlDocument" />) 또는 <see cref="T:System.Xml.XPath.XPathDocument" />일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-463">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="55afa-464">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-464">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <summary><span data-ttu-id="55afa-465">지정된 <paramref name="args" />를 사용하여 <see cref="T:System.Xml.XPath.IXPathNavigable" />의 XML 데이터를 변환하고 그 결과를 <see cref="T:System.Xml.XmlReader" />로 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-465">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="55afa-466">변환 결과가 들어 있는 <see cref="T:System.Xml.XmlReader" />입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-466">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="55afa-467"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-467">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="55afa-468"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-468">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="55afa-469">자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 및 [마이그레이션 XslTransform 클래스에서](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-469">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="55afa-470"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-470"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="55afa-471">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-471">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="55afa-472">이 메서드는 더 이상 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-472">This method is now obsolete.</span></span> <span data-ttu-id="55afa-473">설정에서 <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> 속성 결정 방법을 XSLT `document()` 함수는 해결 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-473">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="55afa-474">사용 하는 것이 좋습니다는 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 사용 메서드는 <xref:System.Xml.XmlResolver> 개체를 해당 인수의 하나로 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-474">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="55afa-475">`args` 와 일치는 `xsl:param` 스타일 시트에 정의 된 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-475">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="55afa-476">`xsl:output` 에 출력할 때 요소가 지원 되지 않습니다는 <xref:System.Xml.XmlReader> (의 `xsl:output` 요소는 무시 됩니다).</span><span class="sxs-lookup"><span data-stu-id="55afa-476">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlReader> (the `xsl:output` element is ignored).</span></span> <span data-ttu-id="55afa-477">참조 [XslTransform 출력](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) 자세한 정보에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-477">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="55afa-478">이 메서드를 사용 하면 소스 문서의 비동기 변환을 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-478">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
 <span data-ttu-id="55afa-479">변형은 문서 전체에 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-479">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="55afa-480">즉, 문서 루트 노드 이외의 노드에 전달해도 변환 프로세스에서 로드된 문서의 모든 노드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-480">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="55afa-481">노드 조각을 변형 하려면 만들어야는 <xref:System.Xml.XmlDocument> 조각 노드만 포함 하 고 전달 하는 <xref:System.Xml.XmlDocument> 에 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="55afa-481">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="55afa-482">다음 예에서는 노드 조각에 대해 변형을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-482">The following example performs a transformation on a node fragment.</span></span>  
  
```  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="55afa-483">이 예제에서는 사용은 `library.xml` 및 `print_root.xsl` 파일을 입력으로 코드를 다음 콘솔에 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-483">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```  
<style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</style sheet>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As XPathNavigator, args As XsltArgumentList) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="55afa-484">변환할 데이터를 포함하는 <see cref="T:System.Xml.XPath.XPathNavigator" />입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-484">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="55afa-485">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-485">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <summary><span data-ttu-id="55afa-486">지정된 <paramref name="args" />를 사용하여 <see cref="T:System.Xml.XPath.XPathNavigator" />의 XML 데이터를 변환하고 그 결과를 <see cref="T:System.Xml.XmlReader" />로 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-486">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="55afa-487">변환 결과가 들어 있는 <see cref="T:System.Xml.XmlReader" />입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-487">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="55afa-488"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-488">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="55afa-489"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-489">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="55afa-490">자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 및 [마이그레이션 XslTransform 클래스에서](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-490">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="55afa-491"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-491"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="55afa-492">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-492">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="55afa-493">`args` 와 일치는 `xsl:param` 스타일 시트에 정의 된 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-493">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="55afa-494">변환은 문서에 전체적으로 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-494">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="55afa-495">즉, 문서 루트 노드 이외의 노드 트리에 현재 노드에 설정 되어이 해도 변형 프로세스에서 로드 된 문서의 모든 노드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-495">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="55afa-496">변환 수행 후는 <xref:System.Xml.XPath.XPathNavigator> 는 원래 상태로 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-496">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="55afa-497">즉 노드 전의 변환 프로세스를 유지 한 후 현재 노드는 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 메서드가 호출 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-497">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="55afa-498">때문에 <xref:System.Xml.XmlReader> 읽기 전용 출력 제공는 `xsl:output` 요소는 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-498">Because <xref:System.Xml.XmlReader> provides read-only output, the `xsl:output` element is ignored.</span></span> <span data-ttu-id="55afa-499">참조 [XslTransform 출력](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) 자세한 정보에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-499">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="55afa-500">이 메서드를 사용 하면 소스 문서의 비동기 변환을 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-500">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="55afa-501">이 메서드는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-501">This method is obsolete.</span></span> <span data-ttu-id="55afa-502">설정에서 <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> 속성 XSLT document () 함수를 해결 하는 방법을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-502">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT document() function is resolved.</span></span> <span data-ttu-id="55afa-503">사용 하는 것이 좋습니다는 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 사용 메서드는 <xref:System.Xml.XmlResolver> 개체를 해당 인수의 하나로 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-503">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="55afa-504">XSLT 변환을 처리하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="55afa-504">There was an error processing the XSLT transformation.</span></span>  
  
 <span data-ttu-id="55afa-505">참고: 이는 이전 버전에서 업그레이드되면서 변경된 동작입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-505">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="55afa-506">Microsoft .NET Framework version 1.1이나 그 이전 버전을 사용할 경우에는 <see cref="T:System.Xml.Xsl.XsltException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-506">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputfile, string outputfile, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputfile, string outputfile, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputfile As String, outputfile As String, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputfile, System::String ^ outputfile, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputfile" Type="System.String" />
        <Parameter Name="outputfile" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="inputfile"><span data-ttu-id="55afa-507">변환할 소스 문서의 URL입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-507">The URL of the source document to be transformed.</span></span></param>
        <param name="outputfile"><span data-ttu-id="55afa-508">출력 파일의 URL입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-508">The URL of the output file.</span></span></param>
        <param name="resolver"><span data-ttu-id="55afa-509">XSLT <c>document()</c> 함수 확인에 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-509">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="55afa-510">이 값이 <see langword="null" />이면 <c>document()</c> 함수가 확인되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-510">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
 <span data-ttu-id="55afa-511"><see cref="T:System.Xml.XmlResolver" /> 메서드가 완료된 다음 <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />가 캐시되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-511">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> method completes.</span></span></param>
        <summary><span data-ttu-id="55afa-512">입력 파일의 XML 데이터를 변환하고 그 결과를 출력 파일로 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-512">Transforms the XML data in the input file and outputs the result to an output file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="55afa-513"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-513">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="55afa-514"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-514">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="55afa-515">자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 및 [마이그레이션 XslTransform 클래스에서](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-515">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="55afa-516"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-516"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="55afa-517">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-517">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="55afa-518">다음 예제에서는 XSLT 변환을 수행 하 고 파일에 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-518">The following example performs an XSLT transformation and outputs to a file.</span></span> <span data-ttu-id="55afa-519"><xref:System.Xml.XmlUrlResolver> 자격 증명을 사용 하 여 기본 외부 리소스를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-519">An <xref:System.Xml.XmlUrlResolver> with default credentials is used resolve an external resources.</span></span> <span data-ttu-id="55afa-520">자세한 내용은 <xref:System.Net.CredentialCache.DefaultCredentials%2A>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="55afa-520">See <xref:System.Net.CredentialCache.DefaultCredentials%2A> for details.</span></span>  
  
 [!code-cpp[XslTransform.Transform7#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTRansform.Transform7/CPP/trans_snip4.cpp#1)]
 [!code-csharp[XslTransform.Transform7#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTRansform.Transform7/CS/trans_snip4.cs#1)]
 [!code-vb[XslTransform.Transform7#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTRansform.Transform7/VB/trans_snip4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="55afa-521"><see cref="T:System.Xml.XPath.IXPathNavigable" /> 인터페이스를 구현하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-521">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="55afa-522">.NET Framework에서 이 개체는 변환할 데이터를 포함하는 <see cref="T:System.Xml.XmlNode" />(대개 <see cref="T:System.Xml.XmlDocument" />) 또는 <see cref="T:System.Xml.XPath.XPathDocument" />일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-522">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="55afa-523">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-523">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="55afa-524">출력할 대상 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-524">The stream to which you want to output.</span></span></param>
        <summary><span data-ttu-id="55afa-525">지정된 <paramref name="args" />를 사용하여 <see cref="T:System.Xml.XPath.IXPathNavigable" />의 XML 데이터를 변환하고 그 결과를 <see cref="T:System.IO.Stream" />로 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-525">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="55afa-526"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-526">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="55afa-527"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-527">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="55afa-528">자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 및 [마이그레이션 XslTransform 클래스에서](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-528">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="55afa-529"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-529"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="55afa-530">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-530">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="55afa-531">이 메서드는 더 이상 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-531">This method is now obsolete.</span></span> <span data-ttu-id="55afa-532">설정에서 <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> 속성 결정 방법을 XSLT `document()` 함수는 해결 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-532">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="55afa-533">사용 하는 것이 좋습니다는 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 사용 메서드는 <xref:System.Xml.XmlResolver> 개체를 해당 인수의 하나로 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-533">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="55afa-534">`args` 와 일치는 `xsl:param` 스타일 시트에 정의 된 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-534">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="55afa-535">변환은 문서 전체에 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-535">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="55afa-536">즉, 문서 루트 노드 이외의 노드에 전달해도 변환 프로세스에서 로드된 문서의 모든 노드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-536">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="55afa-537">노드 조각을 변형 하려면 만들어야는 <xref:System.Xml.XmlDocument> 조각 노드만 포함 하 고 전달 하는 <xref:System.Xml.XmlDocument> 에 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="55afa-537">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="55afa-538">다음 예에서는 노드 조각에 대해 변형을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-538">The following example performs a transformation on a node fragment.</span></span>  
  
```  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="55afa-539">이 예제에서는 사용은 `library.xml` 및 `print_root.xsl` 파일을 입력으로 코드를 다음 콘솔에 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-539">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```  
<style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</style sheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="55afa-540">XSLT 변환을 처리하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="55afa-540">There was an error processing the XSLT transformation.</span></span>  
  
 <span data-ttu-id="55afa-541">참고: 이는 이전 버전에서 업그레이드되면서 변경된 동작입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-541">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="55afa-542">Microsoft .NET Framework version 1.1이나 그 이전 버전을 사용할 경우에는 <see cref="T:System.Xml.Xsl.XsltException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-542">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="55afa-543"><see cref="T:System.Xml.XPath.IXPathNavigable" /> 인터페이스를 구현하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-543">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="55afa-544">.NET Framework에서 이 개체는 변환할 데이터를 포함하는 <see cref="T:System.Xml.XmlNode" />(대개 <see cref="T:System.Xml.XmlDocument" />) 또는 <see cref="T:System.Xml.XPath.XPathDocument" />일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-544">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="55afa-545">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-545">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="55afa-546">출력을 제공할 대상 <see cref="T:System.IO.TextWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-546">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span></span></param>
        <summary><span data-ttu-id="55afa-547">지정된 <paramref name="args" />를 사용하여 <see cref="T:System.Xml.XPath.IXPathNavigable" />의 XML 데이터를 변환하고 그 결과를 <see cref="T:System.IO.TextWriter" />로 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-547">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="55afa-548"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-548">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="55afa-549"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-549">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="55afa-550">자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 및 [마이그레이션 XslTransform 클래스에서](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-550">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="55afa-551"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-551"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="55afa-552">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-552">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="55afa-553">이 메서드는 더 이상 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-553">This method is now obsolete.</span></span> <span data-ttu-id="55afa-554">설정에서 <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> 속성 결정 방법을 XSLT `document()` 함수는 해결 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-554">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="55afa-555">사용 하는 것이 좋습니다는 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 사용 메서드는 <xref:System.Xml.XmlResolver> 개체를 해당 인수의 하나로 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-555">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="55afa-556">`args` 와 일치는 `xsl:param` 스타일 시트에 정의 된 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-556">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="55afa-557">인코딩 특성이 `xsl:output` 에 출력할 때 요소가 지원 되지 않습니다는 <xref:System.IO.TextWriter>합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-557">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="55afa-558">참조 [XslTransform 출력](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) 기반이 비슷하므로 `xsl:output` 특성은 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-558">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
 <span data-ttu-id="55afa-559">변형은 문서 전체에 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-559">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="55afa-560">즉, 문서 루트 노드 이외의 노드에 전달해도 변환 프로세스에서 로드된 문서의 모든 노드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-560">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="55afa-561">노드 조각을 변형 하려면 만들어야 합니다는 <xref:System.Xml.XmlDocument> 조각화, 되 고 전달 하는 노드만 포함 된 <xref:System.Xml.XmlDocument> 에 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="55afa-561">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment, and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="55afa-562">다음 예에서는 노드 조각에 대해 변형을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-562">The following example performs a transformation on a node fragment.</span></span>  
  
```  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="55afa-563">이 예제에서는 사용은 `library.xml` 및 `print_root.xsl` 파일을 입력으로 코드를 다음 콘솔에 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-563">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```  
<style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</style sheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="55afa-564">XSLT 변환을 처리하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="55afa-564">There was an error processing the XSLT transformation.</span></span>  
  
 <span data-ttu-id="55afa-565">참고: 이는 이전 버전에서 업그레이드되면서 변경된 동작입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-565">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="55afa-566">Microsoft .NET Framework version 1.1이나 그 이전 버전을 사용할 경우에는 <see cref="T:System.Xml.Xsl.XsltException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-566">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As IXPathNavigable, args As XsltArgumentList, resolver As XmlResolver) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="55afa-567"><see cref="T:System.Xml.XPath.IXPathNavigable" /> 인터페이스를 구현하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-567">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="55afa-568">.NET Framework에서 이 개체는 변환할 데이터를 포함하는 <see cref="T:System.Xml.XmlNode" />(대개 <see cref="T:System.Xml.XmlDocument" />) 또는 <see cref="T:System.Xml.XPath.XPathDocument" />일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-568">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="55afa-569">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-569">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="resolver"><span data-ttu-id="55afa-570">XSLT <c>document()</c> 함수 확인에 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-570">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="55afa-571">이 값이 <see langword="null" />이면 <c>document()</c> 함수가 확인되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-571">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
 <span data-ttu-id="55afa-572"><see cref="T:System.Xml.XmlResolver" /> 메서드가 완료된 다음 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />가 캐시되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-572">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="55afa-573">지정된 <paramref name="args" />를 사용하여 <see cref="T:System.Xml.XPath.IXPathNavigable" />의 XML 데이터를 변환하고 그 결과를 <see cref="T:System.Xml.XmlReader" />로 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-573">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="55afa-574">변환 결과가 들어 있는 <see cref="T:System.Xml.XmlReader" />입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-574">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="55afa-575"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-575">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="55afa-576"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-576">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="55afa-577">자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 및 [마이그레이션 XslTransform 클래스에서](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-577">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="55afa-578"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-578"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="55afa-579">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-579">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="55afa-580">`args` 와 일치는 `xsl:param` 스타일 시트에 정의 된 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-580">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="55afa-581">`xsl:output` 에 출력할 때 요소가 지원 되지 않습니다는 <xref:System.Xml.XmlReader> (의 `xsl:output` 요소는 무시 됩니다).</span><span class="sxs-lookup"><span data-stu-id="55afa-581">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlReader> (the `xsl:output` element is ignored).</span></span> <span data-ttu-id="55afa-582">참조 [XslTransform 출력](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) 자세한 정보에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-582">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="55afa-583">이 메서드를 사용 하면 소스 문서의 비동기 변환을 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-583">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
 <span data-ttu-id="55afa-584">변형은 문서 전체에 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-584">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="55afa-585">즉, 문서 루트 노드 이외의 노드에 전달해도 변환 프로세스에서 로드된 문서의 모든 노드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-585">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="55afa-586">노드 조각을 변형 하려면 만들어야 합니다는 <xref:System.Xml.XmlDocument> 조각화, 되 고 전달 하는 노드만 포함 된 <xref:System.Xml.XmlDocument> 에 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="55afa-586">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment, and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="55afa-587">다음 예에서는 노드 조각에 대해 변형을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-587">The following example performs a transformation on a node fragment.</span></span>  
  
```  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="55afa-588">이 예제에서는 사용은 `library.xml` 및 `print_root.xsl` 파일을 입력으로 코드를 다음 콘솔에 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-588">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```  
<style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</style sheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="55afa-589">다음 예제에서는 XML 문서를 변환 하 고 결과를 출력 한 `XmlReader`합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-589">The following example transforms an XML document and outputs the results to an `XmlReader`.</span></span> <span data-ttu-id="55afa-590"><xref:System.Xml.XmlUrlResolver> 필요한 자격 증명을 사용 하 여 XSLT 처리 `document()` 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-590">An <xref:System.Xml.XmlUrlResolver> with the necessary credentials is used to process any XSLT `document()` functions.</span></span>  
  
 [!code-cpp[XslTransform.Transform4#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Transform4/CPP/trans_snip3.cpp#1)]
 [!code-csharp[XslTransform.Transform4#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform4/CS/trans_snip3.cs#1)]
 [!code-vb[XslTransform.Transform4#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform4/VB/trans_snip3.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="55afa-591"><see cref="T:System.Xml.XPath.IXPathNavigable" /> 인터페이스를 구현하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-591">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="55afa-592">.NET Framework에서 이 개체는 변환할 데이터를 포함하는 <see cref="T:System.Xml.XmlNode" />(대개 <see cref="T:System.Xml.XmlDocument" />) 또는 <see cref="T:System.Xml.XPath.XPathDocument" />일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-592">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="55afa-593">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-593">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="55afa-594">출력을 제공할 대상 <see cref="T:System.Xml.XmlWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-594">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span></param>
        <summary><span data-ttu-id="55afa-595">지정된 <paramref name="args" />를 사용하여 <see cref="T:System.Xml.XPath.IXPathNavigable" />의 XML 데이터를 변환하고 그 결과를 <see cref="T:System.Xml.XmlWriter" />로 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-595">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="55afa-596"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-596">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="55afa-597"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-597">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="55afa-598">자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 및 [마이그레이션 XslTransform 클래스에서](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-598">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="55afa-599"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-599"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="55afa-600">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-600">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="55afa-601">이 메서드는 더 이상 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-601">This method is now obsolete.</span></span> <span data-ttu-id="55afa-602">설정에서 <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> 속성 결정 방법을 XSLT `document()` 함수는 해결 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-602">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="55afa-603">사용 하는 것이 좋습니다는 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 사용 메서드는 <xref:System.Xml.XmlResolver> 개체를 해당 인수의 하나로 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-603">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="55afa-604">`args` 와 일치는 `xsl:param` 스타일 시트에 정의 된 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-604">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="55afa-605">`xsl:output` 에 출력할 때 요소가 지원 되지 않습니다는 <xref:System.Xml.XmlWriter> (`xsl:output` 는 무시 됩니다).</span><span class="sxs-lookup"><span data-stu-id="55afa-605">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="55afa-606">참조 [XslTransform 출력](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) 자세한 정보에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-606">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="55afa-607">변형은 문서 전체에 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-607">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="55afa-608">즉, 문서 루트 노드 이외의 노드에 전달해도 변환 프로세스에서 로드된 문서의 모든 노드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-608">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="55afa-609">노드 조각을 변형 하려면 만들어야는 <xref:System.Xml.XmlDocument> 조각 노드만 포함 하 고 전달 하는 <xref:System.Xml.XmlDocument> 에 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="55afa-609">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="55afa-610">다음 예에서는 노드 조각에 대해 변형을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-610">The following example performs a transformation on a node fragment.</span></span>  
  
```  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="55afa-611">이 예제에서는 사용은 `library.xml` 및 `print_root.xsl` 파일을 입력으로 코드를 다음 콘솔에 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-611">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```  
<style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />  
  <template match="/">  
  Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</style sheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="55afa-612">XSLT 변환을 처리하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="55afa-612">There was an error processing the XSLT transformation.</span></span>  
  
 <span data-ttu-id="55afa-613">참고: 이는 이전 버전에서 업그레이드되면서 변경된 동작입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-613">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="55afa-614">Microsoft .NET Framework version 1.1이나 그 이전 버전을 사용할 경우에는 <see cref="T:System.Xml.Xsl.XsltException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-614">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="55afa-615">변환할 데이터를 포함하는 <see cref="T:System.Xml.XPath.XPathNavigator" />입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-615">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="55afa-616">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-616">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="55afa-617">출력할 대상 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-617">The stream to which you want to output.</span></span></param>
        <summary><span data-ttu-id="55afa-618">지정된 <paramref name="args" />를 사용하여 <see cref="T:System.Xml.XPath.XPathNavigator" />의 XML 데이터를 변환하고 그 결과를 <see cref="T:System.IO.Stream" />로 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-618">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="55afa-619"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-619">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="55afa-620"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-620">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="55afa-621">자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 및 [마이그레이션 XslTransform 클래스에서](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-621">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="55afa-622"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-622"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="55afa-623">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-623">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="55afa-624">`args` 와 일치는 `xsl:param` 스타일 시트에 정의 된 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-624">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="55afa-625">변환은 문서에 전체적으로 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-625">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="55afa-626">즉, 문서 루트 노드 이외의 노드 트리에 현재 노드에 설정 되어이 해도 변형 프로세스에서 로드 된 문서의 모든 노드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-626">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="55afa-627">변환 수행 후는 <xref:System.Xml.XPath.XPathNavigator> 는 원래 상태로 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-627">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="55afa-628">즉 노드 전의 변환 프로세스를 유지 한 후 현재 노드는 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 메서드가 호출 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-628">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="55afa-629">참조 [XslTransform 출력](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) 기반이 비슷하므로 `xsl:output` 특성은 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-629">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="55afa-630">이 메서드는 더 이상 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-630">This method is now obsolete.</span></span> <span data-ttu-id="55afa-631">설정에서 <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> 속성 결정 방법을 XSLT `document()` 함수는 해결 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-631">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="55afa-632">사용 하는 것이 좋습니다는 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 사용 메서드는 <xref:System.Xml.XmlResolver> 개체를 해당 인수의 하나로 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-632">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="55afa-633">XSLT 변환을 처리하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="55afa-633">There was an error processing the XSLT transformation.</span></span>  
  
 <span data-ttu-id="55afa-634">참고: 이는 이전 버전에서 업그레이드되면서 변경된 동작입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-634">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="55afa-635">Microsoft .NET Framework version 1.1이나 그 이전 버전을 사용할 경우에는 <see cref="T:System.Xml.Xsl.XsltException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-635">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="55afa-636">변환할 데이터를 포함하는 <see cref="T:System.Xml.XPath.XPathNavigator" />입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-636">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="55afa-637">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-637">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="55afa-638">출력을 제공할 대상 <see cref="T:System.IO.TextWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-638">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span></span></param>
        <summary><span data-ttu-id="55afa-639">지정된 <paramref name="args" />를 사용하여 <see cref="T:System.Xml.XPath.XPathNavigator" />의 XML 데이터를 변환하고 그 결과를 <see cref="T:System.IO.TextWriter" />로 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-639">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="55afa-640"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-640">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="55afa-641"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-641">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="55afa-642">자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 및 [마이그레이션 XslTransform 클래스에서](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-642">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="55afa-643"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-643"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="55afa-644">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-644">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="55afa-645">`args` 와 일치는 `xsl:param` 스타일 시트에 정의 된 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-645">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="55afa-646">변환은 문서에 전체적으로 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-646">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="55afa-647">즉, 문서 루트 노드 이외의 노드 트리에 현재 노드에 설정 되어이 해도 변형 프로세스에서 로드 된 문서의 모든 노드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-647">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="55afa-648">변환 수행 된 후의 <xref:System.Xml.XPath.XPathNavigator> 는 원래 상태로 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-648">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="55afa-649">즉 노드 전의 변환 프로세스를 유지 한 후 현재 노드는 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 메서드가 호출 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-649">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="55afa-650">인코딩 특성이 `xsl:output` 에 출력할 때 요소가 지원 되지 않습니다는 <xref:System.IO.TextWriter>합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-650">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="55afa-651">참조 [XslTransform 출력](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) 기반이 비슷하므로 `xsl:output` 특성은 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-651">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="55afa-652">이 메서드는 더 이상 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-652">This method is now obsolete.</span></span> <span data-ttu-id="55afa-653">설정에서 <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> 속성 결정 방법을 XSLT `document()` 함수는 해결 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-653">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="55afa-654">사용 하는 것이 좋습니다는 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 사용 메서드는 <xref:System.Xml.XmlResolver> 개체를 해당 인수의 하나로 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-654">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="55afa-655">XSLT 변환을 처리하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="55afa-655">There was an error processing the XSLT transformation.</span></span>  
  
 <span data-ttu-id="55afa-656">참고: 이는 이전 버전에서 업그레이드되면서 변경된 동작입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-656">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="55afa-657">Microsoft .NET Framework version 1.1이나 그 이전 버전을 사용할 경우에는 <see cref="T:System.Xml.Xsl.XsltException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-657">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As XPathNavigator, args As XsltArgumentList, resolver As XmlResolver) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="55afa-658">변환할 데이터를 포함하는 <see cref="T:System.Xml.XPath.XPathNavigator" />입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-658">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="55afa-659">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-659">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="resolver"><span data-ttu-id="55afa-660">XSLT <c>document()</c> 함수 확인에 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-660">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="55afa-661">이 값이 <see langword="null" />이면 <c>document()</c> 함수가 확인되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-661">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
 <span data-ttu-id="55afa-662"><see cref="T:System.Xml.XmlResolver" /> 메서드가 완료된 다음 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />가 캐시되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-662">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="55afa-663">지정된 <paramref name="args" />를 사용하여 <see cref="T:System.Xml.XPath.XPathNavigator" />의 XML 데이터를 변환하고 그 결과를 <see cref="T:System.Xml.XmlReader" />로 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-663">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="55afa-664">변환 결과가 들어 있는 <see cref="T:System.Xml.XmlReader" />입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-664">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="55afa-665"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-665">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="55afa-666"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-666">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="55afa-667">자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 및 [마이그레이션 XslTransform 클래스에서](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-667">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="55afa-668"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-668"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="55afa-669">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-669">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="55afa-670">`args` 와 일치는 `xsl:param` 스타일 시트에 정의 된 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-670">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="55afa-671">변환은 문서에 전체적으로 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-671">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="55afa-672">즉, 문서 루트 노드 이외의 노드 트리에 현재 노드에 설정 되어이 해도 변형 프로세스에서 로드 된 문서의 모든 노드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-672">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="55afa-673">변환 수행 후는 <xref:System.Xml.XPath.XPathNavigator> 는 원래 상태로 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-673">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="55afa-674">즉 노드 전의 변환 프로세스를 유지 한 후 현재 노드는 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 메서드가 호출 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-674">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="55afa-675">때문에 <xref:System.Xml.XmlReader> 읽기 전용 출력 제공는 `xsl:output` 요소는 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-675">Because <xref:System.Xml.XmlReader> provides read-only output, the `xsl:output` element is ignored.</span></span> <span data-ttu-id="55afa-676">참조 [XslTransform 출력](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) 자세한 정보에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-676">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="55afa-677">이 메서드를 사용 하면 소스 문서의 비동기 변환을 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-677">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="55afa-678">XSLT 변환을 처리하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="55afa-678">There was an error processing the XSLT transformation.</span></span>  
  
 <span data-ttu-id="55afa-679">참고: 이는 이전 버전에서 업그레이드되면서 변경된 동작입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-679">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="55afa-680">Microsoft .NET Framework version 1.1이나 그 이전 버전을 사용할 경우에는 <see cref="T:System.Xml.Xsl.XsltException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-680">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="55afa-681">변환할 데이터를 포함하는 <see cref="T:System.Xml.XPath.XPathNavigator" />입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-681">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="55afa-682">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-682">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="55afa-683">출력을 제공할 대상 <see cref="T:System.Xml.XmlWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-683">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span></param>
        <summary><span data-ttu-id="55afa-684">지정된 인수를 사용하여 <see cref="T:System.Xml.XPath.XPathNavigator" />의 XML 데이터를 변환하고 그 결과를 <see cref="T:System.Xml.XmlWriter" />로 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-684">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified args and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="55afa-685"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-685">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="55afa-686"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-686">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="55afa-687">자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 및 [마이그레이션 XslTransform 클래스에서](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-687">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="55afa-688"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-688"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="55afa-689">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-689">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="55afa-690">`args` 와 일치는 `xsl:param` 스타일 시트에 정의 된 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-690">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="55afa-691">변환은 문서에 전체적으로 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-691">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="55afa-692">즉, 문서 루트 노드 이외의 노드 트리에 현재 노드에 설정 되어이 해도 변형 프로세스에서 로드 된 문서의 모든 노드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-692">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="55afa-693">변환 수행 된 후의 <xref:System.Xml.XPath.XPathNavigator> 는 원래 상태로 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-693">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="55afa-694">즉 변환 프로세스 하기 전에 현재 있는 노드를 유지 한 후 현재 노드는 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 메서드가 호출 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-694">This means that the node, that is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="55afa-695">`xsl:output` 에 출력할 때 요소가 지원 되지 않습니다는 <xref:System.Xml.XmlWriter> (`xsl:output` 는 무시 됩니다).</span><span class="sxs-lookup"><span data-stu-id="55afa-695">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="55afa-696">참조 [XslTransform 출력](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) 자세한 정보에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-696">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="55afa-697">이 메서드는 더 이상 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-697">This method is now obsolete.</span></span> <span data-ttu-id="55afa-698">설정에서 <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> 속성 결정 방법을 XSLT `document()` 함수는 해결 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-698">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="55afa-699">사용 하는 것이 좋습니다는 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 사용 메서드는 <xref:System.Xml.XmlResolver> 개체를 해당 인수의 하나로 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-699">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="55afa-700">XSLT 변환을 처리하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="55afa-700">There was an error processing the XSLT transformation.</span></span>  
  
 <span data-ttu-id="55afa-701">참고: 이는 이전 버전에서 업그레이드되면서 변경된 동작입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-701">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="55afa-702">Microsoft .NET Framework version 1.1이나 그 이전 버전을 사용할 경우에는 <see cref="T:System.Xml.Xsl.XsltException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-702">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As Stream, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="55afa-703"><see cref="T:System.Xml.XPath.IXPathNavigable" /> 인터페이스를 구현하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-703">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="55afa-704">.NET Framework에서 이 개체는 변환할 데이터를 포함하는 <see cref="T:System.Xml.XmlNode" />(대개 <see cref="T:System.Xml.XmlDocument" />) 또는 <see cref="T:System.Xml.XPath.XPathDocument" />일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-704">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="55afa-705">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-705">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="55afa-706">출력할 대상 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-706">The stream to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="55afa-707">XSLT <c>document()</c> 함수 확인에 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-707">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="55afa-708">이 값이 <see langword="null" />이면 <c>document()</c> 함수가 확인되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-708">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
 <span data-ttu-id="55afa-709"><see cref="T:System.Xml.XmlResolver" /> 메서드가 완료된 다음 <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />가 캐시되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-709">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> method completes.</span></span></param>
        <summary><span data-ttu-id="55afa-710">지정된 <paramref name="args" />를 사용하여 <see cref="T:System.Xml.XPath.IXPathNavigable" />의 XML 데이터를 변환하고 그 결과를 <see cref="T:System.IO.Stream" />로 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-710">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="55afa-711"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-711">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="55afa-712"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-712">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="55afa-713">자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 및 [마이그레이션 XslTransform 클래스에서](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-713">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="55afa-714"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-714"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="55afa-715">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-715">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="55afa-716">`args` 와 일치는 `xsl:param` 스타일 시트에 정의 된 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-716">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="55afa-717">변환은 문서 전체에 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-717">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="55afa-718">즉, 문서 루트 노드 이외의 노드에 전달해도 변환 프로세스에서 로드된 문서의 모든 노드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-718">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="55afa-719">노드 조각을 변형 하려면 만들어야는 <xref:System.Xml.XmlDocument> 조각 노드만 포함 하 고 전달 하는 <xref:System.Xml.XmlDocument> 에 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="55afa-719">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="55afa-720">다음 예에서는 노드 조각에 대해 변형을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-720">The following example performs a transformation on a node fragment.</span></span>  
  
```  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="55afa-721">이 예제에서는 사용은 `library.xml` 및 `print_root.xsl` 파일을 입력으로 코드를 다음 콘솔에 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-721">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```  
<style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</style sheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="55afa-722">다음 예제에서는 ASP.NET 페이지 내에서 변환을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-722">The following example performs a transformation within an ASP.NET page.</span></span>  
  
 [!code-aspx-csharp[XslTransform.Transform5#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform5/CS/transcs.aspx#1)]
 [!code-aspx-vb[XslTransform.Transform5#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform5/VB/transvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="55afa-723">XSLT 변환을 처리하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="55afa-723">There was an error processing the XSLT transformation.</span></span>  
  
 <span data-ttu-id="55afa-724">참고: 이는 이전 버전에서 업그레이드되면서 변경된 동작입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-724">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="55afa-725">Microsoft .NET Framework version 1.1이나 그 이전 버전을 사용할 경우에는 <see cref="T:System.Xml.Xsl.XsltException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-725">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As TextWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="55afa-726"><see cref="T:System.Xml.XPath.IXPathNavigable" /> 인터페이스를 구현하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-726">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="55afa-727">.NET Framework에서 이 개체는 변환할 데이터를 포함하는 <see cref="T:System.Xml.XmlNode" />(대개 <see cref="T:System.Xml.XmlDocument" />) 또는 <see cref="T:System.Xml.XPath.XPathDocument" />일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-727">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="55afa-728">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-728">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="55afa-729">출력을 제공할 대상 <see cref="T:System.IO.TextWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-729">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="55afa-730">XSLT <c>document()</c> 함수 확인에 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-730">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="55afa-731">이 값이 <see langword="null" />이면 <c>document()</c> 함수가 확인되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-731">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
 <span data-ttu-id="55afa-732"><see cref="T:System.Xml.XmlResolver" /> 메서드가 완료된 다음 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />가 캐시되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-732">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="55afa-733">지정된 <paramref name="args" />를 사용하여 <see cref="T:System.Xml.XPath.IXPathNavigable" />의 XML 데이터를 변환하고 그 결과를 <see cref="T:System.IO.TextWriter" />로 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-733">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="55afa-734"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-734">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="55afa-735"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-735">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="55afa-736">자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 및 [마이그레이션 XslTransform 클래스에서](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-736">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="55afa-737"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-737"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="55afa-738">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-738">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="55afa-739">`args` 와 일치는 `xsl:param` 스타일 시트에 정의 된 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-739">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="55afa-740">인코딩 특성이 `xsl:output` 에 출력할 때 요소가 지원 되지 않습니다는 <xref:System.IO.TextWriter>합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-740">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="55afa-741">참조 [XslTransform 출력](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) 기반이 비슷하므로 `xsl:output` 특성은 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-741">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
 <span data-ttu-id="55afa-742">변형은 문서 전체에 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-742">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="55afa-743">즉, 문서 루트 노드 이외의 노드에 전달해도 변환 프로세스에서 로드된 문서의 모든 노드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-743">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="55afa-744">노드 조각을 변형 하려면 만들어야는 <xref:System.Xml.XmlDocument> 조각 노드만 포함 하 고 전달 하는 <xref:System.Xml.XmlDocument> 에 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="55afa-744">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="55afa-745">다음 예에서는 노드 조각에 대해 변형을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-745">The following example performs a transformation on a node fragment.</span></span>  
  
```  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="55afa-746">이 예제에서는 사용은 `library.xml` 및 `print_root.xsl` 파일을 입력으로 코드를 다음 콘솔에 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-746">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```  
<style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</style sheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="55afa-747">다음 예제에서는 XML 파일을 변환 하 고 HTML 문자열을 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-747">The following example transforms an XML file and outputs an HTML string.</span></span> <span data-ttu-id="55afa-748"><xref:System.IO.StringReader> 및 <xref:System.IO.StringWriter> 클래스는 읽기 및 쓰기는 문자열에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-748">The <xref:System.IO.StringReader> and <xref:System.IO.StringWriter> classes are used to read and write the strings.</span></span>  
  
 [!code-csharp[XslTransform.Transform6#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform6/CS/transstring.cs#1)]
 [!code-vb[XslTransform.Transform6#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform6/VB/transstring.vb#1)]  
  
 <span data-ttu-id="55afa-749">이 예제에서는 `books.xml` 파일을 입력으로 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-749">The example uses the `books.xml` file as input.</span></span>  
  
 [!code-xml[XslTransform.Transform6#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Transform6/XML/books.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="55afa-750">XSLT 변환을 처리하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="55afa-750">There was an error processing the XSLT transformation.</span></span>  
  
 <span data-ttu-id="55afa-751">참고: 이는 이전 버전에서 업그레이드되면서 변경된 동작입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-751">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="55afa-752">Microsoft .NET Framework version 1.1이나 그 이전 버전을 사용할 경우에는 <see cref="T:System.Xml.Xsl.XsltException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-752">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As XmlWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="55afa-753"><see cref="T:System.Xml.XPath.IXPathNavigable" /> 인터페이스를 구현하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-753">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="55afa-754">.NET Framework에서 이 개체는 변환할 데이터를 포함하는 <see cref="T:System.Xml.XmlNode" />(대개 <see cref="T:System.Xml.XmlDocument" />) 또는 <see cref="T:System.Xml.XPath.XPathDocument" />일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-754">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="55afa-755">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-755">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="55afa-756">출력을 제공할 대상 <see cref="T:System.Xml.XmlWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-756">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="55afa-757">XSLT <c>document()</c> 함수 확인에 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-757">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="55afa-758">이 값이 <see langword="null" />이면 <c>document()</c> 함수가 확인되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-758">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
 <span data-ttu-id="55afa-759"><see cref="T:System.Xml.XmlResolver" /> 메서드가 완료된 다음 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />가 캐시되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-759">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="55afa-760">지정된 <paramref name="args" />를 사용하여 <see cref="T:System.Xml.XPath.IXPathNavigable" />의 XML 데이터를 변환하고 그 결과를 <see cref="T:System.Xml.XmlWriter" />로 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-760">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="55afa-761"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-761">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="55afa-762"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-762">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="55afa-763">자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 및 [마이그레이션 XslTransform 클래스에서](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-763">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="55afa-764"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-764"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="55afa-765">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-765">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="55afa-766">`args` 와 일치는 `xsl:param` 스타일 시트에 정의 된 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-766">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="55afa-767">`xsl:output` 에 출력할 때 요소가 지원 되지 않습니다는 <xref:System.Xml.XmlWriter> (`xsl:output` 는 무시 됩니다).</span><span class="sxs-lookup"><span data-stu-id="55afa-767">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="55afa-768">참조 [XslTransform 출력](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) 자세한 정보에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-768">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="55afa-769">변형은 문서 전체에 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-769">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="55afa-770">즉, 문서 루트 노드 이외의 노드에 전달해도 변환 프로세스에서 로드된 문서의 모든 노드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-770">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="55afa-771">노드 조각을 변형 하려면 만들어야는 <xref:System.Xml.XmlDocument> 조각 노드만 포함 하 고 전달 하는 <xref:System.Xml.XmlDocument> 에 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="55afa-771">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="55afa-772">다음 예에서는 노드 조각에 대해 변형을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-772">The following example performs a transformation on a node fragment.</span></span>  
  
```  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="55afa-773">이 예제에서는 사용은 `library.xml` 및 `print_root.xsl` 파일을 입력으로 코드를 다음 콘솔에 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-773">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```  
<style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />  
  <template match="/">  
  Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</style sheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="55afa-774">다음 예제에서는 HTML 문서에 XML 문서를 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-774">The following example transforms an XML document into an HTML document.</span></span> <span data-ttu-id="55afa-775">테이블에서 ISBN, 제목 및 각 책의 가격은 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-775">It displays the ISBN, title, and price for each book in a table.</span></span>  
  
 [!code-cpp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="55afa-776">이 샘플에서는 다음 두 입력 파일을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-776">The sample uses the following two input files.</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="55afa-777">XSLT 변환을 처리하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="55afa-777">There was an error processing the XSLT transformation.</span></span>  
  
 <span data-ttu-id="55afa-778">참고: 이는 이전 버전에서 업그레이드되면서 변경된 동작입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-778">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="55afa-779">Microsoft .NET Framework version 1.1이나 그 이전 버전을 사용할 경우에는 <see cref="T:System.Xml.Xsl.XsltException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-779">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As Stream, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="55afa-780">변환할 데이터를 포함하는 <see cref="T:System.Xml.XPath.XPathNavigator" />입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-780">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="55afa-781">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-781">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="55afa-782">출력할 대상 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-782">The stream to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="55afa-783">XSLT <c>document()</c> 함수 확인에 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-783">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="55afa-784">이 값이 <see langword="null" />이면 <c>document()</c> 함수가 확인되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-784">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
 <span data-ttu-id="55afa-785"><see cref="T:System.Xml.XmlResolver" /> 메서드가 완료된 다음 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />가 캐시되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-785">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="55afa-786">지정된 <paramref name="args" />를 사용하여 <see cref="T:System.Xml.XPath.XPathNavigator" />의 XML 데이터를 변환하고 그 결과를 <see cref="T:System.IO.Stream" />로 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-786">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="55afa-787"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-787">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="55afa-788"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-788">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="55afa-789">자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 및 [마이그레이션 XslTransform 클래스에서](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-789">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="55afa-790"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-790"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="55afa-791">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-791">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="55afa-792">`args` 와 일치는 `xsl:param` 스타일 시트에 정의 된 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-792">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="55afa-793">변환은 문서에 전체적으로 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-793">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="55afa-794">즉, 문서 루트 노드 이외의 노드 트리에 현재 노드에 설정 되어이 해도 변형 프로세스에서 로드 된 문서의 모든 노드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-794">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="55afa-795">변환 수행 후는 <xref:System.Xml.XPath.XPathNavigator> 는 원래 상태로 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-795">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="55afa-796">즉 노드 전의 변환 프로세스를 유지 한 후 현재 노드는 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 메서드가 호출 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-796">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="55afa-797">참조 [XslTransform 출력](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) 기반이 비슷하므로 `xsl:output` 특성은 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-797">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="55afa-798">다음 예제에는 사용자 테이블을 로드 한 <xref:System.Xml.XmlDataDocument> HTML 테이블에 고객 데이터를 가져오기 XSLT 변환을 수행 하 고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-798">The following example loads a customer table into an <xref:System.Xml.XmlDataDocument> and performs an XSLT transformation to pull the customer data into an HTML table.</span></span> <span data-ttu-id="55afa-799">이 예제에서는 Microsoft SQL Server 2000 Northwind 데이터베이스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-799">The example uses the Microsoft SQL Server 2000 Northwind database.</span></span>  
  
 [!code-csharp[XmlDataDocument.CreateNavigator#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlDataDocument.CreateNavigator/CS/dataset_trans.cs#1)]
 [!code-vb[XmlDataDocument.CreateNavigator#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlDataDocument.CreateNavigator/VB/dataset_trans.vb#1)]  
  
 <span data-ttu-id="55afa-800">이 예제에서는 `customers.xsl` 파일을 입력으로 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-800">The example uses the `customers.xsl` file as input.</span></span>  
  
 [!code-xml[XmlDataDocument.CreateNavigator#2](~/samples/snippets/xml/VS_Snippets_Data/XmlDataDocument.CreateNavigator/XML/customers.xsl#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="55afa-801">XSLT 변환을 처리하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="55afa-801">There was an error processing the XSLT transformation.</span></span>  
  
 <span data-ttu-id="55afa-802">참고: 이는 이전 버전에서 업그레이드되면서 변경된 동작입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-802">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="55afa-803">Microsoft .NET Framework version 1.1이나 그 이전 버전을 사용할 경우에는 <see cref="T:System.Xml.Xsl.XsltException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-803">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As TextWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="55afa-804">변환할 데이터를 포함하는 <see cref="T:System.Xml.XPath.XPathNavigator" />입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-804">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="55afa-805">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-805">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="55afa-806">출력을 제공할 대상 <see cref="T:System.IO.TextWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-806">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="55afa-807">XSLT <c>document()</c> 함수 확인에 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-807">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="55afa-808">이 값이 <see langword="null" />이면 <c>document()</c> 함수가 확인되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-808">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
 <span data-ttu-id="55afa-809"><see cref="T:System.Xml.XmlResolver" /> 메서드가 완료된 다음 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />가 캐시되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-809">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="55afa-810">지정된 <paramref name="args" />를 사용하여 <see cref="T:System.Xml.XPath.XPathNavigator" />의 XML 데이터를 변환하고 그 결과를 <see cref="T:System.IO.TextWriter" />로 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-810">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="55afa-811"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-811">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="55afa-812"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-812">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="55afa-813">자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 및 [마이그레이션 XslTransform 클래스에서](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-813">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="55afa-814"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-814"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="55afa-815">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-815">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="55afa-816">`args` 와 일치는 `xsl:param` 스타일 시트에 정의 된 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-816">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="55afa-817">변환은 문서에 전체적으로 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-817">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="55afa-818">즉, 문서 루트 노드 이외의 노드 트리에 현재 노드에 설정 되어이 해도 변형 프로세스에서 로드 된 문서의 모든 노드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-818">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="55afa-819">변환 수행 된 후의 <xref:System.Xml.XPath.XPathNavigator> 는 원래 상태로 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-819">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="55afa-820">즉 노드 전의 변환 프로세스를 유지 한 후 현재 노드는 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 메서드가 호출 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-820">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="55afa-821">인코딩 특성이 `xsl:output` 에 출력할 때 요소가 지원 되지 않습니다는 <xref:System.IO.TextWriter>합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-821">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="55afa-822">참조 [XslTransform 출력](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) 기반이 비슷하므로 `xsl:output` 특성은 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-822">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="55afa-823">XSLT 변환을 처리하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="55afa-823">There was an error processing the XSLT transformation.</span></span>  
  
 <span data-ttu-id="55afa-824">참고: 이는 이전 버전에서 업그레이드되면서 변경된 동작입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-824">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="55afa-825">Microsoft .NET Framework version 1.1이나 그 이전 버전을 사용할 경우에는 <see cref="T:System.Xml.Xsl.XsltException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-825">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As XmlWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="55afa-826">변환할 데이터를 포함하는 <see cref="T:System.Xml.XPath.XPathNavigator" />입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-826">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="55afa-827">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-827">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="55afa-828">출력을 제공할 대상 <see cref="T:System.Xml.XmlWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-828">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="55afa-829">XSLT <c>document()</c> 함수 확인에 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-829">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="55afa-830">이 값이 <see langword="null" />이면 <c>document()</c> 함수가 확인되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-830">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
 <span data-ttu-id="55afa-831"><see cref="T:System.Xml.XmlResolver" /> 메서드가 완료된 다음 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />가 캐시되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-831">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="55afa-832">지정된 인수를 사용하여 <see cref="T:System.Xml.XPath.XPathNavigator" />의 XML 데이터를 변환하고 그 결과를 <see cref="T:System.Xml.XmlWriter" />로 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-832">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified args and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="55afa-833"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-833">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="55afa-834"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-834">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="55afa-835">자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 및 [마이그레이션 XslTransform 클래스에서](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-835">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="55afa-836"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-836"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="55afa-837">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-837">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="55afa-838">`args` 와 일치는 `xsl:param` 스타일 시트에 정의 된 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-838">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="55afa-839">변환은 문서에 전체적으로 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-839">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="55afa-840">즉, 문서 루트 노드 이외의 노드 트리에 현재 노드에 설정 되어이 해도 변형 프로세스에서 로드 된 문서의 모든 노드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-840">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="55afa-841">변환 수행 된 후의 <xref:System.Xml.XPath.XPathNavigator> 는 원래 상태로 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-841">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="55afa-842">즉 변환 프로세스 하기 전에 현재 있는 노드를 유지 한 후 현재 노드는 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 메서드가 호출 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-842">This means that the node, that is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="55afa-843">`xsl:output` 에 출력할 때 요소가 지원 되지 않습니다는 <xref:System.Xml.XmlWriter> (`xsl:output` 는 무시 됩니다).</span><span class="sxs-lookup"><span data-stu-id="55afa-843">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="55afa-844">참조 [XslTransform 출력](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) 자세한 정보에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-844">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="55afa-845">다음 예제에서는 로드 하 고 XSLT 변형을 수행 하기 전에 XML 문서를 편집 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-845">The following example loads and edits an XML document before performing an XSLT transform.</span></span>  
  
 [!code-cpp[XslTransform.Transform2#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Transform2/CPP/trans_snip.cpp#1)]
 [!code-csharp[XslTransform.Transform2#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform2/CS/trans_snip.cs#1)]
 [!code-vb[XslTransform.Transform2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform2/VB/trans_snip.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="55afa-846">XSLT 변환을 처리하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="55afa-846">There was an error processing the XSLT transformation.</span></span>  
  
 <span data-ttu-id="55afa-847">참고: 이는 이전 버전에서 업그레이드되면서 변경된 동작입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-847">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="55afa-848">Microsoft .NET Framework version 1.1이나 그 이전 버전을 사용할 경우에는 <see cref="T:System.Xml.Xsl.XsltException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-848">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
      </Docs>
    </Member>
    <Member MemberName="XmlResolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver XmlResolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver XmlResolver" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Xsl.XslTransform.XmlResolver" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlResolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ XmlResolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55afa-849"><see cref="T:System.Xml.XmlResolver" /> 메서드를 호출할 때 외부 리소스를 확인하기 위해 사용하는 <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />를 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-849">Sets the <see cref="T:System.Xml.XmlResolver" /> used to resolve external resources when the <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> method is called.</span></span></summary>
        <value><span data-ttu-id="55afa-850">변환을 수행하는 동안 사용할 <see cref="T:System.Xml.XmlResolver" />입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-850">The <see cref="T:System.Xml.XmlResolver" /> to use during transformation.</span></span> <span data-ttu-id="55afa-851">경우 설정 <see langword="null" />, XSLT <c>document ()</c> 함수가 확인 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-851">If set to <see langword="null" />, the XSLT <c>document()</c> function is not resolved.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="55afa-852"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-852">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="55afa-853"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-853">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="55afa-854">자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 및 [마이그레이션 XslTransform 클래스에서](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-854">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="55afa-855">.NET Framework 버전 1.1에서는 응용 프로그램의 신뢰 수준을 기본 동작을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-855">In version 1.1 of the .NET Framework, the trust level of the application determines the default behavior:</span></span>  
  
 <span data-ttu-id="55afa-856">`Fully trusted code:` 기본 <xref:System.Xml.XmlUrlResolver> 자격 증명을 해결 하려면 사용 하 여 사용자는 `document()` 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-856">`Fully trusted code:` A default <xref:System.Xml.XmlUrlResolver> with no user credentials is used to resolve the `document()` function.</span></span> <span data-ttu-id="55afa-857">외부 리소스에 액세스 하기에 인증이 필요한 경우이 속성을 사용 하 여 지정 하는 <xref:System.Xml.XmlResolver> 에 필요한 자격 증명입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-857">If authentication is required to access the external resource, use this property to specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="55afa-858">`Semi-trusted code:` 속성이로 설정 되어 `null`, 즉은 `document()` 함수가 확인 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-858">`Semi-trusted code:` The property is set to `null`, which means the `document()` function is not resolved.</span></span> <span data-ttu-id="55afa-859">완전 신뢰를 지정 해야 하기 때문에 프로그램 <xref:System.Xml.XmlResolver>,이 속성도 설정할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-859">Because full trust is required to specify an <xref:System.Xml.XmlResolver>, this property also cannot be set.</span></span>  
  
 <span data-ttu-id="55afa-860">이 해결 프로그램을 사용 하면 XSLT `document()` 함수를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-860">This resolver is used when the XSLT `document()` function is invoked.</span></span> <span data-ttu-id="55afa-861">해결에 사용 되지 않는 `xsl:import` 및 `xsl:include` 스타일 시트에서 참조 되는 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-861">It is not used to resolve `xsl:import` and `xsl:include` elements referenced in the style sheet.</span></span> <span data-ttu-id="55afa-862">지정 하는 <xref:System.Xml.XmlResolver> 해결 하는 데 `xsl:import` 및 `xsl:include` 스타일 시트에서 참조 되는 요소를 사용 하 여는 <xref:System.Xml.Xsl.XslTransform.Load%2A> 오버 로드를 <xref:System.Xml.XmlResolver> 인수 중 하나로 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-862">To specify an <xref:System.Xml.XmlResolver> to use to resolve `xsl:import` and `xsl:include` elements referenced in the style sheet, use the <xref:System.Xml.Xsl.XslTransform.Load%2A> overload, which takes an <xref:System.Xml.XmlResolver> as one of its arguments.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="55afa-863">이 속성은.NET Framework의 버전 1.1에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-863">This property is obsolete in version 1.1 of the .NET Framework.</span></span> <span data-ttu-id="55afa-864">지정 하는 <xref:System.Xml.XmlResolver> 를 사용 하는 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 메서드는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-864">Specifying an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method is the recommended practice.</span></span> <span data-ttu-id="55afa-865">이 경우는 <xref:System.Xml.XmlResolver> 후 캐시 되지 않습니다는 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 메서드를 완료 합니다.</span><span class="sxs-lookup"><span data-stu-id="55afa-865">In this case, the <xref:System.Xml.XmlResolver> is not cached after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method completes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
  </Members>
</Type>