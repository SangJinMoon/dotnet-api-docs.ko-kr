<Type Name="XslTransform" FullName="System.Xml.Xsl.XslTransform">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ebc2a722279de71968689deb766ae5159cae4090" /><Meta Name="ms.sourcegitcommit" Value="c902e847cd05ac37d93eca981b0fb009aae0a790" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/28/2018" /><Meta Name="ms.locfileid" Value="52455175" /></Metadata><TypeSignature Language="C#" Value="public sealed class XslTransform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XslTransform extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Xsl.XslTransform" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XslTransform" />
  <TypeSignature Language="C++ CLI" Value="public ref class XslTransform sealed" />
  <TypeSignature Language="F#" Value="type XslTransform = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0">
      <AttributeName>System.Obsolete("This class has been deprecated. Please use System.Xml.Xsl.XslCompiledTransform instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e020a-101">Extensible Stylesheet Language Transformations (XSLT) 스타일 시트를 사용 하 여 XML 데이터를 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-101">Transforms XML data using an Extensible Stylesheet Language for Transformations (XSLT) style sheet.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e020a-102"><xref:System.Xml.Xsl.XslTransform> 클래스는 Microsoft.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-102">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the Microsoft .NET Framework version 2.0.</span></span> <span data-ttu-id="e020a-103"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-103">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e020a-104">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="e020a-104">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e020a-105"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-105"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e020a-106">XSLT 스타일 시트를 네임 스페이스를 사용 해야 `http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-106">The XSLT style sheet must use the namespace `http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e020a-107">추가 인수를 사용 하 여 스타일 시트에 추가할 수도 있습니다는 <xref:System.Xml.Xsl.XsltArgumentList> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-107">Additional arguments can also be added to the style sheet using the <xref:System.Xml.Xsl.XsltArgumentList> class.</span></span> <span data-ttu-id="e020a-108">이 클래스는 스타일 시트에서 호출할 수 있는 스타일 시트 및 확장 개체에 대 한 입력된 매개 변수를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-108">This class contains input parameters for the style sheet and extension objects which can be called from the style sheet.</span></span>  
  
 <span data-ttu-id="e020a-109">XML 데이터를 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-109">To transform XML data:</span></span>  
  
1.  <span data-ttu-id="e020a-110">만들기는 <xref:System.Xml.Xsl.XslTransform> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-110">Create an <xref:System.Xml.Xsl.XslTransform> object.</span></span>  
  
2.  <span data-ttu-id="e020a-111">사용 된 <xref:System.Xml.Xsl.XslTransform.Load%2A> 변환에 대 한 스타일 시트를 로드 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-111">Use the <xref:System.Xml.Xsl.XslTransform.Load%2A> method to load the style sheet for the transformation.</span></span> <span data-ttu-id="e020a-112">이 메서드는 여러 오버 로드가 및 사용 하 여 스타일 시트를 로드할 수는 <xref:System.Xml.XmlReader>, <xref:System.Xml.XPath.XPathNavigator>, <xref:System.Xml.XPath.IXPathNavigable>, 또는 파일의 위치를 사용 하 여 URL입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-112">This method has several overloads and can load a style sheet using an <xref:System.Xml.XmlReader>, <xref:System.Xml.XPath.XPathNavigator>, <xref:System.Xml.XPath.IXPathNavigable>, or a URL with the location of the file.</span></span>  
  
3.  <span data-ttu-id="e020a-113">사용 된 <xref:System.Xml.Xsl.XslTransform.Transform%2A> XML 데이터를 변환 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-113">Use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method to transform the XML data.</span></span> <span data-ttu-id="e020a-114">이 메서드는 여러 오버 로드가 하며 다양 한 유형의 입력 및 출력을 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-114">This method has several overloads and can handle different types of input and output.</span></span> <span data-ttu-id="e020a-115">지정할 수도 있습니다는 <xref:System.Xml.Xsl.XsltArgumentList> 변환 중에 입력으로 사용할 추가 인수를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-115">You can also specify an <xref:System.Xml.Xsl.XsltArgumentList> containing additional arguments to use as input during the transformation.</span></span>  
  
 <span data-ttu-id="e020a-116">**보안 고려 사항**</span><span class="sxs-lookup"><span data-stu-id="e020a-116">**Security Considerations**</span></span>  
  
 <span data-ttu-id="e020a-117"><xref:System.Xml.Xsl.XslTransform> 클래스를 사용하는 응용 프로그램을 만드는 경우 다음 항목 및 그 의미에 대해 알아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-117">When creating an application that uses the <xref:System.Xml.Xsl.XslTransform> class, you should be aware of the following items and their implications:</span></span>  
  
-   <span data-ttu-id="e020a-118">확장 개체는 기본적으로 활성화되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-118">Extension objects are enabled by default.</span></span> <span data-ttu-id="e020a-119">확장 개체가 포함된 <xref:System.Xml.Xsl.XsltArgumentList> 개체를 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 메서드에 전달하면 이 확장 개체가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-119">If an <xref:System.Xml.Xsl.XsltArgumentList> object containing extension objects is passed to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method, they are utilized.</span></span>  
  
-   <span data-ttu-id="e020a-120">XSLT 스타일시트에는 다른 파일에 대한 참조 및 포함 스크립트 블록이 포함될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-120">XSLT style sheets can include references to other files and embedded script blocks.</span></span> <span data-ttu-id="e020a-121">악의적인 사용자 데이터를 사용 하 여 제공 하 여 악용할 수 있습니다 또는 실행 하는 경우 스타일 시트를 시스템의 컴퓨터 리소스가 부족 해질 때까지 처리 하면 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-121">A malicious user can exploit this by supplying you with data or style sheets that when executed will cause your system to process until the computer runs low on resources.</span></span>  
  
-   <span data-ttu-id="e020a-122">혼합 신뢰 환경에서 XSLT 응용 프로그램을 실행하면 스타일시트가 스푸핑될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-122">XSLT applications that run in a mixed trust environment can result in style sheet spoofing.</span></span> <span data-ttu-id="e020a-123">예를 들어, 악의적인 사용자는 해로운 스타일시트가 포함된 개체를 로드한 후 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 메서드를 호출하고 변형을 실행할 다른 사용자에게 전달할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-123">For example, a malicious user can load an object with a harmful style sheet and hand it off to another user who subsequently calls the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method and executes the transformation.</span></span>  
  
 <span data-ttu-id="e020a-124">허용 하지 않음으로써 이러한 보안 문제를 완화할 수 있습니다 <xref:System.Xml.Xsl.XslTransform> 개체, XSLT 스타일 시트 또는 신뢰할 수 없는 소스의 XML 원본 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-124">These security issues can be mitigated by not accepting <xref:System.Xml.Xsl.XslTransform> objects, XSLT style sheets, or XML source data from untrusted sources.</span></span>  
  
 <span data-ttu-id="e020a-125">**스크립팅 지원**</span><span class="sxs-lookup"><span data-stu-id="e020a-125">**Scripting Support**</span></span>  
  
 <span data-ttu-id="e020a-126">이 클래스를 사용 하 여 포함 스크립트를 지원 합니다 `msxsl:script` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-126">This class supports embedded scripting using the `msxsl:script` element.</span></span>  
  
 <span data-ttu-id="e020a-127">.NET Framework 버전 1.1 스타일 시트의 증명 정보는 포함 된 스크립트에 지정 된 권한을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-127">In version 1.1 of the .NET Framework, the evidence of the style sheet determines what permissions are given to embedded scripts.</span></span>  
  
-   <span data-ttu-id="e020a-128">스타일 시트에서 한 리소스 URI (Uniform Identifier)를 로드 하는 경우 URI는 증명 정보를 만드는 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-128">If the style sheet was loaded from a Uniform Resource Identifier (URI), the URI is used to create the evidence.</span></span> <span data-ttu-id="e020a-129">이 증명 정보는 사이트 및 영역와 함께 URI를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-129">This evidence includes the URI along with its site and zone.</span></span>  
  
-   <span data-ttu-id="e020a-130">다른 원본을 사용 하 여 스타일 시트를 로드 하는 경우 전달 하 여 증명 정보를 제공할 수 있습니다는 <xref:System.Security.Policy.Evidence?displayProperty=nameWithType> 개체는 <xref:System.Xml.Xsl.XslTransform.Load%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e020a-130">If the style sheet was loaded using another source, you can provide evidence by passing a <xref:System.Security.Policy.Evidence?displayProperty=nameWithType> object to the <xref:System.Xml.Xsl.XslTransform.Load%2A> method.</span></span> <span data-ttu-id="e020a-131">그렇지 않으면 스크립트 어셈블리에 완전 신뢰 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-131">Otherwise, the script assembly has full trust.</span></span>  
  
 <span data-ttu-id="e020a-132">부분적으로 신뢰할 수 있는 호출자: `UnmanagedCode` 권한이 포함 된 스크립트를 컴파일하는 데 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-132">Semi-trusted callers: `UnmanagedCode` permission is required to compile the embedded script.</span></span> <span data-ttu-id="e020a-133">`ControlEvidence` 사용 권한을 제공 해야 합니다. <xref:System.Security.Policy.Evidence> 에 <xref:System.Xml.Xsl.XslTransform.Load%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e020a-133">`ControlEvidence` permission is required to provide <xref:System.Security.Policy.Evidence> to the <xref:System.Xml.Xsl.XslTransform.Load%2A> method.</span></span> <span data-ttu-id="e020a-134"><xref:System.Security.SecurityException> 호출자에 게 필요한 권한이 없는 경우 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-134">A <xref:System.Security.SecurityException> is thrown if the caller does not have the necessary permissions.</span></span> <span data-ttu-id="e020a-135">자세한 내용은 <xref:System.Security.Permissions.SecurityPermission?displayProperty=nameWithType> 및 <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=nameWithType>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="e020a-135">See <xref:System.Security.Permissions.SecurityPermission?displayProperty=nameWithType> and <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=nameWithType> for more information.</span></span>  
  
 <span data-ttu-id="e020a-136">`msxsl:script` 요소가 다음 요구 사항:</span><span class="sxs-lookup"><span data-stu-id="e020a-136">The `msxsl:script` element has the following requirements:</span></span>  
  
-   <span data-ttu-id="e020a-137">합니다 `msxsl:script` 요소가 속하는 `urn:schemas-microsoft-com:xslt` 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-137">The `msxsl:script` element belongs to the `urn:schemas-microsoft-com:xslt` namespace.</span></span> <span data-ttu-id="e020a-138">스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:msxsl=urn:schemas-microsoft-com:xslt`합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-138">The style sheet must include the namespace declaration `xmlns:msxsl=urn:schemas-microsoft-com:xslt`.</span></span>  
  
-   <span data-ttu-id="e020a-139">합니다 `msxsl:script` 요소가 포함 될 수 있습니다는 `language` 사용할 스크립트 언어를 지정 하는 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-139">The `msxsl:script` element can include a `language` attribute that specifies the scripting language to use.</span></span> <span data-ttu-id="e020a-140">값을 `language` 특성 중 하나 여야 합니다: C#, CSharp, VB, VisualBasic, JScript 또는 JavaScript입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-140">The value of the `language` attribute must be one of the following: C#, CSharp, VB, VisualBasic, JScript, or JavaScript.</span></span> <span data-ttu-id="e020a-141">언어 이름은 대/소문자 구분 되어 JavaScript와 javascript는 모두 유효 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-141">Because the language name is not case-sensitive, JavaScript and javascript are both valid.</span></span> <span data-ttu-id="e020a-142">경우는 `language` 특성을 지정 하지 않으면 기본값은 JScript로 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-142">If a `language` attribute is not specified, it defaults to JScript.</span></span>  
  
-   <span data-ttu-id="e020a-143">합니다 `msxsl:script` 요소에 포함 해야 합니다는 `implements-prefix` 스크립트 블록에 연결 된 네임 스페이스를 나타내는 접두사를 포함 하는 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-143">The `msxsl:script` element must include an `implements-prefix` attribute that contains the prefix representing the namespace associated with the script block.</span></span> <span data-ttu-id="e020a-144">이 네임 스페이스는 스타일 시트 내에서 정의 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-144">This namespace must be defined within the style sheet.</span></span> <span data-ttu-id="e020a-145">스타일 시트는 네임 스페이스에 의해 그룹화 되는 여러 스크립트 블록을 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-145">A style sheet can include multiple script blocks which are grouped by namespace.</span></span> <span data-ttu-id="e020a-146">동일한 네임 스페이스 내에서 여러 언어를 사용 하 여 스크립트 블록 수는 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-146">You cannot have script blocks with multiple languages within the same namespace.</span></span> <span data-ttu-id="e020a-147">스크립트 블록이 동일한 네임 스페이스 내에 제공 된 스크립트 블록에서 다른 스크립트 블록에 정의 된 함수를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-147">Script blocks can call a function defined in another script block, provided the script blocks reside within the same namespace.</span></span> <span data-ttu-id="e020a-148">규칙 및 스크립트 언어의 구문에 따라 스크립트 블록의 내용을 구문 분석 됩니다 (제공한는 `language` 특성).</span><span class="sxs-lookup"><span data-stu-id="e020a-148">The contents of a script block are parsed according to the rules and syntax of the scripting language (supplied by the `language` attribute).</span></span> <span data-ttu-id="e020a-149">예를 들어 C# 스크립트 블록을 설치한 경우 주석 접두사로 옵니다는 `//` 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-149">For example, if you had a C# script block, comments would be prefixed by the `//` characters.</span></span> <span data-ttu-id="e020a-150">설명에는 유효한 XML 콘텐츠 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-150">The comments must be valid XML content.</span></span>  
  
 <span data-ttu-id="e020a-151">`Note` CDATA 섹션의 스크립트 블록을 래핑하는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-151">`Note` It is recommended that you wrap script blocks in a CDATA section.</span></span>  
  
```  
<msxsl:script implements-prefix='xy' language='C#'>  
  <![CDATA[  
  // Add code here.  
  ]]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="e020a-152"><see cref="T:System.Xml.Xsl.XslTransform" /> 개체는 변환 작업에 대 한 유일한 스레드로부터 안전 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-152"><see cref="T:System.Xml.Xsl.XslTransform" /> objects are only thread-safe for transform operations.</span></span> <span data-ttu-id="e020a-153">다른 작업은 스레드로부터 안전한 되도록 보장 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-153">Other operations are not guaranteed to be thread-safe.</span></span> <span data-ttu-id="e020a-154">로드 작업 중 다른 방법이 없습니다 개체에서 호출 되는 확인 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-154">You must ensure that no other methods are called on the object during load operations.</span></span></threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XslTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XslTransform();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e020a-155"><see cref="T:System.Xml.Xsl.XslTransform" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-155">Initializes a new instance of the <see cref="T:System.Xml.Xsl.XslTransform" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e020a-156">참조 하는 스타일 시트를 포함 하 여 XSLT 스타일 시트를 로드 <see langword="xsl:include" /> 고 <see langword="xsl:import" /> 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-156">Loads the XSLT style sheet, including style sheets referenced in <see langword="xsl:include" /> and <see langword="xsl:import" /> elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e020a-157"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-157">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e020a-158"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-158">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e020a-159">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="e020a-159">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ url);" />
      <MemberSignature Language="F#" Value="member this.Load : string -&gt; unit" Usage="xslTransform.Load url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="e020a-160">로드할 XSLT 스타일 시트를 지정 하는 URL입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-160">The URL that specifies the XSLT style sheet to load.</span></span></param>
        <summary><span data-ttu-id="e020a-161">URL로 지정 된 XSLT 스타일 시트를 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-161">Loads the XSLT style sheet specified by a URL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e020a-162"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-162">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e020a-163"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-163">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e020a-164">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="e020a-164">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e020a-165"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-165"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e020a-166">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl="http://www.w3.org/1999/XSL/Transform"`합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-166">The XSLT style sheet must include the namespace declaration `xmlns:xsl="http://www.w3.org/1999/XSL/Transform"`.</span></span>  
  
 <span data-ttu-id="e020a-167">이 메서드는에서 참조 되는 모든 스타일 시트를 포함 하 여 XSLT 스타일 시트를 로드 `xsl:include` 고 `xsl:import` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-167">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="e020a-168">외부 리소스를 사용 하 여 확인 되는 <xref:System.Xml.XmlUrlResolver> 사용자 자격 증명 없이 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-168">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="e020a-169">오버 로드를 사용 하 여 스타일 시트를 인증 해야 하는 네트워크 리소스에 있는 경우는 <xref:System.Xml.XmlResolver> 해당 인수 중 하나로 지정 하 고는 <xref:System.Xml.XmlResolver> 에 필요한 자격 증명.</span><span class="sxs-lookup"><span data-stu-id="e020a-169">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="e020a-170">스타일 시트에 포함 된 스크립트가 스크립트 어셈블리에 컴파일됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-170">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="e020a-171">스타일 시트의 URI는 어셈블리에 적용 되는 증명 정보를 만드는 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-171">The URI of the style sheet is used to create evidence, which is applied to the assembly.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="e020a-172">호출자에 게 없는 경우 `UnmanagedCode` 권한이 포함 된 스크립트를 컴파일되지 않은 및 <xref:System.Security.SecurityException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-172">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="e020a-173">자세한 내용은 <xref:System.Security.Permissions.SecurityPermission> 및 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="e020a-173">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e020a-174">다음 예제에서는 HTML 문서를 XML 문서를 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-174">The following example transforms an XML document into an HTML document.</span></span> <span data-ttu-id="e020a-175">테이블에서 ISBN, 제목 및 각 책의 가격은 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-175">It displays the ISBN, title, and price for each book in a table.</span></span>  
  
 [!code-cpp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="e020a-176">이 샘플에서는 다음 두 입력 파일을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-176">The sample uses the following two input files.</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="e020a-177">로드 된 리소스가 올바른 스타일 시트가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-177">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e020a-178">스타일 시트에 포함된 스크립트가 들어 있고 호출자에 게 없습니다 <see langword="UnmanagedCode" /> 권한.</span><span class="sxs-lookup"><span data-stu-id="e020a-178">The style sheet contains embedded script, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader -&gt; unit" Usage="xslTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="e020a-179"><see cref="T:System.Xml.XmlReader" /> XSLT 스타일 시트를 포함 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-179">An <see cref="T:System.Xml.XmlReader" /> object that contains the XSLT style sheet.</span></span></param>
        <summary><span data-ttu-id="e020a-180">에 포함 된 XSLT 스타일 시트를 로드 합니다 <see cref="T:System.Xml.XmlReader" />합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-180">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e020a-181"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-181">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e020a-182"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-182">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e020a-183">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="e020a-183">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e020a-184"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-184"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e020a-185">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-185">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e020a-186">이 메서드는에서 참조 되는 모든 스타일 시트를 포함 하 여 XSLT 스타일 시트를 로드 `xsl:include` 고 `xsl:import` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-186">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="e020a-187">외부 리소스를 사용 하 여 확인 되는 <xref:System.Xml.XmlUrlResolver> 사용자 자격 증명 없이 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-187">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="e020a-188">오버 로드를 사용 하 여 스타일 시트를 인증 해야 하는 네트워크 리소스에 있는 경우는 <xref:System.Xml.XmlResolver> 해당 인수 중 하나로 지정 하 고는 <xref:System.Xml.XmlResolver> 에 필요한 자격 증명.</span><span class="sxs-lookup"><span data-stu-id="e020a-188">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="e020a-189">스타일 시트의 현재 노드의 로드를 <xref:System.Xml.XmlReader> 모든 자식을 통해.</span><span class="sxs-lookup"><span data-stu-id="e020a-189">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="e020a-190">그러면 스타일 시트와 문서의 일부를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-190">This enables you to use a portion of a document as the style sheet.</span></span> <span data-ttu-id="e020a-191">후 합니다 <xref:System.Xml.Xsl.XslTransform.Load%2A> 메서드가 반환 된 <xref:System.Xml.XmlReader> 스타일 시트의 끝 뒤에 다음 노드에 배치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-191">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="e020a-192">문서 끝에 도달하면 <xref:System.Xml.XmlReader>가 EOF(파일 끝)에 배치됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-192">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
 <span data-ttu-id="e020a-193">지정 해야 하는 경우 스타일 시트에 엔터티를 <xref:System.Xml.XmlReader> 엔터티를 확인할 수 있는 (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> 반환 `true`).</span><span class="sxs-lookup"><span data-stu-id="e020a-193">If the style sheet contains entities, you should specify an <xref:System.Xml.XmlReader> that can resolve entities (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> returns `true`).</span></span> <span data-ttu-id="e020a-194">이 경우에 <xref:System.Xml.XmlValidatingReader> 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-194">In this case, an <xref:System.Xml.XmlValidatingReader> can be used.</span></span>  
  
 <span data-ttu-id="e020a-195">스타일 시트에 포함 된 스크립트가 스크립트 어셈블리에 컴파일됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-195">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="e020a-196">어셈블리에 완전 신뢰 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-196">The assembly has full trust.</span></span> <span data-ttu-id="e020a-197">증명 정보를 사용 하 여 제공 하는 것이 좋습니다는 <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e020a-197">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="e020a-198">호출자에 게 없는 경우 `UnmanagedCode` 권한이 포함 된 스크립트를 컴파일되지 않은 및 <xref:System.Security.SecurityException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-198">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="e020a-199">자세한 내용은 <xref:System.Security.Permissions.SecurityPermission> 및 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="e020a-199">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e020a-200">다음 예제에서는 모든 책 제목을 기준으로 정렬 하는 XML 파일을 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-200">The following example transforms an XML file sorting all the books by title.</span></span>  
  
 [!code-cpp[XslTransform.Load3#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Load3/CPP/trans3.cpp#1)]
 [!code-csharp[XslTransform.Load3#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load3/CS/trans3.cs#1)]
 [!code-vb[XslTransform.Load3#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load3/VB/trans3.vb#1)]  
  
 <span data-ttu-id="e020a-201">이 예제에서는 입력으로 다음 데이터 파일을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-201">The example uses the following data files as input.</span></span>  
  
 `books.xml`  
  
 [!code-xml[XslTransform.Load3#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load3/XML/books.xml#2)]  
  
 `titles.xsl`  
  
 [!code-xml[XslTransform.Load3#3](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load3/XML/titles.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="e020a-202">현재 노드가 올바른 스타일 시트에 맞지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-202">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e020a-203">스타일 시트에 포함된 스크립트가 들어 있고 호출자에 게 없습니다 <see langword="UnmanagedCode" /> 권한.</span><span class="sxs-lookup"><span data-stu-id="e020a-203">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable -&gt; unit" Usage="xslTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="e020a-204">구현 하는 개체는 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-204">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="e020a-205">.NET Framework에서 이 개체는 <see cref="T:System.Xml.XmlNode" />(대개 <see cref="T:System.Xml.XmlDocument" />) 또는 XSLT 스타일시트를 포함하는 <see cref="T:System.Xml.XPath.XPathDocument" />일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-205">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the XSLT style sheet.</span></span></param>
        <summary><span data-ttu-id="e020a-206">에 포함 된 XSLT 스타일 시트를 로드 합니다 <see cref="T:System.Xml.XPath.IXPathNavigable" />합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-206">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e020a-207"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-207">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e020a-208"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-208">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e020a-209">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="e020a-209">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e020a-210"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-210"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e020a-211">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-211">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e020a-212">이 메서드는에서 참조 되는 모든 스타일 시트를 포함 하 여 XSLT 스타일 시트를 로드 `xsl:include` 고 `xsl:import` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-212">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="e020a-213">외부 리소스를 사용 하 여 확인 되는 <xref:System.Xml.XmlUrlResolver> 사용자 자격 증명 없이 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-213">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="e020a-214">오버 로드를 사용 하 여 스타일 시트를 인증 해야 하는 네트워크 리소스에 있는 경우는 <xref:System.Xml.XmlResolver> 해당 인수 중 하나로 지정 하 고는 <xref:System.Xml.XmlResolver> 에 필요한 자격 증명.</span><span class="sxs-lookup"><span data-stu-id="e020a-214">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="e020a-215">스타일 시트에 포함 된 스크립트가 스크립트 어셈블리에 컴파일됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-215">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="e020a-216">어셈블리에 완전 신뢰 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-216">The assembly has full trust.</span></span> <span data-ttu-id="e020a-217">증명 정보를 사용 하 여 제공 하는 것이 좋습니다는 <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e020a-217">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="e020a-218">호출자에 게 없는 경우 `UnmanagedCode` 권한이 포함 된 스크립트를 컴파일되지 않은 및 <xref:System.Security.SecurityException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-218">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="e020a-219">자세한 내용은 <xref:System.Security.Permissions.SecurityPermission> 및 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="e020a-219">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="e020a-220">로드 된 리소스가 올바른 스타일 시트가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-220">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e020a-221">스타일 시트에 포함된 스크립트가 들어 있고 호출자에 게 없습니다 <see langword="UnmanagedCode" /> 권한.</span><span class="sxs-lookup"><span data-stu-id="e020a-221">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XPathNavigator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.XPathNavigator -&gt; unit" Usage="xslTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="e020a-222"><see cref="T:System.Xml.XPath.XPathNavigator" /> XSLT 스타일 시트를 포함 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-222">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object that contains the XSLT style sheet.</span></span></param>
        <summary><span data-ttu-id="e020a-223">에 포함 된 XSLT 스타일 시트를 로드 합니다 <see cref="T:System.Xml.XPath.XPathNavigator" />합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-223">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.XPathNavigator" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e020a-224"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-224">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e020a-225"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-225">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e020a-226">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="e020a-226">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e020a-227"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-227"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e020a-228">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-228">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e020a-229">이 메서드는에서 참조 되는 모든 스타일 시트를 포함 하 여 XSLT 스타일 시트를 로드 `xsl:include` 고 `xsl:import` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-229">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="e020a-230">외부 리소스를 사용 하 여 확인 되는 <xref:System.Xml.XmlUrlResolver> 사용자 자격 증명 없이 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-230">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="e020a-231">오버 로드를 사용 하 여 스타일 시트를 인증 해야 하는 네트워크 리소스에 있는 경우는 <xref:System.Xml.XmlResolver> 해당 인수 중 하나로 지정 하 고는 <xref:System.Xml.XmlResolver> 에 필요한 자격 증명.</span><span class="sxs-lookup"><span data-stu-id="e020a-231">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="e020a-232">스타일 시트의 현재 위치에서 로드 되는 <xref:System.Xml.XPath.XPathNavigator>합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-232">The style sheet is loaded from the current position of the <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="e020a-233">로드 된 문서의 일부만 스타일 시트를 사용 하려면 스타일 시트의 시작 부분에 해당 노드로 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-233">To use just a portion of the loaded document as the style sheet, navigate to the node corresponding to the beginning of the style sheet.</span></span> <span data-ttu-id="e020a-234">후 합니다 <xref:System.Xml.Xsl.XslTransform.Load%2A> 메서드가 반환 합니다 <xref:System.Xml.XPath.XPathNavigator> 스타일 시트의 시작 부분에 배치 됩니다 (에 `xsl:style sheet` 노드).</span><span class="sxs-lookup"><span data-stu-id="e020a-234">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XPath.XPathNavigator> is positioned at the beginning of the style sheet (on the `xsl:style sheet` node).</span></span>  
  
 <span data-ttu-id="e020a-235">스타일 시트에 포함 된 스크립트가 스크립트 어셈블리에 컴파일됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-235">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="e020a-236">어셈블리에 완전 신뢰 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-236">The assembly has full trust.</span></span> <span data-ttu-id="e020a-237">증명 정보를 사용 하 여 제공 하는 것이 좋습니다는 <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e020a-237">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="e020a-238">호출자에 게 없는 경우 `UnmanagedCode` 권한이 포함 된 스크립트를 컴파일되지 않은 및 <xref:System.Security.SecurityException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-238">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="e020a-239">자세한 내용은 <xref:System.Security.Permissions.SecurityPermission> 및 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="e020a-239">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="e020a-240">현재 노드가 올바른 스타일 시트에 맞지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-240">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e020a-241">스타일 시트에 포함된 스크립트가 들어 있고 호출자에 게 없습니다 <see langword="UnmanagedCode" /> 권한.</span><span class="sxs-lookup"><span data-stu-id="e020a-241">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string url, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string url, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (url As String, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ url, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : string * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (url, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="e020a-242">로드할 XSLT 스타일 시트를 지정 하는 URL입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-242">The URL that specifies the XSLT style sheet to load.</span></span></param>
        <param name="resolver"><span data-ttu-id="e020a-243">스타일시트와 <c>xsl:import</c> 및 <c>xsl:include</c> 요소에 참조된 모든 스타일시트를 로드하는 데 사용할 <see cref="T:System.Xml.XmlResolver" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-243">The <see cref="T:System.Xml.XmlResolver" /> to use to load the style sheet and any style sheet(s) referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span>  
  
<span data-ttu-id="e020a-244">이것이 <see langword="null" />, 기본값 <see cref="T:System.Xml.XmlUrlResolver" /> 사용자를 사용 하 여 자격 증명 스타일 시트를 여는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-244">If this is <see langword="null" />, a default <see cref="T:System.Xml.XmlUrlResolver" /> with no user credentials is used to open the style sheet.</span></span> <span data-ttu-id="e020a-245">스타일시트의 외부 리소스를 확인하는 데 기본 <see cref="T:System.Xml.XmlUrlResolver" />가 사용되지 않으므로 <c>xsl:import</c> 및 <c>xsl:include</c> 요소는 확인되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-245">The default <see cref="T:System.Xml.XmlUrlResolver" /> is not used to resolve any external resources in the style sheet, so <c>xsl:import</c> and <c>xsl:include</c> elements are not resolved.</span></span>  
  
<span data-ttu-id="e020a-246">합니다 <see cref="T:System.Xml.XmlResolver" /> 후 캐시 되지 않기를 <see cref="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" /> 메서드가 완료 되 면 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-246">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="e020a-247">URL로 지정 된 XSLT 스타일 시트를 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-247">Loads the XSLT style sheet specified by a URL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e020a-248"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-248">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e020a-249"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-249">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e020a-250">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="e020a-250">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e020a-251"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-251"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e020a-252">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-252">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e020a-253">스타일 시트에 포함 된 스크립트가 스크립트 어셈블리에 컴파일됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-253">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="e020a-254">스타일 시트의 URI는 어셈블리에 적용 되는 증명 정보를 만드는 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-254">The URI of the style sheet is used to create evidence, which is applied to the assembly.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="e020a-255">호출자에 게 없는 경우 `UnmanagedCode` 권한이 포함 된 스크립트를 컴파일되지 않은 및 <xref:System.Security.SecurityException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-255">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="e020a-256">자세한 내용은 <xref:System.Security.Permissions.SecurityPermission> 및 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="e020a-256">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e020a-257">다음 예제에서는 HTML 문서를 XML 문서를 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-257">The following example transforms an XML document into an HTML document.</span></span> <span data-ttu-id="e020a-258">포함 된 XSLT 스타일 시트를 로드 하는 예제는 `xsl:include` 다른 스타일 시트를 참조 하는 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-258">The example loads an XSLT style sheet which contains an `xsl:include` element referencing another style sheet.</span></span> <span data-ttu-id="e020a-259"><xref:System.Xml.XmlUrlResolver> 에 전달 되는 <xref:System.Xml.Xsl.XslTransform.Load%2A> 포함된 스타일 시트에 대 한 네트워크 리소스에 액세스 하는 데 필요한 자격 증명을 설정 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="e020a-259">An <xref:System.Xml.XmlUrlResolver> is passed to the <xref:System.Xml.Xsl.XslTransform.Load%2A> method which sets the credentials necessary to access the network resource for the included style sheet.</span></span>  
  
 [!code-csharp[XslTransform.Load2#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load2/CS/trans2.cs#1)]
 [!code-vb[XslTransform.Load2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load2/VB/trans2.vb#1)]  
  
 <span data-ttu-id="e020a-260">이 예제에서는 입력으로 다음 데이터 파일을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-260">The example uses the following data files as input.</span></span>  
  
 `books.xml`  
  
 [!code-xml[XslTransform.Load2#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/books.xml#2)]  
  
 `sort.xsl`  
  
 [!code-xml[XslTransform.Load2#3](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/sort.xsl#3)]  
  
 `includefile.xsl`  
  
 [!code-xml[XslTransform.Load2#4](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/includefile.xsl#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="e020a-261">로드 된 리소스가 올바른 스타일 시트가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-261">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e020a-262">스타일 시트에 포함된 스크립트가 들어 있고 호출자에 게 없습니다 <see langword="UnmanagedCode" /> 권한.</span><span class="sxs-lookup"><span data-stu-id="e020a-262">The style sheet contains embedded script, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="e020a-263"><see cref="T:System.Xml.XmlReader" /> XSLT 스타일 시트를 포함 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-263">An <see cref="T:System.Xml.XmlReader" /> object that contains the XSLT style sheet.</span></span></param>
        <param name="resolver"><span data-ttu-id="e020a-264"><c>xsl:import</c> 및 <c>xsl:include</c> 요소에서 참조된 모든 스타일시트를 로그하는 데 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-264">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="e020a-265">이 경우 <see langword="null" />, 외부 리소스가 확인 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-265">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="e020a-266">합니다 <see cref="T:System.Xml.XmlResolver" /> 후 캐시 되지 않기를 <see cref="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" /> 메서드가 완료 되 면 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-266">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="e020a-267">에 포함 된 XSLT 스타일 시트를 로드 합니다 <see cref="T:System.Xml.XmlReader" />합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-267">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e020a-268"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-268">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e020a-269"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-269">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e020a-270">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="e020a-270">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e020a-271"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-271"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e020a-272">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-272">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e020a-273">이 메서드는에서 참조 되는 모든 스타일 시트를 포함 하 여 XSLT 스타일 시트를 로드 `xsl:include` 고 `xsl:import` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-273">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="e020a-274">스타일 시트의 현재 노드의 로드를 <xref:System.Xml.XmlReader> 모든 자식을 통해.</span><span class="sxs-lookup"><span data-stu-id="e020a-274">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="e020a-275">그러면 스타일 시트와 문서의 일부를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-275">This enables you to use a portion of a document as the style sheet.</span></span>  
  
 <span data-ttu-id="e020a-276">후 합니다 <xref:System.Xml.Xsl.XslTransform.Load%2A> 메서드가 반환 된 <xref:System.Xml.XmlReader> 스타일 시트의 끝 뒤에 다음 노드에 배치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-276">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="e020a-277">문서 끝에 도달하면 <xref:System.Xml.XmlReader>가 EOF(파일 끝)에 배치됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-277">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
 <span data-ttu-id="e020a-278">지정 해야 하는 경우 스타일 시트에 엔터티를 <xref:System.Xml.XmlReader> 엔터티를 확인할 수 있는 (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> 반환 `true`).</span><span class="sxs-lookup"><span data-stu-id="e020a-278">If the style sheet contains entities, you should specify an <xref:System.Xml.XmlReader> that can resolve entities (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> returns `true`).</span></span> <span data-ttu-id="e020a-279">이 경우에 <xref:System.Xml.XmlValidatingReader> 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-279">In this case, an <xref:System.Xml.XmlValidatingReader> can be used.</span></span>  
  
 <span data-ttu-id="e020a-280">스타일 시트에 포함 된 스크립트가 스크립트 어셈블리에 컴파일됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-280">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="e020a-281">어셈블리에 완전 신뢰 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-281">The assembly has full trust.</span></span> <span data-ttu-id="e020a-282">증명 정보를 사용 하 여 제공 하는 것이 좋습니다는 <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e020a-282">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="e020a-283">호출자에 게 없는 경우 `UnmanagedCode` 권한이 포함 된 스크립트를 컴파일되지 않은 및 <xref:System.Security.SecurityException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-283">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="e020a-284">자세한 내용은 <xref:System.Security.Permissions.SecurityPermission> 및 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="e020a-284">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="e020a-285">현재 노드가 올바른 스타일 시트에 맞지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-285">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e020a-286">스타일 시트에 포함된 스크립트가 들어 있고 호출자에 게 없습니다 <see langword="UnmanagedCode" /> 권한.</span><span class="sxs-lookup"><span data-stu-id="e020a-286">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="e020a-287">구현 하는 개체는 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-287">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="e020a-288">.NET Framework에서 이 개체는 <see cref="T:System.Xml.XmlNode" />(대개 <see cref="T:System.Xml.XmlDocument" />) 또는 XSLT 스타일시트를 포함하는 <see cref="T:System.Xml.XPath.XPathDocument" />일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-288">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the XSLT style sheet.</span></span></param>
        <param name="resolver"><span data-ttu-id="e020a-289"><c>xsl:import</c> 및 <c>xsl:include</c> 요소에서 참조된 모든 스타일시트를 로그하는 데 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-289">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="e020a-290">이 경우 <see langword="null" />, 외부 리소스가 확인 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-290">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="e020a-291">합니다 <see cref="T:System.Xml.XmlResolver" /> 후 캐시 되지 않기를 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> 메서드가 완료 되 면 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-291">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <summary><span data-ttu-id="e020a-292">에 포함 된 XSLT 스타일 시트를 로드 합니다 <see cref="T:System.Xml.XPath.IXPathNavigable" />합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-292">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e020a-293"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-293">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e020a-294"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-294">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e020a-295">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="e020a-295">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e020a-296"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-296"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e020a-297">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-297">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e020a-298">스타일 시트에 포함 된 스크립트가 스크립트 어셈블리에 컴파일됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-298">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="e020a-299">어셈블리에 완전 신뢰 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-299">The assembly has full trust.</span></span> <span data-ttu-id="e020a-300">증명 정보를 사용 하 여 제공 하는 것이 좋습니다는 <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e020a-300">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="e020a-301">호출자에 게 없는 경우 `UnmanagedCode` 권한이 포함 된 스크립트를 컴파일되지 않은 및 <xref:System.Security.SecurityException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-301">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="e020a-302">자세한 내용은 <xref:System.Security.Permissions.SecurityPermission> 및 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="e020a-302">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="e020a-303">로드 된 리소스가 올바른 스타일 시트가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-303">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e020a-304">스타일 시트에 포함된 스크립트가 들어 있고 호출자에 게 없습니다 <see langword="UnmanagedCode" /> 권한.</span><span class="sxs-lookup"><span data-stu-id="e020a-304">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XPathNavigator, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.XPathNavigator * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="e020a-305"><see cref="T:System.Xml.XPath.XPathNavigator" /> XSLT 스타일 시트를 포함 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-305">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object that contains the XSLT style sheet.</span></span></param>
        <param name="resolver"><span data-ttu-id="e020a-306"><c>xsl:import</c> 및 <c>xsl:include</c> 요소에서 참조된 모든 스타일시트를 로그하는 데 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-306">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="e020a-307">이 경우 <see langword="null" />, 외부 리소스가 확인 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-307">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="e020a-308">합니다 <see cref="T:System.Xml.XmlResolver" /> 후 캐시 되지 않기를 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> 메서드가 완료 되 면 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-308">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <summary><span data-ttu-id="e020a-309">에 포함 된 XSLT 스타일 시트를 로드 합니다 <see cref="T:System.Xml.XPath.XPathNavigator" />합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-309">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.XPathNavigator" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e020a-310"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-310">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e020a-311"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-311">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e020a-312">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="e020a-312">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e020a-313"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-313"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e020a-314">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-314">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e020a-315">스타일 시트의 현재 위치에서 로드 되는 <xref:System.Xml.XPath.XPathNavigator>합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-315">The style sheet is loaded from the current position of the <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="e020a-316">스타일 시트를 로드 된 문서의 부분으로 사용 하려면 스타일 시트의 시작 부분에 해당 노드로 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-316">To use a portion of the loaded document as the style sheet, navigate to the node corresponding to the beginning of the style sheet.</span></span> <span data-ttu-id="e020a-317">후 합니다 <xref:System.Xml.Xsl.XslTransform.Load%2A> 메서드가 반환 합니다 <xref:System.Xml.XPath.XPathNavigator> 스타일 시트의 시작 부분에 배치 됩니다 (에 `xsl:style sheet` 노드).</span><span class="sxs-lookup"><span data-stu-id="e020a-317">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XPath.XPathNavigator> is positioned at the beginning of the style sheet (on the `xsl:style sheet` node).</span></span>  
  
 <span data-ttu-id="e020a-318">스타일 시트에 포함 된 스크립트가 스크립트 어셈블리에 컴파일됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-318">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="e020a-319">어셈블리에 완전 신뢰 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-319">The assembly has full trust.</span></span> <span data-ttu-id="e020a-320">증명 정보를 사용 하 여 제공 하는 것이 좋습니다는 <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-320">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="e020a-321">호출자에 게 없는 경우 `UnmanagedCode` 권한이 포함 된 스크립트를 컴파일되지 않은 및 <xref:System.Security.SecurityException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-321">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="e020a-322">자세한 내용은 <xref:System.Security.Permissions.SecurityPermission> 및 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="e020a-322">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="e020a-323">현재 노드가 올바른 스타일 시트에 맞지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-323">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e020a-324">스타일 시트에 포함된 스크립트가 들어 있고 호출자에 게 없습니다 <see langword="UnmanagedCode" /> 권한.</span><span class="sxs-lookup"><span data-stu-id="e020a-324">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader * System.Xml.XmlResolver * System.Security.Policy.Evidence -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver, evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="e020a-325"><see cref="T:System.Xml.XmlReader" /> 로드할 스타일 시트를 포함 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-325">An <see cref="T:System.Xml.XmlReader" /> object containing the style sheet to load.</span></span></param>
        <param name="resolver"><span data-ttu-id="e020a-326"><c>xsl:import</c> 및 <c>xsl:include</c> 요소에서 참조된 모든 스타일시트를 로그하는 데 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-326">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="e020a-327">이 경우 <see langword="null" />, 외부 리소스가 확인 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-327">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="e020a-328">합니다 <see cref="T:System.Xml.XmlResolver" /> 후 캐시 되지 않기를 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> 메서드가 완료 되 면 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-328">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <param name="evidence"><span data-ttu-id="e020a-329"><see cref="T:System.Security.Policy.Evidence" /> XSLT 스타일 시트의 스크립트 블록에 대 한 생성 된 어셈블리를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-329">The <see cref="T:System.Security.Policy.Evidence" /> set on the assembly generated for the script block in the XSLT style sheet.</span></span>  
  
<span data-ttu-id="e020a-330">이 값이 <see langword="null" />이면 스크립트 블록이 처리되지 않고, XSLT <c>document()</c> 함수가 지원되지 않으며, 권한이 필요한 확장 개체를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-330">If this is <see langword="null" />, script blocks are not processed, the XSLT <c>document()</c> function is not supported, and privileged extension objects are disallowed.</span></span>  
  
<span data-ttu-id="e020a-331">호출자에 게 있어야 <see langword="ControlEvidence" /> 스크립트 어셈블리에 대 한 증명 정보를 제공 하기 위해 권한이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-331">The caller must have <see langword="ControlEvidence" /> permission in order to supply evidence for the script assembly.</span></span> <span data-ttu-id="e020a-332">부분적으로 신뢰할 수 있는 호출자이 매개 변수를 설정할 수 있습니다 <see langword="null" />합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-332">Semi-trusted callers can set this parameter to <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="e020a-333">에 포함 된 XSLT 스타일 시트를 로드 합니다 <see cref="T:System.Xml.XmlReader" />합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-333">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span></span> <span data-ttu-id="e020a-334">이 메서드를 사용 하면 증명 정보를 지정 하 여 스타일 시트의 권한을 제한할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-334">This method allows you to limit the permissions of the style sheet by specifying evidence.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e020a-335"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-335">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e020a-336"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-336">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e020a-337">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="e020a-337">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e020a-338"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-338"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e020a-339">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-339">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e020a-340">이 메서드는에서 참조 되는 모든 스타일 시트를 포함 하 여 XSLT 스타일 시트를 로드 `xsl:include` 고 `xsl:import` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-340">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="e020a-341">스타일 시트의 현재 노드의 로드를 <xref:System.Xml.XmlReader> 모든 자식을 통해.</span><span class="sxs-lookup"><span data-stu-id="e020a-341">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="e020a-342">그러면 스타일 시트와 문서의 일부를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-342">This enables you to use a portion of a document as the style sheet.</span></span>  
  
 <span data-ttu-id="e020a-343">후 합니다 <xref:System.Xml.Xsl.XslTransform.Load%2A> 메서드가 반환 된 <xref:System.Xml.XmlReader> 스타일 시트의 끝 뒤에 다음 노드에 배치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-343">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="e020a-344">문서 끝에 도달하면 <xref:System.Xml.XmlReader>가 EOF(파일 끝)에 배치됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-344">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
 <span data-ttu-id="e020a-345">지정 해야 하는 경우 스타일 시트에 엔터티를 <xref:System.Xml.XmlReader> 엔터티를 확인할 수 있는 (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> 반환 `true`).</span><span class="sxs-lookup"><span data-stu-id="e020a-345">If the style sheet contains entities, you should specify an <xref:System.Xml.XmlReader> that can resolve entities (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> returns `true`).</span></span> <span data-ttu-id="e020a-346">이 경우에 <xref:System.Xml.XmlValidatingReader> 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-346">In this case, an <xref:System.Xml.XmlValidatingReader> can be used.</span></span>  
  

  
 <span data-ttu-id="e020a-347">증명 정보를 제공 하는 방법은 여러 가지입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-347">There are different ways to provide evidence.</span></span> <span data-ttu-id="e020a-348">다음 표에서 일반적인 사용자 시나리오에 대해 제공할 증명 정보 형식을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-348">The following table describes what type of evidence to provide for common user scenarios.</span></span>  
  
|<span data-ttu-id="e020a-349">시나리오</span><span class="sxs-lookup"><span data-stu-id="e020a-349">Scenario</span></span>|<span data-ttu-id="e020a-350">제공할 증명 정보 형식</span><span class="sxs-lookup"><span data-stu-id="e020a-350">Type of evidence to provide</span></span>|  
|--------------|---------------------------------|  
|<span data-ttu-id="e020a-351">XSLT 스타일 시트를 자체 포함 되었거나 신뢰할 수 있는 코드 베이스에서 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-351">The XSLT style sheet is self-contained or comes from a code base that you trust.</span></span>|<span data-ttu-id="e020a-352">어셈블리에서 증명 정보를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-352">Use the evidence from your assembly.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;xslt.Load(xslReader, resolver, this.GetType().Assembly.Evidence);</code></pre>|  
|<span data-ttu-id="e020a-353">XSLT 스타일시트를 외부 소스에서 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-353">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="e020a-354">소스의 원본을 알 수 있으며 검증할 수 있는 URL이 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-354">The origin of the source is known, and there is a verifiable URL.</span></span>|<span data-ttu-id="e020a-355">URL을 사용 하 여 증명 정보를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-355">Create evidence using the URL.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform();&#13;&#10; Evidence evidence = XmlSecureResolver.CreateEvidenceForUrl(stylesheetURL); &#13;&#10;xslt.Load(xslReader,resolver,evidence);</code></pre>|  
|<span data-ttu-id="e020a-356">XSLT 스타일시트를 외부 소스에서 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-356">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="e020a-357">소스의 원본을 알 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-357">The origin of the source is not known.</span></span>|<span data-ttu-id="e020a-358">증명 정보를 `null`로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-358">Set evidence to `null`.</span></span> <span data-ttu-id="e020a-359">스크립트 블록이 처리되지 않고, XSLT `document()` 함수가 지원되지 않으며, 권한 있는 확장 개체는 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-359">Script blocks are not processed, the XSLT `document()` function is not supported, and privileged extension objects are disallowed.</span></span><br /><br /> <span data-ttu-id="e020a-360">또한 설정할 수도 있습니다는 `resolver` 매개 변수를 `null`입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-360">Additionally, you can also set the `resolver` parameter to `null`.</span></span> <span data-ttu-id="e020a-361">이렇게 `xsl:import` 고 `xsl:include` 요소가 처리 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-361">This ensures that `xsl:import` and `xsl:include` elements are not processed.</span></span>|  
|<span data-ttu-id="e020a-362">XSLT 스타일시트를 외부 소스에서 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-362">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="e020a-363">소스의 원본을 알 수 없지만 스크립트 지원이 필요합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-363">The origin of the source is not known, but you require script support.</span></span>|<span data-ttu-id="e020a-364">호출자의 증명 정보를 요청합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-364">Request evidence from the caller.</span></span> <span data-ttu-id="e020a-365">API 호출자의 증명 정보, 일반적으로 제공 하는 방법을 제공 해야 합니다는 <xref:System.Security.Policy.Evidence> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-365">The API of the caller must provide a way to provide evidence, typically the <xref:System.Security.Policy.Evidence> class.</span></span>|  
  
     
## Examples  
 <span data-ttu-id="e020a-366">다음 예제에서는 XSLT 변환을 수행 위치 `xsltReader` 되는 <xref:System.Xml.XmlReader> 스타일 시트가 포함 된 및 `secureURL` 만드는 데 사용할 수 있는 신뢰할 수 있는 url <xref:System.Security.Policy.Evidence>.</span><span class="sxs-lookup"><span data-stu-id="e020a-366">The following example performs an XSLT transformation where `xsltReader` is an <xref:System.Xml.XmlReader> containing a style sheet and `secureURL` is a trusted URL that can be used to create <xref:System.Security.Policy.Evidence>.</span></span> <span data-ttu-id="e020a-367">합니다 <xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A?displayProperty=nameWithType> 메서드는 만드는 데 <xref:System.Security.Policy.Evidence> 스타일 시트에 적용 되는 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-367">The <xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A?displayProperty=nameWithType> method is used to create <xref:System.Security.Policy.Evidence> which is applied to the style sheet.</span></span>  
  
 [!code-cpp[XslTransform.Load4#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Load4/CPP/trans_ev.cpp#1)]
 [!code-csharp[XslTransform.Load4#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load4/CS/trans_ev.cs#1)]
 [!code-vb[XslTransform.Load4#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load4/VB/trans_ev.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="e020a-368">현재 노드가 올바른 스타일 시트에 맞지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-368">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e020a-369">참조 된 스타일 시트에는 제공 된 증명 정보에서 허용 되지 않는 기능이 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-369">The referenced style sheet requires functionality that is not allowed by the evidence provided.</span></span>  
  
<span data-ttu-id="e020a-370">호출자에 게 증명 정보를 제공 하려고 없고 <see langword="ControlEvidence" /> 권한.</span><span class="sxs-lookup"><span data-stu-id="e020a-370">The caller tries to supply evidence and does not have <see langword="ControlEvidence" /> permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="e020a-371">증명 정보를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-371">for providing evidence.</span></span> <span data-ttu-id="e020a-372">연결 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="e020a-372">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable * System.Xml.XmlResolver * System.Security.Policy.Evidence -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver, evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="e020a-373">구현 하는 개체는 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-373">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="e020a-374">.NET Framework에서 이 개체는 <see cref="T:System.Xml.XmlNode" />(대개 <see cref="T:System.Xml.XmlDocument" />) 또는 XSLT 스타일시트를 포함하는 <see cref="T:System.Xml.XPath.XPathDocument" />일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-374">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the XSLT style sheet.</span></span></param>
        <param name="resolver"><span data-ttu-id="e020a-375"><c>xsl:import</c> 및 <c>xsl:include</c> 요소에서 참조된 모든 스타일시트를 로그하는 데 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-375">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="e020a-376">이 경우 <see langword="null" />, 외부 리소스가 확인 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-376">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="e020a-377">합니다 <see cref="T:System.Xml.XmlResolver" /> 후 캐시 되지 않기를 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> 메서드가 완료 되 면 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-377">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <param name="evidence"><span data-ttu-id="e020a-378"><see cref="T:System.Security.Policy.Evidence" /> XSLT 스타일 시트의 스크립트 블록에 대 한 생성 된 어셈블리를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-378">The <see cref="T:System.Security.Policy.Evidence" /> set on the assembly generated for the script block in the XSLT style sheet.</span></span>  
  
<span data-ttu-id="e020a-379">이 값이 <see langword="null" />이면 스크립트 블록이 처리되지 않고, XSLT <c>document()</c> 함수가 지원되지 않으며, 권한이 필요한 확장 개체를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-379">If this is <see langword="null" />, script blocks are not processed, the XSLT <c>document()</c> function is not supported, and privileged extension objects are disallowed.</span></span>  
  
<span data-ttu-id="e020a-380">호출자에 게 있어야 <see langword="ControlEvidence" /> 스크립트 어셈블리에 대 한 증명 정보를 제공 하기 위해 권한이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-380">The caller must have <see langword="ControlEvidence" /> permission in order to supply evidence for the script assembly.</span></span> <span data-ttu-id="e020a-381">부분적으로 신뢰할 수 있는 호출자이 매개 변수를 설정할 수 있습니다 <see langword="null" />합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-381">Semi-trusted callers can set this parameter to <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="e020a-382">에 포함 된 XSLT 스타일 시트를 로드 합니다 <see cref="T:System.Xml.XPath.IXPathNavigable" />합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-382">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</span></span> <span data-ttu-id="e020a-383">이 메서드를 사용 하면 증명 정보를 지정 하 여 스타일 시트의 권한을 제한할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-383">This method allows you to limit the permissions of the style sheet by specifying evidence.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e020a-384"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-384">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e020a-385"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-385">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e020a-386">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="e020a-386">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e020a-387"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-387"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e020a-388">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-388">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  

  
 <span data-ttu-id="e020a-389">증명 정보를 제공 하는 방법은 여러 가지입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-389">There are different ways to provide evidence.</span></span> <span data-ttu-id="e020a-390">다음 표에서 일반적인 사용자 시나리오에 대해 제공할 증명 정보 형식을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-390">The following table describes what type of evidence to provide for common user scenarios.</span></span>  
  
|<span data-ttu-id="e020a-391">시나리오</span><span class="sxs-lookup"><span data-stu-id="e020a-391">Scenario</span></span>|<span data-ttu-id="e020a-392">제공할 증명 정보 형식</span><span class="sxs-lookup"><span data-stu-id="e020a-392">Type of evidence to provide</span></span>|  
|--------------|---------------------------------|  
|<span data-ttu-id="e020a-393">XSLT 스타일 시트를 자체 포함 되었거나 신뢰할 수 있는 코드 베이스에서 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-393">The XSLT style sheet is self-contained or comes from a code base that you trust.</span></span>|<span data-ttu-id="e020a-394">어셈블리에서 증명 정보를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-394">Use the evidence from your assembly.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;xslt.Load(style sheet, resolver, this.GetType().Assembly.Evidence);</code></pre>|  
|<span data-ttu-id="e020a-395">XSLT 스타일시트를 외부 소스에서 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-395">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="e020a-396">소스의 원본을 알 수 있으며 검증할 수 있는 URL이 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-396">The origin of the source is known, and there is a verifiable URL.</span></span>|<span data-ttu-id="e020a-397">URL을 사용 하 여 증명 정보를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-397">Create evidence using the URL.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;Evidence evidence = XmlSecureResolver.CreateEvidenceForUrl(style sheetURL); &#13;&#10;xslt.Load(style sheet,resolver,evidence);</code></pre>|  
|<span data-ttu-id="e020a-398">XSLT 스타일시트를 외부 소스에서 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-398">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="e020a-399">소스의 원본을 알 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-399">The origin of the source is not known.</span></span>|<span data-ttu-id="e020a-400">증명 정보를 `null`로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-400">Set evidence to `null`.</span></span> <span data-ttu-id="e020a-401">스크립트 블록이 처리되지 않고, XSLT `document()` 함수가 지원되지 않으며, 권한 있는 확장 개체는 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-401">Script blocks are not processed, the XSLT `document()` function is not supported, and privileged extension objects are disallowed.</span></span><br /><br /> <span data-ttu-id="e020a-402">또한 설정할 수도 있습니다는 `resolver` 매개 변수를 `null`입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-402">Additionally, you can also set the `resolver` parameter to `null`.</span></span> <span data-ttu-id="e020a-403">이렇게 `xsl:import` 고 `xsl:include` 요소가 처리 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-403">This ensures that `xsl:import` and `xsl:include` elements are not processed.</span></span>|  
|<span data-ttu-id="e020a-404">XSLT 스타일시트를 외부 소스에서 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-404">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="e020a-405">소스의 원본을 알 수 없지만 스크립트 지원이 필요합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-405">The origin of the source is not known, but you require script support.</span></span>|<span data-ttu-id="e020a-406">호출자의 증명 정보를 요청합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-406">Request evidence from the caller.</span></span> <span data-ttu-id="e020a-407">API 호출자의 증명 정보, 일반적으로 제공 하는 방법을 제공 해야 합니다는 <xref:System.Security.Policy.Evidence> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-407">The API of the caller must provide a way to provide evidence, typically the <xref:System.Security.Policy.Evidence> class.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="e020a-408">로드 된 리소스가 올바른 스타일 시트가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-408">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e020a-409">참조 된 스타일 시트에는 제공 된 증명 정보에서 허용 되지 않는 기능이 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-409">The referenced style sheet requires functionality that is not allowed by the evidence provided.</span></span>  
  
<span data-ttu-id="e020a-410">호출자에 게 증명 정보를 제공 하려고 없고 <see langword="ControlEvidence" /> 권한.</span><span class="sxs-lookup"><span data-stu-id="e020a-410">The caller tries to supply evidence and does not have <see langword="ControlEvidence" /> permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="e020a-411">증명 정보를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-411">for providing evidence.</span></span> <span data-ttu-id="e020a-412">연결 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="e020a-412">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.XPathNavigator * System.Xml.XmlResolver * System.Security.Policy.Evidence -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver, evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="e020a-413"><see cref="T:System.Xml.XPath.XPathNavigator" /> 로드할 스타일 시트를 포함 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-413">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object containing the style sheet to load.</span></span></param>
        <param name="resolver"><span data-ttu-id="e020a-414"><c>xsl:import</c> 및 <c>xsl:include</c> 요소에서 참조된 모든 스타일시트를 로그하는 데 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-414">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="e020a-415">이 경우 <see langword="null" />, 외부 리소스가 확인 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-415">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="e020a-416">합니다 <see cref="T:System.Xml.XmlResolver" /> 후 캐시 되지 않기를 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> 메서드가 완료 되 면 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-416">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <param name="evidence"><span data-ttu-id="e020a-417"><see cref="T:System.Security.Policy.Evidence" /> XSLT 스타일 시트의 스크립트 블록에 대 한 생성 된 어셈블리를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-417">The <see cref="T:System.Security.Policy.Evidence" /> set on the assembly generated for the script block in the XSLT style sheet.</span></span>  
  
<span data-ttu-id="e020a-418">이 값이 <see langword="null" />이면 스크립트 블록이 처리되지 않고, XSLT <c>document()</c> 함수가 지원되지 않으며, 권한이 필요한 확장 개체를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-418">If this is <see langword="null" />, script blocks are not processed, the XSLT <c>document()</c> function is not supported, and privileged extension objects are disallowed.</span></span>  
  
<span data-ttu-id="e020a-419">호출자에 게 있어야 <see langword="ControlEvidence" /> 스크립트 어셈블리에 대 한 증명 정보를 제공 하기 위해 권한이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-419">The caller must have <see langword="ControlEvidence" /> permission in order to supply evidence for the script assembly.</span></span> <span data-ttu-id="e020a-420">부분적으로 신뢰할 수 있는 호출자이 매개 변수를 설정할 수 있습니다 <see langword="null" />합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-420">Semi-trusted callers can set this parameter to <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="e020a-421">에 포함 된 XSLT 스타일 시트를 로드 합니다 <see cref="T:System.Xml.XPath.XPathNavigator" />합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-421">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.XPathNavigator" />.</span></span> <span data-ttu-id="e020a-422">이 메서드를 사용 하면 증명 정보를 지정 하 여 스타일 시트의 권한을 제한할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-422">This method allows you to limit the permissions of the style sheet by specifying evidence.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e020a-423"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-423">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e020a-424"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-424">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e020a-425">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="e020a-425">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e020a-426"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-426"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e020a-427">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-427">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e020a-428">스타일 시트의 현재 위치에서 로드 되는 <xref:System.Xml.XPath.XPathNavigator>합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-428">The style sheet is loaded from the current position of the <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="e020a-429">스타일 시트를 로드 된 문서의 부분으로 사용 하려면 스타일 시트의 시작 부분에 해당 노드로 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-429">To use a portion of the loaded document as the style sheet, navigate to the node corresponding to the beginning of the style sheet.</span></span> <span data-ttu-id="e020a-430">후 합니다 <xref:System.Xml.Xsl.XslTransform.Load%2A> 메서드가 반환 합니다 <xref:System.Xml.XPath.XPathNavigator> 스타일 시트의 시작 부분에 배치 됩니다 (에 `xsl:style sheet` 노드).</span><span class="sxs-lookup"><span data-stu-id="e020a-430">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XPath.XPathNavigator> is positioned at the beginning of the style sheet (on the `xsl:style sheet` node).</span></span>  
  

  
 <span data-ttu-id="e020a-431">증명 정보를 제공 하는 방법은 여러 가지입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-431">There are different ways to provide evidence.</span></span> <span data-ttu-id="e020a-432">다음 표에서 일반적인 사용자 시나리오에 대해 제공할 증명 정보 형식을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-432">The following table describes what type of evidence to provide for common user scenarios.</span></span>  
  
|<span data-ttu-id="e020a-433">시나리오</span><span class="sxs-lookup"><span data-stu-id="e020a-433">Scenario</span></span>|<span data-ttu-id="e020a-434">제공할 증명 정보 형식</span><span class="sxs-lookup"><span data-stu-id="e020a-434">Type of evidence to provide</span></span>|  
|--------------|---------------------------------|  
|<span data-ttu-id="e020a-435">XSLT 스타일 시트를 자체 포함 되었거나 신뢰할 수 있는 코드 베이스에서 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-435">The XSLT style sheet is self-contained or comes from a code base that you trust.</span></span>|<span data-ttu-id="e020a-436">어셈블리에서 증명 정보를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-436">Use the evidence from your assembly.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;xslt.Load(xslNav, resolver, this.GetType().Assembly.Evidence);</code></pre>|  
|<span data-ttu-id="e020a-437">XSLT 스타일시트를 외부 소스에서 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-437">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="e020a-438">소스의 원본을 알 수 있으며 검증할 수 있는 URL이 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-438">The origin of the source is known, and there is a verifiable URL.</span></span>|<span data-ttu-id="e020a-439">URL을 사용 하 여 증명 정보를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-439">Create evidence using the URL.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;Evidence evidence = XmlSecureResolver.CreateEvidenceForUrl(style sheetURL); &#13;&#10;xslt.Load(xslNav,resolver,evidence);</code></pre>|  
|<span data-ttu-id="e020a-440">XSLT 스타일시트를 외부 소스에서 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-440">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="e020a-441">소스의 원본을 알 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-441">The origin of the source is not known.</span></span>|<span data-ttu-id="e020a-442">증명 정보를 `null`로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-442">Set evidence to `null`.</span></span> <span data-ttu-id="e020a-443">스크립트 블록이 처리되지 않고, XSLT `document()` 함수가 지원되지 않으며, 권한 있는 확장 개체는 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-443">Script blocks are not processed, the XSLT `document()` function is not supported, and privileged extension objects are disallowed.</span></span><br /><br /> <span data-ttu-id="e020a-444">또한 설정할 수도 있습니다는 `resolver` 매개 변수를 `null`입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-444">Additionally, you can also set the `resolver` parameter to `null`.</span></span> <span data-ttu-id="e020a-445">이렇게 `xsl:import` 고 `xsl:include` 요소가 처리 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-445">This ensures that `xsl:import` and `xsl:include` elements are not processed.</span></span>|  
|<span data-ttu-id="e020a-446">XSLT 스타일시트를 외부 소스에서 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-446">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="e020a-447">소스의 원본을 알 수 없지만 스크립트 지원이 필요합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-447">The origin of the source is not known, but you require script support.</span></span>|<span data-ttu-id="e020a-448">호출자의 증명 정보를 요청합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-448">Request evidence from the caller.</span></span> <span data-ttu-id="e020a-449">API 호출자의 증명 정보, 일반적으로 제공 하는 방법을 제공 해야 합니다는 `Evidence` 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-449">The API of the caller must provide a way to provide evidence, typically the `Evidence` class.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="e020a-450">다음 예제에서는 외부 소스에서 스타일 시트를 사용 하 여 XSLT 변환을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-450">The following example performs an XSLT transformation using a style sheet from an outside source.</span></span> <span data-ttu-id="e020a-451">신뢰할 수 없는 소스에서 스타일 시트를 제공 하므로 합니다 `resolver` 하 고 `evidence` 매개 변수를 설정 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-451">Because the style sheet comes from an untrusted source, the `resolver` and `evidence` parameters are set to `null`.</span></span>  
 
 [!code-csharp[XslTransform.Load5#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load5/CS/trans_noev.cs#1)]
 [!code-vb[XslTransform.Load5#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load5/VB/trans_noev.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="e020a-452">현재 노드가 올바른 스타일 시트에 맞지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-452">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e020a-453">참조 된 스타일 시트에는 제공 된 증명 정보에서 허용 되지 않는 기능이 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-453">The referenced style sheet requires functionality that is not allowed by the evidence provided.</span></span>  
  
<span data-ttu-id="e020a-454">호출자에 게 증명 정보를 제공 하려고 없고 <see langword="ControlEvidence" /> 권한.</span><span class="sxs-lookup"><span data-stu-id="e020a-454">The caller tries to supply evidence and does not have <see langword="ControlEvidence" /> permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="e020a-455">증명 정보를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-455">for providing evidence.</span></span> <span data-ttu-id="e020a-456">연결 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="e020a-456">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Transform">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e020a-457">로드할된 XSLT 스타일 시트를 사용 하 여 XML 데이터를 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-457">Transforms the XML data using the loaded XSLT style sheet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e020a-458"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-458">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e020a-459"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-459">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e020a-460">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="e020a-460">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputfile, string outputfile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputfile, string outputfile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputfile As String, outputfile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputfile, System::String ^ outputfile);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * string -&gt; unit" Usage="xslTransform.Transform (inputfile, outputfile)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputfile" Type="System.String" />
        <Parameter Name="outputfile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputfile"><span data-ttu-id="e020a-461">변환할 소스 문서의 URL입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-461">The URL of the source document to be transformed.</span></span></param>
        <param name="outputfile"><span data-ttu-id="e020a-462">출력 파일의 URL입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-462">The URL of the output file.</span></span></param>
        <summary><span data-ttu-id="e020a-463">입력된 파일의 XML 데이터를 변환 하 고 출력 파일에 결과 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-463">Transforms the XML data in the input file and outputs the result to an output file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e020a-464"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-464">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e020a-465"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-465">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e020a-466">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="e020a-466">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e020a-467"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-467"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e020a-468">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-468">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e020a-469">이 메서드는.NET Framework의 버전 1.1에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-469">This method is obsolete in version 1.1 of the .NET Framework.</span></span> <span data-ttu-id="e020a-470">설정 합니다 <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> 속성에 따라 결정 하는 방법을 XSLT `document()` 함수는 해결 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-470">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="e020a-471">사용 하는 것이 좋습니다는 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 를 사용 하는 메서드는 <xref:System.Xml.XmlResolver> 해당 인수 중 하나로 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-471">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e020a-472">다음 예제에서는 변환 합니다 `books.xml` 를 사용 하 여 파일을 `output.xsl` 스타일 시트 결과를 출력를 `books.html` 파일.</span><span class="sxs-lookup"><span data-stu-id="e020a-472">The following example transforms the `books.xml` file using the `output.xsl` style sheet and outputs the results to the `books.html` file.</span></span>  
  
 [!code-cpp[XslTransform.Transform3#1](~/samples/snippets/cpp/VS_Snippets_Data/xsltransform.transform3/CPP/trans_snip2.cpp#1)]
 [!code-csharp[XslTransform.Transform3#1](~/samples/snippets/csharp/VS_Snippets_Data/xsltransform.transform3/CS/trans_snip2.cs#1)]
 [!code-vb[XslTransform.Transform3#1](~/samples/snippets/visualbasic/VS_Snippets_Data/xsltransform.transform3/VB/trans_snip2.vb#1)]  
  
 <span data-ttu-id="e020a-473">이 샘플에서는 다음 두 개의 입력된 파일 사용:</span><span class="sxs-lookup"><span data-stu-id="e020a-473">The sample uses the following two input files:</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="e020a-474">XslTransform 클래스에서 임의 동작 구현</span><span class="sxs-lookup"><span data-stu-id="e020a-474">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="e020a-475">XslTransform 출력</span><span class="sxs-lookup"><span data-stu-id="e020a-475">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As IXPathNavigable, args As XsltArgumentList) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="e020a-476">구현 하는 개체는 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-476">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="e020a-477">.NET Framework에서 이 개체는 변환할 데이터를 포함하는 <see cref="T:System.Xml.XmlNode" />(대개 <see cref="T:System.Xml.XmlDocument" />) 또는 <see cref="T:System.Xml.XPath.XPathDocument" />일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-477">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="e020a-478"><see cref="T:System.Xml.Xsl.XsltArgumentList" /> 변환의 입력으로 사용 되는 네임 스페이스 정규화 인수가 포함 된 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-478">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <summary><span data-ttu-id="e020a-479">XML 데이터를 변환 합니다 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 지정 된 <paramref name="args" /> 결과를 출력 하 고는 <see cref="T:System.Xml.XmlReader" />합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-479">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="e020a-480"><see cref="T:System.Xml.XmlReader" /> 변환의 결과 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-480">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e020a-481"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-481">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e020a-482"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-482">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e020a-483">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="e020a-483">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e020a-484"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-484"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e020a-485">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-485">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e020a-486">이 메서드는 더 이상 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-486">This method is now obsolete.</span></span> <span data-ttu-id="e020a-487">설정 합니다 <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> 속성에 따라 결정 하는 방법을 XSLT `document()` 함수는 해결 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-487">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="e020a-488">사용 하는 것이 좋습니다는 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 를 사용 하는 메서드는 <xref:System.Xml.XmlResolver> 해당 인수 중 하나로 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-488">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="e020a-489">합니다 `args` 와 일치 합니다 `xsl:param` 스타일 시트에 정의 된 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-489">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="e020a-490">합니다 `xsl:output` 출력 하는 경우에 요소가 지원 되지 않습니다는 <xref:System.Xml.XmlReader> (의 `xsl:output` 요소는 무시 됩니다).</span><span class="sxs-lookup"><span data-stu-id="e020a-490">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlReader> (the `xsl:output` element is ignored).</span></span> <span data-ttu-id="e020a-491">참조 [xsltransform에서 출력](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) 자세한 내용은 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-491">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="e020a-492">이 메서드를 사용 하면 원본 문서는 비동기 변환을 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-492">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
 <span data-ttu-id="e020a-493">변형은 문서 전체에 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-493">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="e020a-494">즉, 문서 루트 노드 이외의 노드에 전달해도 변환 프로세스에서 로드된 문서의 모든 노드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-494">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="e020a-495">노드 조각을 변형 하려면 만들어야 합니다는 <xref:System.Xml.XmlDocument> 노드만 포함 된 조각 및 전달 <xref:System.Xml.XmlDocument> 에 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e020a-495">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="e020a-496">다음 예제에서는 노드 조각에서 변환을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-496">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="e020a-497">이 예제에서는 사용 합니다 `library.xml` 및 `print_root.xsl` 입력으로 파일 및 콘솔에 다음을 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-497">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="e020a-498">XslTransform 클래스에서 임의 동작 구현</span><span class="sxs-lookup"><span data-stu-id="e020a-498">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="e020a-499">XslTransform 출력</span><span class="sxs-lookup"><span data-stu-id="e020a-499">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As XPathNavigator, args As XsltArgumentList) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="e020a-500"><see cref="T:System.Xml.XPath.XPathNavigator" /> 변환할 데이터를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-500">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="e020a-501"><see cref="T:System.Xml.Xsl.XsltArgumentList" /> 변환의 입력으로 사용 되는 네임 스페이스 정규화 인수가 포함 된 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-501">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <summary><span data-ttu-id="e020a-502">XML 데이터를 변환 합니다 <see cref="T:System.Xml.XPath.XPathNavigator" /> 지정 된 <paramref name="args" /> 결과를 출력 하 고는 <see cref="T:System.Xml.XmlReader" />합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-502">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="e020a-503"><see cref="T:System.Xml.XmlReader" /> 변환의 결과 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-503">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e020a-504"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-504">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e020a-505"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-505">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e020a-506">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="e020a-506">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e020a-507"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-507"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e020a-508">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-508">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e020a-509">합니다 `args` 와 일치 합니다 `xsl:param` 스타일 시트에 정의 된 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-509">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="e020a-510">변환은 전체 문서에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-510">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="e020a-511">즉, 문서 루트 노드 이외의 노드 트리의 현재 노드에 설정 되어이 해도 변환 프로세스에서 로드 된 문서의 모든 노드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-511">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="e020a-512">변환 수행 된 후의 <xref:System.Xml.XPath.XPathNavigator> 는 원래 상태로 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-512">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="e020a-513">이 변환 프로세스 전에 현재 상태인 노드 뒤 현재 노드 유지 됨을 의미 합니다 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 메서드가 호출 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-513">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="e020a-514">때문에 <xref:System.Xml.XmlReader> 읽기 전용 출력을 제공 합니다 `xsl:output` 요소는 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-514">Because <xref:System.Xml.XmlReader> provides read-only output, the `xsl:output` element is ignored.</span></span> <span data-ttu-id="e020a-515">참조 [xsltransform에서 출력](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) 자세한 내용은 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-515">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="e020a-516">이 메서드를 사용 하면 원본 문서는 비동기 변환을 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-516">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e020a-517">이 메서드는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-517">This method is obsolete.</span></span> <span data-ttu-id="e020a-518">설정 된 <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> 속성 XSLT document () 함수를 확인 하는 방법을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-518">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT document() function is resolved.</span></span> <span data-ttu-id="e020a-519">사용 하는 것이 좋습니다는 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 를 사용 하는 메서드는 <xref:System.Xml.XmlResolver> 해당 인수 중 하나로 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-519">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e020a-520">XSLT 변환을 처리 하는 동안 오류가 발생 했습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-520">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="e020a-521">참고: 이전 버전에서 동작 변경 내용입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-521">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="e020a-522">Microsoft .NET Framework version 1.1이나 그 이전 버전을 사용할 경우에는 <see cref="T:System.Xml.Xsl.XsltException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-522">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="e020a-523">XslTransform 클래스에서 임의 동작 구현</span><span class="sxs-lookup"><span data-stu-id="e020a-523">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputfile, string outputfile, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputfile, string outputfile, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputfile As String, outputfile As String, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputfile, System::String ^ outputfile, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * string * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (inputfile, outputfile, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputfile" Type="System.String" />
        <Parameter Name="outputfile" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="inputfile"><span data-ttu-id="e020a-524">변환할 소스 문서의 URL입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-524">The URL of the source document to be transformed.</span></span></param>
        <param name="outputfile"><span data-ttu-id="e020a-525">출력 파일의 URL입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-525">The URL of the output file.</span></span></param>
        <param name="resolver"><span data-ttu-id="e020a-526">XSLT <c>document()</c> 함수 확인에 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-526">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="e020a-527">이 값이 <see langword="null" />이면 <c>document()</c> 함수가 확인되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-527">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="e020a-528">합니다 <see cref="T:System.Xml.XmlResolver" /> 후 캐시 되지 않기를 <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> 메서드가 완료 되 면 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-528">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> method completes.</span></span></param>
        <summary><span data-ttu-id="e020a-529">입력된 파일의 XML 데이터를 변환 하 고 출력 파일에 결과 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-529">Transforms the XML data in the input file and outputs the result to an output file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e020a-530"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-530">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e020a-531"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-531">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e020a-532">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="e020a-532">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e020a-533"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-533"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e020a-534">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-534">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e020a-535">다음 예제에서는 XSLT 변환을 수행 하 고 파일에 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-535">The following example performs an XSLT transformation and outputs to a file.</span></span> <span data-ttu-id="e020a-536"><xref:System.Xml.XmlUrlResolver> 기본 사용 자격 증명을 사용 하는 외부 리소스를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-536">An <xref:System.Xml.XmlUrlResolver> with default credentials is used resolve an external resources.</span></span> <span data-ttu-id="e020a-537">자세한 내용은 <xref:System.Net.CredentialCache.DefaultCredentials%2A>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="e020a-537">See <xref:System.Net.CredentialCache.DefaultCredentials%2A> for details.</span></span>  
  
 [!code-cpp[XslTransform.Transform7#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTRansform.Transform7/CPP/trans_snip4.cpp#1)]
 [!code-csharp[XslTransform.Transform7#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTRansform.Transform7/CS/trans_snip4.cs#1)]
 [!code-vb[XslTransform.Transform7#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTRansform.Transform7/VB/trans_snip4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.Stream -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="e020a-538">구현 하는 개체는 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-538">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="e020a-539">.NET Framework에서 이 개체는 변환할 데이터를 포함하는 <see cref="T:System.Xml.XmlNode" />(대개 <see cref="T:System.Xml.XmlDocument" />) 또는 <see cref="T:System.Xml.XPath.XPathDocument" />일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-539">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="e020a-540"><see cref="T:System.Xml.Xsl.XsltArgumentList" /> 변환의 입력으로 사용 되는 네임 스페이스 정규화 인수가 포함 된 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-540">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="e020a-541">출력할 대상 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-541">The stream to which you want to output.</span></span></param>
        <summary><span data-ttu-id="e020a-542">XML 데이터를 변환 합니다 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 지정 된 <paramref name="args" /> 하 고 결과를 출력을 <see cref="T:System.IO.Stream" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-542">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e020a-543"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-543">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e020a-544"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-544">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e020a-545">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="e020a-545">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e020a-546"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-546"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e020a-547">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-547">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e020a-548">이 메서드는 더 이상 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-548">This method is now obsolete.</span></span> <span data-ttu-id="e020a-549">설정 합니다 <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> 속성에 따라 결정 하는 방법을 XSLT `document()` 함수는 해결 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-549">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="e020a-550">사용 하는 것이 좋습니다는 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 를 사용 하는 메서드는 <xref:System.Xml.XmlResolver> 해당 인수 중 하나로 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-550">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="e020a-551">합니다 `args` 와 일치 합니다 `xsl:param` 스타일 시트에 정의 된 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-551">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="e020a-552">변환은 문서 전체에 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-552">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="e020a-553">즉, 문서 루트 노드 이외의 노드에 전달해도 변환 프로세스에서 로드된 문서의 모든 노드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-553">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="e020a-554">노드 조각을 변형 하려면 만들어야 합니다는 <xref:System.Xml.XmlDocument> 노드만 포함 된 조각 및 전달 <xref:System.Xml.XmlDocument> 에 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e020a-554">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="e020a-555">다음 예제에서는 노드 조각에서 변환을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-555">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="e020a-556">이 예제에서는 사용 합니다 `library.xml` 및 `print_root.xsl` 입력으로 파일 및 콘솔에 다음을 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-556">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e020a-557">XSLT 변환을 처리 하는 동안 오류가 발생 했습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-557">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="e020a-558">참고: 이전 버전에서 동작 변경 내용입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-558">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="e020a-559">Microsoft .NET Framework version 1.1이나 그 이전 버전을 사용할 경우에는 <see cref="T:System.Xml.Xsl.XsltException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-559">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="e020a-560">XslTransform 클래스에서 임의 동작 구현</span><span class="sxs-lookup"><span data-stu-id="e020a-560">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="e020a-561">XslTransform 출력</span><span class="sxs-lookup"><span data-stu-id="e020a-561">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="e020a-562">구현 하는 개체는 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-562">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="e020a-563">.NET Framework에서 이 개체는 변환할 데이터를 포함하는 <see cref="T:System.Xml.XmlNode" />(대개 <see cref="T:System.Xml.XmlDocument" />) 또는 <see cref="T:System.Xml.XPath.XPathDocument" />일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-563">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="e020a-564"><see cref="T:System.Xml.Xsl.XsltArgumentList" /> 변환의 입력으로 사용 되는 네임 스페이스 정규화 인수가 포함 된 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-564">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="e020a-565">출력을 제공할 대상 <see cref="T:System.IO.TextWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-565">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span></span></param>
        <summary><span data-ttu-id="e020a-566">XML 데이터를 변환 합니다 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 지정 된 <paramref name="args" /> 하 고 결과를 출력을 <see cref="T:System.IO.TextWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-566">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e020a-567"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-567">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e020a-568"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-568">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e020a-569">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="e020a-569">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e020a-570"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-570"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e020a-571">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-571">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e020a-572">이 메서드는 더 이상 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-572">This method is now obsolete.</span></span> <span data-ttu-id="e020a-573">설정 합니다 <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> 속성에 따라 결정 하는 방법을 XSLT `document()` 함수는 해결 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-573">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="e020a-574">사용 하는 것이 좋습니다는 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 를 사용 하는 메서드는 <xref:System.Xml.XmlResolver> 해당 인수 중 하나로 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-574">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="e020a-575">합니다 `args` 와 일치 합니다 `xsl:param` 스타일 시트에 정의 된 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-575">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="e020a-576">에 대 한 인코딩 특성을 `xsl:output` 출력 하는 경우에 요소가 지원 되지 않습니다는 <xref:System.IO.TextWriter>합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-576">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="e020a-577">참조 [xsltransform에서 출력](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) 에 대 한는 `xsl:output` 특성만 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-577">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
 <span data-ttu-id="e020a-578">변형은 문서 전체에 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-578">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="e020a-579">즉, 문서 루트 노드 이외의 노드에 전달해도 변환 프로세스에서 로드된 문서의 모든 노드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-579">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="e020a-580">노드 조각을 변형 하려면 만들어야 합니다는 <xref:System.Xml.XmlDocument> 조각, 노드만 포함 하 고 전달 <xref:System.Xml.XmlDocument> 에 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e020a-580">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment, and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="e020a-581">다음 예제에서는 노드 조각에서 변환을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-581">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="e020a-582">이 예제에서는 사용 합니다 `library.xml` 및 `print_root.xsl` 입력으로 파일 및 콘솔에 다음을 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-582">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e020a-583">XSLT 변환을 처리 하는 동안 오류가 발생 했습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-583">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="e020a-584">참고: 이전 버전에서 동작 변경 내용입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-584">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="e020a-585">Microsoft .NET Framework version 1.1이나 그 이전 버전을 사용할 경우에는 <see cref="T:System.Xml.Xsl.XsltException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-585">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="e020a-586">XslTransform 클래스에서 임의 동작 구현</span><span class="sxs-lookup"><span data-stu-id="e020a-586">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="e020a-587">XslTransform 출력</span><span class="sxs-lookup"><span data-stu-id="e020a-587">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As IXPathNavigable, args As XsltArgumentList, resolver As XmlResolver) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlResolver -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="e020a-588">구현 하는 개체는 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-588">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="e020a-589">.NET Framework에서 이 개체는 변환할 데이터를 포함하는 <see cref="T:System.Xml.XmlNode" />(대개 <see cref="T:System.Xml.XmlDocument" />) 또는 <see cref="T:System.Xml.XPath.XPathDocument" />일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-589">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="e020a-590"><see cref="T:System.Xml.Xsl.XsltArgumentList" /> 변환의 입력으로 사용 되는 네임 스페이스 정규화 인수가 포함 된 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-590">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="resolver"><span data-ttu-id="e020a-591">XSLT <c>document()</c> 함수 확인에 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-591">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="e020a-592">이 값이 <see langword="null" />이면 <c>document()</c> 함수가 확인되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-592">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="e020a-593">합니다 <see cref="T:System.Xml.XmlResolver" /> 후 캐시 되지 않기를 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" /> 메서드가 완료 되 면 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-593">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="e020a-594">XML 데이터를 변환 합니다 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 지정 된 <paramref name="args" /> 결과를 출력 하 고는 <see cref="T:System.Xml.XmlReader" />합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-594">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="e020a-595"><see cref="T:System.Xml.XmlReader" /> 변환의 결과 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-595">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e020a-596"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-596">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e020a-597"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-597">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e020a-598">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="e020a-598">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e020a-599"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-599"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e020a-600">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-600">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e020a-601">합니다 `args` 와 일치 합니다 `xsl:param` 스타일 시트에 정의 된 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-601">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="e020a-602">합니다 `xsl:output` 출력 하는 경우에 요소가 지원 되지 않습니다는 <xref:System.Xml.XmlReader> (의 `xsl:output` 요소는 무시 됩니다).</span><span class="sxs-lookup"><span data-stu-id="e020a-602">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlReader> (the `xsl:output` element is ignored).</span></span> <span data-ttu-id="e020a-603">참조 [xsltransform에서 출력](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) 자세한 내용은 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-603">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="e020a-604">이 메서드를 사용 하면 원본 문서는 비동기 변환을 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-604">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
 <span data-ttu-id="e020a-605">변형은 문서 전체에 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-605">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="e020a-606">즉, 문서 루트 노드 이외의 노드에 전달해도 변환 프로세스에서 로드된 문서의 모든 노드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-606">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="e020a-607">노드 조각을 변형 하려면 만들어야 합니다는 <xref:System.Xml.XmlDocument> 조각, 노드만 포함 하 고 전달 <xref:System.Xml.XmlDocument> 에 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e020a-607">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment, and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="e020a-608">다음 예제에서는 노드 조각에서 변환을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-608">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="e020a-609">이 예제에서는 사용 합니다 `library.xml` 및 `print_root.xsl` 입력으로 파일 및 콘솔에 다음을 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-609">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="e020a-610">다음 예제에서는 XML 문서를 변환 하 고 결과를 출력 합니다는 `XmlReader`합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-610">The following example transforms an XML document and outputs the results to an `XmlReader`.</span></span> <span data-ttu-id="e020a-611"><xref:System.Xml.XmlUrlResolver> 에 필요한 자격 증명을 사용 하 여 XSLT를 처리 하는 데 `document()` 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-611">An <xref:System.Xml.XmlUrlResolver> with the necessary credentials is used to process any XSLT `document()` functions.</span></span>  
  
 [!code-cpp[XslTransform.Transform4#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Transform4/CPP/trans_snip3.cpp#1)]
 [!code-csharp[XslTransform.Transform4#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform4/CS/trans_snip3.cs#1)]
 [!code-vb[XslTransform.Transform4#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform4/VB/trans_snip3.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="e020a-612">XslTransform 클래스에서 임의 동작 구현</span><span class="sxs-lookup"><span data-stu-id="e020a-612">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="e020a-613">XslTransform 출력</span><span class="sxs-lookup"><span data-stu-id="e020a-613">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="e020a-614">구현 하는 개체는 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-614">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="e020a-615">.NET Framework에서 이 개체는 변환할 데이터를 포함하는 <see cref="T:System.Xml.XmlNode" />(대개 <see cref="T:System.Xml.XmlDocument" />) 또는 <see cref="T:System.Xml.XPath.XPathDocument" />일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-615">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="e020a-616"><see cref="T:System.Xml.Xsl.XsltArgumentList" /> 변환의 입력으로 사용 되는 네임 스페이스 정규화 인수가 포함 된 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-616">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="e020a-617">출력을 제공할 대상 <see cref="T:System.Xml.XmlWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-617">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span></param>
        <summary><span data-ttu-id="e020a-618">XML 데이터를 변환 합니다 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 지정 된 <paramref name="args" /> 결과를 출력 하 고는 <see cref="T:System.Xml.XmlWriter" />합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-618">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e020a-619"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-619">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e020a-620"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-620">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e020a-621">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="e020a-621">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e020a-622"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-622"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e020a-623">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-623">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e020a-624">이 메서드는 더 이상 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-624">This method is now obsolete.</span></span> <span data-ttu-id="e020a-625">설정 합니다 <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> 속성에 따라 결정 하는 방법을 XSLT `document()` 함수는 해결 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-625">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="e020a-626">사용 하는 것이 좋습니다는 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 를 사용 하는 메서드는 <xref:System.Xml.XmlResolver> 해당 인수 중 하나로 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-626">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="e020a-627">합니다 `args` 와 일치 합니다 `xsl:param` 스타일 시트에 정의 된 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-627">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="e020a-628">합니다 `xsl:output` 출력 하는 경우에 요소가 지원 되지 않습니다는 <xref:System.Xml.XmlWriter> (`xsl:output` 무시 됩니다).</span><span class="sxs-lookup"><span data-stu-id="e020a-628">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="e020a-629">참조 [xsltransform에서 출력](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) 자세한 내용은 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-629">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="e020a-630">변형은 문서 전체에 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-630">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="e020a-631">즉, 문서 루트 노드 이외의 노드에 전달해도 변환 프로세스에서 로드된 문서의 모든 노드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-631">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="e020a-632">노드 조각을 변형 하려면 만들어야 합니다는 <xref:System.Xml.XmlDocument> 노드만 포함 된 조각 및 전달 <xref:System.Xml.XmlDocument> 에 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e020a-632">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="e020a-633">다음 예제에서는 노드 조각에서 변환을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-633">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="e020a-634">이 예제에서는 사용 합니다 `library.xml` 및 `print_root.xsl` 입력으로 파일 및 콘솔에 다음을 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-634">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />  
  <template match="/">  
  Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e020a-635">XSLT 변환을 처리 하는 동안 오류가 발생 했습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-635">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="e020a-636">참고: 이전 버전에서 동작 변경 내용입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-636">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="e020a-637">Microsoft .NET Framework version 1.1이나 그 이전 버전을 사용할 경우에는 <see cref="T:System.Xml.Xsl.XsltException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-637">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="e020a-638">XslTransform 클래스에서 임의 동작 구현</span><span class="sxs-lookup"><span data-stu-id="e020a-638">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="e020a-639">XslTransform 출력</span><span class="sxs-lookup"><span data-stu-id="e020a-639">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.Stream -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="e020a-640"><see cref="T:System.Xml.XPath.XPathNavigator" /> 변환할 데이터를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-640">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="e020a-641"><see cref="T:System.Xml.Xsl.XsltArgumentList" /> 변환의 입력으로 사용 되는 네임 스페이스 정규화 인수가 포함 된 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-641">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="e020a-642">출력할 대상 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-642">The stream to which you want to output.</span></span></param>
        <summary><span data-ttu-id="e020a-643">XML 데이터를 변환 합니다 <see cref="T:System.Xml.XPath.XPathNavigator" /> 지정 된 <paramref name="args" /> 하 고 결과를 출력을 <see cref="T:System.IO.Stream" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-643">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e020a-644"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-644">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e020a-645"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-645">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e020a-646">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="e020a-646">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e020a-647"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-647"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e020a-648">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-648">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e020a-649">합니다 `args` 와 일치 합니다 `xsl:param` 스타일 시트에 정의 된 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-649">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="e020a-650">변환은 전체 문서에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-650">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="e020a-651">즉, 문서 루트 노드 이외의 노드 트리의 현재 노드에 설정 되어이 해도 변환 프로세스에서 로드 된 문서의 모든 노드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-651">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="e020a-652">변환 수행 된 후의 <xref:System.Xml.XPath.XPathNavigator> 는 원래 상태로 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-652">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="e020a-653">이 변환 프로세스 전에 현재 상태인 노드 뒤 현재 노드 유지 됨을 의미 합니다 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 메서드가 호출 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-653">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="e020a-654">참조 [xsltransform에서 출력](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) 에 대 한는 `xsl:output` 특성만 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-654">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e020a-655">이 메서드는 더 이상 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-655">This method is now obsolete.</span></span> <span data-ttu-id="e020a-656">설정 합니다 <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> 속성에 따라 결정 하는 방법을 XSLT `document()` 함수는 해결 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-656">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="e020a-657">사용 하는 것이 좋습니다는 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 를 사용 하는 메서드는 <xref:System.Xml.XmlResolver> 해당 인수 중 하나로 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-657">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e020a-658">XSLT 변환을 처리 하는 동안 오류가 발생 했습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-658">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="e020a-659">참고: 이전 버전에서 동작 변경 내용입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-659">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="e020a-660">Microsoft .NET Framework version 1.1이나 그 이전 버전을 사용할 경우에는 <see cref="T:System.Xml.Xsl.XsltException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-660">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="e020a-661">XslTransform 클래스에서 임의 동작 구현</span><span class="sxs-lookup"><span data-stu-id="e020a-661">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="e020a-662"><see cref="T:System.Xml.XPath.XPathNavigator" /> 변환할 데이터를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-662">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="e020a-663"><see cref="T:System.Xml.Xsl.XsltArgumentList" /> 변환의 입력으로 사용 되는 네임 스페이스 정규화 인수가 포함 된 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-663">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="e020a-664">출력을 제공할 대상 <see cref="T:System.IO.TextWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-664">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span></span></param>
        <summary><span data-ttu-id="e020a-665">XML 데이터를 변환 합니다 <see cref="T:System.Xml.XPath.XPathNavigator" /> 지정 된 <paramref name="args" /> 하 고 결과를 출력을 <see cref="T:System.IO.TextWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-665">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e020a-666"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-666">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e020a-667"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-667">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e020a-668">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="e020a-668">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e020a-669"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-669"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e020a-670">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-670">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e020a-671">합니다 `args` 와 일치 합니다 `xsl:param` 스타일 시트에 정의 된 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-671">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="e020a-672">변환은 전체 문서에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-672">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="e020a-673">즉, 문서 루트 노드 이외의 노드 트리의 현재 노드에 설정 되어이 해도 변환 프로세스에서 로드 된 문서의 모든 노드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-673">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="e020a-674">변환 수행 된 후에 <xref:System.Xml.XPath.XPathNavigator> 는 원래 상태로 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-674">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="e020a-675">이 변환 프로세스 전에 현재 상태인 노드 뒤 현재 노드 유지 됨을 의미 합니다 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 메서드가 호출 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-675">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="e020a-676">에 대 한 인코딩 특성을 `xsl:output` 출력 하는 경우에 요소가 지원 되지 않습니다는 <xref:System.IO.TextWriter>합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-676">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="e020a-677">참조 [xsltransform에서 출력](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) 에 대 한는 `xsl:output` 특성만 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-677">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e020a-678">이 메서드는 더 이상 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-678">This method is now obsolete.</span></span> <span data-ttu-id="e020a-679">설정 합니다 <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> 속성에 따라 결정 하는 방법을 XSLT `document()` 함수는 해결 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-679">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="e020a-680">사용 하는 것이 좋습니다는 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 를 사용 하는 메서드는 <xref:System.Xml.XmlResolver> 해당 인수 중 하나로 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-680">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e020a-681">XSLT 변환을 처리 하는 동안 오류가 발생 했습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-681">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="e020a-682">참고: 이전 버전에서 동작 변경 내용입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-682">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="e020a-683">Microsoft .NET Framework version 1.1이나 그 이전 버전을 사용할 경우에는 <see cref="T:System.Xml.Xsl.XsltException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-683">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="e020a-684">XslTransform 클래스에서 임의 동작 구현</span><span class="sxs-lookup"><span data-stu-id="e020a-684">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As XPathNavigator, args As XsltArgumentList, resolver As XmlResolver) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlResolver -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="e020a-685"><see cref="T:System.Xml.XPath.XPathNavigator" /> 변환할 데이터를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-685">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="e020a-686"><see cref="T:System.Xml.Xsl.XsltArgumentList" /> 변환의 입력으로 사용 되는 네임 스페이스 정규화 인수가 포함 된 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-686">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="resolver"><span data-ttu-id="e020a-687">XSLT <c>document()</c> 함수 확인에 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-687">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="e020a-688">이 값이 <see langword="null" />이면 <c>document()</c> 함수가 확인되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-688">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="e020a-689">합니다 <see cref="T:System.Xml.XmlResolver" /> 후 캐시 되지 않기를 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" /> 메서드가 완료 되 면 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-689">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="e020a-690">XML 데이터를 변환 합니다 <see cref="T:System.Xml.XPath.XPathNavigator" /> 지정 된 <paramref name="args" /> 결과를 출력 하 고는 <see cref="T:System.Xml.XmlReader" />합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-690">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="e020a-691"><see cref="T:System.Xml.XmlReader" /> 변환의 결과 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-691">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e020a-692"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-692">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e020a-693"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-693">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e020a-694">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="e020a-694">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e020a-695"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-695"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e020a-696">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-696">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e020a-697">합니다 `args` 와 일치 합니다 `xsl:param` 스타일 시트에 정의 된 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-697">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="e020a-698">변환은 전체 문서에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-698">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="e020a-699">즉, 문서 루트 노드 이외의 노드 트리의 현재 노드에 설정 되어이 해도 변환 프로세스에서 로드 된 문서의 모든 노드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-699">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="e020a-700">변환 수행 된 후의 <xref:System.Xml.XPath.XPathNavigator> 는 원래 상태로 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-700">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="e020a-701">이 변환 프로세스 전에 현재 상태인 노드 뒤 현재 노드 유지 됨을 의미 합니다 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 메서드가 호출 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-701">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="e020a-702">때문에 <xref:System.Xml.XmlReader> 읽기 전용 출력을 제공 합니다 `xsl:output` 요소는 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-702">Because <xref:System.Xml.XmlReader> provides read-only output, the `xsl:output` element is ignored.</span></span> <span data-ttu-id="e020a-703">참조 [xsltransform에서 출력](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) 자세한 내용은 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-703">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="e020a-704">이 메서드를 사용 하면 원본 문서는 비동기 변환을 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-704">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e020a-705">XSLT 변환을 처리 하는 동안 오류가 발생 했습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-705">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="e020a-706">참고: 이전 버전에서 동작 변경 내용입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-706">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="e020a-707">Microsoft .NET Framework version 1.1이나 그 이전 버전을 사용할 경우에는 <see cref="T:System.Xml.Xsl.XsltException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-707">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="e020a-708">XslTransform 클래스에서 임의 동작 구현</span><span class="sxs-lookup"><span data-stu-id="e020a-708">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="e020a-709"><see cref="T:System.Xml.XPath.XPathNavigator" /> 변환할 데이터를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-709">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="e020a-710"><see cref="T:System.Xml.Xsl.XsltArgumentList" /> 변환의 입력으로 사용 되는 네임 스페이스 정규화 인수가 포함 된 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-710">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="e020a-711">출력을 제공할 대상 <see cref="T:System.Xml.XmlWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-711">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span></param>
        <summary><span data-ttu-id="e020a-712">XML 데이터를 변환 합니다 <see cref="T:System.Xml.XPath.XPathNavigator" /> 지정된 된 인수를 사용 하 고 결과를 출력 합니다는 <see cref="T:System.Xml.XmlWriter" />합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-712">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified args and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e020a-713"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-713">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e020a-714"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-714">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e020a-715">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="e020a-715">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e020a-716"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-716"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e020a-717">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-717">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e020a-718">합니다 `args` 와 일치 합니다 `xsl:param` 스타일 시트에 정의 된 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-718">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="e020a-719">변환은 전체 문서에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-719">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="e020a-720">즉, 문서 루트 노드 이외의 노드 트리의 현재 노드에 설정 되어이 해도 변환 프로세스에서 로드 된 문서의 모든 노드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-720">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="e020a-721">변환 수행 된 후에 <xref:System.Xml.XPath.XPathNavigator> 는 원래 상태로 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-721">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="e020a-722">이 변환 프로세스 전에 현재 된 노드 뒤 현재 노드 유지 됨을 의미 합니다 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 메서드가 호출 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-722">This means that the node, that is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="e020a-723">합니다 `xsl:output` 출력 하는 경우에 요소가 지원 되지 않습니다는 <xref:System.Xml.XmlWriter> (`xsl:output` 무시 됩니다).</span><span class="sxs-lookup"><span data-stu-id="e020a-723">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="e020a-724">참조 [xsltransform에서 출력](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) 자세한 내용은 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-724">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e020a-725">이 메서드는 더 이상 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-725">This method is now obsolete.</span></span> <span data-ttu-id="e020a-726">설정 합니다 <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> 속성에 따라 결정 하는 방법을 XSLT `document()` 함수는 해결 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-726">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="e020a-727">사용 하는 것이 좋습니다는 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 를 사용 하는 메서드는 <xref:System.Xml.XmlResolver> 해당 인수 중 하나로 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-727">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e020a-728">XSLT 변환을 처리 하는 동안 오류가 발생 했습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-728">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="e020a-729">참고: 이전 버전에서 동작 변경 내용입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-729">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="e020a-730">Microsoft .NET Framework version 1.1이나 그 이전 버전을 사용할 경우에는 <see cref="T:System.Xml.Xsl.XsltException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-730">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="e020a-731">XslTransform 클래스에서 임의 동작 구현</span><span class="sxs-lookup"><span data-stu-id="e020a-731">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As Stream, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.Stream * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="e020a-732">구현 하는 개체는 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-732">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="e020a-733">.NET Framework에서 이 개체는 변환할 데이터를 포함하는 <see cref="T:System.Xml.XmlNode" />(대개 <see cref="T:System.Xml.XmlDocument" />) 또는 <see cref="T:System.Xml.XPath.XPathDocument" />일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-733">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="e020a-734"><see cref="T:System.Xml.Xsl.XsltArgumentList" /> 변환의 입력으로 사용 되는 네임 스페이스 정규화 인수가 포함 된 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-734">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="e020a-735">출력할 대상 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-735">The stream to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="e020a-736">XSLT <c>document()</c> 함수 확인에 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-736">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="e020a-737">이 값이 <see langword="null" />이면 <c>document()</c> 함수가 확인되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-737">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="e020a-738">합니다 <see cref="T:System.Xml.XmlResolver" /> 후 캐시 되지 않기를 <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> 메서드가 완료 되 면 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-738">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> method completes.</span></span></param>
        <summary><span data-ttu-id="e020a-739">XML 데이터를 변환 합니다 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 지정 된 <paramref name="args" /> 하 고 결과를 출력을 <see cref="T:System.IO.Stream" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-739">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e020a-740"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-740">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e020a-741"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-741">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e020a-742">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="e020a-742">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e020a-743"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-743"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e020a-744">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-744">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e020a-745">합니다 `args` 와 일치 합니다 `xsl:param` 스타일 시트에 정의 된 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-745">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="e020a-746">변환은 문서 전체에 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-746">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="e020a-747">즉, 문서 루트 노드 이외의 노드에 전달해도 변환 프로세스에서 로드된 문서의 모든 노드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-747">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="e020a-748">노드 조각을 변형 하려면 만들어야 합니다는 <xref:System.Xml.XmlDocument> 노드만 포함 된 조각 및 전달 <xref:System.Xml.XmlDocument> 에 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e020a-748">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="e020a-749">다음 예제에서는 노드 조각에서 변환을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-749">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="e020a-750">이 예제에서는 사용 합니다 `library.xml` 및 `print_root.xsl` 입력으로 파일 및 콘솔에 다음을 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-750">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="e020a-751">다음 예제에서는 ASP.NET 페이지 내에서 변환을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-751">The following example performs a transformation within an ASP.NET page.</span></span>  
  
 [!code-aspx-csharp[XslTransform.Transform5#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform5/CS/transcs.aspx#1)]
 [!code-aspx-vb[XslTransform.Transform5#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform5/VB/transvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e020a-752">XSLT 변환을 처리 하는 동안 오류가 발생 했습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-752">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="e020a-753">참고: 이전 버전에서 동작 변경 내용입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-753">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="e020a-754">Microsoft .NET Framework version 1.1이나 그 이전 버전을 사용할 경우에는 <see cref="T:System.Xml.Xsl.XsltException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-754">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="e020a-755">XslTransform 클래스에서 임의 동작 구현</span><span class="sxs-lookup"><span data-stu-id="e020a-755">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="e020a-756">XslTransform 출력</span><span class="sxs-lookup"><span data-stu-id="e020a-756">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As TextWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="e020a-757">구현 하는 개체는 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-757">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="e020a-758">.NET Framework에서 이 개체는 변환할 데이터를 포함하는 <see cref="T:System.Xml.XmlNode" />(대개 <see cref="T:System.Xml.XmlDocument" />) 또는 <see cref="T:System.Xml.XPath.XPathDocument" />일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-758">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="e020a-759"><see cref="T:System.Xml.Xsl.XsltArgumentList" /> 변환의 입력으로 사용 되는 네임 스페이스 정규화 인수가 포함 된 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-759">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="e020a-760">출력을 제공할 대상 <see cref="T:System.IO.TextWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-760">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="e020a-761">XSLT <c>document()</c> 함수 확인에 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-761">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="e020a-762">이 값이 <see langword="null" />이면 <c>document()</c> 함수가 확인되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-762">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="e020a-763">합니다 <see cref="T:System.Xml.XmlResolver" /> 후 캐시 되지 않기를 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" /> 메서드가 완료 되 면 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-763">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="e020a-764">XML 데이터를 변환 합니다 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 지정 된 <paramref name="args" /> 하 고 결과를 출력을 <see cref="T:System.IO.TextWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-764">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e020a-765"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-765">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e020a-766"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-766">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e020a-767">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="e020a-767">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e020a-768"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-768"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e020a-769">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-769">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e020a-770">합니다 `args` 와 일치 합니다 `xsl:param` 스타일 시트에 정의 된 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-770">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="e020a-771">에 대 한 인코딩 특성을 `xsl:output` 출력 하는 경우에 요소가 지원 되지 않습니다는 <xref:System.IO.TextWriter>합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-771">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="e020a-772">참조 [xsltransform에서 출력](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) 에 대 한는 `xsl:output` 특성만 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-772">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
 <span data-ttu-id="e020a-773">변형은 문서 전체에 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-773">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="e020a-774">즉, 문서 루트 노드 이외의 노드에 전달해도 변환 프로세스에서 로드된 문서의 모든 노드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-774">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="e020a-775">노드 조각을 변형 하려면 만들어야 합니다는 <xref:System.Xml.XmlDocument> 노드만 포함 된 조각 및 전달 <xref:System.Xml.XmlDocument> 에 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e020a-775">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="e020a-776">다음 예제에서는 노드 조각에서 변환을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-776">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="e020a-777">이 예제에서는 사용 합니다 `library.xml` 및 `print_root.xsl` 입력으로 파일 및 콘솔에 다음을 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-777">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="e020a-778">다음 예제에서는 XML 파일을 변환 하 고 HTML 문자열을 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-778">The following example transforms an XML file and outputs an HTML string.</span></span> <span data-ttu-id="e020a-779">합니다 <xref:System.IO.StringReader> 고 <xref:System.IO.StringWriter> 클래스는 문자열을 읽고 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-779">The <xref:System.IO.StringReader> and <xref:System.IO.StringWriter> classes are used to read and write the strings.</span></span>  
  
 [!code-csharp[XslTransform.Transform6#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform6/CS/transstring.cs#1)]
 [!code-vb[XslTransform.Transform6#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform6/VB/transstring.vb#1)]  
  
 <span data-ttu-id="e020a-780">이 예제에서는 `books.xml` 파일을 입력으로 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-780">The example uses the `books.xml` file as input.</span></span>  
  
 [!code-xml[XslTransform.Transform6#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Transform6/XML/books.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e020a-781">XSLT 변환을 처리 하는 동안 오류가 발생 했습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-781">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="e020a-782">참고: 이전 버전에서 동작 변경 내용입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-782">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="e020a-783">Microsoft .NET Framework version 1.1이나 그 이전 버전을 사용할 경우에는 <see cref="T:System.Xml.Xsl.XsltException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-783">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="e020a-784">XslTransform 클래스에서 임의 동작 구현</span><span class="sxs-lookup"><span data-stu-id="e020a-784">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="e020a-785">XslTransform 출력</span><span class="sxs-lookup"><span data-stu-id="e020a-785">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As XmlWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="e020a-786">구현 하는 개체는 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-786">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="e020a-787">.NET Framework에서 이 개체는 변환할 데이터를 포함하는 <see cref="T:System.Xml.XmlNode" />(대개 <see cref="T:System.Xml.XmlDocument" />) 또는 <see cref="T:System.Xml.XPath.XPathDocument" />일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-787">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="e020a-788"><see cref="T:System.Xml.Xsl.XsltArgumentList" /> 변환의 입력으로 사용 되는 네임 스페이스 정규화 인수가 포함 된 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-788">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="e020a-789">출력을 제공할 대상 <see cref="T:System.Xml.XmlWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-789">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="e020a-790">XSLT <c>document()</c> 함수 확인에 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-790">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="e020a-791">이 값이 <see langword="null" />이면 <c>document()</c> 함수가 확인되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-791">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="e020a-792">합니다 <see cref="T:System.Xml.XmlResolver" /> 후 캐시 되지 않기를 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" /> 메서드가 완료 되 면 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-792">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="e020a-793">XML 데이터를 변환 합니다 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 지정 된 <paramref name="args" /> 결과를 출력 하 고는 <see cref="T:System.Xml.XmlWriter" />합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-793">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e020a-794"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-794">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e020a-795"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-795">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e020a-796">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="e020a-796">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e020a-797"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-797"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e020a-798">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-798">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e020a-799">합니다 `args` 와 일치 합니다 `xsl:param` 스타일 시트에 정의 된 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-799">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="e020a-800">합니다 `xsl:output` 출력 하는 경우에 요소가 지원 되지 않습니다는 <xref:System.Xml.XmlWriter> (`xsl:output` 무시 됩니다).</span><span class="sxs-lookup"><span data-stu-id="e020a-800">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="e020a-801">참조 [xsltransform에서 출력](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) 자세한 내용은 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-801">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="e020a-802">변형은 문서 전체에 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-802">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="e020a-803">즉, 문서 루트 노드 이외의 노드에 전달해도 변환 프로세스에서 로드된 문서의 모든 노드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-803">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="e020a-804">노드 조각을 변형 하려면 만들어야 합니다는 <xref:System.Xml.XmlDocument> 노드만 포함 된 조각 및 전달 <xref:System.Xml.XmlDocument> 에 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e020a-804">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="e020a-805">다음 예제에서는 노드 조각에서 변환을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-805">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="e020a-806">이 예제에서는 사용 합니다 `library.xml` 및 `print_root.xsl` 입력으로 파일 및 콘솔에 다음을 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-806">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />  
  <template match="/">  
  Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="e020a-807">다음 예제에서는 HTML 문서를 XML 문서를 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-807">The following example transforms an XML document into an HTML document.</span></span> <span data-ttu-id="e020a-808">테이블에서 ISBN, 제목 및 각 책의 가격은 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-808">It displays the ISBN, title, and price for each book in a table.</span></span>  
  
 [!code-cpp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="e020a-809">이 샘플에서는 다음 두 입력 파일을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-809">The sample uses the following two input files.</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e020a-810">XSLT 변환을 처리 하는 동안 오류가 발생 했습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-810">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="e020a-811">참고: 이전 버전에서 동작 변경 내용입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-811">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="e020a-812">Microsoft .NET Framework version 1.1이나 그 이전 버전을 사용할 경우에는 <see cref="T:System.Xml.Xsl.XsltException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-812">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="e020a-813">XslTransform 클래스에서 임의 동작 구현</span><span class="sxs-lookup"><span data-stu-id="e020a-813">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="e020a-814">XslTransform 출력</span><span class="sxs-lookup"><span data-stu-id="e020a-814">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As Stream, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.Stream * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="e020a-815"><see cref="T:System.Xml.XPath.XPathNavigator" /> 변환할 데이터를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-815">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="e020a-816"><see cref="T:System.Xml.Xsl.XsltArgumentList" /> 변환의 입력으로 사용 되는 네임 스페이스 정규화 인수가 포함 된 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-816">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="e020a-817">출력할 대상 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-817">The stream to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="e020a-818">XSLT <c>document()</c> 함수 확인에 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-818">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="e020a-819">이 값이 <see langword="null" />이면 <c>document()</c> 함수가 확인되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-819">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="e020a-820">합니다 <see cref="T:System.Xml.XmlResolver" /> 후 캐시 되지 않기를 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" /> 메서드가 완료 되 면 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-820">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="e020a-821">XML 데이터를 변환 합니다 <see cref="T:System.Xml.XPath.XPathNavigator" /> 지정 된 <paramref name="args" /> 하 고 결과를 출력을 <see cref="T:System.IO.Stream" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-821">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e020a-822"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-822">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e020a-823"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-823">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e020a-824">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="e020a-824">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e020a-825"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-825"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e020a-826">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-826">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e020a-827">합니다 `args` 와 일치 합니다 `xsl:param` 스타일 시트에 정의 된 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-827">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="e020a-828">변환은 전체 문서에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-828">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="e020a-829">즉, 문서 루트 노드 이외의 노드 트리의 현재 노드에 설정 되어이 해도 변환 프로세스에서 로드 된 문서의 모든 노드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-829">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="e020a-830">변환 수행 된 후의 <xref:System.Xml.XPath.XPathNavigator> 는 원래 상태로 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-830">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="e020a-831">이 변환 프로세스 전에 현재 상태인 노드 뒤 현재 노드 유지 됨을 의미 합니다 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 메서드가 호출 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-831">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="e020a-832">참조 [xsltransform에서 출력](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) 에 대 한는 `xsl:output` 특성만 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-832">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e020a-833">다음 예제에는 customer 테이블 로드는 <xref:System.Xml.XmlDataDocument> HTML 테이블에 고객 데이터를 가져올 XSLT 변환을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-833">The following example loads a customer table into an <xref:System.Xml.XmlDataDocument> and performs an XSLT transformation to pull the customer data into an HTML table.</span></span> <span data-ttu-id="e020a-834">이 예제에서는 Microsoft SQL Server 2000 Northwind 데이터베이스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-834">The example uses the Microsoft SQL Server 2000 Northwind database.</span></span>  
  
 [!code-csharp[XmlDataDocument.CreateNavigator#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlDataDocument.CreateNavigator/CS/dataset_trans.cs#1)]
 [!code-vb[XmlDataDocument.CreateNavigator#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlDataDocument.CreateNavigator/VB/dataset_trans.vb#1)]  
  
 <span data-ttu-id="e020a-835">이 예제에서는 `customers.xsl` 파일을 입력으로 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-835">The example uses the `customers.xsl` file as input.</span></span>  
  
 [!code-xml[XmlDataDocument.CreateNavigator#2](~/samples/snippets/xml/VS_Snippets_Data/XmlDataDocument.CreateNavigator/XML/customers.xsl#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e020a-836">XSLT 변환을 처리 하는 동안 오류가 발생 했습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-836">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="e020a-837">참고: 이전 버전에서 동작 변경 내용입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-837">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="e020a-838">Microsoft .NET Framework version 1.1이나 그 이전 버전을 사용할 경우에는 <see cref="T:System.Xml.Xsl.XsltException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-838">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="e020a-839">XslTransform 클래스에서 임의 동작 구현</span><span class="sxs-lookup"><span data-stu-id="e020a-839">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As TextWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="e020a-840"><see cref="T:System.Xml.XPath.XPathNavigator" /> 변환할 데이터를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-840">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="e020a-841"><see cref="T:System.Xml.Xsl.XsltArgumentList" /> 변환의 입력으로 사용 되는 네임 스페이스 정규화 인수가 포함 된 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-841">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="e020a-842">출력을 제공할 대상 <see cref="T:System.IO.TextWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-842">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="e020a-843">XSLT <c>document()</c> 함수 확인에 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-843">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="e020a-844">이 값이 <see langword="null" />이면 <c>document()</c> 함수가 확인되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-844">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="e020a-845">합니다 <see cref="T:System.Xml.XmlResolver" /> 후 캐시 되지 않기를 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" /> 메서드가 완료 되 면 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-845">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="e020a-846">XML 데이터를 변환 합니다 <see cref="T:System.Xml.XPath.XPathNavigator" /> 지정 된 <paramref name="args" /> 하 고 결과를 출력을 <see cref="T:System.IO.TextWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-846">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e020a-847"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-847">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e020a-848"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-848">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e020a-849">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="e020a-849">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e020a-850"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-850"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e020a-851">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-851">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e020a-852">합니다 `args` 와 일치 합니다 `xsl:param` 스타일 시트에 정의 된 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-852">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="e020a-853">변환은 전체 문서에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-853">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="e020a-854">즉, 문서 루트 노드 이외의 노드 트리의 현재 노드에 설정 되어이 해도 변환 프로세스에서 로드 된 문서의 모든 노드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-854">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="e020a-855">변환 수행 된 후에 <xref:System.Xml.XPath.XPathNavigator> 는 원래 상태로 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-855">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="e020a-856">이 변환 프로세스 전에 현재 상태인 노드 뒤 현재 노드 유지 됨을 의미 합니다 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 메서드가 호출 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-856">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="e020a-857">에 대 한 인코딩 특성을 `xsl:output` 출력 하는 경우에 요소가 지원 되지 않습니다는 <xref:System.IO.TextWriter>합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-857">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="e020a-858">참조 [xsltransform에서 출력](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) 에 대 한는 `xsl:output` 특성만 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-858">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e020a-859">XSLT 변환을 처리 하는 동안 오류가 발생 했습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-859">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="e020a-860">참고: 이전 버전에서 동작 변경 내용입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-860">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="e020a-861">Microsoft .NET Framework version 1.1이나 그 이전 버전을 사용할 경우에는 <see cref="T:System.Xml.Xsl.XsltException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-861">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="e020a-862">XslTransform 클래스에서 임의 동작 구현</span><span class="sxs-lookup"><span data-stu-id="e020a-862">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As XmlWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="e020a-863"><see cref="T:System.Xml.XPath.XPathNavigator" /> 변환할 데이터를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-863">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="e020a-864"><see cref="T:System.Xml.Xsl.XsltArgumentList" /> 변환의 입력으로 사용 되는 네임 스페이스 정규화 인수가 포함 된 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-864">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="e020a-865">출력을 제공할 대상 <see cref="T:System.Xml.XmlWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-865">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="e020a-866">XSLT <c>document()</c> 함수 확인에 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-866">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="e020a-867">이 값이 <see langword="null" />이면 <c>document()</c> 함수가 확인되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-867">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="e020a-868">합니다 <see cref="T:System.Xml.XmlResolver" /> 후 캐시 되지 않기를 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" /> 메서드가 완료 되 면 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-868">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="e020a-869">XML 데이터를 변환 합니다 <see cref="T:System.Xml.XPath.XPathNavigator" /> 지정된 된 인수를 사용 하 고 결과를 출력 합니다는 <see cref="T:System.Xml.XmlWriter" />합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-869">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified args and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e020a-870"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-870">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e020a-871"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-871">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e020a-872">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="e020a-872">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e020a-873"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 구문을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-873"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e020a-874">XSLT 스타일 시트에는 네임 스페이스 선언을 포함 해야 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-874">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e020a-875">합니다 `args` 와 일치 합니다 `xsl:param` 스타일 시트에 정의 된 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-875">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="e020a-876">변환은 전체 문서에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-876">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="e020a-877">즉, 문서 루트 노드 이외의 노드 트리의 현재 노드에 설정 되어이 해도 변환 프로세스에서 로드 된 문서의 모든 노드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-877">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="e020a-878">변환 수행 된 후에 <xref:System.Xml.XPath.XPathNavigator> 는 원래 상태로 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-878">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="e020a-879">이 변환 프로세스 전에 현재 된 노드 뒤 현재 노드 유지 됨을 의미 합니다 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 메서드가 호출 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-879">This means that the node, that is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="e020a-880">합니다 `xsl:output` 출력 하는 경우에 요소가 지원 되지 않습니다는 <xref:System.Xml.XmlWriter> (`xsl:output` 무시 됩니다).</span><span class="sxs-lookup"><span data-stu-id="e020a-880">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="e020a-881">참조 [xsltransform에서 출력](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) 자세한 내용은 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-881">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e020a-882">다음 예제에서는 로드 하 고 XSLT 변형을 수행 하기 전에 XML 문서를 편집 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-882">The following example loads and edits an XML document before performing an XSLT transform.</span></span>  
  
 [!code-cpp[XslTransform.Transform2#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Transform2/CPP/trans_snip.cpp#1)]
 [!code-csharp[XslTransform.Transform2#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform2/CS/trans_snip.cs#1)]
 [!code-vb[XslTransform.Transform2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform2/VB/trans_snip.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e020a-883">XSLT 변환을 처리 하는 동안 오류가 발생 했습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-883">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="e020a-884">참고: 이전 버전에서 동작 변경 내용입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-884">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="e020a-885">Microsoft .NET Framework version 1.1이나 그 이전 버전을 사용할 경우에는 <see cref="T:System.Xml.Xsl.XsltException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-885">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="e020a-886">XslTransform 클래스에서 임의 동작 구현</span><span class="sxs-lookup"><span data-stu-id="e020a-886">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="XmlResolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver XmlResolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver XmlResolver" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Xsl.XslTransform.XmlResolver" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlResolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ XmlResolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlResolver : System.Xml.XmlResolver" Usage="System.Xml.Xsl.XslTransform.XmlResolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e020a-887">집합을 <see cref="T:System.Xml.XmlResolver" /> 외부 리소스를 확인 하는 데 때를 <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> 메서드가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-887">Sets the <see cref="T:System.Xml.XmlResolver" /> used to resolve external resources when the <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> method is called.</span></span></summary>
        <value><span data-ttu-id="e020a-888"><see cref="T:System.Xml.XmlResolver" /> 변환 중에 사용 하도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-888">The <see cref="T:System.Xml.XmlResolver" /> to use during transformation.</span></span> <span data-ttu-id="e020a-889">경우 설정 <see langword="null" />, XSLT <c>document ()</c> 함수가 확인 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-889">If set to <see langword="null" />, the XSLT <c>document()</c> function is not resolved.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e020a-890"><xref:System.Xml.Xsl.XslTransform> 클래스는.NET Framework 버전 2.0에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-890">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e020a-891"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 새 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-891">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e020a-892">자세한 내용은 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 하 고 [the XslTransform 클래스에서 마이그레이션](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span><span class="sxs-lookup"><span data-stu-id="e020a-892">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e020a-893">.NET Framework 버전 1.1 응용 프로그램의 신뢰 수준을 기본 동작을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-893">In version 1.1 of the .NET Framework, the trust level of the application determines the default behavior:</span></span>  
  
 <span data-ttu-id="e020a-894">`Fully trusted code:` 기본값 <xref:System.Xml.XmlUrlResolver> 사용자를 사용 하 여 자격 증명 사용에 해결 하는 `document()` 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-894">`Fully trusted code:` A default <xref:System.Xml.XmlUrlResolver> with no user credentials is used to resolve the `document()` function.</span></span> <span data-ttu-id="e020a-895">외부 리소스에 액세스할 수에 인증이 필요한 경우이 속성을 사용 하 여 지정 하는 <xref:System.Xml.XmlResolver> 에 필요한 자격 증명입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-895">If authentication is required to access the external resource, use this property to specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="e020a-896">`Semi-trusted code:` 속성 설정할지 `null`, 즉을 `document()` 함수가 확인 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-896">`Semi-trusted code:` The property is set to `null`, which means the `document()` function is not resolved.</span></span> <span data-ttu-id="e020a-897">완전 신뢰를 지정 해야 하기 때문에 <xref:System.Xml.XmlResolver>,이 속성 또한 설정할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-897">Because full trust is required to specify an <xref:System.Xml.XmlResolver>, this property also cannot be set.</span></span>  
  
 <span data-ttu-id="e020a-898">이 확인자를 사용 하면 XSLT `document()` 함수가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-898">This resolver is used when the XSLT `document()` function is invoked.</span></span> <span data-ttu-id="e020a-899">해결 하려면 사용 되지 않습니다 `xsl:import` 고 `xsl:include` 스타일 시트에서 참조 되는 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-899">It is not used to resolve `xsl:import` and `xsl:include` elements referenced in the style sheet.</span></span> <span data-ttu-id="e020a-900">지정 하는 <xref:System.Xml.XmlResolver> 해결 하는 데 `xsl:import` 및 `xsl:include` 스타일 시트에서 참조 되는 요소를 사용 합니다 <xref:System.Xml.Xsl.XslTransform.Load%2A> 오버 로드를 <xref:System.Xml.XmlResolver> 해당 인수 중 하나로.</span><span class="sxs-lookup"><span data-stu-id="e020a-900">To specify an <xref:System.Xml.XmlResolver> to use to resolve `xsl:import` and `xsl:include` elements referenced in the style sheet, use the <xref:System.Xml.Xsl.XslTransform.Load%2A> overload, which takes an <xref:System.Xml.XmlResolver> as one of its arguments.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e020a-901">이 속성은.NET Framework의 버전 1.1에서에서 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-901">This property is obsolete in version 1.1 of the .NET Framework.</span></span> <span data-ttu-id="e020a-902">지정 하는 <xref:System.Xml.XmlResolver> 를 사용 하는 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 메서드는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-902">Specifying an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method is the recommended practice.</span></span> <span data-ttu-id="e020a-903">이 경우에 <xref:System.Xml.XmlResolver> 후 캐시 되지 않습니다는 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 메서드가 완료 되 면 합니다.</span><span class="sxs-lookup"><span data-stu-id="e020a-903">In this case, the <xref:System.Xml.XmlResolver> is not cached after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method completes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
  </Members>
</Type>