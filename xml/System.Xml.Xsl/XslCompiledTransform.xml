<Type Name="XslCompiledTransform" FullName="System.Xml.Xsl.XslCompiledTransform">
  <TypeSignature Language="C#" Value="public sealed class XslCompiledTransform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed XslCompiledTransform extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Xsl.XslCompiledTransform" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XslCompiledTransform" />
  <TypeSignature Language="C++ CLI" Value="public ref class XslCompiledTransform sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="49f8d-101">XSLT 스타일시트를 사용하여 XML 데이터를 변형합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-101">Transforms XML data using an XSLT style sheet.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49f8d-102"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스는 XSLT 1.0 구문을 지 원하는 XSLT 프로세서입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-102">The <xref:System.Xml.Xsl.XslCompiledTransform> class is an XSLT processor that supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="49f8d-103">새 구현 하 고는 사용 되지 않는에 비해 성능 향상 이점을 얻으려면 포함 <xref:System.Xml.Xsl.XslTransform> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-103">It is a new implementation and includes performance gains when compared to the obsolete <xref:System.Xml.Xsl.XslTransform> class.</span></span> <span data-ttu-id="49f8d-104">구조는 <xref:System.Xml.Xsl.XslCompiledTransform> 는 매우 유사 하 고 <xref:System.Xml.Xsl.XslTransform> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-104">The structure of the <xref:System.Xml.Xsl.XslCompiledTransform> class is very similar to the <xref:System.Xml.Xsl.XslTransform> class.</span></span> <span data-ttu-id="49f8d-105"><xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> 메서드 로드 하 고 스타일을 컴파일합니다 시트를 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 메서드는 XSLT 변환을 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-105">The <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method loads and compiles the style sheet, while the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method executes the XSLT transform.</span></span>  
  
 <span data-ttu-id="49f8d-106">XSLT에 대 한 지원 `document()` 함수 및 포함된 스크립트 블록이 기본적으로 비활성화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-106">Support for the XSLT `document()` function and embedded script blocks are disabled by default.</span></span> <span data-ttu-id="49f8d-107">만들어서 이러한 기능을 설정할 수는 <xref:System.Xml.Xsl.XsltSettings> 개체로 전달 하는 <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="49f8d-107">These features can be enabled by creating an <xref:System.Xml.Xsl.XsltSettings> object and passing it to the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method.</span></span>  
  
 <span data-ttu-id="49f8d-108">자세한 내용은 참조 [XslCompiledTransform 클래스를 사용 하 여](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) 및 [마이그레이션 XslTransform 클래스에서](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-108">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
## <a name="security-considerations"></a><span data-ttu-id="49f8d-109">보안 고려 사항</span><span class="sxs-lookup"><span data-stu-id="49f8d-109">Security Considerations</span></span>  
 <span data-ttu-id="49f8d-110"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스를 사용하는 응용 프로그램을 만드는 경우 다음 항목 및 그 의미에 대해 알아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-110">When creating an application that uses the <xref:System.Xml.Xsl.XslCompiledTransform> class, you should be aware of the following items and their implications:</span></span>  
  
-   <span data-ttu-id="49f8d-111">XSLT 스크립트는 기본적으로 비활성화되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-111">XSLT scripting is disabled by default.</span></span> <span data-ttu-id="49f8d-112">XSLT 스크립트는 스크립트 지원이 필요하거나 완전히 신뢰할 수 있는 환경에서 작업하는 경우에만 활성화해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-112">XSLT scripting should be enabled only if you require script support and you are working in a fully trusted environment.</span></span>  
  
-   <span data-ttu-id="49f8d-113">XSLT `document()` 함수는 기본적으로 비활성화되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-113">The XSLT `document()` function is disabled by default.</span></span> <span data-ttu-id="49f8d-114">`document()` 함수를 활성화하는 경우 <xref:System.Xml.XmlSecureResolver> 개체를 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 메서드에 전달하여 액세스할 수 있는 리소스를 제한합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-114">If you enable the `document()` function, restrict the resources that can be accessed by passing an <xref:System.Xml.XmlSecureResolver> object to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.</span></span>  
  
-   <span data-ttu-id="49f8d-115">확장명 개체는 기본적으로 활성화되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-115">Extension objects are enabled by default.</span></span> <span data-ttu-id="49f8d-116">확장 개체가 포함된 <xref:System.Xml.Xsl.XsltArgumentList> 개체를 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 메서드에 전달하면 이 확장 개체가 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-116">If an <xref:System.Xml.Xsl.XsltArgumentList> object containing extension objects is passed to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method, they are utilized.</span></span>  
  
-   <span data-ttu-id="49f8d-117">XSLT 스타일시트에는 다른 파일에 대한 참조 및 포함 스크립트 블록이 포함될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-117">XSLT style sheets can include references to other files and embedded script blocks.</span></span> <span data-ttu-id="49f8d-118">악의적인 사용자는 이 스타일시트를 실행할 경우 리소스에서 컴퓨터가 느리게 실행될 때까지 시스템에서 처리하게 만들 수 있는 데이터 또는 스타일시트를 제공하여 악용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-118">A malicious user can exploit this by supplying you with data or style sheets that when executed can cause your system to process until the computer runs low on resources.</span></span>  
  
-   <span data-ttu-id="49f8d-119">혼합 신뢰 환경에서 XSLT 응용 프로그램을 실행하면 스타일시트가 스푸핑될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-119">XSLT applications that run in a mixed trust environment can result in style sheet spoofing.</span></span> <span data-ttu-id="49f8d-120">예를 들어, 악의적인 사용자는 해로운 스타일시트가 포함된 개체를 로드한 후 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 메서드를 호출하고 변환을 실행할 다른 사용자에게 전달할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-120">For example, a malicious user can load an object with a harmful style sheet and hand it off to another user who subsequently calls the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method and executes the transformation.</span></span>  
  
 <span data-ttu-id="49f8d-121">신뢰할 수 있는 소스에서 스타일시트를 가져오지 않은 경우 스크립트 또는 `document()` 함수를 비활성화하여 이러한 보안 문제를 완화하거나 신뢰할 수 없는 소스로부터 <xref:System.Xml.Xsl.XslCompiledTransform> 개체, XSLT 스타일시트 또는 XML 소스 데이터를 차단하여 완화할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-121">These security issues can be mitigated by not enabling scripting or the `document()` function unless the style sheet comes from a trusted source, and by not accepting <xref:System.Xml.Xsl.XslCompiledTransform> objects, XSLT style sheets, or XML source data from an untrusted source.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49f8d-122">다음 예제에서는 변환을 실행 하 고는 파일에 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-122">The following example executes a transform and outputs to a file.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Transform#1](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#1)]
 [!code-vb[XslCompiledTransform.Transform#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#1)]  
  
 <span data-ttu-id="49f8d-123">이 샘플에서는 다음과 같은 두 개의 입력된 파일을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-123">The sample uses the following two input files:</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="49f8d-124"><see cref="T:System.Xml.Xsl.XslCompiledTransform" /> 로드 되 면 개체는 스레드로부터 안전 합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-124">The <see cref="T:System.Xml.Xsl.XslCompiledTransform" /> object is thread safe once it has been loaded.</span></span> <span data-ttu-id="49f8d-125">즉, 이후에 <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> 메서드가 성공적으로 완료 되 면는 <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Transform" /> 메서드 여러 스레드에서 동시에 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-125">In other words, after the <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> method has successfully completed, the <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Transform" /> method can be called simultaneously from multiple threads.</span></span>  
  
 <span data-ttu-id="49f8d-126">경우는 <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> 하는 동안 한 스레드에서 메서드가 다시 호출 되는 <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Transform" /> 다른 스레드에서 메서드가 호출 되는 <see cref="T:System.Xml.Xsl.XslCompiledTransform" /> 개체 실행이 완료 되는 <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Transform" /> 이전 상태를 사용 하 여 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-126">If the <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> method is called again in one thread while the <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Transform" /> method is being called in another thread, the <see cref="T:System.Xml.Xsl.XslCompiledTransform" /> object finishes executing the <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Transform" /> call by continuing to use the old state.</span></span> <span data-ttu-id="49f8d-127">새 상태는 경우는 <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> 메서드가 성공적으로 완료 합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-127">The new state is used when the <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> method successfully completes.</span></span>  
  
 <block subset="none" type="note"><para>  
 <span data-ttu-id="49f8d-128"><see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> 메서드는 여러 스레드에서 동시에 호출할 경우 스레드로부터 안전 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-128">The <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> method is not thread safe when called simultaneously from multiple threads.</span></span>  
  
</para></block></threadsafe>
    <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
    <altmember cref="T:System.Xml.Xsl.XsltMessageEncounteredEventArgs" />
    <altmember cref="N:System.Xml" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="49f8d-129"><see cref="T:System.Xml.Xsl.XslCompiledTransform" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-129">Initializes a new instance of the <see cref="T:System.Xml.Xsl.XslCompiledTransform" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XslCompiledTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XslCompiledTransform();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="49f8d-130"><see cref="T:System.Xml.Xsl.XslCompiledTransform" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-130">Initializes a new instance of the <see cref="T:System.Xml.Xsl.XslCompiledTransform" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XslCompiledTransform (bool enableDebug);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableDebug) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (enableDebug As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XslCompiledTransform(bool enableDebug);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableDebug" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enableDebug">
          <span data-ttu-id="49f8d-131">디버그 정보를 생성하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-131"><see langword="true" /> to generate debug information; otherwise <see langword="false" />.</span></span> <span data-ttu-id="49f8d-132">값을 <see langword="true" />로 설정하면 Microsoft Visual Studio Debugger를 사용하여 스타일시트를 디버깅할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-132">Setting this to <see langword="true" /> enables you to debug the style sheet with the Microsoft Visual Studio Debugger.</span></span></param>
        <summary><span data-ttu-id="49f8d-133">지정된 디버그 설정을 사용하여 <see cref="T:System.Xml.Xsl.XslCompiledTransform" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-133">Initializes a new instance of the <see cref="T:System.Xml.Xsl.XslCompiledTransform" /> class with the specified debug setting.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49f8d-134">코드를 한 단계씩 및 스타일 시트를 디버깅 하려면 다음 조건이 충족 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-134">The following conditions must be met in order to step into the code and debug the style sheet:</span></span>  
  
-   <span data-ttu-id="49f8d-135">`enableDebug` 매개 변수가 `true`로 설정된 경우</span><span class="sxs-lookup"><span data-stu-id="49f8d-135">The `enableDebug` parameter is set to `true`.</span></span>  
  
-   <span data-ttu-id="49f8d-136">스타일 시트에 전달 되는 <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> URI 또는 구현의 메서드는 <xref:System.Xml.XmlReader> 구현 하는 클래스는 <xref:System.Xml.IXmlLineInfo> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-136">The style sheet is passed to the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method either as a URI, or an implementation of the <xref:System.Xml.XmlReader> class that implements the <xref:System.Xml.IXmlLineInfo> interface.</span></span> <span data-ttu-id="49f8d-137"><xref:System.Xml.IXmlLineInfo> 인터페이스 모든 텍스트 구문 분석에서 구현 되는 <xref:System.Xml.XmlReader> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-137">The <xref:System.Xml.IXmlLineInfo> interface is implemented on all text-parsing <xref:System.Xml.XmlReader> objects.</span></span>  
  
     <span data-ttu-id="49f8d-138">즉, 사용 하 여 스타일 시트를 로드 하는 경우는 <xref:System.Xml.XPath.IXPathNavigable> 와 같은 개체는 <xref:System.Xml.XmlDocument> 또는 <xref:System.Xml.XPath.XPathDocument>, 또는 <xref:System.Xml.XmlReader> 구현 하지 않는 구현을 <xref:System.Xml.IXmlLineInfo> 인터페이스를 스타일 시트를 디버깅할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-138">In other words, if the style sheet is loaded using an <xref:System.Xml.XPath.IXPathNavigable> object, such as an <xref:System.Xml.XmlDocument> or <xref:System.Xml.XPath.XPathDocument>, or an <xref:System.Xml.XmlReader> implementation that does not implement the <xref:System.Xml.IXmlLineInfo> interface, you cannot debug the style sheet.</span></span>  
  
-   <span data-ttu-id="49f8d-139"><xref:System.Xml.XmlResolver> 스타일을 로드 하는 데 사용 시트는 파일 기반 <xref:System.Xml.XmlResolver>와 같은 <xref:System.Xml.XmlUrlResolver> (이것이 기본값 <xref:System.Xml.XmlResolver> 에서 사용 하는 <xref:System.Xml.Xsl.XslCompiledTransform> 클래스).</span><span class="sxs-lookup"><span data-stu-id="49f8d-139">The <xref:System.Xml.XmlResolver> used to load the style sheet is a file-based <xref:System.Xml.XmlResolver>, such as the <xref:System.Xml.XmlUrlResolver> (this is the default <xref:System.Xml.XmlResolver> used by the <xref:System.Xml.Xsl.XslCompiledTransform> class).</span></span>  
  
-   <span data-ttu-id="49f8d-140">스타일 시트는 로컬 컴퓨터 또는 인트라넷에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-140">The style sheet is located on the local machine or on the intranet.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49f8d-141">다음 예제에서는 XSLT 디버깅을 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-141">The following example shows how to enable XSLT debugging.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Load#10](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#10)]
 [!code-vb[XslCompiledTransform.Load#10](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileToType">
      <MemberSignature Language="C#" Value="public static System.CodeDom.Compiler.CompilerErrorCollection CompileToType (System.Xml.XmlReader stylesheet, System.Xml.Xsl.XsltSettings settings, System.Xml.XmlResolver stylesheetResolver, bool debug, System.Reflection.Emit.TypeBuilder typeBuilder, string scriptAssemblyPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CodeDom.Compiler.CompilerErrorCollection CompileToType(class System.Xml.XmlReader stylesheet, class System.Xml.Xsl.XsltSettings settings, class System.Xml.XmlResolver stylesheetResolver, bool debug, class System.Reflection.Emit.TypeBuilder typeBuilder, string scriptAssemblyPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.CompileToType(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver,System.Boolean,System.Reflection.Emit.TypeBuilder,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::CodeDom::Compiler::CompilerErrorCollection ^ CompileToType(System::Xml::XmlReader ^ stylesheet, System::Xml::Xsl::XsltSettings ^ settings, System::Xml::XmlResolver ^ stylesheetResolver, bool debug, System::Reflection::Emit::TypeBuilder ^ typeBuilder, System::String ^ scriptAssemblyPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerErrorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
        <Parameter Name="settings" Type="System.Xml.Xsl.XsltSettings" />
        <Parameter Name="stylesheetResolver" Type="System.Xml.XmlResolver" />
        <Parameter Name="debug" Type="System.Boolean" />
        <Parameter Name="typeBuilder" Type="System.Reflection.Emit.TypeBuilder" />
        <Parameter Name="scriptAssemblyPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="49f8d-142">컴파일되는 스타일시트의 시작 부분에 있는 <see cref="T:System.Xml.XmlReader" />입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-142">An <see cref="T:System.Xml.XmlReader" /> positioned at the beginning of the style sheet to be compiled.</span></span></param>
        <param name="settings"><span data-ttu-id="49f8d-143">스타일시트에 적용될 <see cref="T:System.Xml.Xsl.XsltSettings" />입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-143">The <see cref="T:System.Xml.Xsl.XsltSettings" /> to be applied to the style sheet.</span></span> <span data-ttu-id="49f8d-144">이 값이 <see langword="null" />이면 <see cref="P:System.Xml.Xsl.XsltSettings.Default" />가 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-144">If this is <see langword="null" />, the <see cref="P:System.Xml.Xsl.XsltSettings.Default" /> will be applied.</span></span></param>
        <param name="stylesheetResolver"><span data-ttu-id="49f8d-145"><see cref="T:System.Xml.XmlResolver" />를 사용하여 <see langword="xsl:import" /> 및 <see langword="xsl:include" /> 요소에서 참조된 스타일시트 모듈을 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-145">The <see cref="T:System.Xml.XmlResolver" /> use to resolve style sheet modules referenced in <see langword="xsl:import" /> and <see langword="xsl:include" /> elements.</span></span> <span data-ttu-id="49f8d-146">이 값이 <see langword="null" />이면 외부 리소스가 확인되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-146">If this is <see langword="null" />, external resources will not be resolved.</span></span></param>
        <param name="debug"><span data-ttu-id="49f8d-147"><see langword="true" />로 설정하면 디버거로 스타일시트를 디버깅할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-147">Setting this to <see langword="true" /> enables debugging the style sheet with a debugger.</span></span></param>
        <param name="typeBuilder"><span data-ttu-id="49f8d-148">스타일시트 컴파일에 사용되는 <see cref="T:System.Reflection.Emit.TypeBuilder" />입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-148">The <see cref="T:System.Reflection.Emit.TypeBuilder" /> used for the style sheet compilation.</span></span> <span data-ttu-id="49f8d-149">제공된 TypeBuilder는 결과 형식을 생성하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-149">The provided TypeBuilder is used to generate the resulting type.</span></span></param>
        <param name="scriptAssemblyPath"><span data-ttu-id="49f8d-150"><see langword="msxsl:script" /> 요소에서 생성된 어셈블리의 기본 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-150">The base path for the assemblies generated for <see langword="msxsl:script" /> elements.</span></span> <span data-ttu-id="49f8d-151">하나의 스크립트 어셈블리만 생성되는 경우 이 매개 변수는 해당 어셈블리의 경로를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-151">If only one script assembly is generated, this parameter specifies the path for that assembly.</span></span> <span data-ttu-id="49f8d-152">여러 스크립트 어셈블리가 생성되는 경우에는 어셈블리 이름을 고유하게 구분하도록 구분 접미사가 파일 이름에 추가됩니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-152">In case of multiple script assemblies, a distinctive suffix will be appended to the file name to ensure uniqueness of assembly names.</span></span></param>
        <summary><span data-ttu-id="49f8d-153">XSLT 스타일시트를 지정된 형식으로 컴파일합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-153">Compiles an XSLT style sheet to a specified type.</span></span></summary>
        <returns><span data-ttu-id="49f8d-154">컴파일 결과를 나타내는 컴파일러 오류 및 경고가 들어 있는 <see cref="T:System.CodeDom.Compiler.CompilerErrorCollection" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-154">A <see cref="T:System.CodeDom.Compiler.CompilerErrorCollection" /> object containing compiler errors and warnings that indicate the results of the compilation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49f8d-155">`xsltc.exe` 도구는 한 래퍼는 <xref:System.Xml.Xsl.XslCompiledTransform.CompileToType%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="49f8d-155">The `xsltc.exe` tool is a wrapper around the <xref:System.Xml.Xsl.XslCompiledTransform.CompileToType%2A> method.</span></span> <span data-ttu-id="49f8d-156">와 스타일 시트를 컴파일하고 `xsltc.exe` 컴파일된 스타일 시트를 사용 하는 대부분의 응용 프로그램의 요구 사항을 만족 합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-156">Compiling style sheets with the `xsltc.exe` will meet the demands of most applications that leverage the use of compiled style sheets.</span></span> <span data-ttu-id="49f8d-157"><xref:System.Xml.Xsl.XslCompiledTransform.CompileToType%2A> 컴파일 사용자 지정 도구를 빌드할 때 메서드를 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-157">The <xref:System.Xml.Xsl.XslCompiledTransform.CompileToType%2A> method should be used when building custom compilation tools.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="49f8d-158">스타일시트를 컴파일합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-158">Compiles the style sheet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49f8d-159"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스의 전체적인 성능이 <xref:System.Xml.Xsl.XslTransform> 클래스보다 좋지만 <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> 클래스의 <xref:System.Xml.Xsl.XslCompiledTransform> 메서드는 변환에 대해 처음 호출될 때 <xref:System.Xml.Xsl.XslTransform.Load%2A> 클래스의 <xref:System.Xml.Xsl.XslTransform> 메서드보다 느리게 수행될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-159">Although the overall performance of the <xref:System.Xml.Xsl.XslCompiledTransform> class is better than the <xref:System.Xml.Xsl.XslTransform> class, the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method of the <xref:System.Xml.Xsl.XslCompiledTransform> class might perform more slowly than the <xref:System.Xml.Xsl.XslTransform.Load%2A> method of the <xref:System.Xml.Xsl.XslTransform> class the first time it is called on a transformation.</span></span> <span data-ttu-id="49f8d-160">이는 XSLT 파일이 로드되기 전에 컴파일되어야 하기 때문입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-160">This is because the XSLT file must be compiled before it is loaded.</span></span> <span data-ttu-id="49f8d-161">자세한 내용은 [XslCompiledTransform Slower than XslTransform?](http://go.microsoft.com/fwlink/?LinkId=130590)(XslCompiledTransform이 XslTransform보다 느린가?)라는 블로그 게시물을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="49f8d-161">For more information, see the following blog post: [XslCompiledTransform Slower than XslTransform?](http://go.microsoft.com/fwlink/?LinkId=130590)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="49f8d-162">디버그 모드에서 컴파일된 XSLT와 릴리스 모드에서 컴파일된 XSLT 간에는 차이가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-162">There are differences between XSLT compiled in Debug mode and XSLT compiled in Release mode.</span></span> <span data-ttu-id="49f8d-163">경우에 따라 디버그 모드에서 컴파일된 스타일시트는 <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> 중에 오류를 발생시키지 않지만 이후에 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 중에 실패합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-163">In some situations, style sheets compiled in Debug mode will not throw errors during <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>, but will later fail during <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>.</span></span> <span data-ttu-id="49f8d-164">릴리스 모드에서 컴파일된 동일한 스타일시트는 <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> 중에 실패합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-164">The same style sheet compiled in Release mode will fail during <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>.</span></span> <span data-ttu-id="49f8d-165">이러한 동작의 예는 노드 집합 형식이 아닌 변수가 노드 집합이 필요한 식에 할당된 경우입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-165">An example of such behavior is when a variable that is not of a node-set type is assigned to an expression where a node-set is required.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string stylesheetUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string stylesheetUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheetUri As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ stylesheetUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheetUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stylesheetUri"><span data-ttu-id="49f8d-166">스타일시트의 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-166">The URI of the style sheet.</span></span></param>
        <summary><span data-ttu-id="49f8d-167">지정된 URI에 있는 스타일시트를 로드하고 컴파일합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-167">Loads and compiles the style sheet located at the specified URI.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49f8d-168"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스에는 XSLT 1.0 구문을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-168">The <xref:System.Xml.Xsl.XslCompiledTransform> class supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="49f8d-169">XSLT 스타일 시트를 사용 해야 합니다는 `http://www.w3.org/1999/XSL/Transform` 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-169">The XSLT style sheet must use the `http://www.w3.org/1999/XSL/Transform` namespace.</span></span>  
  
 <span data-ttu-id="49f8d-170">이 메서드에 다음과 같은 동작이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-170">This method has the following behavior:</span></span>  
  
-   <span data-ttu-id="49f8d-171"><xref:System.Xml.XmlUrlResolver> 자격 증명을 스타일 시트의 URI를 해결 하 고 처리를 사용 하 여 사용자 없음 `xsl:import` 또는 `xsl:include` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-171">An <xref:System.Xml.XmlUrlResolver> with no user credentials is used to resolve the style sheet URI, and process any `xsl:import` or `xsl:include` elements.</span></span>  
  
-   <span data-ttu-id="49f8d-172"><xref:System.Xml.XmlReader> 기본 설정을 사용 하 여 스타일 시트를 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-172">An <xref:System.Xml.XmlReader> with default settings is used to load the style sheet.</span></span> <span data-ttu-id="49f8d-173">DTD 처리에서 해제 되 고 <xref:System.Xml.XmlReader>합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-173">DTD processing is disabled on the <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="49f8d-174">DTD 처리를 필요로 하는 경우 만들는 <xref:System.Xml.XmlReader> 이 기능을 사용 하 고에 전달 된 <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="49f8d-174">If you require DTD processing, create an <xref:System.Xml.XmlReader> with this feature enabled, and pass it to the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method.</span></span>  
  
-   <span data-ttu-id="49f8d-175">`document()` 기능을 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-175">The `document()` function is disabled.</span></span>  
  
-   <span data-ttu-id="49f8d-176">포함 된 스크립트가 지원 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-176">Embedded scripts are not supported.</span></span>  
  
 <span data-ttu-id="49f8d-177">사용할 수는 <xref:System.Xml.Xsl.XslCompiledTransform.Load%28System.String%2CSystem.Xml.Xsl.XsltSettings%2CSystem.Xml.XmlResolver%29> 지정 하는 오버 로드는 <xref:System.Xml.XmlResolver> 필요한 인증 자격 증명을 사용 하거나 다른 XSLT 설정을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-177">You can use the <xref:System.Xml.Xsl.XslCompiledTransform.Load%28System.String%2CSystem.Xml.Xsl.XsltSettings%2CSystem.Xml.XmlResolver%29> overload to specify an <xref:System.Xml.XmlResolver> with the necessary authentication credentials, or to specify different XSLT settings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49f8d-178">다음 예제에서는 변환을 실행 하 고는 파일에 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-178">The following example executes a transform and outputs to a file.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Transform#1](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#1)]
 [!code-vb[XslCompiledTransform.Transform#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49f8d-179"><paramref name="stylesheetUri" /> 값이 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-179">The <paramref name="stylesheetUri" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.Xsl.XsltException"><span data-ttu-id="49f8d-180">스타일시트에 오류가 있는 경우</span><span class="sxs-lookup"><span data-stu-id="49f8d-180">The style sheet contains an error.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="49f8d-181">스타일시트를 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="49f8d-181">The style sheet cannot be found.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="49f8d-182"><paramref name="stylesheetUri" /> 값에 찾을 수 없는 디렉터리나 파일 이름이 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="49f8d-182">The <paramref name="stylesheetUri" /> value includes a filename or directory that cannot be found.</span></span></exception>
        <exception cref="T:System.Net.WebException"><span data-ttu-id="49f8d-183"><paramref name="stylesheetUri" /> 값을 확인할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="49f8d-183">The <paramref name="stylesheetUri" /> value cannot be resolved.</span></span>  
  
 <span data-ttu-id="49f8d-184">또는</span><span class="sxs-lookup"><span data-stu-id="49f8d-184">-or-</span></span>  
  
 <span data-ttu-id="49f8d-185">이 요청을 처리하는 동안 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-185">An error occurred while processing the request.</span></span></exception>
        <exception cref="T:System.UriFormatException">
          <span data-ttu-id="49f8d-186"><paramref name="stylesheetUri" /> 경로는 유효한 URI가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-186"><paramref name="stylesheetUri" /> is not a valid URI.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="49f8d-187">스타일시트를 로드하는 동안 구문 분석 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="49f8d-187">There was a parsing error loading the style sheet.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (Type compiledStylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Type compiledStylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (compiledStylesheet As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(Type ^ compiledStylesheet);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compiledStylesheet" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="compiledStylesheet"><span data-ttu-id="49f8d-188">컴파일된 스타일시트가 들어 있는 클래스의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-188">The name of the class that contains the compiled style sheet.</span></span>  
  
 <span data-ttu-id="49f8d-189">일반적으로 스타일시트 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-189">This is usually the name of the style sheet.</span></span> <span data-ttu-id="49f8d-190">이름이 지정되지 않은 경우 xsltc.exe 도구는 클래스 및 어셈블리 이름으로 스타일시트 이름을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-190">Unless otherwise specified, the xsltc.exe tool uses the name of the style sheet for the class and assembly names.</span></span></param>
        <summary><span data-ttu-id="49f8d-191">[XSLT Compiler (xsltc.exe)](~/docs/standard/data/xml/xslt-compiler-xsltc-exe.md)를 사용하여 만든 컴파일된 스타일시트를 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-191">Loads the compiled style sheet that was created using the [XSLT Compiler (xsltc.exe)](~/docs/standard/data/xml/xslt-compiler-xsltc-exe.md).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49f8d-192">Xsltc.exe 도구는 스타일 시트를 컴파일 및 스타일 시트에서 어셈블리를 생성 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-192">The xsltc.exe tool is used to compile style sheets and generate assemblies from the style sheets.</span></span> <span data-ttu-id="49f8d-193"><xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> 메서드는 어셈블리에서 컴파일된 스타일 시트를 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-193">The <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method loads the compiled style sheet from the assembly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="49f8d-194">응용 프로그램에서 XSLT 어셈블리를 참조로 포함 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-194">You must also include the XSLT assembly as a reference in your application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49f8d-195">다음 예제에서는 XSLT 어셈블리에서 컴파일된 스타일 시트를 로드 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-195">The following example shows how to load a compiled style sheet from an XSLT assembly.</span></span> <span data-ttu-id="49f8d-196">Xsltc.exe 도구 bookOrders 라는 클래스와 함께 bookOrders.dll 이라는 어셈블리를 만드는 데 사용한를 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-196">The example assumes that the xsltc.exe tool was used to create an assembly named bookOrders.dll with a class named bookOrders.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="49f8d-197">코드를 컴파일할 때 XSLT 어셈블리를 참조 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-197">You have to reference the XSLT assembly when compiling the code.</span></span> <span data-ttu-id="49f8d-198">예를 들어, `csc /r:system.dll;system.xml.dll;bookOrders.dll myCode.cs`을 입력합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-198">For example, `csc /r:system.dll;system.xml.dll;bookOrders.dll myCode.cs`.</span></span>  
  
```  
// Load the type of the class.  
XslCompiledTransform xslt = new XslCompiledTransform();  
xslt.Load(typeof(bookOrders));  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="49f8d-199">스타일시트가 포함된 <see cref="T:System.Xml.XmlReader" />입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-199">An <see cref="T:System.Xml.XmlReader" /> containing the style sheet.</span></span></param>
        <summary><span data-ttu-id="49f8d-200"><see cref="T:System.Xml.XmlReader" />에 포함된 스타일시트를 컴파일합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-200">Compiles the style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49f8d-201"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스에는 XSLT 1.0 구문을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-201">The <xref:System.Xml.Xsl.XslCompiledTransform> class supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="49f8d-202">XSLT 스타일 시트를 사용 해야 합니다는 `http://www.w3.org/1999/XSL/Transform` 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-202">The XSLT style sheet must use the `http://www.w3.org/1999/XSL/Transform` namespace.</span></span>  
  
 <span data-ttu-id="49f8d-203">스타일 시트의 현재 노드로부터 로드는 <xref:System.Xml.XmlReader> 모든 자식을 통해 합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-203">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="49f8d-204">그러면 스타일 시트와 문서의 일부를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-204">This enables you to use a portion of a document as the style sheet.</span></span> <span data-ttu-id="49f8d-205">후의 <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> 메서드가 완료 되 면는 <xref:System.Xml.XmlReader> 스타일 시트의 끝 다음에 다음 노드에 배치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-205">After the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method completes, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="49f8d-206">문서 끝에 도달하면 <xref:System.Xml.XmlReader>가 EOF(파일 끝)에 배치됩니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-206">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
 <span data-ttu-id="49f8d-207">이 메서드에 다음과 같은 동작이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-207">This method has the following behavior:</span></span>  
  
-   <span data-ttu-id="49f8d-208"><xref:System.Xml.XmlUrlResolver> 자격 증명을 처리를 사용 하 여 사용자 없음 `xsl:import` 또는 `xsl:include` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-208">An <xref:System.Xml.XmlUrlResolver> with no user credentials is used to process any `xsl:import` or `xsl:include` elements.</span></span>  
  
-   <span data-ttu-id="49f8d-209">`document()` 기능을 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-209">The `document()` function is disabled.</span></span>  
  
-   <span data-ttu-id="49f8d-210">포함 된 스크립트가 지원 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-210">Embedded scripts are not supported.</span></span>  
  
 <span data-ttu-id="49f8d-211">사용할 수는 <xref:System.Xml.Xsl.XslCompiledTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.Xsl.XsltSettings%2CSystem.Xml.XmlResolver%29> 지정 하는 오버 로드는 <xref:System.Xml.XmlResolver> 필요한 인증 자격 증명을 사용 하거나 다른 XSLT 설정을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-211">You can use the <xref:System.Xml.Xsl.XslCompiledTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.Xsl.XsltSettings%2CSystem.Xml.XmlResolver%29> overload to specify an <xref:System.Xml.XmlResolver> with the necessary authentication credentials, or to specify different XSLT settings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49f8d-212">다음 예제에서는에 포함 된 스타일 시트를 로드 한 <xref:System.Xml.XmlReader> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-212">The following example loads a style sheet contained in an <xref:System.Xml.XmlReader> object.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Load#5](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#5)]
 [!code-vb[XslCompiledTransform.Load#5](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49f8d-213"><paramref name="stylesheet" /> 값이 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-213">The <paramref name="stylesheet" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.Xsl.XsltException"><span data-ttu-id="49f8d-214">스타일시트에 오류가 있는 경우</span><span class="sxs-lookup"><span data-stu-id="49f8d-214">The style sheet contains an error.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XPath.IXPathNavigable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="49f8d-215"><see cref="T:System.Xml.XPath.IXPathNavigable" /> 인터페이스를 구현하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-215">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="49f8d-216">Microsoft .NET Framework에서 이 개체는 스타일시트를 포함하는 <see cref="T:System.Xml.XmlNode" /> 또는 <see cref="T:System.Xml.XmlDocument" />(대개 <see cref="T:System.Xml.XPath.XPathDocument" />)일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-216">In the Microsoft .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the style sheet.</span></span></param>
        <summary><span data-ttu-id="49f8d-217"><see cref="T:System.Xml.XPath.IXPathNavigable" /> 개체에 포함된 스타일시트를 컴파일합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-217">Compiles the style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49f8d-218"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스에는 XSLT 1.0 구문을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-218">The <xref:System.Xml.Xsl.XslCompiledTransform> class supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="49f8d-219">XSLT 스타일 시트를 사용 해야 합니다는 `http://www.w3.org/1999/XSL/Transform` 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-219">The XSLT style sheet must use the `http://www.w3.org/1999/XSL/Transform` namespace.</span></span>  
  
 <span data-ttu-id="49f8d-220">이 메서드에 다음과 같은 동작이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-220">This method has the following behavior:</span></span>  
  
-   <span data-ttu-id="49f8d-221"><xref:System.Xml.XmlUrlResolver> 자격 증명을 처리를 사용 하 여 사용자 없음 `xsl:import` 또는 `xsl:include` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-221">An <xref:System.Xml.XmlUrlResolver> with no user credentials is used to process any `xsl:import` or `xsl:include` elements.</span></span>  
  
-   <span data-ttu-id="49f8d-222">`document()` 기능을 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-222">The `document()` function is disabled.</span></span>  
  
-   <span data-ttu-id="49f8d-223">포함 된 스크립트가 지원 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-223">Embedded scripts are not supported.</span></span>  
  
 <span data-ttu-id="49f8d-224">사용할 수는 <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> 지정 하는 오버 로드는 <xref:System.Xml.XmlResolver> 필요한 인증 자격 증명을 사용 하거나 다른 XSLT 설정을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-224">You can use the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> overload to specify an <xref:System.Xml.XmlResolver> with the necessary authentication credentials, or to specify different XSLT settings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49f8d-225">다음 예제에서는에 포함 된 스타일 시트를 로드 한 <xref:System.Xml.XPath.XPathDocument> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-225">The following example loads a style sheet contained in an <xref:System.Xml.XPath.XPathDocument> object.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Load#1](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#1)]
 [!code-vb[XslCompiledTransform.Load#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49f8d-226"><paramref name="stylesheet" /> 값이 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-226">The <paramref name="stylesheet" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.Xsl.XsltException"><span data-ttu-id="49f8d-227">스타일시트에 오류가 있는 경우</span><span class="sxs-lookup"><span data-stu-id="49f8d-227">The style sheet contains an error.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Reflection.MethodInfo executeMethod, byte[] queryData, Type[] earlyBoundTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Reflection.MethodInfo executeMethod, unsigned int8[] queryData, class System.Type[] earlyBoundTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Reflection.MethodInfo,System.Byte[],System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (executeMethod As MethodInfo, queryData As Byte(), earlyBoundTypes As Type())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Reflection::MethodInfo ^ executeMethod, cli::array &lt;System::Byte&gt; ^ queryData, cli::array &lt;Type ^&gt; ^ earlyBoundTypes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executeMethod" Type="System.Reflection.MethodInfo" />
        <Parameter Name="queryData" Type="System.Byte[]" />
        <Parameter Name="earlyBoundTypes" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="executeMethod"><span data-ttu-id="49f8d-228">컴파일러에서 생성된 컴파일된 스타일시트의 <c>execute</c> 메서드를 나타내는 <see cref="T:System.Reflection.MethodInfo" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-228">A <see cref="T:System.Reflection.MethodInfo" /> object representing the compiler-generated <c>execute</c> method of the compiled style sheet.</span></span></param>
        <param name="queryData"><span data-ttu-id="49f8d-229"><see cref="M:System.Xml.Xsl.XslCompiledTransform.CompileToType(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver,System.Boolean,System.Reflection.Emit.TypeBuilder,System.String)" /> 메서드에서 생성된 컴파일된 스타일시트의 <c>staticData</c> 필드에 있는 serialize된 데이터 구조의 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-229">A byte array of serialized data structures in the <c>staticData</c> field of the compiled style sheet as generated by the <see cref="M:System.Xml.Xsl.XslCompiledTransform.CompileToType(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver,System.Boolean,System.Reflection.Emit.TypeBuilder,System.String)" /> method.</span></span></param>
        <param name="earlyBoundTypes"><span data-ttu-id="49f8d-230">컴파일러에서 생성된 컴파일된 스타일시트의 <c>ebTypes</c> 필드에 저장된 형식의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-230">An array of types stored in the compiler-generated <c>ebTypes</c> field of the compiled style sheet.</span></span></param>
        <summary><span data-ttu-id="49f8d-231"><see langword="XSLTC.exe" /> 유틸리티를 사용하여 컴파일된 스타일시트에서 메서드를 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-231">Loads a method from a style sheet compiled using the <see langword="XSLTC.exe" /> utility.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49f8d-232">형태로 컴파일된 스타일 시트를 수용 하는이 메서드는 <xref:System.Reflection.MethodInfo> 개체, 바이트 배열 및 형식 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-232">This method accepts a compiled style sheet in the form of a <xref:System.Reflection.MethodInfo> object, a byte array, and a type array.</span></span> <span data-ttu-id="49f8d-233"><xref:System.Reflection.Emit.DynamicMethod> 컴파일된 스타일 시트 메서드 수를 허용 하도록 개체를 사용 될 때 삭제 된 <xref:System.Xml.Xsl.XslCompiledTransform> 개체를 회수 합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-233"><xref:System.Reflection.Emit.DynamicMethod> objects may be used to allow compiled style sheet methods to be discarded when the <xref:System.Xml.Xsl.XslCompiledTransform> object is reclaimed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49f8d-234">사용 하 여 아래 코드 예제는 <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> 컴파일된 스타일 시트를 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-234">The code example below uses the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> to load a compiled style sheet.</span></span> <span data-ttu-id="49f8d-235">변환의 값을 감소는 `Price` 10% 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-235">The transformation reduces the value of the `Price` element by ten percent.</span></span>  
  
 [!code-csharp[XsltDynamicMethodLoad#1](~/samples/snippets/csharp/VS_Snippets_Data/XsltDynamicMethodLoad/CS/XsltDynamicMethodLoad.cs#1)]
 [!code-vb[XsltDynamicMethodLoad#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XsltDynamicMethodLoad/VB/XsltDynamicMethodLoad.vb#1)]  
  
> [!NOTE]
>  <span data-ttu-id="49f8d-236">이 예에서 사용 된 "변환" 어셈블리는 xsltc.exe 유틸리티를 사용 하 여 만들어졌습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-236">The "Transform" assembly used in this example was built using the xsltc.exe utility.</span></span> <span data-ttu-id="49f8d-237">이 명령줄 도구를 사용 하 여 대 한 자세한 정보를 참조 하십시오. [하는 방법: 어셈블리를 사용 하 여 XSLT 변환을 수행](~/docs/standard/data/xml/how-to-perform-an-xslt-transformation-by-using-an-assembly.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-237">For detailed information on using this command line tool, see [How to: Perform an XSLT Transformation by Using an Assembly](~/docs/standard/data/xml/how-to-perform-an-xslt-transformation-by-using-an-assembly.md).</span></span>  
  
 <span data-ttu-id="49f8d-238">위의 코드 예제는 다음과 같은 변환을 사용 하 여:</span><span class="sxs-lookup"><span data-stu-id="49f8d-238">The code example above uses the following transformation:</span></span>  
  
```  
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"  
  xmlns:msxsl="urn:schemas-microsoft-com:xslt"  
  xmlns:user="urn:my-scripts">  
  <msxsl:script language="C#" implements-prefix="user">  
    <![CDATA[  
  public double modifyPrice(double price){  
    price*=0.9;  
    return price;  
  }  
  ]]]><![CDATA[]>  
  </msxsl:script>  
  <xsl:template match="Root">  
    <Root xmlns="">  
      <Price><xsl:value-of select="user:modifyPrice(Price)"/></Price>  
    </Root>  
  </xsl:template>  
</xsl:stylesheet>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string stylesheetUri, System.Xml.Xsl.XsltSettings settings, System.Xml.XmlResolver stylesheetResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string stylesheetUri, class System.Xml.Xsl.XsltSettings settings, class System.Xml.XmlResolver stylesheetResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Load(System.String,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheetUri As String, settings As XsltSettings, stylesheetResolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ stylesheetUri, System::Xml::Xsl::XsltSettings ^ settings, System::Xml::XmlResolver ^ stylesheetResolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheetUri" Type="System.String" />
        <Parameter Name="settings" Type="System.Xml.Xsl.XsltSettings" />
        <Parameter Name="stylesheetResolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheetUri"><span data-ttu-id="49f8d-239">스타일시트의 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-239">The URI of the style sheet.</span></span></param>
        <param name="settings"><span data-ttu-id="49f8d-240">스타일시트에 적용할 <see cref="T:System.Xml.Xsl.XsltSettings" />입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-240">The <see cref="T:System.Xml.Xsl.XsltSettings" /> to apply to the style sheet.</span></span> <span data-ttu-id="49f8d-241">이 값이 <see langword="null" />이면 <see cref="P:System.Xml.Xsl.XsltSettings.Default" /> 설정이 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-241">If this is <see langword="null" />, the <see cref="P:System.Xml.Xsl.XsltSettings.Default" /> setting is applied.</span></span></param>
        <param name="stylesheetResolver"><span data-ttu-id="49f8d-242">스타일시트 URI 및 XSLT <c>import</c> 및 <c>include</c> 요소에서 참조하는 모든 스타일시트를 확인하는 데 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-242">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the style sheet URI and any style sheets referenced in XSLT <c>import</c> and <c>include</c> elements.</span></span></param>
        <summary><span data-ttu-id="49f8d-243">URI로 지정된 XSLT 스타일시트를 로드하고 컴파일합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-243">Loads and compiles the XSLT style sheet specified by the URI.</span></span> <span data-ttu-id="49f8d-244"><see cref="T:System.Xml.XmlResolver" />는 XSLT <c>import</c> 또는 <c>include</c> 요소를 모두 확인하고 XSLT 설정은 스타일시트에 대한 사용 권한을 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-244">The <see cref="T:System.Xml.XmlResolver" /> resolves any XSLT <c>import</c> or <c>include</c> elements and the XSLT settings determine the permissions for the style sheet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49f8d-245"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스에는 XSLT 1.0 구문을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-245">The <xref:System.Xml.Xsl.XslCompiledTransform> class supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="49f8d-246">XSLT 스타일 시트를 사용 해야 합니다는 `http://www.w3.org/1999/XSL/Transform` 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-246">The XSLT style sheet must use the `http://www.w3.org/1999/XSL/Transform` namespace.</span></span>  
  
 <span data-ttu-id="49f8d-247"><xref:System.Xml.XmlReader> 기본 설정을 사용 하 여 스타일 시트를 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-247">An <xref:System.Xml.XmlReader> with default settings is used to load the style sheet.</span></span> <span data-ttu-id="49f8d-248">DTD 처리에서 해제 되 고 <xref:System.Xml.XmlReader>합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-248">DTD processing is disabled on the <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="49f8d-249">DTD 처리를 필요로 하는 경우 만들는 <xref:System.Xml.XmlReader> 이 기능을 사용 하 고에 전달 된 <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="49f8d-249">If you require DTD processing, create an <xref:System.Xml.XmlReader> with this feature enabled, and pass it to the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49f8d-250">다음 예제에서는 네트워크 리소스에 저장 하는 스타일 시트를 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-250">The following example loads a style sheet that is stored on a network resource.</span></span> <span data-ttu-id="49f8d-251"><xref:System.Xml.XmlSecureResolver> 개체는 스타일시트에 액세스하는 데 필요한 자격 증명을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-251">An <xref:System.Xml.XmlSecureResolver> object specifies the credentials necessary to access the style sheet.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Load#2](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#2)]
 [!code-vb[XslCompiledTransform.Load#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49f8d-252"><paramref name="stylesheetUri" /> 또는 <paramref name="stylesheetResolver" /> 값이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="49f8d-252">The <paramref name="stylesheetUri" /> or <paramref name="stylesheetResolver" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.Xsl.XsltException"><span data-ttu-id="49f8d-253">스타일시트에 오류가 있는 경우</span><span class="sxs-lookup"><span data-stu-id="49f8d-253">The style sheet contains an error.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="49f8d-254">스타일시트를 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="49f8d-254">The style sheet cannot be found.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="49f8d-255"><paramref name="stylesheetUri" /> 값에 찾을 수 없는 디렉터리나 파일 이름이 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="49f8d-255">The <paramref name="stylesheetUri" /> value includes a filename or directory that cannot be found.</span></span></exception>
        <exception cref="T:System.Net.WebException"><span data-ttu-id="49f8d-256"><paramref name="stylesheetUri" /> 값을 확인할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="49f8d-256">The <paramref name="stylesheetUri" /> value cannot be resolved.</span></span>  
  
 <span data-ttu-id="49f8d-257">또는</span><span class="sxs-lookup"><span data-stu-id="49f8d-257">-or-</span></span>  
  
 <span data-ttu-id="49f8d-258">이 요청을 처리하는 동안 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-258">An error occurred while processing the request.</span></span></exception>
        <exception cref="T:System.UriFormatException">
          <span data-ttu-id="49f8d-259"><paramref name="stylesheetUri" /> 경로는 유효한 URI가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-259"><paramref name="stylesheetUri" /> is not a valid URI.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="49f8d-260">스타일시트를 로드하는 동안 구문 분석 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="49f8d-260">There was a parsing error loading the style sheet.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet, System.Xml.Xsl.XsltSettings settings, System.Xml.XmlResolver stylesheetResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet, class System.Xml.Xsl.XsltSettings settings, class System.Xml.XmlResolver stylesheetResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader, settings As XsltSettings, stylesheetResolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet, System::Xml::Xsl::XsltSettings ^ settings, System::Xml::XmlResolver ^ stylesheetResolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
        <Parameter Name="settings" Type="System.Xml.Xsl.XsltSettings" />
        <Parameter Name="stylesheetResolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="49f8d-261">스타일시트가 포함된 <see cref="T:System.Xml.XmlReader" />입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-261">The <see cref="T:System.Xml.XmlReader" /> containing the style sheet.</span></span></param>
        <param name="settings"><span data-ttu-id="49f8d-262">스타일시트에 적용할 <see cref="T:System.Xml.Xsl.XsltSettings" />입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-262">The <see cref="T:System.Xml.Xsl.XsltSettings" /> to apply to the style sheet.</span></span> <span data-ttu-id="49f8d-263">이 값이 <see langword="null" />이면 <see cref="P:System.Xml.Xsl.XsltSettings.Default" /> 설정이 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-263">If this is <see langword="null" />, the <see cref="P:System.Xml.Xsl.XsltSettings.Default" /> setting is applied.</span></span></param>
        <param name="stylesheetResolver"><span data-ttu-id="49f8d-264">XSLT <c>import</c> 및 <c>include</c> 요소에서 참조하는 모든 스타일시트를 확인하는 데 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-264">The <see cref="T:System.Xml.XmlResolver" /> used to resolve any style sheets referenced in XSLT <c>import</c> and <c>include</c> elements.</span></span> <span data-ttu-id="49f8d-265">이 값이 <see langword="null" />이면 외부 리소스가 확인되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-265">If this is <see langword="null" />, external resources are not resolved.</span></span></param>
        <summary><span data-ttu-id="49f8d-266"><see cref="T:System.Xml.XmlReader" />에 포함된 XSLT 스타일시트를 컴파일합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-266">Compiles the XSLT style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span></span> <span data-ttu-id="49f8d-267"><see cref="T:System.Xml.XmlResolver" />는 XSLT <c>import</c> 또는 <c>include</c> 요소를 모두 확인하고 XSLT 설정은 스타일시트에 대한 사용 권한을 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-267">The <see cref="T:System.Xml.XmlResolver" /> resolves any XSLT <c>import</c> or <c>include</c> elements and the XSLT settings determine the permissions for the style sheet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49f8d-268"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스에는 XSLT 1.0 구문을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-268">The <xref:System.Xml.Xsl.XslCompiledTransform> class supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="49f8d-269">XSLT 스타일 시트를 사용 해야 합니다는 `http://www.w3.org/1999/XSL/Transform` 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-269">The XSLT style sheet must use the `http://www.w3.org/1999/XSL/Transform` namespace.</span></span>  
  
 <span data-ttu-id="49f8d-270">스타일 시트의 현재 노드로부터 로드는 <xref:System.Xml.XmlReader> 모든 자식을 통해 합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-270">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="49f8d-271">그러면 스타일 시트와 문서의 일부를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-271">This enables you to use a portion of a document as the style sheet.</span></span> <span data-ttu-id="49f8d-272">후의 <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> 메서드가 완료 되 면는 <xref:System.Xml.XmlReader> 스타일 시트의 끝 다음에 다음 노드에 배치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-272">After the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method completes, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="49f8d-273">문서 끝에 도달하면 <xref:System.Xml.XmlReader>가 EOF(파일 끝)에 배치됩니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-273">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49f8d-274">다음 예제에서는 스타일 시트를 로드 하 고 XSLT 스크립트에 대 한 지원을 사용 하도록 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-274">The following example loads a style sheet and enables support for XSLT scripting.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Load#3](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#3)]
 [!code-vb[XslCompiledTransform.Load#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49f8d-275"><paramref name="stylesheet" /> 값이 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-275">The <paramref name="stylesheet" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.Xsl.XsltException"><span data-ttu-id="49f8d-276">스타일시트에 오류가 있는 경우</span><span class="sxs-lookup"><span data-stu-id="49f8d-276">The style sheet contains an error.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.Xsl.XsltSettings settings, System.Xml.XmlResolver stylesheetResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet, class System.Xml.Xsl.XsltSettings settings, class System.Xml.XmlResolver stylesheetResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable, settings As XsltSettings, stylesheetResolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet, System::Xml::Xsl::XsltSettings ^ settings, System::Xml::XmlResolver ^ stylesheetResolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="settings" Type="System.Xml.Xsl.XsltSettings" />
        <Parameter Name="stylesheetResolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="49f8d-277"><see cref="T:System.Xml.XPath.IXPathNavigable" /> 인터페이스를 구현하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-277">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="49f8d-278">Microsoft .NET Framework에서 이 개체는 스타일시트를 포함하는 <see cref="T:System.Xml.XmlNode" /> 또는 <see cref="T:System.Xml.XmlDocument" />(대개 <see cref="T:System.Xml.XPath.XPathDocument" />)일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-278">In the Microsoft .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the style sheet.</span></span></param>
        <param name="settings"><span data-ttu-id="49f8d-279">스타일시트에 적용할 <see cref="T:System.Xml.Xsl.XsltSettings" />입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-279">The <see cref="T:System.Xml.Xsl.XsltSettings" /> to apply to the style sheet.</span></span> <span data-ttu-id="49f8d-280">이 값이 <see langword="null" />이면 <see cref="P:System.Xml.Xsl.XsltSettings.Default" /> 설정이 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-280">If this is <see langword="null" />, the <see cref="P:System.Xml.Xsl.XsltSettings.Default" /> setting is applied.</span></span></param>
        <param name="stylesheetResolver"><span data-ttu-id="49f8d-281">XSLT <c>import</c> 및 <c>include</c> 요소에서 참조하는 모든 스타일시트를 확인하는 데 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-281">The <see cref="T:System.Xml.XmlResolver" /> used to resolve any style sheets referenced in XSLT <c>import</c> and <c>include</c> elements.</span></span> <span data-ttu-id="49f8d-282">이 값이 <see langword="null" />이면 외부 리소스가 확인되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-282">If this is <see langword="null" />, external resources are not resolved.</span></span></param>
        <summary><span data-ttu-id="49f8d-283"><see cref="T:System.Xml.XPath.IXPathNavigable" />에 포함된 XSLT 스타일시트를 컴파일합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-283">Compiles the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</span></span> <span data-ttu-id="49f8d-284"><see cref="T:System.Xml.XmlResolver" />는 XSLT <c>import</c> 또는 <c>include</c> 요소를 모두 확인하고 XSLT 설정은 스타일시트에 대한 사용 권한을 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-284">The <see cref="T:System.Xml.XmlResolver" /> resolves any XSLT <c>import</c> or <c>include</c> elements and the XSLT settings determine the permissions for the style sheet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49f8d-285"><xref:System.Xml.Xsl.XslCompiledTransform> 클래스에는 XSLT 1.0 구문을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-285">The <xref:System.Xml.Xsl.XslCompiledTransform> class supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="49f8d-286">XSLT 스타일 시트를 사용 해야 합니다는 `http://www.w3.org/1999/XSL/Transform` 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-286">The XSLT style sheet must use the `http://www.w3.org/1999/XSL/Transform` namespace.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49f8d-287">다음 예에서는 스타일 시트를 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-287">The following example loads a style sheet.</span></span> <span data-ttu-id="49f8d-288"><xref:System.Xml.XmlSecureResolver> 에 액세스 하는 데 필요한 자격 증명을 포함 하는 개체 `import` 또는 `include` 요소 스타일 시트에서 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-288">The <xref:System.Xml.XmlSecureResolver> object contains the credentials necessary to access any `import` or `include` elements found in the style sheet.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Load#4](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#4)]
 [!code-vb[XslCompiledTransform.Load#4](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49f8d-289"><paramref name="stylesheet" /> 값이 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-289">The <paramref name="stylesheet" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.Xsl.XsltException"><span data-ttu-id="49f8d-290">스타일시트에 오류가 있는 경우</span><span class="sxs-lookup"><span data-stu-id="49f8d-290">The style sheet contains an error.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OutputSettings">
      <MemberSignature Language="C#" Value="public System.Xml.XmlWriterSettings OutputSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlWriterSettings OutputSettings" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutputSettings As XmlWriterSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlWriterSettings ^ OutputSettings { System::Xml::XmlWriterSettings ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriterSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="49f8d-291">스타일시트의 <c>xsl:output</c> 요소에서 파생된 출력 정보를 포함하는 <see cref="T:System.Xml.XmlWriterSettings" /> 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-291">Gets an <see cref="T:System.Xml.XmlWriterSettings" /> object that contains the output information derived from the <c>xsl:output</c> element of the style sheet.</span></span></summary>
        <value><span data-ttu-id="49f8d-292">읽기 전용 <see cref="T:System.Xml.XmlWriterSettings" /> 에서 파생 된 개체에 출력 정보를 포함 하는 <c>xsl: output</c> 스타일 시트의 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-292">A read-only <see cref="T:System.Xml.XmlWriterSettings" /> object that contains the output information derived from the <c>xsl:output</c> element of the style sheet.</span></span> <span data-ttu-id="49f8d-293">이 값은 <see langword="null" />일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-293">This value can be <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49f8d-294">이 속성은 성공적으로 호출 하는 <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="49f8d-294">This property is populated after a successful call to the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method.</span></span> <span data-ttu-id="49f8d-295">파생 된 정보가 포함 된 `xsl:output` 컴파일된 스타일 시트의 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-295">It contains information derived from the `xsl:output` element of a compiled style sheet.</span></span> <span data-ttu-id="49f8d-296">이 <xref:System.Xml.XmlWriterSettings> 개체에 전달 될 수는 <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> 방법을 만들 수는 <xref:System.Xml.XmlWriter> 출력 하려면 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-296">This <xref:System.Xml.XmlWriterSettings> object can be passed to the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method to create the <xref:System.Xml.XmlWriter> object to which you want to output.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49f8d-297">사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings%2A> 만들 속성은 <xref:System.Xml.XmlWriter> 콘솔에 텍스트를 작성 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-297">The following example shows how to use the <xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings%2A> property to create an <xref:System.Xml.XmlWriter> object that writes text to the console.</span></span>  
  
 [!code-csharp[XslCompiledTransform.OutputSettings#1](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.OutputSettings/CS/xslt_OutputSettings.cs#1)]
 [!code-vb[XslCompiledTransform.OutputSettings#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.OutputSettings/VB/xslt_OutputSettings.vb#1)]  
  
 <span data-ttu-id="49f8d-298">이 예제에서는 사용 된 `books.xml` 및 `outputConsole.xsl` 파일을 입력으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-298">The example uses the `books.xml` and `outputConsole.xsl` files as input.</span></span>  
  
 `books.xml`  
  
 [!code-xml[XslCompiledTransform.OutputSettings#2](~/samples/snippets/xml/VS_Snippets_Data/XslCompiledTransform.OutputSettings/XML/books.xml#2)]  
  
 `outputConsole.xsl`  
  
 [!code-xml[XslCompiledTransform.OutputSettings#3](~/samples/snippets/xml/VS_Snippets_Data/XslCompiledTransform.OutputSettings/XML/outputConsole.xsl#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TemporaryFiles">
      <MemberSignature Language="C#" Value="public System.CodeDom.Compiler.TempFileCollection TemporaryFiles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.Compiler.TempFileCollection TemporaryFiles" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Xsl.XslCompiledTransform.TemporaryFiles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TemporaryFiles As TempFileCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::Compiler::TempFileCollection ^ TemporaryFiles { System::CodeDom::Compiler::TempFileCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.TempFileCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="49f8d-299"><see cref="T:System.CodeDom.Compiler.TempFileCollection" /> 메서드가 성공적으로 호출된 이후에 디스크에 생성된 임시 파일이 들어 있는 <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" />을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-299">Gets the <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> that contains the temporary files generated on disk after a successful call to the <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> method.</span></span></summary>
        <value><span data-ttu-id="49f8d-300">디스크에 생성된 임시 파일이 들어 있는 <see cref="T:System.CodeDom.Compiler.TempFileCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-300">The <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> that contains the temporary files generated on disk.</span></span> <span data-ttu-id="49f8d-301"><see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> 메서드를 호출하지 못했거나 디버깅을 사용하지 않도록 설정한 경우에는 값이 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-301">This value is <see langword="null" /> if the <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> method has not been successfully called, or if debugging has not been enabled.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49f8d-302">XSLT 동안 생성 된 파일을 식별 하는이 속성을 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-302">This property identifies the files that were generated during XSLT processing.</span></span> <span data-ttu-id="49f8d-303">파일이 추가 됩니다 (% TEMP % 환경 변수로 지정) Temp 디렉터리에서 삭제할 수 XSLT 처리가 완료 된 후 이러한 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-303">The files are placed in your Temp directory (specified by the %TEMP% environment variable) You can delete these files after the XSLT processing has completed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49f8d-304">다음 예제에서는 콘솔에 임시 파일의 이름을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-304">The following example writes the names of temporary files to the console.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="49f8d-305">스타일 시트를 로드할 사용 하는 경우에 임시 파일이 만들어집니다 \<msxsl: script > 블록입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-305">Temporary files are created only when loading style sheets with \<msxsl:script> blocks.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Transform#8](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#8)]
 [!code-vb[XslCompiledTransform.Transform#8](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Transform">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="49f8d-306">XSLT 변형을 실행합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-306">Executes the XSLT transformation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="49f8d-307">디버그 모드에서 컴파일된 XSLT와 릴리스 모드에서 컴파일된 XSLT 간에는 차이가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-307">There are differences between XSLT compiled in Debug mode and XSLT compiled in Release mode.</span></span> <span data-ttu-id="49f8d-308">경우에 따라 디버그 모드에서 컴파일된 스타일시트는 <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> 중에 오류를 발생시키지 않지만 이후에 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 중에 실패합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-308">In some situations, style sheets compiled in Debug mode will not throw errors during <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>, but will later fail during <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>.</span></span> <span data-ttu-id="49f8d-309">릴리스 모드에서 컴파일된 동일한 스타일시트는 <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> 중에 실패합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-309">The same style sheet compiled in Release mode will fail during <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>.</span></span> <span data-ttu-id="49f8d-310">이러한 동작의 예는 노드 집합 형식이 아닌 변수가 노드 집합이 필요한 식에 할당된 경우입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-310">An example of such behavior is when a variable that is not of a node-set type is assigned to an expression where a node-set is required.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputUri, string resultsFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputUri, string resultsFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputUri As String, resultsFile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputUri, System::String ^ resultsFile);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputUri" Type="System.String" />
        <Parameter Name="resultsFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputUri"><span data-ttu-id="49f8d-311">입력 문서의 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-311">The URI of the input document.</span></span></param>
        <param name="resultsFile"><span data-ttu-id="49f8d-312">출력 파일의 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-312">The URI of the output file.</span></span></param>
        <summary><span data-ttu-id="49f8d-313">URI로 지정된 입력 문서를 사용하여 변형을 실행하고 파일로 결과를 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-313">Executes the transform using the input document specified by the URI and outputs the results to a file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49f8d-314">이 메서드는 기본 <xref:System.Xml.XmlUrlResolver> 입력 및 출력 문서를 해결 하려면 사용자 자격 증명 없이 합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-314">This method uses a default <xref:System.Xml.XmlUrlResolver> with no user credentials to resolve the input and output documents.</span></span> <span data-ttu-id="49f8d-315">사용 하는 오버 로드를 사용 하 여 인증을 요구 하는 네트워크 리소스에 이러한 리소스가 있으면는 <xref:System.Xml.XmlResolver> 인수 중 하나로 지정 하 고는 <xref:System.Xml.XmlResolver> 에 필요한 자격 증명입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-315">If any of these resources are located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="49f8d-316"><xref:System.Xml.XmlReader> 기본 설정을 사용 하 여 입력된 문서를 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-316">An <xref:System.Xml.XmlReader> with default settings is used to load the input document.</span></span> <span data-ttu-id="49f8d-317">DTD 처리에서 해제 되 고 <xref:System.Xml.XmlReader>합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-317">DTD processing is disabled on the <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="49f8d-318">DTD 처리를 필요로 하는 경우 만들는 <xref:System.Xml.XmlReader> 이 기능을 사용 하 고에 전달 된 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="49f8d-318">If you require DTD processing, create an <xref:System.Xml.XmlReader> with this feature enabled, and pass it to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49f8d-319">다음 예제에서는 변환을 실행 하 고는 파일에 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-319">The following example executes a transform and outputs to a file.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Transform#1](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#1)]
 [!code-vb[XslCompiledTransform.Transform#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#1)]  
  
 <span data-ttu-id="49f8d-320">이 샘플에서는 다음과 같은 두 개의 입력된 파일을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-320">The sample uses the following two input files:</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49f8d-321"><paramref name="inputUri" /> 또는 <paramref name="resultsFile" /> 값이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="49f8d-321">The <paramref name="inputUri" /> or <paramref name="resultsFile" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.Xsl.XsltException"><span data-ttu-id="49f8d-322">XSLT 변환을 실행하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="49f8d-322">There was an error executing the XSLT transform.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="49f8d-323">입력 문서를 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="49f8d-323">The input document cannot be found.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="49f8d-324"><paramref name="inputUri" /> 또는 <paramref name="resultsFile" /> 값에 찾을 수 없는 디렉터리나 파일 이름이 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="49f8d-324">The <paramref name="inputUri" /> or <paramref name="resultsFile" /> value includes a filename or directory cannot be found.</span></span></exception>
        <exception cref="T:System.Net.WebException"><span data-ttu-id="49f8d-325"><paramref name="inputUri" /> 또는 <paramref name="resultsFile" /> 값을 확인할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="49f8d-325">The <paramref name="inputUri" /> or <paramref name="resultsFile" /> value cannot be resolved.</span></span>  
  
 <span data-ttu-id="49f8d-326">또는</span><span class="sxs-lookup"><span data-stu-id="49f8d-326">-or-</span></span>  
  
 <span data-ttu-id="49f8d-327">요청을 처리하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="49f8d-327">An error occurred while processing the request</span></span></exception>
        <exception cref="T:System.UriFormatException">
          <span data-ttu-id="49f8d-328"><paramref name="inputUri" /> 또는 <paramref name="resultsFile" />이 올바른 URI가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="49f8d-328"><paramref name="inputUri" /> or <paramref name="resultsFile" /> is not a valid URI.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="49f8d-329">입력 문서를 로드하는 동안 구문 분석 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="49f8d-329">There was a parsing error loading the input document.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputUri, System.Xml.XmlWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputUri, class System.Xml.XmlWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputUri As String, results As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputUri, System::Xml::XmlWriter ^ results);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputUri" Type="System.String" />
        <Parameter Name="results" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="inputUri"><span data-ttu-id="49f8d-330">입력 문서의 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-330">The URI of the input document.</span></span></param>
        <param name="results"><span data-ttu-id="49f8d-331">출력을 제공할 대상 <see cref="T:System.Xml.XmlWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-331">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span>  
  
 <span data-ttu-id="49f8d-332">스타일시트에 <c>xsl:output</c> 요소가 포함된 경우 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 속성에서 반환된 <see cref="T:System.Xml.XmlWriterSettings" /> 개체를 사용하여 <see cref="T:System.Xml.XmlWriter" />를 만들어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-332">If the style sheet contains an <c>xsl:output</c> element, you should create the <see cref="T:System.Xml.XmlWriter" /> using the <see cref="T:System.Xml.XmlWriterSettings" /> object returned from the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property.</span></span> <span data-ttu-id="49f8d-333">이렇게 해야 <see cref="T:System.Xml.XmlWriter" />의 출력 설정이 올바르게 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-333">This ensures that the <see cref="T:System.Xml.XmlWriter" /> has the correct output settings.</span></span></param>
        <summary><span data-ttu-id="49f8d-334">URI로 지정된 입력 문서를 사용하여 변환을 실행하고 <see cref="T:System.Xml.XmlWriter" />에 결과를 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-334">Executes the transform using the input document specified by the URI and outputs the results to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49f8d-335">이 메서드는 기본 <xref:System.Xml.XmlUrlResolver> 입력된 문서와 XSLT의 모든 인스턴스를 해결 하려면 사용자 자격 증명 없이 `document()` 함수 스타일 시트에서 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-335">This method uses a default <xref:System.Xml.XmlUrlResolver> with no user credentials to resolve the input document and any instances of the XSLT `document()` function found in the style sheet.</span></span> <span data-ttu-id="49f8d-336">사용 하는 오버 로드를 사용 하 여 인증을 요구 하는 네트워크 리소스에 이러한 리소스가 있으면는 <xref:System.Xml.XmlResolver> 인수 중 하나로 지정 하 고는 <xref:System.Xml.XmlResolver> 에 필요한 자격 증명입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-336">If any of these resources are located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="49f8d-337"><xref:System.Xml.XmlReader> 기본 설정을 사용 하 여 입력된 문서를 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-337">An <xref:System.Xml.XmlReader> with default settings is used to load the input document.</span></span> <span data-ttu-id="49f8d-338">DTD 처리에서 해제 되 고 <xref:System.Xml.XmlReader>합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-338">DTD processing is disabled on the <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="49f8d-339">DTD 처리를 필요로 하는 경우 만들는 <xref:System.Xml.XmlReader> 이 기능을 사용 하 고에 전달 된 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="49f8d-339">If you require DTD processing, create an <xref:System.Xml.XmlReader> with this feature enabled, and pass it to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="49f8d-340">이 방법은 지원 하지 않습니다는 `xsl:strip-space` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-340">This method does not support the `xsl:strip-space` element.</span></span> <span data-ttu-id="49f8d-341">컴파일된 스타일 시트에 포함 된 경우는 `xsl:strip-space` 사용 해야 요소는 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 오버 로드를 <xref:System.Xml.XmlReader> 입력 인수로 합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-341">If your compiled style sheet included the `xsl:strip-space` element, you must use the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> overload which takes an <xref:System.Xml.XmlReader> as the input argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49f8d-342">다음 예제에서는 XSLT 변환을 실행 하 고 출력 하는 <xref:System.Xml.XmlWriter> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-342">The following example executes an XSLT transformation and outputs to an <xref:System.Xml.XmlWriter> object.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Transform#2](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#2)]
 [!code-vb[XslCompiledTransform.Transform#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49f8d-343"><paramref name="inputUri" /> 또는 <paramref name="results" /> 값이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="49f8d-343">The <paramref name="inputUri" /> or <paramref name="results" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.Xsl.XsltException"><span data-ttu-id="49f8d-344">XSLT 변환을 실행하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="49f8d-344">There was an error executing the XSLT transform.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="49f8d-345"><paramref name="inputUri" /> 값에 찾을 수 없는 디렉터리나 파일 이름이 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="49f8d-345">The <paramref name="inputUri" /> value includes a filename or directory cannot be found.</span></span></exception>
        <exception cref="T:System.Net.WebException"><span data-ttu-id="49f8d-346"><paramref name="inputUri" /> 값을 확인할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="49f8d-346">The <paramref name="inputUri" /> value cannot be resolved.</span></span>  
  
 <span data-ttu-id="49f8d-347">또는</span><span class="sxs-lookup"><span data-stu-id="49f8d-347">-or-</span></span>  
  
 <span data-ttu-id="49f8d-348">이 요청을 처리하는 동안 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-348">An error occurred while processing the request.</span></span></exception>
        <exception cref="T:System.UriFormatException">
          <span data-ttu-id="49f8d-349"><paramref name="inputUri" /> 경로는 유효한 URI가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-349"><paramref name="inputUri" /> is not a valid URI.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="49f8d-350">입력 문서를 로드하는 동안 구문 분석 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="49f8d-350">There was a parsing error loading the input document.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XmlReader input, System.Xml.XmlWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XmlReader input, class System.Xml.XmlWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XmlReader, results As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XmlReader ^ input, System::Xml::XmlWriter ^ results);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XmlReader" />
        <Parameter Name="results" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="49f8d-351">입력 문서가 포함된 <see cref="T:System.Xml.XmlReader" />입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-351">The <see cref="T:System.Xml.XmlReader" /> containing the input document.</span></span></param>
        <param name="results"><span data-ttu-id="49f8d-352">출력을 제공할 대상 <see cref="T:System.Xml.XmlWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-352">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span>  
  
 <span data-ttu-id="49f8d-353">스타일시트에 <c>xsl:output</c> 요소가 포함된 경우 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 속성에서 반환된 <see cref="T:System.Xml.XmlWriterSettings" /> 개체를 사용하여 <see cref="T:System.Xml.XmlWriter" />를 만들어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-353">If the style sheet contains an <c>xsl:output</c> element, you should create the <see cref="T:System.Xml.XmlWriter" /> using the <see cref="T:System.Xml.XmlWriterSettings" /> object returned from the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property.</span></span> <span data-ttu-id="49f8d-354">이렇게 해야 <see cref="T:System.Xml.XmlWriter" />의 출력 설정이 올바르게 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-354">This ensures that the <see cref="T:System.Xml.XmlWriter" /> has the correct output settings.</span></span></param>
        <summary><span data-ttu-id="49f8d-355"><see cref="T:System.Xml.XmlReader" /> 개체에 지정된 입력 문서를 사용하여 변환을 실행하고 <see cref="T:System.Xml.XmlWriter" />에 결과를 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-355">Executes the transform using the input document specified by the <see cref="T:System.Xml.XmlReader" /> object and outputs the results to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49f8d-356">하는 경우 XSLT `document()` 함수를 사용 하는 자동적으로 해결 되므로 사용 하는 <xref:System.Xml.XmlUrlResolver> 자격 증명이 없는 사용자입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-356">If the XSLT `document()` function is enabled, it is resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="49f8d-357">외부 리소스를 인증이 필요한 네트워크 리소스에 있는 경우는 오버 로드를 사용 하 여는 <xref:System.Xml.XmlResolver> 인수 중 하나로 지정 하 고는 <xref:System.Xml.XmlResolver> 에 필요한 자격 증명입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-357">If the external resource is located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49f8d-358">다음 예제에서는 books.xml 파일의 첫 번째 책을 변형합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-358">The following example transforms the first book in the books.xml file.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Transform#7](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#7)]
 [!code-vb[XslCompiledTransform.Transform#7](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49f8d-359"><paramref name="input" /> 또는 <paramref name="results" /> 값이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="49f8d-359">The <paramref name="input" /> or <paramref name="results" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.Xsl.XsltException"><span data-ttu-id="49f8d-360">XSLT 변환을 실행하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="49f8d-360">There was an error executing the XSLT transform.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.XmlWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.XmlWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, results As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::XmlWriter ^ results);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="results" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="49f8d-361"><see cref="T:System.Xml.XPath.IXPathNavigable" /> 인터페이스를 구현하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-361">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="49f8d-362">Microsoft .NET Framework에서 이 개체는 변환할 데이터를 포함하는 <see cref="T:System.Xml.XmlNode" /> 또는 <see cref="T:System.Xml.XmlDocument" />(대개 <see cref="T:System.Xml.XPath.XPathDocument" />)일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-362">In the Microsoft .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="results"><span data-ttu-id="49f8d-363">출력을 제공할 대상 <see cref="T:System.Xml.XmlWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-363">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span>  
  
 <span data-ttu-id="49f8d-364">스타일시트에 <c>xsl:output</c> 요소가 포함된 경우 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 속성에서 반환된 <see cref="T:System.Xml.XmlWriterSettings" /> 개체를 사용하여 <see cref="T:System.Xml.XmlWriter" />를 만들어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-364">If the style sheet contains an <c>xsl:output</c> element, you should create the <see cref="T:System.Xml.XmlWriter" /> using the <see cref="T:System.Xml.XmlWriterSettings" /> object returned from the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property.</span></span> <span data-ttu-id="49f8d-365">이렇게 해야 <see cref="T:System.Xml.XmlWriter" />의 출력 설정이 올바르게 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-365">This ensures that the <see cref="T:System.Xml.XmlWriter" /> has the correct output settings.</span></span></param>
        <summary><span data-ttu-id="49f8d-366"><see cref="T:System.Xml.XPath.IXPathNavigable" /> 개체에 지정된 입력 문서를 사용하여 변환을 실행하고 <see cref="T:System.Xml.XmlWriter" />에 결과를 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-366">Executes the transform using the input document specified by the <see cref="T:System.Xml.XPath.IXPathNavigable" /> object and outputs the results to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49f8d-367">하는 경우 XSLT `document()` 함수를 사용 하는 자동적으로 해결 되므로 사용 하는 <xref:System.Xml.XmlUrlResolver> 자격 증명이 없는 사용자입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-367">If the XSLT `document()` function is enabled, it is resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="49f8d-368">외부 리소스를 인증이 필요한 네트워크 리소스에 있는 경우는 오버 로드를 사용 하 여는 <xref:System.Xml.XmlResolver> 인수 중 하나로 지정 하 고는 <xref:System.Xml.XmlResolver> 에 필요한 자격 증명입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-368">If the external resource is located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="49f8d-369">이 방법은 지원 하지 않습니다는 `xsl:strip-space` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-369">This method does not support the `xsl:strip-space` element.</span></span> <span data-ttu-id="49f8d-370">컴파일된 스타일 시트에 포함 된 경우는 `xsl:strip-space` 사용 해야 요소는 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 오버 로드를 <xref:System.Xml.XmlReader> 입력 인수로 합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-370">If your compiled style sheet included the `xsl:strip-space` element, you must use the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> overload which takes an <xref:System.Xml.XmlReader> as the input argument.</span></span>  
  
 <span data-ttu-id="49f8d-371"><xref:System.Xml.XPath.IXPathNavigable> 인터페이스는 <xref:System.Xml.XmlNode> 및 <xref:System.Xml.XPath.XPathDocument> 클래스에서 구현됩니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-371">The <xref:System.Xml.XPath.IXPathNavigable> interface is implemented in the <xref:System.Xml.XmlNode> and <xref:System.Xml.XPath.XPathDocument> classes.</span></span> <span data-ttu-id="49f8d-372">이 클래스는 XML 데이터의 메모리 내 캐시를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-372">These classes represent an in-memory cache of XML data.</span></span>  
  
-   <span data-ttu-id="49f8d-373"><xref:System.Xml.XmlNode> 클래스는 W3C DOM(문서 개체 모델)을 기반으로 하며 편집 기능이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-373">The <xref:System.Xml.XmlNode> class is based on the W3C Document Object Model (DOM) and includes editing capabilities.</span></span>  
  
-   <span data-ttu-id="49f8d-374"><xref:System.Xml.XPath.XPathDocument> 클래스는 XPath 데이터 모델을 기반으로 하는 읽기 전용 데이터 저장소입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-374">The <xref:System.Xml.XPath.XPathDocument> class is a read-only data store based on the XPath data model.</span></span> <span data-ttu-id="49f8d-375"><xref:System.Xml.XPath.XPathDocument>는 XSLT 처리에 권장되는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-375"><xref:System.Xml.XPath.XPathDocument> is the recommended class for XSLT processing.</span></span> <span data-ttu-id="49f8d-376">이 클래스는 <xref:System.Xml.XmlNode> 클래스와 비교하여 속도가 더 빠릅니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-376">It provides faster performance when compared to the <xref:System.Xml.XmlNode> class.</span></span>  
  
 <span data-ttu-id="49f8d-377">변환은 문서 전체에 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-377">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="49f8d-378">즉, 문서 루트 노드 이외의 노드에 전달해도 변환 프로세스에서 로드된 문서의 모든 노드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-378">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="49f8d-379">노드 조각을 변환하려면 노드 조각만 포함하는 개체를 만들고 이 개체를 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 메서드에 전달해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-379">To transform a node fragment, you must create an object containing just the node fragment, and pass that object to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.</span></span> <span data-ttu-id="49f8d-380">자세한 내용은 [방법: 노드 조각 변환](~/docs/standard/data/xml/how-to-transform-a-node-fragment.md)을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="49f8d-380">For more information, see [How to: Transform a Node Fragment](~/docs/standard/data/xml/how-to-transform-a-node-fragment.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49f8d-381">다음 예제에서는 XSLT 변환을 실행 하 고 출력 하는 <xref:System.Xml.XmlWriter> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-381">The following example executes an XSLT transformation and outputs to an <xref:System.Xml.XmlWriter> object.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Transform#5](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#5)]
 [!code-vb[XslCompiledTransform.Transform#5](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49f8d-382"><paramref name="input" /> 또는 <paramref name="results" /> 값이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="49f8d-382">The <paramref name="input" /> or <paramref name="results" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.Xsl.XsltException"><span data-ttu-id="49f8d-383">XSLT 변환을 실행하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="49f8d-383">There was an error executing the XSLT transform.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputUri, System.Xml.Xsl.XsltArgumentList arguments, System.IO.Stream results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputUri, class System.Xml.Xsl.XsltArgumentList arguments, class System.IO.Stream results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputUri As String, arguments As XsltArgumentList, results As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputUri, System::Xml::Xsl::XsltArgumentList ^ arguments, System::IO::Stream ^ results);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputUri" Type="System.String" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="inputUri"><span data-ttu-id="49f8d-384">입력 문서의 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-384">The URI of the input document.</span></span></param>
        <param name="arguments"><span data-ttu-id="49f8d-385">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-385">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</span></span> <span data-ttu-id="49f8d-386">이 값은 <see langword="null" />일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-386">This value can be <see langword="null" />.</span></span></param>
        <param name="results"><span data-ttu-id="49f8d-387">출력할 대상 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-387">The stream to which you want to output.</span></span></param>
        <summary><span data-ttu-id="49f8d-388">URI로 지정된 입력 문서를 사용하여 변형을 실행하고 스트림에 결과를 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-388">Executes the transform using the input document specified by the URI and outputs the results to stream.</span></span> <span data-ttu-id="49f8d-389"><see cref="T:System.Xml.Xsl.XsltArgumentList" />는 추가 런타임 인수를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-389">The <see cref="T:System.Xml.Xsl.XsltArgumentList" /> provides additional run-time arguments.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49f8d-390">이 메서드는 기본 <xref:System.Xml.XmlUrlResolver> 입력된 문서와 XSLT의 모든 인스턴스를 해결 하려면 사용자 자격 증명 없이 `document()` 함수 스타일 시트에서 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-390">This method uses a default <xref:System.Xml.XmlUrlResolver> with no user credentials to resolve the input document and any instances of the XSLT `document()` function found in the style sheet.</span></span> <span data-ttu-id="49f8d-391">사용 하는 오버 로드를 사용 하 여 인증을 요구 하는 네트워크 리소스에 이러한 리소스가 있으면는 <xref:System.Xml.XmlResolver> 인수 중 하나로 지정 하 고는 <xref:System.Xml.XmlResolver> 에 필요한 자격 증명입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-391">If any of these resources are located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="49f8d-392"><xref:System.Xml.XmlReader> 기본 설정을 사용 하 여 입력된 문서를 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-392">An <xref:System.Xml.XmlReader> with default settings is used to load the input document.</span></span> <span data-ttu-id="49f8d-393">DTD 처리에서 해제 되 고 <xref:System.Xml.XmlReader>합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-393">DTD processing is disabled on the <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="49f8d-394">DTD 처리를 필요로 하는 경우 만들는 <xref:System.Xml.XmlReader> 이 기능을 사용 하 고에 전달 된 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="49f8d-394">If you require DTD processing, create an <xref:System.Xml.XmlReader> with this feature enabled, and pass it to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49f8d-395"><paramref name="inputUri" /> 또는 <paramref name="results" /> 값이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="49f8d-395">The <paramref name="inputUri" /> or <paramref name="results" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.Xsl.XsltException"><span data-ttu-id="49f8d-396">XSLT 변환을 실행하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="49f8d-396">There was an error executing the XSLT transform.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="49f8d-397"><paramref name="inputUri" /> 값에 찾을 수 없는 디렉터리나 파일 이름이 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="49f8d-397">The <paramref name="inputUri" /> value includes a filename or directory cannot be found.</span></span></exception>
        <exception cref="T:System.Net.WebException"><span data-ttu-id="49f8d-398"><paramref name="inputUri" /> 값을 확인할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="49f8d-398">The <paramref name="inputUri" /> value cannot be resolved.</span></span>  
  
 <span data-ttu-id="49f8d-399">또는</span><span class="sxs-lookup"><span data-stu-id="49f8d-399">-or-</span></span>  
  
 <span data-ttu-id="49f8d-400">요청을 처리하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="49f8d-400">An error occurred while processing the request</span></span></exception>
        <exception cref="T:System.UriFormatException">
          <span data-ttu-id="49f8d-401"><paramref name="inputUri" /> 경로는 유효한 URI가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-401"><paramref name="inputUri" /> is not a valid URI.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="49f8d-402">입력 문서를 로드하는 동안 구문 분석 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="49f8d-402">There was a parsing error loading the input document.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputUri, System.Xml.Xsl.XsltArgumentList arguments, System.IO.TextWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputUri, class System.Xml.Xsl.XsltArgumentList arguments, class System.IO.TextWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputUri As String, arguments As XsltArgumentList, results As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputUri, System::Xml::Xsl::XsltArgumentList ^ arguments, System::IO::TextWriter ^ results);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputUri" Type="System.String" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="inputUri"><span data-ttu-id="49f8d-403">입력 문서의 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-403">The URI of the input document.</span></span></param>
        <param name="arguments"><span data-ttu-id="49f8d-404">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-404">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</span></span> <span data-ttu-id="49f8d-405">이 값은 <see langword="null" />일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-405">This value can be <see langword="null" />.</span></span></param>
        <param name="results"><span data-ttu-id="49f8d-406">출력을 제공할 대상 <see cref="T:System.IO.TextWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-406">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span></span></param>
        <summary><span data-ttu-id="49f8d-407">URI로 지정된 입력 문서를 사용하여 변환을 실행하고 <see cref="T:System.IO.TextWriter" />에 결과를 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-407">Executes the transform using the input document specified by the URI and outputs the results to a <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49f8d-408">이 메서드는 기본 <xref:System.Xml.XmlUrlResolver> 입력된 문서와 XSLT의 모든 인스턴스를 해결 하려면 사용자 자격 증명 없이 `document()` 함수 스타일 시트에서 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-408">This method uses a default <xref:System.Xml.XmlUrlResolver> with no user credentials to resolve the input document and any instances of the XSLT `document()` function found in the style sheet.</span></span> <span data-ttu-id="49f8d-409">사용 하는 오버 로드를 사용 하 여 인증을 요구 하는 네트워크 리소스에 이러한 리소스가 있으면는 <xref:System.Xml.XmlResolver> 인수 중 하나로 지정 하 고는 <xref:System.Xml.XmlResolver> 에 필요한 자격 증명입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-409">If any of these resources are located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="49f8d-410"><xref:System.Xml.XmlReader> 기본 설정을 사용 하 여 입력된 문서를 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-410">An <xref:System.Xml.XmlReader> with default settings is used to load the input document.</span></span> <span data-ttu-id="49f8d-411">DTD 처리에서 해제 되 고 <xref:System.Xml.XmlReader>합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-411">DTD processing is disabled on the <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="49f8d-412">DTD 처리를 필요로 하는 경우 만들는 <xref:System.Xml.XmlReader> 이 기능을 사용 하 고에 전달 된 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="49f8d-412">If you require DTD processing, create an <xref:System.Xml.XmlReader> with this feature enabled, and pass it to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49f8d-413">다음 예제에서는 XSLT 변환을 실행 하 고 문자열을 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-413">The following example executes an XSLT transformation and outputs a string.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Transform#3](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#3)]
 [!code-vb[XslCompiledTransform.Transform#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49f8d-414"><paramref name="inputUri" /> 또는 <paramref name="results" /> 값이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="49f8d-414">The <paramref name="inputUri" /> or <paramref name="results" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.Xsl.XsltException"><span data-ttu-id="49f8d-415">XSLT 변환을 실행하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="49f8d-415">There was an error executing the XSLT transform.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="49f8d-416"><paramref name="inputUri" /> 값에 찾을 수 없는 디렉터리나 파일 이름이 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="49f8d-416">The <paramref name="inputUri" /> value includes a filename or directory cannot be found.</span></span></exception>
        <exception cref="T:System.Net.WebException"><span data-ttu-id="49f8d-417"><paramref name="inputUri" /> 값을 확인할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="49f8d-417">The <paramref name="inputUri" /> value cannot be resolved.</span></span>  
  
 <span data-ttu-id="49f8d-418">또는</span><span class="sxs-lookup"><span data-stu-id="49f8d-418">-or-</span></span>  
  
 <span data-ttu-id="49f8d-419">요청을 처리하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="49f8d-419">An error occurred while processing the request</span></span></exception>
        <exception cref="T:System.UriFormatException">
          <span data-ttu-id="49f8d-420"><paramref name="inputUri" /> 경로는 유효한 URI가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-420"><paramref name="inputUri" /> is not a valid URI.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="49f8d-421">입력 문서를 로드하는 동안 구문 분석 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="49f8d-421">There was a parsing error loading the input document.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputUri, System.Xml.Xsl.XsltArgumentList arguments, System.Xml.XmlWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputUri, class System.Xml.Xsl.XsltArgumentList arguments, class System.Xml.XmlWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputUri As String, arguments As XsltArgumentList, results As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputUri, System::Xml::Xsl::XsltArgumentList ^ arguments, System::Xml::XmlWriter ^ results);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputUri" Type="System.String" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="inputUri"><span data-ttu-id="49f8d-422">입력 문서의 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-422">The URI of the input document.</span></span></param>
        <param name="arguments"><span data-ttu-id="49f8d-423">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-423">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</span></span> <span data-ttu-id="49f8d-424">이 값은 <see langword="null" />일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-424">This value can be <see langword="null" />.</span></span></param>
        <param name="results"><span data-ttu-id="49f8d-425">출력을 제공할 대상 <see cref="T:System.Xml.XmlWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-425">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span>  
  
 <span data-ttu-id="49f8d-426">스타일시트에 <c>xsl:output</c> 요소가 포함된 경우 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 속성에서 반환된 <see cref="T:System.Xml.XmlWriterSettings" /> 개체를 사용하여 <see cref="T:System.Xml.XmlWriter" />를 만들어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-426">If the style sheet contains an <c>xsl:output</c> element, you should create the <see cref="T:System.Xml.XmlWriter" /> using the <see cref="T:System.Xml.XmlWriterSettings" /> object returned from the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property.</span></span> <span data-ttu-id="49f8d-427">이렇게 해야 <see cref="T:System.Xml.XmlWriter" />의 출력 설정이 올바르게 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-427">This ensures that the <see cref="T:System.Xml.XmlWriter" /> has the correct output settings.</span></span></param>
        <summary><span data-ttu-id="49f8d-428">URI로 지정된 입력 문서를 사용하여 변환을 실행하고 <see cref="T:System.Xml.XmlWriter" />에 결과를 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-428">Executes the transform using the input document specified by the URI and outputs the results to an <see cref="T:System.Xml.XmlWriter" />.</span></span> <span data-ttu-id="49f8d-429"><see cref="T:System.Xml.Xsl.XsltArgumentList" />는 추가 런타임 인수를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-429">The <see cref="T:System.Xml.Xsl.XsltArgumentList" /> provides additional run-time arguments.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49f8d-430">이 메서드는 기본 <xref:System.Xml.XmlUrlResolver> 입력된 문서와 XSLT의 모든 인스턴스를 해결 하려면 사용자 자격 증명 없이 `document()` 함수 스타일 시트에서 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-430">This method uses a default <xref:System.Xml.XmlUrlResolver> with no user credentials to resolve the input document and any instances of the XSLT `document()` function found in the style sheet.</span></span> <span data-ttu-id="49f8d-431">사용 하는 오버 로드를 사용 하 여 인증을 요구 하는 네트워크 리소스에 이러한 리소스가 있으면는 <xref:System.Xml.XmlResolver> 인수 중 하나로 지정 하 고는 <xref:System.Xml.XmlResolver> 에 필요한 자격 증명입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-431">If any of these resources are located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="49f8d-432"><xref:System.Xml.XmlReader> 기본 설정을 사용 하 여 입력된 문서를 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-432">An <xref:System.Xml.XmlReader> with default settings is used to load the input document.</span></span> <span data-ttu-id="49f8d-433">DTD 처리에서 해제 되 고 <xref:System.Xml.XmlReader>합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-433">DTD processing is disabled on the <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="49f8d-434">DTD 처리를 필요로 하는 경우 만들는 <xref:System.Xml.XmlReader> 이 기능을 사용 하 고에 전달 된 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="49f8d-434">If you require DTD processing, create an <xref:System.Xml.XmlReader> with this feature enabled, and pass it to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49f8d-435">다음 예제에서는 <xref:System.Xml.Xsl.XsltArgumentList> 현재 날짜 및 시간을 나타내는 매개 변수를 만들 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-435">The following example uses an <xref:System.Xml.Xsl.XsltArgumentList> object to create a parameter representing the current date and time.</span></span>  
  
 [!code-csharp[XsltArgumentList.AddParam#1](~/samples/snippets/csharp/VS_Snippets_Data/XsltArgumentList.AddParam/CS/addparam.cs#1)]
 [!code-vb[XsltArgumentList.AddParam#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XsltArgumentList.AddParam/VB/addparam.vb#1)]  
  
 <span data-ttu-id="49f8d-436">이 예제에서는 입력으로 다음 두 개의 데이터 파일을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-436">The example uses the following two data files as input.</span></span>  
  
 <span data-ttu-id="49f8d-437">order.xml</span><span class="sxs-lookup"><span data-stu-id="49f8d-437">order.xml</span></span>  
  
 [!code-xml[XsltArgumentList.AddParam#2](~/samples/snippets/xml/VS_Snippets_Data/XsltArgumentList.AddParam/XML/order.xml#2)]  
  
 <span data-ttu-id="49f8d-438">order.xsl</span><span class="sxs-lookup"><span data-stu-id="49f8d-438">order.xsl</span></span>  
  
 [!code-xml[XsltArgumentList.AddParam#3](~/samples/snippets/xml/VS_Snippets_Data/XsltArgumentList.AddParam/XML/order.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49f8d-439"><paramref name="inputUri" /> 또는 <paramref name="results" /> 값이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="49f8d-439">The <paramref name="inputUri" /> or <paramref name="results" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.Xsl.XsltException"><span data-ttu-id="49f8d-440">XSLT 변환을 실행하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="49f8d-440">There was an error executing the XSLT transform.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="49f8d-441"><paramref name="inputtUri" /> 값에 찾을 수 없는 디렉터리나 파일 이름이 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="49f8d-441">The <paramref name="inputtUri" /> value includes a filename or directory cannot be found.</span></span></exception>
        <exception cref="T:System.Net.WebException"><span data-ttu-id="49f8d-442"><paramref name="inputUri" /> 값을 확인할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="49f8d-442">The <paramref name="inputUri" /> value cannot be resolved.</span></span>  
  
 <span data-ttu-id="49f8d-443">또는</span><span class="sxs-lookup"><span data-stu-id="49f8d-443">-or-</span></span>  
  
 <span data-ttu-id="49f8d-444">이 요청을 처리하는 동안 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-444">An error occurred while processing the request.</span></span></exception>
        <exception cref="T:System.UriFormatException">
          <span data-ttu-id="49f8d-445"><paramref name="inputUri" /> 경로는 유효한 URI가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-445"><paramref name="inputUri" /> is not a valid URI.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="49f8d-446">입력 문서를 로드하는 동안 구문 분석 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="49f8d-446">There was a parsing error loading the input document.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XmlReader input, System.Xml.Xsl.XsltArgumentList arguments, System.IO.Stream results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XmlReader input, class System.Xml.Xsl.XsltArgumentList arguments, class System.IO.Stream results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XmlReader, arguments As XsltArgumentList, results As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XmlReader ^ input, System::Xml::Xsl::XsltArgumentList ^ arguments, System::IO::Stream ^ results);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XmlReader" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="49f8d-447">입력 문서가 포함된 <see cref="T:System.Xml.XmlReader" />입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-447">An <see cref="T:System.Xml.XmlReader" /> containing the input document.</span></span></param>
        <param name="arguments"><span data-ttu-id="49f8d-448">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-448">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</span></span> <span data-ttu-id="49f8d-449">이 값은 <see langword="null" />일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-449">This value can be <see langword="null" />.</span></span></param>
        <param name="results"><span data-ttu-id="49f8d-450">출력할 대상 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-450">The stream to which you want to output.</span></span></param>
        <summary><span data-ttu-id="49f8d-451"><see cref="T:System.Xml.XmlReader" /> 개체에 지정된 입력 문서를 사용하여 변환을 실행하고 스트림에 결과를 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-451">Executes the transform using the input document specified by the <see cref="T:System.Xml.XmlReader" /> object and outputs the results to a stream.</span></span> <span data-ttu-id="49f8d-452"><see cref="T:System.Xml.Xsl.XsltArgumentList" />는 추가 런타임 인수를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-452">The <see cref="T:System.Xml.Xsl.XsltArgumentList" /> provides additional run-time arguments.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49f8d-453">스타일 시트 XSLT를 포함 하는 경우 `document()` 는 사용 하 여 해결 된 함수는 <xref:System.Xml.XmlUrlResolver> 사용자 자격 증명 없이 합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-453">If the style sheet includes an XSLT `document()` function, it is resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="49f8d-454">외부 리소스를 인증이 필요한 네트워크 리소스에 있는 경우는 오버 로드를 사용 하 여는 <xref:System.Xml.XmlResolver> 인수 중 하나로 지정 하 고는 <xref:System.Xml.XmlResolver> 에 필요한 자격 증명입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-454">If the external resource is located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49f8d-455"><paramref name="input" /> 또는 <paramref name="results" /> 값이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="49f8d-455">The <paramref name="input" /> or <paramref name="results" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.Xsl.XsltException"><span data-ttu-id="49f8d-456">XSLT 변환을 실행하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="49f8d-456">There was an error executing the XSLT transform.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XmlReader input, System.Xml.Xsl.XsltArgumentList arguments, System.IO.TextWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XmlReader input, class System.Xml.Xsl.XsltArgumentList arguments, class System.IO.TextWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XmlReader, arguments As XsltArgumentList, results As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XmlReader ^ input, System::Xml::Xsl::XsltArgumentList ^ arguments, System::IO::TextWriter ^ results);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XmlReader" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="49f8d-457">입력 문서가 포함된 <see cref="T:System.Xml.XmlReader" />입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-457">An <see cref="T:System.Xml.XmlReader" /> containing the input document.</span></span></param>
        <param name="arguments"><span data-ttu-id="49f8d-458">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-458">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</span></span> <span data-ttu-id="49f8d-459">이 값은 <see langword="null" />일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-459">This value can be <see langword="null" />.</span></span></param>
        <param name="results"><span data-ttu-id="49f8d-460">출력을 제공할 대상 <see cref="T:System.IO.TextWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-460">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span></span></param>
        <summary><span data-ttu-id="49f8d-461"><see cref="T:System.Xml.XmlReader" /> 개체에 지정된 입력 문서를 사용하여 변환을 실행하고 <see cref="T:System.IO.TextWriter" />에 결과를 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-461">Executes the transform using the input document specified by the <see cref="T:System.Xml.XmlReader" /> object and outputs the results to a <see cref="T:System.IO.TextWriter" />.</span></span> <span data-ttu-id="49f8d-462"><see cref="T:System.Xml.Xsl.XsltArgumentList" />는 추가 런타임 인수를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-462">The <see cref="T:System.Xml.Xsl.XsltArgumentList" /> provides additional run-time arguments.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49f8d-463">스타일 시트 XSLT를 포함 하는 경우 `document()` 는 사용 하 여 해결 된 함수는 <xref:System.Xml.XmlUrlResolver> 사용자 자격 증명 없이 합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-463">If the style sheet includes an XSLT `document()` function, it is resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="49f8d-464">외부 리소스를 인증이 필요한 네트워크 리소스에 있는 경우는 오버 로드를 사용 하 여는 <xref:System.Xml.XmlResolver> 인수 중 하나로 지정 하 고는 <xref:System.Xml.XmlResolver> 에 필요한 자격 증명입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-464">If the external resource is located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49f8d-465"><paramref name="input" /> 또는 <paramref name="results" /> 값이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="49f8d-465">The <paramref name="input" /> or <paramref name="results" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.Xsl.XsltException"><span data-ttu-id="49f8d-466">XSLT 변환을 실행하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="49f8d-466">There was an error executing the XSLT transform.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XmlReader input, System.Xml.Xsl.XsltArgumentList arguments, System.Xml.XmlWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XmlReader input, class System.Xml.Xsl.XsltArgumentList arguments, class System.Xml.XmlWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XmlReader, arguments As XsltArgumentList, results As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XmlReader ^ input, System::Xml::Xsl::XsltArgumentList ^ arguments, System::Xml::XmlWriter ^ results);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XmlReader" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="49f8d-467">입력 문서가 포함된 <see cref="T:System.Xml.XmlReader" />입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-467">An <see cref="T:System.Xml.XmlReader" /> containing the input document.</span></span></param>
        <param name="arguments"><span data-ttu-id="49f8d-468">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-468">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</span></span> <span data-ttu-id="49f8d-469">이 값은 <see langword="null" />일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-469">This value can be <see langword="null" />.</span></span></param>
        <param name="results"><span data-ttu-id="49f8d-470">출력을 제공할 대상 <see cref="T:System.Xml.XmlWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-470">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span>  
  
 <span data-ttu-id="49f8d-471">스타일시트에 <c>xsl:output</c> 요소가 포함된 경우 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 속성에서 반환된 <see cref="T:System.Xml.XmlWriterSettings" /> 개체를 사용하여 <see cref="T:System.Xml.XmlWriter" />를 만들어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-471">If the style sheet contains an <c>xsl:output</c> element, you should create the <see cref="T:System.Xml.XmlWriter" /> using the <see cref="T:System.Xml.XmlWriterSettings" /> object returned from the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property.</span></span> <span data-ttu-id="49f8d-472">이렇게 해야 <see cref="T:System.Xml.XmlWriter" />의 출력 설정이 올바르게 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-472">This ensures that the <see cref="T:System.Xml.XmlWriter" /> has the correct output settings.</span></span></param>
        <summary><span data-ttu-id="49f8d-473"><see cref="T:System.Xml.XmlReader" /> 개체에 지정된 입력 문서를 사용하여 변환을 실행하고 <see cref="T:System.Xml.XmlWriter" />에 결과를 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-473">Executes the transform using the input document specified by the <see cref="T:System.Xml.XmlReader" /> object and outputs the results to an <see cref="T:System.Xml.XmlWriter" />.</span></span> <span data-ttu-id="49f8d-474"><see cref="T:System.Xml.Xsl.XsltArgumentList" />는 추가 런타임 인수를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-474">The <see cref="T:System.Xml.Xsl.XsltArgumentList" /> provides additional run-time arguments.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49f8d-475">스타일 시트 XSLT를 포함 하는 경우 `document()` 는 사용 하 여 해결 된 함수는 <xref:System.Xml.XmlUrlResolver> 사용자 자격 증명 없이 합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-475">If the style sheet includes an XSLT `document()` function, it is resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="49f8d-476">외부 리소스를 인증이 필요한 네트워크 리소스에 있는 경우는 오버 로드를 사용 하 여는 <xref:System.Xml.XmlResolver> 인수 중 하나로 지정 하 고는 <xref:System.Xml.XmlResolver> 에 필요한 자격 증명입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-476">If the external resource is located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49f8d-477"><paramref name="input" /> 또는 <paramref name="results" /> 값이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="49f8d-477">The <paramref name="input" /> or <paramref name="results" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.Xsl.XsltException"><span data-ttu-id="49f8d-478">XSLT 변환을 실행하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="49f8d-478">There was an error executing the XSLT transform.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList arguments, System.IO.Stream results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList arguments, class System.IO.Stream results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, arguments As XsltArgumentList, results As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ arguments, System::IO::Stream ^ results);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="49f8d-479"><see cref="T:System.Xml.XPath.IXPathNavigable" /> 인터페이스를 구현하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-479">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="49f8d-480">Microsoft .NET Framework에서 이 개체는 변환할 데이터를 포함하는 <see cref="T:System.Xml.XmlNode" /> 또는 <see cref="T:System.Xml.XmlDocument" />(대개 <see cref="T:System.Xml.XPath.XPathDocument" />)일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-480">In the Microsoft .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="arguments"><span data-ttu-id="49f8d-481">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-481">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</span></span> <span data-ttu-id="49f8d-482">이 값은 <see langword="null" />일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-482">This value can be <see langword="null" />.</span></span></param>
        <param name="results"><span data-ttu-id="49f8d-483">출력할 대상 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-483">The stream to which you want to output.</span></span></param>
        <summary><span data-ttu-id="49f8d-484"><see cref="T:System.Xml.XPath.IXPathNavigable" /> 개체에 지정된 입력 문서를 사용하여 변환을 실행하고 스트림에 결과를 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-484">Executes the transform using the input document specified by the <see cref="T:System.Xml.XPath.IXPathNavigable" /> object and outputs the results to a stream.</span></span> <span data-ttu-id="49f8d-485"><see cref="T:System.Xml.Xsl.XsltArgumentList" />는 추가 런타임 인수를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-485">The <see cref="T:System.Xml.Xsl.XsltArgumentList" /> provides additional runtime arguments.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49f8d-486">하는 경우 XSLT `document()` 함수를 사용 하는 자동적으로 해결 되므로 사용 하는 <xref:System.Xml.XmlUrlResolver> 자격 증명이 없는 사용자입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-486">If the XSLT `document()` function is enabled, it is resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="49f8d-487">외부 리소스를 인증이 필요한 네트워크 리소스에 있는 경우는 오버 로드를 사용 하 여는 <xref:System.Xml.XmlResolver> 인수 중 하나로 지정 하 고는 <xref:System.Xml.XmlResolver> 에 필요한 자격 증명입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-487">If the external resource is located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="49f8d-488">이 방법은 지원 하지 않습니다는 `xsl:strip-space` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-488">This method does not support the `xsl:strip-space` element.</span></span> <span data-ttu-id="49f8d-489">컴파일된 스타일 시트에 포함 된 경우는 `xsl:strip-space` 사용 해야 요소는 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 오버 로드를 <xref:System.Xml.XmlReader> 입력 인수로 합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-489">If your compiled style sheet included the `xsl:strip-space` element, you must use the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> overload which takes an <xref:System.Xml.XmlReader> as the input argument.</span></span>  
  
 <span data-ttu-id="49f8d-490"><xref:System.Xml.XPath.IXPathNavigable> 인터페이스는 <xref:System.Xml.XmlNode> 및 <xref:System.Xml.XPath.XPathDocument> 클래스에서 구현됩니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-490">The <xref:System.Xml.XPath.IXPathNavigable> interface is implemented in the <xref:System.Xml.XmlNode> and <xref:System.Xml.XPath.XPathDocument> classes.</span></span> <span data-ttu-id="49f8d-491">이 클래스는 XML 데이터의 메모리 내 캐시를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-491">These classes represent an in-memory cache of XML data.</span></span>  
  
-   <span data-ttu-id="49f8d-492"><xref:System.Xml.XmlNode> 클래스는 W3C DOM(문서 개체 모델)을 기반으로 하며 편집 기능이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-492">The <xref:System.Xml.XmlNode> class is based on the W3C Document Object Model (DOM) and includes editing capabilities.</span></span>  
  
-   <span data-ttu-id="49f8d-493"><xref:System.Xml.XPath.XPathDocument> 클래스는 XPath 데이터 모델을 기반으로 하는 읽기 전용 데이터 저장소입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-493">The <xref:System.Xml.XPath.XPathDocument> class is a read-only data store based on the XPath data model.</span></span> <span data-ttu-id="49f8d-494"><xref:System.Xml.XPath.XPathDocument>는 XSLT 처리에 권장되는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-494"><xref:System.Xml.XPath.XPathDocument> is the recommended class for XSLT processing.</span></span> <span data-ttu-id="49f8d-495">이 클래스는 <xref:System.Xml.XmlNode> 클래스와 비교하여 속도가 더 빠릅니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-495">It provides faster performance when compared to the <xref:System.Xml.XmlNode> class.</span></span>  
  
 <span data-ttu-id="49f8d-496">변환은 문서 전체에 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-496">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="49f8d-497">즉, 문서 루트 노드 이외의 노드에 전달해도 변환 프로세스에서 로드된 문서의 모든 노드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-497">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="49f8d-498">노드 조각을 변환하려면 노드 조각만 포함하는 개체를 만들고 이 개체를 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 메서드에 전달해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-498">To transform a node fragment, you must create an object containing just the node fragment, and pass that object to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.</span></span> <span data-ttu-id="49f8d-499">자세한 내용은 [방법: 노드 조각 변환](~/docs/standard/data/xml/how-to-transform-a-node-fragment.md)을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="49f8d-499">For more information, see [How to: Transform a Node Fragment](~/docs/standard/data/xml/how-to-transform-a-node-fragment.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49f8d-500">다음 예제에서는 XSLT 변환을 실행 하 고 출력 하는 <xref:System.IO.FileStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-500">The following example executes an XSLT transformation and outputs to a <xref:System.IO.FileStream>.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Transform#6](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#6)]
 [!code-vb[XslCompiledTransform.Transform#6](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49f8d-501"><paramref name="input" /> 또는 <paramref name="results" /> 값이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="49f8d-501">The <paramref name="input" /> or <paramref name="results" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.Xsl.XsltException"><span data-ttu-id="49f8d-502">XSLT 변환을 실행하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="49f8d-502">There was an error executing the XSLT transform.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList arguments, System.IO.TextWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList arguments, class System.IO.TextWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, arguments As XsltArgumentList, results As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ arguments, System::IO::TextWriter ^ results);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="49f8d-503"><see cref="T:System.Xml.XPath.IXPathNavigable" /> 인터페이스를 구현하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-503">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="49f8d-504">Microsoft .NET Framework에서 이 개체는 변환할 데이터를 포함하는 <see cref="T:System.Xml.XmlNode" /> 또는 <see cref="T:System.Xml.XmlDocument" />(대개 <see cref="T:System.Xml.XPath.XPathDocument" />)일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-504">In the Microsoft .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="arguments"><span data-ttu-id="49f8d-505">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-505">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</span></span> <span data-ttu-id="49f8d-506">이 값은 <see langword="null" />일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-506">This value can be <see langword="null" />.</span></span></param>
        <param name="results"><span data-ttu-id="49f8d-507">출력을 제공할 대상 <see cref="T:System.IO.TextWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-507">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span></span></param>
        <summary><span data-ttu-id="49f8d-508"><see cref="T:System.Xml.XPath.IXPathNavigable" /> 개체에 지정된 입력 문서를 사용하여 변환을 실행하고 <see cref="T:System.IO.TextWriter" />에 결과를 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-508">Executes the transform using the input document specified by the <see cref="T:System.Xml.XPath.IXPathNavigable" /> object and outputs the results to an <see cref="T:System.IO.TextWriter" />.</span></span> <span data-ttu-id="49f8d-509"><see cref="T:System.Xml.Xsl.XsltArgumentList" />는 추가 런타임 인수를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-509">The <see cref="T:System.Xml.Xsl.XsltArgumentList" /> provides additional run-time arguments.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49f8d-510">하는 경우 XSLT `document()` 함수를 사용 하는 자동적으로 해결 되므로 사용 하는 <xref:System.Xml.XmlUrlResolver> 자격 증명이 없는 사용자입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-510">If the XSLT `document()` function is enabled, it is resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="49f8d-511">외부 리소스를 인증이 필요한 네트워크 리소스에 있는 경우는 오버 로드를 사용 하 여는 <xref:System.Xml.XmlResolver> 인수 중 하나로 지정 하 고는 <xref:System.Xml.XmlResolver> 에 필요한 자격 증명입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-511">If the external resource is located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="49f8d-512">이 방법은 지원 하지 않습니다는 `xsl:strip-space` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-512">This method does not support the `xsl:strip-space` element.</span></span> <span data-ttu-id="49f8d-513">컴파일된 스타일 시트에 포함 된 경우는 `xsl:strip-space` 사용 해야 요소는 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 오버 로드를 <xref:System.Xml.XmlReader> 입력 인수로 합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-513">If your compiled style sheet included the `xsl:strip-space` element, you must use the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> overload which takes an <xref:System.Xml.XmlReader> as the input argument.</span></span>  
  
 <span data-ttu-id="49f8d-514"><xref:System.Xml.XPath.IXPathNavigable> 인터페이스는 <xref:System.Xml.XmlNode> 및 <xref:System.Xml.XPath.XPathDocument> 클래스에서 구현됩니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-514">The <xref:System.Xml.XPath.IXPathNavigable> interface is implemented in the <xref:System.Xml.XmlNode> and <xref:System.Xml.XPath.XPathDocument> classes.</span></span> <span data-ttu-id="49f8d-515">이 클래스는 XML 데이터의 메모리 내 캐시를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-515">These classes represent an in-memory cache of XML data.</span></span>  
  
-   <span data-ttu-id="49f8d-516"><xref:System.Xml.XmlNode> 클래스는 W3C DOM(문서 개체 모델)을 기반으로 하며 편집 기능이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-516">The <xref:System.Xml.XmlNode> class is based on the W3C Document Object Model (DOM) and includes editing capabilities.</span></span>  
  
-   <span data-ttu-id="49f8d-517"><xref:System.Xml.XPath.XPathDocument> 클래스는 XPath 데이터 모델을 기반으로 하는 읽기 전용 데이터 저장소입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-517">The <xref:System.Xml.XPath.XPathDocument> class is a read-only data store based on the XPath data model.</span></span> <span data-ttu-id="49f8d-518"><xref:System.Xml.XPath.XPathDocument>는 XSLT 처리에 권장되는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-518"><xref:System.Xml.XPath.XPathDocument> is the recommended class for XSLT processing.</span></span> <span data-ttu-id="49f8d-519">이 클래스는 <xref:System.Xml.XmlNode> 클래스와 비교하여 속도가 더 빠릅니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-519">It provides faster performance when compared to the <xref:System.Xml.XmlNode> class.</span></span>  
  
 <span data-ttu-id="49f8d-520">변환은 문서 전체에 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-520">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="49f8d-521">즉, 문서 루트 노드 이외의 노드에 전달해도 변환 프로세스에서 로드된 문서의 모든 노드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-521">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="49f8d-522">노드 조각을 변환하려면 노드 조각만 포함하는 개체를 만들고 이 개체를 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 메서드에 전달해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-522">To transform a node fragment, you must create an object containing just the node fragment, and pass that object to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.</span></span> <span data-ttu-id="49f8d-523">자세한 내용은 [방법: 노드 조각 변환](~/docs/standard/data/xml/how-to-transform-a-node-fragment.md)을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="49f8d-523">For more information, see [How to: Transform a Node Fragment](~/docs/standard/data/xml/how-to-transform-a-node-fragment.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49f8d-524"><paramref name="input" /> 또는 <paramref name="results" /> 값이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="49f8d-524">The <paramref name="input" /> or <paramref name="results" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.Xsl.XsltException"><span data-ttu-id="49f8d-525">XSLT 변환을 실행하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="49f8d-525">There was an error executing the XSLT transform.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList arguments, System.Xml.XmlWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList arguments, class System.Xml.XmlWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, arguments As XsltArgumentList, results As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ arguments, System::Xml::XmlWriter ^ results);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="49f8d-526"><see cref="T:System.Xml.XPath.IXPathNavigable" /> 인터페이스를 구현하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-526">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="49f8d-527">Microsoft .NET Framework에서 이 개체는 변환할 데이터를 포함하는 <see cref="T:System.Xml.XmlNode" /> 또는 <see cref="T:System.Xml.XmlDocument" />(대개 <see cref="T:System.Xml.XPath.XPathDocument" />)일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-527">In the Microsoft .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="arguments"><span data-ttu-id="49f8d-528">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-528">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</span></span> <span data-ttu-id="49f8d-529">이 값은 <see langword="null" />일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-529">This value can be <see langword="null" />.</span></span></param>
        <param name="results"><span data-ttu-id="49f8d-530">출력을 제공할 대상 <see cref="T:System.Xml.XmlWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-530">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span>  
  
 <span data-ttu-id="49f8d-531">스타일시트에 <c>xsl:output</c> 요소가 포함된 경우 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 속성에서 반환된 <see cref="T:System.Xml.XmlWriterSettings" /> 개체를 사용하여 <see cref="T:System.Xml.XmlWriter" />를 만들어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-531">If the style sheet contains an <c>xsl:output</c> element, you should create the <see cref="T:System.Xml.XmlWriter" /> using the <see cref="T:System.Xml.XmlWriterSettings" /> object returned from the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property.</span></span> <span data-ttu-id="49f8d-532">이렇게 해야 <see cref="T:System.Xml.XmlWriter" />의 출력 설정이 올바르게 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-532">This ensures that the <see cref="T:System.Xml.XmlWriter" /> has the correct output settings.</span></span></param>
        <summary><span data-ttu-id="49f8d-533"><see cref="T:System.Xml.XPath.IXPathNavigable" /> 개체에 지정된 입력 문서를 사용하여 변환을 실행하고 <see cref="T:System.Xml.XmlWriter" />에 결과를 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-533">Executes the transform using the input document specified by the <see cref="T:System.Xml.XPath.IXPathNavigable" /> object and outputs the results to an <see cref="T:System.Xml.XmlWriter" />.</span></span> <span data-ttu-id="49f8d-534"><see cref="T:System.Xml.Xsl.XsltArgumentList" />는 추가 런타임 인수를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-534">The <see cref="T:System.Xml.Xsl.XsltArgumentList" /> provides additional run-time arguments.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49f8d-535">하는 경우 XSLT `document()` 함수를 사용 하는 자동적으로 해결 되므로 사용 하는 <xref:System.Xml.XmlUrlResolver> 자격 증명이 없는 사용자입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-535">If the XSLT `document()` function is enabled, it is resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="49f8d-536">외부 리소스를 인증이 필요한 네트워크 리소스에 있는 경우는 오버 로드를 사용 하 여는 <xref:System.Xml.XmlResolver> 인수 중 하나로 지정 하 고는 <xref:System.Xml.XmlResolver> 에 필요한 자격 증명입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-536">If the external resource is located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="49f8d-537">이 방법은 지원 하지 않습니다는 `xsl:strip-space` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-537">This method does not support the `xsl:strip-space` element.</span></span> <span data-ttu-id="49f8d-538">컴파일된 스타일 시트에 포함 된 경우는 `xsl:strip-space` 사용 해야 요소는 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 오버 로드를 <xref:System.Xml.XmlReader> 입력 인수로 합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-538">If your compiled style sheet included the `xsl:strip-space` element, you must use the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> overload which takes an <xref:System.Xml.XmlReader> as the input argument.</span></span>  
  
 <span data-ttu-id="49f8d-539"><xref:System.Xml.XPath.IXPathNavigable> 인터페이스는 <xref:System.Xml.XmlNode> 및 <xref:System.Xml.XPath.XPathDocument> 클래스에서 구현됩니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-539">The <xref:System.Xml.XPath.IXPathNavigable> interface is implemented in the <xref:System.Xml.XmlNode> and <xref:System.Xml.XPath.XPathDocument> classes.</span></span> <span data-ttu-id="49f8d-540">이 클래스는 XML 데이터의 메모리 내 캐시를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-540">These classes represent an in-memory cache of XML data.</span></span>  
  
-   <span data-ttu-id="49f8d-541"><xref:System.Xml.XmlNode> 클래스는 W3C DOM(문서 개체 모델)을 기반으로 하며 편집 기능이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-541">The <xref:System.Xml.XmlNode> class is based on the W3C Document Object Model (DOM) and includes editing capabilities.</span></span>  
  
-   <span data-ttu-id="49f8d-542"><xref:System.Xml.XPath.XPathDocument> 클래스는 XPath 데이터 모델을 기반으로 하는 읽기 전용 데이터 저장소입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-542">The <xref:System.Xml.XPath.XPathDocument> class is a read-only data store based on the XPath data model.</span></span> <span data-ttu-id="49f8d-543"><xref:System.Xml.XPath.XPathDocument>는 XSLT 처리에 권장되는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-543"><xref:System.Xml.XPath.XPathDocument> is the recommended class for XSLT processing.</span></span> <span data-ttu-id="49f8d-544">이 클래스는 <xref:System.Xml.XmlNode> 클래스와 비교하여 속도가 더 빠릅니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-544">It provides faster performance when compared to the <xref:System.Xml.XmlNode> class.</span></span>  
  
 <span data-ttu-id="49f8d-545">변환은 문서 전체에 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-545">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="49f8d-546">즉, 문서 루트 노드 이외의 노드에 전달해도 변환 프로세스에서 로드된 문서의 모든 노드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-546">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="49f8d-547">노드 조각을 변환하려면 노드 조각만 포함하는 개체를 만들고 이 개체를 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 메서드에 전달해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-547">To transform a node fragment, you must create an object containing just the node fragment, and pass that object to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.</span></span> <span data-ttu-id="49f8d-548">자세한 내용은 [방법: 노드 조각 변환](~/docs/standard/data/xml/how-to-transform-a-node-fragment.md)을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="49f8d-548">For more information, see [How to: Transform a Node Fragment](~/docs/standard/data/xml/how-to-transform-a-node-fragment.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49f8d-549"><paramref name="input" /> 또는 <paramref name="results" /> 값이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="49f8d-549">The <paramref name="input" /> or <paramref name="results" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.Xsl.XsltException"><span data-ttu-id="49f8d-550">XSLT 변환을 실행하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="49f8d-550">There was an error executing the XSLT transform.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XmlReader input, System.Xml.Xsl.XsltArgumentList arguments, System.Xml.XmlWriter results, System.Xml.XmlResolver documentResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XmlReader input, class System.Xml.Xsl.XsltArgumentList arguments, class System.Xml.XmlWriter results, class System.Xml.XmlResolver documentResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XmlReader, arguments As XsltArgumentList, results As XmlWriter, documentResolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XmlReader ^ input, System::Xml::Xsl::XsltArgumentList ^ arguments, System::Xml::XmlWriter ^ results, System::Xml::XmlResolver ^ documentResolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XmlReader" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.Xml.XmlWriter" />
        <Parameter Name="documentResolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="49f8d-551">입력 문서가 포함된 <see cref="T:System.Xml.XmlReader" />입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-551">An <see cref="T:System.Xml.XmlReader" /> containing the input document.</span></span></param>
        <param name="arguments"><span data-ttu-id="49f8d-552">변환에 대한 입력용으로 사용되는 네임스페이스 정규화 인수가 들어 있는 <see cref="T:System.Xml.Xsl.XsltArgumentList" />입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-552">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</span></span> <span data-ttu-id="49f8d-553">이 값은 <see langword="null" />일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-553">This value can be <see langword="null" />.</span></span></param>
        <param name="results"><span data-ttu-id="49f8d-554">출력을 제공할 대상 <see cref="T:System.Xml.XmlWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-554">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span>  
  
 <span data-ttu-id="49f8d-555">스타일시트에 <c>xsl:output</c> 요소가 포함된 경우 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 속성에서 반환된 <see cref="T:System.Xml.XmlWriterSettings" /> 개체를 사용하여 <see cref="T:System.Xml.XmlWriter" />를 만들어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-555">If the style sheet contains an <c>xsl:output</c> element, you should create the <see cref="T:System.Xml.XmlWriter" /> using the <see cref="T:System.Xml.XmlWriterSettings" /> object returned from the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property.</span></span> <span data-ttu-id="49f8d-556">이렇게 해야 <see cref="T:System.Xml.XmlWriter" />의 출력 설정이 올바르게 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-556">This ensures that the <see cref="T:System.Xml.XmlWriter" /> has the correct output settings.</span></span></param>
        <param name="documentResolver"><span data-ttu-id="49f8d-557">XSLT <c>document()</c> 함수 확인에 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-557">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="49f8d-558">이 값이 <see langword="null" />이면 <c>document()</c> 함수가 확인되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-558">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span></param>
        <summary><span data-ttu-id="49f8d-559"><see cref="T:System.Xml.XmlReader" /> 개체에 지정된 입력 문서를 사용하여 변환을 실행하고 <see cref="T:System.Xml.XmlWriter" />에 결과를 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-559">Executes the transform using the input document specified by the <see cref="T:System.Xml.XmlReader" /> object and outputs the results to an <see cref="T:System.Xml.XmlWriter" />.</span></span> <span data-ttu-id="49f8d-560"><see cref="T:System.Xml.Xsl.XsltArgumentList" />는 추가 런타임 인수를 제공하고 XmlResolver는 XSLT <c>document()</c> 함수를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-560">The <see cref="T:System.Xml.Xsl.XsltArgumentList" /> provides additional run-time arguments and the XmlResolver resolves the XSLT <c>document()</c> function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="49f8d-561">다음 예제에서는 <xref:System.Xml.XmlSecureResolver> XSLT를 해결 하려면 `document()` 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-561">The following example uses an <xref:System.Xml.XmlSecureResolver> to resolve the XSLT `document()` function.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Transform#4](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#4)]
 [!code-vb[XslCompiledTransform.Transform#4](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="49f8d-562"><paramref name="input" /> 또는 <paramref name="results" /> 값이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="49f8d-562">The <paramref name="input" /> or <paramref name="results" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.Xsl.XsltException"><span data-ttu-id="49f8d-563">XSLT 변환을 실행하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="49f8d-563">There was an error executing the XSLT transform.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList arguments, System.Xml.XmlWriter results, System.Xml.XmlResolver documentResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList arguments, class System.Xml.XmlWriter results, class System.Xml.XmlResolver documentResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, arguments As XsltArgumentList, results As XmlWriter, documentResolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ arguments, System::Xml::XmlWriter ^ results, System::Xml::XmlResolver ^ documentResolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.Xml.XmlWriter" />
        <Parameter Name="documentResolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="49f8d-564"><see cref="T:System.Xml.XPath.IXPathNavigable" /> 개체에서 지정되는 변환할 문서입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-564">The document to transform that is specified by the <see cref="T:System.Xml.XPath.IXPathNavigable" /> object.</span></span></param>
        <param name="arguments"><span data-ttu-id="49f8d-565"><see cref="T:System.Xml.Xsl.XsltArgumentList" />로 표시되는 인수 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-565">Argument list as <see cref="T:System.Xml.Xsl.XsltArgumentList" />.</span></span></param>
        <param name="results"><span data-ttu-id="49f8d-566">출력을 제공할 대상 <see cref="T:System.Xml.XmlWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-566">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span>  
  
 <span data-ttu-id="49f8d-567">스타일시트에 <see langword="xsl:output" /> 요소가 포함된 경우 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 속성에서 반환되는 <see cref="T:System.Xml.XmlWriterSettings" /> 개체를 사용하여 <see cref="T:System.Xml.XmlWriter" />를 만들어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-567">If the style sheet contains an <see langword="xsl:output" /> element, you should create the <see cref="T:System.Xml.XmlWriter" /> by using the <see cref="T:System.Xml.XmlWriterSettings" /> object that is returned from the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property.</span></span> <span data-ttu-id="49f8d-568">이렇게 해야 <see cref="T:System.Xml.XmlWriter" />의 출력 설정이 올바르게 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-568">This ensures that the <see cref="T:System.Xml.XmlWriter" /> has the correct output settings.</span></span></param>
        <param name="documentResolver"><span data-ttu-id="49f8d-569">XSLT <see langword="document()" /> 함수 확인에 사용되는 <see cref="T:System.Xml.XmlResolver" />입니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-569">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <see langword="document()" /> function.</span></span> <span data-ttu-id="49f8d-570">이 값이 <see langword="null" />이면 <see langword="document()" /> 함수가 확인되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-570">If this is <see langword="null" />, the <see langword="document()" /> function is not resolved.</span></span></param>
        <summary><span data-ttu-id="49f8d-571"><see cref="T:System.Xml.XPath.IXPathNavigable" /> 개체에 지정된 입력 문서를 사용하여 변환을 실행하고 <see cref="T:System.Xml.XmlWriter" />에 결과를 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-571">Executes the transform by using the input document that is specified by the <see cref="T:System.Xml.XPath.IXPathNavigable" /> object and outputs the results to an <see cref="T:System.Xml.XmlWriter" />.</span></span> <span data-ttu-id="49f8d-572"><see cref="T:System.Xml.Xsl.XsltArgumentList" />는 추가 런타임 인수를 제공하고 <see cref="T:System.Xml.XmlResolver" />는 XSLT <see langword="document()" /> 함수를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="49f8d-572">The <see cref="T:System.Xml.Xsl.XsltArgumentList" /> provides additional run-time arguments and the <see cref="T:System.Xml.XmlResolver" /> resolves the XSLT <see langword="document()" /> function.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>