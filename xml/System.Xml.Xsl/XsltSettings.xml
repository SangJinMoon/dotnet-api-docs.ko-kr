<Type Name="XsltSettings" FullName="System.Xml.Xsl.XsltSettings">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="51222246c6cae0bbb00cdef670ec3138d1884bbf" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30720347" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class XsltSettings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XsltSettings extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Xsl.XsltSettings" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XsltSettings" />
  <TypeSignature Language="C++ CLI" Value="public ref class XsltSettings sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>XSLT 스타일시트를 실행하는 동안 지원할 XSLT 기능을 지정합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 스크립트 블록 및 XSLT 포함 `document()` 함수 선택적 기능에는 <xref:System.Xml.Xsl.XslCompiledTransform> 클래스입니다. 이러한 기능은 기본적으로 비활성화 됩니다. <xref:System.Xml.Xsl.XsltSettings> 클래스를 지정 하는 지 원하는 데 사용할 선택적 기능입니다. 기능을 사용 하거나 클래스 속성을 사용 하 여 사용 하지 않도록 설정 합니다. 그런 다음 <xref:System.Xml.Xsl.XsltSettings> 개체를 <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A?displayProperty=nameWithType> 메서드에 전달합니다.  
  
> [!IMPORTANT]
>  XSLT 스타일시트에는 다른 파일에 대한 참조 및 포함 스크립트 블록이 포함될 수 있습니다. 악의적인 사용자는 이 스타일시트를 실행할 경우 리소스에서 컴퓨터가 느리게 실행될 때까지 시스템에서 처리하게 만들 수 있는 데이터 또는 스타일시트를 제공하여 악용할 수 있습니다. 하지 않도록 설정 스크립팅 또는 `document()` 신뢰할 수 있는 소스에서 스타일 시트를 가져오지 않은 경우에 작동 합니다. 스타일 시트의 소스를 확인할 수 없거나 신뢰할 수 있는 소스에서 스타일 시트를 가져오지 않은 경우 기본 XSLT 설정을 사용 합니다.  
  
   
  
## Examples  
 다음 예에서는 스타일 시트를 로드 하며 XSLT 스크립트 지원할 수 있도록 합니다.  
  
 [!code-csharp[XslCompiledTransform.Load#6](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#6)]
 [!code-vb[XslCompiledTransform.Load#6](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Xml.Xsl.XsltSettings" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XsltSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XsltSettings.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XsltSettings();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Xml.Xsl.XsltSettings" /> 클래스의 새 인스턴스를 기본 설정으로 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 새 <xref:System.Xml.Xsl.XsltSettings> 개체가 XSLT를 지원 하지 않는 `document()` 함수 또는 포함 된 스크립트 블록입니다.  
  
> [!IMPORTANT]
>  XSLT 스크립트는 스크립트 지원이 필요하거나 완전히 신뢰할 수 있는 환경에서 작업하는 경우에만 활성화해야 합니다. 사용 하도록 설정 하면는 `document()` 함수를 전달 하 여 액세스할 수 있는 리소스를 제한할 수 있습니다는 <xref:System.Xml.XmlSecureResolver> 개체는 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XsltSettings (bool enableDocumentFunction, bool enableScript);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableDocumentFunction, bool enableScript) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XsltSettings.#ctor(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (enableDocumentFunction As Boolean, enableScript As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XsltSettings(bool enableDocumentFunction, bool enableScript);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableDocumentFunction" Type="System.Boolean" />
        <Parameter Name="enableScript" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enableDocumentFunction">
          XSLT <c>document()</c> 함수를 지원하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <param name="enableScript">
          포함된 스크립트 블록을 지원하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary>지정된 설정을 사용하여 <see cref="T:System.Xml.Xsl.XsltSettings" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  XSLT 스크립트는 스크립트 지원이 필요하거나 완전히 신뢰할 수 있는 환경에서 작업하는 경우에만 활성화해야 합니다. 사용 하도록 설정 하면는 `document()` 함수를 전달 하 여 액세스할 수 있는 리소스를 제한할 수 있습니다는 <xref:System.Xml.XmlSecureResolver> 개체는 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 메서드.  
  
   
  
## Examples  
 다음 예에서는 스타일 시트를 로드 하며 XSLT 스크립트 지원할 수 있도록 합니다.  
  
 [!code-csharp[XslCompiledTransform.Load#6](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#6)]
 [!code-vb[XslCompiledTransform.Load#6](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Xml.Xsl.XsltSettings Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Xml.Xsl.XsltSettings Default" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Xsl.XsltSettings.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As XsltSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Xml::Xsl::XsltSettings ^ Default { System::Xml::Xsl::XsltSettings ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Xsl.XsltSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>기본 설정을 사용하는 <see cref="T:System.Xml.Xsl.XsltSettings" /> 개체를 가져옵니다. XSLT <c>document()</c> 함수와 포함된 스크립트 블록은 지원되지 않습니다.</summary>
        <value>
          <see cref="T:System.Xml.Xsl.XsltSettings" /> 및 <see cref="P:System.Xml.Xsl.XsltSettings.EnableDocumentFunction" /> 속성이 <see langword="false" />로 설정된 <see cref="P:System.Xml.Xsl.XsltSettings.EnableScript" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 기본 XSLT 설정으로 스타일 시트를 로드 합니다.  
  
 [!code-csharp[XslCompiledTransform.Load#7](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#7)]
 [!code-vb[XslCompiledTransform.Load#7](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableDocumentFunction">
      <MemberSignature Language="C#" Value="public bool EnableDocumentFunction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableDocumentFunction" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Xsl.XsltSettings.EnableDocumentFunction" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableDocumentFunction As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableDocumentFunction { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>XSLT <c>document()</c> 함수를 지원할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>
          <see langword="true" /> XSLT를 지원 하기 위해 <c>document ()</c> 작동 합니다; 그렇지 않으면 <see langword="false" />합니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  사용 하도록 설정 하면는 `document()` 함수를 전달 하 여 액세스할 수 있는 리소스를 제한할 수 있습니다는 <xref:System.Xml.XmlSecureResolver> 개체는 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableScript">
      <MemberSignature Language="C#" Value="public bool EnableScript { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableScript" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Xsl.XsltSettings.EnableScript" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableScript As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableScript { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>포함된 스크립트 블록을 지원할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>
          XSLT 스타일시트에 있는 스크립트 블록을 지원하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  XSLT 스크립트는 스크립트 지원이 필요하거나 완전히 신뢰할 수 있는 환경에서 작업하는 경우에만 활성화해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrustedXslt">
      <MemberSignature Language="C#" Value="public static System.Xml.Xsl.XsltSettings TrustedXslt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Xml.Xsl.XsltSettings TrustedXslt" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Xsl.XsltSettings.TrustedXslt" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TrustedXslt As XsltSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Xml::Xsl::XsltSettings ^ TrustedXslt { System::Xml::Xsl::XsltSettings ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Xsl.XsltSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>XSLT <c>document()</c> 함수 및 포함된 스크립트 블록을 지원하는 <see cref="T:System.Xml.Xsl.XsltSettings" /> 개체를 가져옵니다.</summary>
        <value>
          <see cref="T:System.Xml.Xsl.XsltSettings" /> 및 <see cref="P:System.Xml.Xsl.XsltSettings.EnableDocumentFunction" /> 속성이 <see langword="true" />로 설정된 <see cref="P:System.Xml.Xsl.XsltSettings.EnableScript" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  XSLT 스크립트는 스크립트 지원이 필요하거나 완전히 신뢰할 수 있는 환경에서 작업하는 경우에만 활성화해야 합니다. 사용 하도록 설정 하면는 `document()` 함수를 전달 하 여 액세스할 수 있는 리소스를 제한할 수 있습니다는 <xref:System.Xml.XmlSecureResolver> 개체는 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 메서드.  
  
   
  
## Examples  
 다음 예제에서는 XSLT 지 원하는 스타일 시트를 로드 `document()` 함수 및 포함된 스크립트 사용 하는 기능을 차단 합니다.  
  
 [!code-csharp[XslCompiledTransform.Load#8](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#8)]
 [!code-vb[XslCompiledTransform.Load#8](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>