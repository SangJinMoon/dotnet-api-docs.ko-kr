<Type Name="CollectionAdapters" FullName="System.AddIn.Pipeline.CollectionAdapters">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cda5b936b22052f7b99b2c7e5bd552235a459181" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30359867" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class CollectionAdapters" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit CollectionAdapters extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Pipeline.CollectionAdapters" />
  <TypeSignature Language="VB.NET" Value="Public Class CollectionAdapters" />
  <TypeSignature Language="C++ CLI" Value="public ref class CollectionAdapters abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>추가 기능과 해당 호스트 응용 프로그램 간에 컬렉션을 전달할 수 있게 합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 클래스는 메서드를 제공는 <xref:System.Collections.Generic.IList%601> 컬렉션으로 변환 될 수는 <xref:System.AddIn.Contract.IListContract%601> 컬렉션입니다. <xref:System.AddIn.Contract.IListContract%601> 컬렉션을 다시 변환 및 격리 경계를 넘어 전달는 <xref:System.Collections.Generic.IList%601> 추가 나 호스트 응용 프로그램에서 사용할 수 있는 컬렉션입니다.  
  
 컬렉션의 개체에는 원격 가능 이어야 합니다. 전달할 수 있는 개체 유형에 대 한 자세한 내용은 참조 [계약, 뷰 및 어댑터](http://msdn.microsoft.com/library/a6460173-9507-4b87-8c07-d4ee245d715c)합니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ToIList&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;T&gt; ToIList&lt;T&gt; (System.AddIn.Contract.IListContract&lt;T&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;!!T&gt; ToIList&lt;T&gt;(class System.AddIn.Contract.IListContract`1&lt;!!T&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.CollectionAdapters.ToIList``1(System.AddIn.Contract.IListContract{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToIList(Of T) (collection As IListContract(Of T)) As IList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Generic::IList&lt;T&gt; ^ ToIList(System::AddIn::Contract::IListContract&lt;T&gt; ^ collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="collection" Type="System.AddIn.Contract.IListContract&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">목록에 들어 있는 개체의 형식입니다. <c>T</c> 직렬화 해야 합니다.</typeparam>
        <param name="collection">파이프라인의 다른 쪽에 있는 컬렉션입니다.</param>
        <summary>지정된 <see cref="T:System.AddIn.Contract.IListContract`1" /> 컬렉션을 <see cref="T:System.Collections.Generic.IList`1" /> 컬렉션으로 변환합니다.</summary>
        <returns>변환된 컬렉션입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 호스트 응용 프로그램 또는 추가 기능에 반환 된 사용할 수 있습니다 <xref:System.Collections.Generic.IList%601> 컬렉션입니다. <xref:System.Collections.Generic.IList%601> 컬렉션 원격에 대 한 수명 토큰에 포함 됩니다 <xref:System.AddIn.Contract.IListContract%601> 컬렉션입니다.  
  
 이 메서드 오버 로드를 사용 해야 경우에만의 콘텐츠는 <xref:System.AddIn.Contract.IListContract%601> 는 추가 기능에 호스트 (보다는 보기에 맞게 조정 해야 하는 형식을)에 직접 전달 될 수 있는 직렬화 가능 형식이 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 설명 된 대로 호스트 측 어댑터 파이프라인 세그먼트를 구현 [연습: 호스트 간에 컬렉션 전달 및 추가 기능](http://msdn.microsoft.com/library/b532c604-548e-4fab-b11c-377257dd0ee5)합니다. 이 예제에서는 사용자 지정 `ProcessBooks` 을 수행 하 여 메서드는 <xref:System.AddIn.Contract.IListContract%601> 컬렉션에서 추가 기능에서 전달 하 고으로 변환 하 고는 <xref:System.Collections.Generic.IList%601> 컬렉션으로, 호스트 응용 프로그램을 유도할 수 있습니다.  
  
 [!code-csharp[AddInCollectionPipelineAddInSideAdapter#3](~/samples/snippets/csharp/VS_Snippets_CLR/AddInCollectionPipelineAddInSideAdapter/cs/LibraryManagerViewToContractAddInAdapter.cs#3)]
 [!code-vb[AddInCollectionPipelineAddInSideAdapter#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AddInCollectionPipelineAddInSideAdapter/vb/LibraryManagerViewToContractAddInAdapter.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToIList&lt;TContract,TView&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;TView&gt; ToIList&lt;TContract,TView&gt; (System.AddIn.Contract.IListContract&lt;TContract&gt; collection, Converter&lt;TContract,TView&gt; contractViewAdapter, Converter&lt;TView,TContract&gt; viewContractAdapter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;!!TView&gt; ToIList&lt;TContract, TView&gt;(class System.AddIn.Contract.IListContract`1&lt;!!TContract&gt; collection, class System.Converter`2&lt;!!TContract, !!TView&gt; contractViewAdapter, class System.Converter`2&lt;!!TView, !!TContract&gt; viewContractAdapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.CollectionAdapters.ToIList``2(System.AddIn.Contract.IListContract{``0},System.Converter{``0,``1},System.Converter{``1,``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToIList(Of TContract, TView) (collection As IListContract(Of TContract), contractViewAdapter As Converter(Of TContract, TView), viewContractAdapter As Converter(Of TView, TContract)) As IList(Of TView)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TContract, typename TView&gt;&#xA; static System::Collections::Generic::IList&lt;TView&gt; ^ ToIList(System::AddIn::Contract::IListContract&lt;TContract&gt; ^ collection, Converter&lt;TContract, TView&gt; ^ contractViewAdapter, Converter&lt;TView, TContract&gt; ^ viewContractAdapter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;TView&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContract" />
        <TypeParameter Name="TView" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="collection" Type="System.AddIn.Contract.IListContract&lt;TContract&gt;" />
        <Parameter Name="contractViewAdapter" Type="System.Converter&lt;TContract,TView&gt;" />
        <Parameter Name="viewContractAdapter" Type="System.Converter&lt;TView,TContract&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TContract">형식의 개체를 전달 하기 위한 계약을 정의 하는 형식을 <c>TView</c> 격리 경계를 넘어 합니다.</typeparam>
        <typeparam name="TView">목록에 있는 개체의 뷰를 정의하는 형식입니다.</typeparam>
        <param name="collection">파이프라인의 다른 쪽으로 전달할 컬렉션입니다.</param>
        <param name="contractViewAdapter">계약에 정의된 형식의 데이터를 뷰에 필요한 형식에 맞게 조정하는 변환기입니다.</param>
        <param name="viewContractAdapter">뷰에 정의된 형식의 데이터를 계약에 필요한 형식에 맞게 조정하는 변환기입니다.</param>
        <summary>변환기 어댑터를 사용하여 지정된 <see cref="T:System.AddIn.Contract.IListContract`1" /> 컬렉션을 <see cref="T:System.Collections.Generic.IList`1" /> 컬렉션으로 변환합니다.</summary>
        <returns>변환된 컬렉션입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 대 한이 메서드 오버 로드를 사용 하 여 <xref:System.AddIn.Contract.IListContract%601> 전에 추가 기능에서 호스트 (대신 또는 직접 전달 될 수 있는 간단한 serializable 형식)에 전달 될 수 있도록 수정 해야 하는 형식을 포함 하는 컬렉션입니다. 호스트 응용 프로그램 또는 추가 기능에 반환 된 사용할 수 있습니다 <xref:System.Collections.Generic.IList%601> 컬렉션입니다. 원격에 대 한 수명 토큰은 <xref:System.AddIn.Contract.IListContract%601>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToIListContract&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.AddIn.Contract.IListContract&lt;T&gt; ToIListContract&lt;T&gt; (System.Collections.Generic.IList&lt;T&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.AddIn.Contract.IListContract`1&lt;!!T&gt; ToIListContract&lt;T&gt;(class System.Collections.Generic.IList`1&lt;!!T&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.CollectionAdapters.ToIListContract``1(System.Collections.Generic.IList{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToIListContract(Of T) (collection As IList(Of T)) As IListContract(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::AddIn::Contract::IListContract&lt;T&gt; ^ ToIListContract(System::Collections::Generic::IList&lt;T&gt; ^ collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.IListContract&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IList&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">목록에 들어 있는 개체의 형식입니다. <c>T</c> 직렬화 해야 합니다.</typeparam>
        <param name="collection">변환할 컬렉션입니다.</param>
        <summary>지정된 <see cref="T:System.Collections.Generic.IList`1" /> 컬렉션을 <see cref="T:System.AddIn.Contract.IListContract`1" /> 컬렉션으로 변환합니다.</summary>
        <returns>변환된 컬렉션입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.AddIn.Contract.IListContract%601> 컬렉션에서 추가 기능 및 호스트 된 응용 프로그램 간에 격리 경계를 넘어 마샬링할 수 있습니다.  
  
 이 메서드 오버 로드를 사용 해야 경우에만의 콘텐츠는 <xref:System.Collections.Generic.IList%601> 컬렉션은는 계약 (하지 않고 계약에 맞게 조정 해야 하는 형식을)에 직접 전달 될 수 있는 직렬화 가능 형식입니다.  
  
   
  
## Examples  
 다음 예제에서는 추가 기능 측 어댑터 파이프라인 세그먼트를 정의 하는 클래스를 구현 합니다. 사용자 지정 적응 `ProcessBooks` 을 수행 하 여 메서드는 <xref:System.Collections.Generic.IList%601> 컬렉션 뷰 추가 기능에서 세그먼트에서 전달 하 고으로 변환 하 고는 <xref:System.AddIn.Contract.IListContract%601> 호스트에 격리 경계를 넘어 마샬링할 수 있는 컬렉션입니다.  
  
 [!code-csharp[AddInCollectionPipelineHostSideAdapter#4](~/samples/snippets/csharp/VS_Snippets_CLR/AddInCollectionPipelineHostSideAdapter/cs/LibraryManagerContractToViewHostAdapter.cs#4)]
 [!code-vb[AddInCollectionPipelineHostSideAdapter#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/AddInCollectionPipelineHostSideAdapter/vb/LibraryManagerContractToViewHostAdapter.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToIListContract&lt;TView,TContract&gt;">
      <MemberSignature Language="C#" Value="public static System.AddIn.Contract.IListContract&lt;TContract&gt; ToIListContract&lt;TView,TContract&gt; (System.Collections.Generic.IList&lt;TView&gt; collection, Converter&lt;TView,TContract&gt; viewContractAdapter, Converter&lt;TContract,TView&gt; contractViewAdapter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.AddIn.Contract.IListContract`1&lt;!!TContract&gt; ToIListContract&lt;TView, TContract&gt;(class System.Collections.Generic.IList`1&lt;!!TView&gt; collection, class System.Converter`2&lt;!!TView, !!TContract&gt; viewContractAdapter, class System.Converter`2&lt;!!TContract, !!TView&gt; contractViewAdapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.CollectionAdapters.ToIListContract``2(System.Collections.Generic.IList{``0},System.Converter{``0,``1},System.Converter{``1,``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToIListContract(Of TView, TContract) (collection As IList(Of TView), viewContractAdapter As Converter(Of TView, TContract), contractViewAdapter As Converter(Of TContract, TView)) As IListContract(Of TContract)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TView, typename TContract&gt;&#xA; static System::AddIn::Contract::IListContract&lt;TContract&gt; ^ ToIListContract(System::Collections::Generic::IList&lt;TView&gt; ^ collection, Converter&lt;TView, TContract&gt; ^ viewContractAdapter, Converter&lt;TContract, TView&gt; ^ contractViewAdapter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.IListContract&lt;TContract&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TView" />
        <TypeParameter Name="TContract" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IList&lt;TView&gt;" />
        <Parameter Name="viewContractAdapter" Type="System.Converter&lt;TView,TContract&gt;" />
        <Parameter Name="contractViewAdapter" Type="System.Converter&lt;TContract,TView&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TView">목록에 있는 개체의 뷰를 정의하는 형식입니다.</typeparam>
        <typeparam name="TContract">형식의 개체를 전달 하기 위한 계약을 정의 하는 형식을 <c>TView</c> 격리 경계를 넘어 합니다.</typeparam>
        <param name="collection">변환할 컬렉션입니다.</param>
        <param name="viewContractAdapter">뷰에 정의된 형식의 데이터를 계약에 필요한 형식에 맞게 조정하는 변환기입니다.</param>
        <param name="contractViewAdapter">계약에 정의된 형식의 데이터를 뷰에 필요한 형식에 맞게 조정하는 변환기입니다.</param>
        <summary>변환기 어댑터를 사용하여 지정된 <see cref="T:System.Collections.Generic.IList`1" /> 컬렉션을 <see cref="T:System.AddIn.Contract.IListContract`1" /> 컬렉션으로 변환합니다.</summary>
        <returns>변환된 컬렉션입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 대 한이 메서드 오버 로드를 사용 하 여 <xref:System.Collections.Generic.IList%601> 는 계약 (하지 않고 직접 전달 될 수 있는 간단한 serializable 형식)에 전달 될 수 전에 계약에 맞게 조정 해야 하는 형식을 포함 하는 컬렉션입니다. <xref:System.AddIn.Contract.IListContract%601> 컬렉션으로 추가 기능 및 호스트 된 응용 프로그램 간에 격리 경계를 넘어 마샬링할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>