<Type Name="ContractHandle" FullName="System.AddIn.Pipeline.ContractHandle">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d0c860743ded3b69806a5f389b7299b0e94e715f" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37704866" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ContractHandle : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ContractHandle extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Pipeline.ContractHandle" />
  <TypeSignature Language="VB.NET" Value="Public Class ContractHandle&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContractHandle : IDisposable" />
  <TypeSignature Language="F#" Value="type ContractHandle = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="8ce52-101">추가 기능의 수명을 제어하는 메서드를 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8ce52-101">Provides methods that control the lifetime of an add-in.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ce52-102">추가 기능 모델은 추가 기능 응용 프로그램 도메인 간에 및 프로세스 간 통신에 기능을 제공 하므로를 회수 가비지 수집기에 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="8ce52-102">Because the add-in model provides the ability for add-ins to communicate between application domains and between processes, it cannot rely on the garbage collector to reclaim them.</span></span> <span data-ttu-id="8ce52-103">이 클래스는 해당 계약 수명 토큰을 가져오면 추가 기능에 대 한 메커니즘을 계산 하는 참조를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="8ce52-103">This class provides a reference counting mechanism for the add-in by obtaining a lifetime token to its contract.</span></span>  
  
 <span data-ttu-id="8ce52-104">경우는 <xref:System.AddIn.Pipeline.ContractHandle> 개체가 생성 되 면 호출를 <xref:System.AddIn.Pipeline.ContractBase.AcquireLifetimeToken%2A> 메서드를 생성자에 전달 되는 계약입니다.</span><span class="sxs-lookup"><span data-stu-id="8ce52-104">When a <xref:System.AddIn.Pipeline.ContractHandle> object is constructed, it calls the <xref:System.AddIn.Pipeline.ContractBase.AcquireLifetimeToken%2A> method on the contract that is passed to the constructor.</span></span> <span data-ttu-id="8ce52-105">경우는 <xref:System.AddIn.Pipeline.ContractHandle> 호출, 개체를 삭제 하거나 종료는 <xref:System.AddIn.Pipeline.ContractBase.RevokeLifetimeToken%2A> 계약에 대해 보유를 제거 하는 계약 메서드.</span><span class="sxs-lookup"><span data-stu-id="8ce52-105">When the <xref:System.AddIn.Pipeline.ContractHandle> object is disposed or finalized, it calls the <xref:System.AddIn.Pipeline.ContractBase.RevokeLifetimeToken%2A> method on the contract, which removes its hold on the contract.</span></span>  
  
 <span data-ttu-id="8ce52-106">어댑터는 계약을 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="8ce52-106">Adapters implement the contract.</span></span> <span data-ttu-id="8ce52-107"><xref:System.AddIn.Pipeline.ContractHandle> 파이프라인 개발자가 적용 되는 계약의 수명을 관리 하는 데 사용할 계약-뷰 어댑터에서 클래스는 설계 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="8ce52-107">The <xref:System.AddIn.Pipeline.ContractHandle> class is designed to be used in a contract-to-view adapter to help pipeline developers manage the lifetime of the contract that is being adapted.</span></span> <span data-ttu-id="8ce52-108">일반적으로이 클래스의 인스턴스는 어댑터 클래스를 생성 하는 동안 인스턴스화되고 어댑터의 인스턴스 필드에 저장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8ce52-108">Typically, an instance of this class is instantiated during the construction of the adapter class and is stored in an instance field of the adapter.</span></span> <span data-ttu-id="8ce52-109">어댑터 클래스는 가비지가 수집 하는 경우는 <xref:System.AddIn.Pipeline.ContractHandle> 개체도 수집 되 고 <xref:System.AddIn.Pipeline.ContractHandle> 개체에는 계약의 수명 토큰을 철회 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8ce52-109">When the adapter class is garbage-collected, the <xref:System.AddIn.Pipeline.ContractHandle> object will also be collected and the <xref:System.AddIn.Pipeline.ContractHandle> object will revoke the lifetime token on the contract.</span></span>  
  
 <span data-ttu-id="8ce52-110">보기-계약 어댑터에서 상속 되도록 하는 것이 좋습니다는 <xref:System.AddIn.Pipeline.ContractBase> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="8ce52-110">It is recommended that your view-to-contract adapters inherit from the <xref:System.AddIn.Pipeline.ContractBase> class.</span></span> <span data-ttu-id="8ce52-111">멤버에 대 한 기본 구현을 사용할 수 있습니다 <xref:System.AddIn.Contract.IContract>, 즉, 특정 계약을 멤버를 구현 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="8ce52-111">You can then use a default implementation for the members of <xref:System.AddIn.Contract.IContract>, which means you need to implement only the members of your specific contract.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ce52-112">다음 예제에서는 파이프라인의 추가 기능 쪽 계약-뷰 어댑터의 수명 토큰 핸들을 설정 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="8ce52-112">The following example shows how to set the lifetime token handle in a contract-to-view adapter on the add-in side of a pipeline.</span></span>  
  
 [!code-csharp[AddinP2HostSideAdapters#2](~/samples/snippets/csharp/VS_Snippets_CLR/AddInP2HostSideAdapters/cs/Calc2ContractToViewHostSideAdapter.cs#2)]
 [!code-vb[AddinP2HostSideAdapters#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/AddInP2HostSideAdapters/vb/Calc2ContractToViewHostSideAdapter.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContractHandle (System.AddIn.Contract.IContract contract);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.AddIn.Contract.IContract contract) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractHandle.#ctor(System.AddIn.Contract.IContract)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contract As IContract)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContractHandle(System::AddIn::Contract::IContract ^ contract);" />
      <MemberSignature Language="F#" Value="new System.AddIn.Pipeline.ContractHandle : System.AddIn.Contract.IContract -&gt; System.AddIn.Pipeline.ContractHandle" Usage="new System.AddIn.Pipeline.ContractHandle contract" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contract" Type="System.AddIn.Contract.IContract" />
      </Parameters>
      <Docs>
        <param name="contract">
          <span data-ttu-id="8ce52-113">파이프라인에서 사용할 계약입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ce52-113">The contract to use in the pipeline.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8ce52-114">
            <see cref="T:System.AddIn.Pipeline.ContractHandle" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ce52-114">Initializes a new instance of the <see cref="T:System.AddIn.Pipeline.ContractHandle" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8ce52-115">
            <paramref name="contract" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ce52-115">
              <paramref name="contract" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AppDomainOwner">
      <MemberSignature Language="C#" Value="public static System.AddIn.Contract.IContract AppDomainOwner (AppDomain domain);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.AddIn.Contract.IContract AppDomainOwner(class System.AppDomain domain) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractHandle.AppDomainOwner(System.AppDomain)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AppDomainOwner (domain As AppDomain) As IContract" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::AddIn::Contract::IContract ^ AppDomainOwner(AppDomain ^ domain);" />
      <MemberSignature Language="F#" Value="static member AppDomainOwner : AppDomain -&gt; System.AddIn.Contract.IContract" Usage="System.AddIn.Pipeline.ContractHandle.AppDomainOwner domain" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.IContract</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
      </Parameters>
      <Docs>
        <param name="domain">
          <span data-ttu-id="8ce52-116">확인할 응용 프로그램 도메인입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ce52-116">The application domain to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8ce52-117">응용 프로그램 도메인이 생성되었을 때 추가 기능 쪽 어댑터의 인스턴스를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ce52-117">Gets the instance of the add-in-side adapter when the application domain was created.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ce52-118">응용 프로그램 도메인의 소유자를 나타내는 <see cref="T:System.AddIn.Contract.IContract" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ce52-118">An <see cref="T:System.AddIn.Contract.IContract" /> object that represents the owner of the application domain.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ce52-119">추가 기능 쪽 어댑터를 형식화 됩니다 <xref:System.AddIn.Contract.IContract>합니다.</span><span class="sxs-lookup"><span data-stu-id="8ce52-119">The add-in-side adapters are typed as <xref:System.AddIn.Contract.IContract>.</span></span>  
  
 <span data-ttu-id="8ce52-120">응용 프로그램 도메인 사용자가 이전에 만든, 소유자가입니다.</span><span class="sxs-lookup"><span data-stu-id="8ce52-120">If the application domain was previously created by a user, there is no owner.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8ce52-121">
            <paramref name="domain" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ce52-121">
              <paramref name="domain" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Contract">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.IContract Contract { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.AddIn.Contract.IContract Contract" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Pipeline.ContractHandle.Contract" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Contract As IContract" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::AddIn::Contract::IContract ^ Contract { System::AddIn::Contract::IContract ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Contract : System.AddIn.Contract.IContract" Usage="System.AddIn.Pipeline.ContractHandle.Contract" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.IContract</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ce52-122">파이프라인에서 사용되는 계약을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ce52-122">Gets the contract used by a pipeline.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ce52-123">
            <see cref="T:System.AddIn.Contract.IContract" />에서 파생된 계약입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ce52-123">The contract, which is derived from <see cref="T:System.AddIn.Contract.IContract" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractOwnsAppDomain">
      <MemberSignature Language="C#" Value="public static bool ContractOwnsAppDomain (System.AddIn.Contract.IContract contract, AppDomain domain);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContractOwnsAppDomain(class System.AddIn.Contract.IContract contract, class System.AppDomain domain) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractHandle.ContractOwnsAppDomain(System.AddIn.Contract.IContract,System.AppDomain)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContractOwnsAppDomain (contract As IContract, domain As AppDomain) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContractOwnsAppDomain(System::AddIn::Contract::IContract ^ contract, AppDomain ^ domain);" />
      <MemberSignature Language="F#" Value="static member ContractOwnsAppDomain : System.AddIn.Contract.IContract * AppDomain -&gt; bool" Usage="System.AddIn.Pipeline.ContractHandle.ContractOwnsAppDomain (contract, domain)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.AddIn.Contract.IContract" />
        <Parameter Name="domain" Type="System.AppDomain" />
      </Parameters>
      <Docs>
        <param name="contract">
          <span data-ttu-id="8ce52-124">확인할 계약입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ce52-124">The contract to check.</span>
          </span>
        </param>
        <param name="domain">
          <span data-ttu-id="8ce52-125">확인할 응용 프로그램 도메인입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ce52-125">The application domain to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8ce52-126">지정된 계약에서 응용 프로그램 도메인을 소유하는지 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ce52-126">Determines whether an application domain is owned by the specified contract.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ce52-127">계약에서 응용 프로그램 도메인을 소유하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ce52-127">
              <see langword="true" /> if the contract owns the application domain; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8ce52-128">
            <paramref name="contract" /> 또는 <paramref name="domain" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ce52-128">
              <paramref name="contract" /> or <paramref name="domain" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8ce52-129">계약의 수명 토큰을 해지합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ce52-129">Revokes the lifetime token on a contract.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractHandle.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="contractHandle.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8ce52-130">입력 값에 관계없이 계약의 수명 토큰을 해지합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ce52-130">Revokes the lifetime token on a contract, regardless of input.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractHandle.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="contractHandle.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="8ce52-131">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ce52-131">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8ce52-132">입력 값에 관계없이 계약의 수명 토큰을 해지하고, 선택적으로 관리되는 리소스를 해제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ce52-132">Revokes the lifetime token on the contract regardless of input and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ContractHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractHandle.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ContractHandle ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="contractHandle.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8ce52-133">
            <see cref="T:System.AddIn.Pipeline.ContractHandle" /> 인스턴스와 연결된 리소스를 해제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ce52-133">Releases the resources associated with the <see cref="T:System.AddIn.Pipeline.ContractHandle" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ce52-134">이 메서드는 <xref:System.Object.Finalize%2A?displayProperty=nameWithType>를 재정의합니다.</span><span class="sxs-lookup"><span data-stu-id="8ce52-134">This method overrides <xref:System.Object.Finalize%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="8ce52-135">응용 프로그램 코드는이 메서드를 호출 하지 개체의 <xref:System.AddIn.Pipeline.ContractHandle.Finalize%2A> 메서드를 호출 하 여 가비지 수집기에 의해 종료를 사용 하지 않도록 설정 된 경우가 아니면 자동으로 가비지를 수집 하는 동안 호출 됩니다는 <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8ce52-135">Application code should not call this method; an object's <xref:System.AddIn.Pipeline.ContractHandle.Finalize%2A> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="8ce52-136">이 메서드를 호출 하는 가비지 수집기에 의해 호출 되 면를 <xref:System.AddIn.Pipeline.ContractHandle.Dispose%28System.Boolean%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8ce52-136">When called by the garbage collector, this method calls the <xref:System.AddIn.Pipeline.ContractHandle.Dispose%28System.Boolean%29> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>