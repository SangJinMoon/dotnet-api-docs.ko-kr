<Type Name="ContractBase" FullName="System.AddIn.Pipeline.ContractBase">
  <TypeSignature Language="C#" Value="public class ContractBase : MarshalByRefObject, System.AddIn.Contract.IContract, System.Runtime.Remoting.Lifetime.ISponsor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ContractBase extends System.MarshalByRefObject implements class System.AddIn.Contract.IContract, class System.Runtime.Remoting.Lifetime.ISponsor" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Pipeline.ContractBase" />
  <TypeSignature Language="VB.NET" Value="Public Class ContractBase&#xA;Inherits MarshalByRefObject&#xA;Implements IContract, ISponsor" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContractBase : MarshalByRefObject, System::AddIn::Contract::IContract, System::Runtime::Remoting::Lifetime::ISponsor" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Lifetime.ISponsor</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="671de-101"><see cref="T:System.AddIn.Contract.IContract" /> 멤버의 기본 구현을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="671de-101">Provides a default implementation of <see cref="T:System.AddIn.Contract.IContract" /> members.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="671de-102">계약은 형식과 호스트와 추가 기능을 사용 하는 메서드를 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="671de-102">Contracts define the types and methods used by the host and the add-in.</span></span> <span data-ttu-id="671de-103">모든 계약에서 파생 되어야 <xref:System.AddIn.Contract.IContract>합니다.</span><span class="sxs-lookup"><span data-stu-id="671de-103">All contracts must derive from <xref:System.AddIn.Contract.IContract>.</span></span> <span data-ttu-id="671de-104">이 클래스의 기본 구현을 제공 <xref:System.AddIn.Contract.IContract> 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="671de-104">This class provides the default implementation of <xref:System.AddIn.Contract.IContract> members.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContractBase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContractBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="671de-105"><see cref="T:System.AddIn.Pipeline.ContractBase" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="671de-105">Initializes a new instance of the <see cref="T:System.AddIn.Pipeline.ContractBase" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcquireLifetimeToken">
      <MemberSignature Language="C#" Value="public int AcquireLifetimeToken ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 AcquireLifetimeToken() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractBase.AcquireLifetimeToken" />
      <MemberSignature Language="VB.NET" Value="Public Function AcquireLifetimeToken () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int AcquireLifetimeToken();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.AddIn.Contract.IContract.AcquireLifetimeToken</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="671de-106">수명 토큰을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="671de-106">Obtains a lifetime token.</span></span></summary>
        <returns><span data-ttu-id="671de-107">토큰을 식별하는 난수입니다.</span><span class="sxs-lookup"><span data-stu-id="671de-107">A random number that identifies a token.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="671de-108">이전에 가져온 모든 토큰은 해지되었습니다.</span><span class="sxs-lookup"><span data-stu-id="671de-108">All previously acquired tokens have been revoked.</span></span>  <span data-ttu-id="671de-109">사용할 수 있는 추가 토큰이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="671de-109">No further tokens are available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetRemoteHashCode">
      <MemberSignature Language="C#" Value="public virtual int GetRemoteHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetRemoteHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractBase.GetRemoteHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRemoteHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetRemoteHashCode();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.AddIn.Contract.IContract.GetRemoteHashCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="671de-110">현재 <see cref="T:System.AddIn.Pipeline.ContractBase" /> 개체에 대한 해시 코드를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="671de-110">Gets the hash code for the current <see cref="T:System.AddIn.Pipeline.ContractBase" /> object.</span></span></summary>
        <returns><span data-ttu-id="671de-111">현재 <see cref="T:System.AddIn.Pipeline.ContractBase" /> 개체의 해시 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="671de-111">A hash code for the current <see cref="T:System.AddIn.Pipeline.ContractBase" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnFinalRevoke">
      <MemberSignature Language="C#" Value="protected virtual void OnFinalRevoke ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFinalRevoke() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractBase.OnFinalRevoke" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFinalRevoke ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFinalRevoke();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="671de-112">추가 기능측 어댑터에서 재정의하는 경우 어댑터가 보유하는 네이티브 리소스를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="671de-112">When overridden in an add-in-side adapter, releases native resources held by the adapter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="671de-113">이 메서드는 시스템에서 모든 수명 토큰이 현재에서 획득 된 <xref:System.AddIn.Pipeline.ContractBase> 인스턴스 해지 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="671de-113">This method is called by the system when all the lifetime tokens that have been acquired from the current <xref:System.AddIn.Pipeline.ContractBase> instance have been revoked.</span></span> <span data-ttu-id="671de-114">어댑터에서 보유 한 모든 네이티브 리소스를 정리 하 고 동일한 수행 해야 하는 조정된 보기에 신호를 보내이 방법을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="671de-114">Use this method to clean up any native resources held by the adapter, and to signal to the adapted views that they should do the same.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryContract">
      <MemberSignature Language="C#" Value="public virtual System.AddIn.Contract.IContract QueryContract (string contractIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.IContract QueryContract(string contractIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractBase.QueryContract(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function QueryContract (contractIdentifier As String) As IContract" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::AddIn::Contract::IContract ^ QueryContract(System::String ^ contractIdentifier);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.AddIn.Contract.IContract.QueryContract(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.IContract</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contractIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contractIdentifier"><span data-ttu-id="671de-115">어셈블리 이름을 포함한 계약의 전체 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="671de-115">The full name of the contract, including its assembly name.</span></span></param>
        <summary><span data-ttu-id="671de-116">계약의 인스턴스를 리플렉션하고 현재 개체가 해당 계약을 구현하는 경우 <see langword="this" /> 포인터를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="671de-116">Reflects over the instance of a contract and returns the <see langword="this" /> pointer if the current object implements that contract.</span></span></summary>
        <returns><span data-ttu-id="671de-117"><see cref="T:System.AddIn.Contract.IContract" /> 인터페이스에 대한 <see langword="this" /> 포인터이거나, 계약이 구현되지 않은 경우 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="671de-117">The <see langword="this" /> pointer to an <see cref="T:System.AddIn.Contract.IContract" /> interface, or <see langword="null" /> if the contract is not implemented.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="671de-118">이 메서드를 재정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="671de-118">This method can be overridden.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="671de-119"><paramref name="contractIdentifier" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="671de-119"><paramref name="contractIdentifier" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoteEquals">
      <MemberSignature Language="C#" Value="public virtual bool RemoteEquals (System.AddIn.Contract.IContract contract);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RemoteEquals(class System.AddIn.Contract.IContract contract) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractBase.RemoteEquals(System.AddIn.Contract.IContract)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoteEquals (contract As IContract) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool RemoteEquals(System::AddIn::Contract::IContract ^ contract);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.AddIn.Contract.IContract.RemoteEquals(System.AddIn.Contract.IContract)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.AddIn.Contract.IContract" />
      </Parameters>
      <Docs>
        <param name="contract"><span data-ttu-id="671de-120">원격 개체와 같은지 테스트할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="671de-120">The object to test for equality with the remote object.</span></span></param>
        <summary><span data-ttu-id="671de-121">특정 개체와 원격 개체가 서로 같은지 비교합니다.</span><span class="sxs-lookup"><span data-stu-id="671de-121">Compares an object with a remote object for equality.</span></span></summary>
        <returns>
          <span data-ttu-id="671de-122">개체가 원격 개체와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="671de-122"><see langword="true" /> if the object is equal to the remote object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteToString">
      <MemberSignature Language="C#" Value="public virtual string RemoteToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string RemoteToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractBase.RemoteToString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoteToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ RemoteToString();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.AddIn.Contract.IContract.RemoteToString</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="671de-123">원격 개체를 식별하는 문자열을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="671de-123">Gets a string that identifies a remote object.</span></span></summary>
        <returns><span data-ttu-id="671de-124">원격 개체를 식별하는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="671de-124">A string that identifies the remote object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Renewal">
      <MemberSignature Language="C#" Value="public TimeSpan Renewal (System.Runtime.Remoting.Lifetime.ILease lease);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TimeSpan Renewal(class System.Runtime.Remoting.Lifetime.ILease lease) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractBase.Renewal(System.Runtime.Remoting.Lifetime.ILease)" />
      <MemberSignature Language="VB.NET" Value="Public Function Renewal (lease As ILease) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TimeSpan Renewal(System::Runtime::Remoting::Lifetime::ILease ^ lease);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lease" Type="System.Runtime.Remoting.Lifetime.ILease" />
      </Parameters>
      <Docs>
        <param name="lease"><span data-ttu-id="671de-125">원격 수명 서비스에 사용되는 수명 임대 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="671de-125">The lifetime lease object that is used by the remoting lifetime service.</span></span></param>
        <summary><span data-ttu-id="671de-126">보증 클라이언트에게 지정된 개체의 임대를 갱신하도록 요청합니다.</span><span class="sxs-lookup"><span data-stu-id="671de-126">Requests a sponsoring client to renew the lease for the specified object.</span></span></summary>
        <returns><span data-ttu-id="671de-127">갱신된 임대입니다.</span><span class="sxs-lookup"><span data-stu-id="671de-127">The renewed lease.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="671de-128"><paramref name="lease" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="671de-128"><paramref name="lease" /> is <see langword="null" />.</span></span></exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="671de-129">직접 실행 호출자에 대 한 완전 신뢰 합니다.</span><span class="sxs-lookup"><span data-stu-id="671de-129">for full trust for the immediate caller.</span></span> <span data-ttu-id="671de-130">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="671de-130">This member cannot be used by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="RevokeLifetimeToken">
      <MemberSignature Language="C#" Value="public void RevokeLifetimeToken (int token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RevokeLifetimeToken(int32 token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractBase.RevokeLifetimeToken(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RevokeLifetimeToken (token As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RevokeLifetimeToken(int token);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.AddIn.Contract.IContract.RevokeLifetimeToken(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="token"><span data-ttu-id="671de-131">토큰 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="671de-131">The token number.</span></span></param>
        <summary><span data-ttu-id="671de-132">처리 중인 수명 토큰 목록에서 지정된 토큰을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="671de-132">Removes the specified token from the list of outstanding lifetime tokens.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="671de-133">이 메서드를 throw 하는 토큰 처리 중인 수명 토큰의 목록에 없는 경우는 <xref:System.InvalidOperationException>합니다.</span><span class="sxs-lookup"><span data-stu-id="671de-133">If the token is not in the list of outstanding lifetime tokens, this method throws an <xref:System.InvalidOperationException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="671de-134"><paramref name="token" />는 처리 중인 수명 토큰 목록에서 발견되지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="671de-134"><paramref name="token" /> is not found in the list of outstanding lifetime tokens.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>