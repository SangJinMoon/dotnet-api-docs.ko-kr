<Type Name="FrameworkElementAdapters" FullName="System.AddIn.Pipeline.FrameworkElementAdapters">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9d70e37e9b46c2e2fe503e9a1bdfe484e1e3d8f6" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37704775" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class FrameworkElementAdapters" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit FrameworkElementAdapters extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Pipeline.FrameworkElementAdapters" />
  <TypeSignature Language="VB.NET" Value="Public Class FrameworkElementAdapters" />
  <TypeSignature Language="C++ CLI" Value="public ref class FrameworkElementAdapters abstract sealed" />
  <TypeSignature Language="F#" Value="type FrameworkElementAdapters = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Presentation</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.AddIn.Pipeline.FrameworkElementAdapters" /> is used by Windows Presentation Foundation (WPF) add-ins to convert between a <see cref="T:System.Windows.FrameworkElement" /> and an <see cref="T:System.AddIn.Contract.INativeHandleContract" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
Windows Presentation Foundation (WPF) WPF Ui 응용 프로그램을 호스트와 추가 기능 간에 전달할 수 있도록.NET Framework 추가 기능에서 모델을 확장 합니다. WPF는 WPF Ui는 직접 전달할은 또는에서 간접적으로 파생 되어야 필요 <xref:System.Windows.FrameworkElement>합니다. 그러나 추가 기능과 호스트 응용 프로그램은 일반적으로 실행에 별도 응용 프로그램 도메인에서 결과적으로 구분 하 여 격리 경계입니다. 이 따라서.NET Framework 추가 기능 모델을 원격화 할 수는 격리 경계를 넘어 전달 되는 형식에 필요 합니다. 원격으로 사용 가능한 형식 중 하나를 따르는:  
  
-   <xref:System.Runtime.Serialization.ISerializable> 인터페이스를 구현합니다.  
  
-   에 <xref:System.SerializableAttribute> 특성을 적용 합니다.  
  
-   파생 되는 <xref:System.MarshalByRefObject> 클래스입니다.  
  
 <xref:System.Windows.FrameworkElement> 이 원격 및 추가 기능과 호스트 응용 프로그램 간의 격리 경계를 넘어 전달 되기 전에 원격으로 사용 가능한 형식으로 변환 해야 합니다. 이 목적을 위해 정적 호출 해야 <xref:System.AddIn.Pipeline.FrameworkElementAdapters.ViewToContractAdapter%2A> 변환할 메서드는 <xref:System.Windows.FrameworkElement> 의 원격 인스턴스에 <xref:System.AddIn.Contract.INativeHandleContract>합니다.  
  
 한 번의 <xref:System.AddIn.Contract.INativeHandleContract> 전달 되는 격리 경계를 넘어 호스트 응용 프로그램이 나 추가 기능에서 표시 될 수 있는 형식으로 변환 될 해야 합니다. 이 경우 정적 <xref:System.AddIn.Pipeline.FrameworkElementAdapters.ContractToViewAdapter%2A> 메서드를 호출로 변환 하는 <xref:System.AddIn.Contract.INativeHandleContract> 에 <xref:System.Windows.FrameworkElement>합니다.  
  
 WPF 추가 기능의 표시 자세한 [WPF 추가 기능 개요](~/docs/framework/wpf/app-development/wpf-add-ins-overview.md)합니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ContractToViewAdapter">
      <MemberSignature Language="C#" Value="public static System.Windows.FrameworkElement ContractToViewAdapter (System.AddIn.Contract.INativeHandleContract nativeHandleContract);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.FrameworkElement ContractToViewAdapter(class System.AddIn.Contract.INativeHandleContract nativeHandleContract) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.FrameworkElementAdapters.ContractToViewAdapter(System.AddIn.Contract.INativeHandleContract)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContractToViewAdapter (nativeHandleContract As INativeHandleContract) As FrameworkElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::FrameworkElement ^ ContractToViewAdapter(System::AddIn::Contract::INativeHandleContract ^ nativeHandleContract);" />
      <MemberSignature Language="F#" Value="static member ContractToViewAdapter : System.AddIn.Contract.INativeHandleContract -&gt; System.Windows.FrameworkElement" Usage="System.AddIn.Pipeline.FrameworkElementAdapters.ContractToViewAdapter nativeHandleContract" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Presentation</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.FrameworkElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nativeHandleContract" Type="System.AddIn.Contract.INativeHandleContract" />
      </Parameters>
      <Docs>
        <param name="nativeHandleContract">The <see cref="T:System.AddIn.Contract.INativeHandleContract" /> that was passed across the isolation boundary between the host application and the add-in.</param>
        <summary>Returns a <see cref="T:System.Windows.FrameworkElement" /> that has been converted from an <see cref="T:System.AddIn.Contract.INativeHandleContract" />.</summary>
        <returns>A <see cref="T:System.Windows.FrameworkElement" /> that will be displayed from either the host application or add-in, depending on the direction in which the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] is passed between the two.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.AddIn.Pipeline.FrameworkElementAdapters.ViewToContractAdapter(System.Windows.FrameworkElement)" />
      </Docs>
    </Member>
    <Member MemberName="ViewToContractAdapter">
      <MemberSignature Language="C#" Value="public static System.AddIn.Contract.INativeHandleContract ViewToContractAdapter (System.Windows.FrameworkElement root);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.AddIn.Contract.INativeHandleContract ViewToContractAdapter(class System.Windows.FrameworkElement root) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.FrameworkElementAdapters.ViewToContractAdapter(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ViewToContractAdapter (root As FrameworkElement) As INativeHandleContract" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::AddIn::Contract::INativeHandleContract ^ ViewToContractAdapter(System::Windows::FrameworkElement ^ root);" />
      <MemberSignature Language="F#" Value="static member ViewToContractAdapter : System.Windows.FrameworkElement -&gt; System.AddIn.Contract.INativeHandleContract" Usage="System.AddIn.Pipeline.FrameworkElementAdapters.ViewToContractAdapter root" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Presentation</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.INativeHandleContract</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="root" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="root">The <see cref="T:System.Windows.FrameworkElement" /> to be passed across the isolation boundary between the host application and the add-in.</param>
        <summary>Returns an <see cref="T:System.AddIn.Contract.INativeHandleContract" /> that has been converted from a <see cref="T:System.Windows.FrameworkElement" />.</summary>
        <returns>An <see cref="T:System.AddIn.Contract.INativeHandleContract" /> that is passed from either the host application or the add-in, depending on the direction in which the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] is passed between the two.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="root" /> is not the root element of a tree of elements.</exception>
        <altmember cref="M:System.AddIn.Pipeline.FrameworkElementAdapters.ContractToViewAdapter(System.AddIn.Contract.INativeHandleContract)" />
      </Docs>
    </Member>
  </Members>
</Type>