<Type Name="TaskExtensions" FullName="System.Threading.Tasks.TaskExtensions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e1dde85ae7c10af9a001c513d6bcae9abb382db4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30526957" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class TaskExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit TaskExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.TaskExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module TaskExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class TaskExtensions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>특정 유형의 <see cref="T:System.Threading.Tasks.Task" /> 인스턴스로 작업하기 위한 정적(Visual Basic의 경우 Shared) 메서드 집합을 제공합니다.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Unwrap">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task Unwrap (this System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt; task);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task Unwrap(class System.Threading.Tasks.Task`1&lt;class System.Threading.Tasks.Task&gt; task) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskExtensions.Unwrap(System.Threading.Tasks.Task{System.Threading.Tasks.Task})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task ^ Unwrap(System::Threading::Tasks::Task&lt;System::Threading::Tasks::Task ^&gt; ^ task);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="task" Type="System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="task">래핑을 해제할 <see langword="Task&lt;Task&gt;" />(C#) 또는 <see langword="Task (Of Task)" />(Visual Basic)입니다.</param>
        <summary>
          <see cref="T:System.Threading.Tasks.Task" />의 비동기 작업을 나타내는 프록시 <see cref="M:System.Threading.Tasks.TaskScheduler.TryExecuteTaskInline(System.Threading.Tasks.Task,System.Boolean)" />를 만듭니다.</summary>
        <returns>제공된 <see langword="System.Threading.Tasks.Task(Of Task)" />의 비동기 작업을 나타내는 작업입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 작업을 반환할 수 있게 되기를 유용는 <xref:System.Threading.Tasks.Task%601>이며 여기서은 내부 작업이 작업 외부의 일부분으로 수행 된 작업이 <xref:System.Threading.Tasks.Task%601>합니다. 그러나 이렇게는 `Task<Task>` (C#) 또는 `Task (Of Task)` (Visual Basic)를 신중 하 게와 처리 하지 않을 경우 동작이 발생할 수 있습니다 예기치 않은 합니다. Unwrap 작업의 전체 비동기 작업을 나타내는 프록시를 만들어이 문제를 해결 합니다.  
  
   
  
## Examples  
 다음 예제에서는 된 작업 래핑 취소 하는 방법을 보여 줍니다.  
  
 [!code-csharp[System.Threading.Tasks.TaskExtensions#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.taskextensions/cs/unwrap.cs#01)]
 [!code-vb[System.Threading.Tasks.TaskExtensions#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.taskextensions/vb/unwrap.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="task" /> 인수가 null인 경우 throw되는 예외입니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="Unwrap&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;TResult&gt; Unwrap&lt;TResult&gt; (this System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&lt;TResult&gt;&gt; task);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;!!TResult&gt; Unwrap&lt;TResult&gt;(class System.Threading.Tasks.Task`1&lt;class System.Threading.Tasks.Task`1&lt;!!TResult&gt;&gt; task) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskExtensions.Unwrap``1(System.Threading.Tasks.Task{System.Threading.Tasks.Task{``0}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Unwrap(Of TResult) (task As Task(Of Task(Of TResult))) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;TResult&gt; ^ Unwrap(System::Threading::Tasks::Task&lt;System::Threading::Tasks::Task&lt;TResult&gt; ^&gt; ^ task);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="task" Type="System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&lt;TResult&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">작업 결과의 형식입니다.</typeparam>
        <param name="task">래핑을 해제할 <see langword="Task&lt;Task&lt;T&gt;&gt;" />(C#) 또는 <see langword="Task (Of Task(Of T))" />(Visual Basic)입니다.</param>
        <summary>
          <see langword="Task&lt;Task&lt;T&gt;&gt;" />(C#) 또는 <see langword="Task (Of Task(Of T))" />(Visual Basic)의 비동기 작업을 나타내는 프록시 <see cref="T:System.Threading.Tasks.Task" />를 만듭니다.</summary>
        <returns>제공된 <see langword="Task&lt;Task&lt;T&gt;&gt;" />(C#) 또는 <see langword="Task (Of Task(Of T))" />(Visual Basic)의 비동기 작업을 나타내는 <see cref="T:System.Threading.Tasks.Task" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 반환할 수 있도록 유용는 <xref:System.Threading.Tasks.Task> 에서 <xref:System.Threading.Tasks.Task>여기서 내부 <xref:System.Threading.Tasks.Task> 외부의 일부분으로 수행 된 작업을 나타내는 <xref:System.Threading.Tasks.Task>합니다. 그러나 이렇게는 `Task<Task<T>>` (C#) 또는 `Task (Of Task(Of T))` (Visual Basic)를 신중 하 게와 처리 하지 않을 경우 동작이 발생할 수 있습니다 예기치 않은 합니다. Unwrap 프록시를 만들어이 문제를 해결 <xref:System.Threading.Tasks.Task%601> 의 경우 전체 비동기 작업을 나타내는 한 `Task<Task<T>>` (C#) 또는 `Task (Of Task(Of T))` (Visual Basic).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="task" /> 인수가 null인 경우 throw되는 예외입니다.</exception>
      </Docs>
    </Member>
  </Members>
</Type>