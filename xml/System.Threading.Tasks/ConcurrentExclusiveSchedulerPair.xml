<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ConcurrentExclusiveSchedulerPair.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5afcfc7ac1eae1efd503a91aafea0c71bc636287a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">afcfc7ac1eae1efd503a91aafea0c71bc636287a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair">
          <source>Provides task schedulers that coordinate to execute tasks while ensuring that concurrent tasks may run concurrently and exclusive tasks never do.</source>
          <target state="translated">동시 작업을 동시에 실행하고 전용 작업은 실행하지 않으면서 작업을 실행하도록 조정하는 작업 스케줄러를 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair">
          <source>The following example shows the use of the <ph id="ph1">&lt;xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair&gt;</ph> class.</source>
          <target state="translated">다음 예제에서는 사용을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair">
          <source>Readers run on the concurrent part of the scheduler.</source>
          <target state="translated">판독기에서 동시 부분의 스케줄러에서 실행합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair">
          <source>The writer runs on the exclusive part of the scheduler.</source>
          <target state="translated">작성기는 스케줄러 중 배타 부분이에서 실행 됩니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair">
          <source>This code example is part of a larger example provided for the <bpt id="p1">[</bpt>How to: Specify a Task Scheduler in a Dataflow Block<ept id="p1">](~/docs/standard/parallel-programming/how-to-specify-a-task-scheduler-in-a-dataflow-block.md)</ept> topic.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <bpt id="p1">[</bpt>하는 방법: 데이터 흐름 블록의 작업 스케줄러 지정<ept id="p1">](~/docs/standard/parallel-programming/how-to-specify-a-task-scheduler-in-a-dataflow-block.md)</ept> 항목입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor">
          <source>The following example shows the use of the <ph id="ph1">&lt;xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.%23ctor%2A&gt;</ph> constructor to create a new <ph id="ph2">&lt;xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair&gt;</ph> object.</source>
          <target state="translated">다음 예제에서는 사용을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.%23ctor%2A&gt;</ph> 생성자를 만들려면 새 <ph id="ph2">&lt;xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor">
          <source>This code example is part of a larger example provided for the <bpt id="p1">[</bpt>How to: Specify a Task Scheduler in a Dataflow Block<ept id="p1">](~/docs/standard/parallel-programming/how-to-specify-a-task-scheduler-in-a-dataflow-block.md)</ept> topic.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <bpt id="p1">[</bpt>하는 방법: 데이터 흐름 블록의 작업 스케줄러 지정<ept id="p1">](~/docs/standard/parallel-programming/how-to-specify-a-task-scheduler-in-a-dataflow-block.md)</ept> 항목입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler)">
          <source>The target scheduler on which this pair should execute.</source>
          <target state="translated">이 쌍을 실행해야 하는 대상 스케줄러입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair" /&gt;</ph> class that targets the specified scheduler.</source>
          <target state="translated">지정된 스케줄러를 대상으로 하는 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler,System.Int32)">
          <source>The target scheduler on which this pair should execute.</source>
          <target state="translated">이 쌍을 실행해야 하는 대상 스케줄러입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler,System.Int32)">
          <source>The maximum number of tasks to run concurrently.</source>
          <target state="translated">동시에 실행할 최대 작업 수입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair" /&gt;</ph> class that targets the specified scheduler with a maximum concurrency level.</source>
          <target state="translated">최대 동시성 수준을 사용하여 지정된 스케줄러를 대상으로 하는 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler,System.Int32,System.Int32)">
          <source>The target scheduler on which this pair should execute.</source>
          <target state="translated">이 쌍을 실행해야 하는 대상 스케줄러입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler,System.Int32,System.Int32)">
          <source>The maximum number of tasks to run concurrently.</source>
          <target state="translated">동시에 실행할 최대 작업 수입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler,System.Int32,System.Int32)">
          <source>The maximum number of tasks to process for each underlying scheduled task used by the pair.</source>
          <target state="translated">쌍으로 사용되는 예약된 각 내부 작업을 처리하는 최대 작업 수입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler,System.Int32,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair" /&gt;</ph> class that targets the specified scheduler with a maximum concurrency level and a maximum number of scheduled tasks that may be processed as a unit.</source>
          <target state="translated">최대 동시성 수준과 예약된 최대 작업 수(단위로 처리될 수도 있음)와 함께 지정한 스케줄러를 대상으로 하는 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair" /&gt;</ph> 클래스의 새 인스턴스를 초기화하고 보호 수준에 서명합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Complete">
          <source>Informs the scheduler pair that it should not accept any more tasks.</source>
          <target state="translated">스케줄러 쌍에게 추가 작업을 수락할 수 없음을 알립니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Complete">
          <source>Calling <ph id="ph1">&lt;xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Complete%2A&gt;</ph> is optional.</source>
          <target state="translated">호출 <ph id="ph1">&lt;xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Complete%2A&gt;</ph> 선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Complete">
          <source>It is necessary only if you're relying on the <ph id="ph1">&lt;xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Completion%2A&gt;</ph> property for notification that all processing has been completed.</source>
          <target state="translated">사용 하는 경우에 필요는 <ph id="ph1">&lt;xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Completion%2A&gt;</ph> 모든 처리가 완료 되었음을 나타내는 알림에 대 한 속성.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="P:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Completion">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> that will complete when the scheduler has completed processing.</source>
          <target state="translated">스케줄러가 처리를 완료하면 완료될 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Completion">
          <source>The asynchronous operation that will complete when the scheduler finishes processing.</source>
          <target state="translated">스케줄러 처리를 마칠 때 완료되는 비동기 작업입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="P:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ConcurrentScheduler">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.TaskScheduler" /&gt;</ph> that can be used to schedule tasks to this pair that may run concurrently with other tasks on this pair.</source>
          <target state="translated">이 쌍에서 다른 작업과 동시에 실행될 수 있는 이 쌍에 대한 작업을 예약하는 데 사용할 수 있는 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.TaskScheduler" /&gt;</ph>를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ConcurrentScheduler">
          <source>An object that can be used to schedule tasks concurrently.</source>
          <target state="translated">동시에 작업을 예약하는 데 사용할 수 있는 개체입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ConcurrentScheduler">
          <source>The following example shows the use of the <ph id="ph1">&lt;xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ConcurrentScheduler%2A&gt;</ph> property to run a reader.</source>
          <target state="translated">다음 예제에서는 사용을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ConcurrentScheduler%2A&gt;</ph> 판독기를 실행 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ConcurrentScheduler">
          <source>This code example is part of a larger example provided for the <bpt id="p1">[</bpt>How to: Specify a Task Scheduler in a Dataflow Block<ept id="p1">](~/docs/standard/parallel-programming/how-to-specify-a-task-scheduler-in-a-dataflow-block.md)</ept> topic.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <bpt id="p1">[</bpt>하는 방법: 데이터 흐름 블록의 작업 스케줄러 지정<ept id="p1">](~/docs/standard/parallel-programming/how-to-specify-a-task-scheduler-in-a-dataflow-block.md)</ept> 항목입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="P:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ExclusiveScheduler">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.TaskScheduler" /&gt;</ph> that can be used to schedule tasks to this pair that must run exclusively with regards to other tasks on this pair.</source>
          <target state="translated">이 쌍에서 다른 작업과 관련하여 단독으로 실행되어야 하는 이 쌍에 대한 작업을 예약하는 데 사용할 수 있는 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.TaskScheduler" /&gt;</ph>를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ExclusiveScheduler">
          <source>An object that can be used to schedule tasks that do not run concurrently with other tasks.</source>
          <target state="translated">다른 작업과 동시에 실행되지 않는 작업을 예약하는 데 사용할 수 있는 개체입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ExclusiveScheduler">
          <source>The following example shows the use of the <ph id="ph1">&lt;xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ExclusiveScheduler%2A&gt;</ph> property to run a writer.</source>
          <target state="translated">다음 예제에서는 사용을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ExclusiveScheduler%2A&gt;</ph> 작성기를 실행 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ExclusiveScheduler">
          <source>This code example is part of a larger example provided for the <bpt id="p1">[</bpt>How to: Specify a Task Scheduler in a Dataflow Block<ept id="p1">](~/docs/standard/parallel-programming/how-to-specify-a-task-scheduler-in-a-dataflow-block.md)</ept> topic.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <bpt id="p1">[</bpt>하는 방법: 데이터 흐름 블록의 작업 스케줄러 지정<ept id="p1">](~/docs/standard/parallel-programming/how-to-specify-a-task-scheduler-in-a-dataflow-block.md)</ept> 항목입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>