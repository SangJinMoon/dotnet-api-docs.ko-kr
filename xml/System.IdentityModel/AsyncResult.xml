<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AsyncResult.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac523d8860c780243a3a6d8738333fbea20284fb841.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">23d8860c780243a3a6d8738333fbea20284fb841</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.AsyncResult">
          <source>An abstract base class that implements the <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 인터페이스를 구현하는 추상 기본 클래스입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.AsyncResult">
          <source>Serves as a base class from which to derive <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> objects that can be used for common asynchronous programming scenarios.</source>
          <target state="translated">이 형식은 일반적인 비동기 프로그래밍 시나리오에 사용할 수 있는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 개체를 파생하는 기본 클래스의 역할을 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.AsyncResult">
          <source>For more information see the <ph id="ph1">&lt;xref:System.IAsyncResult?displayProperty=nameWithType&gt;</ph> interface.</source>
          <target state="translated">자세한 내용은 참조는 <ph id="ph1">&lt;xref:System.IAsyncResult?displayProperty=nameWithType&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.AsyncResult">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.TypedAsyncResult%601&gt;</ph> class derives from <ph id="ph2">&lt;xref:System.IdentityModel.AsyncResult&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.TypedAsyncResult%601&gt;</ph> 클래스는 <ph id="ph2">&lt;xref:System.IdentityModel.AsyncResult&gt;</ph>에서 파생됩니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.AsyncResult">
          <source>Called from constructors in derived classes to initialize the <ph id="ph1">&lt;see cref="T:System.IdentityModel.AsyncResult" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.AsyncResult" /&gt;</ph> 클래스를 초기화하기 위해 파생 클래스의 생성자에서 호출됩니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.AsyncResult.#ctor">
          <source>Called from constructors in derived classes to initialize an instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.AsyncResult" /&gt;</ph> class that does not have a callback delegate or  a state object.</source>
          <target state="translated">콜백 대리자 또는 상태 개체가 없는 <ph id="ph1">&lt;see cref="T:System.IdentityModel.AsyncResult" /&gt;</ph> 클래스의 인스턴스를 초기화하기 위해 파생 클래스의 생성자에서 호출됩니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.AsyncResult.#ctor(System.Object)">
          <source>A user-defined object that qualifies or contains information about an asynchronous operation.</source>
          <target state="translated">비동기 작업을 한정하거나 정보를 포함하는 사용자 정의 개체입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.AsyncResult.#ctor(System.Object)">
          <source>Called from constructors in derived classes to initialize an instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.AsyncResult" /&gt;</ph> class that does not have a callback delegate but does have  a state object.</source>
          <target state="translated">콜백 대리자가 없지만 상태 개체는 있는 <ph id="ph1">&lt;see cref="T:System.IdentityModel.AsyncResult" /&gt;</ph> 클래스의 인스턴스를 초기화하기 위해 파생 클래스의 생성자에서 호출됩니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.AsyncResult.#ctor(System.AsyncCallback,System.Object)">
          <source>The method to be called when the asynchronous operation completes.</source>
          <target state="translated">비동기 작업이 완료되면 호출될 메서드입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.AsyncResult.#ctor(System.AsyncCallback,System.Object)">
          <source>A user-defined object that qualifies or contains information about an asynchronous operation.</source>
          <target state="translated">비동기 작업을 한정하거나 정보를 포함하는 사용자 정의 개체입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.AsyncResult.#ctor(System.AsyncCallback,System.Object)">
          <source>Called from constructors in derived classes to initialize an instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.AsyncResult" /&gt;</ph> class that has a callback delegate and  a state object.</source>
          <target state="translated">콜백 대리자 및 상태 개체가 있는 <ph id="ph1">&lt;see cref="T:System.IdentityModel.AsyncResult" /&gt;</ph> 클래스의 인스턴스를 초기화하기 위해 파생 클래스의 생성자에서 호출됩니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.AsyncResult.AsyncState">
          <source>Gets a user-defined object that qualifies or contains information about an asynchronous operation.</source>
          <target state="translated">비동기 작업을 한정하거나 정보를 포함하는 사용자 정의 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.AsyncResult.AsyncState">
          <source>A user-defined object that qualifies or contains information about an asynchronous operation.</source>
          <target state="translated">비동기 작업을 한정하거나 정보를 포함하는 사용자 정의 개체입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.AsyncResult.AsyncState">
          <source>For more information see the <ph id="ph1">&lt;xref:System.IAsyncResult.AsyncState%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">자세한 내용은 참조는 <ph id="ph1">&lt;xref:System.IAsyncResult.AsyncState%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.AsyncResult.AsyncWaitHandle">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Threading.WaitHandle" /&gt;</ph> that is used to wait for an asynchronous operation to complete.</source>
          <target state="translated">비동기 작업이 완료될 때까지 기다리는 데 사용하는 <ph id="ph1">&lt;see cref="T:System.Threading.WaitHandle" /&gt;</ph>을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.AsyncResult.AsyncWaitHandle">
          <source>A <ph id="ph1">&lt;see cref="T:System.Threading.WaitHandle" /&gt;</ph> that is used to wait for an asynchronous operation to complete.</source>
          <target state="translated">비동기 작업이 완료될 때까지 기다리는 데 사용하는 <ph id="ph1">&lt;see cref="T:System.Threading.WaitHandle" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.AsyncResult.AsyncWaitHandle">
          <source>For more information see the <ph id="ph1">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">자세한 내용은 참조는 <ph id="ph1">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.AsyncResult">
          <source>Called to complete the asynchronous operation.</source>
          <target state="translated">비동기 작업을 완료하기 위해 호출됩니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.AsyncResult.Complete(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the asynchronous operation completed synchronously; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">비동기 작업이 동기적으로 끝나면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.AsyncResult.Complete(System.Boolean)">
          <source>Call this version of complete when your asynchronous operation is complete and no exception was encountered.</source>
          <target state="translated">비동기 작업이 완료되고 예외가 발생하지 않은 경우 완성된 이 버전을 호출합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.AsyncResult.Complete(System.Boolean)">
          <source>It updates the state of the operation and notifies the callback.</source>
          <target state="translated">작업 상태를 업데이트 하고 콜백을 알립니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.AsyncResult.Complete(System.Boolean,System.Exception)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the asynchronous operation completed synchronously; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">비동기 작업이 동기적으로 끝나면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.AsyncResult.Complete(System.Boolean,System.Exception)">
          <source>The exception that occurred during the processing of the asynchronous operation.</source>
          <target state="translated">비동기 작업을 처리하는 동안 발생한 예외입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.AsyncResult.Complete(System.Boolean,System.Exception)">
          <source>Call this version of complete if you raise an exception during processing.</source>
          <target state="translated">처리하는 동안 예외가 발생하는 경우 완성된 이 버전을 호출합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.AsyncResult.Complete(System.Boolean,System.Exception)">
          <source>In addition to notifying the callback, it captures the exception and stores it to be thrown during the call to the <ph id="ph1">&lt;see cref="M:System.IdentityModel.AsyncResult.End(System.IAsyncResult)" /&gt;</ph> method.</source>
          <target state="translated">콜백을 알리는 기능 외에 예외를 캡처하고 <ph id="ph1">&lt;see cref="M:System.IdentityModel.AsyncResult.End(System.IAsyncResult)" /&gt;</ph> 메서드를 호출하는 동안 예외를 throw하도록 저장합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.AsyncResult.CompletedSynchronously">
          <source>Gets a value that indicates whether the asynchronous operation completed synchronously.</source>
          <target state="translated">비동기 작업이 동기적으로 완료되었는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.AsyncResult.CompletedSynchronously">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the asynchronous operation completed synchronously; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">비동기 작업이 동기적으로 완료되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.AsyncResult.CompletedSynchronously">
          <source>For more information see the <ph id="ph1">&lt;xref:System.IAsyncResult.CompletedSynchronously%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">자세한 내용은 참조는 <ph id="ph1">&lt;xref:System.IAsyncResult.CompletedSynchronously%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.AsyncResult">
          <source>Releases the resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.AsyncResult" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.AsyncResult" /&gt;</ph> 클래스의 현재 인스턴스에서 사용하는 리소스를 해제합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.AsyncResult.Dispose">
          <source>Releases the resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.AsyncResult" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.AsyncResult" /&gt;</ph> 클래스의 현재 인스턴스에서 사용하는 리소스를 해제합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.AsyncResult.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">관리되는 리소스와 관리되지 않는 리소스를 해제하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 관리되지 않는 리소스만 해제하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.AsyncResult.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> indicates that this is an explicit call to Dispose.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>는 Dispose에 대한 명시적인 호출임을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.AsyncResult.Dispose(System.Boolean)">
          <source>Called by the <ph id="ph1">&lt;see cref="M:System.IdentityModel.AsyncResult.Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.IdentityModel.AsyncResult.Finalize" /&gt;</ph> methods to release the managed and unmanaged resources used by the current instance of the <ph id="ph3">&lt;see cref="T:System.IdentityModel.AsyncResult" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph3">&lt;see cref="T:System.IdentityModel.AsyncResult" /&gt;</ph> 클래스의 현재 인스턴스에서 사용하는 관리되는 리소스와 관리되지 않는 리소스를 해제하기 위해 <ph id="ph1">&lt;see cref="M:System.IdentityModel.AsyncResult.Dispose" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="M:System.IdentityModel.AsyncResult.Finalize" /&gt;</ph> 메서드에 의해 호출됩니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.AsyncResult.End(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> representing the status of the asynchronous operation.</source>
          <target state="translated">비동기 작업의 상태를 나타내는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.AsyncResult.End(System.IAsyncResult)">
          <source>Call this method when the <bpt id="p1">&lt;c&gt;</bpt>End<ept id="p1">&lt;/c&gt;</ept> function for the asynchronous operation is complete.</source>
          <target state="translated">비동기 작업에 대한 <bpt id="p1">&lt;c&gt;</bpt>End<ept id="p1">&lt;/c&gt;</ept> 함수가 완료될 때 이 메서드를 호출합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.AsyncResult.End(System.IAsyncResult)">
          <source>It ensures that the asynchronous operation is complete, and does some common validation.</source>
          <target state="translated">비동기 작업이 완료되었는지 확인하고 몇 가지 공통 유효성 검사를 수행합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.AsyncResult.Finalize">
          <source>Allows the <ph id="ph1">&lt;see cref="T:System.IdentityModel.AsyncResult" /&gt;</ph> object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</source>
          <target state="translated">가비지 수집에서 회수하기 전에 <ph id="ph1">&lt;see cref="T:System.IdentityModel.AsyncResult" /&gt;</ph> 개체에서 리소스를 해제하고 다른 정리 작업을 수행할 수 있게 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.AsyncResult.IsCompleted">
          <source>Gets a value that indicates whether the asynchronous operation has completed.</source>
          <target state="translated">비동기 작업이 완료되었는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.AsyncResult.IsCompleted">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the operation is complete; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">작업이 끝나면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>