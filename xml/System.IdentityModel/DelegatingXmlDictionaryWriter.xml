<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DelegatingXmlDictionaryWriter.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac57d1a54218c81dc24439a73bf89dbf4d2a8274180.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7d1a54218c81dc24439a73bf89dbf4d2a8274180</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.DelegatingXmlDictionaryWriter">
          <source>A class that wraps a specified writer and delegates all <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph> calls to the wrapped writer.</source>
          <target state="translated">지정된 작성기를 래핑하고 모든 <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph> 호출을 래핑된 작성기에 위임하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.DelegatingXmlDictionaryWriter">
          <source>The writer that is wrapped can be accessed through the <ph id="ph1">&lt;xref:System.IdentityModel.DelegatingXmlDictionaryWriter.InnerWriter%2A&gt;</ph> property.</source>
          <target state="translated">래핑된 기록기를 통해 액세스할 수는 <ph id="ph1">&lt;xref:System.IdentityModel.DelegatingXmlDictionaryWriter.InnerWriter%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.DelegatingXmlDictionaryWriter">
          <source>Call the <ph id="ph1">&lt;xref:System.IdentityModel.DelegatingXmlDictionaryWriter.InitializeInnerWriter%2A&gt;</ph> method to set the wrapped writer and initialize the property.</source>
          <target state="translated">호출의 <ph id="ph1">&lt;xref:System.IdentityModel.DelegatingXmlDictionaryWriter.InitializeInnerWriter%2A&gt;</ph> 메서드를 래핑된 기록기를 설정 하 고 속성을 초기화 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.DelegatingXmlDictionaryWriter">
          <source>You can call the <ph id="ph1">&lt;xref:System.IdentityModel.DelegatingXmlDictionaryWriter.InitializeTracingWriter%2A&gt;</ph> method to set an <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> to which non-canonical XML will be echoed.</source>
          <target state="translated">호출할 수 있습니다는 <ph id="ph1">&lt;xref:System.IdentityModel.DelegatingXmlDictionaryWriter.InitializeTracingWriter%2A&gt;</ph> 설정 하는 메서드는 <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> 정식이 아닌 XML에 반영 됩니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.DelegatingXmlDictionaryWriter" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.DelegatingXmlDictionaryWriter" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.DelegatingXmlDictionaryWriter.CanCanonicalize">
          <source>Returns a value indicating if the reader is capable of Canonicalization.</source>
          <target state="translated">판독기가 정규화할 수 있는지 여부를 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.DelegatingXmlDictionaryWriter.CanCanonicalize">
          <source>true if the reader is capable of Canonicalization; otherwise, false.</source>
          <target state="translated">판독기에서 정규화할 수 있으면 true이고, 그렇지 않으면 false입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.Close">
          <source>Closes the underlying stream.</source>
          <target state="translated">내부 스트림을 닫습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.EndCanonicalization">
          <source>Stops the canonicalization started by the matching <ph id="ph1">&lt;see cref="M:System.Xml.XmlDictionaryWriter.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])" /&gt;</ph> call.</source>
          <target state="translated">일치하는 <ph id="ph1">&lt;see cref="M:System.Xml.XmlDictionaryWriter.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])" /&gt;</ph> 호출에 의해 시작된 정형화를 중지합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.Flush">
          <source>Flushes the underlying stream.</source>
          <target state="translated">내부 스트림을 플러시합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.InitializeInnerWriter(System.Xml.XmlDictionaryWriter)">
          <source>The writer that is to be wrapped by this instance.</source>
          <target state="translated">이 인스턴스에서 래핑되는 작성기입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.InitializeInnerWriter(System.Xml.XmlDictionaryWriter)">
          <source>Initializes this instance with the specified inner writer.</source>
          <target state="translated">지정된 내부 작성기를 사용하여 이 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.InitializeInnerWriter(System.Xml.XmlDictionaryWriter)">
          <source>Sets the <ph id="ph1">&lt;xref:System.IdentityModel.DelegatingXmlDictionaryWriter.InnerWriter%2A&gt;</ph> property to the writer specified by the <ph id="ph2">`innerWriter`</ph> parameter.</source>
          <target state="translated">설정의 <ph id="ph1">&lt;xref:System.IdentityModel.DelegatingXmlDictionaryWriter.InnerWriter%2A&gt;</ph> 속성으로 지정 된 작성기에는 <ph id="ph2">`innerWriter`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.InitializeTracingWriter(System.Xml.XmlWriter)">
          <source>A writer to which all calls will be echoed.</source>
          <target state="translated">모든 호출이 표시될 작성기입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.InitializeTracingWriter(System.Xml.XmlWriter)">
          <source>If <ph id="ph1">&lt;see langword="null" /&gt;</ph>, calls are not echoed.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph>인 경우 호출이 전달되지 않습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.InitializeTracingWriter(System.Xml.XmlWriter)">
          <source>Initializes this instance with a writer to which all calls will be echoed and that will write non-canonical XML.</source>
          <target state="translated">이 인스턴스를 모든 호출이 전달되고 정식이 아닌 XML을 작성하는 작성기로 초기화합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.DelegatingXmlDictionaryWriter.InnerWriter">
          <source>Get the wrapped writer.</source>
          <target state="translated">래핑된 작성기를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.DelegatingXmlDictionaryWriter.InnerWriter">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.LookupPrefix(System.String)">
          <source>The namespace URI whose prefix you want to find.</source>
          <target state="translated">찾으려는 접두사를 가진 네임스페이스 URI입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.LookupPrefix(System.String)">
          <source>Returns the closest prefix defined in the current namespace scope for the namespace URI.</source>
          <target state="translated">네임스페이스 URI의 현재 네임스페이스 범위에 정의된 가장 비슷한 접두사를 반환합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.LookupPrefix(System.String)">
          <source>The matching prefix or null if no matching namespace URI is found in the current scope.</source>
          <target state="translated">현재 범위에 일치하는 네임스페이스 URI가 없는 경우 일치하는 접두사이거나 null입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])">
          <source>Stream to which the canonical stream should be written.</source>
          <target state="translated">정식 스트림을 기록해야 하는 스트림입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])">
          <source>The value indicates if comments written should be canonicalized as well.</source>
          <target state="translated">이 값은 기록된 주석도 정형화되어야 하는 경우를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])">
          <source>Set of prefixes that needs to be included into the canonical stream.</source>
          <target state="translated">정식 스트림에 포함해야 하는 접두사의 집합입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])">
          <source>The prefixes are defined at the first element that is written to the canonical stream.</source>
          <target state="translated">접두사는 정식 스트림에 기록된 첫 번째 요소에서 정의됩니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])">
          <source>Indicates the start of canonicalization.</source>
          <target state="translated">정형화의 시작을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])">
          <source>Any write operation following this will canonicalize the data          and will write it to the given stream.</source>
          <target state="translated">이를 따르는 쓰기 작업은 데이터를 정형화하고 제공된 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source>Byte array to encode.</source>
          <target state="translated">인코딩할 바이트 배열입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The position in the buffer indicating the start of the bytes to write.</source>
          <target state="translated">쓸 바이트의 시작을 나타내는 버퍼 내의 위치입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes to write.</source>
          <target state="translated">쓸 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source>Encodes the specified binary bytes as Base64 and writes out the resulting text.</source>
          <target state="translated">지정된 바이너리 바이트를 Base64로 인코딩하고 결과 텍스트를 작성합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteCData(System.String)">
          <source>The text to place inside the CDATA block.</source>
          <target state="translated">CDATA 블록 내부에 배치할 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteCData(System.String)">
          <source>writes out a CDATA block containing the specified text.</source>
          <target state="translated">지정된 텍스트를 포함하는 CDATA 블록을 작성합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteCharEntity(System.Char)">
          <source>The Unicode character for which to generate a character entity.</source>
          <target state="translated">문자 엔터티를 생성할 유니코드 문자입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteCharEntity(System.Char)">
          <source>Forces the generation of a character entity for the specified Unicode character value.</source>
          <target state="translated">지정된 유니코드 문자 값에 대한 문자 엔터티가 생성되도록 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source>Character array containing the text to write.</source>
          <target state="translated">쓸 텍스트가 포함된 문자 배열입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source>The position in the buffer indicating the start of the text to write.</source>
          <target state="translated">쓸 텍스트의 시작을 나타내는 버퍼 내의 위치입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters to write.</source>
          <target state="translated">쓸 문자 수입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source>When overridden in a derived class, writes text one buffer at a time.</source>
          <target state="translated">파생 클래스에서 재정의되면 한 번에 한 버퍼씩 텍스트를 작성합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteComment(System.String)">
          <source>Text to place inside the comment.</source>
          <target state="translated">주석 내에 배치할 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteComment(System.String)">
          <source>Writes out a comment containing the specified text.</source>
          <target state="translated">지정된 텍스트를 포함하는 주석을 작성합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>The name of the DOCTYPE.</source>
          <target state="translated">DOCTYPE의 이름입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>This must be non-empty.</source>
          <target state="translated">이 이름은 비어 있지 않아야 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>If non-null it also writes PUBLIC "pubid" "sysid" where pubid and sysid are replaced with the value of the given arguments.</source>
          <target state="translated">null이 아닌 경우 PUBLIC "pubid" "sysid"도 씁니다. 여기서 pubid와 sysid는 지정된 인수 값으로 바뀝니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>If pubid is null and sysid is non-null it writes SYSTEM "sysid" where sysid is replaced with the value of this argument.</source>
          <target state="translated">pubid가 null이고 sysid가 null이 아닌 경우 SYSTEM "sysid"를 씁니다. 여기서 sysid는 이 인수 값으로 바뀝니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>If non-null it writes [subset] where subset is replaced with the value of this argument.</source>
          <target state="translated">null이 아닌 경우 하위 집합이 이 인수 값으로 대체되는 [subset]을 작성합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>Writes the DOCTYPE declaration with the specified name and optional attributes.</source>
          <target state="translated">지정된 이름과 선택적 특성을 사용하여 DOCTYPE 선언을 작성합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteEndAttribute">
          <source>Closes the previous System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String) call.</source>
          <target state="translated">이전 System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String) 호출을 닫습니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteEndDocument">
          <source>Closes any open elements or attributes and puts the writer back in the Start state.</source>
          <target state="translated">열려 있는 모든 요소나 특성을 닫고 작성기를 시작 상태로 설정합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteEndElement">
          <source>Closes one element and pops the corresponding namespace scope.</source>
          <target state="translated">한 요소를 닫고 해당 네임스페이스 범위를 팝합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteEntityRef(System.String)">
          <source>The name of the entity reference.</source>
          <target state="translated">엔터티 참조의 이름입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteEntityRef(System.String)">
          <source>Writes out an entity reference as name.</source>
          <target state="translated">엔터티 참조를 이름으로 작성합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteFullEndElement">
          <source>Closes one element and pops the corresponding namespace scope.</source>
          <target state="translated">한 요소를 닫고 해당 네임스페이스 범위를 팝합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteProcessingInstruction(System.String,System.String)">
          <source>The name of the processing instruction.</source>
          <target state="translated">처리 명령의 이름입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteProcessingInstruction(System.String,System.String)">
          <source>The text to include in the processing instruction.</source>
          <target state="translated">처리 명령에 포함할 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteProcessingInstruction(System.String,System.String)">
          <source>Writes out a processing instruction with a space between the name and text as follows: <ph id="ph1">&amp;amp;</ph>lt;?name text?<ph id="ph2">&amp;amp;</ph>gt;.</source>
          <target state="translated">이름과 텍스트 사이의 공백을 사용하여 처리 명령을 작성합니다(예: <ph id="ph1">&amp;amp;</ph>lt;?name text?<ph id="ph2">&amp;amp;</ph>gt;).</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteRaw(System.String)">
          <source>String containing the text to write.</source>
          <target state="translated">작성할 텍스트를 포함하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteRaw(System.String)">
          <source>Writes raw markup manually from a string.</source>
          <target state="translated">문자열에서 직접 원시 태그를 작성합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
          <source>Character array containing the text to write.</source>
          <target state="translated">쓸 텍스트가 포함된 문자 배열입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
          <source>The position within the buffer indicating the start of the text to write.</source>
          <target state="translated">쓸 텍스트의 시작을 나타내는 버퍼 내의 위치입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters to write.</source>
          <target state="translated">쓸 문자 수입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
          <source>When overridden in a derived class, writes raw markup manually from a character buffer.</source>
          <target state="translated">파생 클래스에서 재정의되면 문자 버퍼에서 원시 태그를 직접 작성합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteStartAttribute(System.String,System.String,System.String)">
          <source>The namespace prefix of the attribute.</source>
          <target state="translated">특성의 네임스페이스 접두사입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteStartAttribute(System.String,System.String,System.String)">
          <source>The local name of the attribute.</source>
          <target state="translated">특성의 로컬 이름입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteStartAttribute(System.String,System.String,System.String)">
          <source>The namespace URI for the attribute.</source>
          <target state="translated">특성의 네임스페이스 URI입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteStartAttribute(System.String,System.String,System.String)">
          <source>Writes the start of an attribute with the specified local name and namespace URI.</source>
          <target state="translated">지정된 로컬 이름과 네임스페이스 URI를 사용하여 특성의 시작 부분을 작성합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteStartDocument">
          <source>When overridden in a derived class, writes the XML declaration with the version "1.0".</source>
          <target state="translated">파생 클래스에서 재정의되면 버전이 "1.0"인 XML 선언을 작성합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteStartDocument(System.Boolean)">
          <source>If true, it writes "standalone=yes"; if false, it writes "standalone=no".</source>
          <target state="translated">true이면 "standalone=yes"로 작성하고, false이면 "standalone=no"로 작성합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteStartDocument(System.Boolean)">
          <source>When overridden in a derived class, writes the XML declaration with the version "1.0" and the standalone attribute.</source>
          <target state="translated">파생 클래스에서 재정의되면 버전이 "1.0"이고 독립형 특성이 포함된 XML 선언을 작성합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteStartElement(System.String,System.String,System.String)">
          <source>The namespace prefix of the element.</source>
          <target state="translated">요소의 네임스페이스 접두사입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteStartElement(System.String,System.String,System.String)">
          <source>The local name of the element.</source>
          <target state="translated">요소의 로컬 이름입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteStartElement(System.String,System.String,System.String)">
          <source>The namespace URI to associate with the element.</source>
          <target state="translated">요소와 연결할 네임스페이스 URI입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteStartElement(System.String,System.String,System.String)">
          <source>When overridden in a derived class, writes the specified start tag and associates it with the given namespace and prefix.</source>
          <target state="translated">파생 클래스에서 재정의되면 지정된 시작 태그를 작성하고 지정된 네임스페이스 및 접두사에 연결합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteState">
          <source>When overridden in a derived class, gets the state of the writer.</source>
          <target state="translated">파생 클래스에서 재정의되면 작성기의 상태를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteState">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Xml.WriteState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.WriteState" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteString(System.String)">
          <source>The text to write.</source>
          <target state="translated">쓸 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteString(System.String)">
          <source>Writes the given text content.</source>
          <target state="translated">주어진 텍스트 콘텐츠를 작성합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>The low surrogate.</source>
          <target state="translated">하위 서로게이트입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>This must be a value between 0xDC00 and 0xDFFF.</source>
          <target state="translated">이 값은 0xDC00에서 0xDFFF 사이에 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>The high surrogate.</source>
          <target state="translated">상위 서로게이트입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>This must be a value between 0xD800 and 0xDBFF.</source>
          <target state="translated">이 값은 0xD800에서 0xDBFF 사이에 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>Generates and writes the surrogate character entity for the surrogate character pair.</source>
          <target state="translated">서로게이트 문자 쌍에 대한 서로게이트 문자 엔터티를 생성하고 작성합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteWhitespace(System.String)">
          <source>The string of white space characters.</source>
          <target state="translated">공백 문자의 문자열입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteWhitespace(System.String)">
          <source>Writes out the given white space.</source>
          <target state="translated">주어진 공백을 작성합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteXmlAttribute(System.String,System.String)">
          <source>Localname of the attribute.</source>
          <target state="translated">특성의 Localname입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteXmlAttribute(System.String,System.String)">
          <source>Attribute value.</source>
          <target state="translated">특성 값입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteXmlAttribute(System.String,System.String)">
          <source>Writes an attribute as a xml attribute with the prefix 'xml:'.</source>
          <target state="translated">특성을 접두사가 'xml:'인 xml 특성을 씁니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteXmlnsAttribute(System.String,System.String)">
          <source>The prefix of the namespace declaration.</source>
          <target state="translated">네임스페이스 선언의 접두사입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteXmlnsAttribute(System.String,System.String)">
          <source>The namespace Uri itself.</source>
          <target state="translated">네임스페이스 URI 자체입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteXmlnsAttribute(System.String,System.String)">
          <source>Writes an xmlns namespace declaration.</source>
          <target state="translated">xmlns 네임스페이스 선언을 씁니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>