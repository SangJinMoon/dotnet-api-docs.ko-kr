<Type Name="EnvelopedSignatureWriter" FullName="System.IdentityModel.EnvelopedSignatureWriter">
  <TypeSignature Language="C#" Value="public sealed class EnvelopedSignatureWriter : System.IdentityModel.DelegatingXmlDictionaryWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EnvelopedSignatureWriter extends System.IdentityModel.DelegatingXmlDictionaryWriter" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.EnvelopedSignatureWriter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EnvelopedSignatureWriter&#xA;Inherits DelegatingXmlDictionaryWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class EnvelopedSignatureWriter sealed : System::IdentityModel::DelegatingXmlDictionaryWriter" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.DelegatingXmlDictionaryWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="7451f-101">작성기를 래핑하고 봉투를 완전히 기록된 때 서명을 자동으로 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="7451f-101">Wraps a writer and generates a signature automatically when the envelope has been completely written.</span></span> <span data-ttu-id="7451f-102">이 클래스는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="7451f-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7451f-103">기본적으로 생성 된 서명은 봉투에서 마지막 요소로 삽입 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7451f-103">By default the generated signature is inserted as the last element in the envelope.</span></span> <span data-ttu-id="7451f-104">이 명시적으로 호출 하 여 수정할 수 있습니다는 <xref:System.IdentityModel.EnvelopedSignatureWriter.WriteSignature%2A> 메서드 시그니처를 삽입할 봉투 내 위치를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="7451f-104">This can be modified by explicitly calling the <xref:System.IdentityModel.EnvelopedSignatureWriter.WriteSignature%2A> method to indicate the location inside the envelope where the signature should be inserted.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EnvelopedSignatureWriter (System.Xml.XmlWriter innerWriter, System.IdentityModel.Tokens.SigningCredentials signingCredentials, string referenceId, System.IdentityModel.Selectors.SecurityTokenSerializer securityTokenSerializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlWriter innerWriter, class System.IdentityModel.Tokens.SigningCredentials signingCredentials, string referenceId, class System.IdentityModel.Selectors.SecurityTokenSerializer securityTokenSerializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.EnvelopedSignatureWriter.#ctor(System.Xml.XmlWriter,System.IdentityModel.Tokens.SigningCredentials,System.String,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EnvelopedSignatureWriter(System::Xml::XmlWriter ^ innerWriter, System::IdentityModel::Tokens::SigningCredentials ^ signingCredentials, System::String ^ referenceId, System::IdentityModel::Selectors::SecurityTokenSerializer ^ securityTokenSerializer);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="innerWriter" Type="System.Xml.XmlWriter" />
        <Parameter Name="signingCredentials" Type="System.IdentityModel.Tokens.SigningCredentials" />
        <Parameter Name="referenceId" Type="System.String" />
        <Parameter Name="securityTokenSerializer" Type="System.IdentityModel.Selectors.SecurityTokenSerializer" />
      </Parameters>
      <Docs>
        <param name="innerWriter"><span data-ttu-id="7451f-105">래핑할 기록기입니다.</span><span class="sxs-lookup"><span data-stu-id="7451f-105">The writer to wrap.</span></span></param>
        <param name="signingCredentials"><span data-ttu-id="7451f-106">서명을 생성하는 데 사용되는 서명 자격 증명입니다.</span><span class="sxs-lookup"><span data-stu-id="7451f-106">The signing credentials to be used to generate the signature.</span></span></param>
        <param name="referenceId"><span data-ttu-id="7451f-107">엔벌로프의 참조 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="7451f-107">The reference ID of the envelope.</span></span></param>
        <param name="securityTokenSerializer"><span data-ttu-id="7451f-108">시그니처 KeyInfo를 serialize하는 데 사용할 토큰 serializer입니다.</span><span class="sxs-lookup"><span data-stu-id="7451f-108">The token serializer to use to serialize the signature KeyInfo.</span></span></param>
        <summary><span data-ttu-id="7451f-109"><see cref="T:System.IdentityModel.EnvelopedSignatureWriter" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="7451f-109">Initializes a new instance of the <see cref="T:System.IdentityModel.EnvelopedSignatureWriter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7451f-110"><paramref name="referenceId" />가 <see langword="null" />이거나 비어 있는 경우</span><span class="sxs-lookup"><span data-stu-id="7451f-110"><paramref name="referenceId" /> is <see langword="null" /> or empty.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7451f-111"><paramref name="innerWriter" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="7451f-111"><paramref name="innerWriter" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="7451f-112">또는</span><span class="sxs-lookup"><span data-stu-id="7451f-112">-or-</span></span>  
  
 <span data-ttu-id="7451f-113"><paramref name="signingCredentials" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="7451f-113"><paramref name="signingCredentials" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="7451f-114">또는</span><span class="sxs-lookup"><span data-stu-id="7451f-114">-or-</span></span>  
  
 <span data-ttu-id="7451f-115"><paramref name="securityTokenSerializer" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="7451f-115"><paramref name="securityTokenSerializer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.EnvelopedSignatureWriter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEndElement">
      <MemberSignature Language="C#" Value="public override void WriteEndElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.EnvelopedSignatureWriter.WriteEndElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndElement ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndElement();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7451f-116">한 요소를 닫고 해당 네임스페이스 범위를 팝합니다.</span><span class="sxs-lookup"><span data-stu-id="7451f-116">Closes one element and pops the corresponding namespace scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7451f-117">봉투의 마지막 요소를 기록할 때 서명 봉투를 통해 자동으로 계산 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7451f-117">When the last element of the envelope is written, the signature is automatically computed over the envelope.</span></span> <span data-ttu-id="7451f-118">경우는 <xref:System.IdentityModel.EnvelopedSignatureWriter.WriteSignature%2A> 메서드가 명시적으로 호출, 서명을 봉투 내 적절 한 위치에 삽입 되지 않았으면, 봉투의 끝에 삽입 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7451f-118">If the <xref:System.IdentityModel.EnvelopedSignatureWriter.WriteSignature%2A> method was explicitly called, the signature is inserted at the appropriate position inside the envelope; otherwise, it is inserted at the end of the envelope.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteFullEndElement">
      <MemberSignature Language="C#" Value="public override void WriteFullEndElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteFullEndElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.EnvelopedSignatureWriter.WriteFullEndElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteFullEndElement ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteFullEndElement();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7451f-119">한 요소를 닫고 해당 네임스페이스 범위를 팝합니다.</span><span class="sxs-lookup"><span data-stu-id="7451f-119">Closes one element and pops the corresponding namespace scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7451f-120">봉투의 마지막 요소를 기록할 때 서명 봉투를 통해 자동으로 계산 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7451f-120">When the last element of the envelope is written, the signature is automatically computed over the envelope.</span></span> <span data-ttu-id="7451f-121">경우는 <xref:System.IdentityModel.EnvelopedSignatureWriter.WriteSignature%2A> 메서드가 명시적으로 호출, 서명을 봉투 내 적절 한 위치에 삽입 되지 않았으면, 봉투의 끝에 삽입 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7451f-121">If the <xref:System.IdentityModel.EnvelopedSignatureWriter.WriteSignature%2A> method was explicitly called, the signature is inserted at the appropriate position inside the envelope; otherwise, it is inserted at the end of the envelope.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteSignature">
      <MemberSignature Language="C#" Value="public void WriteSignature ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteSignature() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.EnvelopedSignatureWriter.WriteSignature" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteSignature ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteSignature();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7451f-122">봉투 내에서 서명의 위치를 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="7451f-122">Sets the position of the signature within the envelope.</span></span> <span data-ttu-id="7451f-123">서명을 삽입해야 하는 지점을 나타내도록 봉투를 작성하는 동안 이 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="7451f-123">Call this method while writing the envelope to indicate at which point the signature should be inserted.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.IdentityModel.EnvelopedSignatureWriter.WriteEndElement" />
        <altmember cref="M:System.IdentityModel.EnvelopedSignatureWriter.WriteFullEndElement" />
      </Docs>
    </Member>
    <Member MemberName="WriteStartElement">
      <MemberSignature Language="C#" Value="public override void WriteStartElement (string prefix, string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartElement(string prefix, string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.EnvelopedSignatureWriter.WriteStartElement(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartElement (prefix As String, localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartElement(System::String ^ prefix, System::String ^ localName, System::String ^ ns);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="7451f-124">요소의 네임스페이스 접두사입니다.</span><span class="sxs-lookup"><span data-stu-id="7451f-124">The namespace prefix of the element.</span></span></param>
        <param name="localName"><span data-ttu-id="7451f-125">요소의 로컬 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7451f-125">The local name of the element.</span></span> <span data-ttu-id="7451f-126">(접두사 없는 요소의 이름입니다.)</span><span class="sxs-lookup"><span data-stu-id="7451f-126">(The name of the element without the prefix.)</span></span></param>
        <param name="ns"><span data-ttu-id="7451f-127">요소와 연결할 네임스페이스 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="7451f-127">The namespace URI to associate with the element.</span></span></param>
        <summary><span data-ttu-id="7451f-128">지정된 시작 태그를 작성하고 주어진 네임스페이스와 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="7451f-128">Writes the specified start tag and associates it with the specified namespace.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>