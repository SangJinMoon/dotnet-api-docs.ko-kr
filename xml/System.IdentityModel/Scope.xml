<Type Name="Scope" FullName="System.IdentityModel.Scope">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2c3acf2d186bc00e7836e44ff85edcb61965ed26" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="36556001" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Scope" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Scope extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Scope" />
  <TypeSignature Language="VB.NET" Value="Public Class Scope" />
  <TypeSignature Language="C++ CLI" Value="public ref class Scope" />
  <TypeSignature Language="F#" Value="type Scope = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="71a26-101">토큰 발급 요청에 대한 구성을 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="71a26-101">Represents the configuration for the token issuance request.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a26-102"><xref:System.IdentityModel.Scope> 클래스는 보안 토큰 요청 (RST)와 연결 된 신뢰 당사자 (RP)에 대 한 정보를 캡슐화 합니다.</span><span class="sxs-lookup"><span data-stu-id="71a26-102">The <xref:System.IdentityModel.Scope> class encapsulates information about the relying party (RP) associated with a security token request (RST).</span></span> <span data-ttu-id="71a26-103">구현에서이 정보를 사용 합니다 <xref:System.IdentityModel.SecurityTokenService> 보안 토큰 요청 (RST)에 응답 (RSTR)을 반환 하는 토큰 발급 파이프라인에 클래스 (STS).</span><span class="sxs-lookup"><span data-stu-id="71a26-103">This information is used by implementations of the <xref:System.IdentityModel.SecurityTokenService> class (STS) in the token issuance pipeline to return a response (RSTR) to a security token request (RST).</span></span>  
  
 <span data-ttu-id="71a26-104"><xref:System.IdentityModel.Scope> RP, 암호화 및 서명 자격 증명 발급 된 보안 토큰을 사용 하는 주소에 대 한 정보를 포함 하는 개체, 그리고 토큰 토큰 자체 또는 대칭 키를 사용 하 여 실행 여부를 암호화 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="71a26-104"><xref:System.IdentityModel.Scope> objects contain information about the address of the RP, the encrypting and signing credentials to be used with the issued security token, and whether the token itself or symmetric keys issued with the token should be encrypted.</span></span> <span data-ttu-id="71a26-105">기본적으로 토큰 및 대칭 키는 모두 암호화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="71a26-105">By default, both the token and symmetric keys are encrypted.</span></span> <span data-ttu-id="71a26-106">하지만 확장할 수 있습니다는 <xref:System.IdentityModel.Scope> RP에 동의한 사용자는 토큰 형식과 같은 요청에 대 한 추가 정보를 전달 하는 클래스 기본 토큰 수명, 최대 토큰 수명, RP에 사용 되는 알고리즘 모음 및 정보에 캡슐화; 등 이 클래스는 개별 요청에 대 한 다르지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="71a26-106">You can extend the <xref:System.IdentityModel.Scope> class to carry additional information about the request, such as token types accepted by the RP, default token lifetime, maximum token lifetime, algorithm suites used by the RP, and so on; however, the information encapsulated in this class should not vary for individual requests.</span></span>  
  
 <span data-ttu-id="71a26-107">토큰 발급 파이프라인에서 구현 되는 <xref:System.IdentityModel.SecurityTokenService.Issue%2A> 메서드와이 메서드를 호출 하는 <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> RST에 대 한 구성을 가져오기 위한 메서드를 합니다.</span><span class="sxs-lookup"><span data-stu-id="71a26-107">The token issuance pipeline is implemented in the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method and this method invokes the <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> method to get the configuration for the RST.</span></span> <span data-ttu-id="71a26-108">구현 해야 합니다는 <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> 사용자 지정 STS 및 반환 메서드를 <xref:System.IdentityModel.Scope> RP 및 STS 구현에 대 한 적절 한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="71a26-108">You must implement a <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> method in your custom STS and return a <xref:System.IdentityModel.Scope> object appropriate for the RP and your STS implementation.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="71a26-109">
            <see cref="T:System.IdentityModel.Scope" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a26-109">Initializes a new instance of the <see cref="T:System.IdentityModel.Scope" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Scope ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Scope.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Scope();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="71a26-110">
            <see cref="T:System.IdentityModel.Scope" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a26-110">Initializes a new instance of the <see cref="T:System.IdentityModel.Scope" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a26-111">다음 표에서 초기 속성 값을 새 <xref:System.IdentityModel.Scope> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="71a26-111">The following table shows the initial property values for the new <xref:System.IdentityModel.Scope> instance.</span></span>  
  
|<span data-ttu-id="71a26-112">속성</span><span class="sxs-lookup"><span data-stu-id="71a26-112">Property</span></span>|<span data-ttu-id="71a26-113">값입니다.</span><span class="sxs-lookup"><span data-stu-id="71a26-113">Value.</span></span>|  
|--------------|------------|  
|<xref:System.IdentityModel.Scope.AppliesToAddress%2A>|<span data-ttu-id="71a26-114">`null` .</span><span class="sxs-lookup"><span data-stu-id="71a26-114">`null` .</span></span>|  
|<xref:System.IdentityModel.Scope.EncryptingCredentials%2A>|<span data-ttu-id="71a26-115">`null`.</span><span class="sxs-lookup"><span data-stu-id="71a26-115">`null`.</span></span>|  
|<xref:System.IdentityModel.Scope.Properties%2A>|<span data-ttu-id="71a26-116">빈 사전입니다.</span><span class="sxs-lookup"><span data-stu-id="71a26-116">An empty dictionary.</span></span>|  
|<xref:System.IdentityModel.Scope.ReplyToAddress%2A>|<span data-ttu-id="71a26-117">`null`.</span><span class="sxs-lookup"><span data-stu-id="71a26-117">`null`.</span></span>|  
|<xref:System.IdentityModel.Scope.SigningCredentials%2A>|<span data-ttu-id="71a26-118">`null`.</span><span class="sxs-lookup"><span data-stu-id="71a26-118">`null`.</span></span>|  
|<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>|<span data-ttu-id="71a26-119">`true`.</span><span class="sxs-lookup"><span data-stu-id="71a26-119">`true`.</span></span>|  
|<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>|<span data-ttu-id="71a26-120">`true`.</span><span class="sxs-lookup"><span data-stu-id="71a26-120">`true`.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Scope (string appliesToAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string appliesToAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Scope.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (appliesToAddress As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Scope(System::String ^ appliesToAddress);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Scope : string -&gt; System.IdentityModel.Scope" Usage="new System.IdentityModel.Scope appliesToAddress" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="appliesToAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="appliesToAddress">
          <span data-ttu-id="71a26-121">신뢰 당사자의 appliesTo 주소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a26-121">The appliesTo address of the relying party.</span>
          </span>
          <span data-ttu-id="71a26-122">일반적으로 URI입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a26-122">This is typically a URI.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71a26-123">지정된 appliesTo 주소를 사용하여 <see cref="T:System.IdentityModel.Scope" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a26-123">Initializes a new instance of the <see cref="T:System.IdentityModel.Scope" /> class with the specified appliesTo address.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a26-124">다음 표에서 초기 속성 값을 새 <xref:System.IdentityModel.Scope> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="71a26-124">The following table shows the initial property values for the new <xref:System.IdentityModel.Scope> instance.</span></span>  
  
|<span data-ttu-id="71a26-125">속성</span><span class="sxs-lookup"><span data-stu-id="71a26-125">Property</span></span>|<span data-ttu-id="71a26-126">값입니다.</span><span class="sxs-lookup"><span data-stu-id="71a26-126">Value.</span></span>|  
|--------------|------------|  
|<xref:System.IdentityModel.Scope.AppliesToAddress%2A>|<span data-ttu-id="71a26-127">`appliesToAddress` 매개 변수의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="71a26-127">The value of the `appliesToAddress` parameter.</span></span>|  
|<xref:System.IdentityModel.Scope.EncryptingCredentials%2A>|<span data-ttu-id="71a26-128">`null`.</span><span class="sxs-lookup"><span data-stu-id="71a26-128">`null`.</span></span>|  
|<xref:System.IdentityModel.Scope.Properties%2A>|<span data-ttu-id="71a26-129">빈 사전입니다.</span><span class="sxs-lookup"><span data-stu-id="71a26-129">An empty dictionary.</span></span>|  
|<xref:System.IdentityModel.Scope.ReplyToAddress%2A>|<span data-ttu-id="71a26-130">`null`.</span><span class="sxs-lookup"><span data-stu-id="71a26-130">`null`.</span></span>|  
|<xref:System.IdentityModel.Scope.SigningCredentials%2A>|<span data-ttu-id="71a26-131">`null`.</span><span class="sxs-lookup"><span data-stu-id="71a26-131">`null`.</span></span>|  
|<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>|<span data-ttu-id="71a26-132">`true`.</span><span class="sxs-lookup"><span data-stu-id="71a26-132">`true`.</span></span>|  
|<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>|<span data-ttu-id="71a26-133">`true`.</span><span class="sxs-lookup"><span data-stu-id="71a26-133">`true`.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Scope (string appliesToAddress, System.IdentityModel.Tokens.EncryptingCredentials encryptingCredentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string appliesToAddress, class System.IdentityModel.Tokens.EncryptingCredentials encryptingCredentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.EncryptingCredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Scope(System::String ^ appliesToAddress, System::IdentityModel::Tokens::EncryptingCredentials ^ encryptingCredentials);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Scope : string * System.IdentityModel.Tokens.EncryptingCredentials -&gt; System.IdentityModel.Scope" Usage="new System.IdentityModel.Scope (appliesToAddress, encryptingCredentials)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="appliesToAddress" Type="System.String" />
        <Parameter Name="encryptingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
      </Parameters>
      <Docs>
        <param name="appliesToAddress">
          <span data-ttu-id="71a26-134">신뢰 당사자의 appliesTo 주소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a26-134">The appliesTo address of the relying party.</span>
          </span>
          <span data-ttu-id="71a26-135">일반적으로 URI입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a26-135">This is typically a URI.</span>
          </span>
        </param>
        <param name="encryptingCredentials">
          <span data-ttu-id="71a26-136">신뢰 당사자에 대한 암호화 자격 증명입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a26-136">The encrypting credentials for the relying party.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71a26-137">지정된 appliesTo 주소와 암호화 자격 증명을 사용하여 <see cref="T:System.IdentityModel.Scope" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a26-137">Initializes a new instance of the <see cref="T:System.IdentityModel.Scope" /> class with the specified appliesTo address and encrypting credentials.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a26-138">다음 표에서 초기 속성 값을 새 <xref:System.IdentityModel.Scope> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="71a26-138">The following table shows the initial property values for the new <xref:System.IdentityModel.Scope> instance.</span></span>  
  
|<span data-ttu-id="71a26-139">속성</span><span class="sxs-lookup"><span data-stu-id="71a26-139">Property</span></span>|<span data-ttu-id="71a26-140">값입니다.</span><span class="sxs-lookup"><span data-stu-id="71a26-140">Value.</span></span>|  
|--------------|------------|  
|<xref:System.IdentityModel.Scope.AppliesToAddress%2A>|<span data-ttu-id="71a26-141">`appliesToAddress` 매개 변수의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="71a26-141">The value of the `appliesToAddress` parameter.</span></span>|  
|<xref:System.IdentityModel.Scope.EncryptingCredentials%2A>|<span data-ttu-id="71a26-142">`null`.</span><span class="sxs-lookup"><span data-stu-id="71a26-142">`null`.</span></span>|  
|<xref:System.IdentityModel.Scope.Properties%2A>|<span data-ttu-id="71a26-143">빈 사전입니다.</span><span class="sxs-lookup"><span data-stu-id="71a26-143">An empty dictionary.</span></span>|  
|<xref:System.IdentityModel.Scope.ReplyToAddress%2A>|<span data-ttu-id="71a26-144">`null`.</span><span class="sxs-lookup"><span data-stu-id="71a26-144">`null`.</span></span>|  
|<xref:System.IdentityModel.Scope.SigningCredentials%2A>|<span data-ttu-id="71a26-145">`signingCredentials` 매개 변수의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="71a26-145">The value of the `signingCredentials` parameter.</span></span>|  
|<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>|<span data-ttu-id="71a26-146">`true`.</span><span class="sxs-lookup"><span data-stu-id="71a26-146">`true`.</span></span>|  
|<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>|<span data-ttu-id="71a26-147">`true`.</span><span class="sxs-lookup"><span data-stu-id="71a26-147">`true`.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Scope (string appliesToAddress, System.IdentityModel.Tokens.SigningCredentials signingCredentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string appliesToAddress, class System.IdentityModel.Tokens.SigningCredentials signingCredentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.SigningCredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Scope(System::String ^ appliesToAddress, System::IdentityModel::Tokens::SigningCredentials ^ signingCredentials);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Scope : string * System.IdentityModel.Tokens.SigningCredentials -&gt; System.IdentityModel.Scope" Usage="new System.IdentityModel.Scope (appliesToAddress, signingCredentials)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="appliesToAddress" Type="System.String" />
        <Parameter Name="signingCredentials" Type="System.IdentityModel.Tokens.SigningCredentials" />
      </Parameters>
      <Docs>
        <param name="appliesToAddress">
          <span data-ttu-id="71a26-148">신뢰 당사자의 appliesTo 주소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a26-148">The appliesTo address of the relying party.</span>
          </span>
          <span data-ttu-id="71a26-149">일반적으로 URI입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a26-149">This is typically a URI.</span>
          </span>
        </param>
        <param name="signingCredentials">
          <span data-ttu-id="71a26-150">신뢰 당사자에 대한 서명 자격 증명입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a26-150">The signing credentials for the relying party.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71a26-151">지정된 appliesTo 주소와 서명 자격 증명을 사용하여 <see cref="T:System.IdentityModel.Scope" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a26-151">Initializes a new instance of the <see cref="T:System.IdentityModel.Scope" /> class with the specified appliesTo address and signing credentials.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a26-152">다음 표에서 초기 속성 값을 새 <xref:System.IdentityModel.Scope> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="71a26-152">The following table shows the initial property values for the new <xref:System.IdentityModel.Scope> instance.</span></span>  
  
|<span data-ttu-id="71a26-153">속성</span><span class="sxs-lookup"><span data-stu-id="71a26-153">Property</span></span>|<span data-ttu-id="71a26-154">값입니다.</span><span class="sxs-lookup"><span data-stu-id="71a26-154">Value.</span></span>|  
|--------------|------------|  
|<xref:System.IdentityModel.Scope.AppliesToAddress%2A>|<span data-ttu-id="71a26-155">`appliesToAddress` 매개 변수의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="71a26-155">The value of the `appliesToAddress` parameter.</span></span>|  
|<xref:System.IdentityModel.Scope.EncryptingCredentials%2A>|<span data-ttu-id="71a26-156">`null`.</span><span class="sxs-lookup"><span data-stu-id="71a26-156">`null`.</span></span>|  
|<xref:System.IdentityModel.Scope.Properties%2A>|<span data-ttu-id="71a26-157">빈 사전입니다.</span><span class="sxs-lookup"><span data-stu-id="71a26-157">An empty dictionary.</span></span>|  
|<xref:System.IdentityModel.Scope.ReplyToAddress%2A>|<span data-ttu-id="71a26-158">`null`.</span><span class="sxs-lookup"><span data-stu-id="71a26-158">`null`.</span></span>|  
|<xref:System.IdentityModel.Scope.SigningCredentials%2A>|<span data-ttu-id="71a26-159">`signingCredentials` 매개 변수의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="71a26-159">The value of the `signingCredentials` parameter.</span></span>|  
|<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>|<span data-ttu-id="71a26-160">`true`.</span><span class="sxs-lookup"><span data-stu-id="71a26-160">`true`.</span></span>|  
|<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>|<span data-ttu-id="71a26-161">`true`.</span><span class="sxs-lookup"><span data-stu-id="71a26-161">`true`.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Scope (string appliesToAddress, System.IdentityModel.Tokens.SigningCredentials signingCredentials, System.IdentityModel.Tokens.EncryptingCredentials encryptingCredentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string appliesToAddress, class System.IdentityModel.Tokens.SigningCredentials signingCredentials, class System.IdentityModel.Tokens.EncryptingCredentials encryptingCredentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.SigningCredentials,System.IdentityModel.Tokens.EncryptingCredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Scope(System::String ^ appliesToAddress, System::IdentityModel::Tokens::SigningCredentials ^ signingCredentials, System::IdentityModel::Tokens::EncryptingCredentials ^ encryptingCredentials);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Scope : string * System.IdentityModel.Tokens.SigningCredentials * System.IdentityModel.Tokens.EncryptingCredentials -&gt; System.IdentityModel.Scope" Usage="new System.IdentityModel.Scope (appliesToAddress, signingCredentials, encryptingCredentials)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="appliesToAddress" Type="System.String" />
        <Parameter Name="signingCredentials" Type="System.IdentityModel.Tokens.SigningCredentials" />
        <Parameter Name="encryptingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
      </Parameters>
      <Docs>
        <param name="appliesToAddress">
          <span data-ttu-id="71a26-162">신뢰 당사자의 appliesTo 주소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a26-162">The appliesTo address of the relying party.</span>
          </span>
          <span data-ttu-id="71a26-163">일반적으로 URI입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a26-163">This is typically a URI.</span>
          </span>
        </param>
        <param name="signingCredentials">
          <span data-ttu-id="71a26-164">신뢰 당사자에 대한 서명 자격 증명입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a26-164">The signing credentials for the relying party.</span>
          </span>
        </param>
        <param name="encryptingCredentials">
          <span data-ttu-id="71a26-165">신뢰 당사자에 대한 암호화 자격 증명입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a26-165">The encrypting credentials for the relying party.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71a26-166">지정된 appliesTo 주소, 서명 자격 증명, 암호화 자격 증명을 사용하여 <see cref="T:System.IdentityModel.Scope" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a26-166">Initializes a new instance of the <see cref="T:System.IdentityModel.Scope" /> class with the specified appliesTo address, signing credentials, and encrypting credentials.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a26-167">다음 표에서 초기 속성 값을 새 <xref:System.IdentityModel.Scope> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="71a26-167">The following table shows the initial property values for the new <xref:System.IdentityModel.Scope> instance.</span></span>  
  
|<span data-ttu-id="71a26-168">속성</span><span class="sxs-lookup"><span data-stu-id="71a26-168">Property</span></span>|<span data-ttu-id="71a26-169">값</span><span class="sxs-lookup"><span data-stu-id="71a26-169">Value</span></span>|  
|--------------|-----------|  
|<xref:System.IdentityModel.Scope.AppliesToAddress%2A>|<span data-ttu-id="71a26-170">`appliesToAddress` 매개 변수의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="71a26-170">The value of the `appliesToAddress` parameter.</span></span>|  
|<xref:System.IdentityModel.Scope.EncryptingCredentials%2A>|<span data-ttu-id="71a26-171">`encryptingCredentials` 매개 변수의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="71a26-171">The value of the `encryptingCredentials` parameter.</span></span>|  
|<xref:System.IdentityModel.Scope.Properties%2A>|<span data-ttu-id="71a26-172">빈 사전입니다.</span><span class="sxs-lookup"><span data-stu-id="71a26-172">An empty dictionary.</span></span>|  
|<xref:System.IdentityModel.Scope.ReplyToAddress%2A>|<span data-ttu-id="71a26-173">`null`.</span><span class="sxs-lookup"><span data-stu-id="71a26-173">`null`.</span></span>|  
|<xref:System.IdentityModel.Scope.SigningCredentials%2A>|<span data-ttu-id="71a26-174">`signingCredentials` 매개 변수의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="71a26-174">The value of the `signingCredentials` parameter.</span></span>|  
|<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>|<span data-ttu-id="71a26-175">`true`.</span><span class="sxs-lookup"><span data-stu-id="71a26-175">`true`.</span></span>|  
|<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>|<span data-ttu-id="71a26-176">`true`.</span><span class="sxs-lookup"><span data-stu-id="71a26-176">`true`.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppliesToAddress">
      <MemberSignature Language="C#" Value="public virtual string AppliesToAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AppliesToAddress" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Scope.AppliesToAddress" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AppliesToAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ AppliesToAddress { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AppliesToAddress : string with get, set" Usage="System.IdentityModel.Scope.AppliesToAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="71a26-177">신뢰 당사자의 appliesTo 주소를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a26-177">Gets or sets the appliesTo address of the relying party.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="71a26-178">신뢰 당사자의 appliesTo 주소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a26-178">The appliesTo address of the relying party.</span>
          </span>
          <span data-ttu-id="71a26-179">일반적으로 URI입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a26-179">This is typically a URI.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptingCredentials">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.EncryptingCredentials EncryptingCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.EncryptingCredentials EncryptingCredentials" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Scope.EncryptingCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EncryptingCredentials As EncryptingCredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IdentityModel::Tokens::EncryptingCredentials ^ EncryptingCredentials { System::IdentityModel::Tokens::EncryptingCredentials ^ get(); void set(System::IdentityModel::Tokens::EncryptingCredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EncryptingCredentials : System.IdentityModel.Tokens.EncryptingCredentials with get, set" Usage="System.IdentityModel.Scope.EncryptingCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.EncryptingCredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="71a26-180">신뢰 당사자에 대한 암호화 자격 증명을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a26-180">Gets or sets the encrypting credentials for the relying party.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="71a26-181">신뢰 당사자에 사용되는 암호화 자격 증명입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a26-181">The encrypting credentials to be used for the relying party.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a26-182">경우는 <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A> 속성은 `true`, 자격 증명은 발급 된 보안 토큰을 암호화 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="71a26-182">If the <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A> property is `true`, the credentials are used to encrypt issued security tokens.</span></span> <span data-ttu-id="71a26-183">경우는 <xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A> 속성은 `true`, 보안 토큰을 사용 하 여 발급 된 대칭 키를 암호화 하는 자격 증명이 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="71a26-183">If the <xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A> property is `true`, the credentials are used to encrypt symmetric keys issued with security tokens.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.Dictionary&lt;string,object&gt; Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;string, object&gt; Properties" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Scope.Properties" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Properties As Dictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::Dictionary&lt;System::String ^, System::Object ^&gt; ^ Properties { System::Collections::Generic::Dictionary&lt;System::String ^, System::Object ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Collections.Generic.Dictionary&lt;string, obj&gt;" Usage="System.IdentityModel.Scope.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="71a26-184">개체를 확장하기 위한 속성 모음을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a26-184">Gets the properties bag to extend the object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="71a26-185">속성 모음입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a26-185">The properties bag.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplyToAddress">
      <MemberSignature Language="C#" Value="public virtual string ReplyToAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ReplyToAddress" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Scope.ReplyToAddress" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ReplyToAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ReplyToAddress { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ReplyToAddress : string with get, set" Usage="System.IdentityModel.Scope.ReplyToAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="71a26-186">신뢰 당사자의 replyTo 주소를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a26-186">Gets or sets the replyTo address of the relying party.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="71a26-187">신뢰 당사자의 replyTo 주소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a26-187">The replyTo address of the relying party.</span>
          </span>
          <span data-ttu-id="71a26-188">일반적으로 URI입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a26-188">This is typically a URI.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SigningCredentials">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SigningCredentials SigningCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SigningCredentials SigningCredentials" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Scope.SigningCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SigningCredentials As SigningCredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IdentityModel::Tokens::SigningCredentials ^ SigningCredentials { System::IdentityModel::Tokens::SigningCredentials ^ get(); void set(System::IdentityModel::Tokens::SigningCredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SigningCredentials : System.IdentityModel.Tokens.SigningCredentials with get, set" Usage="System.IdentityModel.Scope.SigningCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SigningCredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="71a26-189">신뢰 당사자에 대한 서명 자격 증명을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a26-189">Gets or sets the signing credentials for the relying party.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="71a26-190">신뢰 당사자에 사용되는 서명 자격 증명입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a26-190">The signing credentials to be used for the relying party.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SymmetricKeyEncryptionRequired">
      <MemberSignature Language="C#" Value="public virtual bool SymmetricKeyEncryptionRequired { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SymmetricKeyEncryptionRequired" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SymmetricKeyEncryptionRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SymmetricKeyEncryptionRequired { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SymmetricKeyEncryptionRequired : bool with get, set" Usage="System.IdentityModel.Scope.SymmetricKeyEncryptionRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="71a26-191">발급된 대칭 키를 암호화해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a26-191">Gets or sets a value that indicates whether issued symmetric keys must be encrypted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="71a26-192">대칭 키를 암호화해야 하는 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a26-192">
              <see langword="true" /> if symmetric keys must be encrypted; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="71a26-193">기본값은 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a26-193">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a26-194">경우는 <xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A> 속성은 `true`, 대칭 키 자격 증명을 사용 하 여 암호화 됩니다는 <xref:System.IdentityModel.Scope.EncryptingCredentials%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="71a26-194">If the <xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A> property is `true`, symmetric keys are encrypted using the credentials in the <xref:System.IdentityModel.Scope.EncryptingCredentials%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TokenEncryptionRequired">
      <MemberSignature Language="C#" Value="public virtual bool TokenEncryptionRequired { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TokenEncryptionRequired" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Scope.TokenEncryptionRequired" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TokenEncryptionRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool TokenEncryptionRequired { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TokenEncryptionRequired : bool with get, set" Usage="System.IdentityModel.Scope.TokenEncryptionRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="71a26-195">발급된 보안 토큰을 암호화해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a26-195">Gets or sets a value that indicates whether issued security tokens must be encrypted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="71a26-196">보안 토큰을 암호화해야 하는 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a26-196">
              <see langword="true" /> if security tokens must be encrypted; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="71a26-197">기본값은 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71a26-197">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71a26-198">경우는 <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A> 속성은 `true`에서 자격 증명을 사용 하 여 보안 토큰은 암호화를 <xref:System.IdentityModel.Scope.EncryptingCredentials%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="71a26-198">If the <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A> property is `true`, security tokens are encrypted using the credentials in the <xref:System.IdentityModel.Scope.EncryptingCredentials%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>