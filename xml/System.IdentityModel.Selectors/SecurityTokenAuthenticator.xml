<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SecurityTokenAuthenticator.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac513269bb93c59d7c497318909c4aab1e95858fb8d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">13269bb93c59d7c497318909c4aab1e95858fb8d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Selectors.SecurityTokenAuthenticator">
          <source>Authenticates a security token.</source>
          <target state="translated">보안 토큰을 인증합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Selectors.SecurityTokenAuthenticator">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator&gt;</ph> class and the classes that derive from it authenticate security tokens.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator&gt;</ph> 클래스와 이 클래스에서 파생된 클래스는 보안 토큰을 인증합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Selectors.SecurityTokenAuthenticator">
          <source>Typically, you would only derive a class directly from <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator&gt;</ph> when you create a custom security token.</source>
          <target state="translated">일반적으로 사용자 지정 보안 토큰을 만들 때만 <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator&gt;</ph>에서 직접 클래스를 파생시킵니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Selectors.SecurityTokenAuthenticator">
          <source>If you wanted to override the default authentication or authorization behaviors for built-in security tokens, derive from one of the classes that derive from <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator&gt;</ph>, such as <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator&gt;</ph>.</source>
          <target state="translated">내장 보안 토큰에 대한 기본 인증 또는 권한 부여 동작을 재정의하려면 <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator&gt;</ph>에서 파생된 클래스 중 하나(예: <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator&gt;</ph>)에서 파생시킵니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Selectors.SecurityTokenAuthenticator">
          <source>When you derive a class from <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator&gt;</ph>, override the following two methods: <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator&gt;</ph>에서 클래스를 파생시킬 때 <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> 메서드와 <ph id="ph3">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A&gt;</ph> 메서드를 재정의합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Selectors.SecurityTokenAuthenticator">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A&gt;</ph> method determines whether this security token authenticator can authenticate a specific security token.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A&gt;</ph> 메서드는 이 보안 토큰 인증자가 특정 보안 토큰을 인증할 수 있는지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Selectors.SecurityTokenAuthenticator">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> method authenticates the security token and establishes a set of authorization policies for authorization.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> 메서드는 보안 토큰을 인증하고 권한 부여를 위한 권한 부여 정책 집합을 설정합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Selectors.SecurityTokenAuthenticator">
          <source>The authorization policies map the claims found in the security token to claims required by the application.</source>
          <target state="translated">권한 부여 정책은 보안 토큰에 있는 클레임을 응용 프로그램에서 필요한 클레임에 매핑합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.SecurityTokenAuthenticator" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.SecurityTokenAuthenticator" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph> to be validated.</source>
          <target state="translated">유효성을 검사할 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>Gets a value indicating whether the specified security token can be validated by this security token authenticator.</source>
          <target state="translated">이 보안 토큰 인증자가 지정된 보안 토큰의 유효성을 검사할 수 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> when token can be validated; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">토큰의 유효성을 검사할 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A&gt;</ph> method checks whether the token parameter is <ph id="ph2">`null`</ph> and then calls the <ph id="ph3">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A&gt;</ph> method to determine whether this security token authenticator can authenticate the security token type for <ph id="ph4">`token`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A&gt;</ph> 메서드는 토큰 매개 변수가 <ph id="ph2">`null`</ph>인지 여부를 확인한 후 <ph id="ph3">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A&gt;</ph> 메서드를 호출하여 이 보안 토큰 인증자가 <ph id="ph4">`token`</ph>의 보안 토큰 형식을 인증할 수 있는지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source><ph id="ph1">&lt;paramref name="token" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="token" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph> to be validated.</source>
          <target state="translated">유효성을 검사할 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
          <source>When overridden in a derived class, gets a value indicating whether the specified security token can be validated by this security token authenticator.</source>
          <target state="translated">파생 클래스에서 재정의된 경우 이 보안 토큰 인증자가 지정된 보안 토큰의 유효성을 검사할 수 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> when <ph id="ph2">&lt;paramref name="token" /&gt;</ph> can be validated; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>의 유효성을 검사할 수 있으면 <ph id="ph2">&lt;paramref name="token" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A&gt;</ph> method is called by the <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A&gt;</ph> method to determine whether this security token authenticator can authenticate the security token type for <ph id="ph3">`token`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A&gt;</ph> 메서드는 <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A&gt;</ph> 메서드에 의해 호출되어 이 보안 토큰 인증자가 <ph id="ph3">`token`</ph>의 보안 토큰 형식을 인증할 수 있는지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
          <source>This does not authenticate the security token; that is performed by the <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A&gt;</ph> method.</source>
          <target state="translated">이 메서드는 보안 토큰을 인증하지 않으며, 인증은 <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A&gt;</ph> 메서드를 통해 수행됩니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph> to be validated.</source>
          <target state="translated">유효성을 검사할 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>Authenticates the specified security token and returns the set of authorization policies for the security token.</source>
          <target state="translated">지정된 보안 토큰을 인증하고 보안 토큰의 권한 부여 정책 집합을 반환합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> of type <ph id="ph2">&lt;see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /&gt;</ph> that contains the set of authorization policies in effect for this application.</source>
          <target state="translated">이 응용 프로그램에 적용되는 권한 부여 정책의 집합을 포함하는 <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> 형식의 <ph id="ph2">&lt;see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A&gt;</ph> method checks whether the <ph id="ph2">`token`</ph> parameter is <ph id="ph3">`null`</ph>, calls the <ph id="ph4">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A&gt;</ph> method to determine if this security token authenticator can authenticate this security token, and then if it can, calls the <ph id="ph5">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A&gt;</ph> 메서드는 <ph id="ph2">`token`</ph> 매개 변수가 <ph id="ph3">`null`</ph>인지 여부를 확인하고, <ph id="ph4">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A&gt;</ph> 메서드를 호출하여 이 보안 토큰 인증자가 이 보안 토큰을 인증할 수 있는지 여부를 확인한 후, 인증할 수 있으면 <ph id="ph5">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> 메서드를 호출합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source><ph id="ph1">&lt;paramref name="token" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="token" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source><ph id="ph1">&lt;paramref name="token" /&gt;</ph> cannot be authenticated by this security token authenticator</source>
          <target state="translated">이 보안 토큰 인증자가 <ph id="ph1">&lt;paramref name="token" /&gt;</ph>을 인증할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source><ph id="ph1">&lt;paramref name="token" /&gt;</ph> is not authenticated.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="token" /&gt;</ph>이 인증되지 않는 경우</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph> to be validated.</source>
          <target state="translated">유효성을 검사할 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
          <source>When overridden in a derived class, authenticates the specified security token and returns the set of authorization policies for the security token.</source>
          <target state="translated">파생 클래스에서 재정의된 경우 지정된 보안 토큰을 인증하고 보안 토큰에 대한 권한 부여 정책 집합을 반환합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> of type <ph id="ph2">&lt;see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /&gt;</ph> that contains the set of authorization policies in effect for this application.</source>
          <target state="translated">이 응용 프로그램에 적용되는 권한 부여 정책의 집합을 포함하는 <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> 형식의 <ph id="ph2">&lt;see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
          <source>Override the <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> method to authenticate a specific security token type.</source>
          <target state="translated">특정 보안 토큰 형식을 인증하려면 <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> 메서드를 재정의합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
          <source>When the <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> method is overridden, follow these guidelines:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> 메서드를 재정의할 때 다음과 같은 지침을 따릅니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
          <source>When the security token passed into the <ph id="ph1">`token`</ph> parameter cannot be validated, throw the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenValidationException&gt;</ph> exception.</source>
          <target state="translated"><ph id="ph1">`token`</ph> 매개 변수로 전달된 보안 토큰의 유효성을 검사할 수 없는 경우 <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenValidationException&gt;</ph> 예외를 throw합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
          <source>When there are no authorization policies in effect for this application, return an empty <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> of type <ph id="ph2">&lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ph>.</source>
          <target state="translated">이 응용 프로그램에 적용되는 권한 부여 정책이 없는 경우 <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> 형식의 빈 <ph id="ph2">&lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ph>을 반환합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
          <source>When <ph id="ph1">`null`</ph> is returned by this method, <ph id="ph2">[!INCLUDE[vsindigo](~/includes/vsindigo-md.md)]</ph> throws the <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SecurityTokenValidationException&gt;</ph> exception.</source>
          <target state="translated">이 메서드에서 <ph id="ph1">`null`</ph>이 반환되면 <ph id="ph2">[!INCLUDE[vsindigo](~/includes/vsindigo-md.md)]</ph>에서 <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SecurityTokenValidationException&gt;</ph> 예외를 throw합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> method is called by the <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> 메서드는 <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A&gt;</ph> 메서드에 의해 호출됩니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>