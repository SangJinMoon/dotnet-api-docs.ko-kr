<Type Name="UserNameSecurityTokenAuthenticator" FullName="System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="322ed2234ea99eeebc6a9096457dc94703bba23b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class UserNameSecurityTokenAuthenticator : System.IdentityModel.Selectors.SecurityTokenAuthenticator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit UserNameSecurityTokenAuthenticator extends System.IdentityModel.Selectors.SecurityTokenAuthenticator" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class UserNameSecurityTokenAuthenticator&#xA;Inherits SecurityTokenAuthenticator" />
  <TypeSignature Language="C++ CLI" Value="public ref class UserNameSecurityTokenAuthenticator abstract : System::IdentityModel::Selectors::SecurityTokenAuthenticator" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Selectors.SecurityTokenAuthenticator</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="ccc80-101">
        <see cref="T:System.IdentityModel.Tokens.UserNameSecurityToken" /> 보안 토큰을 인증합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ccc80-101">Authenticates a <see cref="T:System.IdentityModel.Tokens.UserNameSecurityToken" /> security token.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccc80-102">사용자 이름과 암호를 기반으로 보안 토큰을 인증하려면 <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator> 클래스를 재정의합니다.</span><span class="sxs-lookup"><span data-stu-id="ccc80-102">Override the <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator> class to authenticate security tokens based on a user name and password.</span></span>  
  
 <span data-ttu-id="ccc80-103">[!INCLUDE[vsindigo](~/includes/vsindigo-md.md)]는 <xref:System.IdentityModel.Tokens.UserNameSecurityToken> 보안 토큰의 인증을 지원하는 다음 클래스와 함께 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="ccc80-103">The [!INCLUDE[vsindigo](~/includes/vsindigo-md.md)] ships with the following classes that provide support for authenticating <xref:System.IdentityModel.Tokens.UserNameSecurityToken> security tokens.</span></span>  
  
|<span data-ttu-id="ccc80-104">형식</span><span class="sxs-lookup"><span data-stu-id="ccc80-104">Type</span></span>|<span data-ttu-id="ccc80-105">설명</span><span class="sxs-lookup"><span data-stu-id="ccc80-105">Description</span></span>|  
|----------|-----------------|  
|<xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator>|<span data-ttu-id="ccc80-106">응용 프로그램에서 사용자 이름과 암호에 대한 사용자 지정 인증 체계를 제공할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="ccc80-106">Allows an application to provide a custom authentication scheme for user names and passwords.</span></span> <span data-ttu-id="ccc80-107">인증 체계는 <xref:System.IdentityModel.Selectors.UserNamePasswordValidator> 클래스에서 파생된 클래스를 사용하여 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="ccc80-107">The authentication scheme is provided using a class deriving from the <xref:System.IdentityModel.Selectors.UserNamePasswordValidator> class.</span></span>|  
|<xref:System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator>|<span data-ttu-id="ccc80-108">사용자 이름과 암호를 Windows 계정으로 인증합니다.</span><span class="sxs-lookup"><span data-stu-id="ccc80-108">Authenticates the user name and password as a Windows account.</span></span>|  
  
 <span data-ttu-id="ccc80-109">대부분의 사용자 지정 인증 체계에서는 <xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator> 클래스를 사용하고 <xref:System.IdentityModel.Selectors.UserNamePasswordValidator> 클래스에서 파생되는 클래스를 구현할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ccc80-109">Most custom authentication schemes can use the use the <xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator> class and implement a class that derives from the <xref:System.IdentityModel.Selectors.UserNamePasswordValidator> class.</span></span>  <span data-ttu-id="ccc80-110">그러나 유연성이 더 필요한 경우 <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator> 클래스에서 클래스를 파생시키고 <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A> 메서드를 재정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ccc80-110">However, if additional flexibility is needed, you can derive a class from the <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator> class and override the <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A> method.</span></span>  
  
   
  
## Examples  
 [!code-csharp[UserNameSecurityTokenAuthenticator#0](~/samples/snippets/csharp/VS_Snippets_CFX/usernamesecuritytokenauthenticator/cs/mytokenauthenticator.cs#0)]
 [!code-vb[UserNameSecurityTokenAuthenticator#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/usernamesecuritytokenauthenticator/vb/mytokenauthenticator.vb#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected UserNameSecurityTokenAuthenticator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; UserNameSecurityTokenAuthenticator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ccc80-111">
            <see cref="T:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc80-111">Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanValidateTokenCore">
      <MemberSignature Language="C#" Value="protected override bool CanValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool CanValidateTokenCore(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CanValidateTokenCore (token As SecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool CanValidateTokenCore(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token">
          <span data-ttu-id="ccc80-112">유효성을 검사할 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc80-112">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> to be validated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ccc80-113">이 보안 토큰 인증자가 지정된 보안 토큰의 유효성을 검사할 수 있는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc80-113">Gets a value indicating whether the specified security token can be validated by this security token authenticator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ccc80-114">
            <see langword="true" />이 <paramref name="token" /> 보안 토큰이면 <see cref="T:System.IdentityModel.Tokens.UserNameSecurityToken" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc80-114">
              <see langword="true" /> when <paramref name="token" /> is a <see cref="T:System.IdentityModel.Tokens.UserNameSecurityToken" /> security token; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccc80-115"><xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.CanValidateTokenCore%2A> 메서드는 보안 토큰을 인증하지 않습니다. 보안 토큰의 인증은 <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore%2A> 메서드를 통해 수행됩니다.</span><span class="sxs-lookup"><span data-stu-id="ccc80-115">The <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.CanValidateTokenCore%2A> method does not authenticate the security token; that is performed by the <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateTokenCore">
      <MemberSignature Language="C#" Value="protected override System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt; ValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Policy.IAuthorizationPolicy&gt; ValidateTokenCore(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ValidateTokenCore (token As SecurityToken) As ReadOnlyCollection(Of IAuthorizationPolicy)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Policy::IAuthorizationPolicy ^&gt; ^ ValidateTokenCore(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token">
          <span data-ttu-id="ccc80-116">유효성을 검사할 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc80-116">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> to be validated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ccc80-117">지정된 보안 토큰을 인증하고 보안 토큰의 권한 부여 정책 집합을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc80-117">Authenticates the specified security token and returns the set of authorization policies for the security token.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ccc80-118">이 응용 프로그램에 적용되는 권한 부여 정책의 집합을 포함하는 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 형식의 <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc80-118">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /> that contains the set of authorization policies in effect for this application.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccc80-119"><xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore%2A> 메서드는 사용자 이름과 암호를 사용하여 <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A> 매개 변수를 인증하기 위해 `token` 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="ccc80-119">The <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore%2A> method calls the <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A> method to authenticate the `token` parameter using its user name and password.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateUserNamePasswordCore">
      <MemberSignature Language="C#" Value="protected abstract System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt; ValidateUserNamePasswordCore (string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Policy.IAuthorizationPolicy&gt; ValidateUserNamePasswordCore(string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function ValidateUserNamePasswordCore (userName As String, password As String) As ReadOnlyCollection(Of IAuthorizationPolicy)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Policy::IAuthorizationPolicy ^&gt; ^ ValidateUserNamePasswordCore(System::String ^ userName, System::String ^ password);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="userName">
          <span data-ttu-id="ccc80-120">보안 토큰과 연결된 사용자 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc80-120">The user name associated with the security token.</span>
          </span>
        </param>
        <param name="password">
          <span data-ttu-id="ccc80-121">보안 토큰과 연결된 암호입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc80-121">The password associated with the security token.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ccc80-122">파생 클래스에서 재정의되는 경우 지정된 사용자 이름과 암호를 인증하고 <see cref="T:System.IdentityModel.Tokens.UserNameSecurityToken" /> 보안 토큰에 대한 권한 부여 정책의 집합을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc80-122">When overridden in a derived class, authenticates the specified user name and password and returns the set of authorization policies for <see cref="T:System.IdentityModel.Tokens.UserNameSecurityToken" /> security tokens.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ccc80-123">이 응용 프로그램에 적용되는 권한 부여 정책의 집합을 포함하는 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 형식의 <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccc80-123">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /> that contains the set of authorization policies in effect for this application.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccc80-124"><xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A> 보안 토큰을 인증하려면 <xref:System.IdentityModel.Tokens.UserNameSecurityToken> 메서드를 재정의합니다.</span><span class="sxs-lookup"><span data-stu-id="ccc80-124">Override the <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A> method to authenticate <xref:System.IdentityModel.Tokens.UserNameSecurityToken> security tokens.</span></span>  
  
 <span data-ttu-id="ccc80-125"><xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A> 메서드를 재정의할 때 다음과 같은 지침을 따릅니다.</span><span class="sxs-lookup"><span data-stu-id="ccc80-125">When the <xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A> method is overridden, follow these guidelines:</span></span>  
  
-   <span data-ttu-id="ccc80-126">`token` 매개 변수로 전달된 보안 토큰의 유효성을 검사할 수 없는 경우 <xref:System.IdentityModel.Tokens.SecurityTokenValidationException> 예외를 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="ccc80-126">When the security token passed into the `token` parameter cannot be validated, throw the <xref:System.IdentityModel.Tokens.SecurityTokenValidationException> exception.</span></span>  
  
-   <span data-ttu-id="ccc80-127">이 응용 프로그램에 적용되는 권한 부여 정책이 없는 경우 <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> 형식의 빈 <xref:System.IdentityModel.Policy.IAuthorizationPolicy>을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="ccc80-127">When there are no authorization policies in effect for this application, return an empty <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of type <xref:System.IdentityModel.Policy.IAuthorizationPolicy>.</span></span>  
  
 <span data-ttu-id="ccc80-128">이 메서드에서 `null`이 반환되면 [!INCLUDE[vsindigo](~/includes/vsindigo-md.md)]에서 <xref:System.IdentityModel.Tokens.SecurityTokenValidationException> 예외를 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="ccc80-128">When `null` is returned by this method, [!INCLUDE[vsindigo](~/includes/vsindigo-md.md)] throws the <xref:System.IdentityModel.Tokens.SecurityTokenValidationException> exception.</span></span>  
  
   
  
## Examples  
 [!code-csharp[UserNameSecurityTokenAuthenticator#1](~/samples/snippets/csharp/VS_Snippets_CFX/usernamesecuritytokenauthenticator/cs/mytokenauthenticator.cs#1)]
 [!code-vb[UserNameSecurityTokenAuthenticator#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/usernamesecuritytokenauthenticator/vb/mytokenauthenticator.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>