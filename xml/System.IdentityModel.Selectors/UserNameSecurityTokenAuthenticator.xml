<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="UserNameSecurityTokenAuthenticator.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5322ed2234ea99eeebc6a9096457dc94703bba23b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">322ed2234ea99eeebc6a9096457dc94703bba23b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator">
          <source>Authenticates a <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.UserNameSecurityToken" /&gt;</ph> security token.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.UserNameSecurityToken" /&gt;</ph> 보안 토큰을 인증합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator">
          <source>Override the <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator&gt;</ph> class to authenticate security tokens based on a user name and password.</source>
          <target state="translated">사용자 이름과 암호를 기반으로 보안 토큰을 인증하려면 <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator&gt;</ph> 클래스를 재정의합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator">
          <source>The <ph id="ph1">[!INCLUDE[vsindigo](~/includes/vsindigo-md.md)]</ph> ships with the following classes that provide support for authenticating <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.UserNameSecurityToken&gt;</ph> security tokens.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vsindigo](~/includes/vsindigo-md.md)]</ph>는 <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.UserNameSecurityToken&gt;</ph> 보안 토큰의 인증을 지원하는 다음 클래스와 함께 제공됩니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator">
          <source>Type</source>
          <target state="translated">형식</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator">
          <source>Allows an application to provide a custom authentication scheme for user names and passwords.</source>
          <target state="translated">응용 프로그램에서 사용자 이름과 암호에 대한 사용자 지정 인증 체계를 제공할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator">
          <source>The authentication scheme is provided using a class deriving from the <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.UserNamePasswordValidator&gt;</ph> class.</source>
          <target state="translated">인증 체계는 <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.UserNamePasswordValidator&gt;</ph> 클래스에서 파생된 클래스를 사용하여 제공됩니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator">
          <source>Authenticates the user name and password as a Windows account.</source>
          <target state="translated">사용자 이름과 암호를 Windows 계정으로 인증합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator">
          <source>Most custom authentication schemes can use the use the <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator&gt;</ph> class and implement a class that derives from the <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.UserNamePasswordValidator&gt;</ph> class.</source>
          <target state="translated">대부분의 사용자 지정 인증 체계에서는 <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator&gt;</ph> 클래스를 사용하고 <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.UserNamePasswordValidator&gt;</ph> 클래스에서 파생되는 클래스를 구현할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator">
          <source>However, if additional flexibility is needed, you can derive a class from the <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator&gt;</ph> class and override the <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A&gt;</ph> method.</source>
          <target state="translated">그러나 유연성이 더 필요한 경우 <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator&gt;</ph> 클래스에서 클래스를 파생시키고 <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A&gt;</ph> 메서드를 재정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph> to be validated.</source>
          <target state="translated">유효성을 검사할 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
          <source>Gets a value indicating whether the specified security token can be validated by this security token authenticator.</source>
          <target state="translated">이 보안 토큰 인증자가 지정된 보안 토큰의 유효성을 검사할 수 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> when <ph id="ph2">&lt;paramref name="token" /&gt;</ph> is a <ph id="ph3">&lt;see cref="T:System.IdentityModel.Tokens.UserNameSecurityToken" /&gt;</ph> security token; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>이 <ph id="ph2">&lt;paramref name="token" /&gt;</ph> 보안 토큰이면 <ph id="ph3">&lt;see cref="T:System.IdentityModel.Tokens.UserNameSecurityToken" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.CanValidateTokenCore%2A&gt;</ph> method does not authenticate the security token; that is performed by the <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.CanValidateTokenCore%2A&gt;</ph> 메서드는 보안 토큰을 인증하지 않습니다. 보안 토큰의 인증은 <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> 메서드를 통해 수행됩니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph> to be validated.</source>
          <target state="translated">유효성을 검사할 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
          <source>Authenticates the specified security token and returns the set of authorization policies for the security token.</source>
          <target state="translated">지정된 보안 토큰을 인증하고 보안 토큰의 권한 부여 정책 집합을 반환합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> of type <ph id="ph2">&lt;see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /&gt;</ph> that contains the set of authorization policies in effect for this application.</source>
          <target state="translated">이 응용 프로그램에 적용되는 권한 부여 정책의 집합을 포함하는 <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> 형식의 <ph id="ph2">&lt;see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A&gt;</ph> method to authenticate the <ph id="ph3">`token`</ph> parameter using its user name and password.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> 메서드는 사용자 이름과 암호를 사용하여 <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A&gt;</ph> 매개 변수를 인증하기 위해 <ph id="ph3">`token`</ph> 메서드를 호출합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(System.String,System.String)">
          <source>The user name associated with the security token.</source>
          <target state="translated">보안 토큰과 연결된 사용자 이름입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(System.String,System.String)">
          <source>The password associated with the security token.</source>
          <target state="translated">보안 토큰과 연결된 암호입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(System.String,System.String)">
          <source>When overridden in a derived class, authenticates the specified user name and password and returns the set of authorization policies for <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.UserNameSecurityToken" /&gt;</ph> security tokens.</source>
          <target state="translated">파생 클래스에서 재정의되는 경우 지정된 사용자 이름과 암호를 인증하고 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.UserNameSecurityToken" /&gt;</ph> 보안 토큰에 대한 권한 부여 정책의 집합을 반환합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(System.String,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> of type <ph id="ph2">&lt;see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /&gt;</ph> that contains the set of authorization policies in effect for this application.</source>
          <target state="translated">이 응용 프로그램에 적용되는 권한 부여 정책의 집합을 포함하는 <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> 형식의 <ph id="ph2">&lt;see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(System.String,System.String)">
          <source>Override the <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A&gt;</ph> method to authenticate <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.UserNameSecurityToken&gt;</ph> security tokens.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A&gt;</ph> 보안 토큰을 인증하려면 <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.UserNameSecurityToken&gt;</ph> 메서드를 재정의합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(System.String,System.String)">
          <source>When the <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A&gt;</ph> method is overridden, follow these guidelines:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A&gt;</ph> 메서드를 재정의할 때 다음과 같은 지침을 따릅니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(System.String,System.String)">
          <source>When the security token passed into the <ph id="ph1">`token`</ph> parameter cannot be validated, throw the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenValidationException&gt;</ph> exception.</source>
          <target state="translated"><ph id="ph1">`token`</ph> 매개 변수로 전달된 보안 토큰의 유효성을 검사할 수 없는 경우 <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenValidationException&gt;</ph> 예외를 throw합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(System.String,System.String)">
          <source>When there are no authorization policies in effect for this application, return an empty <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> of type <ph id="ph2">&lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ph>.</source>
          <target state="translated">이 응용 프로그램에 적용되는 권한 부여 정책이 없는 경우 <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> 형식의 빈 <ph id="ph2">&lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ph>을 반환합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(System.String,System.String)">
          <source>When <ph id="ph1">`null`</ph> is returned by this method, <ph id="ph2">[!INCLUDE[vsindigo](~/includes/vsindigo-md.md)]</ph> throws the <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SecurityTokenValidationException&gt;</ph> exception.</source>
          <target state="translated">이 메서드에서 <ph id="ph1">`null`</ph>이 반환되면 <ph id="ph2">[!INCLUDE[vsindigo](~/includes/vsindigo-md.md)]</ph>에서 <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SecurityTokenValidationException&gt;</ph> 예외를 throw합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>