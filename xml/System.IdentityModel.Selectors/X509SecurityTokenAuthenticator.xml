<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="X509SecurityTokenAuthenticator.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">73cd4428-9abd-4836-b1ef-ba70fe2e0b727c985d38d6c8e6deda32f3db3477b3389960f4b0.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7c985d38d6c8e6deda32f3db3477b3389960f4b0</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator">
          <source>Authenticates an <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /&gt;</ph>을 인증합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator">
          <source>Use the <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator&gt;</ph> class to authenticate <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.X509SecurityToken&gt;</ph> security tokens.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator&gt;</ph> 보안 토큰을 인증하려면 <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.X509SecurityToken&gt;</ph> 클래스를 사용합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor">
          <source>When the <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> method is called to authenticate the token, the X.509 certificate is not mapped to a Windows identity and the certificate is validated using a certificate chain.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> 메서드를 호출하여 토큰을 인증하면 X.509 인증서는 Windows ID에 매핑되지 않으며 인증서 체인을 사용하여 인증서의 유효성이 검사됩니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /&gt;</ph> that verifies that the certificate is valid.</source>
          <target state="translated">인증서가 유효한지 확인하는 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" /&gt;</ph> class using the specified certificate validator.</source>
          <target state="translated">지정된 인증서 유효성 검사기를 사용하여 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator&gt;</ph> class provides a set of pre-defined certificate validation models, such as the <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator&gt;</ph> 클래스는 미리 정의된 인증서 유효성 검사 모델 집합(예: <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A&gt;</ph> 속성)을 제공합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)">
          <source>These validation models can be passed to the <ph id="ph1">`validator`</ph> parameter.</source>
          <target state="translated">이 유효성 검사 모델을 <ph id="ph1">`validator`</ph> 매개 변수로 전달할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)">
          <source>When an application requires a custom validation method, derive a class from <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator&gt;</ph> and override the <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29&gt;</ph> method.</source>
          <target state="translated">응용 프로그램에 사용자 지정 유효성 검사 메서드가 필요한 경우 <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator&gt;</ph>에서 클래스를 파생시켜 <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29&gt;</ph> 메서드를 재정의합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29&gt;</ph> method is called by the <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29&gt;</ph> 메서드는 <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> 메서드에 의해 호출됩니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)">
          <source>By default, the <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator&gt;</ph> does not map the X.509 certificate to a Windows identity.</source>
          <target state="translated">기본적으로 <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator&gt;</ph>는 X.509 인증서를 Windows ID에 매핑하지 않습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /&gt;</ph> that verifies that the certificate is valid.</source>
          <target state="translated">인증서가 유효한지 확인하는 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to map the identity of the certificate to a Windows identity; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">인증서 ID를 Windows ID에 매핑하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" /&gt;</ph> class using the specified certificate validation method and indicates whether the identity of the certificate is mapped to a Windows identity.</source>
          <target state="translated">지정된 인증서 유효성 검사 메서드를 사용하여 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" /&gt;</ph> 클래스의 새 인스턴스를 초기화하고 인증서 ID가 Windows ID에 매핑되는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator&gt;</ph> class provides a set of pre-defined certificate validation models, such as the <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator&gt;</ph> 클래스는 미리 정의된 인증서 유효성 검사 모델 집합(예: <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A&gt;</ph> 속성)을 제공합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean)">
          <source>These validation models can be passed to the <ph id="ph1">`validator`</ph> parameter.</source>
          <target state="translated">이 유효성 검사 모델을 <ph id="ph1">`validator`</ph> 매개 변수로 전달할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean)">
          <source>When an application requires a custom validation method, derive a class from <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator&gt;</ph> and override the <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29&gt;</ph> method.</source>
          <target state="translated">응용 프로그램에 사용자 지정 유효성 검사 메서드가 필요한 경우 <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator&gt;</ph>에서 클래스를 파생시켜 <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29&gt;</ph> 메서드를 재정의합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29&gt;</ph> method is called by the <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29&gt;</ph> 메서드는 <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> 메서드에 의해 호출됩니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean)">
          <source>When the <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> method is called to authenticate the token and <ph id="ph2">`mapToWindows`</ph> is <ph id="ph3">`true`</ph>, the X.509 certificate is mapped to a Windows account and claims are added to the <ph id="ph4">&lt;xref:System.IdentityModel.Policy.EvaluationContext&gt;</ph> with the Windows groups that the user belongs to.</source>
          <target state="translated">토큰을 인증하기 위해 <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> 메서드가 호출되고 <ph id="ph2">`mapToWindows`</ph>가 <ph id="ph3">`true`</ph>이면, X.509 인증서가 Windows 계정에 매핑되고 클레임은 사용자가 속한 Windows 그룹과 함께 <ph id="ph4">&lt;xref:System.IdentityModel.Policy.EvaluationContext&gt;</ph>에 추가됩니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean)">
          <source>How the X.509 certificate is mapped to a Windows account depends upon the security token type:</source>
          <target state="translated">X.509 인증서가 Windows 계정에 매핑되는 방식은 보안 토큰 형식에 따라 다릅니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean)">
          <source>When the security token is of type <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.X509WindowsSecurityToken&gt;</ph>, the X.509 certificate is mapped using the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.X509WindowsSecurityToken.WindowsIdentity%2A&gt;</ph> property.</source>
          <target state="translated">보안 토큰이 <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.X509WindowsSecurityToken&gt;</ph> 형식이면 X.509 인증서는 <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.X509WindowsSecurityToken.WindowsIdentity%2A&gt;</ph> 속성을 사용하여 매핑됩니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean)">
          <source>When the security token is of type <ph id="ph1">`X509SecurityToken`</ph>, the X.509 certificate is mapped to a Windows account using its user principal name (UPN).</source>
          <target state="translated">보안 토큰이 <ph id="ph1">`X509SecurityToken`</ph> 형식이면 X.509 인증서는 UPN(사용자 계정 이름)을 사용하여 Windows 계정에 매핑됩니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /&gt;</ph> that verifies that the certificate is valid.</source>
          <target state="translated">인증서가 유효한지 확인하는 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to map the identity of the certificate to a Windows identity; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">인증서 ID를 Windows ID에 매핑하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to include the groups the Windows user belongs to in the <ph id="ph2">&lt;see cref="P:System.IdentityModel.Policy.AuthorizationContext.ClaimSets" /&gt;</ph> property that is constructed throughout the authentication process; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Windows 사용자가 속한 그룹을 인증 프로세스 과정에서 생성되는 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 속성에 포함시키려면 <ph id="ph2">&lt;see cref="P:System.IdentityModel.Policy.AuthorizationContext.ClaimSets" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" /&gt;</ph> class using the specified certificate validation method and indicates whether the identity of the certificate is mapped to a Windows identity and the Windows groups the user belongs to.</source>
          <target state="translated">지정된 인증서 유효성 검사 메서드를 사용하여 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" /&gt;</ph> 클래스의 새 인스턴스를 초가화하고, 인증서 ID가 Windows ID 및 해당 사용자가 속한 Windows 그룹에 매핑되는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean,System.Boolean)">
          <source>Pass <ph id="ph1">`false`</ph> to the <ph id="ph2">`includeWindowsGroups`</ph> parameter when the Windows group information is not required to improve performance.</source>
          <target state="translated">성능을 향상하는 데 Windows 그룹 정보가 필요하지 않으면 <ph id="ph1">`false`</ph>를 <ph id="ph2">`includeWindowsGroups`</ph> 매개 변수에 전달합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator&gt;</ph> class has several static properties, such as the <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A&gt;</ph> property that can be passed to the <ph id="ph3">`validator`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator&gt;</ph> 클래스에는 <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A&gt;</ph> 매개 변수에 전달할 수 있는 <ph id="ph3">`validator`</ph> 속성과 같은 여러 정적 속성이 있습니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean,System.Boolean)">
          <source>These properties provide common validation methods for X.509 certificates.</source>
          <target state="translated">이러한 속성은 X.509 인증서에 대한 일반적인 유효성 검사 메서드를 제공합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean,System.Boolean)">
          <source>When a custom validation method is required, derive a class from <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator&gt;</ph> and override the <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29&gt;</ph> method.</source>
          <target state="translated">사용자 지정 유효성 검사 메서드가 필요한 경우 <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator&gt;</ph>에서 클래스를 파생시켜 <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29&gt;</ph> 메서드를 재정의합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29&gt;</ph> method is called by the <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29&gt;</ph> 메서드는 <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> 메서드에 의해 호출됩니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean,System.Boolean)">
          <source>When <ph id="ph1">`true`</ph> is passed into the <ph id="ph2">`mapToWindows`</ph> parameter, the X.509 certificate is mapped to a Windows account and relevant claims are added to the <ph id="ph3">&lt;xref:System.IdentityModel.Policy.EvaluationContext&gt;</ph>, such as the Windows groups that the user belongs to.</source>
          <target state="translated"><ph id="ph1">`true`</ph>를 <ph id="ph2">`mapToWindows`</ph> 매개 변수로 전달하면 X.509 인증서가 Windows 계정에 매핑되고 관련 클레임은 <ph id="ph3">&lt;xref:System.IdentityModel.Policy.EvaluationContext&gt;</ph>(예: 해당 사용자가 속한 Windows 그룹)에 추가됩니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean,System.Boolean)">
          <source>When the security token is of type <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.X509WindowsSecurityToken&gt;</ph>, the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.X509WindowsSecurityToken.WindowsIdentity%2A&gt;</ph> property is using the identity that is specified in the token; otherwise, the X.509 certificate is mapped to a Windows identity using a Kerberos S4U logon based on the user principal name SubjectAltNames extension of the X.509 certificate.</source>
          <target state="translated">보안 토큰이 <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.X509WindowsSecurityToken&gt;</ph> 형식이면 <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.X509WindowsSecurityToken.WindowsIdentity%2A&gt;</ph> 속성은 토큰에 지정된 ID를 사용합니다. 보안 토큰이 이 형식이 아닐 경우 X.509 인증서는 X.509 인증서의 UPN(User Principal Name) SubjectAltNames 확장을 기반으로 하는 Kerberos S4U 로그온을 사용하여 Windows ID에 매핑됩니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph> to be validated.</source>
          <target state="translated">유효성을 검사할 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
          <source>Gets a value that indicates whether the specified security token can be validated by this security token authenticator.</source>
          <target state="translated">이 보안 토큰 인증자가 지정된 보안 토큰의 유효성을 검사할 수 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> when <ph id="ph2">&lt;paramref name="token" /&gt;</ph> is a <ph id="ph3">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /&gt;</ph> security token or a class that derives from <ph id="ph4">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /&gt;</ph>; otherwise, <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>이 <ph id="ph2">&lt;paramref name="token" /&gt;</ph> 보안 토큰 또는 <ph id="ph3">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /&gt;</ph>에서 파생된 클래스이면 <ph id="ph4">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph5">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore%2A&gt;</ph> method does not authenticate the security token; that is performed by the <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore%2A&gt;</ph> 메서드는 보안 토큰을 인증하지 않습니다. 보안 토큰의 인증은 <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> 메서드를 통해 수행됩니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount">
          <source>Gets a value that indicates whether to map the X.509 certificate to a Windows account.</source>
          <target state="translated">X.509 인증서를 Windows 계정에 매핑하는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to map the X.509 certificate to a Windows account; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">X.509 인증서를 Windows 계정에 매핑하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount%2A&gt;</ph> property can only be set in a constructor.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount%2A&gt;</ph> 속성은 생성자에서만 설정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount">
          <source>If transport-level SSL or HTTPS security is being used and mapping is already provided by the underlying security channel or by Internet Information Services (IIS), then that mapping is applied with no chain-validation.</source>
          <target state="translated">전송 수준 SSL 또는 HTTPS 보안이 사용되고 기본 보안 채널 또는 IIS(인터넷 정보 서비스)에서 매핑을 이미 제공한 경우 체인 유효성 검사 없이 이 매핑이 적용됩니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount">
          <source>Otherwise, prior to doing the mapping, the certificate is validated using a certificate chain, and the certificate must chain to an NT_AUTHORITY identity.</source>
          <target state="translated">그렇지 않으면 매핑을 수행하기 전에 인증서 체인을 사용하여 인증서의 유효성이 검사되며 인증서는 NT_AUTHORITY ID에 연결되어야 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount">
          <source>The chain structure used corresponds to the CERT_CHAIN_POLICY_NT_AUTH as defined in the <ph id="ph1">`CertVerifyCertificateChainPolicy`</ph> function (see the <bpt id="p1">[</bpt>CertVerifyCertificateChainPolicy<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=83570)</ept> function in the Cryptography SDK).</source>
          <target state="translated">에 정의 된 대로 CERT_CHAIN_POLICY_NT_AUTH에 해당 되는 사용 되는 체인 구조는 <ph id="ph1">`CertVerifyCertificateChainPolicy`</ph> 함수 (참조는 <bpt id="p1">[</bpt>CertVerifyCertificateChainPolicy<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=83570)</ept> 암호화 SDK에는 함수).</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount">
          <source>This behavior only occurs when mapping a certificate to a Windows account.</source>
          <target state="translated">이 동작은 인증서를 Windows 계정에 매핑할 때만 발생합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph> to be validated.</source>
          <target state="translated">유효성을 검사할 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
          <source>Authenticates the specified security token and returns the set of authorization policies for the security token.</source>
          <target state="translated">지정된 보안 토큰을 인증하고 보안 토큰의 권한 부여 정책 집합을 반환합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> of type <ph id="ph2">&lt;see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /&gt;</ph> that contains the set of authorization policies in effect for this application.</source>
          <target state="translated">이 응용 프로그램에 적용되는 권한 부여 정책의 집합을 포함하는 <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> 형식의 <ph id="ph2">&lt;see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
          <source>When the <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> method is overridden, follow these guidelines:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> 메서드를 재정의할 때 다음과 같은 지침을 따릅니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
          <source>When the security token passed into the <ph id="ph1">`token`</ph> parameter cannot be validated, throw the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenValidationException&gt;</ph> exception.</source>
          <target state="translated"><ph id="ph1">`token`</ph> 매개 변수로 전달된 보안 토큰의 유효성을 검사할 수 없는 경우 <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenValidationException&gt;</ph> 예외를 throw합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
          <source>When there are no authorization policies in effect for this application, return an empty <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> of type <ph id="ph2">&lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ph>.</source>
          <target state="translated">이 응용 프로그램에 적용되는 권한 부여 정책이 없는 경우 <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> 형식의 빈 <ph id="ph2">&lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ph>을 반환합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
          <source>When this method returns <ph id="ph1">`null`</ph>, Windows Communication Foundation throws a <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenValidationException&gt;</ph> exception.</source>
          <target state="translated">이 메서드가 반환 될 때 <ph id="ph1">`null`</ph>, Windows Communication Foundation throw 한 <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenValidationException&gt;</ph> 예외입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29&gt;</ph> method of the validation method specified in the constructor to authenticate the <ph id="ph3">`token`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> 메서드는 생성자에 지정된 유효성 검사 메서드의 <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29&gt;</ph> 메서드를 호출하여 <ph id="ph3">`token`</ph> 매개 변수를 인증합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>