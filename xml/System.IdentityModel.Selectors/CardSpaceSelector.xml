<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CardSpaceSelector.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-567ae5a" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7c5b04be-ac4f-4958-bcde-0afae0584552a1f921fe1f3d3902a9143cd0cc55adf94cbdea25.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a1f921fe1f3d3902a9143cd0cc55adf94cbdea25</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3507e865a3613c00760f25ad1045aaa11bae4dd8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/23/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Selectors.CardSpaceSelector">
          <source>Provides access to all CardSpace public operations that are supported in managed code.</source>
          <target state="translated">관리 코드에서 지원되는 모든 CardSpace public 연산에 액세스할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Selectors.CardSpaceSelector">
          <source>Generates a security token using the CardSpace system.</source>
          <target state="translated">CardSpace 시스템을 사용하여 보안 토큰을 생성합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.CardSpaceSelector.GetToken(System.IdentityModel.Selectors.CardSpacePolicyElement[],System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.CardSpacePolicyElement" /&gt;</ph> that describes the federated security chain that the client requires a final token to unwind.</source>
          <target state="translated">클라이언트가 최종 토큰에 해제하도록 요구하는 페더레이션 보안 체인을 설명하는 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.CardSpacePolicyElement" /&gt;</ph>의 배열입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.CardSpaceSelector.GetToken(System.IdentityModel.Selectors.CardSpacePolicyElement[],System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <source>Generates a security token using the <ph id="ph1">[!INCLUDE[infocard](~/includes/infocard-md.md)]</ph> system and the specified policy chain and token serializer.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[infocard](~/includes/infocard-md.md)]</ph> 시스템과 지정된 정책 체인 및 토큰 serializer를 사용하여 보안 토큰을 생성합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.CardSpaceSelector.GetToken(System.IdentityModel.Selectors.CardSpacePolicyElement[],System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.GenericXmlSecurityToken" /&gt;</ph> that represents the generated security token.</source>
          <target state="translated">생성된 보안 토큰을 나타내는 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.GenericXmlSecurityToken" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.CardSpaceSelector.GetToken(System.IdentityModel.Selectors.CardSpacePolicyElement[],System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <source><ph id="ph1">&lt;paramref name="policyChain" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="policyChain" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.CardSpaceSelector.GetToken(System.IdentityModel.Selectors.CardSpacePolicyElement[],System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.CardSpaceSelector.GetToken(System.IdentityModel.Selectors.CardSpacePolicyElement[],System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <source><ph id="ph1">&lt;paramref name="policyChain" /&gt;</ph> is zero length.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="policyChain" /&gt;</ph>의 길이가 0인 경우</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.CardSpaceSelector.GetToken(System.IdentityModel.Selectors.CardSpacePolicyElement[],System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.CardSpaceSelector.GetToken(System.IdentityModel.Selectors.CardSpacePolicyElement[],System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <source><ph id="ph1">&lt;paramref name="tokenSerializer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="tokenSerializer" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.CardSpaceSelector.GetToken(System.Xml.XmlElement,System.Collections.Generic.IEnumerable{System.Xml.XmlElement},System.Xml.XmlElement,System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph> that represents the endpoint address of the recipient where the token is presented.</source>
          <target state="translated">토큰이 있는 받는 사람의 끝점 주소를 나타내는 <ph id="ph1">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.CardSpaceSelector.GetToken(System.Xml.XmlElement,System.Collections.Generic.IEnumerable{System.Xml.XmlElement},System.Xml.XmlElement,System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of type <ph id="ph2">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph> that contains a policy fragment that specifies the token types and claims that are requested by the recipient.</source>
          <target state="translated">받는 사람이 요청한 클레임과 토큰 형식을 지정하는 정책 부분을 포함하는 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 형식의 <ph id="ph2">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.CardSpaceSelector.GetToken(System.Xml.XmlElement,System.Collections.Generic.IEnumerable{System.Xml.XmlElement},System.Xml.XmlElement,System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph> that represents the issuer of the token.</source>
          <target state="translated">토큰의 발급자를 나타내는 <ph id="ph1">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.CardSpaceSelector.GetToken(System.Xml.XmlElement,System.Collections.Generic.IEnumerable{System.Xml.XmlElement},System.Xml.XmlElement,System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <source>Generates a security token using the <ph id="ph1">[!INCLUDE[infocard](~/includes/infocard-md.md)]</ph> system and the specified endpoint, policy, token issuer, and token serializer.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[infocard](~/includes/infocard-md.md)]</ph> 시스템과 지정된 끝점, 정책, 토큰 발급자 및 토큰 serializer를 사용하여 보안 토큰을 생성합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.CardSpaceSelector.GetToken(System.Xml.XmlElement,System.Collections.Generic.IEnumerable{System.Xml.XmlElement},System.Xml.XmlElement,System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.GenericXmlSecurityToken" /&gt;</ph> that represents the generated security token.</source>
          <target state="translated">생성된 보안 토큰을 나타내는 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.GenericXmlSecurityToken" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.CardSpaceSelector.GetToken(System.Xml.XmlElement,System.Collections.Generic.IEnumerable{System.Xml.XmlElement},System.Xml.XmlElement,System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <source>A security token can be issued by the user or by a third party that is specified by the policy issuer.</source>
          <target state="translated">사용자나 정책 발급자가 지정한 타사가 보안 토큰을 발급할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.CardSpaceSelector.GetToken(System.Xml.XmlElement,System.Collections.Generic.IEnumerable{System.Xml.XmlElement},System.Xml.XmlElement,System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <source><ph id="ph1">&lt;paramref name="endpoint" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="endpoint" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.CardSpaceSelector.GetToken(System.Xml.XmlElement,System.Collections.Generic.IEnumerable{System.Xml.XmlElement},System.Xml.XmlElement,System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.CardSpaceSelector.GetToken(System.Xml.XmlElement,System.Collections.Generic.IEnumerable{System.Xml.XmlElement},System.Xml.XmlElement,System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <source><ph id="ph1">&lt;paramref name="policy" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="policy" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.CardSpaceSelector.GetToken(System.Xml.XmlElement,System.Collections.Generic.IEnumerable{System.Xml.XmlElement},System.Xml.XmlElement,System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.CardSpaceSelector.GetToken(System.Xml.XmlElement,System.Collections.Generic.IEnumerable{System.Xml.XmlElement},System.Xml.XmlElement,System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <source><ph id="ph1">&lt;paramref name="tokenSerializer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="tokenSerializer" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.CardSpaceSelector.Import(System.String)">
          <source>The name of the file to import.</source>
          <target state="translated">가져올 파일의 이름입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.CardSpaceSelector.Import(System.String)">
          <source>Displays the <ph id="ph1">&lt;paramref name="Import Card" /&gt;</ph> user interface.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Import Card" /&gt;</ph> 사용자 인터페이스를 표시합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.CardSpaceSelector.Import(System.String)">
          <source><ph id="ph1">&lt;paramref name="fileName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="fileName" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.CardSpaceSelector.Import(System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.CardSpaceSelector.Import(System.String)">
          <source><ph id="ph1">&lt;paramref name="fileName" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="fileName" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.CardSpaceSelector.Manage">
          <source>Displays the <ph id="ph1">[!INCLUDE[infocard](~/includes/infocard-md.md)]</ph> management user interface that allows the user to create, delete, rename, and modify the card.</source>
          <target state="translated">카드를 만들고, 삭제하고, 수정하고, 카드의 이름을 바꿀 수 있도록 하는 <ph id="ph1">[!INCLUDE[infocard](~/includes/infocard-md.md)]</ph> 관리 사용자 인터페이스를 표시합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.CardSpaceSelector.Manage">
          <source><ph id="ph1">[!INCLUDE[infocard](~/includes/infocard-md.md)]</ph> does not provide programmatic access to the cards for life-cycle management for privacy and security reasons.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[infocard](~/includes/infocard-md.md)]</ph>에서는 개인 정보 보호와 보안상의 이유 때문에 수명 주기 관리를 위해 프로그래밍 방식으로 카드에 액세스할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.CardSpaceSelector.Manage">
          <source>For example, you cannot programmatically create, delete, or enumerate cards.</source>
          <target state="translated">예를 들어, 프로그래밍 방식으로 카드를 만들거나 삭제하거나 열거할 수 없습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>