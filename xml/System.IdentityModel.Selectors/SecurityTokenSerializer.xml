<Type Name="SecurityTokenSerializer" FullName="System.IdentityModel.Selectors.SecurityTokenSerializer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ec09f4814fee2ff0edbff73062a86e1bb406f732" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37651647" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SecurityTokenSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SecurityTokenSerializer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SecurityTokenSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityTokenSerializer abstract" />
  <TypeSignature Language="F#" Value="type SecurityTokenSerializer = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="76d4f-101">키 식별자, 키 식별자 절 및 보안 토큰을 읽고 쓸 수 있는 클래스를 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="76d4f-101">Represents a class that can read and write key identifiers, key identifier clauses, and security tokens.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76d4f-102"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer>, <xref:System.IdentityModel.Tokens.SecurityKeyIdentifier> 및 <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> 클래스를 XML로 읽고 쓰려면 <xref:System.IdentityModel.Tokens.SecurityToken> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="76d4f-102">Use the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class to read and write <xref:System.IdentityModel.Tokens.SecurityKeyIdentifier>, <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause>, and <xref:System.IdentityModel.Tokens.SecurityToken> classes as XML.</span></span> <span data-ttu-id="76d4f-103"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 클래스에는 이 클래스가 이러한 엔터티를 읽고 쓸 수 있는지 여부를 확인하고 이러한 엔터티를 실제로 읽고 쓰는 메서드가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="76d4f-103">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class has methods to determine whether this class can read and write these entities and to actually read and write them.</span></span> <span data-ttu-id="76d4f-104">보안 토큰의 경우 이러한 메서드는 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadToken%2A>, <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteToken%2A>, <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadToken%2A> 및 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteToken%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="76d4f-104">For security tokens, these methods are <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadToken%2A>, <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteToken%2A>, <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadToken%2A>, and <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteToken%2A>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityTokenSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecurityTokenSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="76d4f-105">
            <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-105">Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanReadKeyIdentifier">
      <MemberSignature Language="C#" Value="public bool CanReadKeyIdentifier (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanReadKeyIdentifier(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifier(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanReadKeyIdentifier (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanReadKeyIdentifier(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.CanReadKeyIdentifier : System.Xml.XmlReader -&gt; bool" Usage="securityTokenSerializer.CanReadKeyIdentifier reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="76d4f-106">키 식별자를 읽을 <see cref="T:System.Xml.XmlReader" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-106">An <see cref="T:System.Xml.XmlReader" /> to read the key identifier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76d4f-107">이 serializer가 지정된 XML 판독기가 참조하는 <see langword="&lt;KeyIdentifier&gt;" /> 요소를 읽을 수 있는지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-107">Determines whether this serializer can read the <see langword="&lt;KeyIdentifier&gt;" /> element referred to by the specified XML reader.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="76d4f-108">지정된 <see langword="true" /> XML 요소를 읽을 수 있으면 <see langword="&lt;KeyIdentifier&gt;" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-108">
              <see langword="true" /> when the specified <see langword="&lt;KeyIdentifier&gt;" /> XML element can be read; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76d4f-109"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 클래스에서 파생된 클래스는 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierCore%28System.Xml.XmlReader%29> 메서드를 재정의해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="76d4f-109">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierCore%28System.Xml.XmlReader%29> method.</span></span> <span data-ttu-id="76d4f-110"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifier%28System.Xml.XmlReader%29> 메서드는 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierCore%2A> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="76d4f-110">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifier%28System.Xml.XmlReader%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierCore%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="76d4f-111">
            <paramref name="reader" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-111">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanReadKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public bool CanReadKeyIdentifierClause (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanReadKeyIdentifierClause(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClause(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanReadKeyIdentifierClause (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanReadKeyIdentifierClause(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.CanReadKeyIdentifierClause : System.Xml.XmlReader -&gt; bool" Usage="securityTokenSerializer.CanReadKeyIdentifierClause reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="76d4f-112">키 식별자 절을 읽을 <see cref="T:System.Xml.XmlReader" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-112">An <see cref="T:System.Xml.XmlReader" /> to read the key identifier clause.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76d4f-113">이 serializer가 지정된 XML 판독기가 참조하는 <see langword="&lt;KeyIdentifier&gt;" /> 요소의 절을 읽을 수 있는지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-113">Determines whether this serializer can read a clause in a <see langword="&lt;KeyIdentifier&gt;" /> element referred to by the specified XML reader.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="76d4f-114">지정된 키 식별자 절을 읽을 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-114">
              <see langword="true" /> when the specified key identifier clause can be read; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76d4f-115"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 클래스에서 파생된 클래스는 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClauseCore%28System.Xml.XmlReader%29> 메서드를 재정의해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="76d4f-115">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClauseCore%28System.Xml.XmlReader%29> method.</span></span> <span data-ttu-id="76d4f-116"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClause%28System.Xml.XmlReader%29> 메서드는 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClauseCore%2A> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="76d4f-116">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClause%28System.Xml.XmlReader%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClauseCore%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="76d4f-117">
            <paramref name="reader" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-117">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanReadKeyIdentifierClauseCore">
      <MemberSignature Language="C#" Value="protected abstract bool CanReadKeyIdentifierClauseCore (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CanReadKeyIdentifierClauseCore(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClauseCore(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CanReadKeyIdentifierClauseCore (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool CanReadKeyIdentifierClauseCore(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member CanReadKeyIdentifierClauseCore : System.Xml.XmlReader -&gt; bool" Usage="securityTokenSerializer.CanReadKeyIdentifierClauseCore reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="76d4f-118">키 식별자 절을 읽을 <see cref="T:System.Xml.XmlReader" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-118">An <see cref="T:System.Xml.XmlReader" /> to read the key identifier clause.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76d4f-119">이 serializer가 지정된 XML 판독기가 참조하는 <see langword="&lt;KeyIdentifier&gt;" /> 요소를 읽을 수 있는지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-119">Determines whether this serializer can read the <see langword="&lt;KeyIdentifier&gt;" /> element referred to by the specified XML reader.</span>
          </span>
          <span data-ttu-id="76d4f-120">기본 클래스에서 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-120">Called by the base class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="76d4f-121">지정된 <see langword="true" /> 요소를 읽을 수 있으면 <see langword="&lt;KeyIdentifier&gt;" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-121">
              <see langword="true" /> when the specified <see langword="&lt;KeyIdentifier&gt;" /> element can be read; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76d4f-122"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 클래스에서 파생된 클래스는 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClauseCore%28System.Xml.XmlReader%29> 메서드를 재정의해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="76d4f-122">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClauseCore%28System.Xml.XmlReader%29> method.</span></span> <span data-ttu-id="76d4f-123"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClause%28System.Xml.XmlReader%29> 메서드는 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClauseCore%2A> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="76d4f-123">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClause%28System.Xml.XmlReader%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClauseCore%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="76d4f-124">
            <paramref name="reader" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-124">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanReadKeyIdentifierCore">
      <MemberSignature Language="C#" Value="protected abstract bool CanReadKeyIdentifierCore (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CanReadKeyIdentifierCore(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierCore(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CanReadKeyIdentifierCore (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool CanReadKeyIdentifierCore(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member CanReadKeyIdentifierCore : System.Xml.XmlReader -&gt; bool" Usage="securityTokenSerializer.CanReadKeyIdentifierCore reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="76d4f-125">키 식별자를 읽을 <see cref="T:System.Xml.XmlReader" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-125">An <see cref="T:System.Xml.XmlReader" /> to read the key identifier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76d4f-126">이 serializer가 지정된 XML 판독기가 참조하는 <see langword="&lt;KeyIdentifier&gt;" /> 요소를 읽을 수 있는지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-126">Determines whether this serializer can read the <see langword="&lt;KeyIdentifier&gt;" /> element referred to by the specified XML reader.</span>
          </span>
          <span data-ttu-id="76d4f-127">기본 클래스에서 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-127">Called by the base class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="76d4f-128">지정된 키 식별자 절을 읽을 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-128">
              <see langword="true" /> when the specified key identifier clause can be read; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76d4f-129"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 클래스에서 파생된 클래스는 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierCore%28System.Xml.XmlReader%29> 메서드를 재정의해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="76d4f-129">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierCore%28System.Xml.XmlReader%29> method.</span></span> <span data-ttu-id="76d4f-130"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifier%28System.Xml.XmlReader%29> 메서드는 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierCore%2A> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="76d4f-130">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifier%28System.Xml.XmlReader%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierCore%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="76d4f-131">
            <paramref name="reader" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-131">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanReadToken">
      <MemberSignature Language="C#" Value="public bool CanReadToken (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanReadToken(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadToken(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanReadToken (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanReadToken(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.CanReadToken : System.Xml.XmlReader -&gt; bool" Usage="securityTokenSerializer.CanReadToken reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="76d4f-132">보안 토큰을 읽을 <see cref="T:System.Xml.XmlReader" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-132">An <see cref="T:System.Xml.XmlReader" /> to read the security token.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76d4f-133">이 serializer가 지정된 XML 판독기가 가리키는 보안 토큰을 읽을 수 있는지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-133">Determines whether this serializer can read the security token pointed at by the specified XML reader.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="76d4f-134">보안 토큰을 읽을 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-134">
              <see langword="true" /> when the security token can be read; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76d4f-135"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 클래스에서 파생된 클래스는 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadTokenCore%28System.Xml.XmlReader%29> 메서드를 재정의해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="76d4f-135">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadTokenCore%28System.Xml.XmlReader%29> method.</span></span> <span data-ttu-id="76d4f-136"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadToken%28System.Xml.XmlReader%29> 메서드는 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadTokenCore%2A> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="76d4f-136">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadToken%28System.Xml.XmlReader%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadTokenCore%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="76d4f-137">
            <paramref name="reader" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-137">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanReadTokenCore">
      <MemberSignature Language="C#" Value="protected abstract bool CanReadTokenCore (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CanReadTokenCore(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadTokenCore(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CanReadTokenCore (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool CanReadTokenCore(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member CanReadTokenCore : System.Xml.XmlReader -&gt; bool" Usage="securityTokenSerializer.CanReadTokenCore reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="76d4f-138">보안 토큰을 읽을 <see cref="T:System.Xml.XmlReader" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-138">An <see cref="T:System.Xml.XmlReader" /> to read the security token.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76d4f-139">이 serializer가 지정된 XML 판독기가 가리키는 보안 토큰을 읽을 수 있는지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-139">Determines whether this serializer can read the security token pointed at by the specified XML reader.</span>
          </span>
          <span data-ttu-id="76d4f-140">기본 클래스에서 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-140">Called by the base class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="76d4f-141">보안 토큰을 읽을 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-141">
              <see langword="true" /> when the security token can be read; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76d4f-142"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 클래스에서 파생된 클래스는 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadTokenCore%28System.Xml.XmlReader%29> 메서드를 재정의해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="76d4f-142">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadTokenCore%28System.Xml.XmlReader%29> method.</span></span> <span data-ttu-id="76d4f-143"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadToken%28System.Xml.XmlReader%29> 메서드는 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadTokenCore%2A> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="76d4f-143">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadToken%28System.Xml.XmlReader%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadTokenCore%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="76d4f-144">
            <paramref name="reader" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-144">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanWriteKeyIdentifier">
      <MemberSignature Language="C#" Value="public bool CanWriteKeyIdentifier (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanWriteKeyIdentifier(class System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifier(System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanWriteKeyIdentifier (keyIdentifier As SecurityKeyIdentifier) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanWriteKeyIdentifier(System::IdentityModel::Tokens::SecurityKeyIdentifier ^ keyIdentifier);" />
      <MemberSignature Language="F#" Value="member this.CanWriteKeyIdentifier : System.IdentityModel.Tokens.SecurityKeyIdentifier -&gt; bool" Usage="securityTokenSerializer.CanWriteKeyIdentifier keyIdentifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" />
      </Parameters>
      <Docs>
        <param name="keyIdentifier">
          <span data-ttu-id="76d4f-145">쓸 키 식별자를 나타내는 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-145">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that represents the key identifier to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76d4f-146">이 serializer가 지정된 키 식별자를 쓸 수 있는지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-146">Determines whether this serializer can write the specified key identifier.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="76d4f-147">이 serializer가 지정된 키 식별자를 쓸 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-147">
              <see langword="true" /> when this serializer can write the specified key identifier; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76d4f-148"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 클래스에서 파생된 클래스는 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierCore%28System.IdentityModel.Tokens.SecurityKeyIdentifier%29> 메서드를 재정의해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="76d4f-148">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierCore%28System.IdentityModel.Tokens.SecurityKeyIdentifier%29> method.</span></span> <span data-ttu-id="76d4f-149"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifier%28System.IdentityModel.Tokens.SecurityKeyIdentifier%29> 메서드는 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierCore%28System.IdentityModel.Tokens.SecurityKeyIdentifier%29> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="76d4f-149">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifier%28System.IdentityModel.Tokens.SecurityKeyIdentifier%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierCore%28System.IdentityModel.Tokens.SecurityKeyIdentifier%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="76d4f-150">
            <paramref name="keyIdentifier" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-150">
              <paramref name="keyIdentifier" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanWriteKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public bool CanWriteKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanWriteKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanWriteKeyIdentifierClause (keyIdentifierClause As SecurityKeyIdentifierClause) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanWriteKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" />
      <MemberSignature Language="F#" Value="member this.CanWriteKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool" Usage="securityTokenSerializer.CanWriteKeyIdentifierClause keyIdentifierClause" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause">
          <span data-ttu-id="76d4f-151">쓸 키 식별자 절을 나타내는 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-151">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that represents the key identifier clause to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76d4f-152">이 serializer가 지정된 키 식별자 절을 쓸 수 있는지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-152">Determines whether this serializer can write the specified key identifier clause.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="76d4f-153">이 serializer가 지정된 키 식별자 절을 쓸 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-153">
              <see langword="true" /> when this serializer can write the specified key identifier clause; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76d4f-154"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 클래스에서 파생된 클래스는 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClauseCore%28System.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> 메서드를 재정의해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="76d4f-154">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClauseCore%28System.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> method.</span></span> <span data-ttu-id="76d4f-155"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClause%28System.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> 메서드는 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClauseCore%28System.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="76d4f-155">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClause%28System.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClauseCore%28System.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="76d4f-156">
            <paramref name="keyIdentifierClause" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-156">
              <paramref name="keyIdentifierClause" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanWriteKeyIdentifierClauseCore">
      <MemberSignature Language="C#" Value="protected abstract bool CanWriteKeyIdentifierClauseCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CanWriteKeyIdentifierClauseCore(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClauseCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CanWriteKeyIdentifierClauseCore (keyIdentifierClause As SecurityKeyIdentifierClause) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool CanWriteKeyIdentifierClauseCore(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" />
      <MemberSignature Language="F#" Value="abstract member CanWriteKeyIdentifierClauseCore : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool" Usage="securityTokenSerializer.CanWriteKeyIdentifierClauseCore keyIdentifierClause" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause">
          <span data-ttu-id="76d4f-157">쓸 키 식별자 절을 나타내는 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-157">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that represents the key identifier clause to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76d4f-158">이 serializer가 지정된 키 식별자 절을 쓸 수 있는지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-158">Determines whether this serializer can write the specified key identifier clause.</span>
          </span>
          <span data-ttu-id="76d4f-159">기본 클래스에서 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-159">Called by the base class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="76d4f-160">이 serializer가 지정된 키 식별자 절을 쓸 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-160">
              <see langword="true" /> when this serializer can write the specified key identifier clause; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76d4f-161"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 클래스에서 파생된 클래스는 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClauseCore%28System.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> 메서드를 재정의해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="76d4f-161">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClauseCore%28System.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> method.</span></span> <span data-ttu-id="76d4f-162"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClause%28System.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> 메서드는 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClauseCore%28System.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="76d4f-162">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClause%28System.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClauseCore%28System.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="76d4f-163">
            <paramref name="keyIdentifierClause" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-163">
              <paramref name="keyIdentifierClause" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanWriteKeyIdentifierCore">
      <MemberSignature Language="C#" Value="protected abstract bool CanWriteKeyIdentifierCore (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CanWriteKeyIdentifierCore(class System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierCore(System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CanWriteKeyIdentifierCore (keyIdentifier As SecurityKeyIdentifier) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool CanWriteKeyIdentifierCore(System::IdentityModel::Tokens::SecurityKeyIdentifier ^ keyIdentifier);" />
      <MemberSignature Language="F#" Value="abstract member CanWriteKeyIdentifierCore : System.IdentityModel.Tokens.SecurityKeyIdentifier -&gt; bool" Usage="securityTokenSerializer.CanWriteKeyIdentifierCore keyIdentifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" />
      </Parameters>
      <Docs>
        <param name="keyIdentifier">
          <span data-ttu-id="76d4f-164">쓸 키 식별자를 나타내는 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-164">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that represents the key identifier to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76d4f-165">이 serializer가 지정된 키 식별자를 쓸 수 있는지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-165">Determines whether this serializer can write the specified key identifier.</span>
          </span>
          <span data-ttu-id="76d4f-166">기본 클래스에서 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-166">Called by the base class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="76d4f-167">이 serializer가 지정된 키 식별자를 쓸 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-167">
              <see langword="true" /> when this serializer can write the specified key identifier; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76d4f-168"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 클래스에서 파생된 클래스는 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierCore%28System.IdentityModel.Tokens.SecurityKeyIdentifier%29> 메서드를 재정의해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="76d4f-168">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierCore%28System.IdentityModel.Tokens.SecurityKeyIdentifier%29> method.</span></span> <span data-ttu-id="76d4f-169"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifier%28System.IdentityModel.Tokens.SecurityKeyIdentifier%29> 메서드는 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierCore%28System.IdentityModel.Tokens.SecurityKeyIdentifier%29> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="76d4f-169">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifier%28System.IdentityModel.Tokens.SecurityKeyIdentifier%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierCore%28System.IdentityModel.Tokens.SecurityKeyIdentifier%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="76d4f-170">
            <paramref name="keyIdentifier" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-170">
              <paramref name="keyIdentifier" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanWriteToken">
      <MemberSignature Language="C#" Value="public bool CanWriteToken (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanWriteToken(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteToken(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanWriteToken (token As SecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanWriteToken(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="member this.CanWriteToken : System.IdentityModel.Tokens.SecurityToken -&gt; bool" Usage="securityTokenSerializer.CanWriteToken token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token">
          <span data-ttu-id="76d4f-171">XML로 변환할 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-171">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> to convert to XML.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76d4f-172">이 serializer가 지정된 보안 토큰을 XML로 쓸 수 있는지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-172">Determines whether this serializer can write the specified security token to XML.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="76d4f-173">보안 토큰을 쓸 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-173">
              <see langword="true" /> when the security token can be written; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76d4f-174"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 클래스에서 파생된 클래스는 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteTokenCore%28System.IdentityModel.Tokens.SecurityToken%29> 메서드를 재정의해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="76d4f-174">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteTokenCore%28System.IdentityModel.Tokens.SecurityToken%29> method.</span></span> <span data-ttu-id="76d4f-175"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteToken%28System.IdentityModel.Tokens.SecurityToken%29> 메서드는 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteTokenCore%28System.IdentityModel.Tokens.SecurityToken%29> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="76d4f-175">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteToken%28System.IdentityModel.Tokens.SecurityToken%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteTokenCore%28System.IdentityModel.Tokens.SecurityToken%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="76d4f-176">
            <paramref name="token" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-176">
              <paramref name="token" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanWriteTokenCore">
      <MemberSignature Language="C#" Value="protected abstract bool CanWriteTokenCore (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CanWriteTokenCore(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteTokenCore(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CanWriteTokenCore (token As SecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool CanWriteTokenCore(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="abstract member CanWriteTokenCore : System.IdentityModel.Tokens.SecurityToken -&gt; bool" Usage="securityTokenSerializer.CanWriteTokenCore token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token">
          <span data-ttu-id="76d4f-177">XML로 변환할 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-177">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> to convert to XML.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76d4f-178">이 serializer가 지정된 보안 토큰을 XML로 쓸 수 있는지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-178">Determines whether this serializer can write the specified security token to XML.</span>
          </span>
          <span data-ttu-id="76d4f-179">기본 클래스에서 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-179">Called by the base class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="76d4f-180">보안 토큰을 쓸 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-180">
              <see langword="true" /> when the security token can be written; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76d4f-181"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 클래스에서 파생된 클래스는 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteTokenCore%28System.IdentityModel.Tokens.SecurityToken%29> 메서드를 재정의해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="76d4f-181">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteTokenCore%28System.IdentityModel.Tokens.SecurityToken%29> method.</span></span> <span data-ttu-id="76d4f-182"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteToken%28System.IdentityModel.Tokens.SecurityToken%29> 메서드는 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteTokenCore%28System.IdentityModel.Tokens.SecurityToken%29> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="76d4f-182">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteToken%28System.IdentityModel.Tokens.SecurityToken%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteTokenCore%28System.IdentityModel.Tokens.SecurityToken%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="76d4f-183">
            <paramref name="token" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-183">
              <paramref name="token" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadKeyIdentifier">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityKeyIdentifier ReadKeyIdentifier (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Tokens.SecurityKeyIdentifier ReadKeyIdentifier(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifier(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadKeyIdentifier (reader As XmlReader) As SecurityKeyIdentifier" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IdentityModel::Tokens::SecurityKeyIdentifier ^ ReadKeyIdentifier(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.ReadKeyIdentifier : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.SecurityKeyIdentifier" Usage="securityTokenSerializer.ReadKeyIdentifier reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="76d4f-184">키 식별자를 읽을 <see cref="T:System.Xml.XmlReader" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-184">An <see cref="T:System.Xml.XmlReader" /> to read the key identifier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76d4f-185">지정된 XML 판독기를 사용하여 키 식별자를 읽습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-185">Reads the key identifier using specified XML reader.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="76d4f-186">읽은 키 식별자를 나타내는 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-186">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that represents the key identifier that is read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76d4f-187"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 클래스에서 파생된 클래스는 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierCore%28System.Xml.XmlReader%29> 메서드를 재정의해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="76d4f-187">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierCore%28System.Xml.XmlReader%29> method.</span></span> <span data-ttu-id="76d4f-188"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifier%28System.Xml.XmlReader%29> 메서드는 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierCore%28System.Xml.XmlReader%29> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="76d4f-188">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifier%28System.Xml.XmlReader%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierCore%28System.Xml.XmlReader%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="76d4f-189">
            <paramref name="reader" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-189">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClause (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClause(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClause(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadKeyIdentifierClause (reader As XmlReader) As SecurityKeyIdentifierClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ ReadKeyIdentifierClause(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.ReadKeyIdentifierClause : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Usage="securityTokenSerializer.ReadKeyIdentifierClause reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="76d4f-190">키 식별자를 읽을 <see cref="T:System.Xml.XmlReader" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-190">An <see cref="T:System.Xml.XmlReader" /> to read the key identifier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76d4f-191">지정된 XML 판독기를 사용하여 키 식별자 절을 읽습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-191">Reads the key identifier clause using specified XML reader.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="76d4f-192">읽은 키 식별자를 나타내는 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-192">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that represents the key identifier that is read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76d4f-193"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 클래스에서 파생된 클래스는 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClauseCore%28System.Xml.XmlReader%29> 메서드를 재정의해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="76d4f-193">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClauseCore%28System.Xml.XmlReader%29> method.</span></span> <span data-ttu-id="76d4f-194"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClause%28System.Xml.XmlReader%29> 메서드는 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClauseCore%28System.Xml.XmlReader%29> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="76d4f-194">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClause%28System.Xml.XmlReader%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClauseCore%28System.Xml.XmlReader%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="76d4f-195">
            <paramref name="reader" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-195">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadKeyIdentifierClauseCore">
      <MemberSignature Language="C#" Value="protected abstract System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClauseCore (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClauseCore(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClauseCore(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function ReadKeyIdentifierClauseCore (reader As XmlReader) As SecurityKeyIdentifierClause" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ ReadKeyIdentifierClauseCore(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member ReadKeyIdentifierClauseCore : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Usage="securityTokenSerializer.ReadKeyIdentifierClauseCore reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="76d4f-196">키 식별자를 읽을 <see cref="T:System.Xml.XmlReader" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-196">An <see cref="T:System.Xml.XmlReader" /> to read the key identifier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76d4f-197">지정된 XML 판독기를 사용하여 키 식별자 절을 읽습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-197">Reads the key identifier clause using specified XML reader.</span>
          </span>
          <span data-ttu-id="76d4f-198">기본 클래스에서 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-198">Called by the base class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="76d4f-199">읽은 키 식별자를 나타내는 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-199">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that represents the key identifier that is read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76d4f-200"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 클래스에서 파생된 클래스는 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClauseCore%28System.Xml.XmlReader%29> 메서드를 재정의해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="76d4f-200">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClauseCore%28System.Xml.XmlReader%29> method.</span></span> <span data-ttu-id="76d4f-201"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClause%28System.Xml.XmlReader%29> 메서드는 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClauseCore%28System.Xml.XmlReader%29> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="76d4f-201">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClause%28System.Xml.XmlReader%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClauseCore%28System.Xml.XmlReader%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="76d4f-202">
            <paramref name="reader" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-202">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadKeyIdentifierCore">
      <MemberSignature Language="C#" Value="protected abstract System.IdentityModel.Tokens.SecurityKeyIdentifier ReadKeyIdentifierCore (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityKeyIdentifier ReadKeyIdentifierCore(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierCore(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function ReadKeyIdentifierCore (reader As XmlReader) As SecurityKeyIdentifier" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::IdentityModel::Tokens::SecurityKeyIdentifier ^ ReadKeyIdentifierCore(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member ReadKeyIdentifierCore : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.SecurityKeyIdentifier" Usage="securityTokenSerializer.ReadKeyIdentifierCore reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="76d4f-203">키 식별자를 읽을 <see cref="T:System.Xml.XmlReader" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-203">An <see cref="T:System.Xml.XmlReader" /> to read the key identifier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76d4f-204">지정된 XML 판독기를 사용하여 키 식별자 절을 읽습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-204">Reads the key identifier clause using specified XML reader.</span>
          </span>
          <span data-ttu-id="76d4f-205">기본 클래스에서 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-205">Called by the base class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="76d4f-206">읽은 키 식별자를 나타내는 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-206">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that represents the key identifier that is read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76d4f-207"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 클래스에서 파생된 클래스는 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierCore%28System.Xml.XmlReader%29> 메서드를 재정의해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="76d4f-207">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierCore%28System.Xml.XmlReader%29> method.</span></span> <span data-ttu-id="76d4f-208"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifier%28System.Xml.XmlReader%29> 메서드는 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierCore%28System.Xml.XmlReader%29> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="76d4f-208">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifier%28System.Xml.XmlReader%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierCore%28System.Xml.XmlReader%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="76d4f-209">
            <paramref name="reader" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-209">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadToken">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader, System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Tokens.SecurityToken ReadToken(class System.Xml.XmlReader reader, class System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadToken (reader As XmlReader, tokenResolver As SecurityTokenResolver) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IdentityModel::Tokens::SecurityToken ^ ReadToken(System::Xml::XmlReader ^ reader, System::IdentityModel::Selectors::SecurityTokenResolver ^ tokenResolver);" />
      <MemberSignature Language="F#" Value="member this.ReadToken : System.Xml.XmlReader * System.IdentityModel.Selectors.SecurityTokenResolver -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="securityTokenSerializer.ReadToken (reader, tokenResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="tokenResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="76d4f-210">보안 토큰을 읽을 <see cref="T:System.Xml.XmlReader" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-210">An <see cref="T:System.Xml.XmlReader" /> to read the security token.</span>
          </span>
        </param>
        <param name="tokenResolver">
          <span data-ttu-id="76d4f-211">보안 토큰 형식을 확인하는 <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-211">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that determines the security token type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76d4f-212">지정된 XML 판독기가 가리키는 보안 토큰을 읽습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-212">Reads the security token pointed at by the specified XML reader.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="76d4f-213">읽은 보안 토큰을 나타내는 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-213">A <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the security token that is read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76d4f-214"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 클래스에서 파생된 클래스는 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadTokenCore%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> 메서드를 재정의해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="76d4f-214">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadTokenCore%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> method.</span></span> <span data-ttu-id="76d4f-215"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> 메서드는 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadTokenCore%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="76d4f-215">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadTokenCore%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="76d4f-216">
            <paramref name="reader" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-216">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="76d4f-217">-또는-  <paramref name="tokenResolver" />이 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-217">-or-  <paramref name="tokenResolver" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadTokenCore">
      <MemberSignature Language="C#" Value="protected abstract System.IdentityModel.Tokens.SecurityToken ReadTokenCore (System.Xml.XmlReader reader, System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken ReadTokenCore(class System.Xml.XmlReader reader, class System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadTokenCore(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function ReadTokenCore (reader As XmlReader, tokenResolver As SecurityTokenResolver) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::IdentityModel::Tokens::SecurityToken ^ ReadTokenCore(System::Xml::XmlReader ^ reader, System::IdentityModel::Selectors::SecurityTokenResolver ^ tokenResolver);" />
      <MemberSignature Language="F#" Value="abstract member ReadTokenCore : System.Xml.XmlReader * System.IdentityModel.Selectors.SecurityTokenResolver -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="securityTokenSerializer.ReadTokenCore (reader, tokenResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="tokenResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="76d4f-218">보안 토큰을 읽을 <see cref="T:System.Xml.XmlReader" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-218">An <see cref="T:System.Xml.XmlReader" /> to read the security token.</span>
          </span>
        </param>
        <param name="tokenResolver">
          <span data-ttu-id="76d4f-219">보안 토큰 형식을 확인하는 <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-219">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that determines the security token type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76d4f-220">지정된 XML 판독기가 가리키는 보안 토큰을 읽습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-220">Reads the security token pointed at by the specified XML reader.</span>
          </span>
          <span data-ttu-id="76d4f-221">기본 클래스에서 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-221">Called by the base class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="76d4f-222">읽은 보안 토큰을 나타내는 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-222">A <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the security token that is read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76d4f-223"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 클래스에서 파생된 클래스는 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadTokenCore%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> 메서드를 재정의해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="76d4f-223">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadTokenCore%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> method.</span></span> <span data-ttu-id="76d4f-224"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> 메서드는 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadTokenCore%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="76d4f-224">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadTokenCore%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="76d4f-225">
            <paramref name="reader" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-225">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="76d4f-226">-또는-  <paramref name="tokenResolver" />이 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-226">-or-  <paramref name="tokenResolver" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteKeyIdentifier">
      <MemberSignature Language="C#" Value="public void WriteKeyIdentifier (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteKeyIdentifier(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifier(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteKeyIdentifier (writer As XmlWriter, keyIdentifier As SecurityKeyIdentifier)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteKeyIdentifier(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityKeyIdentifier ^ keyIdentifier);" />
      <MemberSignature Language="F#" Value="member this.WriteKeyIdentifier : System.Xml.XmlWriter * System.IdentityModel.Tokens.SecurityKeyIdentifier -&gt; unit" Usage="securityTokenSerializer.WriteKeyIdentifier (writer, keyIdentifier)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="keyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="76d4f-227">키 식별자를 쓸 <see cref="T:System.Xml.XmlWriter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-227">A <see cref="T:System.Xml.XmlWriter" /> to write the key identifier.</span>
          </span>
        </param>
        <param name="keyIdentifier">
          <span data-ttu-id="76d4f-228">쓸 키 식별자를 나타내는 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-228">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that represents the key identifier to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76d4f-229">지정된 XML 작성기를 사용하여 지정된 키 식별자를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-229">Writes the specified key identifier using the specified XML writer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76d4f-230"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 클래스에서 파생된 클래스는 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifier%29> 메서드를 재정의해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="76d4f-230">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifier%29> method.</span></span> <span data-ttu-id="76d4f-231"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifier%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifier%29> 메서드는 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifier%29> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="76d4f-231">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifier%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifier%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifier%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="76d4f-232">
            <paramref name="keyIdentifier" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-232">
              <paramref name="keyIdentifier" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="76d4f-233">-또는-  <paramref name="writer" />이 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-233">-or-  <paramref name="writer" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public void WriteKeyIdentifierClause (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteKeyIdentifierClause(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteKeyIdentifierClause (writer As XmlWriter, keyIdentifierClause As SecurityKeyIdentifierClause)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteKeyIdentifierClause(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" />
      <MemberSignature Language="F#" Value="member this.WriteKeyIdentifierClause : System.Xml.XmlWriter * System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; unit" Usage="securityTokenSerializer.WriteKeyIdentifierClause (writer, keyIdentifierClause)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="76d4f-234">키 식별자 절을 쓸 <see cref="T:System.Xml.XmlWriter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-234">A <see cref="T:System.Xml.XmlWriter" /> to write the key identifier clause.</span>
          </span>
        </param>
        <param name="keyIdentifierClause">
          <span data-ttu-id="76d4f-235">쓸 키 식별자 절을 나타내는 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-235">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that represents the key identifier clause to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76d4f-236">지정한 XML 작성기를 사용하여 지정된 키 식별자 절을 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-236">Writes the specified key identifier clause using the specified XML writer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76d4f-237"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 클래스에서 파생된 클래스는 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClauseCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> 메서드를 재정의해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="76d4f-237">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClauseCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> method.</span></span> <span data-ttu-id="76d4f-238"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClause%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> 메서드는 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClauseCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="76d4f-238">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClause%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClauseCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="76d4f-239">
            <paramref name="keyIdentifierClause" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-239">
              <paramref name="keyIdentifierClause" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="76d4f-240">-또는-  <paramref name="writer" />이 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-240">-or-  <paramref name="writer" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteKeyIdentifierClauseCore">
      <MemberSignature Language="C#" Value="protected abstract void WriteKeyIdentifierClauseCore (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteKeyIdentifierClauseCore(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClauseCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub WriteKeyIdentifierClauseCore (writer As XmlWriter, keyIdentifierClause As SecurityKeyIdentifierClause)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void WriteKeyIdentifierClauseCore(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" />
      <MemberSignature Language="F#" Value="abstract member WriteKeyIdentifierClauseCore : System.Xml.XmlWriter * System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; unit" Usage="securityTokenSerializer.WriteKeyIdentifierClauseCore (writer, keyIdentifierClause)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="76d4f-241">키 식별자 절을 쓸 <see cref="T:System.Xml.XmlWriter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-241">A <see cref="T:System.Xml.XmlWriter" /> to write the key identifier clause.</span>
          </span>
        </param>
        <param name="keyIdentifierClause">
          <span data-ttu-id="76d4f-242">쓸 키 식별자 절을 나타내는 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-242">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that represents the key identifier clause to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76d4f-243">지정한 XML 작성기를 사용하여 지정된 키 식별자 절을 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-243">Writes the specified key identifier clause using the specified XML writer.</span>
          </span>
          <span data-ttu-id="76d4f-244">기본 클래스에서 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-244">Called by the base class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76d4f-245"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 클래스에서 파생된 클래스는 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClauseCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> 메서드를 재정의해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="76d4f-245">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClauseCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> method.</span></span> <span data-ttu-id="76d4f-246"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClause%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> 메서드는 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClauseCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="76d4f-246">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClause%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClauseCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="76d4f-247">
            <paramref name="keyIdentifierClause" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-247">
              <paramref name="keyIdentifierClause" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="76d4f-248">-또는-  <paramref name="writer" />이 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-248">-or-  <paramref name="writer" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteKeyIdentifierCore">
      <MemberSignature Language="C#" Value="protected abstract void WriteKeyIdentifierCore (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteKeyIdentifierCore(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub WriteKeyIdentifierCore (writer As XmlWriter, keyIdentifier As SecurityKeyIdentifier)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void WriteKeyIdentifierCore(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityKeyIdentifier ^ keyIdentifier);" />
      <MemberSignature Language="F#" Value="abstract member WriteKeyIdentifierCore : System.Xml.XmlWriter * System.IdentityModel.Tokens.SecurityKeyIdentifier -&gt; unit" Usage="securityTokenSerializer.WriteKeyIdentifierCore (writer, keyIdentifier)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="keyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="76d4f-249">키 식별자를 쓸 <see cref="T:System.Xml.XmlWriter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-249">A <see cref="T:System.Xml.XmlWriter" /> to write the key identifier.</span>
          </span>
        </param>
        <param name="keyIdentifier">
          <span data-ttu-id="76d4f-250">쓸 키 식별자를 나타내는 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-250">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that represents the key identifier to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76d4f-251">지정된 XML 작성기를 사용하여 지정된 키 식별자를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-251">Writes the specified key identifier using the specified XML writer.</span>
          </span>
          <span data-ttu-id="76d4f-252">기본 클래스에서 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-252">Called by the base class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76d4f-253"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 클래스에서 파생된 클래스는 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifier%29> 메서드를 재정의해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="76d4f-253">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifier%29> method.</span></span> <span data-ttu-id="76d4f-254"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifier%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifier%29> 메서드는 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifier%29> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="76d4f-254">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifier%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifier%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifier%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="76d4f-255">
            <paramref name="keyIdentifier" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-255">
              <paramref name="keyIdentifier" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="76d4f-256">-또는-  <paramref name="writer" />이 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-256">-or-  <paramref name="writer" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteToken">
      <MemberSignature Language="C#" Value="public void WriteToken (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteToken(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteToken (writer As XmlWriter, token As SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteToken(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="member this.WriteToken : System.Xml.XmlWriter * System.IdentityModel.Tokens.SecurityToken -&gt; unit" Usage="securityTokenSerializer.WriteToken (writer, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="76d4f-257">보안 토큰을 쓸 <see cref="T:System.Xml.XmlWriter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-257">A <see cref="T:System.Xml.XmlWriter" /> to write the security token.</span>
          </span>
        </param>
        <param name="token">
          <span data-ttu-id="76d4f-258">쓸 보안 토큰을 나타내는 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-258">A <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the security token to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76d4f-259">지정한 XML 작성기를 사용하여 지정된 보안 토큰을 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-259">Writes the specified security token using the specified XML writer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76d4f-260"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 클래스에서 파생된 클래스는 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteTokenCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29> 메서드를 재정의해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="76d4f-260">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteTokenCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29> method.</span></span> <span data-ttu-id="76d4f-261"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29> 메서드는 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteTokenCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="76d4f-261">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteTokenCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="76d4f-262">
            <paramref name="token" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-262">
              <paramref name="token" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="76d4f-263">-또는-  <paramref name="writer" />이 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-263">-or-  <paramref name="writer" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTokenCore">
      <MemberSignature Language="C#" Value="protected abstract void WriteTokenCore (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteTokenCore(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteTokenCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub WriteTokenCore (writer As XmlWriter, token As SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void WriteTokenCore(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="abstract member WriteTokenCore : System.Xml.XmlWriter * System.IdentityModel.Tokens.SecurityToken -&gt; unit" Usage="securityTokenSerializer.WriteTokenCore (writer, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="76d4f-264">보안 토큰을 쓸 <see cref="T:System.Xml.XmlWriter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-264">A <see cref="T:System.Xml.XmlWriter" /> to write the security token.</span>
          </span>
        </param>
        <param name="token">
          <span data-ttu-id="76d4f-265">쓸 보안 토큰을 나타내는 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-265">A <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the security token to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76d4f-266">지정한 XML 작성기를 사용하여 지정된 보안 토큰을 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-266">Writes the specified security token using the specified XML writer.</span>
          </span>
          <span data-ttu-id="76d4f-267">기본 클래스에서 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-267">Called by the base class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76d4f-268"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 클래스에서 파생된 클래스는 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteTokenCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29> 메서드를 재정의해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="76d4f-268">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteTokenCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29> method.</span></span> <span data-ttu-id="76d4f-269"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29> 메서드는 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteTokenCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="76d4f-269">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteTokenCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="76d4f-270">
            <paramref name="token" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-270">
              <paramref name="token" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="76d4f-271">-또는-  <paramref name="writer" />이 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76d4f-271">-or-  <paramref name="writer" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>