<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="StringWriter.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac598325d93594eee11417b62c61f46fafb85d20ebf.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">98325d93594eee11417b62c61f46fafb85d20ebf</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IO.StringWriter">
          <source>Implements a <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> for writing information to a string.</source>
          <target state="translated">정보를 문자열로 쓰기 위한 <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>를 구현합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.IO.StringWriter">
          <source>The information is stored in an underlying <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>.</source>
          <target state="translated">정보는 내부 <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>에 저장됩니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringWriter">
          <source><ph id="ph1">&lt;xref:System.IO.StringWriter&gt;</ph> enables you to write to a string synchronously or asynchronously.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.StringWriter&gt;</ph> 동기적 또는 비동기적으로 문자열에 쓸 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringWriter">
          <source>You can write a character at a time with the <ph id="ph1">&lt;xref:System.IO.StringWriter.Write%28System.Char%29&gt;</ph> or the <ph id="ph2">&lt;xref:System.IO.StringWriter.WriteAsync%28System.Char%29&gt;</ph> method, a string at a time using the <ph id="ph3">&lt;xref:System.IO.StringWriter.Write%28System.String%29&gt;</ph> or the <ph id="ph4">&lt;xref:System.IO.StringWriter.WriteAsync%28System.String%29&gt;</ph> method.</source>
          <target state="translated">으로 한 번에 한 문자를 작성할 수 있습니다는 <ph id="ph1">&lt;xref:System.IO.StringWriter.Write%28System.Char%29&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.IO.StringWriter.WriteAsync%28System.Char%29&gt;</ph> 메서드를 사용 하 여 시간에는 문자열은 <ph id="ph3">&lt;xref:System.IO.StringWriter.Write%28System.String%29&gt;</ph> 또는 <ph id="ph4">&lt;xref:System.IO.StringWriter.WriteAsync%28System.String%29&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringWriter">
          <source>In addition, you can write a character, an array of characters or a string followed by the line terminator asynchronously with one of the <ph id="ph1">&lt;xref:System.IO.StringWriter.WriteLineAsync%2A&gt;</ph> methods.</source>
          <target state="translated">또한는 문자, 문자 배열 또는 뒤에 줄 종결자가 비동기적으로 중 하나가 지정 된 문자열을 작성할 수 있습니다는 <ph id="ph1">&lt;xref:System.IO.StringWriter.WriteLineAsync%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringWriter">
          <source>The following table lists examples of other typical or related I/O tasks.</source>
          <target state="translated">다음 표에서 일반적인 또는 관련 된 I/O 작업의 예제를 나열합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringWriter">
          <source>To do this...</source>
          <target state="translated">수행 작업</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringWriter">
          <source>See the example in this topic...</source>
          <target state="translated">참조 항목</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringWriter">
          <source>Create a text file.</source>
          <target state="translated">텍스트 파일을 만듭니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringWriter">
          <source><bpt id="p1">[</bpt>How to: Write Text to a File<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 파일에 텍스트 쓰기<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringWriter">
          <source>Write to a text file.</source>
          <target state="translated">텍스트 파일에 작성 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringWriter">
          <source><bpt id="p1">[</bpt>How to: Write Text to a File<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 파일에 텍스트 쓰기<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringWriter">
          <source>Read from a text file.</source>
          <target state="translated">텍스트 파일에서 읽습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringWriter">
          <source><bpt id="p1">[</bpt>How to: Read Text from a File<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 파일의 텍스트 읽기<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringWriter">
          <source>Append text to a file.</source>
          <target state="translated">파일에 텍스트를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringWriter">
          <source><bpt id="p1">[</bpt>How to: Open and Append to a Log File<ept id="p1">](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 로그 파일 열기 및 추가<ept id="p1">](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)</ept></target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringWriter">
          <source>Get the size of a file.</source>
          <target state="translated">파일의 크기를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringWriter">
          <source>Get the attributes of a file.</source>
          <target state="translated">파일의 특성을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringWriter">
          <source>Set the attributes of a file.</source>
          <target state="translated">파일의 특성을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringWriter">
          <source>Determine if a file exists.</source>
          <target state="translated">파일이 있는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringWriter">
          <source>Read from a binary file.</source>
          <target state="translated">이진 파일에서 읽습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringWriter">
          <source><bpt id="p1">[</bpt>How to: Read and Write to a Newly Created Data File<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 새로 만든 데이터 파일 읽기 및 쓰기<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringWriter">
          <source>Write to a binary file.</source>
          <target state="translated">이진 파일에 씁니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringWriter">
          <source><bpt id="p1">[</bpt>How to: Read and Write to a Newly Created Data File<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 새로 만든 데이터 파일 읽기 및 쓰기<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringWriter">
          <source>The following code example demonstrates the creation of a continuous paragraph from a group of double-spaced sentences, and then the conversion of the paragraph back to the original text.</source>
          <target state="translated">다음 코드 예제에서는 이중 공백된 문장 및 단락의 변환의 그룹에서 원래 텍스트를 다시 연속 단락 만들기를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="T:System.IO.StringWriter">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.StringWriter" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.StringWriter" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.StringWriter" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.StringWriter" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor">
          <source>A new <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object is automatically created and associated with the new instance of the <ph id="ph2">&lt;xref:System.IO.StringWriter&gt;</ph> class.</source>
          <target state="translated">새 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체가 자동으로 생성 되 고의 새 인스턴스를 연관 된 <ph id="ph2">&lt;xref:System.IO.StringWriter&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor">
          <source>Since a format control is not specified for this constructor, the new instance will be initialized with <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">새 인스턴스를 사용 하 여 초기화 됩니다 컨트롤 서식이이 생성자를 지정 하지 않으면 이후 <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor">
          <source>The following table lists examples of other typical or related I/O tasks.</source>
          <target state="translated">다음 표에서 일반적인 또는 관련 된 I/O 작업의 예제를 나열합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor">
          <source>To do this...</source>
          <target state="translated">수행 작업</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor">
          <source>See the example in this topic...</source>
          <target state="translated">참조 항목</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor">
          <source>Create a text file.</source>
          <target state="translated">텍스트 파일을 만듭니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor">
          <source><bpt id="p1">[</bpt>How to: Write Text to a File<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 파일에 텍스트 쓰기<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor">
          <source>Write to a text file.</source>
          <target state="translated">텍스트 파일에 작성 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor">
          <source><bpt id="p1">[</bpt>How to: Write Text to a File<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 파일에 텍스트 쓰기<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor">
          <source>Read from a text file.</source>
          <target state="translated">텍스트 파일에서 읽습니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor">
          <source><bpt id="p1">[</bpt>How to: Read Text from a File<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 파일의 텍스트 읽기<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor">
          <source>Append text to a file.</source>
          <target state="translated">파일에 텍스트를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor">
          <source><bpt id="p1">[</bpt>How to: Open and Append to a Log File<ept id="p1">](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 로그 파일 열기 및 추가<ept id="p1">](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)</ept></target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor">
          <source>Get the size of a file.</source>
          <target state="translated">파일의 크기를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor">
          <source>Get the attributes of a file.</source>
          <target state="translated">파일의 특성을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor">
          <source>Set the attributes of a file.</source>
          <target state="translated">파일의 특성을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor">
          <source>Determine if a file exists.</source>
          <target state="translated">파일이 있는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor">
          <source>Read from a binary file.</source>
          <target state="translated">이진 파일에서 읽습니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor">
          <source><bpt id="p1">[</bpt>How to: Read and Write to a Newly Created Data File<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 새로 만든 데이터 파일 읽기 및 쓰기<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor">
          <source>Write to a binary file.</source>
          <target state="translated">이진 파일에 씁니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor">
          <source><bpt id="p1">[</bpt>How to: Read and Write to a Newly Created Data File<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 새로 만든 데이터 파일 읽기 및 쓰기<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor">
          <source>The following code example demonstrates how to construct a string using the <ph id="ph1">`StringWriter`</ph> class.</source>
          <target state="translated">다음 코드 예제에서는 사용 하 여 문자열을 생성 하는 방법을 보여 줍니다.는 <ph id="ph1">`StringWriter`</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.#ctor(System.IFormatProvider)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IFormatProvider" /&gt;</ph> object that controls formatting.</source>
          <target state="translated">서식 지정을 제어하는 <ph id="ph1">&lt;see cref="T:System.IFormatProvider" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.#ctor(System.IFormatProvider)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.StringWriter" /&gt;</ph> class with the specified format control.</source>
          <target state="translated">지정한 형식 제어를 사용하여 <ph id="ph1">&lt;see cref="T:System.IO.StringWriter" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor(System.IFormatProvider)">
          <source>A new <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object is automatically created and associated with the new instance of the <ph id="ph2">&lt;xref:System.IO.StringWriter&gt;</ph> class.</source>
          <target state="translated">새 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체가 자동으로 생성 되 고의 새 인스턴스를 연관 된 <ph id="ph2">&lt;xref:System.IO.StringWriter&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor(System.IFormatProvider)">
          <source>The following table lists examples of other typical or related I/O tasks.</source>
          <target state="translated">다음 표에서 일반적인 또는 관련 된 I/O 작업의 예제를 나열합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor(System.IFormatProvider)">
          <source>To do this...</source>
          <target state="translated">수행 작업</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor(System.IFormatProvider)">
          <source>See the example in this topic...</source>
          <target state="translated">참조 항목</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor(System.IFormatProvider)">
          <source>Create a text file.</source>
          <target state="translated">텍스트 파일을 만듭니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor(System.IFormatProvider)">
          <source><bpt id="p1">[</bpt>How to: Write Text to a File<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 파일에 텍스트 쓰기<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor(System.IFormatProvider)">
          <source>Write to a text file.</source>
          <target state="translated">텍스트 파일에 작성 합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor(System.IFormatProvider)">
          <source><bpt id="p1">[</bpt>How to: Write Text to a File<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 파일에 텍스트 쓰기<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor(System.IFormatProvider)">
          <source>Read from a text file.</source>
          <target state="translated">텍스트 파일에서 읽습니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor(System.IFormatProvider)">
          <source><bpt id="p1">[</bpt>How to: Read Text from a File<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 파일의 텍스트 읽기<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor(System.IFormatProvider)">
          <source>Append text to a file.</source>
          <target state="translated">파일에 텍스트를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor(System.IFormatProvider)">
          <source><bpt id="p1">[</bpt>How to: Open and Append to a Log File<ept id="p1">](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 로그 파일 열기 및 추가<ept id="p1">](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)</ept></target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor(System.IFormatProvider)">
          <source>Get the size of a file.</source>
          <target state="translated">파일의 크기를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor(System.IFormatProvider)">
          <source>Get the attributes of a file.</source>
          <target state="translated">파일의 특성을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor(System.IFormatProvider)">
          <source>Set the attributes of a file.</source>
          <target state="translated">파일의 특성을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor(System.IFormatProvider)">
          <source>Determine if a file exists.</source>
          <target state="translated">파일이 있는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor(System.IFormatProvider)">
          <source>Read from a binary file.</source>
          <target state="translated">이진 파일에서 읽습니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor(System.IFormatProvider)">
          <source><bpt id="p1">[</bpt>How to: Read and Write to a Newly Created Data File<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 새로 만든 데이터 파일 읽기 및 쓰기<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor(System.IFormatProvider)">
          <source>Write to a binary file.</source>
          <target state="translated">이진 파일에 씁니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor(System.IFormatProvider)">
          <source><bpt id="p1">[</bpt>How to: Read and Write to a Newly Created Data File<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 새로 만든 데이터 파일 읽기 및 쓰기<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor(System.IFormatProvider)">
          <source>The following code example demonstrates how to construct a string in a specific culture.</source>
          <target state="translated">다음 코드 예제에서는 특정 문화권에서 문자열을 생성 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object to write to.</source>
          <target state="translated">쓸 대상 <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.StringWriter" /&gt;</ph> class that writes to the specified <ph id="ph2">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>.</source>
          <target state="translated">지정한 <ph id="ph1">&lt;see cref="T:System.IO.StringWriter" /&gt;</ph>에 쓰는 <ph id="ph2">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder)">
          <source>Since a format control is not specified for this constructor, the new instance will be initialized with <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">새 인스턴스를 사용 하 여 초기화 됩니다 컨트롤 서식이이 생성자를 지정 하지 않으면 이후 <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder)">
          <source>The following table lists examples of other typical or related I/O tasks.</source>
          <target state="translated">다음 표에서 일반적인 또는 관련 된 I/O 작업의 예제를 나열합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder)">
          <source>To do this...</source>
          <target state="translated">수행 작업</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder)">
          <source>See the example in this topic...</source>
          <target state="translated">참조 항목</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder)">
          <source>Create a text file.</source>
          <target state="translated">텍스트 파일을 만듭니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder)">
          <source><bpt id="p1">[</bpt>How to: Write Text to a File<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 파일에 텍스트 쓰기<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder)">
          <source>Write to a text file.</source>
          <target state="translated">텍스트 파일에 작성 합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder)">
          <source><bpt id="p1">[</bpt>How to: Write Text to a File<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 파일에 텍스트 쓰기<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder)">
          <source>Read from a text file.</source>
          <target state="translated">텍스트 파일에서 읽습니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder)">
          <source><bpt id="p1">[</bpt>How to: Read Text from a File<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 파일의 텍스트 읽기<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder)">
          <source>Append text to a file.</source>
          <target state="translated">파일에 텍스트를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder)">
          <source><bpt id="p1">[</bpt>How to: Open and Append to a Log File<ept id="p1">](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 로그 파일 열기 및 추가<ept id="p1">](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)</ept></target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder)">
          <source>Get the size of a file.</source>
          <target state="translated">파일의 크기를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder)">
          <source>Get the attributes of a file.</source>
          <target state="translated">파일의 특성을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder)">
          <source>Set the attributes of a file.</source>
          <target state="translated">파일의 특성을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder)">
          <source>Determine if a file exists.</source>
          <target state="translated">파일이 있는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder)">
          <source>Read from a binary file.</source>
          <target state="translated">이진 파일에서 읽습니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder)">
          <source><bpt id="p1">[</bpt>How to: Read and Write to a Newly Created Data File<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 새로 만든 데이터 파일 읽기 및 쓰기<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder)">
          <source>Write to a binary file.</source>
          <target state="translated">이진 파일에 씁니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder)">
          <source><bpt id="p1">[</bpt>How to: Read and Write to a Newly Created Data File<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 새로 만든 데이터 파일 읽기 및 쓰기<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder)">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> class to modify the underlying string in a closed <ph id="ph2">`StringWriter`</ph>.</source>
          <target state="translated">다음 코드 예제는 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 닫힌의 기본 문자열을 수정 하는 클래스 <ph id="ph2">`StringWriter`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder)">
          <source><ph id="ph1">&lt;paramref name="sb" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sb" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder,System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object to write to.</source>
          <target state="translated">쓸 대상 <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder,System.IFormatProvider)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IFormatProvider" /&gt;</ph> object that controls formatting.</source>
          <target state="translated">서식 지정을 제어하는 <ph id="ph1">&lt;see cref="T:System.IFormatProvider" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder,System.IFormatProvider)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.StringWriter" /&gt;</ph> class that writes to the specified <ph id="ph2">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> and has the specified format provider.</source>
          <target state="translated">지정한 <ph id="ph1">&lt;see cref="T:System.IO.StringWriter" /&gt;</ph>에 쓰고 지정한 서식 공급자를 갖는 <ph id="ph2">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder,System.IFormatProvider)">
          <source>The following table lists examples of other typical or related I/O tasks.</source>
          <target state="translated">다음 표에서 일반적인 또는 관련 된 I/O 작업의 예제를 나열합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder,System.IFormatProvider)">
          <source>To do this...</source>
          <target state="translated">수행 작업</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder,System.IFormatProvider)">
          <source>See the example in this topic...</source>
          <target state="translated">참조 항목</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder,System.IFormatProvider)">
          <source>Create a text file.</source>
          <target state="translated">텍스트 파일을 만듭니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder,System.IFormatProvider)">
          <source><bpt id="p1">[</bpt>How to: Write Text to a File<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 파일에 텍스트 쓰기<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder,System.IFormatProvider)">
          <source>Write to a text file.</source>
          <target state="translated">텍스트 파일에 작성 합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder,System.IFormatProvider)">
          <source><bpt id="p1">[</bpt>How to: Write Text to a File<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 파일에 텍스트 쓰기<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder,System.IFormatProvider)">
          <source>Read from a text file.</source>
          <target state="translated">텍스트 파일에서 읽습니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder,System.IFormatProvider)">
          <source><bpt id="p1">[</bpt>How to: Read Text from a File<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 파일의 텍스트 읽기<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder,System.IFormatProvider)">
          <source>Append text to a file.</source>
          <target state="translated">파일에 텍스트를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder,System.IFormatProvider)">
          <source><bpt id="p1">[</bpt>How to: Open and Append to a Log File<ept id="p1">](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 로그 파일 열기 및 추가<ept id="p1">](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)</ept></target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder,System.IFormatProvider)">
          <source>Get the size of a file.</source>
          <target state="translated">파일의 크기를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder,System.IFormatProvider)">
          <source>Get the attributes of a file.</source>
          <target state="translated">파일의 특성을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder,System.IFormatProvider)">
          <source>Set the attributes of a file.</source>
          <target state="translated">파일의 특성을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder,System.IFormatProvider)">
          <source>Determine if a file exists.</source>
          <target state="translated">파일이 있는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder,System.IFormatProvider)">
          <source>Read from a binary file.</source>
          <target state="translated">이진 파일에서 읽습니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder,System.IFormatProvider)">
          <source><bpt id="p1">[</bpt>How to: Read and Write to a Newly Created Data File<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 새로 만든 데이터 파일 읽기 및 쓰기<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder,System.IFormatProvider)">
          <source>Write to a binary file.</source>
          <target state="translated">이진 파일에 씁니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder,System.IFormatProvider)">
          <source><bpt id="p1">[</bpt>How to: Read and Write to a Newly Created Data File<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 새로 만든 데이터 파일 읽기 및 쓰기<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="sb" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sb" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.Close">
          <source>Closes the current <ph id="ph1">&lt;see cref="T:System.IO.StringWriter" /&gt;</ph> and the underlying stream.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.IO.StringWriter" /&gt;</ph> 및 기본 스트림을 닫습니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Close">
          <source>For an example of creating a file and writing text to a file, see <bpt id="p1">[</bpt>How to: Write Text to a File<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept>.</source>
          <target state="translated">파일을 파일에 텍스트 쓰기의 예제를 보려면 <bpt id="p1">[</bpt>하는 방법: 파일에 텍스트 쓰기<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Close">
          <source>For an example of reading text from a file, see <bpt id="p1">[</bpt>How to: Read Text from a File<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept>.</source>
          <target state="translated">파일에서 읽는 텍스트의 예를 들어 참조 <bpt id="p1">[</bpt>하는 방법: 파일에서 텍스트 읽기<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Close">
          <source>For an example of reading from and writing to a binary file, see <bpt id="p1">[</bpt>How to: Read and Write to a Newly Created Data File<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept>.</source>
          <target state="translated">읽기 및 쓰기 이진 파일의 예제를 보려면 <bpt id="p1">[</bpt>하는 방법: 읽기 및 새로 만든 데이터 파일에 쓰기<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Close">
          <source>This method overrides <ph id="ph1">&lt;xref:System.IO.Stream.Close%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이 메서드는 <ph id="ph1">&lt;xref:System.IO.Stream.Close%2A?displayProperty=nameWithType&gt;</ph>를 재정의합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Close">
          <source>This implementation of <ph id="ph1">`Close`</ph> calls the <ph id="ph2">&lt;xref:System.IO.StringWriter.Dispose%2A&gt;</ph> method passing a <ph id="ph3">`true`</ph> value.</source>
          <target state="translated">이 구현 <ph id="ph1">`Close`</ph> 호출은 <ph id="ph2">&lt;xref:System.IO.StringWriter.Dispose%2A&gt;</ph> 전달 메서드는 <ph id="ph3">`true`</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Close">
          <source>Flushing the stream will not flush its underlying encoder unless you explicitly call <ph id="ph1">`Close`</ph>.</source>
          <target state="translated">명시적으로 호출 하지 않으면 스트림을 내부 인코더가 플러시되지 것입니다 <ph id="ph1">`Close`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Close">
          <source>Setting <ph id="ph1">&lt;xref:System.IO.StreamWriter.AutoFlush%2A&gt;</ph> to <ph id="ph2">`true`</ph> means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</source>
          <target state="translated">설정 <ph id="ph1">&lt;xref:System.IO.StreamWriter.AutoFlush%2A&gt;</ph> 를 <ph id="ph2">`true`</ph> 스트림 버퍼에서 데이터를 플러시할 수는 있지만 인코더 상태 플러시되지 것입니다 있다는 것을 의미 합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Close">
          <source>This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</source>
          <target state="translated">따라서 올바르게 문자의 다음 블록을 인코딩할 수 있도록 (부분 문자)의 상태를 유지 하기 위해 인코더 수 있습니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Close">
          <source>This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</source>
          <target state="translated">이 시나리오는 u t f 8와 UTF7 인코더는 인접 한 문자를 받은 후 특정 문자를 인코딩할만 수 있는 위치에 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Close">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.IO.StringWriter.%23ctor%28System.Text.StringBuilder%29&gt;</ph> constructor.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.IO.StringWriter.%23ctor%28System.Text.StringBuilder%29&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>로 설정하고, 관리되지 않는 리소스만 해제하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>로 설정합니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.IO.StringWriter" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.StringWriter" /&gt;</ph>에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.IO.StringWriter&gt;</ph> references.</source>
          <target state="translated"><ph id="ph1">`disposing`</ph> 매개 변수가 <ph id="ph2">`true`</ph>인 경우 이 메서드는 이 <ph id="ph3">&lt;xref:System.IO.StringWriter&gt;</ph>에서 참조하는 관리 개체가 보유하고 있는 리소스를 모두 해제합니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose`</ph> method of each referenced object.</source>
          <target state="translated">이 메서드는 참조되는 각 개체의 <ph id="ph1">`Dispose`</ph> 메서드를 호출합니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see cref="M:System.IO.StringWriter.Dispose(System.Boolean)" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IO.StringWriter.Dispose(System.Boolean)" /&gt;</ph>는 다른 개체에서 여러 번 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.IO.StringWriter.Dispose(System.Boolean)" /&gt;</ph>, be careful not to reference objects that have been previously disposed in an earlier call to <ph id="ph2">&lt;see cref="M:System.IO.StringWriter.Dispose(System.Boolean)" /&gt;</ph>.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.IO.StringWriter.Dispose(System.Boolean)" /&gt;</ph>한 이전 호출에서 삭제 된 개체를 참조 하지 않도록 주의 하십시오 <ph id="ph2">&lt;see cref="M:System.IO.StringWriter.Dispose(System.Boolean)" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="P:System.IO.StringWriter.Encoding">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph> in which the output is written.</source>
          <target state="translated">출력이 쓰여질 <ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph>을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.StringWriter.Encoding">
          <source>The <ph id="ph1">&lt;see langword="Encoding" /&gt;</ph> in which the output is written.</source>
          <target state="translated">출력이 쓰여질 <ph id="ph1">&lt;see langword="Encoding" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.StringWriter.Encoding">
          <source>This property is necessary for some XML scenarios where a header must be written containing the encoding used by the <ph id="ph1">`StringWriter`</ph>.</source>
          <target state="translated">이 속성은 위치 헤더를 작성 해야에서 사용 하는 인코딩을 포함 하는 일부 XML 시나리오에 대 한 필요는 <ph id="ph1">`StringWriter`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.StringWriter.Encoding">
          <source>This allows the XML code to consume an arbitrary <ph id="ph1">`StringWriter`</ph> and generate the correct XML header.</source>
          <target state="translated">이렇게 하면 XML 코드는 임의의 소비를 <ph id="ph1">`StringWriter`</ph> 올바른 XML 헤더를 생성 합니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.StringWriter.Encoding">
          <source>The following table lists examples of other typical or related I/O tasks.</source>
          <target state="translated">다음 표에서 일반적인 또는 관련 된 I/O 작업의 예제를 나열합니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.StringWriter.Encoding">
          <source>To do this...</source>
          <target state="translated">수행 작업</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.StringWriter.Encoding">
          <source>See the example in this topic...</source>
          <target state="translated">참조 항목</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.StringWriter.Encoding">
          <source>Create a text file.</source>
          <target state="translated">텍스트 파일을 만듭니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.StringWriter.Encoding">
          <source><bpt id="p1">[</bpt>How to: Write Text to a File<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 파일에 텍스트 쓰기<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.StringWriter.Encoding">
          <source>Write to a text file.</source>
          <target state="translated">텍스트 파일에 작성 합니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.StringWriter.Encoding">
          <source><bpt id="p1">[</bpt>How to: Write Text to a File<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 파일에 텍스트 쓰기<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.StringWriter.Encoding">
          <source>Read from a text file.</source>
          <target state="translated">텍스트 파일에서 읽습니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.StringWriter.Encoding">
          <source><bpt id="p1">[</bpt>How to: Read Text from a File<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 파일의 텍스트 읽기<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.StringWriter.Encoding">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.IO.StringWriter.%23ctor&gt;</ph> constructor.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.IO.StringWriter.%23ctor&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.FlushAsync">
          <source>Asynchronously clears all buffers for the current writer and causes any buffered data to be written to the underlying device.</source>
          <target state="translated">현재 작성기에 대한 모든 버퍼를 비동기적으로 지우면 버퍼링된 모든 데이터를 내부 장치에 씁니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.FlushAsync">
          <source>A task that represents the asynchronous flush operation.</source>
          <target state="translated">비동기 플러시 작업을 나타내는 작업입니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.GetStringBuilder">
          <source>Returns the underlying <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>.</source>
          <target state="translated">내부 <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.GetStringBuilder">
          <source>The underlying <ph id="ph1">&lt;see langword="StringBuilder" /&gt;</ph>.</source>
          <target state="translated">내부 <ph id="ph1">&lt;see langword="StringBuilder" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.GetStringBuilder">
          <source>This is either the <ph id="ph1">`StringBuilder`</ph> that was passed to the constructor, or the <ph id="ph2">`StringBuilder`</ph> that was automatically created.</source>
          <target state="translated">이 값은 고 <ph id="ph1">`StringBuilder`</ph> 생성자에 전달 된 또는 <ph id="ph2">`StringBuilder`</ph> 자동으로 생성 된 합니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.GetStringBuilder">
          <source>The following table lists examples of other typical or related I/O tasks.</source>
          <target state="translated">다음 표에서 일반적인 또는 관련 된 I/O 작업의 예제를 나열합니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.GetStringBuilder">
          <source>To do this...</source>
          <target state="translated">수행 작업</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.GetStringBuilder">
          <source>See the example in this topic...</source>
          <target state="translated">참조 항목</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.GetStringBuilder">
          <source>Create a text file.</source>
          <target state="translated">텍스트 파일을 만듭니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.GetStringBuilder">
          <source><bpt id="p1">[</bpt>How to: Write Text to a File<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 파일에 텍스트 쓰기<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.GetStringBuilder">
          <source>Write to a text file.</source>
          <target state="translated">텍스트 파일에 작성 합니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.GetStringBuilder">
          <source><bpt id="p1">[</bpt>How to: Write Text to a File<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 파일에 텍스트 쓰기<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.GetStringBuilder">
          <source>Read from a text file.</source>
          <target state="translated">텍스트 파일에서 읽습니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.GetStringBuilder">
          <source><bpt id="p1">[</bpt>How to: Read Text from a File<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 파일의 텍스트 읽기<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.GetStringBuilder">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.IO.StringWriter.%23ctor&gt;</ph> constructor.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.IO.StringWriter.%23ctor&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.ToString">
          <source>Returns a string containing the characters written to the current <ph id="ph1">&lt;see langword="StringWriter" /&gt;</ph> so far.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see langword="StringWriter" /&gt;</ph>에 지금까지 쓰여진 문자가 포함된 문자열을 반환합니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.ToString">
          <source>The string containing the characters written to the current <ph id="ph1">&lt;see langword="StringWriter" /&gt;</ph>.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see langword="StringWriter" /&gt;</ph>에 쓰여진 문자가 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.ToString">
          <source>The following table lists examples of other typical or related I/O tasks.</source>
          <target state="translated">다음 표에서 일반적인 또는 관련 된 I/O 작업의 예제를 나열합니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.ToString">
          <source>To do this...</source>
          <target state="translated">수행 작업</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.ToString">
          <source>See the example in this topic...</source>
          <target state="translated">참조 항목</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.ToString">
          <source>Create a text file.</source>
          <target state="translated">텍스트 파일을 만듭니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.ToString">
          <source><bpt id="p1">[</bpt>How to: Write Text to a File<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 파일에 텍스트 쓰기<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.ToString">
          <source>Write to a text file.</source>
          <target state="translated">텍스트 파일에 작성 합니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.ToString">
          <source><bpt id="p1">[</bpt>How to: Write Text to a File<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 파일에 텍스트 쓰기<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.ToString">
          <source>Read from a text file.</source>
          <target state="translated">텍스트 파일에서 읽습니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.ToString">
          <source><bpt id="p1">[</bpt>How to: Read Text from a File<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 파일의 텍스트 읽기<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.ToString">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.IO.StringWriter.%23ctor%28System.IFormatProvider%29&gt;</ph> constructor.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.IO.StringWriter.%23ctor%28System.IFormatProvider%29&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="T:System.IO.StringWriter">
          <source>Writes data to the string.</source>
          <target state="translated">데이터를 문자열에 씁니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.Write(System.Char)">
          <source>The character to write.</source>
          <target state="translated">작성할 문자입니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.Write(System.Char)">
          <source>Writes a character to the string.</source>
          <target state="translated">문자열에 문자를 씁니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.Char)">
          <source>This method overrides <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이 메서드는 <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType&gt;</ph>를 재정의합니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.Char)">
          <source>The following table lists examples of other typical or related I/O tasks.</source>
          <target state="translated">다음 표에서 일반적인 또는 관련 된 I/O 작업의 예제를 나열합니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.Char)">
          <source>To do this...</source>
          <target state="translated">수행 작업</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.Char)">
          <source>See the example in this topic...</source>
          <target state="translated">참조 항목</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.Char)">
          <source>Create a text file.</source>
          <target state="translated">텍스트 파일을 만듭니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.Char)">
          <source><bpt id="p1">[</bpt>How to: Write Text to a File<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 파일에 텍스트 쓰기<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.Char)">
          <source>Write to a text file.</source>
          <target state="translated">텍스트 파일에 작성 합니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.Char)">
          <source><bpt id="p1">[</bpt>How to: Write Text to a File<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 파일에 텍스트 쓰기<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.Char)">
          <source>Read from a text file.</source>
          <target state="translated">텍스트 파일에서 읽습니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.Char)">
          <source><bpt id="p1">[</bpt>How to: Read Text from a File<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 파일의 텍스트 읽기<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.Char)">
          <source>Append text to a file.</source>
          <target state="translated">파일에 텍스트를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.Char)">
          <source><bpt id="p1">[</bpt>How to: Open and Append to a Log File<ept id="p1">](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 로그 파일 열기 및 추가<ept id="p1">](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)</ept></target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.Char)">
          <source>Get the size of a file.</source>
          <target state="translated">파일의 크기를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.Char)">
          <source>Get the attributes of a file.</source>
          <target state="translated">파일의 특성을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.Char)">
          <source>Set the attributes of a file.</source>
          <target state="translated">파일의 특성을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.Char)">
          <source>Determine if a file exists.</source>
          <target state="translated">파일이 있는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.Char)">
          <source>Read from a binary file.</source>
          <target state="translated">이진 파일에서 읽습니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.Char)">
          <source><bpt id="p1">[</bpt>How to: Read and Write to a Newly Created Data File<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 새로 만든 데이터 파일 읽기 및 쓰기<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.Char)">
          <source>Write to a binary file.</source>
          <target state="translated">이진 파일에 씁니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.Char)">
          <source><bpt id="p1">[</bpt>How to: Read and Write to a Newly Created Data File<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 새로 만든 데이터 파일 읽기 및 쓰기<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.Char)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.IO.StringWriter.%23ctor&gt;</ph> constructor.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.IO.StringWriter.%23ctor&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.Write(System.Char)">
          <source>The writer is closed.</source>
          <target state="translated">작성기가 닫힌 경우</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.Write(System.String)">
          <source>The string to write.</source>
          <target state="translated">쓸 문자열입니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.Write(System.String)">
          <source>Writes a string to the current string.</source>
          <target state="translated">현재 문자열에 문자열을 씁니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.String)">
          <source>This method overrides <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이 메서드는 <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType&gt;</ph>를 재정의합니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.String)">
          <source>If the specified string is <ph id="ph1">`null`</ph>, nothing is written.</source>
          <target state="translated">지정 된 문자열의 형식이 <ph id="ph1">`null`</ph>, 아무것도 기록 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.String)">
          <source>The following table lists examples of other typical or related I/O tasks.</source>
          <target state="translated">다음 표에서 일반적인 또는 관련 된 I/O 작업의 예제를 나열합니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.String)">
          <source>To do this...</source>
          <target state="translated">수행 작업</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.String)">
          <source>See the example in this topic...</source>
          <target state="translated">참조 항목</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.String)">
          <source>Create a text file.</source>
          <target state="translated">텍스트 파일을 만듭니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.String)">
          <source><bpt id="p1">[</bpt>How to: Write Text to a File<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 파일에 텍스트 쓰기<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.String)">
          <source>Write to a text file.</source>
          <target state="translated">텍스트 파일에 작성 합니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.String)">
          <source><bpt id="p1">[</bpt>How to: Write Text to a File<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 파일에 텍스트 쓰기<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.String)">
          <source>Read from a text file.</source>
          <target state="translated">텍스트 파일에서 읽습니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.String)">
          <source><bpt id="p1">[</bpt>How to: Read Text from a File<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 파일의 텍스트 읽기<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.String)">
          <source>Append text to a file.</source>
          <target state="translated">파일에 텍스트를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.String)">
          <source><bpt id="p1">[</bpt>How to: Open and Append to a Log File<ept id="p1">](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 로그 파일 열기 및 추가<ept id="p1">](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)</ept></target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.String)">
          <source>Get the size of a file.</source>
          <target state="translated">파일의 크기를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.String)">
          <source>Get the attributes of a file.</source>
          <target state="translated">파일의 특성을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.String)">
          <source>Set the attributes of a file.</source>
          <target state="translated">파일의 특성을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.String)">
          <source>Determine if a file exists.</source>
          <target state="translated">파일이 있는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.String)">
          <source>Read from a binary file.</source>
          <target state="translated">이진 파일에서 읽습니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.String)">
          <source><bpt id="p1">[</bpt>How to: Read and Write to a Newly Created Data File<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 새로 만든 데이터 파일 읽기 및 쓰기<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.String)">
          <source>Write to a binary file.</source>
          <target state="translated">이진 파일에 씁니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.String)">
          <source><bpt id="p1">[</bpt>How to: Read and Write to a Newly Created Data File<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 새로 만든 데이터 파일 읽기 및 쓰기<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.IO.StringWriter&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.IO.StringWriter&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.Write(System.String)">
          <source>The writer is closed.</source>
          <target state="translated">작성기가 닫힌 경우</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The character array to write data from.</source>
          <target state="translated">쓸 데이터가 있는 문자 배열입니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The position in the buffer at which to start reading data.</source>
          <target state="translated">데이터 읽기를 시작하는 버퍼의 위치입니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The maximum number of characters to write.</source>
          <target state="translated">쓸 최대 문자 수입니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>Writes a subarray of characters to the string.</source>
          <target state="translated">문자열에 문자의 하위 배열을 씁니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>This method overrides <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이 메서드는 <ph id="ph1">&lt;xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType&gt;</ph>를 재정의합니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>This method writes <ph id="ph1">`count`</ph> characters of data to this <ph id="ph2">`StringWriter`</ph> from <ph id="ph3">`buffer`</ph>, starting at position <ph id="ph4">`index`</ph>.</source>
          <target state="translated">이 메서드는 작성 <ph id="ph1">`count`</ph> 자의 데이터를이 <ph id="ph2">`StringWriter`</ph> 에서 <ph id="ph3">`buffer`</ph>위치에서 시작, <ph id="ph4">`index`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The following table lists examples of other typical or related I/O tasks.</source>
          <target state="translated">다음 표에서 일반적인 또는 관련 된 I/O 작업의 예제를 나열합니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>To do this...</source>
          <target state="translated">수행 작업</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>See the example in this topic...</source>
          <target state="translated">참조 항목</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>Create a text file.</source>
          <target state="translated">텍스트 파일을 만듭니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source><bpt id="p1">[</bpt>How to: Write Text to a File<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 파일에 텍스트 쓰기<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>Write to a text file.</source>
          <target state="translated">텍스트 파일에 작성 합니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source><bpt id="p1">[</bpt>How to: Write Text to a File<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 파일에 텍스트 쓰기<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>Read from a text file.</source>
          <target state="translated">텍스트 파일에서 읽습니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source><bpt id="p1">[</bpt>How to: Read Text from a File<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 파일의 텍스트 읽기<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>Append text to a file.</source>
          <target state="translated">파일에 텍스트를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source><bpt id="p1">[</bpt>How to: Open and Append to a Log File<ept id="p1">](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 로그 파일 열기 및 추가<ept id="p1">](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)</ept></target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>Get the size of a file.</source>
          <target state="translated">파일의 크기를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>Get the attributes of a file.</source>
          <target state="translated">파일의 특성을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>Set the attributes of a file.</source>
          <target state="translated">파일의 특성을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>Determine if a file exists.</source>
          <target state="translated">파일이 있는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>Read from a binary file.</source>
          <target state="translated">이진 파일에서 읽습니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source><bpt id="p1">[</bpt>How to: Read and Write to a Newly Created Data File<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 새로 만든 데이터 파일 읽기 및 쓰기<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>Write to a binary file.</source>
          <target state="translated">이진 파일에 씁니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source><bpt id="p1">[</bpt>How to: Read and Write to a Newly Created Data File<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 새로 만든 데이터 파일 읽기 및 쓰기<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.IO.StringWriter.%23ctor&gt;</ph> constructor.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.IO.StringWriter.%23ctor&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="count" /&gt;</ph>가 음수입니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>(<ph id="ph1">&lt;paramref name="index" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="count" /&gt;</ph>)<ph id="ph4">&amp;gt;</ph> <ph id="ph5">&lt;paramref name="buffer" /&gt;</ph>.</source>
          <target state="translated">(<ph id="ph1">&lt;paramref name="index" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="count" /&gt;</ph>)<ph id="ph4">&amp;gt;</ph> <ph id="ph5">&lt;paramref name="buffer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;see langword="Length" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Length" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The writer is closed.</source>
          <target state="translated">작성기가 닫힌 경우</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="T:System.IO.StringWriter">
          <source>Writes data to the string asynchronously.</source>
          <target state="translated">데이터를 문자열에 비동기적으로 씁니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.WriteAsync(System.Char)">
          <source>The character to write to the string.</source>
          <target state="translated">문자열에 쓸 문자입니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.WriteAsync(System.Char)">
          <source>Writes a character to the string asynchronously.</source>
          <target state="translated">문자를 문자열에 비동기적으로 씁니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.WriteAsync(System.Char)">
          <source>A task that represents the asynchronous write operation.</source>
          <target state="translated">비동기 쓰기 작업을 나타내는 작업입니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.WriteAsync(System.Char)">
          <source>The following example shows how to write characters by using the <ph id="ph1">&lt;xref:System.IO.StringWriter.WriteAsync%28System.Char%29&gt;</ph> method.</source>
          <target state="translated">다음 예제를 사용 하 여 문자를 작성 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.IO.StringWriter.WriteAsync%28System.Char%29&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.WriteAsync(System.Char)">
          <source>The string writer is disposed.</source>
          <target state="translated">문자열 작성기가 삭제됩니다.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.WriteAsync(System.Char)">
          <source>The string writer is currently in use by a previous write operation.</source>
          <target state="translated">현재 이전 쓰기 작업에서 문자열 작성기를 사용하고 있습니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.WriteAsync(System.String)">
          <source>The string to write.</source>
          <target state="translated">쓸 문자열입니다.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.WriteAsync(System.String)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, nothing is written to the text stream.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept>이 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이면 텍스트 스트림에 아무 것도 쓰지 않습니다.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.WriteAsync(System.String)">
          <source>Writes a string to the current string asynchronously.</source>
          <target state="translated">문자열을 현재 문자열에 비동기적으로 씁니다.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.WriteAsync(System.String)">
          <source>A task that represents the asynchronous write operation.</source>
          <target state="translated">비동기 쓰기 작업을 나타내는 작업입니다.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.WriteAsync(System.String)">
          <source>The following example shows how to write a string by using the <ph id="ph1">&lt;xref:System.IO.StringWriter.WriteAsync%28System.String%29&gt;</ph> method.</source>
          <target state="translated">사용 하 여 문자열을 기록 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.IO.StringWriter.WriteAsync%28System.String%29&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.WriteAsync(System.String)">
          <source>The string writer is disposed.</source>
          <target state="translated">문자열 작성기가 삭제됩니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.WriteAsync(System.String)">
          <source>The string writer is currently in use by a previous write operation.</source>
          <target state="translated">현재 이전 쓰기 작업에서 문자열 작성기를 사용하고 있습니다.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source>The character array to write data from.</source>
          <target state="translated">쓸 데이터가 있는 문자 배열입니다.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source>The position in the buffer at which to start reading data.</source>
          <target state="translated">데이터 읽기를 시작하는 버퍼의 위치입니다.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source>The maximum number of characters to write.</source>
          <target state="translated">쓸 최대 문자 수입니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source>Writes a subarray of characters to the string asynchronously.</source>
          <target state="translated">문자의 하위 배열을 문자열에 비동기적으로 씁니다.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source>A task that represents the asynchronous write operation.</source>
          <target state="translated">비동기 쓰기 작업을 나타내는 작업입니다.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source>The following example shows how to write characters by using the <ph id="ph1">&lt;xref:System.IO.StringWriter.WriteAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> method.</source>
          <target state="translated">다음 예제를 사용 하 여 문자를 작성 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.IO.StringWriter.WriteAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="index" /&gt;</ph> plus <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is greater than the buffer length.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph>와 <ph id="ph2">&lt;paramref name="count" /&gt;</ph>의 합이 버퍼 길이보다 큽니다.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="count" /&gt;</ph>가 음수입니다.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source>The string writer is disposed.</source>
          <target state="translated">문자열 작성기가 삭제됩니다.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
          <source>The string writer is currently in use by a previous write operation.</source>
          <target state="translated">현재 이전 쓰기 작업에서 문자열 작성기를 사용하고 있습니다.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="T:System.IO.StringWriter">
          <source>Writes data followed by a line terminator asynchronously to the string.</source>
          <target state="translated">데이터와 줄 종결자를 차례로 문자열에 비동기적으로 씁니다.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.WriteLineAsync(System.Char)">
          <source>The character to write to the string.</source>
          <target state="translated">문자열에 쓸 문자입니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.WriteLineAsync(System.Char)">
          <source>Writes a character followed by a line terminator asynchronously to the string.</source>
          <target state="translated">문자와 줄 종결자를 차례로 문자열에 비동기적으로 씁니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.WriteLineAsync(System.Char)">
          <source>A task that represents the asynchronous write operation.</source>
          <target state="translated">비동기 쓰기 작업을 나타내는 작업입니다.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.WriteLineAsync(System.Char)">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">줄 종결자가 정의한는 <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.WriteLineAsync(System.Char)">
          <source>The following example shows how to write characters by using the <ph id="ph1">&lt;xref:System.IO.StringWriter.WriteLineAsync%28System.Char%29&gt;</ph> method.</source>
          <target state="translated">다음 예제를 사용 하 여 문자를 작성 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.IO.StringWriter.WriteLineAsync%28System.Char%29&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.WriteLineAsync(System.Char)">
          <source>The string writer is disposed.</source>
          <target state="translated">문자열 작성기가 삭제됩니다.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.WriteLineAsync(System.Char)">
          <source>The string writer is currently in use by a previous write operation.</source>
          <target state="translated">현재 이전 쓰기 작업에서 문자열 작성기를 사용하고 있습니다.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.WriteLineAsync(System.String)">
          <source>The string to write.</source>
          <target state="translated">쓸 문자열입니다.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.WriteLineAsync(System.String)">
          <source>If the value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, only a line terminator is written.</source>
          <target state="translated">값이 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이면 줄 종결자만 씁니다.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.WriteLineAsync(System.String)">
          <source>Writes a string followed by a line terminator asynchronously to the current string.</source>
          <target state="translated">문자열과 줄 종결자를 차례로 현재 문자열에 비동기적으로 씁니다.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.WriteLineAsync(System.String)">
          <source>A task that represents the asynchronous write operation.</source>
          <target state="translated">비동기 쓰기 작업을 나타내는 작업입니다.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.WriteLineAsync(System.String)">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">줄 종결자가 정의한는 <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.WriteLineAsync(System.String)">
          <source>The following example shows how to write a string by using the <ph id="ph1">&lt;xref:System.IO.StringWriter.WriteLineAsync%28System.String%29&gt;</ph> method.</source>
          <target state="translated">사용 하 여 문자열을 기록 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.IO.StringWriter.WriteLineAsync%28System.String%29&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.WriteLineAsync(System.String)">
          <source>The string writer is disposed.</source>
          <target state="translated">문자열 작성기가 삭제됩니다.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.WriteLineAsync(System.String)">
          <source>The string writer is currently in use by a previous write operation.</source>
          <target state="translated">현재 이전 쓰기 작업에서 문자열 작성기를 사용하고 있습니다.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>The character array to write data from.</source>
          <target state="translated">쓸 데이터가 있는 문자 배열입니다.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>The position in the buffer at which to start reading data.</source>
          <target state="translated">데이터 읽기를 시작하는 버퍼의 위치입니다.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>The maximum number of characters to write.</source>
          <target state="translated">쓸 최대 문자 수입니다.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>Writes a subarray of characters followed by a line terminator asynchronously to the string.</source>
          <target state="translated">문자의 하위 배열과 줄 종결자를 차례로 스트링에 비동기적으로 씁니다.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>A task that represents the asynchronous write operation.</source>
          <target state="translated">비동기 쓰기 작업을 나타내는 작업입니다.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>The line terminator is defined by the <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">줄 종결자가 정의한는 <ph id="ph1">&lt;xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>The following example shows how to write characters by using the <ph id="ph1">&lt;xref:System.IO.StringWriter.WriteLineAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> method.</source>
          <target state="translated">다음 예제를 사용 하 여 문자를 작성 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.IO.StringWriter.WriteLineAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="index" /&gt;</ph> plus <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is greater than the buffer length.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph>와 <ph id="ph2">&lt;paramref name="count" /&gt;</ph>의 합이 버퍼 길이보다 큽니다.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="count" /&gt;</ph>가 음수입니다.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>The string writer is disposed.</source>
          <target state="translated">문자열 작성기가 삭제됩니다.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.IO.StringWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
          <source>The string writer is currently in use by a previous write operation.</source>
          <target state="translated">현재 이전 쓰기 작업에서 문자열 작성기를 사용하고 있습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>