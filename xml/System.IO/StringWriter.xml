<Type Name="StringWriter" FullName="System.IO.StringWriter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6800fbddc2195a460c11789a7bb274b60a81e739" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39923961" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class StringWriter : System.IO.TextWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit StringWriter extends System.IO.TextWriter" />
  <TypeSignature Language="DocId" Value="T:System.IO.StringWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class StringWriter&#xA;Inherits TextWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class StringWriter : System::IO::TextWriter" />
  <TypeSignature Language="F#" Value="type StringWriter = class&#xA;    inherit TextWriter" />
  <AssemblyInfo>
    <AssemblyName>System.IO</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.TextWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="60c95-101">정보를 문자열로 쓰기 위한 <see cref="T:System.IO.TextWriter" />를 구현합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="60c95-101">Implements a <see cref="T:System.IO.TextWriter" /> for writing information to a string.</span>
      </span>
      <span data-ttu-id="60c95-102">정보는 내부 <see cref="T:System.Text.StringBuilder" />에 저장됩니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="60c95-102">The information is stored in an underlying <see cref="T:System.Text.StringBuilder" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c95-103"><xref:System.IO.StringWriter> 동기적 또는 비동기적으로 문자열을 작성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-103"><xref:System.IO.StringWriter> enables you to write to a string synchronously or asynchronously.</span></span> <span data-ttu-id="60c95-104">문자를 사용 하 여 한 번에 작성할 수 있습니다 합니다 <xref:System.IO.StringWriter.Write%28System.Char%29> 또는 <xref:System.IO.StringWriter.WriteAsync%28System.Char%29> 메서드를 사용 하 여 시간 문자열을 <xref:System.IO.StringWriter.Write%28System.String%29> 또는 <xref:System.IO.StringWriter.WriteAsync%28System.String%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="60c95-104">You can write a character at a time with the <xref:System.IO.StringWriter.Write%28System.Char%29> or the <xref:System.IO.StringWriter.WriteAsync%28System.Char%29> method, a string at a time using the <xref:System.IO.StringWriter.Write%28System.String%29> or the <xref:System.IO.StringWriter.WriteAsync%28System.String%29> method.</span></span> <span data-ttu-id="60c95-105">또한 문자, 문자 배열 또는 다음 중 하나를 사용 하 여 비동기적으로 줄 종결자 문자열을 작성할 수 있습니다는 <xref:System.IO.StringWriter.WriteLineAsync%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="60c95-105">In addition, you can write a character, an array of characters or a string followed by the line terminator asynchronously with one of the <xref:System.IO.StringWriter.WriteLineAsync%2A> methods.</span></span>  
  
[!INCLUDE[note_unnecessary_dispose](~/includes/note-unnecessary-dispose.md)]
  
 <span data-ttu-id="60c95-106">다음 표에서 일반적인 하거나 관련 된 I/O 작업의 예제를 나열합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-106">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="60c95-107">수행 작업</span><span class="sxs-lookup"><span data-stu-id="60c95-107">To do this...</span></span>|<span data-ttu-id="60c95-108">참조 항목</span><span class="sxs-lookup"><span data-stu-id="60c95-108">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="60c95-109">텍스트 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-109">Create a text file.</span></span>|[<span data-ttu-id="60c95-110">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="60c95-110">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="60c95-111">텍스트 파일에 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-111">Write to a text file.</span></span>|[<span data-ttu-id="60c95-112">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="60c95-112">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="60c95-113">텍스트 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-113">Read from a text file.</span></span>|[<span data-ttu-id="60c95-114">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="60c95-114">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="60c95-115">파일에 텍스트를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-115">Append text to a file.</span></span>|[<span data-ttu-id="60c95-116">방법: 로그 파일 열기 및 추가</span><span class="sxs-lookup"><span data-stu-id="60c95-116">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="60c95-117">파일의 크기를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-117">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="60c95-118">파일의 특성을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-118">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="60c95-119">파일의 특성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-119">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="60c95-120">파일의 존재 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-120">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="60c95-121">이진 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-121">Read from a binary file.</span></span>|[<span data-ttu-id="60c95-122">방법: 새로 만든 데이터 파일 읽기 및 쓰기</span><span class="sxs-lookup"><span data-stu-id="60c95-122">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="60c95-123">이진 파일에 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-123">Write to a binary file.</span></span>|[<span data-ttu-id="60c95-124">방법: 새로 만든 데이터 파일 읽기 및 쓰기</span><span class="sxs-lookup"><span data-stu-id="60c95-124">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="60c95-125">다음 코드 예제에서는 이중 공백된 문장 및 다음 단락의 변환 그룹에서 원본 텍스트를 다시 연속 단락의 만들기를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-125">The following code example demonstrates the creation of a continuous paragraph from a group of double-spaced sentences, and then the conversion of the paragraph back to the original text.</span></span>  
  
 [!code-cpp[System.IO.StringReaderWriter#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CPP/stringrw.cpp#1)]
 [!code-csharp[System.IO.StringReaderWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CS/stringrw.cs#1)]
 [!code-vb[System.IO.StringReaderWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringReaderWriter/VB/stringrw.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.StringBuilder" />
    <altmember cref="T:System.IO.StringReader" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="60c95-126">
            <see cref="T:System.IO.StringWriter" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-126">Initializes a new instance of the <see cref="T:System.IO.StringWriter" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringWriter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="60c95-127">
            <see cref="T:System.IO.StringWriter" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-127">Initializes a new instance of the <see cref="T:System.IO.StringWriter" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c95-128">새 <xref:System.Text.StringBuilder> 개체가 자동으로 생성 되 고의 새 인스턴스를 사용 하 여 연결 된 <xref:System.IO.StringWriter> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-128">A new <xref:System.Text.StringBuilder> object is automatically created and associated with the new instance of the <xref:System.IO.StringWriter> class.</span></span> <span data-ttu-id="60c95-129">새 인스턴스를 사용 하 여 초기화 됩니다이 생성자에 대 한 형식 컨트롤을 지정 하지 않으면 이후 <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-129">Since a format control is not specified for this constructor, the new instance will be initialized with <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="60c95-130">다음 표에서 일반적인 하거나 관련 된 I/O 작업의 예제를 나열합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-130">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="60c95-131">수행 작업</span><span class="sxs-lookup"><span data-stu-id="60c95-131">To do this...</span></span>|<span data-ttu-id="60c95-132">참조 항목</span><span class="sxs-lookup"><span data-stu-id="60c95-132">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="60c95-133">텍스트 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-133">Create a text file.</span></span>|[<span data-ttu-id="60c95-134">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="60c95-134">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="60c95-135">텍스트 파일에 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-135">Write to a text file.</span></span>|[<span data-ttu-id="60c95-136">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="60c95-136">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="60c95-137">텍스트 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-137">Read from a text file.</span></span>|[<span data-ttu-id="60c95-138">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="60c95-138">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="60c95-139">파일에 텍스트를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-139">Append text to a file.</span></span>|[<span data-ttu-id="60c95-140">방법: 로그 파일 열기 및 추가</span><span class="sxs-lookup"><span data-stu-id="60c95-140">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="60c95-141">파일의 크기를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-141">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="60c95-142">파일의 특성을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-142">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="60c95-143">파일의 특성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-143">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="60c95-144">파일의 존재 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-144">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="60c95-145">이진 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-145">Read from a binary file.</span></span>|[<span data-ttu-id="60c95-146">방법: 새로 만든 데이터 파일 읽기 및 쓰기</span><span class="sxs-lookup"><span data-stu-id="60c95-146">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="60c95-147">이진 파일에 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-147">Write to a binary file.</span></span>|[<span data-ttu-id="60c95-148">방법: 새로 만든 데이터 파일 읽기 및 쓰기</span><span class="sxs-lookup"><span data-stu-id="60c95-148">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="60c95-149">다음 코드 예제를 사용 하 여 문자열을 생성 하는 방법에 설명 합니다 `StringWriter` 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-149">The following code example demonstrates how to construct a string using the `StringWriter` class.</span></span>  
  
 [!code-cpp[System.IO.StringWriter1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter1/CPP/strwriter1.cpp#1)]
 [!code-csharp[System.IO.StringWriter1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter1/CS/strwriter1.cs#1)]
 [!code-vb[System.IO.StringWriter1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter1/VB/strwriter1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringWriter (IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.#ctor(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (formatProvider As IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringWriter(IFormatProvider ^ formatProvider);" />
      <MemberSignature Language="F#" Value="new System.IO.StringWriter : IFormatProvider -&gt; System.IO.StringWriter" Usage="new System.IO.StringWriter formatProvider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="formatProvider">
          <span data-ttu-id="60c95-150">서식 지정을 제어하는 <see cref="T:System.IFormatProvider" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-150">An <see cref="T:System.IFormatProvider" /> object that controls formatting.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60c95-151">지정한 형식 제어를 사용하여 <see cref="T:System.IO.StringWriter" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-151">Initializes a new instance of the <see cref="T:System.IO.StringWriter" /> class with the specified format control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c95-152">새 <xref:System.Text.StringBuilder> 개체가 자동으로 생성 되 고의 새 인스턴스를 사용 하 여 연결 된 <xref:System.IO.StringWriter> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-152">A new <xref:System.Text.StringBuilder> object is automatically created and associated with the new instance of the <xref:System.IO.StringWriter> class.</span></span>  
  
 <span data-ttu-id="60c95-153">다음 표에서 일반적인 하거나 관련 된 I/O 작업의 예제를 나열합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-153">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="60c95-154">수행 작업</span><span class="sxs-lookup"><span data-stu-id="60c95-154">To do this...</span></span>|<span data-ttu-id="60c95-155">참조 항목</span><span class="sxs-lookup"><span data-stu-id="60c95-155">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="60c95-156">텍스트 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-156">Create a text file.</span></span>|[<span data-ttu-id="60c95-157">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="60c95-157">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="60c95-158">텍스트 파일에 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-158">Write to a text file.</span></span>|[<span data-ttu-id="60c95-159">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="60c95-159">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="60c95-160">텍스트 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-160">Read from a text file.</span></span>|[<span data-ttu-id="60c95-161">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="60c95-161">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="60c95-162">파일에 텍스트를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-162">Append text to a file.</span></span>|[<span data-ttu-id="60c95-163">방법: 로그 파일 열기 및 추가</span><span class="sxs-lookup"><span data-stu-id="60c95-163">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="60c95-164">파일의 크기를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-164">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="60c95-165">파일의 특성을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-165">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="60c95-166">파일의 특성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-166">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="60c95-167">파일의 존재 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-167">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="60c95-168">이진 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-168">Read from a binary file.</span></span>|[<span data-ttu-id="60c95-169">방법: 새로 만든 데이터 파일 읽기 및 쓰기</span><span class="sxs-lookup"><span data-stu-id="60c95-169">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="60c95-170">이진 파일에 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-170">Write to a binary file.</span></span>|[<span data-ttu-id="60c95-171">방법: 새로 만든 데이터 파일 읽기 및 쓰기</span><span class="sxs-lookup"><span data-stu-id="60c95-171">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="60c95-172">다음 코드 예제에는 특정 문화권에서 문자열을 생성 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-172">The following code example demonstrates how to construct a string in a specific culture.</span></span>  
  
 [!code-cpp[System.IO.StringWriter2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter2/CPP/strwriter2.cpp#1)]
 [!code-csharp[System.IO.StringWriter2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter2/CS/strwriter2.cs#1)]
 [!code-vb[System.IO.StringWriter2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter2/VB/strwriter2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringWriter (System.Text.StringBuilder sb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Text.StringBuilder sb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sb As StringBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringWriter(System::Text::StringBuilder ^ sb);" />
      <MemberSignature Language="F#" Value="new System.IO.StringWriter : System.Text.StringBuilder -&gt; System.IO.StringWriter" Usage="new System.IO.StringWriter sb" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="sb" Type="System.Text.StringBuilder" />
      </Parameters>
      <Docs>
        <param name="sb">
          <span data-ttu-id="60c95-173">쓸 대상 <see cref="T:System.Text.StringBuilder" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-173">The <see cref="T:System.Text.StringBuilder" /> object to write to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60c95-174">지정한 <see cref="T:System.IO.StringWriter" />에 쓰는 <see cref="T:System.Text.StringBuilder" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-174">Initializes a new instance of the <see cref="T:System.IO.StringWriter" /> class that writes to the specified <see cref="T:System.Text.StringBuilder" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c95-175">새 인스턴스를 사용 하 여 초기화 됩니다이 생성자에 대 한 형식 컨트롤을 지정 하지 않으면 이후 <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-175">Since a format control is not specified for this constructor, the new instance will be initialized with <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="60c95-176">다음 표에서 일반적인 하거나 관련 된 I/O 작업의 예제를 나열합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-176">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="60c95-177">수행 작업</span><span class="sxs-lookup"><span data-stu-id="60c95-177">To do this...</span></span>|<span data-ttu-id="60c95-178">참조 항목</span><span class="sxs-lookup"><span data-stu-id="60c95-178">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="60c95-179">텍스트 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-179">Create a text file.</span></span>|[<span data-ttu-id="60c95-180">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="60c95-180">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="60c95-181">텍스트 파일에 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-181">Write to a text file.</span></span>|[<span data-ttu-id="60c95-182">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="60c95-182">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="60c95-183">텍스트 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-183">Read from a text file.</span></span>|[<span data-ttu-id="60c95-184">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="60c95-184">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="60c95-185">파일에 텍스트를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-185">Append text to a file.</span></span>|[<span data-ttu-id="60c95-186">방법: 로그 파일 열기 및 추가</span><span class="sxs-lookup"><span data-stu-id="60c95-186">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="60c95-187">파일의 크기를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-187">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="60c95-188">파일의 특성을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-188">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="60c95-189">파일의 특성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-189">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="60c95-190">파일의 존재 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-190">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="60c95-191">이진 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-191">Read from a binary file.</span></span>|[<span data-ttu-id="60c95-192">방법: 새로 만든 데이터 파일 읽기 및 쓰기</span><span class="sxs-lookup"><span data-stu-id="60c95-192">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="60c95-193">이진 파일에 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-193">Write to a binary file.</span></span>|[<span data-ttu-id="60c95-194">방법: 새로 만든 데이터 파일 읽기 및 쓰기</span><span class="sxs-lookup"><span data-stu-id="60c95-194">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="60c95-195">다음 코드 예제는 <xref:System.Text.StringBuilder> 닫힌의 기본 문자열을 수정 하는 클래스 `StringWriter`합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-195">The following code example demonstrates using the <xref:System.Text.StringBuilder> class to modify the underlying string in a closed `StringWriter`.</span></span>  
  
 [!code-cpp[System.IO.StringWriter3#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter3/CPP/strwriter3.cpp#1)]
 [!code-csharp[System.IO.StringWriter3#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter3/CS/strwriter3.cs#1)]
 [!code-vb[System.IO.StringWriter3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter3/VB/strwriter3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="60c95-196">
            <paramref name="sb" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-196">
              <paramref name="sb" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringWriter (System.Text.StringBuilder sb, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Text.StringBuilder sb, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sb As StringBuilder, formatProvider As IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringWriter(System::Text::StringBuilder ^ sb, IFormatProvider ^ formatProvider);" />
      <MemberSignature Language="F#" Value="new System.IO.StringWriter : System.Text.StringBuilder * IFormatProvider -&gt; System.IO.StringWriter" Usage="new System.IO.StringWriter (sb, formatProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sb" Type="System.Text.StringBuilder" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="sb">
          <span data-ttu-id="60c95-197">쓸 대상 <see cref="T:System.Text.StringBuilder" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-197">The <see cref="T:System.Text.StringBuilder" /> object to write to.</span>
          </span>
        </param>
        <param name="formatProvider">
          <span data-ttu-id="60c95-198">서식 지정을 제어하는 <see cref="T:System.IFormatProvider" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-198">An <see cref="T:System.IFormatProvider" /> object that controls formatting.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60c95-199">지정한 <see cref="T:System.IO.StringWriter" />에 쓰고 지정한 서식 공급자를 갖는 <see cref="T:System.Text.StringBuilder" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-199">Initializes a new instance of the <see cref="T:System.IO.StringWriter" /> class that writes to the specified <see cref="T:System.Text.StringBuilder" /> and has the specified format provider.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c95-200">다음 표에서 일반적인 하거나 관련 된 I/O 작업의 예제를 나열합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-200">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="60c95-201">수행 작업</span><span class="sxs-lookup"><span data-stu-id="60c95-201">To do this...</span></span>|<span data-ttu-id="60c95-202">참조 항목</span><span class="sxs-lookup"><span data-stu-id="60c95-202">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="60c95-203">텍스트 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-203">Create a text file.</span></span>|[<span data-ttu-id="60c95-204">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="60c95-204">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="60c95-205">텍스트 파일에 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-205">Write to a text file.</span></span>|[<span data-ttu-id="60c95-206">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="60c95-206">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="60c95-207">텍스트 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-207">Read from a text file.</span></span>|[<span data-ttu-id="60c95-208">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="60c95-208">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="60c95-209">파일에 텍스트를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-209">Append text to a file.</span></span>|[<span data-ttu-id="60c95-210">방법: 로그 파일 열기 및 추가</span><span class="sxs-lookup"><span data-stu-id="60c95-210">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="60c95-211">파일의 크기를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-211">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="60c95-212">파일의 특성을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-212">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="60c95-213">파일의 특성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-213">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="60c95-214">파일의 존재 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-214">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="60c95-215">이진 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-215">Read from a binary file.</span></span>|[<span data-ttu-id="60c95-216">방법: 새로 만든 데이터 파일 읽기 및 쓰기</span><span class="sxs-lookup"><span data-stu-id="60c95-216">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="60c95-217">이진 파일에 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-217">Write to a binary file.</span></span>|[<span data-ttu-id="60c95-218">방법: 새로 만든 데이터 파일 읽기 및 쓰기</span><span class="sxs-lookup"><span data-stu-id="60c95-218">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="60c95-219">
            <paramref name="sb" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-219">
              <paramref name="sb" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="stringWriter.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="60c95-220">현재 <see cref="T:System.IO.StringWriter" /> 및 기본 스트림을 닫습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-220">Closes the current <see cref="T:System.IO.StringWriter" /> and the underlying stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c95-221">파일을 만들고 파일에 텍스트 쓰기의 예제를 보려면 [방법: 파일에 텍스트 쓰기](~/docs/standard/io/how-to-write-text-to-a-file.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-221">For an example of creating a file and writing text to a file, see [How to: Write Text to a File](~/docs/standard/io/how-to-write-text-to-a-file.md).</span></span> <span data-ttu-id="60c95-222">파일에서 읽는 텍스트의 예제를 보려면 [방법: 파일에서 텍스트 읽기](~/docs/standard/io/how-to-read-text-from-a-file.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-222">For an example of reading text from a file, see [How to: Read Text from a File](~/docs/standard/io/how-to-read-text-from-a-file.md).</span></span> <span data-ttu-id="60c95-223">읽기 및 쓰기 이진 파일의 예제를 참조 하세요 [방법: 새로 만든 데이터 파일에 읽기 및 쓰기](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-223">For an example of reading from and writing to a binary file, see [How to: Read and Write to a Newly Created Data File](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md).</span></span>  
  
 <span data-ttu-id="60c95-224">이 메서드는 <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType>를 재정의합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-224">This method overrides <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="60c95-225">이 구현의 `Close` 호출을 <xref:System.IO.StringWriter.Dispose%2A> 전달 하는 메서드를 `true` 값입니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-225">This implementation of `Close` calls the <xref:System.IO.StringWriter.Dispose%2A> method passing a `true` value.</span></span>  
  
 <span data-ttu-id="60c95-226">명시적으로 호출 하지 않으면 스트림을 내부 인코더가 플러시되지 것입니다 `Close`합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-226">Flushing the stream will not flush its underlying encoder unless you explicitly call `Close`.</span></span> <span data-ttu-id="60c95-227">설정 <xref:System.IO.StreamWriter.AutoFlush%2A> 에 `true` 스트림 버퍼에서 데이터를 플러시할 수는 있지만 인코더 상태는 플러시되지 있다는 것을 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-227">Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="60c95-228">이 수는 다음 문자 블록을 올바르게 인코딩할 수 있도록 상태로 (부분 자)를 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-228">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="60c95-229">이 시나리오는 UTF8 및 UTF7 인코더는 인접 한 문자를 받은 후 특정 문자를 인코딩된만 수 있는 영향을 줍니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-229">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="60c95-230">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.IO.StringWriter.%23ctor%28System.Text.StringBuilder%29> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-230">This code example is part of a larger example provided for the <xref:System.IO.StringWriter.%23ctor%28System.Text.StringBuilder%29> constructor.</span></span>  
  
 [!code-cpp[System.IO.StringWriter3#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter3/CPP/strwriter3.cpp#2)]
 [!code-csharp[System.IO.StringWriter3#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter3/CS/strwriter3.cs#2)]
 [!code-vb[System.IO.StringWriter3#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter3/VB/strwriter3.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="stringWriter.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="60c95-231">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-231">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60c95-232">
            <see cref="T:System.IO.StringWriter" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-232">Releases the unmanaged resources used by the <see cref="T:System.IO.StringWriter" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c95-233">`disposing` 매개 변수가 `true`인 경우 이 메서드는 이 <xref:System.IO.StringWriter>에서 참조하는 관리 개체가 보유하고 있는 리소스를 모두 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-233">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.StringWriter> references.</span></span> <span data-ttu-id="60c95-234">이 메서드는 참조되는 각 개체의 `Dispose` 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-234">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="60c95-235">
            <para>
              <see cref="M:System.IO.StringWriter.Dispose(System.Boolean)" /> 다른 개체에서 여러 번 호출할 수 있습니다. 재정의 하는 경우 <see cref="M:System.IO.StringWriter.Dispose(System.Boolean)" />대 한 이전 호출에서 삭제 된 개체를 참조 하지 않도록 주의 하십시오 <see cref="M:System.IO.StringWriter.Dispose(System.Boolean)" />합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-235">
              <para>
                <see cref="M:System.IO.StringWriter.Dispose(System.Boolean)" /> can be called multiple times by other objects. When overriding <see cref="M:System.IO.StringWriter.Dispose(System.Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see cref="M:System.IO.StringWriter.Dispose(System.Boolean)" />.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public override System.Text.Encoding Encoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.IO.StringWriter.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding" Usage="System.IO.StringWriter.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="60c95-236">출력이 쓰여질 <see cref="T:System.Text.Encoding" />을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-236">Gets the <see cref="T:System.Text.Encoding" /> in which the output is written.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="60c95-237">출력이 쓰여질 <see langword="Encoding" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-237">The <see langword="Encoding" /> in which the output is written.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c95-238">이 속성은 위치 헤더를 작성 해야 사용한 인코딩을 포함 하는 일부 XML 시나리오에 대 한 필요를 `StringWriter`입니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-238">This property is necessary for some XML scenarios where a header must be written containing the encoding used by the `StringWriter`.</span></span> <span data-ttu-id="60c95-239">이렇게 하면 임의의 사용 하는 XML 코드 `StringWriter` 올바른 XML 헤더를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-239">This allows the XML code to consume an arbitrary `StringWriter` and generate the correct XML header.</span></span>  
  
 <span data-ttu-id="60c95-240">다음 표에서 일반적인 하거나 관련 된 I/O 작업의 예제를 나열합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-240">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="60c95-241">수행 작업</span><span class="sxs-lookup"><span data-stu-id="60c95-241">To do this...</span></span>|<span data-ttu-id="60c95-242">참조 항목</span><span class="sxs-lookup"><span data-stu-id="60c95-242">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="60c95-243">텍스트 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-243">Create a text file.</span></span>|[<span data-ttu-id="60c95-244">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="60c95-244">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="60c95-245">텍스트 파일에 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-245">Write to a text file.</span></span>|[<span data-ttu-id="60c95-246">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="60c95-246">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="60c95-247">텍스트 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-247">Read from a text file.</span></span>|[<span data-ttu-id="60c95-248">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="60c95-248">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="60c95-249">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.IO.StringWriter.%23ctor> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-249">This code example is part of a larger example provided for the <xref:System.IO.StringWriter.%23ctor> constructor.</span></span>  
  
 [!code-cpp[System.IO.StringWriter1#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter1/CPP/strwriter1.cpp#4)]
 [!code-csharp[System.IO.StringWriter1#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter1/CS/strwriter1.cs#4)]
 [!code-vb[System.IO.StringWriter1#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter1/VB/strwriter1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task FlushAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task FlushAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.FlushAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FlushAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ FlushAsync();" />
      <MemberSignature Language="F#" Value="override this.FlushAsync : unit -&gt; System.Threading.Tasks.Task" Usage="stringWriter.FlushAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="60c95-250">현재 작성기에 대한 모든 버퍼를 비동기적으로 지우면 버퍼링된 모든 데이터를 내부 장치에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-250">Asynchronously clears all buffers for the current writer and causes any buffered data to be written to the underlying device.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="60c95-251">비동기 플러시 작업을 나타내는 작업입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-251">A task that represents the asynchronous flush operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStringBuilder">
      <MemberSignature Language="C#" Value="public virtual System.Text.StringBuilder GetStringBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.StringBuilder GetStringBuilder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.GetStringBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStringBuilder () As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Text::StringBuilder ^ GetStringBuilder();" />
      <MemberSignature Language="F#" Value="abstract member GetStringBuilder : unit -&gt; System.Text.StringBuilder&#xA;override this.GetStringBuilder : unit -&gt; System.Text.StringBuilder" Usage="stringWriter.GetStringBuilder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="60c95-252">내부 <see cref="T:System.Text.StringBuilder" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-252">Returns the underlying <see cref="T:System.Text.StringBuilder" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="60c95-253">내부 <see langword="StringBuilder" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-253">The underlying <see langword="StringBuilder" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c95-254">이 값은 `StringBuilder` 생성자에 전달 된 또는 `StringBuilder` 자동으로 생성 된 합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-254">This is either the `StringBuilder` that was passed to the constructor, or the `StringBuilder` that was automatically created.</span></span>  
  
 <span data-ttu-id="60c95-255">다음 표에서 일반적인 하거나 관련 된 I/O 작업의 예제를 나열합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-255">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="60c95-256">수행 작업</span><span class="sxs-lookup"><span data-stu-id="60c95-256">To do this...</span></span>|<span data-ttu-id="60c95-257">참조 항목</span><span class="sxs-lookup"><span data-stu-id="60c95-257">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="60c95-258">텍스트 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-258">Create a text file.</span></span>|[<span data-ttu-id="60c95-259">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="60c95-259">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="60c95-260">텍스트 파일에 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-260">Write to a text file.</span></span>|[<span data-ttu-id="60c95-261">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="60c95-261">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="60c95-262">텍스트 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-262">Read from a text file.</span></span>|[<span data-ttu-id="60c95-263">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="60c95-263">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="60c95-264">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.IO.StringWriter.%23ctor> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-264">This code example is part of a larger example provided for the <xref:System.IO.StringWriter.%23ctor> constructor.</span></span>  
  
 [!code-cpp[System.IO.StringWriter1#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter1/CPP/strwriter1.cpp#3)]
 [!code-csharp[System.IO.StringWriter1#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter1/CS/strwriter1.cs#3)]
 [!code-vb[System.IO.StringWriter1#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter1/VB/strwriter1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="stringWriter.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="60c95-265">현재 <see langword="StringWriter" />에 지금까지 쓰여진 문자가 포함된 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-265">Returns a string containing the characters written to the current <see langword="StringWriter" /> so far.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="60c95-266">현재 <see langword="StringWriter" />에 쓰여진 문자가 포함된 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-266">The string containing the characters written to the current <see langword="StringWriter" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c95-267">다음 표에서 일반적인 하거나 관련 된 I/O 작업의 예제를 나열합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-267">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="60c95-268">수행 작업</span><span class="sxs-lookup"><span data-stu-id="60c95-268">To do this...</span></span>|<span data-ttu-id="60c95-269">참조 항목</span><span class="sxs-lookup"><span data-stu-id="60c95-269">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="60c95-270">텍스트 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-270">Create a text file.</span></span>|[<span data-ttu-id="60c95-271">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="60c95-271">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="60c95-272">텍스트 파일에 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-272">Write to a text file.</span></span>|[<span data-ttu-id="60c95-273">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="60c95-273">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="60c95-274">텍스트 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-274">Read from a text file.</span></span>|[<span data-ttu-id="60c95-275">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="60c95-275">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="60c95-276">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.IO.StringWriter.%23ctor%28System.IFormatProvider%29> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-276">This code example is part of a larger example provided for the <xref:System.IO.StringWriter.%23ctor%28System.IFormatProvider%29> constructor.</span></span>  
  
 [!code-cpp[System.IO.StringWriter2#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter2/CPP/strwriter2.cpp#2)]
 [!code-csharp[System.IO.StringWriter2#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter2/CS/strwriter2.cs#2)]
 [!code-vb[System.IO.StringWriter2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter2/VB/strwriter2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="60c95-277">데이터를 문자열에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-277">Writes data to the string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.Write(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(char value);" />
      <MemberSignature Language="F#" Value="override this.Write : char -&gt; unit" Usage="stringWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="60c95-278">작성할 문자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-278">The character to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60c95-279">문자열에 문자를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-279">Writes a character to the string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c95-280">이 메서드는 <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>를 재정의합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-280">This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="60c95-281">다음 표에서 일반적인 하거나 관련 된 I/O 작업의 예제를 나열합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-281">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="60c95-282">수행 작업</span><span class="sxs-lookup"><span data-stu-id="60c95-282">To do this...</span></span>|<span data-ttu-id="60c95-283">참조 항목</span><span class="sxs-lookup"><span data-stu-id="60c95-283">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="60c95-284">텍스트 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-284">Create a text file.</span></span>|[<span data-ttu-id="60c95-285">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="60c95-285">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="60c95-286">텍스트 파일에 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-286">Write to a text file.</span></span>|[<span data-ttu-id="60c95-287">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="60c95-287">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="60c95-288">텍스트 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-288">Read from a text file.</span></span>|[<span data-ttu-id="60c95-289">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="60c95-289">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="60c95-290">파일에 텍스트를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-290">Append text to a file.</span></span>|[<span data-ttu-id="60c95-291">방법: 로그 파일 열기 및 추가</span><span class="sxs-lookup"><span data-stu-id="60c95-291">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="60c95-292">파일의 크기를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-292">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="60c95-293">파일의 특성을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-293">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="60c95-294">파일의 특성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-294">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="60c95-295">파일의 존재 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-295">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="60c95-296">이진 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-296">Read from a binary file.</span></span>|[<span data-ttu-id="60c95-297">방법: 새로 만든 데이터 파일 읽기 및 쓰기</span><span class="sxs-lookup"><span data-stu-id="60c95-297">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="60c95-298">이진 파일에 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-298">Write to a binary file.</span></span>|[<span data-ttu-id="60c95-299">방법: 새로 만든 데이터 파일 읽기 및 쓰기</span><span class="sxs-lookup"><span data-stu-id="60c95-299">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="60c95-300">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.IO.StringWriter.%23ctor> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-300">This code example is part of a larger example provided for the <xref:System.IO.StringWriter.%23ctor> constructor.</span></span>  
  
 [!code-cpp[System.IO.StringWriter1#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter1/CPP/strwriter1.cpp#2)]
 [!code-csharp[System.IO.StringWriter1#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter1/CS/strwriter1.cs#2)]
 [!code-vb[System.IO.StringWriter1#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter1/VB/strwriter1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="60c95-301">작성기가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-301">The writer is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(valuetype System.ReadOnlySpan`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.Write(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberSignature Language="F#" Value="override this.Write : ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="stringWriter.Write buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ value);" />
      <MemberSignature Language="F#" Value="override this.Write : string -&gt; unit" Usage="stringWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="60c95-302">쓸 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-302">The string to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60c95-303">현재 문자열에 문자열을 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-303">Writes a string to the current string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c95-304">이 메서드는 <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>를 재정의합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-304">This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="60c95-305">지정 된 문자열이 `null`에 아무것도 기록 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-305">If the specified string is `null`, nothing is written.</span></span>  
  
 <span data-ttu-id="60c95-306">다음 표에서 일반적인 하거나 관련 된 I/O 작업의 예제를 나열합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-306">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="60c95-307">수행 작업</span><span class="sxs-lookup"><span data-stu-id="60c95-307">To do this...</span></span>|<span data-ttu-id="60c95-308">참조 항목</span><span class="sxs-lookup"><span data-stu-id="60c95-308">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="60c95-309">텍스트 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-309">Create a text file.</span></span>|[<span data-ttu-id="60c95-310">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="60c95-310">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="60c95-311">텍스트 파일에 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-311">Write to a text file.</span></span>|[<span data-ttu-id="60c95-312">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="60c95-312">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="60c95-313">텍스트 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-313">Read from a text file.</span></span>|[<span data-ttu-id="60c95-314">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="60c95-314">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="60c95-315">파일에 텍스트를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-315">Append text to a file.</span></span>|[<span data-ttu-id="60c95-316">방법: 로그 파일 열기 및 추가</span><span class="sxs-lookup"><span data-stu-id="60c95-316">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="60c95-317">파일의 크기를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-317">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="60c95-318">파일의 특성을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-318">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="60c95-319">파일의 특성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-319">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="60c95-320">파일의 존재 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-320">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="60c95-321">이진 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-321">Read from a binary file.</span></span>|[<span data-ttu-id="60c95-322">방법: 새로 만든 데이터 파일 읽기 및 쓰기</span><span class="sxs-lookup"><span data-stu-id="60c95-322">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="60c95-323">이진 파일에 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-323">Write to a binary file.</span></span>|[<span data-ttu-id="60c95-324">방법: 새로 만든 데이터 파일 읽기 및 쓰기</span><span class="sxs-lookup"><span data-stu-id="60c95-324">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="60c95-325">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.IO.StringWriter> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-325">This code example is part of a larger example provided for the <xref:System.IO.StringWriter> class.</span></span>  
  
 [!code-cpp[System.IO.StringReaderWriter#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CPP/stringrw.cpp#3)]
 [!code-csharp[System.IO.StringReaderWriter#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CS/stringrw.cs#3)]
 [!code-vb[System.IO.StringReaderWriter#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringReaderWriter/VB/stringrw.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="60c95-326">작성기가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-326">The writer is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.Write(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.Write : char[] * int * int -&gt; unit" Usage="stringWriter.Write (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="60c95-327">쓸 데이터가 있는 문자 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-327">The character array to write data from.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="60c95-328">데이터 읽기를 시작하는 버퍼의 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-328">The position in the buffer at which to start reading data.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="60c95-329">쓸 최대 문자 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-329">The maximum number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60c95-330">문자열에 문자의 하위 배열을 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-330">Writes a subarray of characters to the string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c95-331">이 메서드는 <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>를 재정의합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-331">This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="60c95-332">이 메서드를 씁니다 `count` 이 데이터 문자의 `StringWriter` 에서 `buffer`위치에서 시작 하는 `index`합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-332">This method writes `count` characters of data to this `StringWriter` from `buffer`, starting at position `index`.</span></span>  
  
 <span data-ttu-id="60c95-333">다음 표에서 일반적인 하거나 관련 된 I/O 작업의 예제를 나열합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-333">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="60c95-334">수행 작업</span><span class="sxs-lookup"><span data-stu-id="60c95-334">To do this...</span></span>|<span data-ttu-id="60c95-335">참조 항목</span><span class="sxs-lookup"><span data-stu-id="60c95-335">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="60c95-336">텍스트 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-336">Create a text file.</span></span>|[<span data-ttu-id="60c95-337">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="60c95-337">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="60c95-338">텍스트 파일에 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-338">Write to a text file.</span></span>|[<span data-ttu-id="60c95-339">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="60c95-339">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="60c95-340">텍스트 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-340">Read from a text file.</span></span>|[<span data-ttu-id="60c95-341">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="60c95-341">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="60c95-342">파일에 텍스트를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-342">Append text to a file.</span></span>|[<span data-ttu-id="60c95-343">방법: 로그 파일 열기 및 추가</span><span class="sxs-lookup"><span data-stu-id="60c95-343">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="60c95-344">파일의 크기를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-344">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="60c95-345">파일의 특성을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-345">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="60c95-346">파일의 특성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-346">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="60c95-347">파일의 존재 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-347">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="60c95-348">이진 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-348">Read from a binary file.</span></span>|[<span data-ttu-id="60c95-349">방법: 새로 만든 데이터 파일 읽기 및 쓰기</span><span class="sxs-lookup"><span data-stu-id="60c95-349">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="60c95-350">이진 파일에 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-350">Write to a binary file.</span></span>|[<span data-ttu-id="60c95-351">방법: 새로 만든 데이터 파일 읽기 및 쓰기</span><span class="sxs-lookup"><span data-stu-id="60c95-351">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="60c95-352">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.IO.StringWriter.%23ctor> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-352">This code example is part of a larger example provided for the <xref:System.IO.StringWriter.%23ctor> constructor.</span></span>  
  
 [!code-cpp[System.IO.StringWriter1#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter1/CPP/strwriter1.cpp#2)]
 [!code-csharp[System.IO.StringWriter1#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter1/CS/strwriter1.cs#2)]
 [!code-vb[System.IO.StringWriter1#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter1/VB/strwriter1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="60c95-353">
            <paramref name="buffer" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-353">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="60c95-354">
            <paramref name="index" /> 또는 <paramref name="count" />가 음수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-354">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="60c95-355">(<paramref name="index" /> + <paramref name="count" />)&gt; <paramref name="buffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-355">(<paramref name="index" /> + <paramref name="count" />)&gt; <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="60c95-356">
            <see langword="Length" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-356">
              <see langword="Length" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="60c95-357">작성기가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-357">The writer is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="60c95-358">데이터를 문자열에 비동기적으로 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-358">Writes data to the string asynchronously.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteAsync(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteAsync (value As Char) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(char value);" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : char -&gt; System.Threading.Tasks.Task" Usage="stringWriter.WriteAsync value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="60c95-359">문자열에 쓸 문자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-359">The character to write to the string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60c95-360">문자를 문자열에 비동기적으로 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-360">Writes a character to the string asynchronously.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="60c95-361">비동기 쓰기 작업을 나타내는 작업입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-361">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="60c95-362">다음 예제에 사용 하 여 문자를 쓰는 방법을 보여 줍니다는 <xref:System.IO.StringWriter.WriteAsync%28System.Char%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="60c95-362">The following example shows how to write characters by using the <xref:System.IO.StringWriter.WriteAsync%28System.Char%29> method.</span></span>  
  
 [!code-csharp[System.IO.StringWriter#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringwriter/cs/example5.cs#5)]
 [!code-vb[System.IO.StringWriter#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringwriter/vb/example5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="60c95-363">문자열 작성기가 삭제됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-363">The string writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="60c95-364">현재 이전 쓰기 작업에서 문자열 작성기를 사용하고 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-364">The string writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteAsync (value As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(System::String ^ value);" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : string -&gt; System.Threading.Tasks.Task" Usage="stringWriter.WriteAsync value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="60c95-365">쓸 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-365">The string to write.</span>
          </span>
          <span data-ttu-id="60c95-366">
            <c>값</c>이 <see langword="null" />이면 텍스트 스트림에 아무 것도 쓰지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-366">If <c>value</c> is <see langword="null" />, nothing is written to the text stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60c95-367">문자열을 현재 문자열에 비동기적으로 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-367">Writes a string to the current string asynchronously.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="60c95-368">비동기 쓰기 작업을 나타내는 작업입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-368">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="60c95-369">다음 예제를 사용 하 여 문자열을 작성 하는 방법을 보여 줍니다는 <xref:System.IO.StringWriter.WriteAsync%28System.String%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="60c95-369">The following example shows how to write a string by using the <xref:System.IO.StringWriter.WriteAsync%28System.String%29> method.</span></span>  
  
 [!code-csharp[System.IO.StringWriter#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringwriter/cs/example4.cs#4)]
 [!code-vb[System.IO.StringWriter#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringwriter/vb/example4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="60c95-370">문자열 작성기가 삭제됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-370">The string writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="60c95-371">현재 이전 쓰기 작업에서 문자열 작성기를 사용하고 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-371">The string writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (ReadOnlyMemory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(valuetype System.ReadOnlyMemory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteAsync(System.ReadOnlyMemory{System.Char},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : ReadOnlyMemory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="stringWriter.WriteAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlyMemory&lt;System.Char&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteAsync (buffer As Char(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : char[] * int * int -&gt; System.Threading.Tasks.Task" Usage="stringWriter.WriteAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="60c95-372">쓸 데이터가 있는 문자 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-372">The character array to write data from.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="60c95-373">데이터 읽기를 시작하는 버퍼의 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-373">The position in the buffer at which to start reading data.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="60c95-374">쓸 최대 문자 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-374">The maximum number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60c95-375">문자의 하위 배열을 문자열에 비동기적으로 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-375">Writes a subarray of characters to the string asynchronously.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="60c95-376">비동기 쓰기 작업을 나타내는 작업입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-376">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="60c95-377">다음 예제에 사용 하 여 문자를 쓰는 방법을 보여 줍니다는 <xref:System.IO.StringWriter.WriteAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="60c95-377">The following example shows how to write characters by using the <xref:System.IO.StringWriter.WriteAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method.</span></span>  
  
 [!code-csharp[System.IO.StringWriter#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringwriter/cs/example6.cs#6)]
 [!code-vb[System.IO.StringWriter#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringwriter/vb/example6.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="60c95-378">
            <paramref name="buffer" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-378">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="60c95-379">
            <paramref name="index" />와 <paramref name="count" />의 합이 버퍼 길이보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-379">The <paramref name="index" /> plus <paramref name="count" /> is greater than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="60c95-380">
            <paramref name="index" /> 또는 <paramref name="count" />가 음수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-380">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="60c95-381">문자열 작성기가 삭제됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-381">The string writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="60c95-382">현재 이전 쓰기 작업에서 문자열 작성기를 사용하고 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-382">The string writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(valuetype System.ReadOnlySpan`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteLine(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (buffer As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="stringWriter.WriteLine buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLineAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="60c95-383">데이터와 줄 종결자를 차례로 문자열에 비동기적으로 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-383">Writes data followed by a line terminator asynchronously to the string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteLineAsync(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteLineAsync (value As Char) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteLineAsync(char value);" />
      <MemberSignature Language="F#" Value="override this.WriteLineAsync : char -&gt; System.Threading.Tasks.Task" Usage="stringWriter.WriteLineAsync value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="60c95-384">문자열에 쓸 문자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-384">The character to write to the string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60c95-385">문자와 줄 종결자를 차례로 문자열에 비동기적으로 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-385">Writes a character followed by a line terminator asynchronously to the string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="60c95-386">비동기 쓰기 작업을 나타내는 작업입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-386">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c95-387">줄 종결자가 정의한는 <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-387">The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="60c95-388">다음 예제에 사용 하 여 문자를 쓰는 방법을 보여 줍니다는 <xref:System.IO.StringWriter.WriteLineAsync%28System.Char%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="60c95-388">The following example shows how to write characters by using the <xref:System.IO.StringWriter.WriteLineAsync%28System.Char%29> method.</span></span>  
  
 [!code-csharp[System.IO.StringWriter#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringwriter/cs/example2.cs#2)]
 [!code-vb[System.IO.StringWriter#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringwriter/vb/example2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="60c95-389">문자열 작성기가 삭제됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-389">The string writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="60c95-390">현재 이전 쓰기 작업에서 문자열 작성기를 사용하고 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-390">The string writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteLineAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteLineAsync (value As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteLineAsync(System::String ^ value);" />
      <MemberSignature Language="F#" Value="override this.WriteLineAsync : string -&gt; System.Threading.Tasks.Task" Usage="stringWriter.WriteLineAsync value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="60c95-391">쓸 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-391">The string to write.</span>
          </span>
          <span data-ttu-id="60c95-392">값이 <see langword="null" />이면 줄 종결자만 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-392">If the value is <see langword="null" />, only a line terminator is written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60c95-393">문자열과 줄 종결자를 차례로 현재 문자열에 비동기적으로 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-393">Writes a string followed by a line terminator asynchronously to the current string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="60c95-394">비동기 쓰기 작업을 나타내는 작업입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-394">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c95-395">줄 종결자가 정의한는 <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-395">The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="60c95-396">다음 예제를 사용 하 여 문자열을 작성 하는 방법을 보여 줍니다는 <xref:System.IO.StringWriter.WriteLineAsync%28System.String%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="60c95-396">The following example shows how to write a string by using the <xref:System.IO.StringWriter.WriteLineAsync%28System.String%29> method.</span></span>  
  
 [!code-csharp[System.IO.StringWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringwriter/cs/example.cs#1)]
 [!code-vb[System.IO.StringWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringwriter/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="60c95-397">문자열 작성기가 삭제됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-397">The string writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="60c95-398">현재 이전 쓰기 작업에서 문자열 작성기를 사용하고 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-398">The string writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync (ReadOnlyMemory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync(valuetype System.ReadOnlyMemory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteLineAsync(System.ReadOnlyMemory{System.Char},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.WriteLineAsync : ReadOnlyMemory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="stringWriter.WriteLineAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlyMemory&lt;System.Char&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteLineAsync (buffer As Char(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteLineAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.WriteLineAsync : char[] * int * int -&gt; System.Threading.Tasks.Task" Usage="stringWriter.WriteLineAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="60c95-399">쓸 데이터가 있는 문자 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-399">The character array to write data from.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="60c95-400">데이터 읽기를 시작하는 버퍼의 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-400">The position in the buffer at which to start reading data.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="60c95-401">쓸 최대 문자 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-401">The maximum number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60c95-402">문자의 하위 배열과 줄 종결자를 차례로 스트링에 비동기적으로 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-402">Writes a subarray of characters followed by a line terminator asynchronously to the string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="60c95-403">비동기 쓰기 작업을 나타내는 작업입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-403">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c95-404">줄 종결자가 정의한는 <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="60c95-404">The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="60c95-405">다음 예제에 사용 하 여 문자를 쓰는 방법을 보여 줍니다는 <xref:System.IO.StringWriter.WriteLineAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="60c95-405">The following example shows how to write characters by using the <xref:System.IO.StringWriter.WriteLineAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method.</span></span>  
  
 [!code-csharp[System.IO.StringWriter#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringwriter/cs/example3.cs#3)]
 [!code-vb[System.IO.StringWriter#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringwriter/vb/example3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="60c95-406">
            <paramref name="buffer" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-406">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="60c95-407">
            <paramref name="index" />와 <paramref name="count" />의 합이 버퍼 길이보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-407">The <paramref name="index" /> plus <paramref name="count" /> is greater than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="60c95-408">
            <paramref name="index" /> 또는 <paramref name="count" />가 음수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-408">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="60c95-409">문자열 작성기가 삭제됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-409">The string writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="60c95-410">현재 이전 쓰기 작업에서 문자열 작성기를 사용하고 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c95-410">The string writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>