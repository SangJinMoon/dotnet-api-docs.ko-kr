<Type Name="StringWriter" FullName="System.IO.StringWriter">
  <TypeSignature Language="C#" Value="public class StringWriter : System.IO.TextWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit StringWriter extends System.IO.TextWriter" />
  <TypeSignature Language="DocId" Value="T:System.IO.StringWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class StringWriter&#xA;Inherits TextWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class StringWriter : System::IO::TextWriter" />
  <AssemblyInfo>
    <AssemblyName>System.IO</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.TextWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d2f29-101">정보를 문자열로 쓰기 위한 <see cref="T:System.IO.TextWriter" />를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-101">Implements a <see cref="T:System.IO.TextWriter" /> for writing information to a string.</span></span> <span data-ttu-id="d2f29-102">정보는 내부 <see cref="T:System.Text.StringBuilder" />에 저장됩니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-102">The information is stored in an underlying <see cref="T:System.Text.StringBuilder" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2f29-103"><xref:System.IO.StringWriter> 동기적 또는 비동기적으로 문자열에 쓸 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-103"><xref:System.IO.StringWriter> enables you to write to a string synchronously or asynchronously.</span></span> <span data-ttu-id="d2f29-104">으로 한 번에 한 문자를 작성할 수 있습니다는 <xref:System.IO.StringWriter.Write%28System.Char%29> 또는 <xref:System.IO.StringWriter.WriteAsync%28System.Char%29> 메서드를 사용 하 여 시간에는 문자열은 <xref:System.IO.StringWriter.Write%28System.String%29> 또는 <xref:System.IO.StringWriter.WriteAsync%28System.String%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="d2f29-104">You can write a character at a time with the <xref:System.IO.StringWriter.Write%28System.Char%29> or the <xref:System.IO.StringWriter.WriteAsync%28System.Char%29> method, a string at a time using the <xref:System.IO.StringWriter.Write%28System.String%29> or the <xref:System.IO.StringWriter.WriteAsync%28System.String%29> method.</span></span> <span data-ttu-id="d2f29-105">또한는 문자, 문자 배열 또는 뒤에 줄 종결자가 비동기적으로 중 하나가 지정 된 문자열을 작성할 수 있습니다는 <xref:System.IO.StringWriter.WriteLineAsync%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="d2f29-105">In addition, you can write a character, an array of characters or a string followed by the line terminator asynchronously with one of the <xref:System.IO.StringWriter.WriteLineAsync%2A> methods.</span></span>  
  
[!INCLUDE[note_unnecessary_dispose](~/includes/note-unnecessary-dispose.md)]
  
 <span data-ttu-id="d2f29-106">다음 표에서 일반적인 또는 관련 된 I/O 작업의 예제를 나열합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-106">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="d2f29-107">수행 작업</span><span class="sxs-lookup"><span data-stu-id="d2f29-107">To do this...</span></span>|<span data-ttu-id="d2f29-108">참조 항목</span><span class="sxs-lookup"><span data-stu-id="d2f29-108">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="d2f29-109">텍스트 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-109">Create a text file.</span></span>|[<span data-ttu-id="d2f29-110">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="d2f29-110">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="d2f29-111">텍스트 파일에 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-111">Write to a text file.</span></span>|[<span data-ttu-id="d2f29-112">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="d2f29-112">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="d2f29-113">텍스트 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-113">Read from a text file.</span></span>|[<span data-ttu-id="d2f29-114">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="d2f29-114">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="d2f29-115">파일에 텍스트를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-115">Append text to a file.</span></span>|[<span data-ttu-id="d2f29-116">방법: 로그 파일 열기 및 추가</span><span class="sxs-lookup"><span data-stu-id="d2f29-116">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="d2f29-117">파일의 크기를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-117">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="d2f29-118">파일의 특성을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-118">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="d2f29-119">파일의 특성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-119">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="d2f29-120">파일이 있는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-120">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="d2f29-121">이진 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-121">Read from a binary file.</span></span>|[<span data-ttu-id="d2f29-122">방법: 새로 만든 데이터 파일 읽기 및 쓰기</span><span class="sxs-lookup"><span data-stu-id="d2f29-122">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="d2f29-123">이진 파일에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-123">Write to a binary file.</span></span>|[<span data-ttu-id="d2f29-124">방법: 새로 만든 데이터 파일 읽기 및 쓰기</span><span class="sxs-lookup"><span data-stu-id="d2f29-124">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="d2f29-125">다음 코드 예제에서는 이중 공백된 문장 및 단락의 변환의 그룹에서 원래 텍스트를 다시 연속 단락 만들기를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-125">The following code example demonstrates the creation of a continuous paragraph from a group of double-spaced sentences, and then the conversion of the paragraph back to the original text.</span></span>  
  
 [!code-cpp[System.IO.StringReaderWriter#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CPP/stringrw.cpp#1)]
 [!code-csharp[System.IO.StringReaderWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CS/stringrw.cs#1)]
 [!code-vb[System.IO.StringReaderWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringReaderWriter/VB/stringrw.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.StringBuilder" />
    <altmember cref="T:System.IO.StringReader" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d2f29-126"><see cref="T:System.IO.StringWriter" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-126">Initializes a new instance of the <see cref="T:System.IO.StringWriter" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringWriter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d2f29-127"><see cref="T:System.IO.StringWriter" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-127">Initializes a new instance of the <see cref="T:System.IO.StringWriter" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2f29-128">새 <xref:System.Text.StringBuilder> 개체가 자동으로 생성 되 고의 새 인스턴스를 연관 된 <xref:System.IO.StringWriter> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-128">A new <xref:System.Text.StringBuilder> object is automatically created and associated with the new instance of the <xref:System.IO.StringWriter> class.</span></span> <span data-ttu-id="d2f29-129">새 인스턴스를 사용 하 여 초기화 됩니다 컨트롤 서식이이 생성자를 지정 하지 않으면 이후 <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-129">Since a format control is not specified for this constructor, the new instance will be initialized with <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d2f29-130">다음 표에서 일반적인 또는 관련 된 I/O 작업의 예제를 나열합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-130">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="d2f29-131">수행 작업</span><span class="sxs-lookup"><span data-stu-id="d2f29-131">To do this...</span></span>|<span data-ttu-id="d2f29-132">참조 항목</span><span class="sxs-lookup"><span data-stu-id="d2f29-132">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="d2f29-133">텍스트 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-133">Create a text file.</span></span>|[<span data-ttu-id="d2f29-134">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="d2f29-134">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="d2f29-135">텍스트 파일에 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-135">Write to a text file.</span></span>|[<span data-ttu-id="d2f29-136">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="d2f29-136">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="d2f29-137">텍스트 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-137">Read from a text file.</span></span>|[<span data-ttu-id="d2f29-138">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="d2f29-138">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="d2f29-139">파일에 텍스트를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-139">Append text to a file.</span></span>|[<span data-ttu-id="d2f29-140">방법: 로그 파일 열기 및 추가</span><span class="sxs-lookup"><span data-stu-id="d2f29-140">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="d2f29-141">파일의 크기를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-141">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="d2f29-142">파일의 특성을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-142">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="d2f29-143">파일의 특성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-143">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="d2f29-144">파일이 있는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-144">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="d2f29-145">이진 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-145">Read from a binary file.</span></span>|[<span data-ttu-id="d2f29-146">방법: 새로 만든 데이터 파일 읽기 및 쓰기</span><span class="sxs-lookup"><span data-stu-id="d2f29-146">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="d2f29-147">이진 파일에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-147">Write to a binary file.</span></span>|[<span data-ttu-id="d2f29-148">방법: 새로 만든 데이터 파일 읽기 및 쓰기</span><span class="sxs-lookup"><span data-stu-id="d2f29-148">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="d2f29-149">다음 코드 예제에서는 사용 하 여 문자열을 생성 하는 방법을 보여 줍니다.는 `StringWriter` 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-149">The following code example demonstrates how to construct a string using the `StringWriter` class.</span></span>  
  
 [!code-cpp[System.IO.StringWriter1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter1/CPP/strwriter1.cpp#1)]
 [!code-csharp[System.IO.StringWriter1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter1/CS/strwriter1.cs#1)]
 [!code-vb[System.IO.StringWriter1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter1/VB/strwriter1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringWriter (IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.#ctor(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (formatProvider As IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringWriter(IFormatProvider ^ formatProvider);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="formatProvider"><span data-ttu-id="d2f29-150">서식 지정을 제어하는 <see cref="T:System.IFormatProvider" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-150">An <see cref="T:System.IFormatProvider" /> object that controls formatting.</span></span></param>
        <summary><span data-ttu-id="d2f29-151">지정한 형식 제어를 사용하여 <see cref="T:System.IO.StringWriter" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-151">Initializes a new instance of the <see cref="T:System.IO.StringWriter" /> class with the specified format control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2f29-152">새 <xref:System.Text.StringBuilder> 개체가 자동으로 생성 되 고의 새 인스턴스를 연관 된 <xref:System.IO.StringWriter> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-152">A new <xref:System.Text.StringBuilder> object is automatically created and associated with the new instance of the <xref:System.IO.StringWriter> class.</span></span>  
  
 <span data-ttu-id="d2f29-153">다음 표에서 일반적인 또는 관련 된 I/O 작업의 예제를 나열합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-153">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="d2f29-154">수행 작업</span><span class="sxs-lookup"><span data-stu-id="d2f29-154">To do this...</span></span>|<span data-ttu-id="d2f29-155">참조 항목</span><span class="sxs-lookup"><span data-stu-id="d2f29-155">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="d2f29-156">텍스트 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-156">Create a text file.</span></span>|[<span data-ttu-id="d2f29-157">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="d2f29-157">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="d2f29-158">텍스트 파일에 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-158">Write to a text file.</span></span>|[<span data-ttu-id="d2f29-159">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="d2f29-159">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="d2f29-160">텍스트 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-160">Read from a text file.</span></span>|[<span data-ttu-id="d2f29-161">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="d2f29-161">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="d2f29-162">파일에 텍스트를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-162">Append text to a file.</span></span>|[<span data-ttu-id="d2f29-163">방법: 로그 파일 열기 및 추가</span><span class="sxs-lookup"><span data-stu-id="d2f29-163">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="d2f29-164">파일의 크기를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-164">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="d2f29-165">파일의 특성을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-165">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="d2f29-166">파일의 특성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-166">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="d2f29-167">파일이 있는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-167">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="d2f29-168">이진 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-168">Read from a binary file.</span></span>|[<span data-ttu-id="d2f29-169">방법: 새로 만든 데이터 파일 읽기 및 쓰기</span><span class="sxs-lookup"><span data-stu-id="d2f29-169">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="d2f29-170">이진 파일에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-170">Write to a binary file.</span></span>|[<span data-ttu-id="d2f29-171">방법: 새로 만든 데이터 파일 읽기 및 쓰기</span><span class="sxs-lookup"><span data-stu-id="d2f29-171">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="d2f29-172">다음 코드 예제에서는 특정 문화권에서 문자열을 생성 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-172">The following code example demonstrates how to construct a string in a specific culture.</span></span>  
  
 [!code-cpp[System.IO.StringWriter2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter2/CPP/strwriter2.cpp#1)]
 [!code-csharp[System.IO.StringWriter2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter2/CS/strwriter2.cs#1)]
 [!code-vb[System.IO.StringWriter2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter2/VB/strwriter2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringWriter (System.Text.StringBuilder sb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Text.StringBuilder sb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sb As StringBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringWriter(System::Text::StringBuilder ^ sb);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sb" Type="System.Text.StringBuilder" />
      </Parameters>
      <Docs>
        <param name="sb"><span data-ttu-id="d2f29-173">쓸 대상 <see cref="T:System.Text.StringBuilder" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-173">The <see cref="T:System.Text.StringBuilder" /> object to write to.</span></span></param>
        <summary><span data-ttu-id="d2f29-174">지정한 <see cref="T:System.IO.StringWriter" />에 쓰는 <see cref="T:System.Text.StringBuilder" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-174">Initializes a new instance of the <see cref="T:System.IO.StringWriter" /> class that writes to the specified <see cref="T:System.Text.StringBuilder" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2f29-175">새 인스턴스를 사용 하 여 초기화 됩니다 컨트롤 서식이이 생성자를 지정 하지 않으면 이후 <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-175">Since a format control is not specified for this constructor, the new instance will be initialized with <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d2f29-176">다음 표에서 일반적인 또는 관련 된 I/O 작업의 예제를 나열합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-176">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="d2f29-177">수행 작업</span><span class="sxs-lookup"><span data-stu-id="d2f29-177">To do this...</span></span>|<span data-ttu-id="d2f29-178">참조 항목</span><span class="sxs-lookup"><span data-stu-id="d2f29-178">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="d2f29-179">텍스트 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-179">Create a text file.</span></span>|[<span data-ttu-id="d2f29-180">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="d2f29-180">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="d2f29-181">텍스트 파일에 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-181">Write to a text file.</span></span>|[<span data-ttu-id="d2f29-182">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="d2f29-182">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="d2f29-183">텍스트 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-183">Read from a text file.</span></span>|[<span data-ttu-id="d2f29-184">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="d2f29-184">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="d2f29-185">파일에 텍스트를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-185">Append text to a file.</span></span>|[<span data-ttu-id="d2f29-186">방법: 로그 파일 열기 및 추가</span><span class="sxs-lookup"><span data-stu-id="d2f29-186">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="d2f29-187">파일의 크기를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-187">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="d2f29-188">파일의 특성을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-188">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="d2f29-189">파일의 특성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-189">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="d2f29-190">파일이 있는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-190">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="d2f29-191">이진 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-191">Read from a binary file.</span></span>|[<span data-ttu-id="d2f29-192">방법: 새로 만든 데이터 파일 읽기 및 쓰기</span><span class="sxs-lookup"><span data-stu-id="d2f29-192">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="d2f29-193">이진 파일에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-193">Write to a binary file.</span></span>|[<span data-ttu-id="d2f29-194">방법: 새로 만든 데이터 파일 읽기 및 쓰기</span><span class="sxs-lookup"><span data-stu-id="d2f29-194">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="d2f29-195">다음 코드 예제는 <xref:System.Text.StringBuilder> 닫힌의 기본 문자열을 수정 하는 클래스 `StringWriter`합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-195">The following code example demonstrates using the <xref:System.Text.StringBuilder> class to modify the underlying string in a closed `StringWriter`.</span></span>  
  
 [!code-cpp[System.IO.StringWriter3#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter3/CPP/strwriter3.cpp#1)]
 [!code-csharp[System.IO.StringWriter3#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter3/CS/strwriter3.cs#1)]
 [!code-vb[System.IO.StringWriter3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter3/VB/strwriter3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d2f29-196"><paramref name="sb" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="d2f29-196"><paramref name="sb" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringWriter (System.Text.StringBuilder sb, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Text.StringBuilder sb, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sb As StringBuilder, formatProvider As IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringWriter(System::Text::StringBuilder ^ sb, IFormatProvider ^ formatProvider);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sb" Type="System.Text.StringBuilder" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="sb"><span data-ttu-id="d2f29-197">쓸 대상 <see cref="T:System.Text.StringBuilder" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-197">The <see cref="T:System.Text.StringBuilder" /> object to write to.</span></span></param>
        <param name="formatProvider"><span data-ttu-id="d2f29-198">서식 지정을 제어하는 <see cref="T:System.IFormatProvider" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-198">An <see cref="T:System.IFormatProvider" /> object that controls formatting.</span></span></param>
        <summary><span data-ttu-id="d2f29-199">지정한 <see cref="T:System.IO.StringWriter" />에 쓰고 지정한 서식 공급자를 갖는 <see cref="T:System.Text.StringBuilder" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-199">Initializes a new instance of the <see cref="T:System.IO.StringWriter" /> class that writes to the specified <see cref="T:System.Text.StringBuilder" /> and has the specified format provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2f29-200">다음 표에서 일반적인 또는 관련 된 I/O 작업의 예제를 나열합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-200">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="d2f29-201">수행 작업</span><span class="sxs-lookup"><span data-stu-id="d2f29-201">To do this...</span></span>|<span data-ttu-id="d2f29-202">참조 항목</span><span class="sxs-lookup"><span data-stu-id="d2f29-202">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="d2f29-203">텍스트 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-203">Create a text file.</span></span>|[<span data-ttu-id="d2f29-204">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="d2f29-204">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="d2f29-205">텍스트 파일에 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-205">Write to a text file.</span></span>|[<span data-ttu-id="d2f29-206">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="d2f29-206">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="d2f29-207">텍스트 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-207">Read from a text file.</span></span>|[<span data-ttu-id="d2f29-208">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="d2f29-208">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="d2f29-209">파일에 텍스트를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-209">Append text to a file.</span></span>|[<span data-ttu-id="d2f29-210">방법: 로그 파일 열기 및 추가</span><span class="sxs-lookup"><span data-stu-id="d2f29-210">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="d2f29-211">파일의 크기를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-211">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="d2f29-212">파일의 특성을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-212">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="d2f29-213">파일의 특성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-213">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="d2f29-214">파일이 있는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-214">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="d2f29-215">이진 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-215">Read from a binary file.</span></span>|[<span data-ttu-id="d2f29-216">방법: 새로 만든 데이터 파일 읽기 및 쓰기</span><span class="sxs-lookup"><span data-stu-id="d2f29-216">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="d2f29-217">이진 파일에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-217">Write to a binary file.</span></span>|[<span data-ttu-id="d2f29-218">방법: 새로 만든 데이터 파일 읽기 및 쓰기</span><span class="sxs-lookup"><span data-stu-id="d2f29-218">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d2f29-219"><paramref name="sb" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="d2f29-219"><paramref name="sb" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d2f29-220">현재 <see cref="T:System.IO.StringWriter" /> 및 기본 스트림을 닫습니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-220">Closes the current <see cref="T:System.IO.StringWriter" /> and the underlying stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2f29-221">파일을 파일에 텍스트 쓰기의 예제를 보려면 [하는 방법: 파일에 텍스트 쓰기](~/docs/standard/io/how-to-write-text-to-a-file.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-221">For an example of creating a file and writing text to a file, see [How to: Write Text to a File](~/docs/standard/io/how-to-write-text-to-a-file.md).</span></span> <span data-ttu-id="d2f29-222">파일에서 읽는 텍스트의 예를 들어 참조 [하는 방법: 파일에서 텍스트 읽기](~/docs/standard/io/how-to-read-text-from-a-file.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-222">For an example of reading text from a file, see [How to: Read Text from a File](~/docs/standard/io/how-to-read-text-from-a-file.md).</span></span> <span data-ttu-id="d2f29-223">읽기 및 쓰기 이진 파일의 예제를 보려면 [하는 방법: 읽기 및 새로 만든 데이터 파일에 쓰기](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-223">For an example of reading from and writing to a binary file, see [How to: Read and Write to a Newly Created Data File](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md).</span></span>  
  
 <span data-ttu-id="d2f29-224">이 메서드는 <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType>를 재정의합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-224">This method overrides <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d2f29-225">이 구현 `Close` 호출은 <xref:System.IO.StringWriter.Dispose%2A> 전달 메서드는 `true` 값입니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-225">This implementation of `Close` calls the <xref:System.IO.StringWriter.Dispose%2A> method passing a `true` value.</span></span>  
  
 <span data-ttu-id="d2f29-226">명시적으로 호출 하지 않으면 스트림을 내부 인코더가 플러시되지 것입니다 `Close`합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-226">Flushing the stream will not flush its underlying encoder unless you explicitly call `Close`.</span></span> <span data-ttu-id="d2f29-227">설정 <xref:System.IO.StreamWriter.AutoFlush%2A> 를 `true` 스트림 버퍼에서 데이터를 플러시할 수는 있지만 인코더 상태 플러시되지 것입니다 있다는 것을 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-227">Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="d2f29-228">따라서 올바르게 문자의 다음 블록을 인코딩할 수 있도록 (부분 문자)의 상태를 유지 하기 위해 인코더 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-228">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="d2f29-229">이 시나리오는 u t f 8와 UTF7 인코더는 인접 한 문자를 받은 후 특정 문자를 인코딩할만 수 있는 위치에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-229">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2f29-230">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.IO.StringWriter.%23ctor%28System.Text.StringBuilder%29> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-230">This code example is part of a larger example provided for the <xref:System.IO.StringWriter.%23ctor%28System.Text.StringBuilder%29> constructor.</span></span>  
  
 [!code-cpp[System.IO.StringWriter3#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter3/CPP/strwriter3.cpp#2)]
 [!code-csharp[System.IO.StringWriter3#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter3/CS/strwriter3.cs#2)]
 [!code-vb[System.IO.StringWriter3#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter3/VB/strwriter3.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="d2f29-231">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-231"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="d2f29-232"><see cref="T:System.IO.StringWriter" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-232">Releases the unmanaged resources used by the <see cref="T:System.IO.StringWriter" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2f29-233">`disposing` 매개 변수가 `true`인 경우 이 메서드는 이 <xref:System.IO.StringWriter>에서 참조하는 관리 개체가 보유하고 있는 리소스를 모두 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-233">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.StringWriter> references.</span></span> <span data-ttu-id="d2f29-234">이 메서드는 참조되는 각 개체의 `Dispose` 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-234">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="d2f29-235"><see cref="M:System.IO.StringWriter.Dispose(System.Boolean)" />는 다른 개체에서 여러 번 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-235"><see cref="M:System.IO.StringWriter.Dispose(System.Boolean)" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="d2f29-236">재정의 하는 경우 <see cref="M:System.IO.StringWriter.Dispose(System.Boolean)" />한 이전 호출에서 삭제 된 개체를 참조 하지 않도록 주의 하십시오 <see cref="M:System.IO.StringWriter.Dispose(System.Boolean)" />합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-236">When overriding <see cref="M:System.IO.StringWriter.Dispose(System.Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see cref="M:System.IO.StringWriter.Dispose(System.Boolean)" />.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public override System.Text.Encoding Encoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.IO.StringWriter.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2f29-237">출력이 쓰여질 <see cref="T:System.Text.Encoding" />을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-237">Gets the <see cref="T:System.Text.Encoding" /> in which the output is written.</span></span></summary>
        <value><span data-ttu-id="d2f29-238">출력이 쓰여질 <see langword="Encoding" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-238">The <see langword="Encoding" /> in which the output is written.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2f29-239">이 속성은 위치 헤더를 작성 해야에서 사용 하는 인코딩을 포함 하는 일부 XML 시나리오에 대 한 필요는 `StringWriter`합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-239">This property is necessary for some XML scenarios where a header must be written containing the encoding used by the `StringWriter`.</span></span> <span data-ttu-id="d2f29-240">이렇게 하면 XML 코드는 임의의 소비를 `StringWriter` 올바른 XML 헤더를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-240">This allows the XML code to consume an arbitrary `StringWriter` and generate the correct XML header.</span></span>  
  
 <span data-ttu-id="d2f29-241">다음 표에서 일반적인 또는 관련 된 I/O 작업의 예제를 나열합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-241">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="d2f29-242">수행 작업</span><span class="sxs-lookup"><span data-stu-id="d2f29-242">To do this...</span></span>|<span data-ttu-id="d2f29-243">참조 항목</span><span class="sxs-lookup"><span data-stu-id="d2f29-243">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="d2f29-244">텍스트 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-244">Create a text file.</span></span>|[<span data-ttu-id="d2f29-245">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="d2f29-245">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="d2f29-246">텍스트 파일에 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-246">Write to a text file.</span></span>|[<span data-ttu-id="d2f29-247">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="d2f29-247">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="d2f29-248">텍스트 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-248">Read from a text file.</span></span>|[<span data-ttu-id="d2f29-249">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="d2f29-249">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="d2f29-250">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.IO.StringWriter.%23ctor> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-250">This code example is part of a larger example provided for the <xref:System.IO.StringWriter.%23ctor> constructor.</span></span>  
  
 [!code-cpp[System.IO.StringWriter1#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter1/CPP/strwriter1.cpp#4)]
 [!code-csharp[System.IO.StringWriter1#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter1/CS/strwriter1.cs#4)]
 [!code-vb[System.IO.StringWriter1#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter1/VB/strwriter1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task FlushAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task FlushAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.FlushAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FlushAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ FlushAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d2f29-251">현재 작성기에 대한 모든 버퍼를 비동기적으로 지우면 버퍼링된 모든 데이터를 내부 장치에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-251">Asynchronously clears all buffers for the current writer and causes any buffered data to be written to the underlying device.</span></span></summary>
        <returns><span data-ttu-id="d2f29-252">비동기 플러시 작업을 나타내는 작업입니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-252">A task that represents the asynchronous flush operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStringBuilder">
      <MemberSignature Language="C#" Value="public virtual System.Text.StringBuilder GetStringBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.StringBuilder GetStringBuilder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.GetStringBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStringBuilder () As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Text::StringBuilder ^ GetStringBuilder();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d2f29-253">내부 <see cref="T:System.Text.StringBuilder" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-253">Returns the underlying <see cref="T:System.Text.StringBuilder" />.</span></span></summary>
        <returns><span data-ttu-id="d2f29-254">내부 <see langword="StringBuilder" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-254">The underlying <see langword="StringBuilder" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2f29-255">이 값은 고 `StringBuilder` 생성자에 전달 된 또는 `StringBuilder` 자동으로 생성 된 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-255">This is either the `StringBuilder` that was passed to the constructor, or the `StringBuilder` that was automatically created.</span></span>  
  
 <span data-ttu-id="d2f29-256">다음 표에서 일반적인 또는 관련 된 I/O 작업의 예제를 나열합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-256">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="d2f29-257">수행 작업</span><span class="sxs-lookup"><span data-stu-id="d2f29-257">To do this...</span></span>|<span data-ttu-id="d2f29-258">참조 항목</span><span class="sxs-lookup"><span data-stu-id="d2f29-258">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="d2f29-259">텍스트 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-259">Create a text file.</span></span>|[<span data-ttu-id="d2f29-260">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="d2f29-260">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="d2f29-261">텍스트 파일에 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-261">Write to a text file.</span></span>|[<span data-ttu-id="d2f29-262">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="d2f29-262">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="d2f29-263">텍스트 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-263">Read from a text file.</span></span>|[<span data-ttu-id="d2f29-264">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="d2f29-264">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="d2f29-265">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.IO.StringWriter.%23ctor> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-265">This code example is part of a larger example provided for the <xref:System.IO.StringWriter.%23ctor> constructor.</span></span>  
  
 [!code-cpp[System.IO.StringWriter1#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter1/CPP/strwriter1.cpp#3)]
 [!code-csharp[System.IO.StringWriter1#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter1/CS/strwriter1.cs#3)]
 [!code-vb[System.IO.StringWriter1#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter1/VB/strwriter1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d2f29-266">현재 <see langword="StringWriter" />에 지금까지 쓰여진 문자가 포함된 문자열을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-266">Returns a string containing the characters written to the current <see langword="StringWriter" /> so far.</span></span></summary>
        <returns><span data-ttu-id="d2f29-267">현재 <see langword="StringWriter" />에 쓰여진 문자가 포함된 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-267">The string containing the characters written to the current <see langword="StringWriter" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2f29-268">다음 표에서 일반적인 또는 관련 된 I/O 작업의 예제를 나열합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-268">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="d2f29-269">수행 작업</span><span class="sxs-lookup"><span data-stu-id="d2f29-269">To do this...</span></span>|<span data-ttu-id="d2f29-270">참조 항목</span><span class="sxs-lookup"><span data-stu-id="d2f29-270">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="d2f29-271">텍스트 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-271">Create a text file.</span></span>|[<span data-ttu-id="d2f29-272">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="d2f29-272">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="d2f29-273">텍스트 파일에 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-273">Write to a text file.</span></span>|[<span data-ttu-id="d2f29-274">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="d2f29-274">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="d2f29-275">텍스트 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-275">Read from a text file.</span></span>|[<span data-ttu-id="d2f29-276">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="d2f29-276">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="d2f29-277">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.IO.StringWriter.%23ctor%28System.IFormatProvider%29> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-277">This code example is part of a larger example provided for the <xref:System.IO.StringWriter.%23ctor%28System.IFormatProvider%29> constructor.</span></span>  
  
 [!code-cpp[System.IO.StringWriter2#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter2/CPP/strwriter2.cpp#2)]
 [!code-csharp[System.IO.StringWriter2#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter2/CS/strwriter2.cs#2)]
 [!code-vb[System.IO.StringWriter2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter2/VB/strwriter2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d2f29-278">데이터를 문자열에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-278">Writes data to the string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.Write(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(char value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d2f29-279">작성할 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-279">The character to write.</span></span></param>
        <summary><span data-ttu-id="d2f29-280">문자열에 문자를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-280">Writes a character to the string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2f29-281">이 메서드는 <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>를 재정의합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-281">This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d2f29-282">다음 표에서 일반적인 또는 관련 된 I/O 작업의 예제를 나열합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-282">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="d2f29-283">수행 작업</span><span class="sxs-lookup"><span data-stu-id="d2f29-283">To do this...</span></span>|<span data-ttu-id="d2f29-284">참조 항목</span><span class="sxs-lookup"><span data-stu-id="d2f29-284">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="d2f29-285">텍스트 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-285">Create a text file.</span></span>|[<span data-ttu-id="d2f29-286">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="d2f29-286">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="d2f29-287">텍스트 파일에 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-287">Write to a text file.</span></span>|[<span data-ttu-id="d2f29-288">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="d2f29-288">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="d2f29-289">텍스트 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-289">Read from a text file.</span></span>|[<span data-ttu-id="d2f29-290">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="d2f29-290">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="d2f29-291">파일에 텍스트를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-291">Append text to a file.</span></span>|[<span data-ttu-id="d2f29-292">방법: 로그 파일 열기 및 추가</span><span class="sxs-lookup"><span data-stu-id="d2f29-292">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="d2f29-293">파일의 크기를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-293">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="d2f29-294">파일의 특성을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-294">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="d2f29-295">파일의 특성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-295">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="d2f29-296">파일이 있는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-296">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="d2f29-297">이진 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-297">Read from a binary file.</span></span>|[<span data-ttu-id="d2f29-298">방법: 새로 만든 데이터 파일 읽기 및 쓰기</span><span class="sxs-lookup"><span data-stu-id="d2f29-298">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="d2f29-299">이진 파일에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-299">Write to a binary file.</span></span>|[<span data-ttu-id="d2f29-300">방법: 새로 만든 데이터 파일 읽기 및 쓰기</span><span class="sxs-lookup"><span data-stu-id="d2f29-300">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="d2f29-301">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.IO.StringWriter.%23ctor> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-301">This code example is part of a larger example provided for the <xref:System.IO.StringWriter.%23ctor> constructor.</span></span>  
  
 [!code-cpp[System.IO.StringWriter1#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter1/CPP/strwriter1.cpp#2)]
 [!code-csharp[System.IO.StringWriter1#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter1/CS/strwriter1.cs#2)]
 [!code-vb[System.IO.StringWriter1#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter1/VB/strwriter1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="d2f29-302">작성기가 닫힌 경우</span><span class="sxs-lookup"><span data-stu-id="d2f29-302">The writer is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(valuetype System.ReadOnlySpan`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.Write(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d2f29-303">쓸 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-303">The string to write.</span></span></param>
        <summary><span data-ttu-id="d2f29-304">현재 문자열에 문자열을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-304">Writes a string to the current string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2f29-305">이 메서드는 <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>를 재정의합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-305">This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d2f29-306">지정 된 문자열의 형식이 `null`, 아무것도 기록 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-306">If the specified string is `null`, nothing is written.</span></span>  
  
 <span data-ttu-id="d2f29-307">다음 표에서 일반적인 또는 관련 된 I/O 작업의 예제를 나열합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-307">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="d2f29-308">수행 작업</span><span class="sxs-lookup"><span data-stu-id="d2f29-308">To do this...</span></span>|<span data-ttu-id="d2f29-309">참조 항목</span><span class="sxs-lookup"><span data-stu-id="d2f29-309">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="d2f29-310">텍스트 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-310">Create a text file.</span></span>|[<span data-ttu-id="d2f29-311">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="d2f29-311">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="d2f29-312">텍스트 파일에 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-312">Write to a text file.</span></span>|[<span data-ttu-id="d2f29-313">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="d2f29-313">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="d2f29-314">텍스트 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-314">Read from a text file.</span></span>|[<span data-ttu-id="d2f29-315">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="d2f29-315">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="d2f29-316">파일에 텍스트를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-316">Append text to a file.</span></span>|[<span data-ttu-id="d2f29-317">방법: 로그 파일 열기 및 추가</span><span class="sxs-lookup"><span data-stu-id="d2f29-317">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="d2f29-318">파일의 크기를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-318">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="d2f29-319">파일의 특성을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-319">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="d2f29-320">파일의 특성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-320">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="d2f29-321">파일이 있는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-321">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="d2f29-322">이진 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-322">Read from a binary file.</span></span>|[<span data-ttu-id="d2f29-323">방법: 새로 만든 데이터 파일 읽기 및 쓰기</span><span class="sxs-lookup"><span data-stu-id="d2f29-323">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="d2f29-324">이진 파일에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-324">Write to a binary file.</span></span>|[<span data-ttu-id="d2f29-325">방법: 새로 만든 데이터 파일 읽기 및 쓰기</span><span class="sxs-lookup"><span data-stu-id="d2f29-325">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="d2f29-326">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.IO.StringWriter> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-326">This code example is part of a larger example provided for the <xref:System.IO.StringWriter> class.</span></span>  
  
 [!code-cpp[System.IO.StringReaderWriter#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CPP/stringrw.cpp#3)]
 [!code-csharp[System.IO.StringReaderWriter#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CS/stringrw.cs#3)]
 [!code-vb[System.IO.StringReaderWriter#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringReaderWriter/VB/stringrw.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="d2f29-327">작성기가 닫힌 경우</span><span class="sxs-lookup"><span data-stu-id="d2f29-327">The writer is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.Write(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="d2f29-328">쓸 데이터가 있는 문자 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-328">The character array to write data from.</span></span></param>
        <param name="index"><span data-ttu-id="d2f29-329">데이터 읽기를 시작하는 버퍼의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-329">The position in the buffer at which to start reading data.</span></span></param>
        <param name="count"><span data-ttu-id="d2f29-330">쓸 최대 문자 수입니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-330">The maximum number of characters to write.</span></span></param>
        <summary><span data-ttu-id="d2f29-331">문자열에 문자의 하위 배열을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-331">Writes a subarray of characters to the string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2f29-332">이 메서드는 <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>를 재정의합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-332">This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d2f29-333">이 메서드는 작성 `count` 자의 데이터를이 `StringWriter` 에서 `buffer`위치에서 시작, `index`합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-333">This method writes `count` characters of data to this `StringWriter` from `buffer`, starting at position `index`.</span></span>  
  
 <span data-ttu-id="d2f29-334">다음 표에서 일반적인 또는 관련 된 I/O 작업의 예제를 나열합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-334">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="d2f29-335">수행 작업</span><span class="sxs-lookup"><span data-stu-id="d2f29-335">To do this...</span></span>|<span data-ttu-id="d2f29-336">참조 항목</span><span class="sxs-lookup"><span data-stu-id="d2f29-336">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="d2f29-337">텍스트 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-337">Create a text file.</span></span>|[<span data-ttu-id="d2f29-338">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="d2f29-338">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="d2f29-339">텍스트 파일에 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-339">Write to a text file.</span></span>|[<span data-ttu-id="d2f29-340">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="d2f29-340">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="d2f29-341">텍스트 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-341">Read from a text file.</span></span>|[<span data-ttu-id="d2f29-342">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="d2f29-342">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="d2f29-343">파일에 텍스트를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-343">Append text to a file.</span></span>|[<span data-ttu-id="d2f29-344">방법: 로그 파일 열기 및 추가</span><span class="sxs-lookup"><span data-stu-id="d2f29-344">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="d2f29-345">파일의 크기를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-345">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="d2f29-346">파일의 특성을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-346">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="d2f29-347">파일의 특성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-347">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="d2f29-348">파일이 있는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-348">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="d2f29-349">이진 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-349">Read from a binary file.</span></span>|[<span data-ttu-id="d2f29-350">방법: 새로 만든 데이터 파일 읽기 및 쓰기</span><span class="sxs-lookup"><span data-stu-id="d2f29-350">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="d2f29-351">이진 파일에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-351">Write to a binary file.</span></span>|[<span data-ttu-id="d2f29-352">방법: 새로 만든 데이터 파일 읽기 및 쓰기</span><span class="sxs-lookup"><span data-stu-id="d2f29-352">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="d2f29-353">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.IO.StringWriter.%23ctor> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-353">This code example is part of a larger example provided for the <xref:System.IO.StringWriter.%23ctor> constructor.</span></span>  
  
 [!code-cpp[System.IO.StringWriter1#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter1/CPP/strwriter1.cpp#2)]
 [!code-csharp[System.IO.StringWriter1#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter1/CS/strwriter1.cs#2)]
 [!code-vb[System.IO.StringWriter1#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter1/VB/strwriter1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d2f29-354"><paramref name="buffer" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="d2f29-354"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d2f29-355"><paramref name="index" /> 또는 <paramref name="count" />가 음수입니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-355"><paramref name="index" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d2f29-356">(<paramref name="index" /> + <paramref name="count" />)&gt; <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="d2f29-356">(<paramref name="index" /> + <paramref name="count" />)&gt; <paramref name="buffer" />.</span></span> <span data-ttu-id="d2f29-357"><see langword="Length" />.</span><span class="sxs-lookup"><span data-stu-id="d2f29-357"><see langword="Length" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="d2f29-358">작성기가 닫힌 경우</span><span class="sxs-lookup"><span data-stu-id="d2f29-358">The writer is closed.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d2f29-359">데이터를 문자열에 비동기적으로 씁니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-359">Writes data to the string asynchronously.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteAsync(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteAsync (value As Char) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(char value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d2f29-360">문자열에 쓸 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-360">The character to write to the string.</span></span></param>
        <summary><span data-ttu-id="d2f29-361">문자를 문자열에 비동기적으로 씁니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-361">Writes a character to the string asynchronously.</span></span></summary>
        <returns><span data-ttu-id="d2f29-362">비동기 쓰기 작업을 나타내는 작업입니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-362">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d2f29-363">다음 예제를 사용 하 여 문자를 작성 하는 방법을 보여 줍니다는 <xref:System.IO.StringWriter.WriteAsync%28System.Char%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="d2f29-363">The following example shows how to write characters by using the <xref:System.IO.StringWriter.WriteAsync%28System.Char%29> method.</span></span>  
  
 [!code-csharp[System.IO.StringWriter#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringwriter/cs/example5.cs#5)]
 [!code-vb[System.IO.StringWriter#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringwriter/vb/example5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="d2f29-364">문자열 작성기가 삭제됩니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-364">The string writer is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d2f29-365">현재 이전 쓰기 작업에서 문자열 작성기를 사용하고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-365">The string writer is currently in use by a previous write operation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteAsync (value As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d2f29-366">쓸 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-366">The string to write.</span></span> <span data-ttu-id="d2f29-367"><c>값</c>이 <see langword="null" />이면 텍스트 스트림에 아무 것도 쓰지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-367">If <c>value</c> is <see langword="null" />, nothing is written to the text stream.</span></span></param>
        <summary><span data-ttu-id="d2f29-368">문자열을 현재 문자열에 비동기적으로 씁니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-368">Writes a string to the current string asynchronously.</span></span></summary>
        <returns><span data-ttu-id="d2f29-369">비동기 쓰기 작업을 나타내는 작업입니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-369">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d2f29-370">사용 하 여 문자열을 기록 하는 방법을 보여 주는 다음 예제는 <xref:System.IO.StringWriter.WriteAsync%28System.String%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="d2f29-370">The following example shows how to write a string by using the <xref:System.IO.StringWriter.WriteAsync%28System.String%29> method.</span></span>  
  
 [!code-csharp[System.IO.StringWriter#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringwriter/cs/example4.cs#4)]
 [!code-vb[System.IO.StringWriter#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringwriter/vb/example4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="d2f29-371">문자열 작성기가 삭제됩니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-371">The string writer is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d2f29-372">현재 이전 쓰기 작업에서 문자열 작성기를 사용하고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-372">The string writer is currently in use by a previous write operation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (ReadOnlyMemory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(valuetype System.ReadOnlyMemory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteAsync(System.ReadOnlyMemory{System.Char},System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlyMemory&lt;System.Char&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteAsync (buffer As Char(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="d2f29-373">쓸 데이터가 있는 문자 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-373">The character array to write data from.</span></span></param>
        <param name="index"><span data-ttu-id="d2f29-374">데이터 읽기를 시작하는 버퍼의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-374">The position in the buffer at which to start reading data.</span></span></param>
        <param name="count"><span data-ttu-id="d2f29-375">쓸 최대 문자 수입니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-375">The maximum number of characters to write.</span></span></param>
        <summary><span data-ttu-id="d2f29-376">문자의 하위 배열을 문자열에 비동기적으로 씁니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-376">Writes a subarray of characters to the string asynchronously.</span></span></summary>
        <returns><span data-ttu-id="d2f29-377">비동기 쓰기 작업을 나타내는 작업입니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-377">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d2f29-378">다음 예제를 사용 하 여 문자를 작성 하는 방법을 보여 줍니다는 <xref:System.IO.StringWriter.WriteAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="d2f29-378">The following example shows how to write characters by using the <xref:System.IO.StringWriter.WriteAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method.</span></span>  
  
 [!code-csharp[System.IO.StringWriter#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringwriter/cs/example6.cs#6)]
 [!code-vb[System.IO.StringWriter#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringwriter/vb/example6.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d2f29-379"><paramref name="buffer" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="d2f29-379"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d2f29-380"><paramref name="index" />와 <paramref name="count" />의 합이 버퍼 길이보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-380">The <paramref name="index" /> plus <paramref name="count" /> is greater than the buffer length.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d2f29-381"><paramref name="index" /> 또는 <paramref name="count" />가 음수입니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-381"><paramref name="index" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="d2f29-382">문자열 작성기가 삭제됩니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-382">The string writer is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d2f29-383">현재 이전 쓰기 작업에서 문자열 작성기를 사용하고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-383">The string writer is currently in use by a previous write operation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(valuetype System.ReadOnlySpan`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteLine(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (buffer As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLineAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d2f29-384">데이터와 줄 종결자를 차례로 문자열에 비동기적으로 씁니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-384">Writes data followed by a line terminator asynchronously to the string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteLineAsync(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteLineAsync (value As Char) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteLineAsync(char value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d2f29-385">문자열에 쓸 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-385">The character to write to the string.</span></span></param>
        <summary><span data-ttu-id="d2f29-386">문자와 줄 종결자를 차례로 문자열에 비동기적으로 씁니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-386">Writes a character followed by a line terminator asynchronously to the string.</span></span></summary>
        <returns><span data-ttu-id="d2f29-387">비동기 쓰기 작업을 나타내는 작업입니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-387">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2f29-388">줄 종결자가 정의한는 <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-388">The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2f29-389">다음 예제를 사용 하 여 문자를 작성 하는 방법을 보여 줍니다는 <xref:System.IO.StringWriter.WriteLineAsync%28System.Char%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="d2f29-389">The following example shows how to write characters by using the <xref:System.IO.StringWriter.WriteLineAsync%28System.Char%29> method.</span></span>  
  
 [!code-csharp[System.IO.StringWriter#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringwriter/cs/example2.cs#2)]
 [!code-vb[System.IO.StringWriter#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringwriter/vb/example2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="d2f29-390">문자열 작성기가 삭제됩니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-390">The string writer is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d2f29-391">현재 이전 쓰기 작업에서 문자열 작성기를 사용하고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-391">The string writer is currently in use by a previous write operation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteLineAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteLineAsync (value As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteLineAsync(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d2f29-392">쓸 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-392">The string to write.</span></span> <span data-ttu-id="d2f29-393">값이 <see langword="null" />이면 줄 종결자만 씁니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-393">If the value is <see langword="null" />, only a line terminator is written.</span></span></param>
        <summary><span data-ttu-id="d2f29-394">문자열과 줄 종결자를 차례로 현재 문자열에 비동기적으로 씁니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-394">Writes a string followed by a line terminator asynchronously to the current string.</span></span></summary>
        <returns><span data-ttu-id="d2f29-395">비동기 쓰기 작업을 나타내는 작업입니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-395">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2f29-396">줄 종결자가 정의한는 <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-396">The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2f29-397">사용 하 여 문자열을 기록 하는 방법을 보여 주는 다음 예제는 <xref:System.IO.StringWriter.WriteLineAsync%28System.String%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="d2f29-397">The following example shows how to write a string by using the <xref:System.IO.StringWriter.WriteLineAsync%28System.String%29> method.</span></span>  
  
 [!code-csharp[System.IO.StringWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringwriter/cs/example.cs#1)]
 [!code-vb[System.IO.StringWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringwriter/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="d2f29-398">문자열 작성기가 삭제됩니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-398">The string writer is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d2f29-399">현재 이전 쓰기 작업에서 문자열 작성기를 사용하고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-399">The string writer is currently in use by a previous write operation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync (ReadOnlyMemory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync(valuetype System.ReadOnlyMemory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteLineAsync(System.ReadOnlyMemory{System.Char},System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlyMemory&lt;System.Char&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteLineAsync (buffer As Char(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteLineAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="d2f29-400">쓸 데이터가 있는 문자 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-400">The character array to write data from.</span></span></param>
        <param name="index"><span data-ttu-id="d2f29-401">데이터 읽기를 시작하는 버퍼의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-401">The position in the buffer at which to start reading data.</span></span></param>
        <param name="count"><span data-ttu-id="d2f29-402">쓸 최대 문자 수입니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-402">The maximum number of characters to write.</span></span></param>
        <summary><span data-ttu-id="d2f29-403">문자의 하위 배열과 줄 종결자를 차례로 스트링에 비동기적으로 씁니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-403">Writes a subarray of characters followed by a line terminator asynchronously to the string.</span></span></summary>
        <returns><span data-ttu-id="d2f29-404">비동기 쓰기 작업을 나타내는 작업입니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-404">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2f29-405">줄 종결자가 정의한는 <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-405">The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2f29-406">다음 예제를 사용 하 여 문자를 작성 하는 방법을 보여 줍니다는 <xref:System.IO.StringWriter.WriteLineAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="d2f29-406">The following example shows how to write characters by using the <xref:System.IO.StringWriter.WriteLineAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method.</span></span>  
  
 [!code-csharp[System.IO.StringWriter#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringwriter/cs/example3.cs#3)]
 [!code-vb[System.IO.StringWriter#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringwriter/vb/example3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d2f29-407"><paramref name="buffer" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="d2f29-407"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d2f29-408"><paramref name="index" />와 <paramref name="count" />의 합이 버퍼 길이보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-408">The <paramref name="index" /> plus <paramref name="count" /> is greater than the buffer length.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d2f29-409"><paramref name="index" /> 또는 <paramref name="count" />가 음수입니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-409"><paramref name="index" /> or <paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="d2f29-410">문자열 작성기가 삭제됩니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-410">The string writer is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d2f29-411">현재 이전 쓰기 작업에서 문자열 작성기를 사용하고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2f29-411">The string writer is currently in use by a previous write operation.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>