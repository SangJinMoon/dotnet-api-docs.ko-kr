<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Directory.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5dbde0b5244437d72f04f981dbc0eb13a73c3ea02.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dbde0b5244437d72f04f981dbc0eb13a73c3ea02</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IO.Directory">
          <source>Exposes static methods for creating, moving, and enumerating through directories and subdirectories.</source>
          <target state="translated">디렉터리와 하위 디렉터리에서 만들기, 이동 및 열거를 위한 정적 메서드를 노출합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.IO.Directory">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Directory">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.Directory&gt;</ph> class for typical operations such as copying, moving, renaming, creating, and deleting directories.</source>
          <target state="translated">사용 하 여 <ph id="ph1">&lt;xref:System.IO.Directory&gt;</ph> 복사, 이동, 이름 바꾸기 및 디렉터리 삭제와 같은 일반적인 작업에 대 한 클래스입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Directory">
          <source>To create a directory, use one of the <ph id="ph1">&lt;xref:System.IO.Directory.CreateDirectory%2A&gt;</ph> methods.</source>
          <target state="translated">디렉터리를 만들려면 사용 중 하나는 <ph id="ph1">&lt;xref:System.IO.Directory.CreateDirectory%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Directory">
          <source>To delete a directory, use one of the <ph id="ph1">&lt;xref:System.IO.Directory.Delete%2A&gt;</ph> methods.</source>
          <target state="translated">디렉터리를 삭제 하려면 중 사용 된 <ph id="ph1">&lt;xref:System.IO.Directory.Delete%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Directory">
          <source>To get or set the current directory for an app, use the <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.IO.Directory.SetCurrentDirectory%2A&gt;</ph> method.</source>
          <target state="translated">를 가져오거나 응용 프로그램에 대 한 현재 디렉터리를 설정 하려면 사용 하 여는 <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.IO.Directory.SetCurrentDirectory%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Directory">
          <source>To manipulate <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> information related to the creation, access, and writing of a directory, use methods such as <ph id="ph2">&lt;xref:System.IO.Directory.SetLastAccessTime%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.IO.Directory.SetCreationTime%2A&gt;</ph>.</source>
          <target state="translated">조작 하기 위한 <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> 관련 정보를 생성, 액세스 및 디렉터리의 쓰기와 같은 메서드 사용 <ph id="ph2">&lt;xref:System.IO.Directory.SetLastAccessTime%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.IO.Directory.SetCreationTime%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Directory">
          <source>The static methods of the <ph id="ph1">&lt;xref:System.IO.Directory&gt;</ph> class perform security checks on all methods.</source>
          <target state="translated">정적 메서드는 <ph id="ph1">&lt;xref:System.IO.Directory&gt;</ph> 클래스는 모든 메서드에 대 한 보안 검사를 수행 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Directory">
          <source>If you are going to reuse an object several times, consider using the corresponding instance method of <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph> instead, because the security check will not always be necessary.</source>
          <target state="translated">해당 인스턴스 메서드를 사용 하 여 고려 하는 개체를 여러 번 다시 경우 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph> 보안 검사는 항상 때문에 필요할 수 대신 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Directory">
          <source>If you are performing only one directory-related action, it might be more efficient to use a static <ph id="ph1">&lt;xref:System.IO.Directory&gt;</ph> method rather than a corresponding <ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph> instance method.</source>
          <target state="translated">하나의 디렉터리 관련 작업을 수행 하는 경우 보다 효율적으로 정적 사용할 수 있습니다 <ph id="ph1">&lt;xref:System.IO.Directory&gt;</ph> 메서드는 해당 하는 대신 <ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph> 인스턴스 메서드.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Directory">
          <source>Most <ph id="ph1">&lt;xref:System.IO.Directory&gt;</ph> methods require the path to the directory that you are manipulating.</source>
          <target state="translated">대부분 <ph id="ph1">&lt;xref:System.IO.Directory&gt;</ph> 방법에는 조작 하 고 있는 디렉터리의 경로 필요 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Directory">
          <source>In members that accept a string <ph id="ph1">`path`</ph> parameter, that path must be well-formed or an exception is raised.</source>
          <target state="translated">문자열을 허용 하는 멤버에 <ph id="ph1">`path`</ph> 매개 변수는 해당 경로 올바른 형식 이어야 합니다 또는 예외가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Directory">
          <source>For example, if a path is fully qualified but begins with a space (" c:\temp"), the path string isn't trimmed, so the path is considered malformed and an exception is raised.</source>
          <target state="translated">예를 들어 경로 정규화 된 ("c:\temp") 공백으로 시작 되지만 경로 문자열 되지 않습니다 조정이, 예외가 발생 하 고 경로 형식이 잘못 된 것으로 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Directory">
          <source>In addition, a path or a combination of paths cannot be fully qualified twice.</source>
          <target state="translated">또한 경로 또는 경로의 조합 두 번 정규화 될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Directory">
          <source>For example, "c:\temp c:\windows" also raises an exception.</source>
          <target state="translated">예를 들어 "c:\temp c:\windows"는 또한 예외가 발생합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Directory">
          <source>Ensure that your paths are well-formed when using methods that accept a path string.</source>
          <target state="translated">경로 문자열을 허용 하는 메서드를 사용 하는 경우 경로 형식이 있는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Directory">
          <source>For more information see <ph id="ph1">&lt;xref:System.IO.Path&gt;</ph>.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.IO.Path&gt;</ph>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Directory">
          <source>In members that accept a path, the path can refer to a file or a directory.</source>
          <target state="translated">경로 허용 하는 멤버를 파일이 나 디렉터리 경로 참조할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Directory">
          <source>You can use a full path, a relative path, or a Universal Naming Convention (UNC) path for a server and share name.</source>
          <target state="translated">서버 및 공유 이름에 대 한 전체 경로, 상대 경로 또는 범용 명명 규칙 (UNC) 경로 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Directory">
          <source>For example, all the following are acceptable paths:</source>
          <target state="translated">예를 들어 다음은 허용 가능한 경로.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Directory">
          <source>"c:<ph id="ph1">\\</ph>\MyDir" in C#, or "c:\MyDir" in Visual Basic.</source>
          <target state="translated">"c:<ph id="ph1">\\</ph>\MyDir" C# 또는 Visual Basic의 "c:\MyDir"입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Directory">
          <source>"MyDir<ph id="ph1">\\</ph>\MySubdir" in C#, or "MyDir\MySubDir" in Visual Basic.</source>
          <target state="translated">"MyDir<ph id="ph1">\\</ph>\MySubdir" C# 또는 Visual Basic의 "MyDir\MySubDir"입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Directory">
          <source>"<ph id="ph1">\\</ph><ph id="ph2">\\</ph><ph id="ph3">\\</ph>\MyServer<ph id="ph4">\\</ph>\MyShare" in C#, or "<ph id="ph5">\\</ph>\MyServer\MyShare" in Visual Basic.</source>
          <target state="translated">"<ph id="ph1">\\</ph><ph id="ph2">\\</ph><ph id="ph3">\\</ph>\MyServer<ph id="ph4">\\</ph>\MyShare" C# 또는 "<ph id="ph5">\\</ph>\MyServer\MyShare" Visual Basic의 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Directory">
          <source>By default, full read/write access to new directories is granted to all users.</source>
          <target state="translated">기본적으로 새 디렉터리에 대 한 모든 읽기/쓰기 액세스는 모든 사용자에 게 부여 됩니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Directory">
          <source>However, the app must have the correct security to access existing directories.</source>
          <target state="translated">그러나 응용 프로그램에 기존 디렉터리에 액세스 하는 올바른 보안이 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Directory">
          <source>To demand permissions for a directory and all its subdirectories, end the path string with the directory separator character.</source>
          <target state="translated">에 디렉터리 및 모든 하위 디렉터리를 디렉터리 구분 문자로 사용 하 여 경로 문자열 끝에 대 한 사용 권한을 요구 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Directory">
          <source>(For example, "C:\Temp<ph id="ph1">\\</ph>" grants access to C:\Temp\ and all its subdirectories.) To demand permissions only for a specific directory, end the path string with a period.</source>
          <target state="translated">(예를 들어 "C:\Temp<ph id="ph1">\\</ph>" C:\Temp\ 및 모든 하위 디렉터리에 대 한 액세스를 부여 합니다.) 에 특정 디렉터리 종료 시간으로 경로 문자열에 대 한 사용 권한을 요구 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Directory">
          <source>(For example, "C:\Temp<ph id="ph1">\\</ph>."</source>
          <target state="translated">(예를 들어 "C:\Temp<ph id="ph1">\\</ph>."</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Directory">
          <source>grants access only to C:\Temp<ph id="ph1">\\</ph>, not to its subdirectories.)</source>
          <target state="translated">C:\Temp에만 액세스 권한을 부여<ph id="ph1">\\</ph>, 하위 디렉터리에 없습니다.)</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Directory">
          <source>In members that accept a <ph id="ph1">`searchPattern`</ph> parameter, the search string can be any combination of literal characters and two wildcard characters; <ph id="ph2">\*</ph> and ?.</source>
          <target state="translated">허용 하는 멤버에는 <ph id="ph1">`searchPattern`</ph> 매개 변수를 검색 문자열 리터럴 문자 및 두 개의 와일드 카드 문자; 조합이 포함 될 수 <ph id="ph2">\*</ph> 및?입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Directory">
          <source>This parameter does not recognize regular expressions.</source>
          <target state="translated">이 매개 변수는 정규식을 인식 하지 못합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Directory">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateDirectories%28System.String%2CSystem.String%29&gt;</ph> method or any other method that uses the <ph id="ph2">`searchPattern`</ph> parameter.</source>
          <target state="translated">자세한 내용은 참조는 <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateDirectories%28System.String%2CSystem.String%29&gt;</ph> 메서드 또는 다른 메서드를 사용 하는 <ph id="ph2">`searchPattern`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Directory">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">공통적인 I/O 작업의 목록에 대 한 참조 <bpt id="p1">[</bpt>공통적인 I/O 작업<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Directory">
          <source><ph id="ph1">&lt;xref:System.IO.Directory&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph> are not supported for use in <ph id="ph3">[!INCLUDE[win8_appstore_long](~/includes/win8-appstore-long-md.md)]</ph> apps.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Directory&gt;</ph> 및 <ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph> 에서 사용 하기 위해 지원 되지 않습니다 <ph id="ph3">[!INCLUDE[win8_appstore_long](~/includes/win8-appstore-long-md.md)]</ph> 앱.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Directory">
          <source>For information about how to access files and folders in <ph id="ph1">[!INCLUDE[win8_appstore_long](~/includes/win8-appstore-long-md.md)]</ph> apps, see <bpt id="p1">[</bpt>Accessing data and files (Windows Store apps)<ept id="p1">](http://msdn.microsoft.com/library/windows/apps/hh758319.aspx)</ept>.</source>
          <target state="translated">파일 및 폴더에 액세스 하는 방법에 대 한 내용은 <ph id="ph1">[!INCLUDE[win8_appstore_long](~/includes/win8-appstore-long-md.md)]</ph> 앱 참조 <bpt id="p1">[</bpt>파일 (Windows 스토어 앱) 및 데이터 액세스<ept id="p1">](http://msdn.microsoft.com/library/windows/apps/hh758319.aspx)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Directory">
          <source>The following example shows how to retrieve all the text files from a directory and move them to a new directory.</source>
          <target state="translated">다음 예제에서는 디렉터리에서 모든 텍스트 파일을 검색 하 고 새 디렉터리로 이동 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Directory">
          <source>After the files are moved, they no longer exist in the original directory.</source>
          <target state="translated">파일을 이동한 후 원래 디렉터리에 더 이상 없습니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Directory">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateFiles%2A&gt;</ph> method to retrieve a collection of text files from a directory, and then use that collection in a query to find all the lines that contain "Example".</source>
          <target state="translated">다음 예제에서는 사용 하는 방법을 <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateFiles%2A&gt;</ph> 메서드를 디렉터리에서 텍스트 파일의 컬렉션을 검색 한 다음 "예"를 포함 하는 모든 줄을 찾을 수는 쿼리에서 해당 컬렉션을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Directory">
          <source>The following example demonstrates how to move a directory and all its files to a new directory.</source>
          <target state="translated">다음 예제에서는 디렉터리와 모든 파일을 새 디렉터리로 이동 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Directory">
          <source>The original directory no longer exists after it has been moved.</source>
          <target state="translated">이 이동 하면 원래 디렉터리 존재 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="T:System.IO.Directory">
          <source>Creates all the directories in a specified path.</source>
          <target state="translated">지정된 경로에 모든 디렉터리를 만듭니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.CreateDirectory(System.String)">
          <source>The directory to create.</source>
          <target state="translated">만들 디렉터리입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.CreateDirectory(System.String)">
          <source>Creates all directories and subdirectories in the specified path unless they already exist.</source>
          <target state="translated">이미 존재하지 않는 한 지정된 경로에 모든 디렉터리와 하위 디렉터리를 만듭니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.CreateDirectory(System.String)">
          <source>An object that represents the directory at the specified path.</source>
          <target state="translated">지정된 경로에서 디렉터리를 나타내는 개체입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.CreateDirectory(System.String)">
          <source>This object is returned regardless of whether a directory at the specified path already exists.</source>
          <target state="translated">이 개체는 지정된 경로에 디렉터리가 이미 존재하는지 여부와 관계없이 반환됩니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.CreateDirectory(System.String)">
          <source>Any and all directories specified in <ph id="ph1">`path`</ph> are created, unless they already exist or unless some part of <ph id="ph2">`path`</ph> is invalid.</source>
          <target state="translated">에 지정 된 모든 디렉터리가 <ph id="ph1">`path`</ph> 생성, 또는 디렉터리가 존재 하지 않는 한 부분이 <ph id="ph2">`path`</ph> 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.CreateDirectory(System.String)">
          <source>If the directory already exists, this method does not create a new directory, but it returns a <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph> object for the existing directory.</source>
          <target state="translated">디렉터리가 이미 있는,이 메서드는 새 디렉터리를 만들지 않습니다 있지만 반환 하는 경우는 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph> 기존 디렉터리에 대 한 개체입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.CreateDirectory(System.String)">
          <source>The <ph id="ph1">`path`</ph> parameter specifies a directory path, not a file path.</source>
          <target state="translated"><ph id="ph1">`path`</ph> 매개 변수는 파일 경로가 아닌 디렉터리 경로 지정 합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.CreateDirectory(System.String)">
          <source>Trailing spaces are removed from the end of the <ph id="ph1">`path`</ph> parameter before creating the directory.</source>
          <target state="translated">끝에서 후행 공백을 제거는 <ph id="ph1">`path`</ph> 디렉터리를 만들기 전에 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.CreateDirectory(System.String)">
          <source>You can create a directory on a remote computer, on a share that you have write access to.</source>
          <target state="translated">에 대 한 쓰기 권한이 있는 공유에 원격 컴퓨터에 디렉터리를 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.CreateDirectory(System.String)">
          <source>UNC paths are supported; for example, you can specify the following for <ph id="ph1">`path`</ph>: <ph id="ph2">`\\2009\Archives\December`</ph> in Visual Basic, and <ph id="ph3">`\\\\2009\\Archives\\December`</ph> in C#.</source>
          <target state="translated">UNC 경로 지원 됩니다. 예를 들어 다음을 지정할 수 있습니다 <ph id="ph1">`path`</ph>: <ph id="ph2">`\\2009\Archives\December`</ph> Visual basic에서 및 <ph id="ph3">`\\\\2009\\Archives\\December`</ph> C#입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.CreateDirectory(System.String)">
          <source>Creating a directory with only the colon character (:) is not supported, and will cause a <ph id="ph1">`NotSupportedException`</ph> to be thrown.</source>
          <target state="translated">지원 되지 않으며 하면 콜론 (:)를 사용 하 여 디렉터리를 만들기는 <ph id="ph1">`NotSupportedException`</ph> throw 됩니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.CreateDirectory(System.String)">
          <source>The following example creates and deletes the specified directory.</source>
          <target state="translated">다음 예제에서는 만들고 지정된 된 디렉터리를 삭제 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.CreateDirectory(System.String)">
          <source>To create the directory C:\Users\User1\Public\Html when the current directory is C:\Users\User1, use any of the following calls to ensure that the backslash is interpreted properly.</source>
          <target state="translated">현재 디렉터리가 C:\Users\User1 있을 때 C:\Users\User1\Public\Html 디렉터리를 만들려면 백슬래시 올바르게 해석 되도록 다음 호출을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.CreateDirectory(System.String)">
          <source>In Visual Basic:</source>
          <target state="translated">Visual basic의 경우:</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.CreateDirectory(System.String)">
          <source>In C#:</source>
          <target state="translated">C#:</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.CreateDirectory(System.String)">
          <source>In C++:</source>
          <target state="translated">In C++:</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.CreateDirectory(System.String)">
          <source>The directory specified by <ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a file.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>에 의해 지정된 디렉터리가 파일입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.CreateDirectory(System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.CreateDirectory(System.String)">
          <source>The network name is not known.</source>
          <target state="translated">네트워크 이름을 알 수 없습니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.CreateDirectory(System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.CreateDirectory(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 빈 문자열이거나, 공백만을 포함하거나, 하나 이상의 잘못된 문자를 포함합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.CreateDirectory(System.String)">
          <source>You can query for invalid characters by using the <ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.CreateDirectory(System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.CreateDirectory(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is prefixed with, or contains, only a colon character (:).</source>
          <target state="translated">콜론 문자(:)가 <ph id="ph1">&lt;paramref name="path" /&gt;</ph> 앞에 오거나 포함됩니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.CreateDirectory(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.CreateDirectory(System.String)">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.CreateDirectory(System.String)">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</source>
          <target state="translated">예를 들어 Windows 기반 플랫폼에서 경로는 248자 미만이어야 하고 파일 이름은 260자 미만이어야 합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.CreateDirectory(System.String)">
          <source>The specified path is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.CreateDirectory(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> contains a colon character (:) that is not part of a drive label ("C:<ph id="ph2">\\</ph>").</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>에 드라이브 레이블("C:<ph id="ph2">\\</ph>")에 속하지 않는 콜론 문자(:)가 포함되어 있습니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.CreateDirectory(System.String)">
          <source>for reading and writing files or directories.</source>
          <target state="translated">읽기 / 쓰기 파일 또는 디렉터리입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.CreateDirectory(System.String)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></source>
          <target state="translated">연관 된 열거형: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.CreateDirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>The directory to create.</source>
          <target state="translated">만들 디렉터리입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.CreateDirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>The access control to apply to the directory.</source>
          <target state="translated">디렉터리에 적용할 액세스 제어입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.CreateDirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>Creates all the directories in the specified path, unless the already exist, applying the specified Windows security.</source>
          <target state="translated">이미 존재하지 않는 경우 지정된 경로에 모든 디렉터리를 만들고 지정된 Windows 보안을 적용합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.CreateDirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>An object that represents the directory at the specified path.</source>
          <target state="translated">지정된 경로에서 디렉터리를 나타내는 개체입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.CreateDirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>This object is returned regardless of whether a directory at the specified path already exists.</source>
          <target state="translated">이 개체는 지정된 경로에 디렉터리가 이미 존재하는지 여부와 관계없이 반환됩니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.CreateDirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>Use this method overload to create a directory with access control, so there is no chance the directory can be accessed before security is applied.</source>
          <target state="translated">이 메서드 오버 로드를 사용 하 여 디렉터리를 만들려면 액세스 제어를 사용 하므로 가능성이 보안 적용 되기 전에 디렉터리에 액세스할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.CreateDirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>Any and all directories specified in the <ph id="ph1">`path`</ph> parameter are created, unless they already exist or unless some part of <ph id="ph2">`path`</ph> is invalid.</source>
          <target state="translated">에 지정 된 모든 디렉터리는 <ph id="ph1">`path`</ph> 매개 변수가 생성 하지 않는 한 또는 이미 존재 하지 않는 한 부분이 <ph id="ph2">`path`</ph> 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.CreateDirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>The <ph id="ph1">`path`</ph> parameter specifies a directory path, not a file path.</source>
          <target state="translated"><ph id="ph1">`path`</ph> 매개 변수는 파일 경로가 아닌 디렉터리 경로 지정 합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.CreateDirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>If the directory already exists, this method does not create a new directory, but it returns a <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph> object for the existing directory.</source>
          <target state="translated">디렉터리가 이미 있는,이 메서드는 새 디렉터리를 만들지 않습니다 있지만 반환 하는 경우는 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph> 기존 디렉터리에 대 한 개체입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.CreateDirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>Trailing spaces are removed from the end of the <ph id="ph1">`path`</ph> parameter before creating the directory.</source>
          <target state="translated">끝에서 후행 공백을 제거는 <ph id="ph1">`path`</ph> 디렉터리를 만들기 전에 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.CreateDirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>You can create a directory on a remote computer, on a share that you have write access to.</source>
          <target state="translated">에 대 한 쓰기 권한이 있는 공유에 원격 컴퓨터에 디렉터리를 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.CreateDirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>UNC paths are supported; for example, you can specify the following for <ph id="ph1">`path`</ph>: <ph id="ph2">`\\2009\Archives\December`</ph> in Visual Basic, and <ph id="ph3">`\\\\2009\\Archives\\December`</ph> in C#.</source>
          <target state="translated">UNC 경로 지원 됩니다. 예를 들어 다음을 지정할 수 있습니다 <ph id="ph1">`path`</ph>: <ph id="ph2">`\\2009\Archives\December`</ph> Visual basic에서 및 <ph id="ph3">`\\\\2009\\Archives\\December`</ph> C#입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.CreateDirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>Creating a directory with only the colon character (:) is not supported and causes a <ph id="ph1">`NotSupportedException`</ph> to be thrown.</source>
          <target state="translated">콜론 (:)를 사용 하 여 디렉터리를 만들기는 지원 되지 않으며 사용 하면 한 <ph id="ph1">`NotSupportedException`</ph> throw 됩니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.CreateDirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>The following example creates a new directory with access rules for two user accounts.</source>
          <target state="translated">다음 예제에서는 두 개의 사용자 계정에 대 한 액세스 규칙으로 새 디렉터리를 만듭니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.CreateDirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>The directory specified by <ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a file.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>에 의해 지정된 디렉터리가 파일입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.CreateDirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.CreateDirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>The network name is not known.</source>
          <target state="translated">네트워크 이름을 알 수 없습니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.CreateDirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.CreateDirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 빈 문자열이거나, 공백만을 포함하거나, 하나 이상의 잘못된 문자를 포함합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.CreateDirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>You can query for invalid characters by using the  <ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.CreateDirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.CreateDirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is prefixed with, or contains, only a colon character (:).</source>
          <target state="translated">콜론 문자(:)가 <ph id="ph1">&lt;paramref name="path" /&gt;</ph> 앞에 오거나 포함됩니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.CreateDirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.CreateDirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.CreateDirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</source>
          <target state="translated">예를 들어 Windows 기반 플랫폼에서 경로는 248자 미만이어야 하고 파일 이름은 260자 미만이어야 합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.CreateDirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>The specified path is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.CreateDirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> contains a colon character (:) that is not part of a drive label ("C:<ph id="ph2">\\</ph>").</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>에 드라이브 레이블("C:<ph id="ph2">\\</ph>")에 속하지 않는 콜론 문자(:)가 포함되어 있습니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.CreateDirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>for reading and writing files and directories and for access to the destination directory.</source>
          <target state="translated">읽기 및 쓰기 파일 및 디렉터리에 대 한 대상 디렉터리에 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.CreateDirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph> Security action: <ph id="ph3">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph></source>
          <target state="translated">연관 된 열거형: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph> 보안 동작: <ph id="ph3">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="T:System.IO.Directory">
          <source>Deletes a specified directory, and optionally any subdirectories.</source>
          <target state="translated">지정한 디렉터리와 선택적으로 하위 디렉터리를 삭제합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.Delete(System.String)">
          <source>The name of the empty directory to remove.</source>
          <target state="translated">제거할 빈 디렉터리의 이름입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.Delete(System.String)">
          <source>This directory must be writable and empty.</source>
          <target state="translated">해당 디렉터리는 쓰기가 가능하고 비어 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.Delete(System.String)">
          <source>Deletes an empty directory from a specified path.</source>
          <target state="translated">지정된 경로에서 빈 디렉터리를 삭제합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.Delete(System.String)">
          <source>This method behaves identically to <ph id="ph1">&lt;xref:System.IO.Directory.Delete%28System.String%2CSystem.Boolean%29&gt;</ph> with <ph id="ph2">`false`</ph> specified for the second parameter.</source>
          <target state="translated">이 메서드는 동일 하 게 동작 <ph id="ph1">&lt;xref:System.IO.Directory.Delete%28System.String%2CSystem.Boolean%29&gt;</ph> 와 <ph id="ph2">`false`</ph> 두 번째 매개 변수에 대해 지정 합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.Delete(System.String)">
          <source>The <ph id="ph1">`path`</ph> parameter may specify relative or absolute path information.</source>
          <target state="translated"><ph id="ph1">`path`</ph> 매개 변수는 상대 또는 절대 경로 정보를 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.Delete(System.String)">
          <source>Relative path information is interpreted as relative to the current working directory.</source>
          <target state="translated">상대 경로 정보는 현재 작업 디렉터리에 상대적으로 해석 됩니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.Delete(System.String)">
          <source>To obtain the current working directory, see <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>.</source>
          <target state="translated">현재 작업 디렉터리를 가져오려면 참조 <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.Delete(System.String)">
          <source>Trailing spaces are removed from the end of the <ph id="ph1">`path`</ph> parameter before deleting the directory.</source>
          <target state="translated">끝에서 후행 공백을 제거는 <ph id="ph1">`path`</ph> 디렉터리를 삭제 하기 전에 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.Delete(System.String)">
          <source>This method throws an <ph id="ph1">&lt;xref:System.IO.IOException&gt;</ph> if the directory specified in the <ph id="ph2">`path`</ph> parameter contains files or subdirectories.</source>
          <target state="translated">이 메서드에서 throw 된 <ph id="ph1">&lt;xref:System.IO.IOException&gt;</ph> 디렉터리에 지정 된 경우는 <ph id="ph2">`path`</ph> 매개 변수가 파일이 나 하위 디렉터리를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.Delete(System.String)">
          <source>The <ph id="ph1">`path`</ph> parameter is not case-sensitive.</source>
          <target state="translated"><ph id="ph1">`path`</ph> 매개 변수는 대/소문자 구분 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.Delete(System.String)">
          <source>In some cases, if you have the specified directory open in File Explorer, the <ph id="ph1">&lt;xref:System.IO.Directory.Delete%2A&gt;</ph> method may not be able to delete it.</source>
          <target state="translated">파일 탐색기에서 지정 된 디렉터리가 있는 경우 일부 경우에는 <ph id="ph1">&lt;xref:System.IO.Directory.Delete%2A&gt;</ph> 메서드를 삭제할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.Delete(System.String)">
          <source>The following example shows how to create a new directory and subdirectory, and then delete only the subdirectory.</source>
          <target state="translated">다음 예제에서는 새 디렉터리 및 하위 디렉터리를 만들고 다음의 하위 디렉터리를 삭제 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.Delete(System.String)">
          <source>A file with the same name and location specified by <ph id="ph1">&lt;paramref name="path" /&gt;</ph> exists.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>에 지정된 이름 및 위치와 동일한 파일이 있습니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.Delete(System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.Delete(System.String)">
          <source>The directory is the application's current working directory.</source>
          <target state="translated">이 디렉터리는 응용 프로그램의 현재 작업 디렉터리입니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.Delete(System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.Delete(System.String)">
          <source>The directory specified by <ph id="ph1">&lt;paramref name="path" /&gt;</ph> is not empty.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>에 지정된 디렉터리가 비어 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.Delete(System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.Delete(System.String)">
          <source>The directory is read-only or contains a read-only file.</source>
          <target state="translated">디렉터리가 읽기 전용이거나 읽기 전용 파일을 포함합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.Delete(System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.Delete(System.String)">
          <source>The directory is being used by another process.</source>
          <target state="translated">디렉터리가 다른 프로세스에서 사용 중입니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.Delete(System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.Delete(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 빈 문자열이거나, 공백만을 포함하거나, 하나 이상의 잘못된 문자를 포함합니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.Delete(System.String)">
          <source>You can query for invalid characters by using the <ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.Delete(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.Delete(System.String)">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.Delete(System.String)">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</source>
          <target state="translated">예를 들어 Windows 기반 플랫폼에서 경로는 248자 미만이어야 하고 파일 이름은 260자 미만이어야 합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.Delete(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> does not exist or could not be found.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 존재하지 않거나 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.Delete(System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.Delete(System.String)">
          <source>The specified path is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.Delete(System.String)">
          <source>for writing to the specified directory.</source>
          <target state="translated">에 지정된 된 디렉터리에 기록 됩니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.Delete(System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.Delete(System.String,System.Boolean)">
          <source>The name of the directory to remove.</source>
          <target state="translated">제거할 디렉터리의 이름입니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.Delete(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to remove directories, subdirectories, and files in <bpt id="p1">&lt;c&gt;</bpt>path<ept id="p1">&lt;/c&gt;</ept>; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>경로<ept id="p1">&lt;/c&gt;</ept>의 디렉터리, 하위 디렉터리 및 파일을 제거하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.Delete(System.String,System.Boolean)">
          <source>Deletes the specified directory and, if indicated, any subdirectories and files in the directory.</source>
          <target state="translated">지정된 디렉터리와 해당 디렉터리의 하위 디렉터리 및 파일을 삭제합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.Delete(System.String,System.Boolean)">
          <source>The <ph id="ph1">`path`</ph> parameter may specify relative or absolute path information.</source>
          <target state="translated"><ph id="ph1">`path`</ph> 매개 변수는 상대 또는 절대 경로 정보를 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.Delete(System.String,System.Boolean)">
          <source>Relative path information is interpreted as relative to the current working directory.</source>
          <target state="translated">상대 경로 정보는 현재 작업 디렉터리에 상대적으로 해석 됩니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.Delete(System.String,System.Boolean)">
          <source>To obtain the current working directory, see <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>.</source>
          <target state="translated">현재 작업 디렉터리를 가져오려면 참조 <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.Delete(System.String,System.Boolean)">
          <source>Trailing spaces are removed from the end of the <ph id="ph1">`path`</ph> parameter before deleting the directory.</source>
          <target state="translated">끝에서 후행 공백을 제거는 <ph id="ph1">`path`</ph> 디렉터리를 삭제 하기 전에 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.Delete(System.String,System.Boolean)">
          <source>The <ph id="ph1">`path`</ph> parameter is not case-sensitive.</source>
          <target state="translated"><ph id="ph1">`path`</ph> 매개 변수는 대/소문자 구분 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.Delete(System.String,System.Boolean)">
          <source>If the <ph id="ph1">`recursive`</ph> parameter is <ph id="ph2">`true`</ph>, the user must have write permission for the current directory as well as for all subdirectories.</source>
          <target state="translated">경우는 <ph id="ph1">`recursive`</ph> 매개 변수는 <ph id="ph2">`true`</ph>, 사용자는 현재 디렉터리와 모든 하위 디렉터리에 대 한 쓰기 권한이 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.Delete(System.String,System.Boolean)">
          <source>The behavior of this method differs slightly when deleting a directory that contains a reparse point, such as a symbolic link or a mount point.</source>
          <target state="translated">이 메서드의 동작은 재분석 지점, 기호화 된 링크 또는 탑재 지점을 등이 포함 된 디렉터리를 삭제할 때 약간 다릅니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.Delete(System.String,System.Boolean)">
          <source>If the reparse point is a directory, such as a mount point, it is unmounted and the mount point is deleted.</source>
          <target state="translated">재분석 지점이 디렉터리 이면 탑재 지점과 같은 없으면 탑재 하 고 탑재 지점이 삭제 됩니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.Delete(System.String,System.Boolean)">
          <source>This method does not recurse through the reparse point.</source>
          <target state="translated">이 메서드는 재분석 지점을 통해 재귀 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.Delete(System.String,System.Boolean)">
          <source>If the reparse point is a symbolic link to a file, the reparse point is deleted and not the target of the symbolic link.</source>
          <target state="translated">재분석 지점이 삭제 됩니다 재분석 지점 파일에 기호화 된 링크 이면와 기호화 된 링크의 대상이 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.Delete(System.String,System.Boolean)">
          <source>In some cases, if you have the specified directory open in File Explorer, the <ph id="ph1">&lt;xref:System.IO.Directory.Delete%2A&gt;</ph> method may not be able to delete it.</source>
          <target state="translated">파일 탐색기에서 지정 된 디렉터리가 있는 경우 일부 경우에는 <ph id="ph1">&lt;xref:System.IO.Directory.Delete%2A&gt;</ph> 메서드를 삭제할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.Delete(System.String,System.Boolean)">
          <source>The following example shows how to create a new directory, subdirectory, and file in the subdirectory, and then recursively delete all the new items.</source>
          <target state="translated">다음 예제에는 하위 디렉터리에 새 디렉터리, 하위 디렉터리 및 파일을 만드는 방법을 보여 줍니다 및 다음 재귀적으로 모든 새 항목을 삭제 합니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.Delete(System.String,System.Boolean)">
          <source>A file with the same name and location specified by <ph id="ph1">&lt;paramref name="path" /&gt;</ph> exists.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>에 지정된 이름 및 위치와 동일한 파일이 있습니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.Delete(System.String,System.Boolean)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.Delete(System.String,System.Boolean)">
          <source>The directory specified by <ph id="ph1">&lt;paramref name="path" /&gt;</ph> is read-only, or <ph id="ph2">&lt;paramref name="recursive" /&gt;</ph> is <ph id="ph3">&lt;see langword="false" /&gt;</ph> and <ph id="ph4">&lt;paramref name="path" /&gt;</ph> is not an empty directory.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>로 지정한 디렉터리가 읽기 전용이거나 <ph id="ph2">&lt;paramref name="recursive" /&gt;</ph>가 <ph id="ph3">&lt;see langword="false" /&gt;</ph>이고 <ph id="ph4">&lt;paramref name="path" /&gt;</ph>가 빈 디렉터리가 아닙니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.Delete(System.String,System.Boolean)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.Delete(System.String,System.Boolean)">
          <source>The directory is the application's current working directory.</source>
          <target state="translated">이 디렉터리는 응용 프로그램의 현재 작업 디렉터리입니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.Delete(System.String,System.Boolean)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.Delete(System.String,System.Boolean)">
          <source>The directory contains a read-only file.</source>
          <target state="translated">디렉터리에 읽기 전용 파일이 포함되어 있습니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.Delete(System.String,System.Boolean)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.Delete(System.String,System.Boolean)">
          <source>The directory is being used by another process.</source>
          <target state="translated">디렉터리가 다른 프로세스에서 사용 중입니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.Delete(System.String,System.Boolean)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.Delete(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 빈 문자열이거나, 공백만을 포함하거나, 하나 이상의 잘못된 문자를 포함합니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.Delete(System.String,System.Boolean)">
          <source>You can query for invalid characters by using the <ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.Delete(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.Delete(System.String,System.Boolean)">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.Delete(System.String,System.Boolean)">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</source>
          <target state="translated">예를 들어 Windows 기반 플랫폼에서 경로는 248자 미만이어야 하고 파일 이름은 260자 미만이어야 합니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.Delete(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> does not exist or could not be found.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 존재하지 않거나 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.Delete(System.String,System.Boolean)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.Delete(System.String,System.Boolean)">
          <source>The specified path is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.Delete(System.String,System.Boolean)">
          <source>for writing to the specified directory.</source>
          <target state="translated">에 지정된 된 디렉터리에 기록 됩니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.Delete(System.String,System.Boolean)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="T:System.IO.Directory">
          <source>Returns an enumerable collection of directory names that meet specified criteria.</source>
          <target state="translated">지정된 조건을 충족하는 디렉터리 이름의 열거 가능 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateDirectories(System.String)">
          <source>The relative or absolute path to the directory to search.</source>
          <target state="translated">검색할 디렉터리에 대한 상대 또는 절대 경로입니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateDirectories(System.String)">
          <source>This string is not case-sensitive.</source>
          <target state="translated">이 문자열은 대/소문자를 구분하지 않습니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateDirectories(System.String)">
          <source>Returns an enumerable collection of directory names in a specified path.</source>
          <target state="translated">지정된 경로에 있는 디렉터리 이름의 열거 가능 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateDirectories(System.String)">
          <source>An enumerable collection of the full names (including paths) for the directories in the directory specified by <ph id="ph1">&lt;paramref name="path" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>로 지정된 디렉터리에서 디렉터리에 대한 전체 이름(경로 포함)의 열거 가능 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateDirectories(System.String)">
          <source>You can specify relative or absolute path information in the <ph id="ph1">`path`</ph> parameter.</source>
          <target state="translated">에 대 한 상대 또는 절대 경로 정보를 지정할 수는 <ph id="ph1">`path`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateDirectories(System.String)">
          <source>Relative path information is interpreted as relative to the current working directory, which you can determine by using the <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph> method.</source>
          <target state="translated">상대 경로 정보를 사용 하 여 확인할 수 있는 현재 작업 디렉터리에 상대적으로 해석 됩니다는 <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateDirectories(System.String)">
          <source>The returned directory names are prefixed with the value you provided in the <ph id="ph1">`path`</ph> parameter.</source>
          <target state="translated">사용자가 제공한 값으로 반환된 된 디렉터리 이름 접두사는 <ph id="ph1">`path`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateDirectories(System.String)">
          <source>For example, if you provide a relative path in the <ph id="ph1">`path`</ph> parameter, the returned directory names will contain a relative path.</source>
          <target state="translated">예를 들어에서 상대 경로 제공 하는 경우는 <ph id="ph1">`path`</ph> 매개 변수, 반환된 된 디렉터리 이름에 상대 경로가 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateDirectories(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateDirectories%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.Directory.GetDirectories%2A&gt;</ph> methods differ as follows: When you use <ph id="ph3">&lt;xref:System.IO.Directory.EnumerateDirectories%2A&gt;</ph>, you can start enumerating the collection of names before the whole collection is returned; when you use <ph id="ph4">&lt;xref:System.IO.Directory.GetDirectories%2A&gt;</ph>, you must wait for the whole array of names to be returned before you can access the array.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Directory.EnumerateDirectories%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.IO.Directory.GetDirectories%2A&gt;</ph> 방법은 다음과 같이 달라: 사용 하는 경우 <ph id="ph3">&lt;xref:System.IO.Directory.EnumerateDirectories%2A&gt;</ph>, 전체 컬렉션을 반환 하기 전에 이름 컬렉션을 열거를 시작할 수 있습니다; 사용 하는 경우 <ph id="ph4">&lt;xref:System.IO.Directory.GetDirectories%2A&gt;</ph>, 되도록 이름의 전체 배열에 대해 기다려야 배열에 액세스 하려면 먼저 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateDirectories(System.String)">
          <source>Therefore, when you are working with many files and directories, <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateDirectories%2A&gt;</ph> can be more efficient.</source>
          <target state="translated">따라서 많은 파일 및 디렉터리를 사용 하 여 작업할 때 <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateDirectories%2A&gt;</ph> 더 효과적일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateDirectories(System.String)">
          <source>The returned collection is not cached; each call to the <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> on the collection will start a new enumeration.</source>
          <target state="translated">반환된 된 컬렉션은 캐시 되지 않습니다. 호출할 때마다는 <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> 컬렉션에 새 열거형을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateDirectories(System.String)">
          <source>The following example enumerates the top-level directories in a specified path.</source>
          <target state="translated">다음 예제에서는 지정된 된 경로에서 최상위 디렉터리를 열거합니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateDirectories(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a zero-length string, contains only white space, or contains invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 빈 문자열이거나 공백만을 포함하거나 잘못된 문자를 포함합니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateDirectories(System.String)">
          <source>You can query for invalid characters by using the <ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateDirectories(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateDirectories(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is invalid, such as referring to an unmapped drive.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 잘못되었습니다(예: 매핑되지 않은 드라이브 참조).</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateDirectories(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a file name.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>는 파일 이름입니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateDirectories(System.String)">
          <source>The specified path, file name, or combined exceed the system-defined maximum length.</source>
          <target state="translated">지정된 경로, 파일 이름 또는 이 둘의 조합이 시스템에서 정의한 최대 길이를 초과합니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateDirectories(System.String)">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</source>
          <target state="translated">예를 들어 Windows 기반 플랫폼에서 경로는 248자 미만이어야 하고 파일 이름은 260자 미만이어야 합니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateDirectories(System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateDirectories(System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String)">
          <source>The relative or absolute path to the directory to search.</source>
          <target state="translated">검색할 디렉터리에 대한 상대 또는 절대 경로입니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String)">
          <source>This string is not case-sensitive.</source>
          <target state="translated">이 문자열은 대/소문자를 구분하지 않습니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String)">
          <source>The search string to match against the names of directories in <bpt id="p1">&lt;c&gt;</bpt>path<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>경로<ept id="p1">&lt;/c&gt;</ept>에 있는 디렉터리 이름과 일치하는지 비교할 검색 문자열입니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String)">
          <source>This parameter can contain a combination of valid literal path and wildcard (* and ?) characters, but it doesn't support regular expressions.</source>
          <target state="translated">이 매개 변수는 유효한 리터럴 경로와 와일드카드(* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String)">
          <source>Returns an enumerable collection of directory names that match a search pattern in a specified path.</source>
          <target state="translated">지정된 경로에서 검색 패턴과 일치하는 디렉터리 이름의 열거 가능 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String)">
          <source>An enumerable collection of the full names (including paths) for the directories in the directory specified by <ph id="ph1">&lt;paramref name="path" /&gt;</ph> and that match the specified search pattern.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>로 지정되고 지정된 검색 패턴과 일치하는 디렉터리에서 디렉터리에 대한 전체 이름(경로 포함)의 열거 가능 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String)">
          <source><ph id="ph1">`searchPattern`</ph> can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 리터럴 및 와일드 카드 문자 조합일 수 있지만 정규식을 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String)">
          <source>The following wildcard specifiers are permitted in <ph id="ph1">`searchPattern`</ph>.</source>
          <target state="translated">에 다음 와일드 카드 지정자를 사용할 수 <ph id="ph1">`searchPattern`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String)">
          <source>Wildcard specifier</source>
          <target state="translated">와일드 카드 지정자</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String)">
          <source>Matches</source>
          <target state="translated">일치 항목</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String)">
          <source><ph id="ph1">\*</ph> (asterisk)</source>
          <target state="translated"><ph id="ph1">\*</ph> (별표)</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String)">
          <source>Zero or more characters in that position.</source>
          <target state="translated">해당 위치에 0 개 이상의 문자가 있습니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String)">
          <source>?</source>
          <target state="translated">?</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String)">
          <source>(question mark)</source>
          <target state="translated">(물음표)</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String)">
          <source>Zero or one character in that position.</source>
          <target state="translated">해당 위치에 0 개 또는 1 문자입니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String)">
          <source>Characters other than the wildcard are literal characters.</source>
          <target state="translated">와일드 카드 문자는 리터럴 문자입니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String)">
          <source>For example, the <ph id="ph1">`searchPattern`</ph> string "<ph id="ph2">\*</ph>t" searches for all names in <ph id="ph3">`path`</ph> ending with the letter "t".</source>
          <target state="translated">예를 들어는 <ph id="ph1">`searchPattern`</ph> 문자열 "<ph id="ph2">\*</ph>t"에 대 한 모든 이름 검색 <ph id="ph3">`path`</ph> 문자 "t"로 끝나는 합니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String)">
          <source>The <ph id="ph1">`searchPattern`</ph> string "s<ph id="ph2">\*</ph>" searches for all names in <ph id="ph3">`path`</ph> beginning with the letter "s".</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 문자열 "s<ph id="ph2">\*</ph>"에서 모든 이름 검색 <ph id="ph3">`path`</ph> "s"로 시작 합니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String)">
          <source><ph id="ph1">`searchPattern`</ph> cannot end in two periods ("..") or contain two periods ("..") followed by <ph id="ph2">&lt;xref:System.IO.Path.DirectorySeparatorChar&gt;</ph> or <ph id="ph3">&lt;xref:System.IO.Path.AltDirectorySeparatorChar&gt;</ph>, nor can it contain any invalid characters.</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 두 개의 마침표 ("..") 또는 마침표 두 개가 포함 ("..") 뒤 <ph id="ph2">&lt;xref:System.IO.Path.DirectorySeparatorChar&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.IO.Path.AltDirectorySeparatorChar&gt;</ph>, 잘못 된 문자를 사용할 수 없으며 합니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String)">
          <source>You can query for invalid characters by using the <ph id="ph1">&lt;xref:System.IO.Path.GetInvalidPathChars%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Path.GetInvalidPathChars%2A&gt;</ph> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String)">
          <source>You can specify relative or absolute path information in the <ph id="ph1">`path`</ph> parameter.</source>
          <target state="translated">에 대 한 상대 또는 절대 경로 정보를 지정할 수는 <ph id="ph1">`path`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String)">
          <source>Relative path information is interpreted as relative to the current working directory, which you can determine by using the <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph> method.</source>
          <target state="translated">상대 경로 정보를 사용 하 여 확인할 수 있는 현재 작업 디렉터리에 상대적으로 해석 됩니다는 <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String)">
          <source>The returned directory names are prefixed with the value you provided in the <ph id="ph1">`path`</ph> parameter.</source>
          <target state="translated">사용자가 제공한 값으로 반환된 된 디렉터리 이름 접두사는 <ph id="ph1">`path`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String)">
          <source>For example, if you provide a relative path in the <ph id="ph1">`path`</ph> parameter, the returned directory names will contain a relative path.</source>
          <target state="translated">예를 들어에서 상대 경로 제공 하는 경우는 <ph id="ph1">`path`</ph> 매개 변수, 반환된 된 디렉터리 이름에 상대 경로가 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateDirectories%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.Directory.GetDirectories%2A&gt;</ph> methods differ as follows: When you use <ph id="ph3">&lt;xref:System.IO.Directory.EnumerateDirectories%2A&gt;</ph>, you can start enumerating the collection of names before the whole collection is returned; when you use <ph id="ph4">&lt;xref:System.IO.Directory.GetDirectories%2A&gt;</ph>, you must wait for the whole array of names to be returned before you can access the array.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Directory.EnumerateDirectories%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.IO.Directory.GetDirectories%2A&gt;</ph> 방법은 다음과 같이 달라: 사용 하는 경우 <ph id="ph3">&lt;xref:System.IO.Directory.EnumerateDirectories%2A&gt;</ph>, 전체 컬렉션을 반환 하기 전에 이름 컬렉션을 열거를 시작할 수 있습니다; 사용 하는 경우 <ph id="ph4">&lt;xref:System.IO.Directory.GetDirectories%2A&gt;</ph>, 되도록 이름의 전체 배열에 대해 기다려야 배열에 액세스 하려면 먼저 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String)">
          <source>Therefore, when you are working with many files and directories, <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateDirectories%2A&gt;</ph> can be more efficient.</source>
          <target state="translated">따라서 많은 파일 및 디렉터리를 사용 하 여 작업할 때 <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateDirectories%2A&gt;</ph> 더 효과적일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String)">
          <source>The returned collection is not cached; each call to the <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> on the collection will start a new enumeration.</source>
          <target state="translated">반환된 된 컬렉션은 캐시 되지 않습니다. 호출할 때마다는 <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> 컬렉션에 새 열거형을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String)">
          <source>The following example enumerates the top-level directories in a specified path that match a specified search pattern.</source>
          <target state="translated">다음 예제에서는 지정된 된 검색 패턴과 일치 하는 지정된 된 경로에서 최상위 디렉터리를 열거 합니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a zero-length string, contains only white space, or contains invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 빈 문자열이거나 공백만을 포함하거나 잘못된 문자를 포함합니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String)">
          <source>You can query for invalid characters with the  <ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> does not contain a valid pattern.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph>에 유효한 패턴이 포함되어 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is invalid, such as referring to an unmapped drive.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 잘못되었습니다(예: 매핑되지 않은 드라이브 참조).</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a file name.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>는 파일 이름입니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String)">
          <source>The specified path, file name, or combined exceed the system-defined maximum length.</source>
          <target state="translated">지정된 경로, 파일 이름 또는 이 둘의 조합이 시스템에서 정의한 최대 길이를 초과합니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String)">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</source>
          <target state="translated">예를 들어 Windows 기반 플랫폼에서 경로는 248자 미만이어야 하고 파일 이름은 260자 미만이어야 합니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>The relative or absolute path to the directory to search.</source>
          <target state="translated">검색할 디렉터리에 대한 상대 또는 절대 경로입니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>This string is not case-sensitive.</source>
          <target state="translated">이 문자열은 대/소문자를 구분하지 않습니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>The search string to match against the names of directories in <bpt id="p1">&lt;c&gt;</bpt>path<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>경로<ept id="p1">&lt;/c&gt;</ept>에 있는 디렉터리 이름과 일치하는지 비교할 검색 문자열입니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>This parameter can contain a combination of valid literal path and wildcard (* and ?) characters, but it doesn't support regular expressions.</source>
          <target state="translated">이 매개 변수는 유효한 리터럴 경로와 와일드카드(* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>One of the enumeration values that specifies whether the search operation should include only the current directory or should include all subdirectories.</source>
          <target state="translated">검색 작업에 현재 디렉터리만 포함할지 아니면 모든 하위 디렉터리를 포함할지를 지정하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.IO.SearchOption.TopDirectoryOnly" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.IO.SearchOption.TopDirectoryOnly" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>Returns an enumerable collection of directory names that match a search pattern in a specified path, and optionally searches subdirectories.</source>
          <target state="translated">지정된 경로에서 검색 패턴과 일치하는 디렉터리 이름의 열거 가능 컬렉션을 반환하고 선택적으로 하위 디렉터리를 검색합니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>An enumerable collection of the full names (including paths) for the directories in the directory specified by <ph id="ph1">&lt;paramref name="path" /&gt;</ph> and that match the specified search pattern and option.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>로 지정되고 지정된 검색 패턴 및 옵션과 일치하는 디렉터리에 대한 전체 이름(경로 포함)의 열거 가능 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String,System.IO.SearchOption)">
          <source><ph id="ph1">`searchPattern`</ph> can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 리터럴 및 와일드 카드 문자 조합일 수 있지만 정규식을 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>The following wildcard specifiers are permitted in <ph id="ph1">`searchPattern`</ph>.</source>
          <target state="translated">에 다음 와일드 카드 지정자를 사용할 수 <ph id="ph1">`searchPattern`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>Wildcard specifier</source>
          <target state="translated">와일드 카드 지정자</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>Matches</source>
          <target state="translated">일치 항목</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String,System.IO.SearchOption)">
          <source><ph id="ph1">\*</ph> (asterisk)</source>
          <target state="translated"><ph id="ph1">\*</ph> (별표)</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>Zero or more characters in that position.</source>
          <target state="translated">해당 위치에 0 개 이상의 문자가 있습니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>?</source>
          <target state="translated">?</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>(question mark)</source>
          <target state="translated">(물음표)</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>Exactly one character in that position.</source>
          <target state="translated">해당 위치에 정확히 한 문자입니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>Characters other than the wildcard are literal characters.</source>
          <target state="translated">와일드 카드 문자는 리터럴 문자입니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>For example, the <ph id="ph1">`searchPattern`</ph> string "<ph id="ph2">\*</ph>t" searches for all names in <ph id="ph3">`path`</ph> ending with the letter "t".</source>
          <target state="translated">예를 들어는 <ph id="ph1">`searchPattern`</ph> 문자열 "<ph id="ph2">\*</ph>t"에 대 한 모든 이름 검색 <ph id="ph3">`path`</ph> 문자 "t"로 끝나는 합니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>The <ph id="ph1">`searchPattern`</ph> string "s<ph id="ph2">\*</ph>" searches for all names in <ph id="ph3">`path`</ph> beginning with the letter "s".</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 문자열 "s<ph id="ph2">\*</ph>"에서 모든 이름 검색 <ph id="ph3">`path`</ph> "s"로 시작 합니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String,System.IO.SearchOption)">
          <source><ph id="ph1">`searchPattern`</ph> cannot end in two periods ("..") or contain two periods ("..") followed by <ph id="ph2">&lt;xref:System.IO.Path.DirectorySeparatorChar&gt;</ph> or <ph id="ph3">&lt;xref:System.IO.Path.AltDirectorySeparatorChar&gt;</ph>, nor can it contain any invalid characters.</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 두 개의 마침표 ("..") 또는 마침표 두 개가 포함 ("..") 뒤 <ph id="ph2">&lt;xref:System.IO.Path.DirectorySeparatorChar&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.IO.Path.AltDirectorySeparatorChar&gt;</ph>, 잘못 된 문자를 사용할 수 없으며 합니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>You can query for invalid characters by using the <ph id="ph1">&lt;xref:System.IO.Path.GetInvalidPathChars%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Path.GetInvalidPathChars%2A&gt;</ph> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>You can specify relative or absolute path information in the <ph id="ph1">`path`</ph> parameter.</source>
          <target state="translated">에 대 한 상대 또는 절대 경로 정보를 지정할 수는 <ph id="ph1">`path`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>Relative path information is interpreted as relative to the current working directory, which you can determine by using the <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph> method.</source>
          <target state="translated">상대 경로 정보를 사용 하 여 확인할 수 있는 현재 작업 디렉터리에 상대적으로 해석 됩니다는 <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>The returned directory names are prefixed with the value you provided in the <ph id="ph1">`path`</ph> parameter.</source>
          <target state="translated">사용자가 제공한 값으로 반환된 된 디렉터리 이름 접두사는 <ph id="ph1">`path`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>For example, if you provide a relative path in the <ph id="ph1">`path`</ph> parameter, the returned directory names will contain a relative path.</source>
          <target state="translated">예를 들어에서 상대 경로 제공 하는 경우는 <ph id="ph1">`path`</ph> 매개 변수, 반환된 된 디렉터리 이름에 상대 경로가 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateDirectories%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.Directory.GetDirectories%2A&gt;</ph> methods differ as follows: When you use <ph id="ph3">&lt;xref:System.IO.Directory.EnumerateDirectories%2A&gt;</ph>, you can start enumerating the collection of names before the whole collection is returned; when you use <ph id="ph4">&lt;xref:System.IO.Directory.GetDirectories%2A&gt;</ph>, you must wait for the whole array of names to be returned before you can access the array.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Directory.EnumerateDirectories%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.IO.Directory.GetDirectories%2A&gt;</ph> 방법은 다음과 같이 달라: 사용 하는 경우 <ph id="ph3">&lt;xref:System.IO.Directory.EnumerateDirectories%2A&gt;</ph>, 전체 컬렉션을 반환 하기 전에 이름 컬렉션을 열거를 시작할 수 있습니다; 사용 하는 경우 <ph id="ph4">&lt;xref:System.IO.Directory.GetDirectories%2A&gt;</ph>, 되도록 이름의 전체 배열에 대해 기다려야 배열에 액세스 하려면 먼저 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>Therefore, when you are working with many files and directories, <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateDirectories%2A&gt;</ph> can be more efficient.</source>
          <target state="translated">따라서 많은 파일 및 디렉터리를 사용 하 여 작업할 때 <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateDirectories%2A&gt;</ph> 더 효과적일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>The returned collection is not cached; each call to the <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> on the collection will start a new enumeration.</source>
          <target state="translated">반환된 된 컬렉션은 캐시 되지 않습니다. 호출할 때마다는 <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> 컬렉션에 새 열거형을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>The following example enumerates directories in a specified path that match a specified search pattern.</source>
          <target state="translated">다음 예제에서는 지정된 된 검색 패턴과 일치 하는 지정된 된 경로에서 디렉터리를 열거 합니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>It uses the <ph id="ph1">`searchOption`</ph> parameter to specify that all subdirectories should be included in the search.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">`searchOption`</ph> 매개 변수를 지정 된 모든 하위 디렉터리는 검색에 포함 해야 합니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a zero-length string, contains only white space, or contains invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 빈 문자열이거나 공백만을 포함하거나 잘못된 문자를 포함합니다.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>You can query for invalid characters by using the  <ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String,System.IO.SearchOption)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> does not contain a valid pattern.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph>에 유효한 패턴이 포함되어 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="searchOption" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.SearchOption" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchOption" /&gt;</ph>은 유효한 <ph id="ph2">&lt;see cref="T:System.IO.SearchOption" /&gt;</ph> 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is invalid, such as referring to an unmapped drive.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 잘못되었습니다(예: 매핑되지 않은 드라이브 참조).</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a file name.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>는 파일 이름입니다.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>The specified path, file name, or combined exceed the system-defined maximum length.</source>
          <target state="translated">지정된 경로, 파일 이름 또는 이 둘의 조합이 시스템에서 정의한 최대 길이를 초과합니다.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</source>
          <target state="translated">예를 들어 Windows 기반 플랫폼에서 경로는 248자 미만이어야 하고 파일 이름은 260자 미만이어야 합니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="T:System.IO.Directory">
          <source>Returns an enumerable collection of file names that meet specified criteria.</source>
          <target state="translated">지정된 조건을 충족하는 파일 이름의 열거 가능 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFiles(System.String)">
          <source>The relative or absolute path to the directory to search.</source>
          <target state="translated">검색할 디렉터리에 대한 상대 또는 절대 경로입니다.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFiles(System.String)">
          <source>This string is not case-sensitive.</source>
          <target state="translated">이 문자열은 대/소문자를 구분하지 않습니다.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFiles(System.String)">
          <source>Returns an enumerable collection of file names in a specified path.</source>
          <target state="translated">지정된 경로에 있는 파일 이름의 열거 가능 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFiles(System.String)">
          <source>An enumerable collection of the full names (including paths) for the files in the directory specified by <ph id="ph1">&lt;paramref name="path" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>로 지정된 파일에서 디렉터리에 대한 전체 이름(경로 포함)의 열거 가능 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String)">
          <source>You can specify relative path information with the <ph id="ph1">`path`</ph> parameter.</source>
          <target state="translated">상대 경로 정보를 지정할 수는 <ph id="ph1">`path`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String)">
          <source>Relative path information is interpreted as relative to the current working directory, which you can determine by using the <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph> method.</source>
          <target state="translated">상대 경로 정보를 사용 하 여 확인할 수 있는 현재 작업 디렉터리에 상대적으로 해석 됩니다는 <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateFiles%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.Directory.GetFiles%2A&gt;</ph> methods differ as follows: When you use <ph id="ph3">&lt;xref:System.IO.Directory.EnumerateFiles%2A&gt;</ph>, you can start enumerating the collection of names before the whole collection is returned; when you use <ph id="ph4">&lt;xref:System.IO.Directory.GetFiles%2A&gt;</ph>, you must wait for the whole array of names to be returned before you can access the array.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Directory.EnumerateFiles%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.IO.Directory.GetFiles%2A&gt;</ph> 방법은 다음과 같이 달라: 사용 하는 경우 <ph id="ph3">&lt;xref:System.IO.Directory.EnumerateFiles%2A&gt;</ph>, 전체 컬렉션을 반환 하기 전에 이름 컬렉션을 열거를 시작할 수 있습니다; 사용 하는 경우 <ph id="ph4">&lt;xref:System.IO.Directory.GetFiles%2A&gt;</ph>, 되도록 이름의 전체 배열에 대해 기다려야 배열에 액세스 하려면 먼저 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String)">
          <source>Therefore, when you are working with many files and directories, <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateFiles%2A&gt;</ph> can be more efficient.</source>
          <target state="translated">따라서 많은 파일 및 디렉터리를 사용 하 여 작업할 때 <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateFiles%2A&gt;</ph> 더 효과적일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String)">
          <source>The returned collection is not cached; each call to the <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> on the collection will start a new enumeration.</source>
          <target state="translated">반환된 된 컬렉션은 캐시 되지 않습니다. 호출할 때마다는 <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> 컬렉션에 새 열거형을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String)">
          <source>The following example shows how to retrieve all the files in a directory and move them to a new directory.</source>
          <target state="translated">다음 예제에서는 디렉터리의 모든 파일을 검색 하 고 새 디렉터리로 이동 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String)">
          <source>After the files are moved, they no longer exist in the original directory.</source>
          <target state="translated">파일을 이동한 후 원래 디렉터리에 더 이상 없습니다.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String)">
          <source>The following example enumerates the files in the specified directory, reads each line of the file, and displays the line if it contains the string "Europe".</source>
          <target state="translated">파일의 각 줄을 읽은 다음 예제에서는 지정된 된 디렉터리에서 파일을 열거 하 고 "Europe" 문자열이 포함 된 줄을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFiles(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a zero-length string, contains only white space, or contains invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 빈 문자열이거나 공백만을 포함하거나 잘못된 문자를 포함합니다.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFiles(System.String)">
          <source>You can query for invalid characters by using the <ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFiles(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFiles(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is invalid, such as referring to an unmapped drive.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 잘못되었습니다(예: 매핑되지 않은 드라이브 참조).</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFiles(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a file name.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>는 파일 이름입니다.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFiles(System.String)">
          <source>The specified path, file name, or combined exceed the system-defined maximum length.</source>
          <target state="translated">지정된 경로, 파일 이름 또는 이 둘의 조합이 시스템에서 정의한 최대 길이를 초과합니다.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFiles(System.String)">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</source>
          <target state="translated">예를 들어 Windows 기반 플랫폼에서 경로는 248자 미만이어야 하고 파일 이름은 260자 미만이어야 합니다.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFiles(System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFiles(System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String)">
          <source>The relative or absolute path to the directory to search.</source>
          <target state="translated">검색할 디렉터리에 대한 상대 또는 절대 경로입니다.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String)">
          <source>This string is not case-sensitive.</source>
          <target state="translated">이 문자열은 대/소문자를 구분하지 않습니다.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String)">
          <source>The search string to match against the names of files in <bpt id="p1">&lt;c&gt;</bpt>path<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>경로<ept id="p1">&lt;/c&gt;</ept>에 있는 파일 이름과 일치하는지 비교할 검색 문자열입니다.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String)">
          <source>This parameter can contain a combination of valid literal path and wildcard (* and ?) characters, but it doesn't support regular expressions.</source>
          <target state="translated">이 매개 변수는 유효한 리터럴 경로와 와일드카드(* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String)">
          <source>Returns an enumerable collection of file names that match a search pattern in a specified path.</source>
          <target state="translated">지정된 경로에서 검색 패턴과 일치하는 파일 이름의 열거 가능 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String)">
          <source>An enumerable collection of the full names (including paths) for the files in the directory specified by <ph id="ph1">&lt;paramref name="path" /&gt;</ph> and that match the specified search pattern.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>로 지정되고 지정된 검색 패턴과 일치하는 디렉터리에서 파일에 대한 전체 이름(경로 포함)의 열거 가능 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String)">
          <source><ph id="ph1">`searchPattern`</ph> can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 리터럴 및 와일드 카드 문자 조합일 수 있지만 정규식을 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String)">
          <source>The following wildcard specifiers are permitted in <ph id="ph1">`searchPattern`</ph>.</source>
          <target state="translated">에 다음 와일드 카드 지정자를 사용할 수 <ph id="ph1">`searchPattern`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String)">
          <source>Wildcard specifier</source>
          <target state="translated">와일드 카드 지정자</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String)">
          <source>Matches</source>
          <target state="translated">일치 항목</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String)">
          <source><ph id="ph1">\*</ph> (asterisk)</source>
          <target state="translated"><ph id="ph1">\*</ph> (별표)</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String)">
          <source>Zero or more characters in that position.</source>
          <target state="translated">해당 위치에 0 개 이상의 문자가 있습니다.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String)">
          <source>?</source>
          <target state="translated">?</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String)">
          <source>(question mark)</source>
          <target state="translated">(물음표)</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String)">
          <source>Zero or one character in that position.</source>
          <target state="translated">해당 위치에 0 개 또는 1 문자입니다.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String)">
          <source>Characters other than the wildcard are literal characters.</source>
          <target state="translated">와일드 카드 문자는 리터럴 문자입니다.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String)">
          <source>For example, the <ph id="ph1">`searchPattern`</ph> string "<ph id="ph2">\*</ph>t" searches for all names in <ph id="ph3">`path`</ph> ending with the letter "t".</source>
          <target state="translated">예를 들어는 <ph id="ph1">`searchPattern`</ph> 문자열 "<ph id="ph2">\*</ph>t"에 대 한 모든 이름 검색 <ph id="ph3">`path`</ph> 문자 "t"로 끝나는 합니다.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String)">
          <source>The <ph id="ph1">`searchPattern`</ph> string "s<ph id="ph2">\*</ph>" searches for all names in <ph id="ph3">`path`</ph> beginning with the letter "s".</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 문자열 "s<ph id="ph2">\*</ph>"에서 모든 이름 검색 <ph id="ph3">`path`</ph> "s"로 시작 합니다.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String)">
          <source>When you use the asterisk wildcard character in a <ph id="ph1">`searchPattern`</ph> such as "<ph id="ph2">\*</ph>.txt", the number of characters in the specified extension affects the search as follows:</source>
          <target state="translated">에 별표 와일드 카드 문자를 사용 하는 경우는 <ph id="ph1">`searchPattern`</ph> 와 같은 "<ph id="ph2">\*</ph>.txt"를 지정된 된 확장에 있는 문자의 수에 영향을 줍니다 검색 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String)">
          <source>If the specified extension is exactly three characters long, the method returns files with extensions that begin with the specified extension.</source>
          <target state="translated">정확히 3 자 지정한 확장명을 사용 하는 경우 메서드는 지정한 확장명으로 시작 하는 확장명을 가진 파일을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String)">
          <source>For example, "<ph id="ph1">\*</ph>.xls" returns both "book.xls" and "book.xlsx".</source>
          <target state="translated">예를 들어 "<ph id="ph1">\*</ph>.xls" 모두 "book.xls" 및 "book.xlsx"를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String)">
          <source>In all other cases, the method returns files that exactly match the specified extension.</source>
          <target state="translated">다른 모든 경우 메서드는 지정한 확장명을 정확 하 게 일치 하는 파일을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String)">
          <source>For example, "<ph id="ph1">\*</ph>.ai" returns "file.ai" but not "file.aif".</source>
          <target state="translated">예를 들어 "<ph id="ph1">\*</ph>.ai" "file.ai" 없습니다 "file.aif"를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String)">
          <source>When you use the question mark wildcard character, this method returns only files that match the specified file extension.</source>
          <target state="translated">물음표 와일드 카드 문자를 사용 하는 경우이 메서드는 지정 된 파일 확장명과 일치 하는 파일에만 반환 합니다.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String)">
          <source>For example, given two files, "file1.txt" and "file1.txtother", in a directory, a search pattern of "file?.txt" returns just the first file, whereas a search pattern of "file<ph id="ph1">\*</ph>.txt" returns both files.</source>
          <target state="translated">예를 들어 두 개의 파일, "file1.txt" 및 "file1.txtother" 디렉터리를 검색 패턴은에 지정 된 "파일?입니다. txt"첫 번째 파일만 반환 하는 반면 검색 패턴은" 파일<ph id="ph1">\*</ph>.txt "파일을 모두 반환 합니다.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String)">
          <source><ph id="ph1">`searchPattern`</ph> cannot end in two periods ("..") or contain two periods ("..") followed by <ph id="ph2">&lt;xref:System.IO.Path.DirectorySeparatorChar&gt;</ph> or <ph id="ph3">&lt;xref:System.IO.Path.AltDirectorySeparatorChar&gt;</ph>, nor can it contain any invalid characters.</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 두 개의 마침표 ("..") 또는 마침표 두 개가 포함 ("..") 뒤 <ph id="ph2">&lt;xref:System.IO.Path.DirectorySeparatorChar&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.IO.Path.AltDirectorySeparatorChar&gt;</ph>, 잘못 된 문자를 사용할 수 없으며 합니다.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String)">
          <source>You can query for invalid characters by using the <ph id="ph1">&lt;xref:System.IO.Path.GetInvalidPathChars%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Path.GetInvalidPathChars%2A&gt;</ph> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String)">
          <source>You can specify relative path information with the <ph id="ph1">`path`</ph> parameter.</source>
          <target state="translated">상대 경로 정보를 지정할 수는 <ph id="ph1">`path`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String)">
          <source>Relative path information is interpreted as relative to the current working directory, which you can determine by using the <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph> method.</source>
          <target state="translated">상대 경로 정보를 사용 하 여 확인할 수 있는 현재 작업 디렉터리에 상대적으로 해석 됩니다는 <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateFiles%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.Directory.GetFiles%2A&gt;</ph> methods differ as follows: When you use <ph id="ph3">&lt;xref:System.IO.Directory.EnumerateFiles%2A&gt;</ph>, you can start enumerating the collection of names before the whole collection is returned; when you use <ph id="ph4">&lt;xref:System.IO.Directory.GetFiles%2A&gt;</ph>, you must wait for the whole array of names to be returned before you can access the array.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Directory.EnumerateFiles%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.IO.Directory.GetFiles%2A&gt;</ph> 방법은 다음과 같이 달라: 사용 하는 경우 <ph id="ph3">&lt;xref:System.IO.Directory.EnumerateFiles%2A&gt;</ph>, 전체 컬렉션을 반환 하기 전에 이름 컬렉션을 열거를 시작할 수 있습니다; 사용 하는 경우 <ph id="ph4">&lt;xref:System.IO.Directory.GetFiles%2A&gt;</ph>, 되도록 이름의 전체 배열에 대해 기다려야 배열에 액세스 하려면 먼저 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String)">
          <source>Therefore, when you are working with many files and directories, <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateFiles%2A&gt;</ph> can be more efficient.</source>
          <target state="translated">따라서 많은 파일 및 디렉터리를 사용 하 여 작업할 때 <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateFiles%2A&gt;</ph> 더 효과적일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String)">
          <source>The returned collection is not cached; each call to the <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> on the collection will start a new enumeration.</source>
          <target state="translated">반환된 된 컬렉션은 캐시 되지 않습니다. 호출할 때마다는 <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> 컬렉션에 새 열거형을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String)">
          <source>The following example shows how to retrieve all the text files in a directory and move them to a new directory.</source>
          <target state="translated">다음 예제에서는 디렉터리에 있는 모든 텍스트 파일을 검색 하 고 새 디렉터리로 이동 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String)">
          <source>After the files are moved, they no longer exist in the original directory.</source>
          <target state="translated">파일을 이동한 후 원래 디렉터리에 더 이상 없습니다.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String)">
          <source>The following example enumerates the files in the specified directory that have a .txt extension, reads each line of the file, and displays the line if it contains the string "Europe".</source>
          <target state="translated">파일의 각 줄을 읽은 다음 예제에서는.txt 확장명을 가진 지정된 된 디렉터리에서 파일을 열거 하 고 "Europe" 문자열이 포함 된 줄을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a zero-length string, contains only white space, or contains invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 빈 문자열이거나 공백만을 포함하거나 잘못된 문자를 포함합니다.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String)">
          <source>You can query for invalid characters by using the <ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> does not contain a valid pattern.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph>에 유효한 패턴이 포함되어 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is invalid, such as referring to an unmapped drive.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 잘못되었습니다(예: 매핑되지 않은 드라이브 참조).</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a file name.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>는 파일 이름입니다.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String)">
          <source>The specified path, file name, or combined exceed the system-defined maximum length.</source>
          <target state="translated">지정된 경로, 파일 이름 또는 이 둘의 조합이 시스템에서 정의한 최대 길이를 초과합니다.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String)">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</source>
          <target state="translated">예를 들어 Windows 기반 플랫폼에서 경로는 248자 미만이어야 하고 파일 이름은 260자 미만이어야 합니다.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.SearchOption)">
          <source>The relative or absolute path to the directory to search.</source>
          <target state="translated">검색할 디렉터리에 대한 상대 또는 절대 경로입니다.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.SearchOption)">
          <source>This string is not case-sensitive.</source>
          <target state="translated">이 문자열은 대/소문자를 구분하지 않습니다.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.SearchOption)">
          <source>The search string to match against the names of files in <bpt id="p1">&lt;c&gt;</bpt>path<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>경로<ept id="p1">&lt;/c&gt;</ept>에 있는 파일 이름과 일치하는지 비교할 검색 문자열입니다.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.SearchOption)">
          <source>This parameter can contain a combination of valid literal path and wildcard (* and ?) characters, but it doesn't support regular expressions.</source>
          <target state="translated">이 매개 변수는 유효한 리터럴 경로와 와일드카드(* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.SearchOption)">
          <source>One of the enumeration values that specifies whether the search operation should include only the current directory or should include all subdirectories.</source>
          <target state="translated">검색 작업에 현재 디렉터리만 포함할지 아니면 모든 하위 디렉터리를 포함할지를 지정하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.SearchOption)">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.IO.SearchOption.TopDirectoryOnly" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.IO.SearchOption.TopDirectoryOnly" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.SearchOption)">
          <source>Returns an enumerable collection of file names that match a search pattern in a specified path, and optionally searches subdirectories.</source>
          <target state="translated">지정된 경로에서 검색 패턴과 일치하는 파일 이름의 열거 가능 컬렉션을 반환하고 선택적으로 하위 디렉터리를 검색합니다.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.SearchOption)">
          <source>An enumerable collection of the full names (including paths) for the files in the directory specified by <ph id="ph1">&lt;paramref name="path" /&gt;</ph> and that match the specified search pattern and option.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>로 지정되고 지정된 검색 패턴 및 옵션과 일치하는 디렉터리에서 파일에 대한 전체 이름(경로 포함)의 열거 가능 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.SearchOption)">
          <source><ph id="ph1">`searchPattern`</ph> can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 리터럴 및 와일드 카드 문자 조합일 수 있지만 정규식을 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.SearchOption)">
          <source>The following wildcard specifiers are permitted in <ph id="ph1">`searchPattern`</ph>.</source>
          <target state="translated">에 다음 와일드 카드 지정자를 사용할 수 <ph id="ph1">`searchPattern`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.SearchOption)">
          <source>Wildcard specifier</source>
          <target state="translated">와일드 카드 지정자</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.SearchOption)">
          <source>Matches</source>
          <target state="translated">일치 항목</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.SearchOption)">
          <source><ph id="ph1">\*</ph> (asterisk)</source>
          <target state="translated"><ph id="ph1">\*</ph> (별표)</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.SearchOption)">
          <source>Zero or more characters in that position.</source>
          <target state="translated">해당 위치에 0 개 이상의 문자가 있습니다.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.SearchOption)">
          <source>?</source>
          <target state="translated">?</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.SearchOption)">
          <source>(question mark)</source>
          <target state="translated">(물음표)</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.SearchOption)">
          <source>Zero or one character in that position.</source>
          <target state="translated">해당 위치에 0 개 또는 1 문자입니다.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.SearchOption)">
          <source>Characters other than the wildcard are literal characters.</source>
          <target state="translated">와일드 카드 문자는 리터럴 문자입니다.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.SearchOption)">
          <source>For example, the <ph id="ph1">`searchPattern`</ph> string "<ph id="ph2">\*</ph>t" searches for all names in <ph id="ph3">`path`</ph> ending with the letter "t".</source>
          <target state="translated">예를 들어는 <ph id="ph1">`searchPattern`</ph> 문자열 "<ph id="ph2">\*</ph>t"에 대 한 모든 이름 검색 <ph id="ph3">`path`</ph> 문자 "t"로 끝나는 합니다.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.SearchOption)">
          <source>The <ph id="ph1">`searchPattern`</ph> string "s<ph id="ph2">\*</ph>" searches for all names in <ph id="ph3">`path`</ph> beginning with the letter "s".</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 문자열 "s<ph id="ph2">\*</ph>"에서 모든 이름 검색 <ph id="ph3">`path`</ph> "s"로 시작 합니다.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.SearchOption)">
          <source>When you use the asterisk wildcard character in a <ph id="ph1">`searchPattern`</ph> such as "<ph id="ph2">\*</ph>.txt", the number of characters in the specified extension affects the search as follows:</source>
          <target state="translated">에 별표 와일드 카드 문자를 사용 하는 경우는 <ph id="ph1">`searchPattern`</ph> 와 같은 "<ph id="ph2">\*</ph>.txt"를 지정된 된 확장에 있는 문자의 수에 영향을 줍니다 검색 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.SearchOption)">
          <source>If the specified extension is exactly three characters long, the method returns files with extensions that begin with the specified extension.</source>
          <target state="translated">정확히 3 자 지정한 확장명을 사용 하는 경우 메서드는 지정한 확장명으로 시작 하는 확장명을 가진 파일을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.SearchOption)">
          <source>For example, "<ph id="ph1">\*</ph>.xls" returns both "book.xls" and "book.xlsx".</source>
          <target state="translated">예를 들어 "<ph id="ph1">\*</ph>.xls" 모두 "book.xls" 및 "book.xlsx"를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.SearchOption)">
          <source>In all other cases, the method returns files that exactly match the specified extension.</source>
          <target state="translated">다른 모든 경우 메서드는 지정한 확장명을 정확 하 게 일치 하는 파일을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.SearchOption)">
          <source>For example, "<ph id="ph1">\*</ph>.ai" returns "file.ai" but not "file.aif".</source>
          <target state="translated">예를 들어 "<ph id="ph1">\*</ph>.ai" "file.ai" 없습니다 "file.aif"를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.SearchOption)">
          <source>When you use the question mark wildcard character, this method returns only files that match the specified file extension.</source>
          <target state="translated">물음표 와일드 카드 문자를 사용 하는 경우이 메서드는 지정 된 파일 확장명과 일치 하는 파일에만 반환 합니다.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.SearchOption)">
          <source>For example, given two files, "file1.txt" and "file1.txtother", in a directory, a search pattern of "file?.txt" returns just the first file, whereas a search pattern of "file<ph id="ph1">\*</ph>.txt" returns both files.</source>
          <target state="translated">예를 들어 두 개의 파일, "file1.txt" 및 "file1.txtother" 디렉터리를 검색 패턴은에 지정 된 "파일?입니다. txt"첫 번째 파일만 반환 하는 반면 검색 패턴은" 파일<ph id="ph1">\*</ph>.txt "파일을 모두 반환 합니다.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.SearchOption)">
          <source><ph id="ph1">`searchPattern`</ph> cannot end in two periods ("..") or contain two periods ("..") followed by <ph id="ph2">&lt;xref:System.IO.Path.DirectorySeparatorChar&gt;</ph> or <ph id="ph3">&lt;xref:System.IO.Path.AltDirectorySeparatorChar&gt;</ph>, nor can it contain any invalid characters.</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 두 개의 마침표 ("..") 또는 마침표 두 개가 포함 ("..") 뒤 <ph id="ph2">&lt;xref:System.IO.Path.DirectorySeparatorChar&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.IO.Path.AltDirectorySeparatorChar&gt;</ph>, 잘못 된 문자를 사용할 수 없으며 합니다.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.SearchOption)">
          <source>You can query for invalid characters by using the <ph id="ph1">&lt;xref:System.IO.Path.GetInvalidPathChars%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Path.GetInvalidPathChars%2A&gt;</ph> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.SearchOption)">
          <source>You can specify relative path information with the <ph id="ph1">`path`</ph> parameter.</source>
          <target state="translated">상대 경로 정보를 지정할 수는 <ph id="ph1">`path`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.SearchOption)">
          <source>Relative path information is interpreted as relative to the current working directory, which you can determine by using the <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph> method.</source>
          <target state="translated">상대 경로 정보를 사용 하 여 확인할 수 있는 현재 작업 디렉터리에 상대적으로 해석 됩니다는 <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.SearchOption)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateFiles%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.Directory.GetFiles%2A&gt;</ph> methods differ as follows: When you use <ph id="ph3">&lt;xref:System.IO.Directory.EnumerateFiles%2A&gt;</ph>, you can start enumerating the collection of names before the whole collection is returned; when you use <ph id="ph4">&lt;xref:System.IO.Directory.GetFiles%2A&gt;</ph>, you must wait for the whole array of names to be returned before you can access the array.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Directory.EnumerateFiles%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.IO.Directory.GetFiles%2A&gt;</ph> 방법은 다음과 같이 달라: 사용 하는 경우 <ph id="ph3">&lt;xref:System.IO.Directory.EnumerateFiles%2A&gt;</ph>, 전체 컬렉션을 반환 하기 전에 이름 컬렉션을 열거를 시작할 수 있습니다; 사용 하는 경우 <ph id="ph4">&lt;xref:System.IO.Directory.GetFiles%2A&gt;</ph>, 되도록 이름의 전체 배열에 대해 기다려야 배열에 액세스 하려면 먼저 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.SearchOption)">
          <source>Therefore, when you are working with many files and directories, <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateFiles%2A&gt;</ph> can be more efficient.</source>
          <target state="translated">따라서 많은 파일 및 디렉터리를 사용 하 여 작업할 때 <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateFiles%2A&gt;</ph> 더 효과적일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.SearchOption)">
          <source>The returned collection is not cached; each call to the <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> on the collection will start a new enumeration.</source>
          <target state="translated">반환된 된 컬렉션은 캐시 되지 않습니다. 호출할 때마다는 <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> 컬렉션에 새 열거형을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.SearchOption)">
          <source>The following example shows how to retrieve all the text files in a directory and its subdirectories, and move them to a new directory.</source>
          <target state="translated">다음 예제에서는 디렉터리 및 하위 디렉터리의 모든 텍스트 파일을 검색 하 고 새 디렉터리로 이동 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.SearchOption)">
          <source>After the files are moved, they no longer exist in the original directories.</source>
          <target state="translated">파일을 이동한 후 원래 디렉터리에 더 이상 없습니다.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.SearchOption)">
          <source>The following example recursively enumerates all files that have a .txt extension, reads each line of the file, and displays the line if it contains the string "Microsoft".</source>
          <target state="translated">파일의 각 줄을 읽은 다음 예제에서는 재귀적으로 확장명이.txt 인 모든 파일을 열거 하 고 문자열 "Microsoft"를 포함 하는 경우 줄을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a zero-length string, contains only white space, or contains invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 빈 문자열이거나 공백만을 포함하거나 잘못된 문자를 포함합니다.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.SearchOption)">
          <source>You can query for invalid characters by using the <ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.SearchOption)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> does not contain a valid pattern.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph>에 유효한 패턴이 포함되어 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.SearchOption)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="searchOption" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.SearchOption" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchOption" /&gt;</ph>은 유효한 <ph id="ph2">&lt;see cref="T:System.IO.SearchOption" /&gt;</ph> 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is invalid, such as referring to an unmapped drive.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 잘못되었습니다(예: 매핑되지 않은 드라이브 참조).</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a file name.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>는 파일 이름입니다.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.SearchOption)">
          <source>The specified path, file name, or combined exceed the system-defined maximum length.</source>
          <target state="translated">지정된 경로, 파일 이름 또는 이 둘의 조합이 시스템에서 정의한 최대 길이를 초과합니다.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.SearchOption)">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</source>
          <target state="translated">예를 들어 Windows 기반 플랫폼에서 경로는 248자 미만이어야 하고 파일 이름은 260자 미만이어야 합니다.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.SearchOption)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.SearchOption)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="T:System.IO.Directory">
          <source>Returns an enumerable collection of file-system entries that meet specified criteria.</source>
          <target state="translated">지정된 조건을 충족하는 파일 시스템 항목의 열거 가능 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String)">
          <source>The relative or absolute path to the directory to search.</source>
          <target state="translated">검색할 디렉터리에 대한 상대 또는 절대 경로입니다.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String)">
          <source>This string is not case-sensitive.</source>
          <target state="translated">이 문자열은 대/소문자를 구분하지 않습니다.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String)">
          <source>Returns an enumerable collection of file names and directory names in a specified path.</source>
          <target state="translated">지정된 경로에 있는 파일 이름 및 디렉터리 이름의 열거 가능 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String)">
          <source>An enumerable collection of file-system entries in the directory specified by <ph id="ph1">&lt;paramref name="path" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>로 지정된 디렉터리에 있는 파일 시스템 항목의 열거 가능 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String)">
          <source>You can specify relative path information with the <ph id="ph1">`path`</ph> parameter.</source>
          <target state="translated">상대 경로 정보를 지정할 수는 <ph id="ph1">`path`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String)">
          <source>Relative path information is interpreted as relative to the current working directory, which you can determine by using the <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph> method.</source>
          <target state="translated">상대 경로 정보를 사용 하 여 확인할 수 있는 현재 작업 디렉터리에 상대적으로 해석 됩니다는 <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateFileSystemEntries%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.Directory.GetFileSystemEntries%2A&gt;</ph> methods differ as follows: When you use <ph id="ph3">&lt;xref:System.IO.Directory.EnumerateFileSystemEntries%2A&gt;</ph>, you can start enumerating the collection of entries before the whole collection is returned; when you use <ph id="ph4">&lt;xref:System.IO.Directory.GetFileSystemEntries%2A&gt;</ph>, you must wait for the whole array of entries to be returned before you can access the array.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Directory.EnumerateFileSystemEntries%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.IO.Directory.GetFileSystemEntries%2A&gt;</ph> 방법은 다음과 같이 달라: 사용 하는 경우 <ph id="ph3">&lt;xref:System.IO.Directory.EnumerateFileSystemEntries%2A&gt;</ph>, 전체 컬렉션을 반환 하기 전에 항목의 컬렉션을 열거를 시작할 수 있습니다; 사용 하는 경우 <ph id="ph4">&lt;xref:System.IO.Directory.GetFileSystemEntries%2A&gt;</ph>, 항목의 전체 배열에 대해 기다려야 반환 되기 전에 배열에 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String)">
          <source>Therefore, when you are working with many files and directories, <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateFiles%2A&gt;</ph> can be more efficient.</source>
          <target state="translated">따라서 많은 파일 및 디렉터리를 사용 하 여 작업할 때 <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateFiles%2A&gt;</ph> 더 효과적일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String)">
          <source>The returned collection is not cached; each call to the <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> on the collection will start a new enumeration.</source>
          <target state="translated">반환된 된 컬렉션은 캐시 되지 않습니다. 호출할 때마다는 <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> 컬렉션에 새 열거형을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a zero-length string, contains only white space, or contains invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 빈 문자열이거나 공백만을 포함하거나 잘못된 문자를 포함합니다.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String)">
          <source>You can query for invalid characters by using the <ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is invalid, such as referring to an unmapped drive.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 잘못되었습니다(예: 매핑되지 않은 드라이브 참조).</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a file name.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>는 파일 이름입니다.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String)">
          <source>The specified path, file name, or combined exceed the system-defined maximum length.</source>
          <target state="translated">지정된 경로, 파일 이름 또는 이 둘의 조합이 시스템에서 정의한 최대 길이를 초과합니다.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String)">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</source>
          <target state="translated">예를 들어 Windows 기반 플랫폼에서 경로는 248자 미만이어야 하고 파일 이름은 260자 미만이어야 합니다.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String)">
          <source>The relative or absolute path to the directory to search.</source>
          <target state="translated">검색할 디렉터리에 대한 상대 또는 절대 경로입니다.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String)">
          <source>This string is not case-sensitive.</source>
          <target state="translated">이 문자열은 대/소문자를 구분하지 않습니다.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String)">
          <source>The search string to match against the names of file-system entries in <bpt id="p1">&lt;c&gt;</bpt>path<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>경로<ept id="p1">&lt;/c&gt;</ept>에 있는 파일 시스템 항목 이름과 일치하는지 비교할 검색 문자열입니다.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String)">
          <source>This parameter can contain a combination of valid literal path and wildcard (* and ?) characters, but it doesn't support regular expressions.</source>
          <target state="translated">이 매개 변수는 유효한 리터럴 경로와 와일드카드(* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String)">
          <source>Returns an enumerable collection of file names and directory names that  match a search pattern in a specified path.</source>
          <target state="translated">지정된 경로에서 검색 패턴과 일치하는 파일 이름 및 디렉터리 이름의 열거 가능 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String)">
          <source>An enumerable collection of file-system entries in the directory specified by <ph id="ph1">&lt;paramref name="path" /&gt;</ph> and that match the specified search pattern.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>로 지정된 디렉터리에서 지정된 검색 패턴과 일치하는 파일 시스템 항목의 열거 가능 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String)">
          <source><ph id="ph1">`searchPattern`</ph> can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 리터럴 및 와일드 카드 문자 조합일 수 있지만 정규식을 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String)">
          <source>The following wildcard specifiers are permitted in <ph id="ph1">`searchPattern`</ph>..</source>
          <target state="translated">에 다음 와일드 카드 지정자를 사용할 수 <ph id="ph1">`searchPattern`</ph>...</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String)">
          <source>Wildcard specifier</source>
          <target state="translated">와일드 카드 지정자</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String)">
          <source>Matches</source>
          <target state="translated">일치 항목</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String)">
          <source><ph id="ph1">\*</ph> (asterisk)</source>
          <target state="translated"><ph id="ph1">\*</ph> (별표)</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String)">
          <source>Zero or more characters in that position.</source>
          <target state="translated">해당 위치에 0 개 이상의 문자가 있습니다.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String)">
          <source>?</source>
          <target state="translated">?</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String)">
          <source>(question mark)</source>
          <target state="translated">(물음표)</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String)">
          <source>Zero or one character in that position.</source>
          <target state="translated">해당 위치에 0 개 또는 1 문자입니다.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String)">
          <source>Characters other than the wildcard are literal characters.</source>
          <target state="translated">와일드 카드 문자는 리터럴 문자입니다.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String)">
          <source>For example, the <ph id="ph1">`searchPattern`</ph> string "<ph id="ph2">\*</ph>t" searches for all names in <ph id="ph3">`path`</ph> ending with the letter "t".</source>
          <target state="translated">예를 들어는 <ph id="ph1">`searchPattern`</ph> 문자열 "<ph id="ph2">\*</ph>t"에 대 한 모든 이름 검색 <ph id="ph3">`path`</ph> 문자 "t"로 끝나는 합니다.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String)">
          <source>The <ph id="ph1">`searchPattern`</ph> string "s<ph id="ph2">\*</ph>" searches for all names in <ph id="ph3">`path`</ph> beginning with the letter "s".</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 문자열 "s<ph id="ph2">\*</ph>"에서 모든 이름 검색 <ph id="ph3">`path`</ph> "s"로 시작 합니다.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String)">
          <source>When you use the asterisk wildcard character in a <ph id="ph1">`searchPattern`</ph> such as "<ph id="ph2">\*</ph>.txt", the number of characters in the specified extension affects the search as follows:</source>
          <target state="translated">에 별표 와일드 카드 문자를 사용 하는 경우는 <ph id="ph1">`searchPattern`</ph> 와 같은 "<ph id="ph2">\*</ph>.txt"를 지정된 된 확장에 있는 문자의 수에 영향을 줍니다 검색 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String)">
          <source>If the specified extension is exactly three characters long, the method returns files with extensions that begin with the specified extension.</source>
          <target state="translated">정확히 3 자 지정한 확장명을 사용 하는 경우 메서드는 지정한 확장명으로 시작 하는 확장명을 가진 파일을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String)">
          <source>For example, "<ph id="ph1">\*</ph>.xls" returns both "book.xls" and "book.xlsx".</source>
          <target state="translated">예를 들어 "<ph id="ph1">\*</ph>.xls" 모두 "book.xls" 및 "book.xlsx"를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String)">
          <source>In all other cases, the method returns files that exactly match the specified extension.</source>
          <target state="translated">다른 모든 경우 메서드는 지정한 확장명을 정확 하 게 일치 하는 파일을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String)">
          <source>For example, "<ph id="ph1">\*</ph>.ai" returns "file.ai" but not "file.aif".</source>
          <target state="translated">예를 들어 "<ph id="ph1">\*</ph>.ai" "file.ai" 없습니다 "file.aif"를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String)">
          <source>When you use the question mark wildcard character, this method returns only files that match the specified file extension.</source>
          <target state="translated">물음표 와일드 카드 문자를 사용 하는 경우이 메서드는 지정 된 파일 확장명과 일치 하는 파일에만 반환 합니다.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String)">
          <source>For example, given two files, "file1.txt" and "file1.txtother", in a directory, a search pattern of "file?.txt" returns just the first file, whereas a search pattern of "file<ph id="ph1">\*</ph>.txt" returns both files.</source>
          <target state="translated">예를 들어 두 개의 파일, "file1.txt" 및 "file1.txtother" 디렉터리를 검색 패턴은에 지정 된 "파일?입니다. txt"첫 번째 파일만 반환 하는 반면 검색 패턴은" 파일<ph id="ph1">\*</ph>.txt "파일을 모두 반환 합니다.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String)">
          <source><ph id="ph1">`searchPattern`</ph> cannot end in two periods ("..") or contain two periods ("..") followed by <ph id="ph2">&lt;xref:System.IO.Path.DirectorySeparatorChar&gt;</ph> or <ph id="ph3">&lt;xref:System.IO.Path.AltDirectorySeparatorChar&gt;</ph>, nor can it contain any invalid characters.</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 두 개의 마침표 ("..") 또는 마침표 두 개가 포함 ("..") 뒤 <ph id="ph2">&lt;xref:System.IO.Path.DirectorySeparatorChar&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.IO.Path.AltDirectorySeparatorChar&gt;</ph>, 잘못 된 문자를 사용할 수 없으며 합니다.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String)">
          <source>You can query for invalid characters by using the <ph id="ph1">&lt;xref:System.IO.Path.GetInvalidPathChars%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Path.GetInvalidPathChars%2A&gt;</ph> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String)">
          <source>You can specify relative path information with the <ph id="ph1">`path`</ph> parameter.</source>
          <target state="translated">상대 경로 정보를 지정할 수는 <ph id="ph1">`path`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String)">
          <source>Relative path information is interpreted as relative to the current working directory, which you can determine by using the <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph> method.</source>
          <target state="translated">상대 경로 정보를 사용 하 여 확인할 수 있는 현재 작업 디렉터리에 상대적으로 해석 됩니다는 <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateFileSystemEntries%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.Directory.GetFileSystemEntries%2A&gt;</ph> methods differ as follows: When you use <ph id="ph3">&lt;xref:System.IO.Directory.EnumerateFileSystemEntries%2A&gt;</ph>, you can start enumerating the collection of entries before the whole collection is returned; when you use <ph id="ph4">&lt;xref:System.IO.Directory.GetFileSystemEntries%2A&gt;</ph>, you must wait for the whole array of entries to be returned before you can access the array.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Directory.EnumerateFileSystemEntries%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.IO.Directory.GetFileSystemEntries%2A&gt;</ph> 방법은 다음과 같이 달라: 사용 하는 경우 <ph id="ph3">&lt;xref:System.IO.Directory.EnumerateFileSystemEntries%2A&gt;</ph>, 전체 컬렉션을 반환 하기 전에 항목의 컬렉션을 열거를 시작할 수 있습니다; 사용 하는 경우 <ph id="ph4">&lt;xref:System.IO.Directory.GetFileSystemEntries%2A&gt;</ph>, 항목의 전체 배열에 대해 기다려야 반환 되기 전에 배열에 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String)">
          <source>Therefore, when you are working with many files and directories, <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateFiles%2A&gt;</ph> can be more efficient.</source>
          <target state="translated">따라서 많은 파일 및 디렉터리를 사용 하 여 작업할 때 <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateFiles%2A&gt;</ph> 더 효과적일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String)">
          <source>The returned collection is not cached; each call to the <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> on the collection will start a new enumeration.</source>
          <target state="translated">반환된 된 컬렉션은 캐시 되지 않습니다. 호출할 때마다는 <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> 컬렉션에 새 열거형을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a zero-length string, contains only white space, or contains invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 빈 문자열이거나 공백만을 포함하거나 잘못된 문자를 포함합니다.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String)">
          <source>You can query for invalid characters by using the <ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> does not contain a valid pattern.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph>에 유효한 패턴이 포함되어 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is invalid, such as referring to an unmapped drive.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 잘못되었습니다(예: 매핑되지 않은 드라이브 참조).</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a file name.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>는 파일 이름입니다.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String)">
          <source>The specified path, file name, or combined exceed the system-defined maximum length.</source>
          <target state="translated">지정된 경로, 파일 이름 또는 이 둘의 조합이 시스템에서 정의한 최대 길이를 초과합니다.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String)">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</source>
          <target state="translated">예를 들어 Windows 기반 플랫폼에서 경로는 248자 미만이어야 하고 파일 이름은 260자 미만이어야 합니다.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>The relative or absolute path to the directory to search.</source>
          <target state="translated">검색할 디렉터리에 대한 상대 또는 절대 경로입니다.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>This string is not case-sensitive.</source>
          <target state="translated">이 문자열은 대/소문자를 구분하지 않습니다.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>The search string to match against file-system entries in <bpt id="p1">&lt;c&gt;</bpt>path<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>경로<ept id="p1">&lt;/c&gt;</ept>에 있는 파일 시스템 항목과 일치하는지 비교할 검색 문자열입니다.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>This parameter can contain a combination of valid literal path and wildcard (* and ?) characters, but it doesn't support regular expressions.</source>
          <target state="translated">이 매개 변수는 유효한 리터럴 경로와 와일드카드(* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>One of the enumeration values  that specifies whether the search operation should include only the current directory or should include all subdirectories.</source>
          <target state="translated">검색 작업에 현재 디렉터리만 포함할지 아니면 모든 하위 디렉터리를 포함할지를 지정하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.IO.SearchOption.TopDirectoryOnly" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.IO.SearchOption.TopDirectoryOnly" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>Returns an enumerable collection of file names and directory names that match a search pattern in a specified path, and optionally searches subdirectories.</source>
          <target state="translated">지정된 경로에서 검색 패턴과 일치하는 파일 이름 및 디렉터리 이름의 열거 가능 컬렉션을 반환하고 선택적으로 하위 디렉터리를 검색합니다.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>An enumerable collection of file-system entries in the directory specified by <ph id="ph1">&lt;paramref name="path" /&gt;</ph> and that match the specified search pattern and option.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>로 지정된 디렉터리에서 지정된 검색 패턴 및 옵션과 일치하는 파일 시스템 항목의 열거 가능 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source><ph id="ph1">`searchPattern`</ph> can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 리터럴 및 와일드 카드 문자 조합일 수 있지만 정규식을 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>The following wildcard specifiers are permitted in <ph id="ph1">`searchPattern`</ph>.</source>
          <target state="translated">에 다음 와일드 카드 지정자를 사용할 수 <ph id="ph1">`searchPattern`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>Wildcard specifier</source>
          <target state="translated">와일드 카드 지정자</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>Matches</source>
          <target state="translated">일치 항목</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source><ph id="ph1">\*</ph> (asterisk)</source>
          <target state="translated"><ph id="ph1">\*</ph> (별표)</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>Zero or more characters in that position.</source>
          <target state="translated">해당 위치에 0 개 이상의 문자가 있습니다.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>?</source>
          <target state="translated">?</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>(question mark)</source>
          <target state="translated">(물음표)</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>Zero or one character in that position.</source>
          <target state="translated">해당 위치에 0 개 또는 1 문자입니다.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>Characters other than the wildcard are literal characters.</source>
          <target state="translated">와일드 카드 문자는 리터럴 문자입니다.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>For example, the <ph id="ph1">`searchPattern`</ph> string "<ph id="ph2">\*</ph>t" searches for all names in <ph id="ph3">`path`</ph> ending with the letter "t".</source>
          <target state="translated">예를 들어는 <ph id="ph1">`searchPattern`</ph> 문자열 "<ph id="ph2">\*</ph>t"에 대 한 모든 이름 검색 <ph id="ph3">`path`</ph> 문자 "t"로 끝나는 합니다.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>The <ph id="ph1">`searchPattern`</ph> string "s<ph id="ph2">\*</ph>" searches for all names in <ph id="ph3">`path`</ph> beginning with the letter "s".</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 문자열 "s<ph id="ph2">\*</ph>"에서 모든 이름 검색 <ph id="ph3">`path`</ph> "s"로 시작 합니다.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>When you use the asterisk wildcard character in a <ph id="ph1">`searchPattern`</ph> such as "<ph id="ph2">\*</ph>.txt", the number of characters in the specified extension affects the search as follows:</source>
          <target state="translated">에 별표 와일드 카드 문자를 사용 하는 경우는 <ph id="ph1">`searchPattern`</ph> 와 같은 "<ph id="ph2">\*</ph>.txt"를 지정된 된 확장에 있는 문자의 수에 영향을 줍니다 검색 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>If the specified extension is exactly three characters long, the method returns files with extensions that begin with the specified extension.</source>
          <target state="translated">정확히 3 자 지정한 확장명을 사용 하는 경우 메서드는 지정한 확장명으로 시작 하는 확장명을 가진 파일을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>For example, "<ph id="ph1">\*</ph>.xls" returns both "book.xls" and "book.xlsx".</source>
          <target state="translated">예를 들어 "<ph id="ph1">\*</ph>.xls" 모두 "book.xls" 및 "book.xlsx"를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>In all other cases, the method returns files that exactly match the specified extension.</source>
          <target state="translated">다른 모든 경우 메서드는 지정한 확장명을 정확 하 게 일치 하는 파일을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>For example, "<ph id="ph1">\*</ph>.ai" returns "file.ai" but not "file.aif".</source>
          <target state="translated">예를 들어 "<ph id="ph1">\*</ph>.ai" "file.ai" 없습니다 "file.aif"를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>When you use the question mark wildcard character, this method returns only files that match the specified file extension.</source>
          <target state="translated">물음표 와일드 카드 문자를 사용 하는 경우이 메서드는 지정 된 파일 확장명과 일치 하는 파일에만 반환 합니다.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>For example, given two files, "file1.txt" and "file1.txtother", in a directory, a search pattern of "file?.txt" returns just the first file, whereas a search pattern of "file<ph id="ph1">\*</ph>.txt" returns both files.</source>
          <target state="translated">예를 들어 두 개의 파일, "file1.txt" 및 "file1.txtother" 디렉터리를 검색 패턴은에 지정 된 "파일?입니다. txt"첫 번째 파일만 반환 하는 반면 검색 패턴은" 파일<ph id="ph1">\*</ph>.txt "파일을 모두 반환 합니다.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source><ph id="ph1">`searchPattern`</ph> cannot end in two periods ("..") or contain two periods ("..") followed by <ph id="ph2">&lt;xref:System.IO.Path.DirectorySeparatorChar&gt;</ph> or <ph id="ph3">&lt;xref:System.IO.Path.AltDirectorySeparatorChar&gt;</ph>, nor can it contain any invalid characters.</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 두 개의 마침표 ("..") 또는 마침표 두 개가 포함 ("..") 뒤 <ph id="ph2">&lt;xref:System.IO.Path.DirectorySeparatorChar&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.IO.Path.AltDirectorySeparatorChar&gt;</ph>, 잘못 된 문자를 사용할 수 없으며 합니다.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>You can query for invalid characters by using the <ph id="ph1">&lt;xref:System.IO.Path.GetInvalidPathChars%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Path.GetInvalidPathChars%2A&gt;</ph> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>You can specify relative path information with the <ph id="ph1">`path`</ph> parameter.</source>
          <target state="translated">상대 경로 정보를 지정할 수는 <ph id="ph1">`path`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>Relative path information is interpreted as relative to the current working directory, which you can determine by using the <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph> method.</source>
          <target state="translated">상대 경로 정보를 사용 하 여 확인할 수 있는 현재 작업 디렉터리에 상대적으로 해석 됩니다는 <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateFileSystemEntries%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.Directory.GetFileSystemEntries%2A&gt;</ph> methods differ as follows: When you use <ph id="ph3">&lt;xref:System.IO.Directory.EnumerateFileSystemEntries%2A&gt;</ph>, you can start enumerating the collection of entries before the whole collection is returned; when you use <ph id="ph4">&lt;xref:System.IO.Directory.GetFileSystemEntries%2A&gt;</ph>, you must wait for the whole array of entries to be returned before you can access the array.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Directory.EnumerateFileSystemEntries%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.IO.Directory.GetFileSystemEntries%2A&gt;</ph> 방법은 다음과 같이 달라: 사용 하는 경우 <ph id="ph3">&lt;xref:System.IO.Directory.EnumerateFileSystemEntries%2A&gt;</ph>, 전체 컬렉션을 반환 하기 전에 항목의 컬렉션을 열거를 시작할 수 있습니다; 사용 하는 경우 <ph id="ph4">&lt;xref:System.IO.Directory.GetFileSystemEntries%2A&gt;</ph>, 항목의 전체 배열에 대해 기다려야 반환 되기 전에 배열에 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>Therefore, when you are working with many files and directories, <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateFiles%2A&gt;</ph> can be more efficient.</source>
          <target state="translated">따라서 많은 파일 및 디렉터리를 사용 하 여 작업할 때 <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateFiles%2A&gt;</ph> 더 효과적일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>The returned collection is not cached; each call to the <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> on the collection will start a new enumeration.</source>
          <target state="translated">반환된 된 컬렉션은 캐시 되지 않습니다. 호출할 때마다는 <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> 컬렉션에 새 열거형을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a zero-length string, contains only white space, or contains invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 빈 문자열이거나 공백만을 포함하거나 잘못된 문자를 포함합니다.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>You can query for invalid characters by using the <ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> does not contain a valid pattern.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph>에 유효한 패턴이 포함되어 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="searchOption" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.SearchOption" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchOption" /&gt;</ph>은 유효한 <ph id="ph2">&lt;see cref="T:System.IO.SearchOption" /&gt;</ph> 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is invalid, such as referring to an unmapped drive.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 잘못되었습니다(예: 매핑되지 않은 드라이브 참조).</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a file name.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>는 파일 이름입니다.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>The specified path, file name, or combined exceed the system-defined maximum length.</source>
          <target state="translated">지정된 경로, 파일 이름 또는 이 둘의 조합이 시스템에서 정의한 최대 길이를 초과합니다.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</source>
          <target state="translated">예를 들어 Windows 기반 플랫폼에서 경로는 248자 미만이어야 하고 파일 이름은 260자 미만이어야 합니다.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.Exists(System.String)">
          <source>The path to test.</source>
          <target state="translated">테스트할 경로입니다.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.Exists(System.String)">
          <source>Determines whether the given path refers to an existing directory on disk.</source>
          <target state="translated">지정된 경로가 디스크에 있는 기존 디렉터리를 참조하는지를 확인합니다.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.Exists(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="path" /&gt;</ph> refers to an existing directory; <ph id="ph3">&lt;see langword="false" /&gt;</ph> if the directory does not exist or an error occurs when trying to determine if the specified directory exists.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="path" /&gt;</ph>가 기존 디렉터리를 참조하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 디렉터리가 존재하지 않거나 지정된 디렉터리가 존재하는지 확인할 때 오류가 발생하면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.Exists(System.String)">
          <source>The <ph id="ph1">`path`</ph> parameter is permitted to specify relative or absolute path information.</source>
          <target state="translated"><ph id="ph1">`path`</ph> 상대 또는 절대 경로 정보를 지정 하기 위해 매개 변수는 허용 합니다.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.Exists(System.String)">
          <source>Relative path information is interpreted as relative to the current working directory.</source>
          <target state="translated">상대 경로 정보는 현재 작업 디렉터리에 상대적으로 해석 됩니다.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.Exists(System.String)">
          <source>Trailing spaces are removed from the end of the <ph id="ph1">`path`</ph> parameter before checking whether the directory exists.</source>
          <target state="translated">끝에서 후행 공백을 제거는 <ph id="ph1">`path`</ph> 디렉터리가 있는지 여부를 확인 하기 전에 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.Exists(System.String)">
          <source>The <ph id="ph1">`path`</ph> parameter is not case-sensitive.</source>
          <target state="translated"><ph id="ph1">`path`</ph> 매개 변수는 대/소문자 구분 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.Exists(System.String)">
          <source>If you do not have at a minimum read-only permission to the directory, the <ph id="ph1">&lt;xref:System.IO.Directory.Exists%2A&gt;</ph> method will return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">에 디렉터리를 최소 읽기 전용 권한이 없는 경우는 <ph id="ph1">&lt;xref:System.IO.Directory.Exists%2A&gt;</ph> 메서드는 반환 <ph id="ph2">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.Exists(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Directory.Exists%2A&gt;</ph> method returns <ph id="ph2">`false`</ph> if any error occurs while trying to determine if the specified file exists.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Directory.Exists%2A&gt;</ph> 메서드 반환 <ph id="ph2">`false`</ph> 지정한 파일이 있는지 확인 하는 동안 오류가 발생 하는 경우.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.Exists(System.String)">
          <source>This can occur in situations that raise exceptions such as passing a file name with invalid characters or too many characters, a failing or missing disk, or if the caller does not have permission to read the file.</source>
          <target state="translated">이 파일 이름에 잘못 된 문자 또는 실패 나 누락 된 디스크에 문자가 너무 많습니다. 전달할 때 예외를 발생 시키는 상황에서 발생할 수 있습니다 또는 호출자에 게 파일을 읽을 수 있는 사용 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.Exists(System.String)">
          <source>The following example takes an array of file or directory names on the command line, determines what kind of name it is, and processes it appropriately.</source>
          <target state="translated">다음 예제에서는 명령줄에서 파일 또는 디렉터리의 배열을 사용, 어떤 유형의 이름, 되며 적절 하 게 처리를 결정 합니다.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.Exists(System.String)">
          <source>for reading files.</source>
          <target state="translated">파일 읽기입니다.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.Exists(System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" uid="T:System.IO.Directory">
          <source>Returns the Windows access control list (ACL) for a directory.</source>
          <target state="translated">디렉터리의 Windows ACL(액세스 제어 목록)을 반환합니다.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetAccessControl(System.String)">
          <source>The path to a directory containing a <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.DirectorySecurity" /&gt;</ph> object that describes the file's access control list (ACL) information.</source>
          <target state="translated">파일의 ACL(액세스 제어 목록) 정보를 설명하는 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.DirectorySecurity" /&gt;</ph> 개체가 포함된 디렉터리의 경로입니다.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetAccessControl(System.String)">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.DirectorySecurity" /&gt;</ph> object that encapsulates the access control list (ACL) entries for a specified directory.</source>
          <target state="translated">지정된 디렉터리의 ACL(액세스 제어 목록) 항목을 캡슐화하는 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.DirectorySecurity" /&gt;</ph> 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetAccessControl(System.String)">
          <source>An object that encapsulates the access control rules for the file described by the <ph id="ph1">&lt;paramref name="path" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> 매개 변수에서 설명하는 파일의 액세스 제어 규칙을 캡슐화하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetAccessControl(System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.Directory.GetAccessControl%2A&gt;</ph> method to retrieve the access control list (ACL) entries for a directory.</source>
          <target state="translated">사용 된 <ph id="ph1">&lt;xref:System.IO.Directory.GetAccessControl%2A&gt;</ph> 디렉터리에 대 한 액세스 제어 목록 (ACL) 항목을 검색 하는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetAccessControl(System.String)">
          <source>An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</source>
          <target state="translated">ACL에는 개인 및/또는 그룹 나 권한이 없는, 특정된 파일이 나 디렉터리에서 특정 작업을 설명 합니다.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetAccessControl(System.String)">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Add or Remove Access Control List Entries<ept id="p1">](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>방법: Access Control 목록 항목 추가 또는 제거<ept id="p1">](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetAccessControl(System.String)">
          <source>In NTFS environments, <ph id="ph1">&lt;xref:System.Security.AccessControl.FileSystemRights.ReadAttributes&gt;</ph> and <ph id="ph2">&lt;xref:System.Security.AccessControl.FileSystemRights.ReadExtendedAttributes&gt;</ph> are granted to the user if the user has <ph id="ph3">&lt;xref:System.Security.AccessControl.FileSystemRights.ListDirectory&gt;</ph> rights on the parent folder.</source>
          <target state="translated">NTFS 환경에서 <ph id="ph1">&lt;xref:System.Security.AccessControl.FileSystemRights.ReadAttributes&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Security.AccessControl.FileSystemRights.ReadExtendedAttributes&gt;</ph> 사용자에 게 하는 경우 사용자에 게 권한이 부여 됩니다 <ph id="ph3">&lt;xref:System.Security.AccessControl.FileSystemRights.ListDirectory&gt;</ph> 부모 폴더에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetAccessControl(System.String)">
          <source>To deny <ph id="ph1">&lt;xref:System.Security.AccessControl.FileSystemRights.ReadAttributes&gt;</ph> and <ph id="ph2">&lt;xref:System.Security.AccessControl.FileSystemRights.ReadExtendedAttributes&gt;</ph>, deny <ph id="ph3">&lt;xref:System.Security.AccessControl.FileSystemRights.ListDirectory&gt;</ph> on the parent directory.</source>
          <target state="translated">거부 하려면 <ph id="ph1">&lt;xref:System.Security.AccessControl.FileSystemRights.ReadAttributes&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Security.AccessControl.FileSystemRights.ReadExtendedAttributes&gt;</ph>, 거부 <ph id="ph3">&lt;xref:System.Security.AccessControl.FileSystemRights.ListDirectory&gt;</ph> 부모 디렉터리에 있습니다.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetAccessControl(System.String)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.IO.Directory.GetAccessControl%2A&gt;</ph> and the <ph id="ph2">&lt;xref:System.IO.Directory.SetAccessControl%2A&gt;</ph> methods to add an access control list (ACL) entry and then remove an ACL entry from a directory.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.IO.Directory.GetAccessControl%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.IO.Directory.SetAccessControl%2A&gt;</ph> 대 한 액세스 권한을 추가 하는 메서드 목록 (ACL) 항목을 제어 하 고 다음 디렉터리에서 ACL 항목을 제거 합니다.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetAccessControl(System.String)">
          <source>You must supply a valid user or group account to run this example.</source>
          <target state="translated">이 예제를 실행하려면 유효한 사용자 또는 그룹 계정을 제공해야 합니다.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetAccessControl(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="path" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetAccessControl(System.String)">
          <source>An I/O error occurred while opening the directory.</source>
          <target state="translated">디렉터리를 여는 동안 I/O 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetAccessControl(System.String)">
          <source>The current operating system is not Windows 2000 or later.</source>
          <target state="translated">현재 운영 체제가 Windows 2000 이상이 아닙니다.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetAccessControl(System.String)">
          <source>A system-level error occurred, such as the directory could not be found.</source>
          <target state="translated">시스템 수준 오류가(예: 디렉터리를 찾을 수 없음) 발생했습니다.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetAccessControl(System.String)">
          <source>The specific exception may be a subclass of <ph id="ph1">&lt;see cref="T:System.SystemException" /&gt;</ph>.</source>
          <target state="translated">특정 예외는 <ph id="ph1">&lt;see cref="T:System.SystemException" /&gt;</ph>의 서브클래스일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetAccessControl(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="path" /&gt;</ph> parameter specified a directory that is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> 매개 변수가 읽기 전용 디렉터리를 지정하는 경우</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetAccessControl(System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetAccessControl(System.String)">
          <source>This operation is not supported on the current platform.</source>
          <target state="translated">현재 플랫폼이 해당 작업을 지원하지 않는 경우</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetAccessControl(System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetAccessControl(System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetAccessControl(System.String)">
          <source>for permission to enumerate access control list (ACL) for a directory.</source>
          <target state="translated">디렉터리에 대 한 액세스 제어 목록 (ACL)를 열거할 수 있는 권한입니다.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetAccessControl(System.String)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" /&gt;</ph> , <ph id="ph2">&lt;see cref="F:System.Security.AccessControl.AccessControlActions.View" /&gt;</ph></source>
          <target state="translated">연관 된 열거형: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" /&gt;</ph> , <ph id="ph2">&lt;see cref="F:System.Security.AccessControl.AccessControlActions.View" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetAccessControl(System.String)">
          <source>Security action: Demand.</source>
          <target state="translated">보안 동작: 요청 합니다.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetAccessControl(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>The path to a directory containing a <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.DirectorySecurity" /&gt;</ph> object that describes the file's access control list (ACL) information.</source>
          <target state="translated">파일의 ACL(액세스 제어 목록) 정보를 설명하는 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.DirectorySecurity" /&gt;</ph> 개체가 포함된 디렉터리의 경로입니다.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetAccessControl(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlSections" /&gt;</ph> values that specifies the type of access control list (ACL) information to receive.</source>
          <target state="translated">가져올 ACL(액세스 제어 목록) 정보의 형식을 지정하는 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlSections" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetAccessControl(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.DirectorySecurity" /&gt;</ph> object that encapsulates the specified type of access control list (ACL) entries for a specified directory.</source>
          <target state="translated">지정된 디렉터리의 지정된 ACL(액세스 제어 목록) 항목 형식을 캡슐화하는 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.DirectorySecurity" /&gt;</ph> 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetAccessControl(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>An object that encapsulates the access control rules for the file described by the <ph id="ph1">&lt;paramref name="path" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> 매개 변수에서 설명하는 파일의 액세스 제어 규칙을 캡슐화하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetAccessControl(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.Directory.GetAccessControl%2A&gt;</ph> method to retrieve the access control list (ACL) entries for a directory.</source>
          <target state="translated">사용 된 <ph id="ph1">&lt;xref:System.IO.Directory.GetAccessControl%2A&gt;</ph> 디렉터리에 대 한 액세스 제어 목록 (ACL) 항목을 검색 하는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetAccessControl(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</source>
          <target state="translated">ACL에는 개인 및/또는 그룹 나 권한이 없는, 특정된 파일이 나 디렉터리에서 특정 작업을 설명 합니다.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetAccessControl(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Add or Remove Access Control List Entries<ept id="p1">](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>방법: Access Control 목록 항목 추가 또는 제거<ept id="p1">](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetAccessControl(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>In NTFS environments, <ph id="ph1">&lt;xref:System.Security.AccessControl.FileSystemRights.ReadAttributes&gt;</ph> and <ph id="ph2">&lt;xref:System.Security.AccessControl.FileSystemRights.ReadExtendedAttributes&gt;</ph> are granted to the user if the user has <ph id="ph3">&lt;xref:System.Security.AccessControl.FileSystemRights.ListDirectory&gt;</ph> rights on the parent folder.</source>
          <target state="translated">NTFS 환경에서 <ph id="ph1">&lt;xref:System.Security.AccessControl.FileSystemRights.ReadAttributes&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Security.AccessControl.FileSystemRights.ReadExtendedAttributes&gt;</ph> 사용자에 게 하는 경우 사용자에 게 권한이 부여 됩니다 <ph id="ph3">&lt;xref:System.Security.AccessControl.FileSystemRights.ListDirectory&gt;</ph> 부모 폴더에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetAccessControl(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>To deny <ph id="ph1">&lt;xref:System.Security.AccessControl.FileSystemRights.ReadAttributes&gt;</ph> and <ph id="ph2">&lt;xref:System.Security.AccessControl.FileSystemRights.ReadExtendedAttributes&gt;</ph>, deny <ph id="ph3">&lt;xref:System.Security.AccessControl.FileSystemRights.ListDirectory&gt;</ph> on the parent directory.</source>
          <target state="translated">거부 하려면 <ph id="ph1">&lt;xref:System.Security.AccessControl.FileSystemRights.ReadAttributes&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Security.AccessControl.FileSystemRights.ReadExtendedAttributes&gt;</ph>, 거부 <ph id="ph3">&lt;xref:System.Security.AccessControl.FileSystemRights.ListDirectory&gt;</ph> 부모 디렉터리에 있습니다.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetAccessControl(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>The <ph id="ph1">&lt;paramref name="path" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetAccessControl(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>An I/O error occurred while opening the directory.</source>
          <target state="translated">디렉터리를 여는 동안 I/O 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetAccessControl(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>The current operating system is not Windows 2000 or later.</source>
          <target state="translated">현재 운영 체제가 Windows 2000 이상이 아닙니다.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetAccessControl(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>A system-level error occurred, such as the directory could not be found.</source>
          <target state="translated">시스템 수준 오류가(예: 디렉터리를 찾을 수 없음) 발생했습니다.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetAccessControl(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>The specific exception may be a subclass of <ph id="ph1">&lt;see cref="T:System.SystemException" /&gt;</ph>.</source>
          <target state="translated">특정 예외는 <ph id="ph1">&lt;see cref="T:System.SystemException" /&gt;</ph>의 서브클래스일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetAccessControl(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>The <ph id="ph1">&lt;paramref name="path" /&gt;</ph> parameter specified a directory that is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> 매개 변수가 읽기 전용 디렉터리를 지정하는 경우</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetAccessControl(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetAccessControl(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>This operation is not supported on the current platform.</source>
          <target state="translated">현재 플랫폼이 해당 작업을 지원하지 않는 경우</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetAccessControl(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetAccessControl(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetAccessControl(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>for permission to enumerate access control list (ACL) for a directory.</source>
          <target state="translated">디렉터리에 대 한 액세스 제어 목록 (ACL)를 열거할 수 있는 권한입니다.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetAccessControl(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" /&gt;</ph> , <ph id="ph2">&lt;see cref="F:System.Security.AccessControl.AccessControlActions.View" /&gt;</ph></source>
          <target state="translated">연관 된 열거형: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" /&gt;</ph> , <ph id="ph2">&lt;see cref="F:System.Security.AccessControl.AccessControlActions.View" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetAccessControl(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>Security action: Demand.</source>
          <target state="translated">보안 동작: 요청 합니다.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetCreationTime(System.String)">
          <source>The path of the directory.</source>
          <target state="translated">디렉터리 경로입니다.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetCreationTime(System.String)">
          <source>Gets the creation date and time of a directory.</source>
          <target state="translated">디렉터리를 만든 날짜와 시간을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetCreationTime(System.String)">
          <source>A structure that is set to the creation date and time for the specified directory.</source>
          <target state="translated">지정된 디렉터리를 만든 날짜와 시간으로 설정된 구조체입니다.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetCreationTime(System.String)">
          <source>This value is expressed in local time.</source>
          <target state="translated">이 값은 현지 시간으로 표현됩니다.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetCreationTime(System.String)">
          <source>This method may return an inaccurate value, because it uses native functions whose values may not be continuously updated by the operating system.</source>
          <target state="translated">이 메서드는 운영 체제에 의해 값을 가진 지속적으로 업데이트 되지 않을 수 있습니다는 네이티브 함수를 사용 하기 때문에 정확 하지 않은 값을 반환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetCreationTime(System.String)">
          <source>This method is equivalent to <ph id="ph1">&lt;xref:System.IO.File.GetCreationTime%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이 메서드는 <ph id="ph1">&lt;xref:System.IO.File.GetCreationTime%2A?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetCreationTime(System.String)">
          <source>If the directory described in the <ph id="ph1">`path`</ph> parameter does not exist, this method returns 12:00 midnight, January 1, 1601 A.D.</source>
          <target state="translated">디렉터리에서 설명 하는 경우는 <ph id="ph1">`path`</ph> 매개 변수가 없는,이 메서드가 반환 서 기 1601 년 1 월 1 일 자정 12 시</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetCreationTime(System.String)">
          <source>(C.E.) Coordinated Universal Time (UTC), adjusted to local time.</source>
          <target state="translated">(C.E.) Utc (협정 세계시)를 현지 시간으로 조정 합니다.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetCreationTime(System.String)">
          <source>The <ph id="ph1">`path`</ph> parameter is permitted to specify relative or absolute path information.</source>
          <target state="translated"><ph id="ph1">`path`</ph> 상대 또는 절대 경로 정보를 지정 하기 위해 매개 변수는 허용 합니다.</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetCreationTime(System.String)">
          <source>Relative path information is interpreted as relative to the current working directory.</source>
          <target state="translated">상대 경로 정보는 현재 작업 디렉터리에 상대적으로 해석 됩니다.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetCreationTime(System.String)">
          <source>To obtain the current working directory, see <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>.</source>
          <target state="translated">현재 작업 디렉터리를 가져오려면 참조 <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetCreationTime(System.String)">
          <source>The <ph id="ph1">`path`</ph> parameter is not case-sensitive.</source>
          <target state="translated"><ph id="ph1">`path`</ph> 매개 변수는 대/소문자 구분 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetCreationTime(System.String)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">공통적인 I/O 작업의 목록에 대 한 참조 <bpt id="p1">[</bpt>공통적인 I/O 작업<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetCreationTime(System.String)">
          <source>The following example gets the creation time of the specified directory.</source>
          <target state="translated">다음 예제에서는 지정된 된 디렉터리의 생성 시간을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetCreationTime(System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetCreationTime(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 빈 문자열이거나, 공백만을 포함하거나, 하나 이상의 잘못된 문자를 포함합니다.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetCreationTime(System.String)">
          <source>You can query for invalid characters by using the <ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetCreationTime(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetCreationTime(System.String)">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetCreationTime(System.String)">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</source>
          <target state="translated">예를 들어 Windows 기반 플랫폼에서 경로는 248자 미만이어야 하고 파일 이름은 260자 미만이어야 합니다.</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetCreationTime(System.String)">
          <source>for reading the specified file or directory.</source>
          <target state="translated">에 지정 된 파일 또는 디렉터리를 읽고 있습니다.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetCreationTime(System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetCreationTimeUtc(System.String)">
          <source>The path of the directory.</source>
          <target state="translated">디렉터리 경로입니다.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetCreationTimeUtc(System.String)">
          <source>Gets the creation date and time, in Coordinated Universal Time (UTC) format, of a directory.</source>
          <target state="translated">디렉터리를 만든 날짜와 시간을 UTC(Coordinated Universal Time) 형식으로 가져옵니다.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetCreationTimeUtc(System.String)">
          <source>A structure that is set to the creation date and time for the specified directory.</source>
          <target state="translated">지정된 디렉터리를 만든 날짜와 시간으로 설정된 구조체입니다.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetCreationTimeUtc(System.String)">
          <source>This value is expressed in UTC time.</source>
          <target state="translated">이 값은 UTC 시간으로 표현됩니다.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetCreationTimeUtc(System.String)">
          <source>This method may return an inaccurate value, because it uses native functions whose values may not be continuously updated by the operating system.</source>
          <target state="translated">이 메서드는 운영 체제에 의해 값을 가진 지속적으로 업데이트 되지 않을 수 있습니다는 네이티브 함수를 사용 하기 때문에 정확 하지 않은 값을 반환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetCreationTimeUtc(System.String)">
          <source>If the directory described in the <ph id="ph1">`path`</ph> parameter does not exist, this method returns 12:00 midnight, January 1, 1601 A.D.</source>
          <target state="translated">디렉터리에서 설명 하는 경우는 <ph id="ph1">`path`</ph> 매개 변수가 없는,이 메서드가 반환 서 기 1601 년 1 월 1 일 자정 12 시</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetCreationTimeUtc(System.String)">
          <source>(C.E.) Coordinated Universal Time (UTC).</source>
          <target state="translated">(C.E.) Utc (협정 세계시)입니다.</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetCreationTimeUtc(System.String)">
          <source>Use this method to get the creation time for a directory based on Coordinated Universal Time (UTC).</source>
          <target state="translated">이 메서드를 사용 하 여 utc (협정 세계시)에 따라 디렉터리에 대 한 생성 시간을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetCreationTimeUtc(System.String)">
          <source>The following example illustrates the differences in output when using Coordinated Universal Time (UTC) output.</source>
          <target state="translated">Utc (협정 세계시) 출력을 사용 하는 경우 다음 예제에서는 출력의 차이점을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetCreationTimeUtc(System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetCreationTimeUtc(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 빈 문자열이거나, 공백만을 포함하거나, 하나 이상의 잘못된 문자를 포함합니다.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetCreationTimeUtc(System.String)">
          <source>You can query for invalid characters by using the <ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetCreationTimeUtc(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetCreationTimeUtc(System.String)">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetCreationTimeUtc(System.String)">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</source>
          <target state="translated">예를 들어 Windows 기반 플랫폼에서 경로는 248자 미만이어야 하고 파일 이름은 260자 미만이어야 합니다.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetCreationTimeUtc(System.String)">
          <source>for reading the specified file or directory.</source>
          <target state="translated">에 지정 된 파일 또는 디렉터리를 읽고 있습니다.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetCreationTimeUtc(System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetCurrentDirectory">
          <source>Gets the current working directory of the application.</source>
          <target state="translated">응용 프로그램의 현재 작업 디렉터리를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetCurrentDirectory">
          <source>A string that contains the path of the current working directory, and does not end with a backslash (<ph id="ph1">\\</ph>).</source>
          <target state="translated">현재 작업 디렉터리의 경로를 포함하고 백슬래시(<ph id="ph1">\\</ph>)로 끝나지 않는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetCurrentDirectory">
          <source>The current directory is distinct from the original directory, which is the one from which the process was started.</source>
          <target state="translated">현재 디렉터리는 원래 디렉터리 프로세스가 시작 된 것과에서 다릅니다.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetCurrentDirectory">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">공통적인 I/O 작업의 목록에 대 한 참조 <bpt id="p1">[</bpt>공통적인 I/O 작업<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetCurrentDirectory">
          <source>The following example demonstrates how to use the <ph id="ph1">`GetCurrentDirectory`</ph> method.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">`GetCurrentDirectory`</ph> 메서드를 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetCurrentDirectory">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetCurrentDirectory">
          <source>The operating system is Windows CE, which does not have current directory functionality.</source>
          <target state="translated">운영 체제가 현재 디렉터리 기능이 없는 Windows CE입니다.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetCurrentDirectory">
          <source>This method is available in the .NET Compact Framework, but is not currently supported.</source>
          <target state="translated">이 메서드는 .NET Compact Framework에서 사용할 수 있지만 현재 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetCurrentDirectory">
          <source>for access to path information for the current directory.</source>
          <target state="translated">현재 디렉터리에 대 한 경로 정보에 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetCurrentDirectory">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" uid="T:System.IO.Directory">
          <source>Returns the names of subdirectories that meet specified criteria.</source>
          <target state="translated">지정된 조건을 충족하는 하위 디렉터리 이름을 반환합니다.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetDirectories(System.String)">
          <source>The relative or absolute path to the directory to search.</source>
          <target state="translated">검색할 디렉터리에 대한 상대 또는 절대 경로입니다.</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetDirectories(System.String)">
          <source>This string is not case-sensitive.</source>
          <target state="translated">이 문자열은 대/소문자를 구분하지 않습니다.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetDirectories(System.String)">
          <source>Returns the names of subdirectories (including their paths) in the specified directory.</source>
          <target state="translated">지정된 디렉터리에 있는 하위 디렉터리의 이름(경로 포함)을 반환합니다.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetDirectories(System.String)">
          <source>An array of the full names (including paths) of subdirectories in the specified path, or an empty array if no directories are found.</source>
          <target state="translated">지정된 경로에서 하위 디렉터리의 전체 이름(경로 포함)의 배열이거나 디렉터리가 없으면 빈 배열입니다.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectories(System.String)">
          <source>This method is identical to <ph id="ph1">&lt;xref:System.IO.Directory.GetDirectories%28System.String%2CSystem.String%29&gt;</ph> with the asterisk (<ph id="ph2">\*</ph>) specified as the search pattern, so it returns all subdirectories.If you need to search subdirectories, use the <ph id="ph3">&lt;xref:System.IO.Directory.GetDirectories%28System.String%2CSystem.String%2CSystem.IO.SearchOption%29&gt;</ph> method, which enables you to specify a search of subdirectories with the <ph id="ph4">`searchOption`</ph> parameter.</source>
          <target state="translated">이 메서드는 동일 <ph id="ph1">&lt;xref:System.IO.Directory.GetDirectories%28System.String%2CSystem.String%29&gt;</ph> 별표 (<ph id="ph2">\*</ph>)는 검색 패턴으로 지정 하므로 반환 모든 하위 디렉터리입니다. 사용 하 여 하위 디렉터리를 검색 해야 하는 경우는 <ph id="ph3">&lt;xref:System.IO.Directory.GetDirectories%28System.String%2CSystem.String%2CSystem.IO.SearchOption%29&gt;</ph> 의 하위 디렉터리를 검색 하도록 지정할 수 있는 메서드는 <ph id="ph4">`searchOption`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectories(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateDirectories%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.Directory.GetDirectories%2A&gt;</ph> methods differ as follows: When you use <ph id="ph3">&lt;xref:System.IO.Directory.EnumerateDirectories%2A&gt;</ph>, you can start enumerating the collection of names before the whole collection is returned; when you use <ph id="ph4">&lt;xref:System.IO.Directory.GetDirectories%2A&gt;</ph>, you must wait for the whole array of names to be returned before you can access the array.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Directory.EnumerateDirectories%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.IO.Directory.GetDirectories%2A&gt;</ph> 방법은 다음과 같이 달라: 사용 하는 경우 <ph id="ph3">&lt;xref:System.IO.Directory.EnumerateDirectories%2A&gt;</ph>, 전체 컬렉션을 반환 하기 전에 이름 컬렉션을 열거를 시작할 수 있습니다; 사용 하는 경우 <ph id="ph4">&lt;xref:System.IO.Directory.GetDirectories%2A&gt;</ph>, 되도록 이름의 전체 배열에 대해 기다려야 배열에 액세스 하려면 먼저 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectories(System.String)">
          <source>Therefore, when you are working with many files and directories, <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateDirectories%2A&gt;</ph> can be more efficient.</source>
          <target state="translated">따라서 많은 파일 및 디렉터리를 사용 하 여 작업할 때 <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateDirectories%2A&gt;</ph> 더 효과적일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectories(System.String)">
          <source>The <ph id="ph1">`path`</ph> parameter can specify relative or absolute path information.</source>
          <target state="translated"><ph id="ph1">`path`</ph> 매개 변수는 상대 또는 절대 경로 정보를 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectories(System.String)">
          <source>Relative path information is interpreted as relative to the current working directory.</source>
          <target state="translated">상대 경로 정보는 현재 작업 디렉터리에 상대적으로 해석 됩니다.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectories(System.String)">
          <source>To obtain the current working directory, see <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>.</source>
          <target state="translated">현재 작업 디렉터리를 가져오려면 참조 <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectories(System.String)">
          <source>The names returned by this method are prefixed with the directory information provided in <ph id="ph1">`path`</ph>.</source>
          <target state="translated">이 메서드에 의해 반환 되는 이름에 제공 된 디렉터리 정보 접두사가 추가 되며 <ph id="ph1">`path`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectories(System.String)">
          <source>The <ph id="ph1">`path`</ph> parameter is not case-sensitive.</source>
          <target state="translated"><ph id="ph1">`path`</ph> 매개 변수는 대/소문자 구분 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectories(System.String)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">공통적인 I/O 작업의 목록에 대 한 참조 <bpt id="p1">[</bpt>공통적인 I/O 작업<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectories(System.String)">
          <source>The following example takes an array of file or directory names on the command line, determines what kind of name it is, and processes it appropriately.</source>
          <target state="translated">다음 예제에서는 명령줄에서 파일 또는 디렉터리의 배열을 사용, 어떤 유형의 이름, 되며 적절 하 게 처리를 결정 합니다.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetDirectories(System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetDirectories(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 빈 문자열이거나, 공백만을 포함하거나, 하나 이상의 잘못된 문자를 포함합니다.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetDirectories(System.String)">
          <source>You can query for invalid characters by using the <ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetDirectories(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetDirectories(System.String)">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetDirectories(System.String)">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</source>
          <target state="translated">예를 들어 Windows 기반 플랫폼에서 경로는 248자 미만이어야 하고 파일 이름은 260자 미만이어야 합니다.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetDirectories(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a file name.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>는 파일 이름입니다.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetDirectories(System.String)">
          <source>The specified path is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectories(System.String)">
          <source>for accessing path information for the current directory.</source>
          <target state="translated">현재 디렉터리에 대 한 경로 정보에 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectories(System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetDirectories(System.String,System.String)">
          <source>The relative or absolute path to the directory to search.</source>
          <target state="translated">검색할 디렉터리에 대한 상대 또는 절대 경로입니다.</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetDirectories(System.String,System.String)">
          <source>This string is not case-sensitive.</source>
          <target state="translated">이 문자열은 대/소문자를 구분하지 않습니다.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetDirectories(System.String,System.String)">
          <source>The search string to match against the names of subdirectories in <bpt id="p1">&lt;c&gt;</bpt>path<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>경로<ept id="p1">&lt;/c&gt;</ept>에 있는 하위 디렉터리 이름과 일치하는지 비교할 검색 문자열입니다.</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetDirectories(System.String,System.String)">
          <source>This parameter can contain a combination of valid literal and wildcard characters, but it doesn't support regular expressions.</source>
          <target state="translated">이 매개 변수는 유효한 리터럴 및 와일드카드 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetDirectories(System.String,System.String)">
          <source>Returns the names of subdirectories (including their paths) that match the specified search pattern in the specified directory.</source>
          <target state="translated">지정된 디렉터리에서 지정된 검색 패턴과 일치하는 하위 디렉터리 이름(파일 경로 포함)을 반환합니다.</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetDirectories(System.String,System.String)">
          <source>An array of the full names (including paths) of the subdirectories that match the search pattern in the specified directory, or an empty array if no directories are found.</source>
          <target state="translated">지정된 디렉터리에서 검색 패턴과 일치하는 하위 디렉터리의 전체 이름(경로 포함)의 배열이거나 디렉터리가 없으면 빈 배열입니다.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectories(System.String,System.String)">
          <source>This method returns all subdirectories directly under the specified directory that match the specified search pattern.</source>
          <target state="translated">이 메서드는 지정된 된 검색 패턴과 일치 하는 지정된 된 디렉터리 바로 아래 모든 하위 디렉터리를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectories(System.String,System.String)">
          <source>If the specified directory has no subdirectories, or no subdirectories match the <ph id="ph1">`searchPattern`</ph> parameter, this method returns an empty array.</source>
          <target state="translated">지정된 된 디렉터리에 하위 디렉터리가 없는지 또는 하위 디렉터리가 없는지와 일치 하는 경우는 <ph id="ph1">`searchPattern`</ph> 매개 변수를이 메서드는 빈 배열을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectories(System.String,System.String)">
          <source>Only the top directory is searched.</source>
          <target state="translated">상위 디렉터리만 검색 됩니다.</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectories(System.String,System.String)">
          <source>If you want to search the subdirectories as well, use the <ph id="ph1">&lt;xref:System.IO.Directory.GetDirectories%28System.String%2CSystem.String%2CSystem.IO.SearchOption%29&gt;</ph> method and specify <ph id="ph2">&lt;xref:System.IO.SearchOption.AllDirectories&gt;</ph> in the <ph id="ph3">`searchOption`</ph> parameter.</source>
          <target state="translated">하위 디렉터리를 검색 하려는 경우 사용 하 여는 <ph id="ph1">&lt;xref:System.IO.Directory.GetDirectories%28System.String%2CSystem.String%2CSystem.IO.SearchOption%29&gt;</ph> 메서드를 지정 하 고 <ph id="ph2">&lt;xref:System.IO.SearchOption.AllDirectories&gt;</ph> 에 <ph id="ph3">`searchOption`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectories(System.String,System.String)">
          <source><ph id="ph1">`searchPattern`</ph> can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 리터럴 및 와일드 카드 문자 조합일 수 있지만 정규식을 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectories(System.String,System.String)">
          <source>The following wildcard specifiers are permitted in <ph id="ph1">`searchPattern`</ph>.</source>
          <target state="translated">에 다음 와일드 카드 지정자를 사용할 수 <ph id="ph1">`searchPattern`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectories(System.String,System.String)">
          <source>Wildcard specifier</source>
          <target state="translated">와일드 카드 지정자</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectories(System.String,System.String)">
          <source>Matches</source>
          <target state="translated">일치 항목</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectories(System.String,System.String)">
          <source><ph id="ph1">\*</ph> (asterisk)</source>
          <target state="translated"><ph id="ph1">\*</ph> (별표)</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectories(System.String,System.String)">
          <source>Zero or more characters in that position.</source>
          <target state="translated">해당 위치에 0 개 이상의 문자가 있습니다.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectories(System.String,System.String)">
          <source>?</source>
          <target state="translated">?</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectories(System.String,System.String)">
          <source>(question mark)</source>
          <target state="translated">(물음표)</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectories(System.String,System.String)">
          <source>Zero or one character in that position.</source>
          <target state="translated">해당 위치에 0 개 또는 1 문자입니다.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectories(System.String,System.String)">
          <source>Characters other than the wildcard are literal characters.</source>
          <target state="translated">와일드 카드 문자는 리터럴 문자입니다.</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectories(System.String,System.String)">
          <source>For example, the <ph id="ph1">`searchPattern`</ph> string "<ph id="ph2">\*</ph>t" searches for all names in <ph id="ph3">`path`</ph> ending with the letter "t".</source>
          <target state="translated">예를 들어는 <ph id="ph1">`searchPattern`</ph> 문자열 "<ph id="ph2">\*</ph>t"에 대 한 모든 이름 검색 <ph id="ph3">`path`</ph> 문자 "t"로 끝나는 합니다.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectories(System.String,System.String)">
          <source>The <ph id="ph1">`searchPattern`</ph> string "s<ph id="ph2">\*</ph>" searches for all names in <ph id="ph3">`path`</ph> beginning with the letter "s".</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 문자열 "s<ph id="ph2">\*</ph>"에서 모든 이름 검색 <ph id="ph3">`path`</ph> "s"로 시작 합니다.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectories(System.String,System.String)">
          <source><ph id="ph1">`searchPattern`</ph> cannot end in two periods ("..") or contain two periods ("..") followed by <ph id="ph2">&lt;xref:System.IO.Path.DirectorySeparatorChar&gt;</ph> or <ph id="ph3">&lt;xref:System.IO.Path.AltDirectorySeparatorChar&gt;</ph>, nor can it contain any invalid characters.</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 두 개의 마침표 ("..") 또는 마침표 두 개가 포함 ("..") 뒤 <ph id="ph2">&lt;xref:System.IO.Path.DirectorySeparatorChar&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.IO.Path.AltDirectorySeparatorChar&gt;</ph>, 잘못 된 문자를 사용할 수 없으며 합니다.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectories(System.String,System.String)">
          <source>You can query for invalid characters by using the <ph id="ph1">&lt;xref:System.IO.Path.GetInvalidPathChars%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Path.GetInvalidPathChars%2A&gt;</ph> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectories(System.String,System.String)">
          <source>The <ph id="ph1">`path`</ph> parameter can specify relative or absolute path information, and is not case-sensitive.</source>
          <target state="translated"><ph id="ph1">`path`</ph> 매개 변수 상대 또는 절대 경로 정보를 지정할 수 이며 대/소문자 구분 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectories(System.String,System.String)">
          <source>Relative path information is interpreted as relative to the current working directory.</source>
          <target state="translated">상대 경로 정보는 현재 작업 디렉터리에 상대적으로 해석 됩니다.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectories(System.String,System.String)">
          <source>To obtain the current working directory, see <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>.</source>
          <target state="translated">현재 작업 디렉터리를 가져오려면 참조 <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectories(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateDirectories%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.Directory.GetDirectories%2A&gt;</ph> methods differ as follows: When you use <ph id="ph3">&lt;xref:System.IO.Directory.EnumerateDirectories%2A&gt;</ph>, you can start enumerating the collection of names before the whole collection is returned; when you use <ph id="ph4">&lt;xref:System.IO.Directory.GetDirectories%2A&gt;</ph>, you must wait for the whole array of names to be returned before you can access the array.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Directory.EnumerateDirectories%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.IO.Directory.GetDirectories%2A&gt;</ph> 방법은 다음과 같이 달라: 사용 하는 경우 <ph id="ph3">&lt;xref:System.IO.Directory.EnumerateDirectories%2A&gt;</ph>, 전체 컬렉션을 반환 하기 전에 이름 컬렉션을 열거를 시작할 수 있습니다; 사용 하는 경우 <ph id="ph4">&lt;xref:System.IO.Directory.GetDirectories%2A&gt;</ph>, 되도록 이름의 전체 배열에 대해 기다려야 배열에 액세스 하려면 먼저 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectories(System.String,System.String)">
          <source>Therefore, when you are working with many files and directories, <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateDirectories%2A&gt;</ph> can be more efficient.</source>
          <target state="translated">따라서 많은 파일 및 디렉터리를 사용 하 여 작업할 때 <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateDirectories%2A&gt;</ph> 더 효과적일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectories(System.String,System.String)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">공통적인 I/O 작업의 목록에 대 한 참조 <bpt id="p1">[</bpt>공통적인 I/O 작업<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectories(System.String,System.String)">
          <source>The following example counts the number of directories in a path that begin with the specified letter.</source>
          <target state="translated">다음 예제에서는 지정 된 문자로 시작 하는 경로에서 디렉터리의 수를 계산 합니다.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetDirectories(System.String,System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetDirectories(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 빈 문자열이거나, 공백만을 포함하거나, 하나 이상의 잘못된 문자를 포함합니다.</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetDirectories(System.String,System.String)">
          <source>You can query for invalid characters by using <ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph>를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetDirectories(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetDirectories(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> doesn't contain a valid pattern.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph>이 유효한 패턴을 포함하지 않는 경우</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetDirectories(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> or <ph id="ph2">&lt;paramref name="searchPattern" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="searchPattern" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetDirectories(System.String,System.String)">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetDirectories(System.String,System.String)">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</source>
          <target state="translated">예를 들어 Windows 기반 플랫폼에서 경로는 248자 미만이어야 하고 파일 이름은 260자 미만이어야 합니다.</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetDirectories(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a file name.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>는 파일 이름입니다.</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetDirectories(System.String,System.String)">
          <source>The specified path is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectories(System.String,System.String)">
          <source>for access to path information for the current directory.</source>
          <target state="translated">현재 디렉터리에 대 한 경로 정보에 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectories(System.String,System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph>.</source>
          <target state="translated">연관된 열거형: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>The relative or absolute path to the directory to search.</source>
          <target state="translated">검색할 디렉터리에 대한 상대 또는 절대 경로입니다.</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>This string is not case-sensitive.</source>
          <target state="translated">이 문자열은 대/소문자를 구분하지 않습니다.</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>The search string to match against the names of subdirectories in <bpt id="p1">&lt;c&gt;</bpt>path<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>경로<ept id="p1">&lt;/c&gt;</ept>에 있는 하위 디렉터리 이름과 일치하는지 비교할 검색 문자열입니다.</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>This parameter can contain a combination of valid literal and wildcard characters, but it doesn't support regular expressions.</source>
          <target state="translated">이 매개 변수는 유효한 리터럴 및 와일드카드 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>One of the enumeration values that specifies whether the search operation should include all subdirectories or only the current directory.</source>
          <target state="translated">검색 작업에 현재 디렉터리만 포함할지 아니면 모든 하위 디렉터리를 포함할지를 지정하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>Returns the names of the subdirectories (including their paths) that match the specified search pattern in the specified directory, and optionally searches subdirectories.</source>
          <target state="translated">지정된 디렉터리에서 지정된 검색 패턴과 일치하는 하위 디렉터리(해당 경로 포함)의 이름을 가져오고 선택적으로 하위 디렉터리를 반환합니다.</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>An array of the full names (including paths) of the subdirectories that match the specified criteria, or an empty array if no directories are found.</source>
          <target state="translated">지정된 조건과 일치하는 하위 디렉터리의 전체 이름(경로 포함)의 배열이거나 디렉터리가 없으면 빈 배열입니다.</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>The <ph id="ph1">`path`</ph> parameter can specify relative or absolute path information, and is not case-sensitive.</source>
          <target state="translated"><ph id="ph1">`path`</ph> 매개 변수 상대 또는 절대 경로 정보를 지정할 수 이며 대/소문자 구분 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>Relative path information is interpreted as relative to the current working directory.</source>
          <target state="translated">상대 경로 정보는 현재 작업 디렉터리에 상대적으로 해석 됩니다.</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>To obtain the current working directory, see <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>.</source>
          <target state="translated">현재 작업 디렉터리를 가져오려면 참조 <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectories(System.String,System.String,System.IO.SearchOption)">
          <source><ph id="ph1">`searchPattern`</ph> can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 리터럴 및 와일드 카드 문자 조합일 수 있지만 정규식을 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>The following wildcard specifiers are permitted in <ph id="ph1">`searchPattern`</ph>.</source>
          <target state="translated">에 다음 와일드 카드 지정자를 사용할 수 <ph id="ph1">`searchPattern`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>Wildcard specifier</source>
          <target state="translated">와일드 카드 지정자</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>Matches</source>
          <target state="translated">일치 항목</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectories(System.String,System.String,System.IO.SearchOption)">
          <source><ph id="ph1">\*</ph> (asterisk)</source>
          <target state="translated"><ph id="ph1">\*</ph> (별표)</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>Zero or more characters in that position.</source>
          <target state="translated">해당 위치에 0 개 이상의 문자가 있습니다.</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>?</source>
          <target state="translated">?</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>(question mark)</source>
          <target state="translated">(물음표)</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>Zero or one character in that position.</source>
          <target state="translated">해당 위치에 0 개 또는 1 문자입니다.</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>Characters other than the wildcard are literal characters.</source>
          <target state="translated">와일드 카드 문자는 리터럴 문자입니다.</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>For example, the <ph id="ph1">`searchPattern`</ph> string "<ph id="ph2">\*</ph>t" searches for all names in <ph id="ph3">`path`</ph> ending with the letter "t".</source>
          <target state="translated">예를 들어는 <ph id="ph1">`searchPattern`</ph> 문자열 "<ph id="ph2">\*</ph>t"에 대 한 모든 이름 검색 <ph id="ph3">`path`</ph> 문자 "t"로 끝나는 합니다.</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>The <ph id="ph1">`searchPattern`</ph> string "s<ph id="ph2">\*</ph>" searches for all names in <ph id="ph3">`path`</ph> beginning with the letter "s".</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 문자열 "s<ph id="ph2">\*</ph>"에서 모든 이름 검색 <ph id="ph3">`path`</ph> "s"로 시작 합니다.</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectories(System.String,System.String,System.IO.SearchOption)">
          <source><ph id="ph1">`searchPattern`</ph> cannot end in two periods ("..") or contain two periods ("..") followed by <ph id="ph2">&lt;xref:System.IO.Path.DirectorySeparatorChar&gt;</ph> or <ph id="ph3">&lt;xref:System.IO.Path.AltDirectorySeparatorChar&gt;</ph>, nor can it contain any invalid characters.</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 두 개의 마침표 ("..") 또는 마침표 두 개가 포함 ("..") 뒤 <ph id="ph2">&lt;xref:System.IO.Path.DirectorySeparatorChar&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.IO.Path.AltDirectorySeparatorChar&gt;</ph>, 잘못 된 문자를 사용할 수 없으며 합니다.</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>You can query for invalid characters by using the <ph id="ph1">&lt;xref:System.IO.Path.GetInvalidPathChars%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Path.GetInvalidPathChars%2A&gt;</ph> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateDirectories%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.Directory.GetDirectories%2A&gt;</ph> methods differ as follows: When you use <ph id="ph3">&lt;xref:System.IO.Directory.EnumerateDirectories%2A&gt;</ph>, you can start enumerating the collection of names before the whole collection is returned; when you use <ph id="ph4">&lt;xref:System.IO.Directory.GetDirectories%2A&gt;</ph>, you must wait for the whole array of names to be returned before you can access the array.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Directory.EnumerateDirectories%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.IO.Directory.GetDirectories%2A&gt;</ph> 방법은 다음과 같이 달라: 사용 하는 경우 <ph id="ph3">&lt;xref:System.IO.Directory.EnumerateDirectories%2A&gt;</ph>, 전체 컬렉션을 반환 하기 전에 이름 컬렉션을 열거를 시작할 수 있습니다; 사용 하는 경우 <ph id="ph4">&lt;xref:System.IO.Directory.GetDirectories%2A&gt;</ph>, 되도록 이름의 전체 배열에 대해 기다려야 배열에 액세스 하려면 먼저 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>Therefore, when you are working with many files and directories, <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateDirectories%2A&gt;</ph> can be more efficient.</source>
          <target state="translated">따라서 많은 파일 및 디렉터리를 사용 하 여 작업할 때 <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateDirectories%2A&gt;</ph> 더 효과적일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">공통적인 I/O 작업의 목록에 대 한 참조 <bpt id="p1">[</bpt>공통적인 I/O 작업<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>The following example counts the number of directories that begin with the specified letter in a path.</source>
          <target state="translated">다음 예제에서는 경로에 지정 된 문자로 시작 하는 디렉터리의 수를 계산 합니다.</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>Only the top-level directory is searched.</source>
          <target state="translated">최상위 디렉터리만 검색 됩니다.</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetDirectories(System.String,System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 빈 문자열이거나, 공백만을 포함하거나, 하나 이상의 잘못된 문자를 포함합니다.</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>You can query for invalid characters by using the <ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetDirectories(System.String,System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> does not contain a valid pattern.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph>에 유효한 패턴이 포함되어 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetDirectories(System.String,System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> or <ph id="ph2">&lt;paramref name="searchPattern" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="searchPattern" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetDirectories(System.String,System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="searchOption" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.SearchOption" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchOption" /&gt;</ph>은 유효한 <ph id="ph2">&lt;see cref="T:System.IO.SearchOption" /&gt;</ph> 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</source>
          <target state="translated">예를 들어 Windows 기반 플랫폼에서 경로는 248자 미만이어야 하고 파일 이름은 260자 미만이어야 합니다.</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetDirectories(System.String,System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a file name.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>는 파일 이름입니다.</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>The specified path is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>for access to path information for the current directory.</source>
          <target state="translated">현재 디렉터리에 대 한 경로 정보에 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectories(System.String,System.String,System.IO.SearchOption)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph>.</source>
          <target state="translated">연관된 열거형: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetDirectoryRoot(System.String)">
          <source>The path of a file or directory.</source>
          <target state="translated">파일 또는 디렉터리의 경로입니다.</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetDirectoryRoot(System.String)">
          <source>Returns the volume information, root information, or both for the specified path.</source>
          <target state="translated">지정된 경로에 대한 볼륨 정보, 루트 정보 또는 두 정보 모두를 반환합니다.</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetDirectoryRoot(System.String)">
          <source>A string that contains the volume information, root information, or both for the specified path.</source>
          <target state="translated">지정된 경로에 대한 볼륨 정보, 루트 정보 또는 두 정보 모두를 포함하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectoryRoot(System.String)">
          <source>This method obtains the fully qualified path name of <ph id="ph1">`path`</ph>, as returned by <ph id="ph2">&lt;xref:System.IO.Path.GetFullPath%2A&gt;</ph>, and returns root directory information.</source>
          <target state="translated">이 메서드의 정규화 된 경로 이름을 가져옵니다 <ph id="ph1">`path`</ph>반환한, <ph id="ph2">&lt;xref:System.IO.Path.GetFullPath%2A&gt;</ph>, 루트 디렉터리 정보를 반환 하 고 있습니다.</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectoryRoot(System.String)">
          <source>The specified path is not required to exist.</source>
          <target state="translated">지정 된 경로가 존재 하지 않아도 됩니다.</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectoryRoot(System.String)">
          <source>The <ph id="ph1">`path`</ph> parameter is permitted to specify relative or absolute path information.</source>
          <target state="translated"><ph id="ph1">`path`</ph> 상대 또는 절대 경로 정보를 지정 하기 위해 매개 변수는 허용 합니다.</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectoryRoot(System.String)">
          <source>Relative path information is interpreted as relative to the current working directory.</source>
          <target state="translated">상대 경로 정보는 현재 작업 디렉터리에 상대적으로 해석 됩니다.</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectoryRoot(System.String)">
          <source>To obtain the current working directory, see <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>.</source>
          <target state="translated">현재 작업 디렉터리를 가져오려면 참조 <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectoryRoot(System.String)">
          <source>The <ph id="ph1">`path`</ph> parameter is not case-sensitive.</source>
          <target state="translated"><ph id="ph1">`path`</ph> 매개 변수는 대/소문자 구분 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectoryRoot(System.String)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">공통적인 I/O 작업의 목록에 대 한 참조 <bpt id="p1">[</bpt>공통적인 I/O 작업<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectoryRoot(System.String)">
          <source>The following example illustrates how to set the current directory and display the directory root.</source>
          <target state="translated">다음 예제에는 현재 디렉터리를 설정 하 고 루트 디렉터리를 표시 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetDirectoryRoot(System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetDirectoryRoot(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 빈 문자열이거나, 공백만을 포함하거나, 하나 이상의 잘못된 문자를 포함합니다.</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetDirectoryRoot(System.String)">
          <source>You can query for invalid characters with <ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph>로 잘못된 문자를 쿼리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetDirectoryRoot(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetDirectoryRoot(System.String)">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetDirectoryRoot(System.String)">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</source>
          <target state="translated">예를 들어 Windows 기반 플랫폼에서 경로는 248자 미만이어야 하고 파일 이름은 260자 미만이어야 합니다.</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectoryRoot(System.String)">
          <source>for access to path information for the current directory.</source>
          <target state="translated">현재 디렉터리에 대 한 경로 정보에 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetDirectoryRoot(System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" uid="T:System.IO.Directory">
          <source>Returns the names of files that meet specified criteria.</source>
          <target state="translated">지정된 조건을 충족하는 파일 이름을 반환합니다.</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFiles(System.String)">
          <source>The relative or absolute path to the directory to search.</source>
          <target state="translated">검색할 디렉터리에 대한 상대 또는 절대 경로입니다.</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFiles(System.String)">
          <source>This string is not case-sensitive.</source>
          <target state="translated">이 문자열은 대/소문자를 구분하지 않습니다.</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFiles(System.String)">
          <source>Returns the names of files (including their paths) in the specified directory.</source>
          <target state="translated">지정된 디렉터리에 있는 파일의 이름(경로 포함)을 반환합니다.</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFiles(System.String)">
          <source>An array of the full names (including paths) for the files in the specified directory, or an empty array if no files are found.</source>
          <target state="translated">지정된 디렉터리에서 파일의 전체 이름(경로 포함)의 배열이거나 파일이 없으면 빈 배열입니다.</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateFiles%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.Directory.GetFiles%2A&gt;</ph> methods differ as follows: When you use <ph id="ph3">&lt;xref:System.IO.Directory.EnumerateFiles%2A&gt;</ph>, you can start enumerating the collection of names before the whole collection is returned; when you use <ph id="ph4">&lt;xref:System.IO.Directory.GetFiles%2A&gt;</ph>, you must wait for the whole array of names to be returned before you can access the array.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Directory.EnumerateFiles%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.IO.Directory.GetFiles%2A&gt;</ph> 방법은 다음과 같이 달라: 사용 하는 경우 <ph id="ph3">&lt;xref:System.IO.Directory.EnumerateFiles%2A&gt;</ph>, 전체 컬렉션을 반환 하기 전에 이름 컬렉션을 열거를 시작할 수 있습니다; 사용 하는 경우 <ph id="ph4">&lt;xref:System.IO.Directory.GetFiles%2A&gt;</ph>, 되도록 이름의 전체 배열에 대해 기다려야 배열에 액세스 하려면 먼저 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String)">
          <source>Therefore, when you are working with many files and directories, <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateFiles%2A&gt;</ph> can be more efficient.</source>
          <target state="translated">따라서 많은 파일 및 디렉터리를 사용 하 여 작업할 때 <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateFiles%2A&gt;</ph> 더 효과적일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String)">
          <source>The returned file names are appended to the supplied <ph id="ph1">`path`</ph> parameter.</source>
          <target state="translated">반환 된 파일 이름에 제공 된 <ph id="ph1">`path`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String)">
          <source>This method is identical to <ph id="ph1">&lt;xref:System.IO.Directory.GetFiles%28System.String%2CSystem.String%29&gt;</ph> with the asterisk (<ph id="ph2">\*</ph>) specified as the search pattern.</source>
          <target state="translated">이 메서드는 동일 <ph id="ph1">&lt;xref:System.IO.Directory.GetFiles%28System.String%2CSystem.String%29&gt;</ph> 별표 (<ph id="ph2">\*</ph>)는 검색 패턴으로 지정 합니다.</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String)">
          <source>The <ph id="ph1">`path`</ph> parameter can specify relative or absolute path information.</source>
          <target state="translated"><ph id="ph1">`path`</ph> 매개 변수는 상대 또는 절대 경로 정보를 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String)">
          <source>Relative path information is interpreted as relative to the current working directory.</source>
          <target state="translated">상대 경로 정보는 현재 작업 디렉터리에 상대적으로 해석 됩니다.</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String)">
          <source>To obtain the current working directory, see <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>.</source>
          <target state="translated">현재 작업 디렉터리를 가져오려면 참조 <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String)">
          <source>The order of the returned file names is not guaranteed; use the <ph id="ph1">&lt;xref:System.Array.Sort%2A&gt;</ph> method if a specific sort order is required.</source>
          <target state="translated">반환 되는 파일 이름의 순서를 보장할 수 없습니다. 사용 하 여는 <ph id="ph1">&lt;xref:System.Array.Sort%2A&gt;</ph> 메서드 특정 정렬 순서를 적용 해야 하는 경우.</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String)">
          <source>The <ph id="ph1">`path`</ph> parameter is not case-sensitive.</source>
          <target state="translated"><ph id="ph1">`path`</ph> 매개 변수는 대/소문자 구분 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">공통적인 I/O 작업의 목록에 대 한 참조 <bpt id="p1">[</bpt>공통적인 I/O 작업<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.IO.Directory.GetFiles%2A&gt;</ph> method to return file names from a user-specified location.</source>
          <target state="translated">다음 예제에서는 사용 하는 <ph id="ph1">&lt;xref:System.IO.Directory.GetFiles%2A&gt;</ph> 메서드를 사용자가 지정한 위치에서 파일 이름을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String)">
          <source>The example is configured to catch all errors common to this method.</source>
          <target state="translated">이 예제에서는이 메서드를 일반적인 모든 오류 catch 하도록 구성 됩니다.</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFiles(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a file name.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>는 파일 이름입니다.</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFiles(System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFiles(System.String)">
          <source>A network error has occurred.</source>
          <target state="translated">네트워크 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFiles(System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFiles(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 빈 문자열이거나, 공백만을 포함하거나, 하나 이상의 잘못된 문자를 포함합니다.</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFiles(System.String)">
          <source>You can query for invalid characters by using the <ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFiles(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFiles(System.String)">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFiles(System.String)">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</source>
          <target state="translated">예를 들어 Windows 기반 플랫폼에서 경로는 248자 미만이어야 하고 파일 이름은 260자 미만이어야 합니다.</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFiles(System.String)">
          <source>The specified path is not found or is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated">지정된 경로가 없거나 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String)">
          <source>for access to path information for the current directory.</source>
          <target state="translated">현재 디렉터리에 대 한 경로 정보에 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFiles(System.String,System.String)">
          <source>The relative or absolute path to the directory to search.</source>
          <target state="translated">검색할 디렉터리에 대한 상대 또는 절대 경로입니다.</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFiles(System.String,System.String)">
          <source>This string is not case-sensitive.</source>
          <target state="translated">이 문자열은 대/소문자를 구분하지 않습니다.</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFiles(System.String,System.String)">
          <source>The search string to match against the names of files in <bpt id="p1">&lt;c&gt;</bpt>path<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>경로<ept id="p1">&lt;/c&gt;</ept>에 있는 파일 이름과 일치하는지 비교할 검색 문자열입니다.</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFiles(System.String,System.String)">
          <source>This parameter can contain a combination of valid literal path and wildcard (* and ?) characters, but it doesn't support regular expressions.</source>
          <target state="translated">이 매개 변수는 유효한 리터럴 경로와 와일드카드(* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFiles(System.String,System.String)">
          <source>Returns the names of files (including their paths) that match the specified search pattern in the specified directory.</source>
          <target state="translated">지정된 디렉터리에서 지정된 검색 패턴과 일치하는 파일 이름(파일 경로 포함)을 반환합니다.</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFiles(System.String,System.String)">
          <source>An array of the full names (including paths) for the files in the specified directory that match the specified search pattern, or an empty array if no files are found.</source>
          <target state="translated">지정된 디렉터리에서 지정된 검색 패턴과 일치하는 파일의 전체 이름(경로 포함)의 배열이거나 파일이 없으면 빈 배열입니다.</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String)">
          <source>The returned file names are appended to the supplied <ph id="ph1">`path`</ph> parameter and the order of the returned file names is not guaranteed; use the <ph id="ph2">&lt;xref:System.Array.Sort%2A&gt;</ph> method if a specific sort order is required.</source>
          <target state="translated">반환 된 파일 이름를 제공 된 <ph id="ph1">`path`</ph> 매개 변수 및 반환 되는 파일 이름의 순서가 보장 되지 않습니다; 사용 하 여는 <ph id="ph2">&lt;xref:System.Array.Sort%2A&gt;</ph> 메서드 특정 정렬 순서를 적용 해야 하는 경우.</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String)">
          <source><ph id="ph1">`searchPattern`</ph> can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 리터럴 및 와일드 카드 문자 조합일 수 있지만 정규식을 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String)">
          <source>The following wildcard specifiers are permitted in <ph id="ph1">`searchPattern`</ph>.</source>
          <target state="translated">에 다음 와일드 카드 지정자를 사용할 수 <ph id="ph1">`searchPattern`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String)">
          <source>Wildcard specifier</source>
          <target state="translated">와일드 카드 지정자</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String)">
          <source>Matches</source>
          <target state="translated">일치 항목</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String)">
          <source><ph id="ph1">\*</ph> (asterisk)</source>
          <target state="translated"><ph id="ph1">\*</ph> (별표)</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String)">
          <source>Zero or more characters in that position.</source>
          <target state="translated">해당 위치에 0 개 이상의 문자가 있습니다.</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String)">
          <source>?</source>
          <target state="translated">?</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String)">
          <source>(question mark)</source>
          <target state="translated">(물음표)</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String)">
          <source>Zero or one character in that position.</source>
          <target state="translated">해당 위치에 0 개 또는 1 문자입니다.</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String)">
          <source>Characters other than the wildcard are literal characters.</source>
          <target state="translated">와일드 카드 문자는 리터럴 문자입니다.</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String)">
          <source>For example, the <ph id="ph1">`searchPattern`</ph> string "<ph id="ph2">\*</ph>t" searches for all names in <ph id="ph3">`path`</ph> ending with the letter "t".</source>
          <target state="translated">예를 들어는 <ph id="ph1">`searchPattern`</ph> 문자열 "<ph id="ph2">\*</ph>t"에 대 한 모든 이름 검색 <ph id="ph3">`path`</ph> 문자 "t"로 끝나는 합니다.</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String)">
          <source>The <ph id="ph1">`searchPattern`</ph> string "s<ph id="ph2">\*</ph>" searches for all names in <ph id="ph3">`path`</ph> beginning with the letter "s".</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 문자열 "s<ph id="ph2">\*</ph>"에서 모든 이름 검색 <ph id="ph3">`path`</ph> "s"로 시작 합니다.</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String)">
          <source><ph id="ph1">`searchPattern`</ph> cannot end in two periods ("..") or contain two periods ("..") followed by <ph id="ph2">&lt;xref:System.IO.Path.DirectorySeparatorChar&gt;</ph> or <ph id="ph3">&lt;xref:System.IO.Path.AltDirectorySeparatorChar&gt;</ph>, nor can it contain any invalid characters.</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 두 개의 마침표 ("..") 또는 마침표 두 개가 포함 ("..") 뒤 <ph id="ph2">&lt;xref:System.IO.Path.DirectorySeparatorChar&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.IO.Path.AltDirectorySeparatorChar&gt;</ph>, 잘못 된 문자를 사용할 수 없으며 합니다.</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String)">
          <source>You can query for invalid characters by using the <ph id="ph1">&lt;xref:System.IO.Path.GetInvalidPathChars%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Path.GetInvalidPathChars%2A&gt;</ph> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String)">
          <source>When you use the asterisk wildcard character in a <ph id="ph1">`searchPattern`</ph> such as "<ph id="ph2">\*</ph>.txt", the number of characters in the specified extension affects the search as follows:</source>
          <target state="translated">에 별표 와일드 카드 문자를 사용 하는 경우는 <ph id="ph1">`searchPattern`</ph> 와 같은 "<ph id="ph2">\*</ph>.txt"를 지정된 된 확장에 있는 문자의 수에 영향을 줍니다 검색 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String)">
          <source>If the specified extension is exactly three characters long, the method returns files with extensions that begin with the specified extension.</source>
          <target state="translated">정확히 3 자 지정한 확장명을 사용 하는 경우 메서드는 지정한 확장명으로 시작 하는 확장명을 가진 파일을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String)">
          <source>For example, "<ph id="ph1">\*</ph>.xls" returns both "book.xls" and "book.xlsx".</source>
          <target state="translated">예를 들어 "<ph id="ph1">\*</ph>.xls" 모두 "book.xls" 및 "book.xlsx"를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String)">
          <source>In all other cases, the method returns files that exactly match the specified extension.</source>
          <target state="translated">다른 모든 경우 메서드는 지정한 확장명을 정확 하 게 일치 하는 파일을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String)">
          <source>For example, "<ph id="ph1">\*</ph>.ai" returns "file.ai" but not "file.aif".</source>
          <target state="translated">예를 들어 "<ph id="ph1">\*</ph>.ai" "file.ai" 없습니다 "file.aif"를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String)">
          <source>When you use the question mark wildcard character, this method returns only files that match the specified file extension.</source>
          <target state="translated">물음표 와일드 카드 문자를 사용 하는 경우이 메서드는 지정 된 파일 확장명과 일치 하는 파일에만 반환 합니다.</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String)">
          <source>For example, given two files, "file1.txt" and "file1.txtother", in a directory, a search pattern of "file?.txt" returns just the first file, whereas a search pattern of "file<ph id="ph1">\*</ph>.txt" returns both files.</source>
          <target state="translated">예를 들어 두 개의 파일, "file1.txt" 및 "file1.txtother" 디렉터리를 검색 패턴은에 지정 된 "파일?입니다. txt"첫 번째 파일만 반환 하는 반면 검색 패턴은" 파일<ph id="ph1">\*</ph>.txt "파일을 모두 반환 합니다.</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String)">
          <source>Because this method checks against file names with both the 8.3 file name format and the long file name format, a search pattern similar to "<ph id="ph1">\*</ph>1<ph id="ph2">\*</ph>.txt" may return unexpected file names.</source>
          <target state="translated">검색 패턴 비슷합니다 8.3 파일 이름 형식과 긴 파일 이름 형식을 모두 포함 된 파일 이름에 대해이 메서드를 확인 하기 때문에 "<ph id="ph1">\*</ph>1<ph id="ph2">\*</ph>.txt" 예기치 않은 파일 이름을 반환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String)">
          <source>For example, using a search pattern of "<ph id="ph1">\*</ph>1<ph id="ph2">\*</ph>.txt" returns "longfilename.txt" because the equivalent 8.3 file name format is "LONGFI~1.TXT".</source>
          <target state="translated">예를 들어 검색 패턴을 사용 하 여 "<ph id="ph1">\*</ph>1<ph id="ph2">\*</ph>.txt" 해당 8.3 파일 이름 형식은 "LONGFI~1.TXT" 있기 때문에 "longfilename.txt"를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateFiles%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.Directory.GetFiles%2A&gt;</ph> methods differ as follows: When you use <ph id="ph3">&lt;xref:System.IO.Directory.EnumerateFiles%2A&gt;</ph>, you can start enumerating the collection of names before the whole collection is returned; when you use <ph id="ph4">&lt;xref:System.IO.Directory.GetFiles%2A&gt;</ph>, you must wait for the whole array of names to be returned before you can access the array.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Directory.EnumerateFiles%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.IO.Directory.GetFiles%2A&gt;</ph> 방법은 다음과 같이 달라: 사용 하는 경우 <ph id="ph3">&lt;xref:System.IO.Directory.EnumerateFiles%2A&gt;</ph>, 전체 컬렉션을 반환 하기 전에 이름 컬렉션을 열거를 시작할 수 있습니다; 사용 하는 경우 <ph id="ph4">&lt;xref:System.IO.Directory.GetFiles%2A&gt;</ph>, 되도록 이름의 전체 배열에 대해 기다려야 배열에 액세스 하려면 먼저 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String)">
          <source>Therefore, when you are working with many files and directories, <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateFiles%2A&gt;</ph> can be more efficient.</source>
          <target state="translated">따라서 많은 파일 및 디렉터리를 사용 하 여 작업할 때 <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateFiles%2A&gt;</ph> 더 효과적일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String)">
          <source>The <ph id="ph1">`path`</ph> parameter can specify relative or absolute path information.</source>
          <target state="translated"><ph id="ph1">`path`</ph> 매개 변수는 상대 또는 절대 경로 정보를 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String)">
          <source>Relative path information is interpreted as relative to the current working directory.</source>
          <target state="translated">상대 경로 정보는 현재 작업 디렉터리에 상대적으로 해석 됩니다.</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String)">
          <source>To obtain the current working directory, see <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>.</source>
          <target state="translated">현재 작업 디렉터리를 가져오려면 참조 <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String)">
          <source>The <ph id="ph1">`path`</ph> parameter is not case-sensitive.</source>
          <target state="translated"><ph id="ph1">`path`</ph> 매개 변수는 대/소문자 구분 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">공통적인 I/O 작업의 목록에 대 한 참조 <bpt id="p1">[</bpt>공통적인 I/O 작업<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String)">
          <source>The following example counts the number of files that begin with the specified letter.</source>
          <target state="translated">다음 예제에서는 지정 된 문자로 시작 하는 파일의 수를 계산 합니다.</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFiles(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a file name.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>는 파일 이름입니다.</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFiles(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFiles(System.String,System.String)">
          <source>A network error has occurred.</source>
          <target state="translated">네트워크 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFiles(System.String,System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFiles(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 빈 문자열이거나, 공백만을 포함하거나, 하나 이상의 잘못된 문자를 포함합니다.</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFiles(System.String,System.String)">
          <source>You can query for invalid characters by using <ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph>를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFiles(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFiles(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> doesn't contain a valid pattern.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph>이 유효한 패턴을 포함하지 않는 경우</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFiles(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> or <ph id="ph2">&lt;paramref name="searchPattern" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="searchPattern" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFiles(System.String,System.String)">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFiles(System.String,System.String)">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</source>
          <target state="translated">예를 들어 Windows 기반 플랫폼에서 경로는 248자 미만이어야 하고 파일 이름은 260자 미만이어야 합니다.</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFiles(System.String,System.String)">
          <source>The specified path is not found or is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated">지정된 경로가 없거나 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String)">
          <source>for access to path information for the current directory.</source>
          <target state="translated">현재 디렉터리에 대 한 경로 정보에 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.SearchOption)">
          <source>The relative or absolute path to the directory to search.</source>
          <target state="translated">검색할 디렉터리에 대한 상대 또는 절대 경로입니다.</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.SearchOption)">
          <source>This string is not case-sensitive.</source>
          <target state="translated">이 문자열은 대/소문자를 구분하지 않습니다.</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.SearchOption)">
          <source>The search string to match against the names of files in <bpt id="p1">&lt;c&gt;</bpt>path<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>경로<ept id="p1">&lt;/c&gt;</ept>에 있는 파일 이름과 일치하는지 비교할 검색 문자열입니다.</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.SearchOption)">
          <source>This parameter can contain a combination of valid literal path and wildcard (* and ?) characters, but it doesn't support regular expressions.</source>
          <target state="translated">이 매개 변수는 유효한 리터럴 경로와 와일드카드(* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.SearchOption)">
          <source>One of the enumeration values that specifies whether the search operation should include all subdirectories or only the current directory.</source>
          <target state="translated">검색 작업에 현재 디렉터리만 포함할지 아니면 모든 하위 디렉터리를 포함할지를 지정하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.SearchOption)">
          <source>Returns the names of files (including their paths) that match the specified search pattern in the specified directory, using a value to determine whether to search subdirectories.</source>
          <target state="translated">하위 디렉터리를 검색할지를 나타내는 값을 사용하여 지정된 디렉터리에서 지정된 검색 패턴과 일치하는 파일 이름(파일 경로 포함)을 반환합니다.</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.SearchOption)">
          <source>An array of the full names (including paths) for the files in the specified directory that match the specified search pattern and option, or an empty array if no files are found.</source>
          <target state="translated">지정된 디렉터리에서 지정된 검색 패턴 및 옵션과 일치하는 파일의 전체 이름(경로 포함)의 배열이거나 파일이 없으면 빈 배열입니다.</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.SearchOption)">
          <source>The returned file names are appended to the supplied  parameter <ph id="ph1">`path`</ph> and the order of the returned file names is not guaranteed; use the <ph id="ph2">&lt;xref:System.Array.Sort%2A&gt;</ph> method if a specific sort order is required.</source>
          <target state="translated">제공 된 매개 변수와 반환 되는 파일 이름이 추가 됩니다 <ph id="ph1">`path`</ph> 반환 되는 파일 이름의 순서가 보장 되지 않습니다; 사용 하 고는 <ph id="ph2">&lt;xref:System.Array.Sort%2A&gt;</ph> 메서드 특정 정렬 순서를 적용 해야 하는 경우.</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.SearchOption)">
          <source><ph id="ph1">`searchPattern`</ph> can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 리터럴 및 와일드 카드 문자 조합일 수 있지만 정규식을 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.SearchOption)">
          <source>The following wildcard specifiers are permitted in <ph id="ph1">`searchPattern`</ph>.</source>
          <target state="translated">에 다음 와일드 카드 지정자를 사용할 수 <ph id="ph1">`searchPattern`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.SearchOption)">
          <source>Wildcard specifier</source>
          <target state="translated">와일드 카드 지정자</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.SearchOption)">
          <source>Matches</source>
          <target state="translated">일치 항목</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.SearchOption)">
          <source><ph id="ph1">\*</ph> (asterisk)</source>
          <target state="translated"><ph id="ph1">\*</ph> (별표)</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.SearchOption)">
          <source>Zero or more characters in that position.</source>
          <target state="translated">해당 위치에 0 개 이상의 문자가 있습니다.</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.SearchOption)">
          <source>?</source>
          <target state="translated">?</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.SearchOption)">
          <source>(question mark)</source>
          <target state="translated">(물음표)</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.SearchOption)">
          <source>Zero or one character in that position.</source>
          <target state="translated">해당 위치에 0 개 또는 1 문자입니다.</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.SearchOption)">
          <source>Characters other than the wildcard are literal characters.</source>
          <target state="translated">와일드 카드 문자는 리터럴 문자입니다.</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.SearchOption)">
          <source>For example, the <ph id="ph1">`searchPattern`</ph> string "<ph id="ph2">\*</ph>t" searches for all names in <ph id="ph3">`path`</ph> ending with the letter "t".</source>
          <target state="translated">예를 들어는 <ph id="ph1">`searchPattern`</ph> 문자열 "<ph id="ph2">\*</ph>t"에 대 한 모든 이름 검색 <ph id="ph3">`path`</ph> 문자 "t"로 끝나는 합니다.</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.SearchOption)">
          <source>The <ph id="ph1">`searchPattern`</ph> string "s<ph id="ph2">\*</ph>" searches for all names in <ph id="ph3">`path`</ph> beginning with the letter "s".</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 문자열 "s<ph id="ph2">\*</ph>"에서 모든 이름 검색 <ph id="ph3">`path`</ph> "s"로 시작 합니다.</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.SearchOption)">
          <source><ph id="ph1">`searchPattern`</ph> cannot end in two periods ("..") or contain two periods ("..") followed by <ph id="ph2">&lt;xref:System.IO.Path.DirectorySeparatorChar&gt;</ph> or <ph id="ph3">&lt;xref:System.IO.Path.AltDirectorySeparatorChar&gt;</ph>, nor can it contain any invalid characters.</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 두 개의 마침표 ("..") 또는 마침표 두 개가 포함 ("..") 뒤 <ph id="ph2">&lt;xref:System.IO.Path.DirectorySeparatorChar&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.IO.Path.AltDirectorySeparatorChar&gt;</ph>, 잘못 된 문자를 사용할 수 없으며 합니다.</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.SearchOption)">
          <source>You can query for invalid characters by using the <ph id="ph1">&lt;xref:System.IO.Path.GetInvalidPathChars%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Path.GetInvalidPathChars%2A&gt;</ph> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.SearchOption)">
          <source>When you use the asterisk wildcard character in a <ph id="ph1">`searchPattern`</ph> such as "<ph id="ph2">\*</ph>.txt", the number of characters in the specified extension affects the search as follows:</source>
          <target state="translated">에 별표 와일드 카드 문자를 사용 하는 경우는 <ph id="ph1">`searchPattern`</ph> 와 같은 "<ph id="ph2">\*</ph>.txt"를 지정된 된 확장에 있는 문자의 수에 영향을 줍니다 검색 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.SearchOption)">
          <source>If the specified extension is exactly three characters long, the method returns files with extensions that begin with the specified extension.</source>
          <target state="translated">정확히 3 자 지정한 확장명을 사용 하는 경우 메서드는 지정한 확장명으로 시작 하는 확장명을 가진 파일을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.SearchOption)">
          <source>For example, "<ph id="ph1">\*</ph>.xls" returns both "book.xls" and "book.xlsx".</source>
          <target state="translated">예를 들어 "<ph id="ph1">\*</ph>.xls" 모두 "book.xls" 및 "book.xlsx"를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.SearchOption)">
          <source>In all other cases, the method returns files that exactly match the specified extension.</source>
          <target state="translated">다른 모든 경우 메서드는 지정한 확장명을 정확 하 게 일치 하는 파일을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.SearchOption)">
          <source>For example, "<ph id="ph1">\*</ph>.ai" returns "file.ai" but not "file.aif".</source>
          <target state="translated">예를 들어 "<ph id="ph1">\*</ph>.ai" "file.ai" 없습니다 "file.aif"를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.SearchOption)">
          <source>When you use the question mark wildcard character, this method returns only files that match the specified file extension.</source>
          <target state="translated">물음표 와일드 카드 문자를 사용 하는 경우이 메서드는 지정 된 파일 확장명과 일치 하는 파일에만 반환 합니다.</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.SearchOption)">
          <source>For example, given two files, "file1.txt" and "file1.txtother", in a directory, a search pattern of "file?.txt" returns just the first file, whereas a search pattern of "file*.txt" returns both files.</source>
          <target state="translated">예를 들어 두 개의 파일, "file1.txt" 및 "file1.txtother" 디렉터리를 검색 패턴은에 지정 된 "파일?입니다. "txt".txt "는 검색 패턴은 두 파일을 반환 하는 반면 첫 번째 파일만 반환 합니다.</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.SearchOption)">
          <source>Because this method checks against file names with both the 8.3 file name format and the long file name format, a search pattern similar to "<ph id="ph1">\*</ph>1<ph id="ph2">\*</ph>.txt" may return unexpected file names.</source>
          <target state="translated">검색 패턴 비슷합니다 8.3 파일 이름 형식과 긴 파일 이름 형식을 모두 포함 된 파일 이름에 대해이 메서드를 확인 하기 때문에 "<ph id="ph1">\*</ph>1<ph id="ph2">\*</ph>.txt" 예기치 않은 파일 이름을 반환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.SearchOption)">
          <source>For example, using a search pattern of "<ph id="ph1">\*</ph>1<ph id="ph2">\*</ph>.txt" returns "longfilename.txt" because the equivalent 8.3 file name format is "LONGFI~1.TXT".</source>
          <target state="translated">예를 들어 검색 패턴을 사용 하 여 "<ph id="ph1">\*</ph>1<ph id="ph2">\*</ph>.txt" 해당 8.3 파일 이름 형식은 "LONGFI~1.TXT" 있기 때문에 "longfilename.txt"를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.SearchOption)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateFiles%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.Directory.GetFiles%2A&gt;</ph> methods differ as follows: When you use <ph id="ph3">&lt;xref:System.IO.Directory.EnumerateFiles%2A&gt;</ph>, you can start enumerating the collection of names before the whole collection is returned; when you use <ph id="ph4">&lt;xref:System.IO.Directory.GetFiles%2A&gt;</ph>, you must wait for the whole array of names to be returned before you can access the array.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Directory.EnumerateFiles%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.IO.Directory.GetFiles%2A&gt;</ph> 방법은 다음과 같이 달라: 사용 하는 경우 <ph id="ph3">&lt;xref:System.IO.Directory.EnumerateFiles%2A&gt;</ph>, 전체 컬렉션을 반환 하기 전에 이름 컬렉션을 열거를 시작할 수 있습니다; 사용 하는 경우 <ph id="ph4">&lt;xref:System.IO.Directory.GetFiles%2A&gt;</ph>, 되도록 이름의 전체 배열에 대해 기다려야 배열에 액세스 하려면 먼저 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.SearchOption)">
          <source>Therefore, when you are working with many files and directories, <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateFiles%2A&gt;</ph> can be more efficient.</source>
          <target state="translated">따라서 많은 파일 및 디렉터리를 사용 하 여 작업할 때 <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateFiles%2A&gt;</ph> 더 효과적일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.SearchOption)">
          <source>The file names include the full path.</source>
          <target state="translated">파일 이름에 전체 경로 포함 합니다.</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.SearchOption)">
          <source>The <ph id="ph1">`path`</ph> parameter can specify relative or absolute path information.</source>
          <target state="translated"><ph id="ph1">`path`</ph> 매개 변수는 상대 또는 절대 경로 정보를 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.SearchOption)">
          <source>Relative path information is interpreted as relative to the current working directory.</source>
          <target state="translated">상대 경로 정보는 현재 작업 디렉터리에 상대적으로 해석 됩니다.</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.SearchOption)">
          <source>To obtain the current working directory, see <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>.</source>
          <target state="translated">현재 작업 디렉터리를 가져오려면 참조 <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.SearchOption)">
          <source>The <ph id="ph1">`path`</ph> parameter is not case-sensitive.</source>
          <target state="translated"><ph id="ph1">`path`</ph> 매개 변수는 대/소문자 구분 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.SearchOption)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">공통적인 I/O 작업의 목록에 대 한 참조 <bpt id="p1">[</bpt>공통적인 I/O 작업<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 빈 문자열이거나, 공백만을 포함하거나, 하나 이상의 잘못된 문자를 포함합니다.</target>       </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.SearchOption)">
          <source>You can query for invalid characters with the <ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> 메서드로 잘못된 문자를 쿼리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.SearchOption)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> does not contain a valid pattern.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph>에 유효한 패턴이 포함되어 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> or <ph id="ph2">&lt;paramref name="searchpattern" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="searchpattern" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="searchOption" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.SearchOption" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchOption" /&gt;</ph>은 유효한 <ph id="ph2">&lt;see cref="T:System.IO.SearchOption" /&gt;</ph> 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.SearchOption)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.SearchOption)">
          <source>The specified path is not found or is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated">지정된 경로가 없거나 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</target>       </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.SearchOption)">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</target>       </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.SearchOption)">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</source>
          <target state="translated">예를 들어 Windows 기반 플랫폼에서 경로는 248자 미만이어야 하고 파일 이름은 260자 미만이어야 합니다.</target>       </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a file name.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>는 파일 이름입니다.</target>       </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.SearchOption)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.SearchOption)">
          <source>A network error has occurred.</source>
          <target state="translated">네트워크 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.SearchOption)">
          <source>for access to path information for the current directory.</source>
          <target state="translated">현재 디렉터리에 대 한 경로 정보에 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.SearchOption)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve" uid="T:System.IO.Directory">
          <source>Returns the names of all files and subdirectories that meet specified criteria.</source>
          <target state="translated">지정된 조건을 충족하는 모든 파일 및 하위 디렉터리 이름을 반환합니다.</target>       </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFileSystemEntries(System.String)">
          <source>The relative or absolute path to the directory to search.</source>
          <target state="translated">검색할 디렉터리에 대한 상대 또는 절대 경로입니다.</target>       </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFileSystemEntries(System.String)">
          <source>This string is not case-sensitive.</source>
          <target state="translated">이 문자열은 대/소문자를 구분하지 않습니다.</target>       </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFileSystemEntries(System.String)">
          <source>Returns the names of all files and subdirectories in a specified path.</source>
          <target state="translated">지정된 경로에 있는 모든 파일과 하위 디렉터리의 이름을 반환합니다.</target>       </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFileSystemEntries(System.String)">
          <source>An array of the names of files and subdirectories in the specified directory, or an empty array if no files or subdirectories are found.</source>
          <target state="translated">지정된 디렉터리에서 파일 및 하위 디렉터리 이름의 배열이거나 파일 또는 디렉터리가 없으면 빈 배열입니다.</target>       </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String)">
          <source>The order of the returned file and directory names is not guaranteed; use the <ph id="ph1">&lt;xref:System.Array.Sort%2A&gt;</ph> method if a specific sort order is required.</source>
          <target state="translated">반환 되는 파일 및 디렉터리 이름의 순서를 보장할 수 없습니다. 사용 하 여는 <ph id="ph1">&lt;xref:System.Array.Sort%2A&gt;</ph> 메서드 특정 정렬 순서를 적용 해야 하는 경우.</target>       </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateFileSystemEntries%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.Directory.GetFileSystemEntries%2A&gt;</ph> methods differ as follows: When you use <ph id="ph3">&lt;xref:System.IO.Directory.EnumerateFileSystemEntries%2A&gt;</ph>, you can start enumerating the collection of entries before the whole collection is returned; when you use <ph id="ph4">&lt;xref:System.IO.Directory.GetFileSystemEntries%2A&gt;</ph>, you must wait for the whole array of entries to be returned before you can access the array.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Directory.EnumerateFileSystemEntries%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.IO.Directory.GetFileSystemEntries%2A&gt;</ph> 방법은 다음과 같이 달라: 사용 하는 경우 <ph id="ph3">&lt;xref:System.IO.Directory.EnumerateFileSystemEntries%2A&gt;</ph>, 전체 컬렉션을 반환 하기 전에 항목의 컬렉션을 열거를 시작할 수 있습니다; 사용 하는 경우 <ph id="ph4">&lt;xref:System.IO.Directory.GetFileSystemEntries%2A&gt;</ph>, 항목의 전체 배열에 대해 기다려야 반환 되기 전에 배열에 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String)">
          <source>Therefore, when you are working with many files and directories, <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateFiles%2A&gt;</ph> can be more efficient.</source>
          <target state="translated">따라서 많은 파일 및 디렉터리를 사용 하 여 작업할 때 <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateFiles%2A&gt;</ph> 더 효과적일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String)">
          <source>This method is identical to <ph id="ph1">&lt;xref:System.IO.Directory.GetFileSystemEntries%2A&gt;</ph> with the asterisk (<ph id="ph2">\*</ph>) specified as the search pattern.</source>
          <target state="translated">이 메서드는 동일 <ph id="ph1">&lt;xref:System.IO.Directory.GetFileSystemEntries%2A&gt;</ph> 별표 (<ph id="ph2">\*</ph>)는 검색 패턴으로 지정 합니다.</target>       </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String)">
          <source>The <ph id="ph1">`path`</ph> parameter is permitted to specify relative or absolute path information.</source>
          <target state="translated"><ph id="ph1">`path`</ph> 상대 또는 절대 경로 정보를 지정 하기 위해 매개 변수는 허용 합니다.</target>       </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String)">
          <source>Relative path information is interpreted as relative to the current working directory.</source>
          <target state="translated">상대 경로 정보는 현재 작업 디렉터리에 상대적으로 해석 됩니다.</target>       </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String)">
          <source>To obtain the current working directory, see <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>.</source>
          <target state="translated">현재 작업 디렉터리를 가져오려면 참조 <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String)">
          <source>The <ph id="ph1">`path`</ph> parameter is not case-sensitive.</source>
          <target state="translated"><ph id="ph1">`path`</ph> 매개 변수는 대/소문자 구분 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">공통적인 I/O 작업의 목록에 대 한 참조 <bpt id="p1">[</bpt>공통적인 I/O 작업<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.IO.Directory.GetFileSystemEntries%2A&gt;</ph> method to fill an array of strings with the names of all files and subdirectories in a user-specified location and prints each string in the array to the console.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.IO.Directory.GetFileSystemEntries%2A&gt;</ph> 모든 파일 및 인쇄 하 고 사용자가 지정한 위치에 있는 하위 디렉터리의 이름으로 문자열의 배열을 채우는 메서드가 각 문자열을 콘솔 배열에 있습니다.</target>       </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String)">
          <source>The example is configured to catch all errors common to this method.</source>
          <target state="translated">이 예제에서는이 메서드를 일반적인 모든 오류 catch 하도록 구성 됩니다.</target>       </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFileSystemEntries(System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFileSystemEntries(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 빈 문자열이거나, 공백만을 포함하거나, 하나 이상의 잘못된 문자를 포함합니다.</target>       </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFileSystemEntries(System.String)">
          <source>You can query for invalid characters with <ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph>로 잘못된 문자를 쿼리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFileSystemEntries(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFileSystemEntries(System.String)">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</target>       </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFileSystemEntries(System.String)">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</source>
          <target state="translated">예를 들어 Windows 기반 플랫폼에서 경로는 248자 미만이어야 하고 파일 이름은 260자 미만이어야 합니다.</target>       </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFileSystemEntries(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a file name.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>는 파일 이름입니다.</target>       </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFileSystemEntries(System.String)">
          <source>The specified path is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</target>       </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String)">
          <source>for access to path information for the current directory.</source>
          <target state="translated">현재 디렉터리에 대 한 경로 정보에 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String)">
          <source>The relative or absolute path to the directory to search.</source>
          <target state="translated">검색할 디렉터리에 대한 상대 또는 절대 경로입니다.</target>       </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String)">
          <source>This string is not case-sensitive.</source>
          <target state="translated">이 문자열은 대/소문자를 구분하지 않습니다.</target>       </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String)">
          <source>The search string to match against the names of file and directories in <bpt id="p1">&lt;c&gt;</bpt>path<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>경로<ept id="p1">&lt;/c&gt;</ept>에 있는 파일 및 디렉터리 이름과 일치하는지 비교할 검색 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String)">
          <source>This parameter can contain a combination of valid literal path and wildcard (* and ?) characters, but it doesn't support regular expressions.</source>
          <target state="translated">이 매개 변수는 유효한 리터럴 경로와 와일드카드(* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</target>       </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String)">
          <source>Returns an array of file names and directory names that that match a search pattern in a specified path.</source>
          <target state="translated">지정된 경로에서 검색 패턴과 일치하는 파일 및 디렉터리 이름 배열을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String)">
          <source>An array of file names and directory names that match the specified search criteria, or an empty array if no files or directories are found.</source>
          <target state="translated">지정된 검색 조건과 일치하는 파일 이름 및 디렉터리 이름의 배열이거나 파일 또는 디렉터리가 없으면 빈 배열입니다.</target>       </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String)">
          <source>The order of the returned file and directory names is not guaranteed; use the <ph id="ph1">&lt;xref:System.Array.Sort%2A&gt;</ph> method if a specific sort order is required.</source>
          <target state="translated">반환 되는 파일 및 디렉터리 이름의 순서를 보장할 수 없습니다. 사용 하 여는 <ph id="ph1">&lt;xref:System.Array.Sort%2A&gt;</ph> 메서드 특정 정렬 순서를 적용 해야 하는 경우.</target>       </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String)">
          <source><ph id="ph1">`searchPattern`</ph> can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 리터럴 및 와일드 카드 문자 조합일 수 있지만 정규식을 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String)">
          <source>The following wildcard specifiers are permitted in <ph id="ph1">`searchPattern`</ph>.</source>
          <target state="translated">에 다음 와일드 카드 지정자를 사용할 수 <ph id="ph1">`searchPattern`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String)">
          <source>Wildcard specifier</source>
          <target state="translated">와일드 카드 지정자</target>       </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String)">
          <source>Matches</source>
          <target state="translated">일치 항목</target>       </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String)">
          <source><ph id="ph1">\*</ph> (asterisk)</source>
          <target state="translated"><ph id="ph1">\*</ph> (별표)</target>       </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String)">
          <source>Zero or more characters in that position.</source>
          <target state="translated">해당 위치에 0 개 이상의 문자가 있습니다.</target>       </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String)">
          <source>?</source>
          <target state="translated">?</target>       </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String)">
          <source>(question mark)</source>
          <target state="translated">(물음표)</target>       </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String)">
          <source>Zero or one character in that position.</source>
          <target state="translated">해당 위치에 0 개 또는 1 문자입니다.</target>       </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String)">
          <source>Characters other than the wildcard are literal characters.</source>
          <target state="translated">와일드 카드 문자는 리터럴 문자입니다.</target>       </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String)">
          <source>For example, the <ph id="ph1">`searchPattern`</ph> string "<ph id="ph2">\*</ph>t" searches for all names in <ph id="ph3">`path`</ph> ending with the letter "t".</source>
          <target state="translated">예를 들어는 <ph id="ph1">`searchPattern`</ph> 문자열 "<ph id="ph2">\*</ph>t"에 대 한 모든 이름 검색 <ph id="ph3">`path`</ph> 문자 "t"로 끝나는 합니다.</target>       </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String)">
          <source>The <ph id="ph1">`searchPattern`</ph> string "s<ph id="ph2">\*</ph>" searches for all names in <ph id="ph3">`path`</ph> beginning with the letter "s".</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 문자열 "s<ph id="ph2">\*</ph>"에서 모든 이름 검색 <ph id="ph3">`path`</ph> "s"로 시작 합니다.</target>       </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String)">
          <source><ph id="ph1">`searchPattern`</ph> cannot end in two periods ("..") or contain two periods ("..") followed by <ph id="ph2">&lt;xref:System.IO.Path.DirectorySeparatorChar&gt;</ph> or <ph id="ph3">&lt;xref:System.IO.Path.AltDirectorySeparatorChar&gt;</ph>, nor can it contain any invalid characters.</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 두 개의 마침표 ("..") 또는 마침표 두 개가 포함 ("..") 뒤 <ph id="ph2">&lt;xref:System.IO.Path.DirectorySeparatorChar&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.IO.Path.AltDirectorySeparatorChar&gt;</ph>, 잘못 된 문자를 사용할 수 없으며 합니다.</target>       </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String)">
          <source>You can query for invalid characters by using the <ph id="ph1">&lt;xref:System.IO.Path.GetInvalidPathChars%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Path.GetInvalidPathChars%2A&gt;</ph> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String)">
          <source>When you use the asterisk wildcard character in a <ph id="ph1">`searchPattern`</ph> such as "<ph id="ph2">\*</ph>.txt", the number of characters in the specified extension affects the search as follows:</source>
          <target state="translated">에 별표 와일드 카드 문자를 사용 하는 경우는 <ph id="ph1">`searchPattern`</ph> 와 같은 "<ph id="ph2">\*</ph>.txt"를 지정된 된 확장에 있는 문자의 수에 영향을 줍니다 검색 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String)">
          <source>If the specified extension is exactly three characters long, the method returns files with extensions that begin with the specified extension.</source>
          <target state="translated">정확히 3 자 지정한 확장명을 사용 하는 경우 메서드는 지정한 확장명으로 시작 하는 확장명을 가진 파일을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String)">
          <source>For example, "<ph id="ph1">\*</ph>.xls" returns both "book.xls" and "book.xlsx".</source>
          <target state="translated">예를 들어 "<ph id="ph1">\*</ph>.xls" 모두 "book.xls" 및 "book.xlsx"를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String)">
          <source>In all other cases, the method returns files that exactly match the specified extension.</source>
          <target state="translated">다른 모든 경우 메서드는 지정한 확장명을 정확 하 게 일치 하는 파일을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String)">
          <source>For example, "<ph id="ph1">\*</ph>.ai" returns "file.ai" but not "file.aif".</source>
          <target state="translated">예를 들어 "<ph id="ph1">\*</ph>.ai" "file.ai" 없습니다 "file.aif"를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String)">
          <source>When you use the question mark wildcard character, this method returns only files that match the specified file extension.</source>
          <target state="translated">물음표 와일드 카드 문자를 사용 하는 경우이 메서드는 지정 된 파일 확장명과 일치 하는 파일에만 반환 합니다.</target>       </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String)">
          <source>For example, given two files, "file1.txt" and "file1.txtother", in a directory, a search pattern of "file?.txt" returns just the first file, whereas a search pattern of "file<ph id="ph1">\*</ph>.txt" returns both files.</source>
          <target state="translated">예를 들어 두 개의 파일, "file1.txt" 및 "file1.txtother" 디렉터리를 검색 패턴은에 지정 된 "파일?입니다. txt"첫 번째 파일만 반환 하는 반면 검색 패턴은" 파일<ph id="ph1">\*</ph>.txt "파일을 모두 반환 합니다.</target>       </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String)">
          <source>The <ph id="ph1">`path`</ph> parameter is permitted to specify relative or absolute path information.</source>
          <target state="translated"><ph id="ph1">`path`</ph> 상대 또는 절대 경로 정보를 지정 하기 위해 매개 변수는 허용 합니다.</target>       </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String)">
          <source>Relative path information is interpreted as relative to the current working directory.</source>
          <target state="translated">상대 경로 정보는 현재 작업 디렉터리에 상대적으로 해석 됩니다.</target>       </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String)">
          <source>To obtain the current working directory, see <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>.</source>
          <target state="translated">현재 작업 디렉터리를 가져오려면 참조 <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String)">
          <source>The <ph id="ph1">`path`</ph> parameter is not case-sensitive.</source>
          <target state="translated"><ph id="ph1">`path`</ph> 매개 변수는 대/소문자 구분 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">공통적인 I/O 작업의 목록에 대 한 참조 <bpt id="p1">[</bpt>공통적인 I/O 작업<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.IO.Directory.GetFileSystemEntries%2A&gt;</ph> method to fill an array of strings with the names of all files matching a user-specified filter in a specific location and prints each string in the array to the console.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.IO.Directory.GetFileSystemEntries%2A&gt;</ph> 모든의 이름으로 문자열의 배열을 채울 메서드 파일을 특정 위치에 사용자 지정 필터와 일치 하 고 콘솔에 배열의 각 문자열을 출력 합니다.</target>       </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String)">
          <source>The example is configured to catch all errors common to this method.</source>
          <target state="translated">이 예제에서는이 메서드를 일반적인 모든 오류 catch 하도록 구성 됩니다.</target>       </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 빈 문자열이거나, 공백만을 포함하거나, 하나 이상의 잘못된 문자를 포함합니다.</target>       </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String)">
          <source>You can query for invalid characters with the <ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> 메서드로 잘못된 문자를 쿼리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> does not contain a valid pattern.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph>에 유효한 패턴이 포함되어 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> or <ph id="ph2">&lt;paramref name="searchPattern" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="searchPattern" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String)">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</target>       </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String)">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</source>
          <target state="translated">예를 들어 Windows 기반 플랫폼에서 경로는 248자 미만이어야 하고 파일 이름은 260자 미만이어야 합니다.</target>       </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a file name.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>는 파일 이름입니다.</target>       </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String)">
          <source>The specified path is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</target>       </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String)">
          <source>for access to path information for the current directory.</source>
          <target state="translated">현재 디렉터리에 대 한 경로 정보에 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>The relative or absolute path to the directory to search.</source>
          <target state="translated">검색할 디렉터리에 대한 상대 또는 절대 경로입니다.</target>       </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>This string is not case-sensitive.</source>
          <target state="translated">이 문자열은 대/소문자를 구분하지 않습니다.</target>       </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>The search string to match against the names of files and directories in <bpt id="p1">&lt;c&gt;</bpt>path<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>경로<ept id="p1">&lt;/c&gt;</ept>에 있는 파일 및 디렉터리 이름과 일치하는지 비교할 검색 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>This parameter can contain a combination of valid literal path and wildcard (* and ?) characters, but it doesn't support regular expressions.</source>
          <target state="translated">이 매개 변수는 유효한 리터럴 경로와 와일드카드(* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</target>       </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>One of the enumeration values that specifies whether the search operation should include only the current directory or should include all subdirectories.</source>
          <target state="translated">검색 작업에 현재 디렉터리만 포함할지 아니면 모든 하위 디렉터리를 포함할지를 지정하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.IO.SearchOption.TopDirectoryOnly" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.IO.SearchOption.TopDirectoryOnly" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>Returns an array of all the file names and directory names that match a search pattern in a specified path, and optionally searches subdirectories.</source>
          <target state="translated">지정된 경로에서 검색 패턴과 일치하는 모든 파일 이름 및 디렉터리 이름의 배열을 가져오고 선택적으로 하위 디렉터리를 반환합니다.</target>       </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>An array of file the file names and directory names that match the specified search criteria, or an empty array if no files or directories are found.</source>
          <target state="translated">지정된 검색 조건과 일치하는 파일, 파일 이름 및 디렉터리 이름의 배열이거나 파일 또는 디렉터리가 없으면 빈 배열입니다.</target>       </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>The order of the returned file and directory names is not guaranteed; use the <ph id="ph1">&lt;xref:System.Array.Sort%2A&gt;</ph> method if a specific sort order is required.</source>
          <target state="translated">반환 되는 파일 및 디렉터리 이름의 순서를 보장할 수 없습니다. 사용 하 여는 <ph id="ph1">&lt;xref:System.Array.Sort%2A&gt;</ph> 메서드 특정 정렬 순서를 적용 해야 하는 경우.</target>       </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source><ph id="ph1">`searchPattern`</ph> can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 리터럴 및 와일드 카드 문자 조합일 수 있지만 정규식을 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>The following wildcard specifiers are permitted in <ph id="ph1">`searchPattern`</ph>.</source>
          <target state="translated">에 다음 와일드 카드 지정자를 사용할 수 <ph id="ph1">`searchPattern`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>Wildcard specifier</source>
          <target state="translated">와일드 카드 지정자</target>       </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>Matches</source>
          <target state="translated">일치 항목</target>       </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source><ph id="ph1">\*</ph> (asterisk)</source>
          <target state="translated"><ph id="ph1">\*</ph> (별표)</target>       </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>Zero or more characters in that position.</source>
          <target state="translated">해당 위치에 0 개 이상의 문자가 있습니다.</target>       </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>?</source>
          <target state="translated">?</target>       </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>(question mark)</source>
          <target state="translated">(물음표)</target>       </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>Zero or one character in that position.</source>
          <target state="translated">해당 위치에 0 개 또는 1 문자입니다.</target>       </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>Characters other than the wildcard are literal characters.</source>
          <target state="translated">와일드 카드 문자는 리터럴 문자입니다.</target>       </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>For example, the <ph id="ph1">`searchPattern`</ph> string "<ph id="ph2">\*</ph>t" searches for all names in <ph id="ph3">`path`</ph> ending with the letter "t".</source>
          <target state="translated">예를 들어는 <ph id="ph1">`searchPattern`</ph> 문자열 "<ph id="ph2">\*</ph>t"에 대 한 모든 이름 검색 <ph id="ph3">`path`</ph> 문자 "t"로 끝나는 합니다.</target>       </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>The <ph id="ph1">`searchPattern`</ph> string "s<ph id="ph2">\*</ph>" searches for all names in <ph id="ph3">`path`</ph> beginning with the letter "s".</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 문자열 "s<ph id="ph2">\*</ph>"에서 모든 이름 검색 <ph id="ph3">`path`</ph> "s"로 시작 합니다.</target>       </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source><ph id="ph1">`searchPattern`</ph> cannot end in two periods ("..") or contain two periods ("..") followed by <ph id="ph2">&lt;xref:System.IO.Path.DirectorySeparatorChar&gt;</ph> or <ph id="ph3">&lt;xref:System.IO.Path.AltDirectorySeparatorChar&gt;</ph>, nor can it contain any invalid characters.</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 두 개의 마침표 ("..") 또는 마침표 두 개가 포함 ("..") 뒤 <ph id="ph2">&lt;xref:System.IO.Path.DirectorySeparatorChar&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.IO.Path.AltDirectorySeparatorChar&gt;</ph>, 잘못 된 문자를 사용할 수 없으며 합니다.</target>       </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>You can query for invalid characters by using the <ph id="ph1">&lt;xref:System.IO.Path.GetInvalidPathChars%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Path.GetInvalidPathChars%2A&gt;</ph> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>When you use the asterisk wildcard character in a <ph id="ph1">`searchPattern`</ph> such as "<ph id="ph2">\*</ph>.txt", the number of characters in the specified extension affects the search as follows:</source>
          <target state="translated">에 별표 와일드 카드 문자를 사용 하는 경우는 <ph id="ph1">`searchPattern`</ph> 와 같은 "<ph id="ph2">\*</ph>.txt"를 지정된 된 확장에 있는 문자의 수에 영향을 줍니다 검색 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>If the specified extension is exactly three characters long, the method returns files with extensions that begin with the specified extension.</source>
          <target state="translated">정확히 3 자 지정한 확장명을 사용 하는 경우 메서드는 지정한 확장명으로 시작 하는 확장명을 가진 파일을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>For example, "<ph id="ph1">\*</ph>.xls" returns both "book.xls" and "book.xlsx".</source>
          <target state="translated">예를 들어 "<ph id="ph1">\*</ph>.xls" 모두 "book.xls" 및 "book.xlsx"를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>In all other cases, the method returns files that exactly match the specified extension.</source>
          <target state="translated">다른 모든 경우 메서드는 지정한 확장명을 정확 하 게 일치 하는 파일을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>For example, "<ph id="ph1">\*</ph>.ai" returns "file.ai" but not "file.aif".</source>
          <target state="translated">예를 들어 "<ph id="ph1">\*</ph>.ai" "file.ai" 없습니다 "file.aif"를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>When you use the question mark wildcard character, this method returns only files that match the specified file extension.</source>
          <target state="translated">물음표 와일드 카드 문자를 사용 하는 경우이 메서드는 지정 된 파일 확장명과 일치 하는 파일에만 반환 합니다.</target>       </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>For example, given two files, "file1.txt" and "file1.txtother", in a directory, a search pattern of "file?.txt" returns just the first file, whereas a search pattern of "file<ph id="ph1">\*</ph>.txt" returns both files.</source>
          <target state="translated">예를 들어 두 개의 파일, "file1.txt" 및 "file1.txtother" 디렉터리를 검색 패턴은에 지정 된 "파일?입니다. txt"첫 번째 파일만 반환 하는 반면 검색 패턴은" 파일<ph id="ph1">\*</ph>.txt "파일을 모두 반환 합니다.</target>       </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateFileSystemEntries%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.Directory.GetFileSystemEntries%2A&gt;</ph> methods differ as follows: When you use <ph id="ph3">&lt;xref:System.IO.Directory.EnumerateFileSystemEntries%2A&gt;</ph>, you can start enumerating the collection of entries before the whole collection is returned; when you use <ph id="ph4">&lt;xref:System.IO.Directory.GetFileSystemEntries%2A&gt;</ph>, you must wait for the whole array of entries to be returned before you can access the array.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Directory.EnumerateFileSystemEntries%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.IO.Directory.GetFileSystemEntries%2A&gt;</ph> 방법은 다음과 같이 달라: 사용 하는 경우 <ph id="ph3">&lt;xref:System.IO.Directory.EnumerateFileSystemEntries%2A&gt;</ph>, 전체 컬렉션을 반환 하기 전에 항목의 컬렉션을 열거를 시작할 수 있습니다; 사용 하는 경우 <ph id="ph4">&lt;xref:System.IO.Directory.GetFileSystemEntries%2A&gt;</ph>, 항목의 전체 배열에 대해 기다려야 반환 되기 전에 배열에 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>Therefore, when you are working with many files and directories, <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateFiles%2A&gt;</ph> can be more efficient.</source>
          <target state="translated">따라서 많은 파일 및 디렉터리를 사용 하 여 작업할 때 <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateFiles%2A&gt;</ph> 더 효과적일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>You can specify relative path information with the <ph id="ph1">`path`</ph> parameter.</source>
          <target state="translated">상대 경로 정보를 지정할 수는 <ph id="ph1">`path`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>Relative path information is interpreted as relative to the current working directory, which you can determine by using the <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph> method.</source>
          <target state="translated">상대 경로 정보를 사용 하 여 확인할 수 있는 현재 작업 디렉터리에 상대적으로 해석 됩니다는 <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a zero-length string, contains only white space, or contains invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 빈 문자열이거나 공백만을 포함하거나 잘못된 문자를 포함합니다.</target>       </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>You can query for invalid characters by using the <ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> does not contain a valid pattern.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph>에 유효한 패턴이 포함되어 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="searchOption" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.SearchOption" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchOption" /&gt;</ph>은 유효한 <ph id="ph2">&lt;see cref="T:System.IO.SearchOption" /&gt;</ph> 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is invalid, such as referring to an unmapped drive.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 잘못되었습니다(예: 매핑되지 않은 드라이브 참조).</target>       </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a file name.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>는 파일 이름입니다.</target>       </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>The specified path, file name, or combined exceed the system-defined maximum length.</source>
          <target state="translated">지정된 경로, 파일 이름 또는 이 둘의 조합이 시스템에서 정의한 최대 길이를 초과합니다.</target>       </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</source>
          <target state="translated">예를 들어 Windows 기반 플랫폼에서 경로는 248자 미만이어야 하고 파일 이름은 260자 미만이어야 합니다.</target>       </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetLastAccessTime(System.String)">
          <source>The file or directory for which to obtain access date and time information.</source>
          <target state="translated">액세스 날짜와 시간 정보를 가져올 파일 또는 디렉터리입니다.</target>       </trans-unit>
        <trans-unit id="1105" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetLastAccessTime(System.String)">
          <source>Returns the date and time the specified file or directory was last accessed.</source>
          <target state="translated">지정된 파일 또는 디렉터리를 마지막으로 액세스한 날짜와 시간을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1106" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetLastAccessTime(System.String)">
          <source>A structure that is set to the date and time the specified file or directory was last accessed.</source>
          <target state="translated">지정된 파일 또는 디렉터리를 마지막으로 액세스한 날짜와 시간으로 설정된 구조체입니다.</target>       </trans-unit>
        <trans-unit id="1107" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetLastAccessTime(System.String)">
          <source>This value is expressed in local time.</source>
          <target state="translated">이 값은 현지 시간으로 표현됩니다.</target>       </trans-unit>
        <trans-unit id="1108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetLastAccessTime(System.String)">
          <source>This method may return an inaccurate value, because it uses native functions whose values may not be continuously updated by the operating system.</source>
          <target state="translated">이 메서드는 운영 체제에 의해 값을 가진 지속적으로 업데이트 되지 않을 수 있습니다는 네이티브 함수를 사용 하기 때문에 정확 하지 않은 값을 반환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetLastAccessTime(System.String)">
          <source>This method is identical to <ph id="ph1">&lt;xref:System.IO.File.GetLastAccessTime%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이 메서드는 동일 <ph id="ph1">&lt;xref:System.IO.File.GetLastAccessTime%2A?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetLastAccessTime(System.String)">
          <source>If the directory described in the <ph id="ph1">`path`</ph> parameter does not exist, this method returns 12:00 midnight, January 1, 1601 A.D.</source>
          <target state="translated">디렉터리에서 설명 하는 경우는 <ph id="ph1">`path`</ph> 매개 변수가 없는,이 메서드가 반환 서 기 1601 년 1 월 1 일 자정 12 시</target>       </trans-unit>
        <trans-unit id="1111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetLastAccessTime(System.String)">
          <source>(C.E.) Coordinated Universal Time (UTC), adjusted to local time.</source>
          <target state="translated">(C.E.) Utc (협정 세계시)를 현지 시간으로 조정 합니다.</target>       </trans-unit>
        <trans-unit id="1112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetLastAccessTime(System.String)">
          <source>The <ph id="ph1">`path`</ph> parameter is permitted to specify relative or absolute path information.</source>
          <target state="translated"><ph id="ph1">`path`</ph> 상대 또는 절대 경로 정보를 지정 하기 위해 매개 변수는 허용 합니다.</target>       </trans-unit>
        <trans-unit id="1113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetLastAccessTime(System.String)">
          <source>Relative path information is interpreted as relative to the current working directory.</source>
          <target state="translated">상대 경로 정보는 현재 작업 디렉터리에 상대적으로 해석 됩니다.</target>       </trans-unit>
        <trans-unit id="1114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetLastAccessTime(System.String)">
          <source>To obtain the current working directory, see <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>.</source>
          <target state="translated">현재 작업 디렉터리를 가져오려면 참조 <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetLastAccessTime(System.String)">
          <source>The <ph id="ph1">`path`</ph> parameter is not case-sensitive.</source>
          <target state="translated"><ph id="ph1">`path`</ph> 매개 변수는 대/소문자 구분 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="1116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetLastAccessTime(System.String)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">공통적인 I/O 작업의 목록에 대 한 참조 <bpt id="p1">[</bpt>공통적인 I/O 작업<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetLastAccessTime(System.String)">
          <source>The following example demonstrates how to use <ph id="ph1">`GetLastAccessTime`</ph>.</source>
          <target state="translated">다음 예제에서는 사용 하는 방법을 <ph id="ph1">`GetLastAccessTime`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1118" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetLastAccessTime(System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="1119" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetLastAccessTime(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 빈 문자열이거나, 공백만을 포함하거나, 하나 이상의 잘못된 문자를 포함합니다.</target>       </trans-unit>
        <trans-unit id="1120" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetLastAccessTime(System.String)">
          <source>You can query for invalid characters with the <ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> 메서드로 잘못된 문자를 쿼리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1121" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetLastAccessTime(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="1122" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetLastAccessTime(System.String)">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</target>       </trans-unit>
        <trans-unit id="1123" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetLastAccessTime(System.String)">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</source>
          <target state="translated">예를 들어 Windows 기반 플랫폼에서 경로는 248자 미만이어야 하고 파일 이름은 260자 미만이어야 합니다.</target>       </trans-unit>
        <trans-unit id="1124" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetLastAccessTime(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="path" /&gt;</ph> parameter is in an invalid format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> 매개 변수가 잘못된 형식인 경우</target>       </trans-unit>
        <trans-unit id="1125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetLastAccessTime(System.String)">
          <source>for reading the specified file or directory.</source>
          <target state="translated">에 지정 된 파일 또는 디렉터리를 읽고 있습니다.</target>       </trans-unit>
        <trans-unit id="1126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetLastAccessTime(System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1127" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetLastAccessTimeUtc(System.String)">
          <source>The file or directory for which to obtain access date and time information.</source>
          <target state="translated">액세스 날짜와 시간 정보를 가져올 파일 또는 디렉터리입니다.</target>       </trans-unit>
        <trans-unit id="1128" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetLastAccessTimeUtc(System.String)">
          <source>Returns the date and time, in Coordinated Universal Time (UTC) format, that the specified file or directory was last accessed.</source>
          <target state="translated">지정된 파일 또는 디렉터리에 마지막으로 액세스한 날짜와 시간을 UTC(Coordinated Universal Time) 형식으로 반환합니다.</target>       </trans-unit>
        <trans-unit id="1129" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetLastAccessTimeUtc(System.String)">
          <source>A structure that is set to the date and time the specified file or directory was last accessed.</source>
          <target state="translated">지정된 파일 또는 디렉터리를 마지막으로 액세스한 날짜와 시간으로 설정된 구조체입니다.</target>       </trans-unit>
        <trans-unit id="1130" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetLastAccessTimeUtc(System.String)">
          <source>This value is expressed in UTC time.</source>
          <target state="translated">이 값은 UTC 시간으로 표현됩니다.</target>       </trans-unit>
        <trans-unit id="1131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetLastAccessTimeUtc(System.String)">
          <source>This method may return an inaccurate value, because it uses native functions whose values may not be continuously updated by the operating system.</source>
          <target state="translated">이 메서드는 운영 체제에 의해 값을 가진 지속적으로 업데이트 되지 않을 수 있습니다는 네이티브 함수를 사용 하기 때문에 정확 하지 않은 값을 반환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetLastAccessTimeUtc(System.String)">
          <source>If the directory described in the <ph id="ph1">`path`</ph> parameter does not exist, this method returns 12:00 midnight, January 1, 1601 A.D.</source>
          <target state="translated">디렉터리에서 설명 하는 경우는 <ph id="ph1">`path`</ph> 매개 변수가 없는,이 메서드가 반환 서 기 1601 년 1 월 1 일 자정 12 시</target>       </trans-unit>
        <trans-unit id="1133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetLastAccessTimeUtc(System.String)">
          <source>(C.E.) Coordinated Universal Time (UTC).</source>
          <target state="translated">(C.E.) Utc (협정 세계시)입니다.</target>       </trans-unit>
        <trans-unit id="1134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetLastAccessTimeUtc(System.String)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">공통적인 I/O 작업의 목록에 대 한 참조 <bpt id="p1">[</bpt>공통적인 I/O 작업<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetLastAccessTimeUtc(System.String)">
          <source>The following example illustrates the differences in output when using Coordinated Universal Time (UTC) output.</source>
          <target state="translated">Utc (협정 세계시) 출력을 사용 하는 경우 다음 예제에서는 출력의 차이점을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1136" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetLastAccessTimeUtc(System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="1137" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetLastAccessTimeUtc(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 빈 문자열이거나, 공백만을 포함하거나, 하나 이상의 잘못된 문자를 포함합니다.</target>       </trans-unit>
        <trans-unit id="1138" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetLastAccessTimeUtc(System.String)">
          <source>You can query for invalid characters with the  <ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1139" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetLastAccessTimeUtc(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="1140" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetLastAccessTimeUtc(System.String)">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</target>       </trans-unit>
        <trans-unit id="1141" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetLastAccessTimeUtc(System.String)">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</source>
          <target state="translated">예를 들어 Windows 기반 플랫폼에서 경로는 248자 미만이어야 하고 파일 이름은 260자 미만이어야 합니다.</target>       </trans-unit>
        <trans-unit id="1142" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetLastAccessTimeUtc(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="path" /&gt;</ph> parameter is in an invalid format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> 매개 변수가 잘못된 형식인 경우</target>       </trans-unit>
        <trans-unit id="1143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetLastAccessTimeUtc(System.String)">
          <source>for reading the specified file or directory.</source>
          <target state="translated">에 지정 된 파일 또는 디렉터리를 읽고 있습니다.</target>       </trans-unit>
        <trans-unit id="1144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetLastAccessTimeUtc(System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1145" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetLastWriteTime(System.String)">
          <source>The file or directory for which to obtain modification date and time information.</source>
          <target state="translated">수정 날짜와 시간 정보를 가져올 파일 또는 디렉터리입니다.</target>       </trans-unit>
        <trans-unit id="1146" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetLastWriteTime(System.String)">
          <source>Returns the date and time the specified file or directory was last written to.</source>
          <target state="translated">지정된 파일 또는 디렉터리를 마지막으로 쓴 날짜와 시간을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1147" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetLastWriteTime(System.String)">
          <source>A structure that is set to the date and time the specified file or directory was last written to.</source>
          <target state="translated">지정된 파일 또는 디렉터리를 마지막으로 쓴 날짜와 시간으로 설정된 구조체입니다.</target>       </trans-unit>
        <trans-unit id="1148" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetLastWriteTime(System.String)">
          <source>This value is expressed in local time.</source>
          <target state="translated">이 값은 현지 시간으로 표현됩니다.</target>       </trans-unit>
        <trans-unit id="1149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetLastWriteTime(System.String)">
          <source>This method may return an inaccurate value, because it uses native functions whose values may not be continuously updated by the operating system.</source>
          <target state="translated">이 메서드는 운영 체제에 의해 값을 가진 지속적으로 업데이트 되지 않을 수 있습니다는 네이티브 함수를 사용 하기 때문에 정확 하지 않은 값을 반환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetLastWriteTime(System.String)">
          <source>If the directory described in the <ph id="ph1">`path`</ph> parameter does not exist, this method returns 12:00 midnight, January 1, 1601 A.D.</source>
          <target state="translated">디렉터리에서 설명 하는 경우는 <ph id="ph1">`path`</ph> 매개 변수가 없는,이 메서드가 반환 서 기 1601 년 1 월 1 일 자정 12 시</target>       </trans-unit>
        <trans-unit id="1151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetLastWriteTime(System.String)">
          <source>(C.E.) Coordinated Universal Time (UTC), adjusted to local time.</source>
          <target state="translated">(C.E.) Utc (협정 세계시)를 현지 시간으로 조정 합니다.</target>       </trans-unit>
        <trans-unit id="1152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetLastWriteTime(System.String)">
          <source>The <ph id="ph1">`path`</ph> parameter is permitted to specify relative or absolute path information.</source>
          <target state="translated"><ph id="ph1">`path`</ph> 상대 또는 절대 경로 정보를 지정 하기 위해 매개 변수는 허용 합니다.</target>       </trans-unit>
        <trans-unit id="1153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetLastWriteTime(System.String)">
          <source>Relative path information is interpreted as relative to the current working directory.</source>
          <target state="translated">상대 경로 정보는 현재 작업 디렉터리에 상대적으로 해석 됩니다.</target>       </trans-unit>
        <trans-unit id="1154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetLastWriteTime(System.String)">
          <source>To obtain the current working directory, see <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>.</source>
          <target state="translated">현재 작업 디렉터리를 가져오려면 참조 <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetLastWriteTime(System.String)">
          <source>The <ph id="ph1">`path`</ph> parameter is not case-sensitive.</source>
          <target state="translated"><ph id="ph1">`path`</ph> 매개 변수는 대/소문자 구분 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="1156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetLastWriteTime(System.String)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">공통적인 I/O 작업의 목록에 대 한 참조 <bpt id="p1">[</bpt>공통적인 I/O 작업<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetLastWriteTime(System.String)">
          <source>The following example demonstrates how to use <ph id="ph1">`GetLastWriteTime`</ph>.</source>
          <target state="translated">다음 예제에서는 사용 하는 방법을 <ph id="ph1">`GetLastWriteTime`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1158" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetLastWriteTime(System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="1159" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetLastWriteTime(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 빈 문자열이거나, 공백만을 포함하거나, 하나 이상의 잘못된 문자를 포함합니다.</target>       </trans-unit>
        <trans-unit id="1160" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetLastWriteTime(System.String)">
          <source>You can query for invalid characters with the  <ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1161" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetLastWriteTime(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="1162" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetLastWriteTime(System.String)">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</target>       </trans-unit>
        <trans-unit id="1163" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetLastWriteTime(System.String)">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</source>
          <target state="translated">예를 들어 Windows 기반 플랫폼에서 경로는 248자 미만이어야 하고 파일 이름은 260자 미만이어야 합니다.</target>       </trans-unit>
        <trans-unit id="1164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetLastWriteTime(System.String)">
          <source>for reading the specified file or directory.</source>
          <target state="translated">에 지정 된 파일 또는 디렉터리를 읽고 있습니다.</target>       </trans-unit>
        <trans-unit id="1165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetLastWriteTime(System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1166" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetLastWriteTimeUtc(System.String)">
          <source>The file or directory for which to obtain modification date and time information.</source>
          <target state="translated">수정 날짜와 시간 정보를 가져올 파일 또는 디렉터리입니다.</target>       </trans-unit>
        <trans-unit id="1167" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetLastWriteTimeUtc(System.String)">
          <source>Returns the date and time, in Coordinated Universal Time (UTC) format, that the specified file or directory was last written to.</source>
          <target state="translated">지정된 파일이나 디렉터리에 마지막으로 쓴 날짜와 시간을 UTC(Coordinated Universal Time) 형식으로 반환합니다.</target>       </trans-unit>
        <trans-unit id="1168" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetLastWriteTimeUtc(System.String)">
          <source>A structure that is set to the date and time the specified file or directory was last written to.</source>
          <target state="translated">지정된 파일 또는 디렉터리를 마지막으로 쓴 날짜와 시간으로 설정된 구조체입니다.</target>       </trans-unit>
        <trans-unit id="1169" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetLastWriteTimeUtc(System.String)">
          <source>This value is expressed in UTC time.</source>
          <target state="translated">이 값은 UTC 시간으로 표현됩니다.</target>       </trans-unit>
        <trans-unit id="1170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetLastWriteTimeUtc(System.String)">
          <source>This method may return an inaccurate value, because it uses native functions whose values may not be continuously updated by the operating system.</source>
          <target state="translated">이 메서드는 운영 체제에 의해 값을 가진 지속적으로 업데이트 되지 않을 수 있습니다는 네이티브 함수를 사용 하기 때문에 정확 하지 않은 값을 반환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetLastWriteTimeUtc(System.String)">
          <source>If the directory described in the <ph id="ph1">`path`</ph> parameter does not exist, this method returns 12:00 midnight, January 1, 1601 A.D.</source>
          <target state="translated">디렉터리에서 설명 하는 경우는 <ph id="ph1">`path`</ph> 매개 변수가 없는,이 메서드가 반환 서 기 1601 년 1 월 1 일 자정 12 시</target>       </trans-unit>
        <trans-unit id="1172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetLastWriteTimeUtc(System.String)">
          <source>(C.E.) Coordinated Universal Time (UTC).</source>
          <target state="translated">(C.E.) Utc (협정 세계시)입니다.</target>       </trans-unit>
        <trans-unit id="1173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetLastWriteTimeUtc(System.String)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">공통적인 I/O 작업의 목록에 대 한 참조 <bpt id="p1">[</bpt>공통적인 I/O 작업<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetLastWriteTimeUtc(System.String)">
          <source>The following example illustrates the differences in output when using Coordinated Universal Time (UTC) output.</source>
          <target state="translated">Utc (협정 세계시) 출력을 사용 하는 경우 다음 예제에서는 출력의 차이점을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1175" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetLastWriteTimeUtc(System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="1176" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetLastWriteTimeUtc(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 빈 문자열이거나, 공백만을 포함하거나, 하나 이상의 잘못된 문자를 포함합니다.</target>       </trans-unit>
        <trans-unit id="1177" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetLastWriteTimeUtc(System.String)">
          <source>You can query for invalid characters with the  <ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1178" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetLastWriteTimeUtc(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="1179" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetLastWriteTimeUtc(System.String)">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</target>       </trans-unit>
        <trans-unit id="1180" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetLastWriteTimeUtc(System.String)">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</source>
          <target state="translated">예를 들어 Windows 기반 플랫폼에서 경로는 248자 미만이어야 하고 파일 이름은 260자 미만이어야 합니다.</target>       </trans-unit>
        <trans-unit id="1181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetLastWriteTimeUtc(System.String)">
          <source>for reading the specified file or directory.</source>
          <target state="translated">에 지정 된 파일 또는 디렉터리를 읽고 있습니다.</target>       </trans-unit>
        <trans-unit id="1182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetLastWriteTimeUtc(System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1183" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetLogicalDrives">
          <source>Retrieves the names of the logical drives on this computer in the form "<ph id="ph1">&amp;lt;</ph>drive letter<ph id="ph2">&amp;gt;</ph>:<ph id="ph3">\\</ph>".</source>
          <target state="translated">해당 컴퓨터에서 "<ph id="ph1">&amp;lt;</ph>드라이브 문자<ph id="ph2">&amp;gt;</ph>:<ph id="ph3">\\</ph>"의 형식으로 논리 드라이브 이름을 검색합니다.</target>       </trans-unit>
        <trans-unit id="1184" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetLogicalDrives">
          <source>The logical drives on this computer.</source>
          <target state="translated">해당 컴퓨터에 있는 논리 드라이브입니다.</target>       </trans-unit>
        <trans-unit id="1185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetLogicalDrives">
          <source>GetLogicalDrives returns all of the accessible drives on a particular machine, including the floppy drive and any optical drives.</source>
          <target state="translated">GetLogicalDrives 플로피 드라이브 및 광 모든 드라이브를 포함 하 여 특정 컴퓨터에서 액세스할 수 있는 드라이브를 모두 반환 합니다.</target>       </trans-unit>
        <trans-unit id="1186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetLogicalDrives">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">공통적인 I/O 작업의 목록에 대 한 참조 <bpt id="p1">[</bpt>공통적인 I/O 작업<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetLogicalDrives">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.IO.Directory.GetLogicalDrives%2A&gt;</ph> method to assign the name of each drive on the calling computer to an array of strings.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.IO.Directory.GetLogicalDrives%2A&gt;</ph> 메서드를 호출 하는 컴퓨터에 각 드라이브의 이름을 문자열의 배열을 할당 합니다.</target>       </trans-unit>
        <trans-unit id="1188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetLogicalDrives">
          <source>Each member of this string array is then printed to the console.</source>
          <target state="translated">그런 다음이 문자열 배열의 각 멤버는 콘솔에 출력 합니다.</target>       </trans-unit>
        <trans-unit id="1189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetLogicalDrives">
          <source>The example is configured to catch all errors common to this method.</source>
          <target state="translated">이 예제에서는이 메서드를 일반적인 모든 오류 catch 하도록 구성 됩니다.</target>       </trans-unit>
        <trans-unit id="1190" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetLogicalDrives">
          <source>An I/O error occured (for example, a disk error).</source>
          <target state="translated">I/O 오류(예: 디스크 오류)가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="1191" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetLogicalDrives">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="1192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetLogicalDrives">
          <source>for calling unmanaged code, such as calling native code with PInvoke or COM interop.</source>
          <target state="translated">PInvoke 또는 COM interop 사용 하 여 네이티브 코드를 호출 하는 등의 비관리 코드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="1193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetLogicalDrives">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1194" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetParent(System.String)">
          <source>The path for which to retrieve the parent directory.</source>
          <target state="translated">부모 디렉터리를 검색할 경로입니다.</target>       </trans-unit>
        <trans-unit id="1195" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetParent(System.String)">
          <source>Retrieves the parent directory of the specified path, including both absolute and relative paths.</source>
          <target state="translated">지정된 경로의 절대 경로와 상대 경로를 모두 포함한 부모 디렉터리를 검색합니다.</target>       </trans-unit>
        <trans-unit id="1196" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetParent(System.String)">
          <source>The parent directory, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if <ph id="ph2">&lt;paramref name="path" /&gt;</ph> is the root directory, including the root of a UNC server or share name.</source>
          <target state="translated">부모 디렉터리이거나 <ph id="ph2">&lt;paramref name="path" /&gt;</ph>가 UNC 서버 또는 공유 이름의 루트를 포함한 루트 디렉터리일 경우 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetParent(System.String)">
          <source>The <ph id="ph1">`path`</ph> parameter can specify relative or absolute path information.</source>
          <target state="translated"><ph id="ph1">`path`</ph> 매개 변수는 상대 또는 절대 경로 정보를 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetParent(System.String)">
          <source>Relative path information is interpreted as relative to the current working directory.</source>
          <target state="translated">상대 경로 정보는 현재 작업 디렉터리에 상대적으로 해석 됩니다.</target>       </trans-unit>
        <trans-unit id="1199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetParent(System.String)">
          <source>To obtain the current working directory, see <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>.</source>
          <target state="translated">현재 작업 디렉터리를 가져오려면 참조 <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetParent(System.String)">
          <source>Trailing spaces are removed from the end of the <ph id="ph1">`path`</ph> parameter before getting the directory.</source>
          <target state="translated">끝에서 후행 공백을 제거는 <ph id="ph1">`path`</ph> 디렉터리 가져오기 전에 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="1201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetParent(System.String)">
          <source>The string returned by this method consists of all characters in the path up to, but not including, the last <ph id="ph1">&lt;xref:System.IO.Path.DirectorySeparatorChar&gt;</ph> or <ph id="ph2">&lt;xref:System.IO.Path.AltDirectorySeparatorChar&gt;</ph>.</source>
          <target state="translated">이 메서드에 의해 반환 되는 문자열 까지의 경로 등을 제외한 마지막 모든 자로 구성 <ph id="ph1">&lt;xref:System.IO.Path.DirectorySeparatorChar&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.IO.Path.AltDirectorySeparatorChar&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetParent(System.String)">
          <source>For example, passing the path "C:\Directory\SubDirectory\test.txt" to <ph id="ph1">&lt;xref:System.IO.Directory.GetParent%2A&gt;</ph> returns "C:\Directory\SubDirectory".</source>
          <target state="translated">예를 들어 "C:\Directory\SubDirectory\test.txt" 경로에 전달 <ph id="ph1">&lt;xref:System.IO.Directory.GetParent%2A&gt;</ph> "C:\Directory\SubDirectory"를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="1203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetParent(System.String)">
          <source>Passing "C:\Directory\SubDirectory" returns "C:\Directory".</source>
          <target state="translated">"C:\Directory\SubDirectory" 전달 "C:\Directory"를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="1204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetParent(System.String)">
          <source>However, passing "C:\Directory\SubDirectory<ph id="ph1">\\</ph>" returns "C:\Directory\SubDirectory", because the ending directory separator is after "SubDirectory".</source>
          <target state="translated">그러나 전달 "C:\Directory\SubDirectory<ph id="ph1">\\</ph>" 끝 디렉터리 구분 문자 "하위 디렉터리" 후 있기 때문에 "C:\Directory\SubDirectory"를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="1205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetParent(System.String)">
          <source>The <ph id="ph1">`path`</ph> parameter is not case-sensitive.</source>
          <target state="translated"><ph id="ph1">`path`</ph> 매개 변수는 대/소문자 구분 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="1206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetParent(System.String)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">공통적인 I/O 작업의 목록에 대 한 참조 <bpt id="p1">[</bpt>공통적인 I/O 작업<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetParent(System.String)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.IO.Directory.GetParent%2A&gt;</ph> method to retrieve the parent directory of a user-specified location, "path".</source>
          <target state="translated">다음 예제에서는 사용 하는 방법을 <ph id="ph1">&lt;xref:System.IO.Directory.GetParent%2A&gt;</ph> 부모 디렉터리의 사용자가 지정한 위치를 검색할 메서드 "path"입니다.</target>       </trans-unit>
        <trans-unit id="1208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetParent(System.String)">
          <source>The value returned by the <ph id="ph1">&lt;xref:System.IO.Directory.GetParent%2A&gt;</ph> method is then printed to the console.</source>
          <target state="translated">반환한 값은 <ph id="ph1">&lt;xref:System.IO.Directory.GetParent%2A&gt;</ph> 메서드 그런 다음 콘솔에 출력 합니다.</target>       </trans-unit>
        <trans-unit id="1209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetParent(System.String)">
          <source>The example is configured to catch all errors common to this method.</source>
          <target state="translated">이 예제에서는이 메서드를 일반적인 모든 오류 catch 하도록 구성 됩니다.</target>       </trans-unit>
        <trans-unit id="1210" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetParent(System.String)">
          <source>The directory specified by <ph id="ph1">&lt;paramref name="path" /&gt;</ph> is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>로 지정된 디렉터리가 읽기 전용일 경우</target>       </trans-unit>
        <trans-unit id="1211" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetParent(System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="1212" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetParent(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 빈 문자열이거나, 공백만을 포함하거나, 하나 이상의 잘못된 문자를 포함합니다.</target>       </trans-unit>
        <trans-unit id="1213" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetParent(System.String)">
          <source>You can query for invalid characters with the  <ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1214" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetParent(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="1215" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetParent(System.String)">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</target>       </trans-unit>
        <trans-unit id="1216" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetParent(System.String)">
          <source>For more information, see the <ph id="ph1">&lt;see cref="T:System.IO.PathTooLongException" /&gt;</ph> topic.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;see cref="T:System.IO.PathTooLongException" /&gt;</ph> 항목을 참조하세요.</target>       </trans-unit>
        <trans-unit id="1217" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetParent(System.String)">
          <source>The specified path was not found.</source>
          <target state="translated">지정된 경로를 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1218" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetParent(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is in an invalid format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>의 형식이 잘못되었습니다.</target>       </trans-unit>
        <trans-unit id="1219" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.GetParent(System.String)">
          <source>.NET Framework only: The caller does not have the required permissions.</source>
          <target state="translated">.NET Framework만 해당: 호출자에게 필요한 사용 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="1220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetParent(System.String)">
          <source>for reading from files or directories.</source>
          <target state="translated">파일 또는 디렉터리에서 계속 하십시오.</target>       </trans-unit>
        <trans-unit id="1221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.GetParent(System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1222" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.Move(System.String,System.String)">
          <source>The path of the file or directory to move.</source>
          <target state="translated">이동할 파일 또는 디렉터리의 경로입니다.</target>       </trans-unit>
        <trans-unit id="1223" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.Move(System.String,System.String)">
          <source>The path to the new location for <bpt id="p1">&lt;c&gt;</bpt>sourceDirName<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>sourceDirName<ept id="p1">&lt;/c&gt;</ept>의 새 위치에 대한 경로입니다.</target>       </trans-unit>
        <trans-unit id="1224" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.Move(System.String,System.String)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>sourceDirName<ept id="p1">&lt;/c&gt;</ept> is a file, then <bpt id="p2">&lt;c&gt;</bpt>destDirName<ept id="p2">&lt;/c&gt;</ept> must also be a file name.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>sourceDirName<ept id="p1">&lt;/c&gt;</ept>이 파일이면 <bpt id="p2">&lt;c&gt;</bpt>destDirName<ept id="p2">&lt;/c&gt;</ept>도 파일 이름이어야 합니다.</target>       </trans-unit>
        <trans-unit id="1225" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.Move(System.String,System.String)">
          <source>Moves a file or a directory and its contents to a new location.</source>
          <target state="translated">파일 또는 디렉터리와 그 내용을 새 위치로 이동합니다.</target>       </trans-unit>
        <trans-unit id="1226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.Move(System.String,System.String)">
          <source>This method creates a new directory with the name specified by <ph id="ph1">`destDirName`</ph> and moves the contents of <ph id="ph2">`sourceDirName`</ph> to the newly created destination directory.</source>
          <target state="translated">이 메서드는 지정 된 이름의 새 디렉터리를 만드는 <ph id="ph1">`destDirName`</ph> 의 내용을 이동 및 <ph id="ph2">`sourceDirName`</ph> 새로 생성된 된 대상 디렉터리에 있습니다.</target>       </trans-unit>
        <trans-unit id="1227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.Move(System.String,System.String)">
          <source>If you try to move a directory to a directory that already exists, an <ph id="ph1">&lt;xref:System.IO.IOException&gt;</ph> will occur.</source>
          <target state="translated">이미 존재 하는 디렉터리에 디렉터리를 이동 하려는 경우는 <ph id="ph1">&lt;xref:System.IO.IOException&gt;</ph> 발생 합니다.</target>       </trans-unit>
        <trans-unit id="1228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.Move(System.String,System.String)">
          <source>For example, an exception will occur if you try to move c:\mydir to c:\public, and c:\public already exists.</source>
          <target state="translated">예를 들어 c:\mydir c:\public로 이동 하려고 할 경우 c:\public 이미 있으면 예외가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="1229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.Move(System.String,System.String)">
          <source>Alternatively, you could specify "c:<ph id="ph1">\\</ph>\public<ph id="ph2">\\</ph>\mydir" as the <ph id="ph3">`destDirName`</ph> parameter, provided that "mydir" does not exist under "c:<ph id="ph4">\\</ph>\public", or specify a new directory name such as "c:<ph id="ph5">\\</ph>\newdir".</source>
          <target state="translated">지정할 수 있습니다 "c:<ph id="ph1">\\</ph>\public<ph id="ph2">\\</ph>\mydir"으로 <ph id="ph3">`destDirName`</ph> 아래 "mydir"가 존재 하지 않는지를 제공 하는 매개 변수 "c:<ph id="ph4">\\</ph>\public"와 같이 새 디렉터리 이름을 지정 하거나 "c:<ph id="ph5">\\</ph>\newdir"입니다.</target>       </trans-unit>
        <trans-unit id="1230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.Move(System.String,System.String)">
          <source>The <ph id="ph1">`sourceDirName`</ph> and <ph id="ph2">`destDirName`</ph> arguments are permitted to specify relative or absolute path information.</source>
          <target state="translated"><ph id="ph1">`sourceDirName`</ph> 및 <ph id="ph2">`destDirName`</ph> 인수는 상대 또는 절대 경로 정보를 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.Move(System.String,System.String)">
          <source>Relative path information is interpreted as relative to the current working directory.</source>
          <target state="translated">상대 경로 정보는 현재 작업 디렉터리에 상대적으로 해석 됩니다.</target>       </trans-unit>
        <trans-unit id="1232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.Move(System.String,System.String)">
          <source>To obtain the current working directory, see <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>.</source>
          <target state="translated">현재 작업 디렉터리를 가져오려면 참조 <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.Move(System.String,System.String)">
          <source>Trailing spaces are removed from the end of the path parameters before moving the directory.</source>
          <target state="translated">디렉터리를 이동 하기 전에 path 매개 변수로의 끝에서 후행 공백은 제거 합니다.</target>       </trans-unit>
        <trans-unit id="1234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.Move(System.String,System.String)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">공통적인 I/O 작업의 목록에 대 한 참조 <bpt id="p1">[</bpt>공통적인 I/O 작업<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.Move(System.String,System.String)">
          <source>The following example demonstrates how to move a directory and all its files to a new directory.</source>
          <target state="translated">다음 예제에서는 디렉터리와 모든 파일을 새 디렉터리로 이동 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.Move(System.String,System.String)">
          <source>The original directory no longer exists after it has been moved.</source>
          <target state="translated">이 이동 하면 원래 디렉터리 존재 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="1237" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.Move(System.String,System.String)">
          <source>An attempt was made to move a directory to a different volume.</source>
          <target state="translated">디렉터리를 다른 볼륨으로 이동하려고 했습니다.</target>       </trans-unit>
        <trans-unit id="1238" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.Move(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1239" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.Move(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="destDirName" /&gt;</ph> already exists.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="destDirName" /&gt;</ph>이(가) 이미 있습니다.</target>       </trans-unit>
        <trans-unit id="1240" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.Move(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1241" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.Move(System.String,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="sourceDirName" /&gt;</ph> and <ph id="ph2">&lt;paramref name="destDirName" /&gt;</ph> parameters refer to the same file or directory.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sourceDirName" /&gt;</ph>과 <ph id="ph2">&lt;paramref name="destDirName" /&gt;</ph> 매개 변수가 같은 파일이나 디렉터리를 참조하는 경우</target>       </trans-unit>
        <trans-unit id="1242" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.Move(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1243" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.Move(System.String,System.String)">
          <source>The directory or a file within it is being used by another process.</source>
          <target state="translated">디렉터리 또는 포함된 파일이 다른 프로세스에서 사용 중입니다.</target>       </trans-unit>
        <trans-unit id="1244" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.Move(System.String,System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="1245" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.Move(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="sourceDirName" /&gt;</ph> or <ph id="ph2">&lt;paramref name="destDirName" /&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sourceDirName" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="destDirName" /&gt;</ph>이 길이가 0인 문자열이거나, 공백만 포함하거나 또는 하나 이상의 잘못된 문자를 포함하는 경우</target>       </trans-unit>
        <trans-unit id="1246" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.Move(System.String,System.String)">
          <source>You can query for invalid characters with the  <ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1247" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.Move(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="sourceDirName" /&gt;</ph> or <ph id="ph2">&lt;paramref name="destDirName" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sourceDirName" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="destDirName" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="1248" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.Move(System.String,System.String)">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</target>       </trans-unit>
        <trans-unit id="1249" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.Move(System.String,System.String)">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</source>
          <target state="translated">예를 들어 Windows 기반 플랫폼에서 경로는 248자 미만이어야 하고 파일 이름은 260자 미만이어야 합니다.</target>       </trans-unit>
        <trans-unit id="1250" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.Move(System.String,System.String)">
          <source>The path specified by <ph id="ph1">&lt;paramref name="sourceDirName" /&gt;</ph> is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sourceDirName" /&gt;</ph>에서 지정한 경로가 잘못된 경우(예: 매핑되지 않은 드라이브의 경로를 지정한 경우)</target>       </trans-unit>
        <trans-unit id="1251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.Move(System.String,System.String)">
          <source>for reading from <ph id="ph1">&lt;paramref name="sourceDirName" /&gt;</ph> and writing to <ph id="ph2">&lt;paramref name="sourceDirName" /&gt;</ph> and <ph id="ph3">&lt;paramref name="destDirName" /&gt;</ph>.</source>
          <target state="translated">읽는 <ph id="ph1">&lt;paramref name="sourceDirName" /&gt;</ph> 및 쓰기 <ph id="ph2">&lt;paramref name="sourceDirName" /&gt;</ph> 및 <ph id="ph3">&lt;paramref name="destDirName" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.Move(System.String,System.String)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></source>
          <target state="translated">연관 된 열거형: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1253" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetAccessControl(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>A directory to add or remove access control list (ACL) entries from.</source>
          <target state="translated">ACL(액세스 제어 목록) 항목을 추가하거나 제거할 디렉터리입니다.</target>       </trans-unit>
        <trans-unit id="1254" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetAccessControl(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.DirectorySecurity" /&gt;</ph> object that describes an ACL entry to apply to the directory described by the <bpt id="p1">&lt;c&gt;</bpt>path<ept id="p1">&lt;/c&gt;</ept> parameter.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>경로<ept id="p1">&lt;/c&gt;</ept> 매개 변수에서 설명하는 디렉터리에 적용할 ACL 항목을 설명하는 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.DirectorySecurity" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="1255" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetAccessControl(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>Applies access control list (ACL) entries described by a <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.DirectorySecurity" /&gt;</ph> object to the specified directory.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.AccessControl.DirectorySecurity" /&gt;</ph> 개체에서 설명하는 ACL(액세스 제어 목록) 항목을 지정된 디렉터리에 적용합니다.</target>       </trans-unit>
        <trans-unit id="1256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetAccessControl(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Directory.SetAccessControl%2A&gt;</ph> method applies access control list (ACL) entries to a file that represents the noninherited ACL list.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Directory.SetAccessControl%2A&gt;</ph> 메서드는 상속 되지 않은 ACL 목록을 표시 하는 파일에 액세스 제어 목록 (ACL) 항목을 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="1257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetAccessControl(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>The ACL specified for the <ph id="ph1">`directorySecurity`</ph> parameter replaces the existing ACL for the directory.</source>
          <target state="translated">에 대해 지정 된 ACL은 <ph id="ph1">`directorySecurity`</ph> 매개 변수는 디렉터리에 대 한 기존 ACL을 대체 합니다.</target>       </trans-unit>
        <trans-unit id="1258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetAccessControl(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>To add permissions for a new user, use the <ph id="ph1">&lt;xref:System.IO.Directory.GetAccessControl%2A&gt;</ph> method to obtain the existing ACL and modify it.</source>
          <target state="translated">새 사용자에 대 한 권한을 추가 하려면 사용 된 <ph id="ph1">&lt;xref:System.IO.Directory.GetAccessControl%2A&gt;</ph> 메서드를 추가 하려면을 수정 합니다.</target>       </trans-unit>
        <trans-unit id="1259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetAccessControl(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</source>
          <target state="translated">ACL에는 개인 및/또는 그룹 나 권한이 없는, 특정된 파일이 나 디렉터리에서 특정 작업을 설명 합니다.</target>       </trans-unit>
        <trans-unit id="1260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetAccessControl(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Add or Remove Access Control List Entries<ept id="p1">](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>방법: Access Control 목록 항목 추가 또는 제거<ept id="p1">](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="1261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetAccessControl(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Directory.SetAccessControl%2A&gt;</ph> method persists only <ph id="ph2">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph> objects that have been modified after object creation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Directory.SetAccessControl%2A&gt;</ph> 메서드만 계속 되 면 <ph id="ph2">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph> 개체를 만든 후 수정 된 개체입니다.</target>       </trans-unit>
        <trans-unit id="1262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetAccessControl(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>If a <ph id="ph1">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph> object has not been modified, it will not be persisted to a file.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph> 개체가 수정 되지 않은, 파일에 유지 되지 것입니다.</target>       </trans-unit>
        <trans-unit id="1263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetAccessControl(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>Therefore, it is not possible to retrieve a <ph id="ph1">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph> object from one file and reapply the same object to another file.</source>
          <target state="translated">검색할 수 없으면 따라서는 <ph id="ph1">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph> 한 파일에서 개체를 다른 파일에 동일한 개체를 다시 적용 합니다.</target>       </trans-unit>
        <trans-unit id="1264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetAccessControl(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>To copy ACL information from one file to another:</source>
          <target state="translated">다른 파일에서 ACL 정보를 복사 합니다.</target>       </trans-unit>
        <trans-unit id="1265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetAccessControl(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.Directory.GetAccessControl%2A&gt;</ph> method to retrieve the <ph id="ph2">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph> object from the source file.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.IO.Directory.GetAccessControl%2A&gt;</ph> 를 검색할 메서드는 <ph id="ph2">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph> 소스 파일에서 개체입니다.</target>       </trans-unit>
        <trans-unit id="1266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetAccessControl(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>Create a new <ph id="ph1">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph> object for the destination file.</source>
          <target state="translated">새 <ph id="ph1">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph> 대상 파일에 대 한 개체입니다.</target>       </trans-unit>
        <trans-unit id="1267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetAccessControl(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>Use the <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A&gt;</ph> method of the source <ph id="ph3">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph> object to retrieve the ACL information.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A&gt;</ph> 원본의 메서드 <ph id="ph3">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph> ACL 정보를 검색 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="1268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetAccessControl(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>Use the <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A&gt;</ph> method to copy the information retrieved in step 3 to the destination <ph id="ph3">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph> object.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A&gt;</ph> 대상에 3 단계에서 검색 메서드 정보를 복사 하려면 <ph id="ph3">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="1269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetAccessControl(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>Set the destination <ph id="ph1">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph> object to the destination file using the <ph id="ph2">&lt;xref:System.IO.Directory.SetAccessControl%2A&gt;</ph> method.</source>
          <target state="translated">대상을 설정 <ph id="ph1">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph> 개체를 사용 하 여 대상 파일의 <ph id="ph2">&lt;xref:System.IO.Directory.SetAccessControl%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetAccessControl(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>In NTFS environments, <ph id="ph1">&lt;xref:System.Security.AccessControl.FileSystemRights.ReadAttributes&gt;</ph> and <ph id="ph2">&lt;xref:System.Security.AccessControl.FileSystemRights.ReadExtendedAttributes&gt;</ph> are granted to the user if the user has <ph id="ph3">&lt;xref:System.Security.AccessControl.FileSystemRights.ListDirectory&gt;</ph> rights on the parent folder.</source>
          <target state="translated">NTFS 환경에서 <ph id="ph1">&lt;xref:System.Security.AccessControl.FileSystemRights.ReadAttributes&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Security.AccessControl.FileSystemRights.ReadExtendedAttributes&gt;</ph> 사용자에 게 하는 경우 사용자에 게 권한이 부여 됩니다 <ph id="ph3">&lt;xref:System.Security.AccessControl.FileSystemRights.ListDirectory&gt;</ph> 부모 폴더에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="1271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetAccessControl(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>To deny <ph id="ph1">&lt;xref:System.Security.AccessControl.FileSystemRights.ReadAttributes&gt;</ph> and <ph id="ph2">&lt;xref:System.Security.AccessControl.FileSystemRights.ReadExtendedAttributes&gt;</ph>, deny <ph id="ph3">&lt;xref:System.Security.AccessControl.FileSystemRights.ListDirectory&gt;</ph> on the parent directory.</source>
          <target state="translated">거부 하려면 <ph id="ph1">&lt;xref:System.Security.AccessControl.FileSystemRights.ReadAttributes&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Security.AccessControl.FileSystemRights.ReadExtendedAttributes&gt;</ph>, 거부 <ph id="ph3">&lt;xref:System.Security.AccessControl.FileSystemRights.ListDirectory&gt;</ph> 부모 디렉터리에 있습니다.</target>       </trans-unit>
        <trans-unit id="1272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetAccessControl(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.IO.Directory.GetAccessControl%2A&gt;</ph> and the <ph id="ph2">&lt;xref:System.IO.Directory.SetAccessControl%2A&gt;</ph> methods to add an access control list (ACL) entry and then remove an ACL entry from a directory.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.IO.Directory.GetAccessControl%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.IO.Directory.SetAccessControl%2A&gt;</ph> 대 한 액세스 권한을 추가 하는 메서드 목록 (ACL) 항목을 제어 하 고 다음 디렉터리에서 ACL 항목을 제거 합니다.</target>       </trans-unit>
        <trans-unit id="1273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetAccessControl(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>You must supply a valid user or group account to run this example.</source>
          <target state="translated">이 예제를 실행하려면 유효한 사용자 또는 그룹 계정을 제공해야 합니다.</target>       </trans-unit>
        <trans-unit id="1274" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetAccessControl(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>The <ph id="ph1">&lt;paramref name="directorySecurity" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="directorySecurity" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="1275" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetAccessControl(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>The directory could not be found.</source>
          <target state="translated">디렉터리를 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1276" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetAccessControl(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>The <ph id="ph1">&lt;paramref name="path" /&gt;</ph> was invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="1277" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetAccessControl(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>The current process does not have access to the directory specified by <ph id="ph1">&lt;paramref name="path" /&gt;</ph>.</source>
          <target state="translated">현재 프로세스에 <ph id="ph1">&lt;paramref name="path" /&gt;</ph>에서 지정한 디렉터리에 액세스할 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="1278" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetAccessControl(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1279" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetAccessControl(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>The current process does not have sufficient privilege to set the ACL entry.</source>
          <target state="translated">현재 프로세스에 ACL 항목을 설정할 권한이 충분하지 않습니다.</target>       </trans-unit>
        <trans-unit id="1280" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetAccessControl(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>The current operating system is not Windows 2000 or later.</source>
          <target state="translated">현재 운영 체제가 Windows 2000 이상이 아닙니다.</target>       </trans-unit>
        <trans-unit id="1281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetAccessControl(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>for permission to enumerate access control list (ACL) for a directory.</source>
          <target state="translated">디렉터리에 대 한 액세스 제어 목록 (ACL)를 열거할 수 있는 권한입니다.</target>       </trans-unit>
        <trans-unit id="1282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetAccessControl(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" /&gt;</ph> , <ph id="ph2">&lt;see cref="F:System.Security.AccessControl.AccessControlActions.View" /&gt;</ph></source>
          <target state="translated">연관 된 열거형: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" /&gt;</ph> , <ph id="ph2">&lt;see cref="F:System.Security.AccessControl.AccessControlActions.View" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetAccessControl(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>Security action: Demand.</source>
          <target state="translated">보안 동작: 요청 합니다.</target>       </trans-unit>
        <trans-unit id="1284" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetCreationTime(System.String,System.DateTime)">
          <source>The file or directory for which to set the creation date and time information.</source>
          <target state="translated">만든 날짜와 시간 정보를 설정할 파일 또는 디렉터리입니다.</target>       </trans-unit>
        <trans-unit id="1285" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetCreationTime(System.String,System.DateTime)">
          <source>The date and time the file or directory was last written to.</source>
          <target state="translated">파일 또는 디렉터리를 마지막으로 쓴 날짜와 시간입니다.</target>       </trans-unit>
        <trans-unit id="1286" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetCreationTime(System.String,System.DateTime)">
          <source>This value is expressed in local time.</source>
          <target state="translated">이 값은 현지 시간으로 표현됩니다.</target>       </trans-unit>
        <trans-unit id="1287" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetCreationTime(System.String,System.DateTime)">
          <source>Sets the creation date and time for the specified file or directory.</source>
          <target state="translated">지정된 파일 또는 디렉터리에 대한 만든 날짜와 시간을 설정합니다.</target>       </trans-unit>
        <trans-unit id="1288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetCreationTime(System.String,System.DateTime)">
          <source>The <ph id="ph1">`path`</ph> parameter is permitted to specify relative or absolute path information.</source>
          <target state="translated"><ph id="ph1">`path`</ph> 상대 또는 절대 경로 정보를 지정 하기 위해 매개 변수는 허용 합니다.</target>       </trans-unit>
        <trans-unit id="1289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetCreationTime(System.String,System.DateTime)">
          <source>Relative path information is interpreted as relative to the current working directory.</source>
          <target state="translated">상대 경로 정보는 현재 작업 디렉터리에 상대적으로 해석 됩니다.</target>       </trans-unit>
        <trans-unit id="1290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetCreationTime(System.String,System.DateTime)">
          <source>To obtain the current working directory, see <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>.</source>
          <target state="translated">현재 작업 디렉터리를 가져오려면 참조 <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetCreationTime(System.String,System.DateTime)">
          <source>The <ph id="ph1">`path`</ph> parameter is not case-sensitive.</source>
          <target state="translated"><ph id="ph1">`path`</ph> 매개 변수는 대/소문자 구분 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="1292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetCreationTime(System.String,System.DateTime)">
          <source>The following example illustrates the differences in output when using Coordinated Universal Time (UTC) output.</source>
          <target state="translated">Utc (협정 세계시) 출력을 사용 하는 경우 다음 예제에서는 출력의 차이점을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1293" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetCreationTime(System.String,System.DateTime)">
          <source>The specified path was not found.</source>
          <target state="translated">지정된 경로를 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1294" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetCreationTime(System.String,System.DateTime)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 빈 문자열이거나, 공백만을 포함하거나, 하나 이상의 잘못된 문자를 포함합니다.</target>       </trans-unit>
        <trans-unit id="1295" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetCreationTime(System.String,System.DateTime)">
          <source>You can query for invalid characters with the  <ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1296" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetCreationTime(System.String,System.DateTime)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="1297" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetCreationTime(System.String,System.DateTime)">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</target>       </trans-unit>
        <trans-unit id="1298" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetCreationTime(System.String,System.DateTime)">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</source>
          <target state="translated">예를 들어 Windows 기반 플랫폼에서 경로는 248자 미만이어야 하고 파일 이름은 260자 미만이어야 합니다.</target>       </trans-unit>
        <trans-unit id="1299" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetCreationTime(System.String,System.DateTime)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="1300" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetCreationTime(System.String,System.DateTime)">
          <source><ph id="ph1">&lt;paramref name="creationTime" /&gt;</ph> specifies a value outside the range of dates or times permitted for this operation.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="creationTime" /&gt;</ph>에서 해당 작업에 허용된 날짜나 시간 범위를 벗어나는 값을 지정한 경우</target>       </trans-unit>
        <trans-unit id="1301" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetCreationTime(System.String,System.DateTime)">
          <source>The current operating system is not Windows NT or later.</source>
          <target state="translated">현재 운영 체제가 Windows NT 이상이 아닙니다.</target>       </trans-unit>
        <trans-unit id="1302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetCreationTime(System.String,System.DateTime)">
          <source>for writing to the specified file or directory.</source>
          <target state="translated">지정 된 파일 또는 디렉터리에 작성 합니다.</target>       </trans-unit>
        <trans-unit id="1303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetCreationTime(System.String,System.DateTime)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1304" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetCreationTimeUtc(System.String,System.DateTime)">
          <source>The file or directory for which to set the creation date and time information.</source>
          <target state="translated">만든 날짜와 시간 정보를 설정할 파일 또는 디렉터리입니다.</target>       </trans-unit>
        <trans-unit id="1305" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetCreationTimeUtc(System.String,System.DateTime)">
          <source>The date and time the directory or file was created.</source>
          <target state="translated">디렉터리 또는 파일이 만들어진 날짜와 시간입니다.</target>       </trans-unit>
        <trans-unit id="1306" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetCreationTimeUtc(System.String,System.DateTime)">
          <source>This value is expressed in local time.</source>
          <target state="translated">이 값은 현지 시간으로 표현됩니다.</target>       </trans-unit>
        <trans-unit id="1307" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetCreationTimeUtc(System.String,System.DateTime)">
          <source>Sets the creation date and time, in Coordinated Universal Time (UTC) format, for the specified file or directory.</source>
          <target state="translated">지정된 파일이나 디렉터리를 만든 날짜와 시간을 UTC(Coordinated Universal Time) 형식으로 설정합니다.</target>       </trans-unit>
        <trans-unit id="1308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetCreationTimeUtc(System.String,System.DateTime)">
          <source>The <ph id="ph1">`path`</ph> parameter is permitted to specify relative or absolute path information.</source>
          <target state="translated"><ph id="ph1">`path`</ph> 상대 또는 절대 경로 정보를 지정 하기 위해 매개 변수는 허용 합니다.</target>       </trans-unit>
        <trans-unit id="1309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetCreationTimeUtc(System.String,System.DateTime)">
          <source>Relative path information is interpreted as relative to the current working directory.</source>
          <target state="translated">상대 경로 정보는 현재 작업 디렉터리에 상대적으로 해석 됩니다.</target>       </trans-unit>
        <trans-unit id="1310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetCreationTimeUtc(System.String,System.DateTime)">
          <source>To obtain the current working directory, see <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>.</source>
          <target state="translated">현재 작업 디렉터리를 가져오려면 참조 <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetCreationTimeUtc(System.String,System.DateTime)">
          <source>The <ph id="ph1">`path`</ph> parameter is not case-sensitive.</source>
          <target state="translated"><ph id="ph1">`path`</ph> 매개 변수는 대/소문자 구분 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="1312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetCreationTimeUtc(System.String,System.DateTime)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">공통적인 I/O 작업의 목록에 대 한 참조 <bpt id="p1">[</bpt>공통적인 I/O 작업<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1313" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetCreationTimeUtc(System.String,System.DateTime)">
          <source>The specified path was not found.</source>
          <target state="translated">지정된 경로를 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1314" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetCreationTimeUtc(System.String,System.DateTime)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 빈 문자열이거나, 공백만을 포함하거나, 하나 이상의 잘못된 문자를 포함합니다.</target>       </trans-unit>
        <trans-unit id="1315" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetCreationTimeUtc(System.String,System.DateTime)">
          <source>You can query for invalid characters with the  <ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1316" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetCreationTimeUtc(System.String,System.DateTime)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="1317" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetCreationTimeUtc(System.String,System.DateTime)">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</target>       </trans-unit>
        <trans-unit id="1318" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetCreationTimeUtc(System.String,System.DateTime)">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</source>
          <target state="translated">예를 들어 Windows 기반 플랫폼에서 경로는 248자 미만이어야 하고 파일 이름은 260자 미만이어야 합니다.</target>       </trans-unit>
        <trans-unit id="1319" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetCreationTimeUtc(System.String,System.DateTime)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="1320" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetCreationTimeUtc(System.String,System.DateTime)">
          <source><ph id="ph1">&lt;paramref name="creationTime" /&gt;</ph> specifies a value outside the range of dates or times permitted for this operation.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="creationTime" /&gt;</ph>에서 해당 작업에 허용된 날짜나 시간 범위를 벗어나는 값을 지정한 경우</target>       </trans-unit>
        <trans-unit id="1321" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetCreationTimeUtc(System.String,System.DateTime)">
          <source>The current operating system is not Windows NT or later.</source>
          <target state="translated">현재 운영 체제가 Windows NT 이상이 아닙니다.</target>       </trans-unit>
        <trans-unit id="1322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetCreationTimeUtc(System.String,System.DateTime)">
          <source>for writing to the specified file or directory.</source>
          <target state="translated">지정 된 파일 또는 디렉터리에 작성 합니다.</target>       </trans-unit>
        <trans-unit id="1323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetCreationTimeUtc(System.String,System.DateTime)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1324" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetCurrentDirectory(System.String)">
          <source>The path to which the current working directory is set.</source>
          <target state="translated">현재 작업 디렉터리로 설정될 경로입니다.</target>       </trans-unit>
        <trans-unit id="1325" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetCurrentDirectory(System.String)">
          <source>Sets the application's current working directory to the specified directory.</source>
          <target state="translated">응용 프로그램의 현재 작업 디렉터리를 지정된 디렉터리로 설정합니다.</target>       </trans-unit>
        <trans-unit id="1326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetCurrentDirectory(System.String)">
          <source>When the application terminates, the working directory is restored to its original location (the directory where the process was started).</source>
          <target state="translated">응용 프로그램이 종료 될 때 작업 디렉터리 (프로세스가 시작 된 디렉터리) 원래 위치로 복원 됩니다.</target>       </trans-unit>
        <trans-unit id="1327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetCurrentDirectory(System.String)">
          <source>The <ph id="ph1">`path`</ph> parameter is permitted to specify relative or absolute path information.</source>
          <target state="translated"><ph id="ph1">`path`</ph> 상대 또는 절대 경로 정보를 지정 하기 위해 매개 변수는 허용 합니다.</target>       </trans-unit>
        <trans-unit id="1328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetCurrentDirectory(System.String)">
          <source>Relative path information is interpreted as relative to the current working directory.</source>
          <target state="translated">상대 경로 정보는 현재 작업 디렉터리에 상대적으로 해석 됩니다.</target>       </trans-unit>
        <trans-unit id="1329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetCurrentDirectory(System.String)">
          <source>To obtain the current working directory, see <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>.</source>
          <target state="translated">현재 작업 디렉터리를 가져오려면 참조 <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetCurrentDirectory(System.String)">
          <source>Trailing spaces are removed from the end of the <ph id="ph1">`path`</ph> parameter before setting the directory.</source>
          <target state="translated">끝에서 후행 공백을 제거는 <ph id="ph1">`path`</ph> 디렉터리를 설정 하기 전에 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="1331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetCurrentDirectory(System.String)">
          <source>The <ph id="ph1">`path`</ph> parameter is not case-sensitive.</source>
          <target state="translated"><ph id="ph1">`path`</ph> 매개 변수는 대/소문자 구분 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="1332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetCurrentDirectory(System.String)">
          <source>If you are setting the directory to a drive with removable media (for example, to "A:" for a floppy disk drive or "E:" for a CD-ROM drive), you can determine whether the drive is ready by using the <ph id="ph1">&lt;xref:System.IO.DriveInfo.IsReady%2A&gt;</ph> property.</source>
          <target state="translated">예를 들어 ("a:" 플로피 디스크 드라이브) 또는 "E" CD-ROM 드라이브에 대 한 이동식 미디어 드라이브에 디렉터리를 설정 하는 경우 사용 하 여 드라이브 준비 되었는지 여부를 확인할 수 있습니다는 <ph id="ph1">&lt;xref:System.IO.DriveInfo.IsReady%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetCurrentDirectory(System.String)">
          <source>The following example illustrates how to set the current directory and display the directory root.</source>
          <target state="translated">다음 예제에는 현재 디렉터리를 설정 하 고 루트 디렉터리를 표시 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1334" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetCurrentDirectory(System.String)">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="1335" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetCurrentDirectory(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 빈 문자열이거나, 공백만을 포함하거나, 하나 이상의 잘못된 문자를 포함합니다.</target>       </trans-unit>
        <trans-unit id="1336" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetCurrentDirectory(System.String)">
          <source>You can query for invalid characters with the  <ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1337" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetCurrentDirectory(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="1338" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetCurrentDirectory(System.String)">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</target>       </trans-unit>
        <trans-unit id="1339" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetCurrentDirectory(System.String)">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</source>
          <target state="translated">예를 들어 Windows 기반 플랫폼에서 경로는 248자 미만이어야 하고 파일 이름은 260자 미만이어야 합니다.</target>       </trans-unit>
        <trans-unit id="1340" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetCurrentDirectory(System.String)">
          <source>The caller does not have the required permission to access unmanaged code.</source>
          <target state="translated">호출자에게 관리되지 않는 코드에 액세스하는 데 필요한 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="1341" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetCurrentDirectory(System.String)">
          <source>The specified path was not found.</source>
          <target state="translated">지정된 경로를 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1342" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetCurrentDirectory(System.String)">
          <source>The specified directory was not found.</source>
          <target state="translated">지정된 디렉터리가 없습니다.</target>       </trans-unit>
        <trans-unit id="1343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetCurrentDirectory(System.String)">
          <source>for writing to files or directories.</source>
          <target state="translated">파일이 나 디렉터리에 작성 합니다.</target>       </trans-unit>
        <trans-unit id="1344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetCurrentDirectory(System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetCurrentDirectory(System.String)">
          <source>for calling unmanaged code.</source>
          <target state="translated">비관리 코드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="1346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetCurrentDirectory(System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1347" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetLastAccessTime(System.String,System.DateTime)">
          <source>The file or directory for which to set the access date and time information.</source>
          <target state="translated">액세스 날짜와 시간 정보를 설정할 파일 또는 디렉터리입니다.</target>       </trans-unit>
        <trans-unit id="1348" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetLastAccessTime(System.String,System.DateTime)">
          <source>An object that contains the value to set for the access date and time of <bpt id="p1">&lt;c&gt;</bpt>path<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>경로<ept id="p1">&lt;/c&gt;</ept>의 액세스 날짜와 시간을 설정할 값을 포함하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="1349" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetLastAccessTime(System.String,System.DateTime)">
          <source>This value is expressed in local time.</source>
          <target state="translated">이 값은 현지 시간으로 표현됩니다.</target>       </trans-unit>
        <trans-unit id="1350" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetLastAccessTime(System.String,System.DateTime)">
          <source>Sets the date and time the specified file or directory was last accessed.</source>
          <target state="translated">지정된 파일 또는 디렉터리를 마지막으로 액세스한 날짜와 시간을 설정합니다.</target>       </trans-unit>
        <trans-unit id="1351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetLastAccessTime(System.String,System.DateTime)">
          <source>The <ph id="ph1">`path`</ph> parameter is permitted to specify relative or absolute path information.</source>
          <target state="translated"><ph id="ph1">`path`</ph> 상대 또는 절대 경로 정보를 지정 하기 위해 매개 변수는 허용 합니다.</target>       </trans-unit>
        <trans-unit id="1352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetLastAccessTime(System.String,System.DateTime)">
          <source>Relative path information is interpreted as relative to the current working directory.</source>
          <target state="translated">상대 경로 정보는 현재 작업 디렉터리에 상대적으로 해석 됩니다.</target>       </trans-unit>
        <trans-unit id="1353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetLastAccessTime(System.String,System.DateTime)">
          <source>To obtain the current working directory, see <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>.</source>
          <target state="translated">현재 작업 디렉터리를 가져오려면 참조 <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetLastAccessTime(System.String,System.DateTime)">
          <source>The <ph id="ph1">`path`</ph> parameter is not case-sensitive.</source>
          <target state="translated"><ph id="ph1">`path`</ph> 매개 변수는 대/소문자 구분 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="1355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetLastAccessTime(System.String,System.DateTime)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">공통적인 I/O 작업의 목록에 대 한 참조 <bpt id="p1">[</bpt>공통적인 I/O 작업<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetLastAccessTime(System.String,System.DateTime)">
          <source>The following example demonstrates how to use <ph id="ph1">`SetLastAccessTime`</ph>.</source>
          <target state="translated">다음 예제에서는 사용 하는 방법을 <ph id="ph1">`SetLastAccessTime`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1357" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetLastAccessTime(System.String,System.DateTime)">
          <source>The specified path was not found.</source>
          <target state="translated">지정된 경로를 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1358" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetLastAccessTime(System.String,System.DateTime)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 빈 문자열이거나, 공백만을 포함하거나, 하나 이상의 잘못된 문자를 포함합니다.</target>       </trans-unit>
        <trans-unit id="1359" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetLastAccessTime(System.String,System.DateTime)">
          <source>You can query for invalid characters with the  <ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1360" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetLastAccessTime(System.String,System.DateTime)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="1361" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetLastAccessTime(System.String,System.DateTime)">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</target>       </trans-unit>
        <trans-unit id="1362" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetLastAccessTime(System.String,System.DateTime)">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</source>
          <target state="translated">예를 들어 Windows 기반 플랫폼에서 경로는 248자 미만이어야 하고 파일 이름은 260자 미만이어야 합니다.</target>       </trans-unit>
        <trans-unit id="1363" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetLastAccessTime(System.String,System.DateTime)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="1364" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetLastAccessTime(System.String,System.DateTime)">
          <source>The current operating system is not Windows NT or later.</source>
          <target state="translated">현재 운영 체제가 Windows NT 이상이 아닙니다.</target>       </trans-unit>
        <trans-unit id="1365" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetLastAccessTime(System.String,System.DateTime)">
          <source><ph id="ph1">&lt;paramref name="lastAccessTime" /&gt;</ph> specifies a value outside the range of dates or times permitted for this operation.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="lastAccessTime" /&gt;</ph>에서 해당 작업에 허용된 날짜나 시간 범위를 벗어나는 값을 지정한 경우</target>       </trans-unit>
        <trans-unit id="1366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetLastAccessTime(System.String,System.DateTime)">
          <source>for writing to the specified file or directory.</source>
          <target state="translated">지정 된 파일 또는 디렉터리에 작성 합니다.</target>       </trans-unit>
        <trans-unit id="1367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetLastAccessTime(System.String,System.DateTime)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1368" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetLastAccessTimeUtc(System.String,System.DateTime)">
          <source>The file or directory for which to set the access date and time information.</source>
          <target state="translated">액세스 날짜와 시간 정보를 설정할 파일 또는 디렉터리입니다.</target>       </trans-unit>
        <trans-unit id="1369" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetLastAccessTimeUtc(System.String,System.DateTime)">
          <source>An object that  contains the value to set for the access date and time of <bpt id="p1">&lt;c&gt;</bpt>path<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>경로<ept id="p1">&lt;/c&gt;</ept>의 액세스 날짜와 시간을 설정할 값을 포함하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="1370" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetLastAccessTimeUtc(System.String,System.DateTime)">
          <source>This value is expressed in UTC time.</source>
          <target state="translated">이 값은 UTC 시간으로 표현됩니다.</target>       </trans-unit>
        <trans-unit id="1371" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetLastAccessTimeUtc(System.String,System.DateTime)">
          <source>Sets the date and time, in Coordinated Universal Time (UTC) format, that the specified file or directory was last accessed.</source>
          <target state="translated">지정된 파일 또는 디렉터리에 마지막으로 액세스한 날짜와 시간을 UTC(Coordinated Universal Time) 형식으로 설정합니다.</target>       </trans-unit>
        <trans-unit id="1372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetLastAccessTimeUtc(System.String,System.DateTime)">
          <source>The <ph id="ph1">`path`</ph> parameter is permitted to specify relative or absolute path information.</source>
          <target state="translated"><ph id="ph1">`path`</ph> 상대 또는 절대 경로 정보를 지정 하기 위해 매개 변수는 허용 합니다.</target>       </trans-unit>
        <trans-unit id="1373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetLastAccessTimeUtc(System.String,System.DateTime)">
          <source>Relative path information is interpreted as relative to the current working directory.</source>
          <target state="translated">상대 경로 정보는 현재 작업 디렉터리에 상대적으로 해석 됩니다.</target>       </trans-unit>
        <trans-unit id="1374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetLastAccessTimeUtc(System.String,System.DateTime)">
          <source>To obtain the current working directory, see <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>.</source>
          <target state="translated">현재 작업 디렉터리를 가져오려면 참조 <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetLastAccessTimeUtc(System.String,System.DateTime)">
          <source>The <ph id="ph1">`path`</ph> parameter is not case-sensitive.</source>
          <target state="translated"><ph id="ph1">`path`</ph> 매개 변수는 대/소문자 구분 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="1376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetLastAccessTimeUtc(System.String,System.DateTime)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">공통적인 I/O 작업의 목록에 대 한 참조 <bpt id="p1">[</bpt>공통적인 I/O 작업<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetLastAccessTimeUtc(System.String,System.DateTime)">
          <source>The following example illustrates the differences in output when using Coordinated Universal Time (UTC) output.</source>
          <target state="translated">Utc (협정 세계시) 출력을 사용 하는 경우 다음 예제에서는 출력의 차이점을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1378" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetLastAccessTimeUtc(System.String,System.DateTime)">
          <source>The specified path was not found.</source>
          <target state="translated">지정된 경로를 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1379" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetLastAccessTimeUtc(System.String,System.DateTime)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 빈 문자열이거나, 공백만을 포함하거나, 하나 이상의 잘못된 문자를 포함합니다.</target>       </trans-unit>
        <trans-unit id="1380" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetLastAccessTimeUtc(System.String,System.DateTime)">
          <source>You can query for invalid characters with the  <ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1381" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetLastAccessTimeUtc(System.String,System.DateTime)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="1382" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetLastAccessTimeUtc(System.String,System.DateTime)">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</target>       </trans-unit>
        <trans-unit id="1383" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetLastAccessTimeUtc(System.String,System.DateTime)">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</source>
          <target state="translated">예를 들어 Windows 기반 플랫폼에서 경로는 248자 미만이어야 하고 파일 이름은 260자 미만이어야 합니다.</target>       </trans-unit>
        <trans-unit id="1384" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetLastAccessTimeUtc(System.String,System.DateTime)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="1385" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetLastAccessTimeUtc(System.String,System.DateTime)">
          <source>The current operating system is not Windows NT or later.</source>
          <target state="translated">현재 운영 체제가 Windows NT 이상이 아닙니다.</target>       </trans-unit>
        <trans-unit id="1386" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetLastAccessTimeUtc(System.String,System.DateTime)">
          <source><ph id="ph1">&lt;paramref name="lastAccessTimeUtc" /&gt;</ph> specifies a value outside the range of dates or times permitted for this operation.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="lastAccessTimeUtc" /&gt;</ph>에서 해당 작업에 허용된 날짜나 시간 범위를 벗어나는 값을 지정한 경우</target>       </trans-unit>
        <trans-unit id="1387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetLastAccessTimeUtc(System.String,System.DateTime)">
          <source>for writing to the specified file or directory.</source>
          <target state="translated">지정 된 파일 또는 디렉터리에 작성 합니다.</target>       </trans-unit>
        <trans-unit id="1388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetLastAccessTimeUtc(System.String,System.DateTime)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1389" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetLastWriteTime(System.String,System.DateTime)">
          <source>The path of the directory.</source>
          <target state="translated">디렉터리 경로입니다.</target>       </trans-unit>
        <trans-unit id="1390" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetLastWriteTime(System.String,System.DateTime)">
          <source>The date and time the directory was last written to.</source>
          <target state="translated">디렉터리를 마지막으로 쓴 날짜와 시간입니다.</target>       </trans-unit>
        <trans-unit id="1391" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetLastWriteTime(System.String,System.DateTime)">
          <source>This value is expressed in local time.</source>
          <target state="translated">이 값은 현지 시간으로 표현됩니다.</target>       </trans-unit>
        <trans-unit id="1392" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetLastWriteTime(System.String,System.DateTime)">
          <source>Sets the date and time a directory was last written to.</source>
          <target state="translated">디렉터리를 마지막으로 쓴 날짜와 시간을 설정합니다.</target>       </trans-unit>
        <trans-unit id="1393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetLastWriteTime(System.String,System.DateTime)">
          <source>The <ph id="ph1">`path`</ph> parameter is permitted to specify relative or absolute path information.</source>
          <target state="translated"><ph id="ph1">`path`</ph> 상대 또는 절대 경로 정보를 지정 하기 위해 매개 변수는 허용 합니다.</target>       </trans-unit>
        <trans-unit id="1394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetLastWriteTime(System.String,System.DateTime)">
          <source>Relative path information is interpreted as relative to the current working directory.</source>
          <target state="translated">상대 경로 정보는 현재 작업 디렉터리에 상대적으로 해석 됩니다.</target>       </trans-unit>
        <trans-unit id="1395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetLastWriteTime(System.String,System.DateTime)">
          <source>To obtain the current working directory, see <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>.</source>
          <target state="translated">현재 작업 디렉터리를 가져오려면 참조 <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetLastWriteTime(System.String,System.DateTime)">
          <source>The <ph id="ph1">`path`</ph> parameter is not case-sensitive.</source>
          <target state="translated"><ph id="ph1">`path`</ph> 매개 변수는 대/소문자 구분 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="1397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetLastWriteTime(System.String,System.DateTime)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">공통적인 I/O 작업의 목록에 대 한 참조 <bpt id="p1">[</bpt>공통적인 I/O 작업<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetLastWriteTime(System.String,System.DateTime)">
          <source>The following example demonstrates how to use <ph id="ph1">`SetLastWriteTime`</ph>.</source>
          <target state="translated">다음 예제에서는 사용 하는 방법을 <ph id="ph1">`SetLastWriteTime`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1399" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetLastWriteTime(System.String,System.DateTime)">
          <source>The specified path was not found.</source>
          <target state="translated">지정된 경로를 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1400" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetLastWriteTime(System.String,System.DateTime)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 빈 문자열이거나, 공백만을 포함하거나, 하나 이상의 잘못된 문자를 포함합니다.</target>       </trans-unit>
        <trans-unit id="1401" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetLastWriteTime(System.String,System.DateTime)">
          <source>You can query for invalid characters with the  <ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1402" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetLastWriteTime(System.String,System.DateTime)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="1403" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetLastWriteTime(System.String,System.DateTime)">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</target>       </trans-unit>
        <trans-unit id="1404" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetLastWriteTime(System.String,System.DateTime)">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</source>
          <target state="translated">예를 들어 Windows 기반 플랫폼에서 경로는 248자 미만이어야 하고 파일 이름은 260자 미만이어야 합니다.</target>       </trans-unit>
        <trans-unit id="1405" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetLastWriteTime(System.String,System.DateTime)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="1406" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetLastWriteTime(System.String,System.DateTime)">
          <source>The current operating system is not Windows NT or later.</source>
          <target state="translated">현재 운영 체제가 Windows NT 이상이 아닙니다.</target>       </trans-unit>
        <trans-unit id="1407" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetLastWriteTime(System.String,System.DateTime)">
          <source><ph id="ph1">&lt;paramref name="lastWriteTime" /&gt;</ph> specifies a value outside the range of dates or times permitted for this operation.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="lastWriteTime" /&gt;</ph>에서 해당 작업에 허용된 날짜나 시간 범위를 벗어나는 값을 지정한 경우</target>       </trans-unit>
        <trans-unit id="1408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetLastWriteTime(System.String,System.DateTime)">
          <source>for writing to the specified file or directory.</source>
          <target state="translated">지정 된 파일 또는 디렉터리에 작성 합니다.</target>       </trans-unit>
        <trans-unit id="1409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetLastWriteTime(System.String,System.DateTime)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1410" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetLastWriteTimeUtc(System.String,System.DateTime)">
          <source>The path of the directory.</source>
          <target state="translated">디렉터리 경로입니다.</target>       </trans-unit>
        <trans-unit id="1411" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetLastWriteTimeUtc(System.String,System.DateTime)">
          <source>The date and time the directory was last written to.</source>
          <target state="translated">디렉터리를 마지막으로 쓴 날짜와 시간입니다.</target>       </trans-unit>
        <trans-unit id="1412" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetLastWriteTimeUtc(System.String,System.DateTime)">
          <source>This value is expressed in UTC time.</source>
          <target state="translated">이 값은 UTC 시간으로 표현됩니다.</target>       </trans-unit>
        <trans-unit id="1413" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetLastWriteTimeUtc(System.String,System.DateTime)">
          <source>Sets the date and time, in Coordinated Universal Time (UTC) format, that a directory was last written to.</source>
          <target state="translated">디렉터리에 마지막으로 쓴 날짜와 시간을 UTC(Coordinated Universal Time) 형식으로 설정합니다.</target>       </trans-unit>
        <trans-unit id="1414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetLastWriteTimeUtc(System.String,System.DateTime)">
          <source>The <ph id="ph1">`path`</ph> parameter is permitted to specify relative or absolute path information.</source>
          <target state="translated"><ph id="ph1">`path`</ph> 상대 또는 절대 경로 정보를 지정 하기 위해 매개 변수는 허용 합니다.</target>       </trans-unit>
        <trans-unit id="1415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetLastWriteTimeUtc(System.String,System.DateTime)">
          <source>Relative path information is interpreted as relative to the current working directory.</source>
          <target state="translated">상대 경로 정보는 현재 작업 디렉터리에 상대적으로 해석 됩니다.</target>       </trans-unit>
        <trans-unit id="1416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetLastWriteTimeUtc(System.String,System.DateTime)">
          <source>To obtain the current working directory, see <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>.</source>
          <target state="translated">현재 작업 디렉터리를 가져오려면 참조 <ph id="ph1">&lt;xref:System.IO.Directory.GetCurrentDirectory%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetLastWriteTimeUtc(System.String,System.DateTime)">
          <source>The <ph id="ph1">`path`</ph> parameter is not case-sensitive.</source>
          <target state="translated"><ph id="ph1">`path`</ph> 매개 변수는 대/소문자 구분 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="1418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetLastWriteTimeUtc(System.String,System.DateTime)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">공통적인 I/O 작업의 목록에 대 한 참조 <bpt id="p1">[</bpt>공통적인 I/O 작업<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetLastWriteTimeUtc(System.String,System.DateTime)">
          <source>The following example illustrates the differences in output when using Coordinated Universal Time (UTC) output.</source>
          <target state="translated">Utc (협정 세계시) 출력을 사용 하는 경우 다음 예제에서는 출력의 차이점을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1420" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetLastWriteTimeUtc(System.String,System.DateTime)">
          <source>The specified path was not found.</source>
          <target state="translated">지정된 경로를 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1421" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetLastWriteTimeUtc(System.String,System.DateTime)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 빈 문자열이거나, 공백만을 포함하거나, 하나 이상의 잘못된 문자를 포함합니다.</target>       </trans-unit>
        <trans-unit id="1422" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetLastWriteTimeUtc(System.String,System.DateTime)">
          <source>You can query for invalid characters with the  <ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> 메서드를 사용하여 잘못된 문자를 쿼리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1423" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetLastWriteTimeUtc(System.String,System.DateTime)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="1424" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetLastWriteTimeUtc(System.String,System.DateTime)">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</target>       </trans-unit>
        <trans-unit id="1425" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetLastWriteTimeUtc(System.String,System.DateTime)">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.</source>
          <target state="translated">예를 들어 Windows 기반 플랫폼에서 경로는 248자 미만이어야 하고 파일 이름은 260자 미만이어야 합니다.</target>       </trans-unit>
        <trans-unit id="1426" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetLastWriteTimeUtc(System.String,System.DateTime)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="1427" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetLastWriteTimeUtc(System.String,System.DateTime)">
          <source>The current operating system is not Windows NT or later.</source>
          <target state="translated">현재 운영 체제가 Windows NT 이상이 아닙니다.</target>       </trans-unit>
        <trans-unit id="1428" translate="yes" xml:space="preserve" uid="M:System.IO.Directory.SetLastWriteTimeUtc(System.String,System.DateTime)">
          <source><ph id="ph1">&lt;paramref name="lastWriteTimeUtc" /&gt;</ph> specifies a value outside the range of dates or times permitted for this operation.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="lastWriteTimeUtc" /&gt;</ph>에서 해당 작업에 허용된 날짜나 시간 범위를 벗어나는 값을 지정한 경우</target>       </trans-unit>
        <trans-unit id="1429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetLastWriteTimeUtc(System.String,System.DateTime)">
          <source>for writing to the specified file or directory.</source>
          <target state="translated">지정 된 파일 또는 디렉터리에 작성 합니다.</target>       </trans-unit>
        <trans-unit id="1430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Directory.SetLastWriteTimeUtc(System.String,System.DateTime)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>