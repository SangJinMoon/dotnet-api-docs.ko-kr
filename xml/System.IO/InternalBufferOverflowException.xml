<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="InternalBufferOverflowException.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d302fb9fa155b4a2a1109ae7ee326321d6b25975.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d302fb9fa155b4a2a1109ae7ee326321d6b25975</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IO.InternalBufferOverflowException">
          <source>The exception thrown when the internal buffer overflows.</source>
          <target state="translated">내부 버퍼 오버플로가 발생한 경우에 throw되는 예외입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.InternalBufferOverflowException">
          <source>In a <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>, when you are notified of file changes, the system stores those changes in a buffer the component creates and passes to the Application Programming Interfaces (APIs).</source>
          <target state="translated">에 <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher&gt;</ph>시스템 저장소 버퍼는 구성 요소에서 해당 변경 내용을 만들고 응용 프로그래밍 인터페이스 (Api)에 전달 하는 파일 변경의 알림을 받으면, 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.InternalBufferOverflowException">
          <source>If there are many changes in a short time, the buffer can easily overflow, resulting in an exception being thrown, which essentially loses all changes.</source>
          <target state="translated">짧은 시간 동안 많은 변경 된 경우 버퍼 수 오버플로에 기본적으로 모든 변경 내용을 취소 하면 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.InternalBufferOverflowException">
          <source>To keep the buffer from overflowing, use the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.NotifyFilter%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A?displayProperty=nameWithType&gt;</ph> properties to filter out your unwanted change notifications.</source>
          <target state="translated">버퍼의 오버플로 유지 하기 위해 사용 하 여는 <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.NotifyFilter%2A?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A?displayProperty=nameWithType&gt;</ph> 속성을 원하지 않는 변경 알림은 필터를 사용해 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.InternalBufferOverflowException">
          <source>You can also increase the size of the internal buffer through the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.InternalBufferSize%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.InternalBufferSize%2A?displayProperty=nameWithType&gt;</ph> 속성을 통해 내부 버퍼의 크기를 늘릴 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.InternalBufferOverflowException">
          <source>However, increasing the size of the buffer is expensive, so keep the buffer as small as possible.</source>
          <target state="translated">그러나 버퍼의 크기를 늘리는 하는 것은 비용이 많이 드는, 따라서 버퍼를 가능한 한 작게 유지 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.InternalBufferOverflowException">
          <source>The following example shows how to create a FileSystemWatcher to monitor file changes (creates, deletes, renames, changes) occurring on a disk drive.</source>
          <target state="translated">다음 예제에는 파일 변경 내용을 모니터링 하기 FileSystemWatcher를 만드는 방법을 보여 줍니다 (, 삭제, 이름 바꾸기, 변경과) 디스크 드라이브에서 발생 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.InternalBufferOverflowException">
          <source>The example also shows how to properly receive error notifications.</source>
          <target state="translated">이 예제에는 오류 알림을 받는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="T:System.IO.InternalBufferOverflowException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.InternalBufferOverflowException" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.InternalBufferOverflowException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.IO.InternalBufferOverflowException.#ctor">
          <source>Initializes a new default instance of the <ph id="ph1">&lt;see cref="T:System.IO.InternalBufferOverflowException" /&gt;</ph> class.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.IO.InternalBufferOverflowException" /&gt;</ph> 클래스의 새로운 기본 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.InternalBufferOverflowException.#ctor">
          <source>These constructors are used by the component to signify an error.</source>
          <target state="translated">이 생성자는 구성 요소에 의해에서 오류를 나타내는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.InternalBufferOverflowException.#ctor">
          <source>Only use them if extending the class or the .NET Framework.</source>
          <target state="translated">경우에 사용 클래스 또는.NET Framework를 확장 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.InternalBufferOverflowException.#ctor">
          <source>This exception indicates an internal buffer has overflowed and users should take appropriate steps in their code to ensure it recovers properly.</source>
          <target state="translated">이 예외는 내부 버퍼가 오버플로 되었습니다 및 제대로 복구 되도록 자신의 코드에 적절 한 단계를 수행 해야 사용자가 나타냅니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.InternalBufferOverflowException.#ctor">
          <source>The cause of the overflow is often too many changes in a short period of time, causing the internal notification buffer to overflow.</source>
          <target state="translated">오버플로의 원인을 종종 너무 많이 변경 된 짧은 기간 알림 내부 버퍼 오버플로가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.InternalBufferOverflowException.#ctor">
          <source>To resolve this, use the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.NotifyFilter%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A?displayProperty=nameWithType&gt;</ph> properties to filter out unwanted change notifications.</source>
          <target state="translated">이 문제를 해결 하려면 사용 된 <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.NotifyFilter%2A?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A?displayProperty=nameWithType&gt;</ph> 원치 않는 필터링 할 속성 변경 알림을 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.InternalBufferOverflowException.#ctor">
          <source>You can also increase the size of the internal buffer through the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.InternalBufferSize%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.InternalBufferSize%2A?displayProperty=nameWithType&gt;</ph> 속성을 통해 내부 버퍼의 크기를 늘릴 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.InternalBufferOverflowException.#ctor">
          <source>However, increasing the size of the buffer is expensive, so keep the buffer as small as possible.</source>
          <target state="translated">그러나 버퍼의 크기를 늘리는 하는 것은 비용이 많이 드는, 따라서 버퍼를 가능한 한 작게 유지 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.IO.InternalBufferOverflowException.#ctor(System.String)">
          <source>The message to be given for the exception.</source>
          <target state="translated">예외가 발생할 경우 표시될 메시지입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.IO.InternalBufferOverflowException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.InternalBufferOverflowException" /&gt;</ph> class with the error message to be displayed specified.</source>
          <target state="translated">표시될 오류 메시지를 지정한 상태에서 <ph id="ph1">&lt;see cref="T:System.IO.InternalBufferOverflowException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.InternalBufferOverflowException.#ctor(System.String)">
          <source>These constructors are used by the component to signify an error.</source>
          <target state="translated">이 생성자는 구성 요소에 의해에서 오류를 나타내는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.InternalBufferOverflowException.#ctor(System.String)">
          <source>Only use them if extending the class or the .NET Framework.</source>
          <target state="translated">경우에 사용 클래스 또는.NET Framework를 확장 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.InternalBufferOverflowException.#ctor(System.String)">
          <source>This exception indicates an internal buffer has overflowed and users should take appropriate steps in their code to ensure it recovers properly.</source>
          <target state="translated">이 예외는 내부 버퍼가 오버플로 되었습니다 및 제대로 복구 되도록 자신의 코드에 적절 한 단계를 수행 해야 사용자가 나타냅니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.InternalBufferOverflowException.#ctor(System.String)">
          <source>The cause of the overflow is often too many changes in a short period of time, causing the internal notification buffer to overflow.</source>
          <target state="translated">오버플로의 원인을 종종 너무 많이 변경 된 짧은 기간 알림 내부 버퍼 오버플로가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.InternalBufferOverflowException.#ctor(System.String)">
          <source>To resolve this, use the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.NotifyFilter%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A?displayProperty=nameWithType&gt;</ph> properties to filter out unwanted change notifications.</source>
          <target state="translated">이 문제를 해결 하려면 사용 된 <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.NotifyFilter%2A?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A?displayProperty=nameWithType&gt;</ph> 원치 않는 필터링 할 속성 변경 알림을 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.InternalBufferOverflowException.#ctor(System.String)">
          <source>You can also increase the size of the internal buffer through the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.InternalBufferSize%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.InternalBufferSize%2A?displayProperty=nameWithType&gt;</ph> 속성을 통해 내부 버퍼의 크기를 늘릴 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.InternalBufferOverflowException.#ctor(System.String)">
          <source>However, increasing the size of the buffer is expensive, so keep the buffer as small as possible.</source>
          <target state="translated">그러나 버퍼의 크기를 늘리는 하는 것은 비용이 많이 드는, 따라서 버퍼를 가능한 한 작게 유지 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.IO.InternalBufferOverflowException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The information required to serialize the T:System.IO.InternalBufferOverflowException object.</source>
          <target state="translated">T:System.IO.InternalBufferOverflowException 개체를 serialize하는 데 필요한 정보입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.IO.InternalBufferOverflowException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The source and destination of the serialized stream associated with the T:System.IO.InternalBufferOverflowException object.</source>
          <target state="translated">T:System.IO.InternalBufferOverflowException 개체와 관련되어 있는 serialize된 스트림의 소스와 대상입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.IO.InternalBufferOverflowException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new, empty instance of the <ph id="ph1">&lt;see cref="T:System.IO.InternalBufferOverflowException" /&gt;</ph> class that is serializable using the specified <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> objects.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.IO.InternalBufferOverflowException" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> 개체를 사용하여 serialize할 수 있는 <ph id="ph3">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> 클래스의 비어 있는 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.IO.InternalBufferOverflowException.#ctor(System.String,System.Exception)">
          <source>The message to be given for the exception.</source>
          <target state="translated">예외가 발생할 경우 표시될 메시지입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.IO.InternalBufferOverflowException.#ctor(System.String,System.Exception)">
          <source>The inner exception.</source>
          <target state="translated">내부 예외입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.IO.InternalBufferOverflowException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.InternalBufferOverflowException" /&gt;</ph> class with the message to be displayed and the generated inner exception specified.</source>
          <target state="translated">표시될 메시지 및 생성되는 내부 예외를 지정한 상태에서 <ph id="ph1">&lt;see cref="T:System.IO.InternalBufferOverflowException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.InternalBufferOverflowException.#ctor(System.String,System.Exception)">
          <source>These constructors are used by the component to signify an error.</source>
          <target state="translated">이 생성자는 구성 요소에 의해에서 오류를 나타내는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.InternalBufferOverflowException.#ctor(System.String,System.Exception)">
          <source>Only use them if extending the class or the .NET Framework.</source>
          <target state="translated">경우에 사용 클래스 또는.NET Framework를 확장 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.InternalBufferOverflowException.#ctor(System.String,System.Exception)">
          <source>This exception indicates an internal buffer has overflowed and users should take appropriate steps in their code to ensure it recovers properly.</source>
          <target state="translated">이 예외는 내부 버퍼가 오버플로 되었습니다 및 제대로 복구 되도록 자신의 코드에 적절 한 단계를 수행 해야 사용자가 나타냅니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.InternalBufferOverflowException.#ctor(System.String,System.Exception)">
          <source>The cause of the overflow is often too many changes in a short period of time, causing the internal notification buffer to overflow.</source>
          <target state="translated">오버플로의 원인을 종종 너무 많이 변경 된 짧은 기간 알림 내부 버퍼 오버플로가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.InternalBufferOverflowException.#ctor(System.String,System.Exception)">
          <source>To resolve this, use the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.NotifyFilter%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A?displayProperty=nameWithType&gt;</ph> properties to filter out unwanted change notifications.</source>
          <target state="translated">이 문제를 해결 하려면 사용 된 <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.NotifyFilter%2A?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph2">&lt;xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A?displayProperty=nameWithType&gt;</ph> 원치 않는 필터링 할 속성 변경 알림을 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.InternalBufferOverflowException.#ctor(System.String,System.Exception)">
          <source>You can also increase the size of the internal buffer through the <ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.InternalBufferSize%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.FileSystemWatcher.InternalBufferSize%2A?displayProperty=nameWithType&gt;</ph> 속성을 통해 내부 버퍼의 크기를 늘릴 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.InternalBufferOverflowException.#ctor(System.String,System.Exception)">
          <source>However, increasing the size of the buffer is expensive, so keep the buffer as small as possible.</source>
          <target state="translated">그러나 버퍼의 크기를 늘리는 하는 것은 비용이 많이 드는, 따라서 버퍼를 가능한 한 작게 유지 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>