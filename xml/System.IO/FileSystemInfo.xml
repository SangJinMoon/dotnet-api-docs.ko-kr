<Type Name="FileSystemInfo" FullName="System.IO.FileSystemInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c00022d580c23c7f93d54dd6ca522e5b1b62b851" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37652492" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class FileSystemInfo : MarshalByRefObject, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit FileSystemInfo extends System.MarshalByRefObject implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.IO.FileSystemInfo" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class FileSystemInfo&#xA;Inherits MarshalByRefObject&#xA;Implements ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileSystemInfo abstract : MarshalByRefObject, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type FileSystemInfo = class&#xA;    inherit MarshalByRefObject&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="668c7-101">
        <see cref="T:System.IO.FileInfo" /> 및 <see cref="T:System.IO.DirectoryInfo" /> 개체에 대한 기본 클래스를 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="668c7-101">Provides the base class for both <see cref="T:System.IO.FileInfo" /> and <see cref="T:System.IO.DirectoryInfo" /> objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="668c7-102"><xref:System.IO.FileSystemInfo> 클래스에 파일과 디렉터리 조작에 공통 되는 메서드가 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-102">The <xref:System.IO.FileSystemInfo> class contains methods that are common to file and directory manipulation.</span></span> <span data-ttu-id="668c7-103">A <xref:System.IO.FileSystemInfo> 개체는 파일 또는 디렉터리를 기준으로 제공 되므로 나타낼 수 있습니다 <xref:System.IO.FileInfo> 또는 <xref:System.IO.DirectoryInfo> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-103">A <xref:System.IO.FileSystemInfo> object can represent either a file or a directory, thus serving as the basis for <xref:System.IO.FileInfo> or <xref:System.IO.DirectoryInfo> objects.</span></span> <span data-ttu-id="668c7-104">많은 파일 및 디렉터리를 구문 분석할 때이 기본 클래스를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-104">Use this base class when parsing a lot of files and directories.</span></span>  
  
 <span data-ttu-id="668c7-105">파생된 클래스에서 상속할 수 있습니다 <xref:System.IO.FileSystemInfo> 파생된 클래스에서 AllAccess 권한을 가진 경우에는 <xref:System.Security.Permissions.FileIOPermissionAccess> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-105">A derived class can inherit from <xref:System.IO.FileSystemInfo> only if the derived class has the AllAccess permission from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.</span></span>  
  
 <span data-ttu-id="668c7-106">경로 허용 하는 멤버의 경로 파일 또는 디렉터리를 참조할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-106">In members that accept a path, the path can refer to a file or just a directory.</span></span> <span data-ttu-id="668c7-107">지정된 된 경로 상대 경로 또는 서버 및 공유 이름에 대 한 범용 명명 규칙 (UNC) 경로 참조할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-107">The specified path can also refer to a relative path or a Universal Naming Convention (UNC) path for a server and share name.</span></span> <span data-ttu-id="668c7-108">예를 들어, 다음은 허용 가능한 경로.</span><span class="sxs-lookup"><span data-stu-id="668c7-108">For example, all the following are acceptable paths:</span></span>  
  
-   <span data-ttu-id="668c7-109">"c:\\\MyDir\\\MyFile.txt" C# 또는 Visual Basic의 "c:\MyDir\MyFile.txt"입니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-109">"c:\\\MyDir\\\MyFile.txt" in C#, or "c:\MyDir\MyFile.txt" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="668c7-110">"c:\\\MyDir" C# 또는 Visual Basic의 "c:\MyDir"입니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-110">"c:\\\MyDir" in C#, or "c:\MyDir" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="668c7-111">"MyDir\\\MySubdir" C# 또는 Visual Basic의 "MyDir\MySubDir"입니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-111">"MyDir\\\MySubdir" in C#, or "MyDir\MySubDir" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="668c7-112">"\\\\\\\MyServer\\\MyShare" C#에서 또는 "\\\MyServer\MyShare" Visual Basic의 합니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-112">"\\\\\\\MyServer\\\MyShare" in C#, or "\\\MyServer\MyShare" in Visual Basic.</span></span>  
  
 <span data-ttu-id="668c7-113">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-113">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="668c7-114">다음 예제에서는 모든 파일 및 디렉터리를 쿼리 하는 각 항목에 대 한 정보를 반복 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-114">The following example shows how to loop through all the files and directories, querying some information about each entry.</span></span>  
  
 [!code-cpp[FileSystemInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/FileSystemInfo/cpp/program.cpp#1)]
 [!code-csharp[FileSystemInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/FileSystemInfo/CS/program.cs#1)]
 [!code-vb[FileSystemInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FileSystemInfo/VB/FileSystemInfo.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.FileIOPermission">
      <span data-ttu-id="668c7-115">이 클래스에서 상속 하는 데 필요한 권한입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="668c7-115">for permission to inherit from this class.</span>
      </span>
      <span data-ttu-id="668c7-116">연관 된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> 보안 작업: 상속 요청</span>
      <span class="sxs-lookup">
        <span data-stu-id="668c7-116">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />  Security Action: Inheritance Demand</span>
      </span>
    </permission>
    <altmember cref="T:System.IO.FileSystemWatcher" />
    <altmember cref="T:System.IO.DriveInfo" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="668c7-117">
            <see cref="T:System.IO.FileSystemInfo" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-117">Initializes a new instance of the <see cref="T:System.IO.FileSystemInfo" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FileSystemInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; FileSystemInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="668c7-118">
            <see cref="T:System.IO.FileSystemInfo" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-118">Initializes a new instance of the <see cref="T:System.IO.FileSystemInfo" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="668c7-119">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-119">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FileSystemInfo (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; FileSystemInfo(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.IO.FileSystemInfo : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.IO.FileSystemInfo" Usage="new System.IO.FileSystemInfo (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="668c7-120">throw되는 예외에 대해 serialize된 개체 데이터를 보유하는 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-120">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="668c7-121">소스 또는 대상에 대한 컨텍스트 정보를 포함하는 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-121">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="668c7-122">serialize된 데이터를 사용하여 <see cref="T:System.IO.FileSystemInfo" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-122">Initializes a new instance of the <see cref="T:System.IO.FileSystemInfo" /> class with serialized data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="668c7-123">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-123">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="668c7-124">지정된 <see cref="T:System.Runtime.Serialization.SerializationInfo" />가 null인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-124">The specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> is null.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.IO.FileAttributes Attributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.FileAttributes Attributes" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileSystemInfo.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public Property Attributes As FileAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::FileAttributes Attributes { System::IO::FileAttributes get(); void set(System::IO::FileAttributes value); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.IO.FileAttributes with get, set" Usage="System.IO.FileSystemInfo.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="668c7-125">현재 파일 또는 디렉터리의 특성을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-125">Gets or sets the attributes for the current file or directory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="668c7-126">현재 <see cref="T:System.IO.FileAttributes" />의 <see cref="T:System.IO.FileSystemInfo" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-126">
              <see cref="T:System.IO.FileAttributes" /> of the current <see cref="T:System.IO.FileSystemInfo" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="668c7-127">값을 <xref:System.IO.FileSystemInfo.Attributes%2A> 경우 속성은 사전 캐시의 현재 인스턴스를 <xref:System.IO.FileSystemInfo> 개체는 다음 중 하나에서 반환 된 <xref:System.IO.DirectoryInfo> 메서드:</span><span class="sxs-lookup"><span data-stu-id="668c7-127">The value of the <xref:System.IO.FileSystemInfo.Attributes%2A> property is pre-cached if the current instance of the <xref:System.IO.FileSystemInfo> object was returned from any of the following <xref:System.IO.DirectoryInfo> methods:</span></span>  
  
-   <xref:System.IO.DirectoryInfo.GetDirectories%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.GetFiles%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.EnumerateFiles%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A?displayProperty=nameWithType>  
  
 <span data-ttu-id="668c7-128">값이 경우 캐시 값이 자체 나 다른 <xref:System.IO.FileSystemInfo> 속성에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-128">The value may be cached when either the value itself or other <xref:System.IO.FileSystemInfo> properties are accessed.</span></span> <span data-ttu-id="668c7-129">에 최신 값을 가져오려면 호출을 <xref:System.IO.FileSystemInfo.Refresh%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="668c7-129">To get the latest value, call the <xref:System.IO.FileSystemInfo.Refresh%2A> method.</span></span>

 <span data-ttu-id="668c7-130">반환 값은 경로 마지막으로 캐시 된 상태를 기준으로 존재 하지 않으면 `(FileAttributes)(-1)`합니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-130">If the path doesn't exist as of the last cached state, the return value is `(FileAttributes)(-1)`.</span></span> <span data-ttu-id="668c7-131"><xref:System.IO.FileNotFoundException> 또는 <xref:System.IO.DirectoryNotFoundException> 값을 설정할 때만 throw 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-131"><xref:System.IO.FileNotFoundException> or <xref:System.IO.DirectoryNotFoundException> can only be thrown when setting the value.</span></span>
  
 <span data-ttu-id="668c7-132">이 속성의 값은 압축 된 보관, 디렉터리, 숨김, 오프 라인, 읽기 전용, 시스템 및 임시 파일 특성 플래그의 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-132">The value of this property is a combination of the archive, compressed, directory, hidden, offline, read-only, system, and temporary file attribute flags.</span></span>  
  
 <span data-ttu-id="668c7-133">비트 OR 연산자를 사용 하 여이 값을 설정 하면 (`|` C# 또는 `Or` Visual basic에서) 둘 이상의 값을 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-133">When you set this value, use the bitwise OR operator (`|` in C# or `Or` in Visual Basic) to apply more than one value.</span></span> <span data-ttu-id="668c7-134">기존 값을 유지 하는 <xref:System.IO.FileSystemInfo.Attributes%2A> 속성 값을 포함할는 <xref:System.IO.FileSystemInfo.Attributes%2A> 속성 할당에.</span><span class="sxs-lookup"><span data-stu-id="668c7-134">To retain any existing values in the <xref:System.IO.FileSystemInfo.Attributes%2A> property, include the value of the <xref:System.IO.FileSystemInfo.Attributes%2A> property in your assignment.</span></span> <span data-ttu-id="668c7-135">예:</span><span class="sxs-lookup"><span data-stu-id="668c7-135">For example:</span></span>  
  
 `exampleFile.Attributes = exampleFile.Attributes | FileAttributes.ReadOnly;`  
  
   
  
## Examples  
 <span data-ttu-id="668c7-136">다음 예제는 <xref:System.IO.FileSystemInfo.Attributes%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-136">The following example demonstrates the <xref:System.IO.FileSystemInfo.Attributes%2A> property.</span></span> <span data-ttu-id="668c7-137">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.IO.FileSystemInfo> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-137">This code example is part of a larger example provided for the <xref:System.IO.FileSystemInfo> class.</span></span>  
  
 [!code-cpp[FileSystemInfo#2](~/samples/snippets/cpp/VS_Snippets_CLR/FileSystemInfo/cpp/program.cpp#2)]
 [!code-csharp[FileSystemInfo#2](~/samples/snippets/csharp/VS_Snippets_CLR/FileSystemInfo/CS/program.cs#2)]
 [!code-vb[FileSystemInfo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/FileSystemInfo/VB/FileSystemInfo.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="668c7-138">지정된 파일이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-138">The specified file doesn't exist.</span>
          </span>
          <span data-ttu-id="668c7-139">속성 값을 설정할 때만 throw됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-139">Only thrown when setting the property value.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="668c7-140">지정한 경로가 잘못되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-140">The specified path is invalid.</span>
          </span>
          <span data-ttu-id="668c7-141">예를 들어, 매핑되지 않은 드라이브에 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-141">For example, it's on an unmapped drive.</span>
          </span>
          <span data-ttu-id="668c7-142">속성 값을 설정할 때만 throw됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-142">Only thrown when setting the property value.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="668c7-143">호출자에게 필요한 권한이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-143">The caller doesn't have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="668c7-144">호출자가 잘못된 파일 특성을 설정하려고 한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-144">The caller attempts to set an invalid file attribute.</span>
          </span>
          <span data-ttu-id="668c7-145">-또는-  사용자가 특성 값을 설정하려고 하지만 쓰기 권한이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-145">-or-  The user attempts to set an attribute value but doesn't have write permission.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="668c7-146">
            <see cref="M:System.IO.FileSystemInfo.Refresh" />가 데이터를 초기화할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-146">
              <see cref="M:System.IO.FileSystemInfo.Refresh" /> cannot initialize the data.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="668c7-147">파일 및 디렉터리를 작성 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-147">for writing files and directories.</span>
          </span>
          <span data-ttu-id="668c7-148">연관 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /> 보안 작업: <see cref="F:System.Security.Permissions.SecurityAction.Demand" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-148">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /> Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" /></span>
          </span>
        </permission>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="CreationTime">
      <MemberSignature Language="C#" Value="public DateTime CreationTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime CreationTime" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileSystemInfo.CreationTime" />
      <MemberSignature Language="VB.NET" Value="Public Property CreationTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime CreationTime { DateTime get(); void set(DateTime value); };" />
      <MemberSignature Language="F#" Value="member this.CreationTime : DateTime with get, set" Usage="System.IO.FileSystemInfo.CreationTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="668c7-149">현재 파일 또는 디렉터리를 만든 시간을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-149">Gets or sets the creation time of the current file or directory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="668c7-150">현재 <see cref="T:System.IO.FileSystemInfo" /> 개체의 만든 날짜와 시간입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-150">The creation date and time of the current <see cref="T:System.IO.FileSystemInfo" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

> [!NOTE]
>  <span data-ttu-id="668c7-151">이 메서드는 값을 가진 업데이트할 수 없습니다 지속적으로 운영 체제에서 네이티브 함수를 사용 하기 때문에 정확 하지 않은 값을 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-151">This method may return an inaccurate value because it uses native functions whose values may not be continuously updated by the operating system.</span></span>  
    
 <span data-ttu-id="668c7-152">값을 <xref:System.IO.FileSystemInfo.CreationTime%2A> 경우 속성은 사전 캐시의 현재 인스턴스를 <xref:System.IO.FileSystemInfo> 개체는 다음 중 하나에서 반환 된 <xref:System.IO.DirectoryInfo> 메서드:</span><span class="sxs-lookup"><span data-stu-id="668c7-152">The value of the <xref:System.IO.FileSystemInfo.CreationTime%2A> property is pre-cached if the current instance of the <xref:System.IO.FileSystemInfo> object was returned from any of the following <xref:System.IO.DirectoryInfo> methods:</span></span>  
  
-   <xref:System.IO.DirectoryInfo.GetDirectories%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.GetFiles%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.EnumerateFiles%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A?displayProperty=nameWithType>  
  
 <span data-ttu-id="668c7-153">에 최신 값을 가져오려면 호출을 <xref:System.IO.FileSystemInfo.Refresh%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="668c7-153">To get the latest value, call the <xref:System.IO.FileSystemInfo.Refresh%2A> method.</span></span>  
  
 <span data-ttu-id="668c7-154">파일에서 설명 하는 경우는 <xref:System.IO.FileSystemInfo> 개체가 존재 하지 않는 경우이 속성에는 서 기 1601 년 1 월 1 일 자정 12 시 반환</span><span class="sxs-lookup"><span data-stu-id="668c7-154">If the file described in the <xref:System.IO.FileSystemInfo> object does not exist, this property returns 12:00 midnight, January 1, 1601 A.D.</span></span> <span data-ttu-id="668c7-155">(C.E.) Utc (협정 세계시)를 현지 시간으로 조정 합니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-155">(C.E.) Coordinated Universal Time (UTC), adjusted to local time.</span></span>  

<span data-ttu-id="668c7-156">만들거나 출생 시간을 지원 하지 않는 Unix 플랫폼에서이 속성의 마지막 수정 시간과 마지막 상태 변경에 이전 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-156">On Unix platforms that do not support creation or birth time, this property returns the older of the time of the last status change and the time of the last modification.</span></span> <span data-ttu-id="668c7-157">다른 플랫폼에서 서 기 1601 년 1 월 1 일 자정 12 시 반환</span><span class="sxs-lookup"><span data-stu-id="668c7-157">On other platforms, it returns 12:00 midnight, January 1, 1601 A.D.</span></span> <span data-ttu-id="668c7-158">(C.E.) Utc (협정 세계시)를 현지 시간으로 조정 합니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-158">(C.E.) Coordinated Universal Time (UTC), adjusted to local time.</span></span>

 <span data-ttu-id="668c7-159">NTFS로 포맷 된 드라이브에 파일 메타 정보, 파일을 만든 시간, 짧은 기간에 대 한 같은 캐시할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-159">NTFS-formatted drives may cache file meta-info, such as file creation time, for a short period of time.</span></span> <span data-ttu-id="668c7-160">이 프로세스는 파일 터널링 이라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-160">This process is known as file tunneling.</span></span> <span data-ttu-id="668c7-161">결과적으로, 덮어쓰기 또는 기존 파일을 대체 하는 경우 파일의 생성 시간을 명시적으로 설정 해야 할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-161">As a result, it may be necessary to explicitly set the creation time of a file if you are overwriting or replacing an existing file.</span></span>  
  
## Examples  
 <span data-ttu-id="668c7-162">다음 예제는 <xref:System.IO.FileSystemInfo.CreationTime%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-162">The following example demonstrates the <xref:System.IO.FileSystemInfo.CreationTime%2A> property.</span></span> <span data-ttu-id="668c7-163">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.IO.FileSystemInfo> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-163">This code example is part of a larger example provided for the <xref:System.IO.FileSystemInfo> class.</span></span>  
  
 [!code-cpp[FileSystemInfo#2](~/samples/snippets/cpp/VS_Snippets_CLR/FileSystemInfo/cpp/program.cpp#2)]
 [!code-csharp[FileSystemInfo#2](~/samples/snippets/csharp/VS_Snippets_CLR/FileSystemInfo/CS/program.cs#2)]
 [!code-vb[FileSystemInfo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/FileSystemInfo/VB/FileSystemInfo.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="668c7-164">
            <see cref="M:System.IO.FileSystemInfo.Refresh" />가 데이터를 초기화할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-164">
              <see cref="M:System.IO.FileSystemInfo.Refresh" /> cannot initialize the data.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="668c7-165">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브의 경로를 지정한 경우).</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-165">The specified path is invalid; for example, it is on an unmapped drive.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="668c7-166">현재 운영 체제가 Windows NT 이상이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-166">The current operating system is not Windows NT or later.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="668c7-167">호출자가 잘못된 만든 시간을 설정하려고 시도합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-167">The caller attempts to set an invalid creation time.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="668c7-168">만든 시간을 설정 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-168">for setting the creation time.</span>
          </span>
          <span data-ttu-id="668c7-169">연결 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-169">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          </span>
        </permission>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="CreationTimeUtc">
      <MemberSignature Language="C#" Value="public DateTime CreationTimeUtc { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime CreationTimeUtc" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileSystemInfo.CreationTimeUtc" />
      <MemberSignature Language="VB.NET" Value="Public Property CreationTimeUtc As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime CreationTimeUtc { DateTime get(); void set(DateTime value); };" />
      <MemberSignature Language="F#" Value="member this.CreationTimeUtc : DateTime with get, set" Usage="System.IO.FileSystemInfo.CreationTimeUtc" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="668c7-170">현재 파일 또는 디렉터리를 만든 시간을 UTC(협정 세계시) 기준으로 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-170">Gets or sets the creation time, in coordinated universal time (UTC), of the current file or directory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="668c7-171">현재 <see cref="T:System.IO.FileSystemInfo" /> 개체를 만든 UTC 형식의 날짜와 시간입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-171">The creation date and time in UTC format of the current <see cref="T:System.IO.FileSystemInfo" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

> [!NOTE]
>  <span data-ttu-id="668c7-172">이 메서드는 값을 가진 업데이트할 수 없습니다 지속적으로 운영 체제에서 네이티브 함수를 사용 하기 때문에 정확 하지 않은 값을 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-172">This method may return an inaccurate value because it uses native functions whose values may not be continuously updated by the operating system.</span></span>  
  
 <span data-ttu-id="668c7-173">값을 <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A> 경우 속성은 사전 캐시의 현재 인스턴스를 <xref:System.IO.FileSystemInfo> 개체는 다음 중 하나에서 반환 된 <xref:System.IO.DirectoryInfo> 메서드:</span><span class="sxs-lookup"><span data-stu-id="668c7-173">The value of the <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A> property is pre-cached if the current instance of the <xref:System.IO.FileSystemInfo> object was returned from any of the following <xref:System.IO.DirectoryInfo> methods:</span></span>  
  
-   <xref:System.IO.DirectoryInfo.GetDirectories%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.GetFiles%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.EnumerateFiles%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A?displayProperty=nameWithType>  
  
 <span data-ttu-id="668c7-174">에 최신 값을 가져오려면 호출을 <xref:System.IO.FileSystemInfo.Refresh%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="668c7-174">To get the latest value, call the <xref:System.IO.FileSystemInfo.Refresh%2A> method.</span></span>  
  
 <span data-ttu-id="668c7-175">파일에서 설명 하는 경우는 <xref:System.IO.FileSystemInfo> 개체가 존재 하지 않는 경우이 속성에는 서 기 1601 년 1 월 1 일 자정 12 시 반환</span><span class="sxs-lookup"><span data-stu-id="668c7-175">If the file described in the <xref:System.IO.FileSystemInfo> object does not exist, this property returns 12:00 midnight, January 1, 1601 A.D.</span></span> <span data-ttu-id="668c7-176">(C.E.) UTC (Coordinated Universal Time)입니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-176">(C.E.) Coordinated Universal Time (UTC).</span></span>  

<span data-ttu-id="668c7-177">만들거나 출생 시간을 지원 하지 않는 Unix 플랫폼에서이 속성의 마지막 수정 시간과 마지막 상태 변경에 이전 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-177">On Unix platforms that do not support creation or birth time, this property returns the older of the time of the last status change and the time of the last modification.</span></span> <span data-ttu-id="668c7-178">다른 플랫폼에서 서 기 1601 년 1 월 1 일 자정 12 시 반환</span><span class="sxs-lookup"><span data-stu-id="668c7-178">On other platforms, it returns 12:00 midnight, January 1, 1601 A.D.</span></span> <span data-ttu-id="668c7-179">(C.E.) Utc (협정 세계시)를 현지 시간으로 조정 합니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-179">(C.E.) Coordinated Universal Time (UTC), adjusted to local time.</span></span>

 <span data-ttu-id="668c7-180">NTFS로 포맷 된 드라이브에 파일 메타 정보, 파일을 만든 시간, 짧은 기간에 대 한 같은 캐시할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-180">NTFS-formatted drives may cache file meta-info, such as file creation time, for a short period of time.</span></span> <span data-ttu-id="668c7-181">이 프로세스는 파일 터널링 이라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-181">This process is known as file tunneling.</span></span> <span data-ttu-id="668c7-182">결과적으로, 덮어쓰기 또는 기존 파일을 대체 하는 경우 파일의 생성 시간을 명시적으로 설정 해야 할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-182">As a result, it may be necessary to explicitly set the creation time of a file if you are overwriting or replacing an existing file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="668c7-183">
            <see cref="M:System.IO.FileSystemInfo.Refresh" />가 데이터를 초기화할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-183">
              <see cref="M:System.IO.FileSystemInfo.Refresh" /> cannot initialize the data.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="668c7-184">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브의 경로를 지정한 경우).</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-184">The specified path is invalid; for example, it is on an unmapped drive.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="668c7-185">현재 운영 체제가 Windows NT 이상이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-185">The current operating system is not Windows NT or later.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="668c7-186">호출자가 잘못된 액세스 시간을 설정하려고 시도합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-186">The caller attempts to set an invalid access time.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="668c7-187">만든 시간을 설정 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-187">for setting the creation time.</span>
          </span>
          <span data-ttu-id="668c7-188">연결 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-188">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          </span>
        </permission>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public abstract void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemInfo.Delete" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Delete();" />
      <MemberSignature Language="F#" Value="abstract member Delete : unit -&gt; unit" Usage="fileSystemInfo.Delete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="668c7-189">파일이나 디렉터리를 삭제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-189">Deletes a file or directory.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="668c7-190">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브의 경로를 지정한 경우).</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-190">The specified path is invalid; for example, it is on an unmapped drive.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="668c7-191">파일 또는 디렉터리에 대한 열린 핸들이 있고 운영 체제가 Windows XP 또는 그 이전 버전인 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-191">There is an open handle on the file or directory, and the operating system is Windows XP or earlier.</span>
          </span>
          <span data-ttu-id="668c7-192">이 열린 핸들은 디렉터리 및 파일을 열거하면 발생할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-192">This open handle can result from enumerating directories and files.</span>
          </span>
          <span data-ttu-id="668c7-193">자세한 내용은 [방법: 디렉터리 및 파일 열거](~/docs/standard/io/how-to-enumerate-directories-and-files.md)를 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-193">For more information, see [How to: Enumerate Directories and Files](~/docs/standard/io/how-to-enumerate-directories-and-files.md).</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public abstract bool Exists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Exists" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileSystemInfo.Exists" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Exists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool Exists { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Exists : bool" Usage="System.IO.FileSystemInfo.Exists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="668c7-194">파일이나 디렉터리가 있는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-194">Gets a value indicating whether the file or directory exists.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="668c7-195">파일이나 디렉터리가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-195">
              <see langword="true" /> if the file or directory exists; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="668c7-196">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-196">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="Extension">
      <MemberSignature Language="C#" Value="public string Extension { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Extension" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileSystemInfo.Extension" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Extension As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Extension { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Extension : string" Usage="System.IO.FileSystemInfo.Extension" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="668c7-197">파일의 확장명 부분을 나타내는 문자열을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-197">Gets the string representing the extension part of the file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="668c7-198">
            <see cref="T:System.IO.FileSystemInfo" /> 확장명을 포함하는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-198">A string containing the <see cref="T:System.IO.FileSystemInfo" /> extension.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="668c7-199">`Extension` 속성이 반환을 <xref:System.IO.FileSystemInfo> 마침표 (.)를 포함 하 여 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-199">The `Extension` property returns the <xref:System.IO.FileSystemInfo> extension, including the period (.).</span></span> <span data-ttu-id="668c7-200">예를 들어이 속성을 파일 c:\NewFile.txt에 대 한 ".txt"를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-200">For example, for a file c:\NewFile.txt, this property returns ".txt".</span></span>  
  
 <span data-ttu-id="668c7-201">다음 표에서 일반적인 하거나 관련 된 I/O 작업의 예제를 나열합니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-201">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="668c7-202">수행 작업</span><span class="sxs-lookup"><span data-stu-id="668c7-202">To do this...</span></span>|<span data-ttu-id="668c7-203">참조 항목</span><span class="sxs-lookup"><span data-stu-id="668c7-203">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="668c7-204">텍스트 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-204">Create a text file.</span></span>|[<span data-ttu-id="668c7-205">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="668c7-205">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="668c7-206">텍스트 파일에 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-206">Write to a text file.</span></span>|[<span data-ttu-id="668c7-207">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="668c7-207">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="668c7-208">텍스트 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-208">Read from a text file.</span></span>|[<span data-ttu-id="668c7-209">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="668c7-209">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="668c7-210">파일의 정규화 된 경로 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-210">Retrieve the fully qualified path of a file.</span></span>|<xref:System.IO.Path.GetFullPath%2A>|  
|<span data-ttu-id="668c7-211">경로 파일 이름만을 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-211">Retrieve only the file name a path.</span></span>|<xref:System.IO.Path.GetFileNameWithoutExtension%2A>|  
|<span data-ttu-id="668c7-212">경로에서 디렉터리 이름만을 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-212">Retrieve only the directory name from a path.</span></span>|<xref:System.IO.Path.GetDirectoryName%2A>|  
|<span data-ttu-id="668c7-213">파일의 확장명을 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-213">Change the extension of a file.</span></span>|<xref:System.IO.Path.ChangeExtension%2A>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public virtual string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileSystemInfo.FullName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FullName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullName : string" Usage="System.IO.FileSystemInfo.FullName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="668c7-214">파일이나 디렉터리의 전체 경로를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-214">Gets the full path of the directory or file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="668c7-215">전체 경로를 포함하는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-215">A string containing the full path.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="668c7-216">예를 들어이 속성을 파일 c:\NewFile.txt에 대 한 "c:\NewFile.txt"를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-216">For example, for a file c:\NewFile.txt, this property returns "c:\NewFile.txt".</span></span>  
  
 <span data-ttu-id="668c7-217">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-217">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="668c7-218">다음 예제는 <xref:System.IO.FileSystemInfo.FullName%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-218">The following example demonstrates the <xref:System.IO.FileSystemInfo.FullName%2A> property.</span></span> <span data-ttu-id="668c7-219">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.IO.FileSystemInfo> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-219">This code example is part of a larger example provided for the <xref:System.IO.FileSystemInfo> class.</span></span>  
  
 [!code-cpp[FileSystemInfo#2](~/samples/snippets/cpp/VS_Snippets_CLR/FileSystemInfo/cpp/program.cpp#2)]
 [!code-csharp[FileSystemInfo#2](~/samples/snippets/csharp/VS_Snippets_CLR/FileSystemInfo/CS/program.cs#2)]
 [!code-vb[FileSystemInfo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/FileSystemInfo/VB/FileSystemInfo.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="668c7-220">정규화된 경로 및 파일 이름이 시스템 정의 최대 길이를 초과합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-220">The fully qualified path and file name exceed the system-defined maximum length.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="668c7-221">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-221">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="668c7-222">경로에 액세스 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-222">for access to the path.</span>
          </span>
          <span data-ttu-id="668c7-223">연결 된 열거형: <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-223">Associated enumeration: <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span>
          </span>
        </permission>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="FullPath">
      <MemberSignature Language="C#" Value="protected string FullPath;" />
      <MemberSignature Language="ILAsm" Value=".field family string FullPath" />
      <MemberSignature Language="DocId" Value="F:System.IO.FileSystemInfo.FullPath" />
      <MemberSignature Language="VB.NET" Value="Protected FullPath As String " />
      <MemberSignature Language="C++ CLI" Value="protected: System::String ^ FullPath;" />
      <MemberSignature Language="F#" Value="val mutable FullPath : string" Usage="System.IO.FileSystemInfo.FullPath" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="668c7-224">파일이나 디렉터리의 정규화된 경로를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-224">Represents the fully qualified path of the directory or file.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="668c7-225">정규화된 경로가 시스템 정의 최대 길이를 초과합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-225">The fully qualified path exceeds the system-defined maximum length.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="668c7-226">
            <para>파생 된 클래스 <see cref="T:System.IO.FileSystemInfo" /> 사용할 수는 <see langword="FullPath" /> 필드를 조작 하는 개체의 전체 경로 확인 합니다.  공통적인 I/O 작업의 목록을 [일반적인 I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)을 참조 하세요.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-226">
              <para>Classes derived from <see cref="T:System.IO.FileSystemInfo" /> can use the <see langword="FullPath" /> field to determine the full path of the object being manipulated.  For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="fileSystemInfo.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="668c7-227">throw되는 예외에 대해 serialize된 개체 데이터를 보유하는 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-227">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="668c7-228">소스 또는 대상에 대한 컨텍스트 정보를 포함하는 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-228">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="668c7-229">파일 이름 및 추가 예외 정보를 사용하여 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체를 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-229">Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the file name and additional exception information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="668c7-230">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-230">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="668c7-231">현재 인스턴스에서 설명 하는 경로 대 한 정보에 액세스할 수 있는 권한입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-231">for permission to access information about the path described by the current instance.</span>
          </span>
          <span data-ttu-id="668c7-232">연관 된 열거형: <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 보안 동작: 요청</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-232">Associated enumeration: <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />  Security action: Demand</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="668c7-233">이 클래스를 연결할 수 있는 권한입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-233">for permission to link to this class.</span>
          </span>
          <span data-ttu-id="668c7-234">연관 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /> 보안 작업: 링크 요청</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-234">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" />  Security action: Link Demand</span>
          </span>
        </permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="668c7-235">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-235">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="668c7-236">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-236">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="LastAccessTime">
      <MemberSignature Language="C#" Value="public DateTime LastAccessTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime LastAccessTime" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileSystemInfo.LastAccessTime" />
      <MemberSignature Language="VB.NET" Value="Public Property LastAccessTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime LastAccessTime { DateTime get(); void set(DateTime value); };" />
      <MemberSignature Language="F#" Value="member this.LastAccessTime : DateTime with get, set" Usage="System.IO.FileSystemInfo.LastAccessTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="668c7-237">현재 파일이나 디렉터리에 마지막으로 액세스한 시간을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-237">Gets or sets the time the current file or directory was last accessed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="668c7-238">현재 파일이나 디렉터리에 마지막으로 액세스한 시간입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-238">The time that the current file or directory was last accessed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 
> [!NOTE]
>  <span data-ttu-id="668c7-239">이 메서드는 값을 가진 업데이트할 수 없습니다 지속적으로 운영 체제에서 네이티브 함수를 사용 하기 때문에 정확 하지 않은 값을 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-239">This method may return an inaccurate value because it uses native functions whose values may not be continuously updated by the operating system.</span></span>  
 
 <span data-ttu-id="668c7-240">파일에서 설명 하는 경우는 <xref:System.IO.FileSystemInfo> 개체가 존재 하지 않는 경우이 속성에는 서 기 1601 년 1 월 1 일 자정 12 시 반환</span><span class="sxs-lookup"><span data-stu-id="668c7-240">If the file described in the <xref:System.IO.FileSystemInfo> object does not exist, this property returns 12:00 midnight, January 1, 1601 A.D.</span></span> <span data-ttu-id="668c7-241">(C.E.) Utc (협정 세계시)를 현지 시간으로 조정 합니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-241">(C.E.) Coordinated Universal Time (UTC), adjusted to local time.</span></span>  
  
 <span data-ttu-id="668c7-242">값을 <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A> 경우 속성은 사전 캐시의 현재 인스턴스를 <xref:System.IO.FileSystemInfo> 개체는 다음 중 하나에서 반환 된 <xref:System.IO.DirectoryInfo> 메서드:</span><span class="sxs-lookup"><span data-stu-id="668c7-242">The value of the <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A> property is pre-cached if the current instance of the <xref:System.IO.FileSystemInfo> object was returned from any of the following <xref:System.IO.DirectoryInfo> methods:</span></span>  
  
-   <xref:System.IO.DirectoryInfo.GetDirectories%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.GetFiles%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.EnumerateFiles%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A?displayProperty=nameWithType>  
  
 <span data-ttu-id="668c7-243">에 최신 값을 가져오려면 호출을 <xref:System.IO.FileSystemInfo.Refresh%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="668c7-243">To get the latest value, call the <xref:System.IO.FileSystemInfo.Refresh%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="668c7-244">다음 코드 예제를 업데이트 하는 방법을 보여 줍니다는 <xref:System.IO.FileSystemInfo.LastAccessTime%2A> "터치" 작업을 통해 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-244">The following code example demonstrates the updating of the <xref:System.IO.FileSystemInfo.LastAccessTime%2A> property through a "touch" operation.</span></span> <span data-ttu-id="668c7-245">이 예제에서는 파일이 "라이브"를 업데이트 합니다 <xref:System.IO.FileSystemInfo.CreationTime%2A>, <xref:System.IO.FileSystemInfo.LastAccessTime%2A> 및 <xref:System.IO.FileSystemInfo.LastWriteTime%2A> 속성을 현재 날짜 및 시간입니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-245">In this example, the file is "touched", updating the <xref:System.IO.FileSystemInfo.CreationTime%2A>, <xref:System.IO.FileSystemInfo.LastAccessTime%2A> and <xref:System.IO.FileSystemInfo.LastWriteTime%2A> properties to the current date and time.</span></span>  
  
 [!code-csharp[System.IO.FileSystemInfo_touch#00](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.FileSystemInfo_touch/cs/touch.cs#00)]
 [!code-vb[System.IO.FileSystemInfo_touch#00](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.FileSystemInfo_touch/vb/touch.vb#00)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="668c7-246">
            <see cref="M:System.IO.FileSystemInfo.Refresh" />가 데이터를 초기화할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-246">
              <see cref="M:System.IO.FileSystemInfo.Refresh" /> cannot initialize the data.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="668c7-247">현재 운영 체제가 Windows NT 이상이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-247">The current operating system is not Windows NT or later.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="668c7-248">호출자가 잘못된 액세스 시간을 설정하려고 시도합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-248">The caller attempts to set an invalid access time</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="668c7-249">마지막 액세스 시간을 설정 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-249">for setting the last access time.</span>
          </span>
          <span data-ttu-id="668c7-250">연결 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-250">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          </span>
        </permission>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="LastAccessTimeUtc">
      <MemberSignature Language="C#" Value="public DateTime LastAccessTimeUtc { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime LastAccessTimeUtc" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileSystemInfo.LastAccessTimeUtc" />
      <MemberSignature Language="VB.NET" Value="Public Property LastAccessTimeUtc As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime LastAccessTimeUtc { DateTime get(); void set(DateTime value); };" />
      <MemberSignature Language="F#" Value="member this.LastAccessTimeUtc : DateTime with get, set" Usage="System.IO.FileSystemInfo.LastAccessTimeUtc" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="668c7-251">현재 파일이나 디렉터리에 마지막으로 액세스한 시간을 UTC 기준으로 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-251">Gets or sets the time, in coordinated universal time (UTC), that the current file or directory was last accessed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="668c7-252">현재 파일이나 디렉터리에 마지막으로 액세스한 UTC 시간입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-252">The UTC time that the current file or directory was last accessed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 
> [!NOTE]
>  <span data-ttu-id="668c7-253">이 메서드는 값을 가진 업데이트할 수 없습니다 지속적으로 운영 체제에서 네이티브 함수를 사용 하기 때문에 정확 하지 않은 값을 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-253">This method may return an inaccurate value because it uses native functions whose values may not be continuously updated by the operating system.</span></span>  
  
 <span data-ttu-id="668c7-254">값을 <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A> 경우 속성은 사전 캐시의 현재 인스턴스를 <xref:System.IO.FileSystemInfo> 개체는 다음 중 하나에서 반환 된 <xref:System.IO.DirectoryInfo> 메서드:</span><span class="sxs-lookup"><span data-stu-id="668c7-254">The value of the <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A> property is pre-cached if the current instance of the <xref:System.IO.FileSystemInfo> object was returned from any of the following <xref:System.IO.DirectoryInfo> methods:</span></span>  
  
-   <xref:System.IO.DirectoryInfo.GetDirectories%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.GetFiles%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.EnumerateFiles%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A?displayProperty=nameWithType>  
  
 <span data-ttu-id="668c7-255">에 최신 값을 가져오려면 호출을 <xref:System.IO.FileSystemInfo.Refresh%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="668c7-255">To get the latest value, call the <xref:System.IO.FileSystemInfo.Refresh%2A> method.</span></span>  
  
 <span data-ttu-id="668c7-256">파일에서 설명 하는 경우는 <xref:System.IO.FileSystemInfo> 개체가 존재 하지 않는 경우이 속성에는 서 기 1601 년 1 월 1 일 자정 12 시 반환</span><span class="sxs-lookup"><span data-stu-id="668c7-256">If the file described in the <xref:System.IO.FileSystemInfo> object does not exist, this property returns 12:00 midnight, January 1, 1601 A.D.</span></span> <span data-ttu-id="668c7-257">(C.E.) UTC (Coordinated Universal Time)입니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-257">(C.E.) Coordinated Universal Time (UTC).</span></span>  
  
 <span data-ttu-id="668c7-258">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-258">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="668c7-259">
            <see cref="M:System.IO.FileSystemInfo.Refresh" />가 데이터를 초기화할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-259">
              <see cref="M:System.IO.FileSystemInfo.Refresh" /> cannot initialize the data.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="668c7-260">현재 운영 체제가 Windows NT 이상이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-260">The current operating system is not Windows NT or later.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="668c7-261">호출자가 잘못된 액세스 시간을 설정하려고 시도합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-261">The caller attempts to set an invalid access time.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="668c7-262">마지막 액세스 시간을 설정 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-262">for setting the last access time.</span>
          </span>
          <span data-ttu-id="668c7-263">연결 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-263">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          </span>
        </permission>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="LastWriteTime">
      <MemberSignature Language="C#" Value="public DateTime LastWriteTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime LastWriteTime" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileSystemInfo.LastWriteTime" />
      <MemberSignature Language="VB.NET" Value="Public Property LastWriteTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime LastWriteTime { DateTime get(); void set(DateTime value); };" />
      <MemberSignature Language="F#" Value="member this.LastWriteTime : DateTime with get, set" Usage="System.IO.FileSystemInfo.LastWriteTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="668c7-264">현재 파일이나 디렉터리에 마지막으로 쓴 시간을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-264">Gets or sets the time when the current file or directory was last written to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="668c7-265">현재 파일에 마지막으로 쓴 시간입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-265">The time the current file was last written.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

> [!NOTE]
>  <span data-ttu-id="668c7-266">이 메서드는 값을 가진 업데이트할 수 없습니다 지속적으로 운영 체제에서 네이티브 함수를 사용 하기 때문에 정확 하지 않은 값을 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-266">This method may return an inaccurate value because it uses native functions whose values may not be continuously updated by the operating system.</span></span>  
  
 <span data-ttu-id="668c7-267">값을 <xref:System.IO.FileSystemInfo.LastWriteTime%2A> 경우 속성은 사전 캐시의 현재 인스턴스를 <xref:System.IO.FileSystemInfo> 개체는 다음 중 하나에서 반환 된 <xref:System.IO.DirectoryInfo> 메서드:</span><span class="sxs-lookup"><span data-stu-id="668c7-267">The value of the <xref:System.IO.FileSystemInfo.LastWriteTime%2A> property is pre-cached if the current instance of the <xref:System.IO.FileSystemInfo> object was returned from any of the following <xref:System.IO.DirectoryInfo> methods:</span></span>  
  
-   <xref:System.IO.DirectoryInfo.GetDirectories%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.GetFiles%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.EnumerateFiles%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A?displayProperty=nameWithType>  
  
 <span data-ttu-id="668c7-268">에 최신 값을 가져오려면 호출을 <xref:System.IO.FileSystemInfo.Refresh%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="668c7-268">To get the latest value, call the <xref:System.IO.FileSystemInfo.Refresh%2A> method.</span></span>  
  
 <span data-ttu-id="668c7-269">설명 하는 파일 또는 디렉터리를 <xref:System.IO.FileSystemInfo> 개체, 존재 하지 않거나이 속성이 반환 서 기 1601 년 1 월 1 일 자정 12 시가 파일 또는 디렉터리를 포함 하는 파일 시스템에서이 정보를 지원 하지 않으면,</span><span class="sxs-lookup"><span data-stu-id="668c7-269">If the file or directory described in the <xref:System.IO.FileSystemInfo> object does not exist, or if the file system that contains this file or directory does not support this information, this property returns 12:00 midnight, January 1, 1601 A.D.</span></span> <span data-ttu-id="668c7-270">(C.E.) Utc (협정 세계시)를 현지 시간으로 조정 합니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-270">(C.E.) Coordinated Universal Time (UTC), adjusted to local time.</span></span>  
  
## Examples  
 <span data-ttu-id="668c7-271">다음 코드 예제를 업데이트 하는 방법을 보여 줍니다는 <xref:System.IO.FileSystemInfo.LastWriteTime%2A> "터치" 작업을 통해 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-271">The following code example demonstrates the updating of the <xref:System.IO.FileSystemInfo.LastWriteTime%2A> property through a "touch" operation.</span></span> <span data-ttu-id="668c7-272">이 예제에서는 파일이 "라이브"를 업데이트 합니다 <xref:System.IO.FileSystemInfo.CreationTime%2A>, <xref:System.IO.FileSystemInfo.LastAccessTime%2A> 및 <xref:System.IO.FileSystemInfo.LastWriteTime%2A> 속성을 현재 날짜 및 시간입니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-272">In this example, the file is "touched", updating the <xref:System.IO.FileSystemInfo.CreationTime%2A>, <xref:System.IO.FileSystemInfo.LastAccessTime%2A> and <xref:System.IO.FileSystemInfo.LastWriteTime%2A> properties to the current date and time.</span></span>  
  
 [!code-csharp[System.IO.FileSystemInfo_touch#00](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.FileSystemInfo_touch/cs/touch.cs#00)]
 [!code-vb[System.IO.FileSystemInfo_touch#00](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.FileSystemInfo_touch/vb/touch.vb#00)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="668c7-273">
            <see cref="M:System.IO.FileSystemInfo.Refresh" />가 데이터를 초기화할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-273">
              <see cref="M:System.IO.FileSystemInfo.Refresh" /> cannot initialize the data.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="668c7-274">현재 운영 체제가 Windows NT 이상이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-274">The current operating system is not Windows NT or later.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="668c7-275">호출자가 잘못된 쓰기 시간을 설정하려고 시도합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-275">The caller attempts to set an invalid write time.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="668c7-276">설정에 대 한 마지막으로 쓴 시간입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-276">for setting the last write time.</span>
          </span>
          <span data-ttu-id="668c7-277">연결 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-277">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          </span>
        </permission>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="LastWriteTimeUtc">
      <MemberSignature Language="C#" Value="public DateTime LastWriteTimeUtc { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime LastWriteTimeUtc" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileSystemInfo.LastWriteTimeUtc" />
      <MemberSignature Language="VB.NET" Value="Public Property LastWriteTimeUtc As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime LastWriteTimeUtc { DateTime get(); void set(DateTime value); };" />
      <MemberSignature Language="F#" Value="member this.LastWriteTimeUtc : DateTime with get, set" Usage="System.IO.FileSystemInfo.LastWriteTimeUtc" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="668c7-278">현재 파일이나 디렉터리에 마지막으로 쓴 시간을 UTC 기준으로 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-278">Gets or sets the time, in coordinated universal time (UTC), when the current file or directory was last written to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="668c7-279">현재 파일에 마지막으로 쓴 UTC 시간입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-279">The UTC time when the current file was last written to.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

> [!NOTE]
>  <span data-ttu-id="668c7-280">이 메서드는 값을 가진 업데이트할 수 없습니다 지속적으로 운영 체제에서 네이티브 함수를 사용 하기 때문에 정확 하지 않은 값을 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-280">This method may return an inaccurate value because it uses native functions whose values may not be continuously updated by the operating system.</span></span>  
    
 <span data-ttu-id="668c7-281">값을 <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A> 경우 속성은 사전 캐시의 현재 인스턴스를 <xref:System.IO.FileSystemInfo> 개체는 다음 중 하나에서 반환 된 <xref:System.IO.DirectoryInfo> 메서드:</span><span class="sxs-lookup"><span data-stu-id="668c7-281">The value of the <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A> property is pre-cached if the current instance of the <xref:System.IO.FileSystemInfo> object was returned from any of the following <xref:System.IO.DirectoryInfo> methods:</span></span>  
  
-   <xref:System.IO.DirectoryInfo.GetDirectories%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.GetFiles%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.EnumerateFiles%2A?displayProperty=nameWithType>  
  
-   <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A?displayProperty=nameWithType>  
  
 <span data-ttu-id="668c7-282">에 최신 값을 가져오려면 호출을 <xref:System.IO.FileSystemInfo.Refresh%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="668c7-282">To get the latest value, call the <xref:System.IO.FileSystemInfo.Refresh%2A> method.</span></span>  
  
 <span data-ttu-id="668c7-283">설명 하는 파일 또는 디렉터리를 <xref:System.IO.FileSystemInfo> 개체, 존재 하지 않거나이 속성이 반환 서 기 1601 년 1 월 1 일 자정 12 시가 파일 또는 디렉터리를 포함 하는 파일 시스템에서이 정보를 지원 하지 않으면,</span><span class="sxs-lookup"><span data-stu-id="668c7-283">If the file or directory described in the <xref:System.IO.FileSystemInfo> object does not exist, or if the file system that contains this file or directory does not support this information, this property returns 12:00 midnight, January 1, 1601 A.D.</span></span> <span data-ttu-id="668c7-284">(C.E.) UTC (Coordinated Universal Time)입니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-284">(C.E.) Coordinated Universal Time (UTC).</span></span>  

 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="668c7-285">
            <see cref="M:System.IO.FileSystemInfo.Refresh" />가 데이터를 초기화할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-285">
              <see cref="M:System.IO.FileSystemInfo.Refresh" /> cannot initialize the data.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="668c7-286">현재 운영 체제가 Windows NT 이상이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-286">The current operating system is not Windows NT or later.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="668c7-287">호출자가 잘못된 쓰기 시간을 설정하려고 시도합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-287">The caller attempts to set an invalid write time.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="668c7-288">설정에 대 한 마지막으로 쓴 시간입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-288">for setting the last write time.</span>
          </span>
          <span data-ttu-id="668c7-289">연결 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-289">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          </span>
        </permission>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public abstract string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileSystemInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.IO.FileSystemInfo.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="668c7-290">파일의 경우 파일 이름을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-290">For files, gets the name of the file.</span>
          </span>
          <span data-ttu-id="668c7-291">디렉터리의 경우 계층이 있으면 계층에 있는 마지막 디렉터리의 이름을 가져오고,</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-291">For directories, gets the name of the last directory in the hierarchy if a hierarchy exists.</span>
          </span>
          <span data-ttu-id="668c7-292">계층이 없으면 <see langword="Name" /> 속성에서 디렉터리 이름을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-292">Otherwise, the <see langword="Name" /> property gets the name of the directory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="668c7-293">부모 디렉터리의 이름, 계층에 있는 마지막 디렉터리의 이름 또는 파일 확장명을 포함한 파일의 이름을 나타내는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-293">A string that is the name of the parent directory, the name of the last directory in the hierarchy, or the name of a file, including the file name extension.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="668c7-294">디렉터리의 경우 `Name` Dir, 없습니다 c:\Dir 같은 부모 디렉터리의 이름만 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-294">For a directory, `Name` returns only the name of the parent directory, such as Dir, not c:\Dir.</span></span> <span data-ttu-id="668c7-295">하위 디렉터리에 대 한 `Name` Sub1, 없습니다 c:\Dir\Sub1 같은 하위 디렉터리의 이름만 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-295">For a subdirectory, `Name` returns only the name of the subdirectory, such as Sub1, not c:\Dir\Sub1.</span></span>  
  
 <span data-ttu-id="668c7-296">파일에 대해 `Name` 파일 이름과 MyFile.txt, 없습니다 c:\Dir\Myfile.txt 같은 파일 이름 확장명을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-296">For a file, `Name` returns only the file name and file name extension, such as MyFile.txt, not c:\Dir\Myfile.txt.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="OriginalPath">
      <MemberSignature Language="C#" Value="protected string OriginalPath;" />
      <MemberSignature Language="ILAsm" Value=".field family string OriginalPath" />
      <MemberSignature Language="DocId" Value="F:System.IO.FileSystemInfo.OriginalPath" />
      <MemberSignature Language="VB.NET" Value="Protected OriginalPath As String " />
      <MemberSignature Language="C++ CLI" Value="protected: System::String ^ OriginalPath;" />
      <MemberSignature Language="F#" Value="val mutable OriginalPath : string" Usage="System.IO.FileSystemInfo.OriginalPath" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="668c7-297">사용자가 원래 지정한 상대 또는 절대 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-297">The path originally specified by the user, whether relative or absolute.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="668c7-298">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-298">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemInfo.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh();" />
      <MemberSignature Language="F#" Value="member this.Refresh : unit -&gt; unit" Usage="fileSystemInfo.Refresh " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="668c7-299">개체의 상태를 새로 고칩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-299">Refreshes the state of the object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="668c7-300">`FileSystemInfo.Refresh` 현재 파일 시스템에서 파일의 스냅숏을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-300">`FileSystemInfo.Refresh` takes a snapshot of the file from the current file system.</span></span> <span data-ttu-id="668c7-301">`Refresh` 파일 시스템 올바르지 않거나 오래 된 정보를 반환 하는 경우에 기본 파일 시스템을 수정할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-301">`Refresh` cannot correct the underlying file system even if the file system returns incorrect or outdated information.</span></span> <span data-ttu-id="668c7-302">예: Windows 98 플랫폼에서 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-302">This can happen on platforms such as Windows 98.</span></span>  
  
 <span data-ttu-id="668c7-303">호출 해야 `Refresh` 정보나 특성 정보를 가져오는 동안 오래 된 됩니다.</span><span class="sxs-lookup"><span data-stu-id="668c7-303">Calls must be made to `Refresh` before attempting to get the attribute information, or the information will be outdated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="668c7-304">디스크 드라이브 같은 장치가 준비되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="668c7-304">A device such as a disk drive is not ready.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
  </Members>
</Type>