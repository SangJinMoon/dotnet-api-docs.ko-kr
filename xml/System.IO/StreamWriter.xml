<Type Name="StreamWriter" FullName="System.IO.StreamWriter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6f31bd789fd27cfb5dec1f299d1b5fc770e9fc32" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class StreamWriter : System.IO.TextWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit StreamWriter extends System.IO.TextWriter" />
  <TypeSignature Language="DocId" Value="T:System.IO.StreamWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class StreamWriter&#xA;Inherits TextWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class StreamWriter : System::IO::TextWriter" />
  <AssemblyInfo>
    <AssemblyName>System.IO</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.TextWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="2e3ef-101">
        <see cref="T:System.IO.TextWriter" />를 구현하여 특정 인코딩의 스트림에 문자를 씁니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2e3ef-101">Implements a <see cref="T:System.IO.TextWriter" /> for writing characters to a stream in a particular encoding.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e3ef-102"><xref:System.IO.StreamWriter> 클래스에서 파생 되는 반면를 특정 인코딩으로 문자 출력을 위해 설계 <xref:System.IO.Stream> 는 바이트 입력 및 출력을 위해 디자인 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-102"><xref:System.IO.StreamWriter> is designed for character output in a particular encoding, whereas classes derived from <xref:System.IO.Stream> are designed for byte input and output.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2e3ef-103">이 형식이 구현 하는 <xref:System.IDisposable> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-103">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="2e3ef-104">형식을 사용 하 여 마쳤으면는 삭제 해야의 직접 또는 간접적으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-104">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="2e3ef-105">직접 형식의 dispose를 호출 해당 <xref:System.IDisposable.Dispose%2A> 에서 메서드는 `try` / `catch` 블록입니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-105">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="2e3ef-106">작업을 삭제할 하지 직접,를 사용 하 여 언어 구문와 같은 `using` (C#에서) 또는 `Using` (Visual Basic)에서는 합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-106">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="2e3ef-107">자세한 내용은의 "를 사용 하는 개체는 구현 IDisposable" 섹션을 참조 하십시오.는 <xref:System.IDisposable> 인터페이스 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-107">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="2e3ef-108"><xref:System.IO.StreamWriter> 인스턴스를 사용 하 여 기본값으로 <xref:System.Text.UTF8Encoding> 달리 지정 되지 않은 합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-108"><xref:System.IO.StreamWriter> defaults to using an instance of <xref:System.Text.UTF8Encoding> unless specified otherwise.</span></span> <span data-ttu-id="2e3ef-109">이 인스턴스에 `UTF8Encoding` 바이트 순서 표시가 (BOM) 이므로 생성 되는 <xref:System.Text.Encoding.GetPreamble%2A> 메서드는 빈 바이트 배열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-109">This instance of `UTF8Encoding` is constructed without a byte order mark (BOM), so its <xref:System.Text.Encoding.GetPreamble%2A> method returns an empty byte array.</span></span> <span data-ttu-id="2e3ef-110">이 생성자에 대 한 기본 utf-8 인코딩을 잘못 된 바이트에 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-110">The default UTF-8 encoding for this constructor throws an exception on invalid bytes.</span></span> <span data-ttu-id="2e3ef-111">이 동작은의 인코딩 개체가 제공 하는 동작은 다른는 <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-111">This behavior is different from the behavior provided by the encoding object in the <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="2e3ef-112">BOM을 지정 하 고 잘못 된 바이트에 예외가 발생 하는지 여부를 확인 하려면 같은 매개 변수로 한 인코딩 개체를 허용 하는 생성자를 사용 하 여 <xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Text.Encoding%29> 또는 <xref:System.IO.StreamWriter.%23ctor%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-112">To specify a BOM and determine whether an exception is thrown on invalid bytes, use a constructor that accepts an encoding object as a parameter, such as <xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Text.Encoding%29> or <xref:System.IO.StreamWriter.%23ctor%2A>.</span></span>  
  
 <span data-ttu-id="2e3ef-113">기본적으로는 <xref:System.IO.StreamWriter> 는 스레드로부터 안전 합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-113">By default, a <xref:System.IO.StreamWriter> is not thread safe.</span></span> <span data-ttu-id="2e3ef-114">참조 <xref:System.IO.TextWriter.Synchronized%2A?displayProperty=nameWithType> 스레드로부터 안전한 래퍼에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-114">See <xref:System.IO.TextWriter.Synchronized%2A?displayProperty=nameWithType> for a thread-safe wrapper.</span></span>  
  
 <span data-ttu-id="2e3ef-115">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-115">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e3ef-116">사용 하는 방법을 보여 주는 다음 예제는 <xref:System.IO.StreamWriter> 하 C 드라이브의 디렉터리를 나열 하 고 다음 사용 하 여 파일을 작성 하는 개체는 <xref:System.IO.StreamReader> 를 읽고 각 디렉터리 이름을 표시 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-116">The following example shows how to use a <xref:System.IO.StreamWriter> object to write a file that lists the directories on the C drive, and then uses a <xref:System.IO.StreamReader> object to read and display each directory name.</span></span> <span data-ttu-id="2e3ef-117">이러한 개체를 사용 하는 것이 좋습니다는 `using` 문을 관리 되지 않는 리소스를 제대로 처리 되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-117">A good practice is to use these objects in a `using` statement so that the unmanaged resources are correctly disposed.</span></span> <span data-ttu-id="2e3ef-118">`using` 문을 자동으로 호출 <xref:System.IDisposable.Dispose%2A> 가 사용 하는 코드가 완료 되 면 개체에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-118">The `using` statement automatically calls <xref:System.IDisposable.Dispose%2A> on the object when the code that is using it has completed.</span></span> <span data-ttu-id="2e3ef-119">이 예에서 사용 된 생성자에서 사용 하기 위해 지원 되지 않습니다 [!INCLUDE[win8_appstore_long](~/includes/win8-appstore-long-md.md)] 앱.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-119">The constructor used in this example is not supported for use in [!INCLUDE[win8_appstore_long](~/includes/win8-appstore-long-md.md)] Apps.</span></span>  
  
 [!code-csharp[StreamReadWrite#1](~/samples/snippets/csharp/VS_Snippets_CLR/streamreadwrite/cs/program.cs#1)]
 [!code-vb[StreamReadWrite#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/streamreadwrite/vb/module1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.Stream" />
    <altmember cref="T:System.IO.StreamReader" />
    <altmember cref="T:System.Text.Encoder" />
    <altmember cref="T:System.Text.Encoding" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2e3ef-120">
            <see cref="T:System.IO.StreamWriter" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-120">Initializes a new instance of the <see cref="T:System.IO.StreamWriter" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamWriter (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamWriter(System::IO::Stream ^ stream);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="2e3ef-121">쓸 스트림입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-121">The stream to write to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2e3ef-122">UTF-8 인코딩과 기본 버퍼 크기를 사용하여 지정된 스트림에 대해 <see cref="T:System.IO.StreamWriter" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-122">Initializes a new instance of the <see cref="T:System.IO.StreamWriter" /> class for the specified stream by using UTF-8 encoding and the default buffer size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e3ef-123">이 생성자를 만듭니다는 <xref:System.IO.StreamWriter> u t F-8 인코딩하여 하지 않고 바이트 순서 표시 (BOM), 따라서 해당 <xref:System.Text.Encoding.GetPreamble%2A> 메서드는 빈 바이트 배열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-123">This constructor creates a <xref:System.IO.StreamWriter> with UTF-8 encoding without a Byte-Order Mark (BOM), so its <xref:System.Text.Encoding.GetPreamble%2A> method returns an empty byte array.</span></span> <span data-ttu-id="2e3ef-124">이 생성자에 대 한 기본 utf-8 인코딩을 잘못 된 바이트에 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-124">The default UTF-8 encoding for this constructor throws an exception on invalid bytes.</span></span> <span data-ttu-id="2e3ef-125">이 동작은의 인코딩 개체가 제공 하는 동작은 다른는 <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-125">This behavior is different from the behavior provided by the encoding object in the <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="2e3ef-126">잘못 된 바이트에 예외가 발생 여부를 지정 하려면 같은 매개 변수로 한 인코딩 개체를 허용 하는 생성자를 사용 하 여 <xref:System.IO.StreamWriter.%23ctor%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-126">To specify whether an exception is thrown on invalid bytes, use a constructor that accepts an encoding object as a parameter, such as <xref:System.IO.StreamWriter.%23ctor%2A>.</span></span> <span data-ttu-id="2e3ef-127"><xref:System.IO.StreamWriter.BaseStream%2A> 속성은 사용 하 여 초기화는 `stream` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-127">The <xref:System.IO.StreamWriter.BaseStream%2A> property is initialized using the `stream` parameter.</span></span> <span data-ttu-id="2e3ef-128">스트림 위치 다시 설정 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-128">The position of the stream is not reset.</span></span>  
  
 <span data-ttu-id="2e3ef-129"><xref:System.IO.StreamWriter> 호출 개체 <xref:System.IO.Stream.Dispose> 제공 된 <xref:System.IO.Stream> 개체 때 <xref:System.IO.StreamWriter.Dispose%2A?displayProperty=nameWithType> 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-129">The <xref:System.IO.StreamWriter> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamWriter.Dispose%2A?displayProperty=nameWithType> is called.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="2e3ef-130">문자 집합을 특정 문화권 설정을 사용 하 여 컴파일하고 하면 서로 다른 문화권 설정 사용 하 여 동일한 문자 검색 문자 해석할 수 없어 및 예외를 throw 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-130">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="2e3ef-131">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-131">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e3ef-132">다음 코드 예제에서는이 생성자를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-132">The following code example demonstrates this constructor.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter.ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.streamwriter.ctor/cs/program1.cs#1)]
 [!code-vb[System.IO.StreamWriter.ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.streamwriter.ctor/vb/program1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2e3ef-133">
            <paramref name="stream" />에 쓸 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-133">
              <paramref name="stream" /> is not writable.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2e3ef-134">
            <paramref name="stream" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-134">
              <paramref name="stream" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamWriter (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamWriter(System::String ^ path);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="2e3ef-135">기록할 전체 파일 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-135">The complete file path to write to.</span>
          </span>
          <span data-ttu-id="2e3ef-136">
            <c>경로</c>는 파일 이름일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-136">
              <c>path</c> can be a file name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2e3ef-137">기본 인코딩 및 버퍼 크기를 사용하여 지정된 파일에 대해 <see cref="T:System.IO.StreamWriter" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-137">Initializes a new instance of the <see cref="T:System.IO.StreamWriter" /> class for the specified file by using the default encoding and buffer size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e3ef-138">이 생성자를 만듭니다는 <xref:System.IO.StreamWriter> u t F-8 인코딩하여 하지 않고 바이트 순서 표시 (BOM), 따라서 해당 <xref:System.Text.Encoding.GetPreamble%2A> 메서드는 빈 바이트 배열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-138">This constructor creates a <xref:System.IO.StreamWriter> with UTF-8 encoding without a Byte-Order Mark (BOM), so its <xref:System.Text.Encoding.GetPreamble%2A> method returns an empty byte array.</span></span> <span data-ttu-id="2e3ef-139">이 생성자에 대 한 기본 utf-8 인코딩을 잘못 된 바이트에 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-139">The default UTF-8 encoding for this constructor throws an exception on invalid bytes.</span></span> <span data-ttu-id="2e3ef-140">이 동작은의 인코딩 개체가 제공 하는 동작은 다른는 <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-140">This behavior is different from the behavior provided by the encoding object in the <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="2e3ef-141">BOM을 지정 하 고 잘못 된 바이트에 예외가 발생 하는지 여부를 확인 하려면 같은 매개 변수로 한 인코딩 개체를 허용 하는 생성자를 사용 하 여 <xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Text.Encoding%29>합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-141">To specify a BOM and determine whether an exception is thrown on invalid bytes, use a constructor that accepts an encoding object as a parameter, such as <xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Text.Encoding%29>.</span></span>  
  
 <span data-ttu-id="2e3ef-142">`path` 매개 변수는 파일 이름, 범용 명명 규칙 (UNC) 공유에 파일을 포함 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-142">The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</span></span> <span data-ttu-id="2e3ef-143">파일이 있으면 덮어씁니다. 그렇지 않은 경우 새 파일이 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-143">If the file exists, it is overwritten; otherwise, a new file is created.</span></span>  
  
 <span data-ttu-id="2e3ef-144">`path` 매개 변수는 디스크에 저장 된 파일이 필요 하지 않으면 스트림을 사용 하 여 액세스를 지 원하는 시스템의 모든 일부가 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-144">The `path` parameter is not required to be a file stored on disk; it can be any part of a system that supports access using streams.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="2e3ef-145">문자 집합을 특정 문화권 설정을 사용 하 여 컴파일하고 하면 서로 다른 문화권 설정 사용 하 여 동일한 문자 검색 문자 해석할 수 없어 및 예외를 throw 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-145">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="2e3ef-146">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-146">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e3ef-147">다음 코드 예제에서는이 생성자를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-147">The following code example demonstrates this constructor.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter.ctor#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.streamwriter.ctor/cs/program5.cs#5)]
 [!code-vb[System.IO.StreamWriter.ctor#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.streamwriter.ctor/vb/program5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="2e3ef-148">액세스가 거부되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-148">Access is denied.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2e3ef-149">
            <paramref name="path" />가 빈 문자열("")인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-149">
              <paramref name="path" /> is an empty string ("").</span>
          </span>
          <span data-ttu-id="2e3ef-150">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-150">-or-</span>
          </span>
          <span data-ttu-id="2e3ef-151">
            <paramref name="path" />에 com1, com2 등의 시스템 장치 이름이 포함되어 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-151">
              <paramref name="path" /> contains the name of a system device (com1, com2, and so on).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2e3ef-152">
            <paramref name="path" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-152">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="2e3ef-153">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-153">The specified path is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="2e3ef-154">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-154">The specified path, file name, or both exceed the system-defined maximum length.</span>
          </span>
          <span data-ttu-id="2e3ef-155">예를 들어 Windows 기반 플랫폼에서 경로는 248자를 초과할 수 없고 파일 이름은 260자를 초과할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-155">For example, on Windows-based platforms, paths must not exceed 248 characters, and file names must not exceed 260 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="2e3ef-156">
            <paramref name="path" />에 부정확하거나 올바르지 않은 파일 이름, 디렉터리 이름 또는 볼륨 레이블 구문이 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-156">
              <paramref name="path" /> includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="2e3ef-157">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-157">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="2e3ef-158">에 파일 읽기 및 쓰기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-158">for reading and writing files.</span>
          </span>
          <span data-ttu-id="2e3ef-159">연관 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-159">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamWriter (System.IO.Stream stream, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamWriter(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="2e3ef-160">쓸 스트림입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-160">The stream to write to.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="2e3ef-161">사용할 문자 인코딩입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-161">The character encoding to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2e3ef-162">지정된 인코딩과 기본 버퍼 크기를 사용하여 지정된 스트림에 대한 <see cref="T:System.IO.StreamWriter" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-162">Initializes a new instance of the <see cref="T:System.IO.StreamWriter" /> class for the specified stream by using the specified encoding and the default buffer size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e3ef-163">이 생성자는 <xref:System.IO.StreamWriter.Encoding%2A> 인코딩 매개 변수를 사용 하 여 속성 및 <xref:System.IO.StreamWriter.BaseStream%2A> stream 매개 변수를 사용 하 여 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-163">This constructor initializes the <xref:System.IO.StreamWriter.Encoding%2A> property using the encoding parameter, and the <xref:System.IO.StreamWriter.BaseStream%2A> property using the stream parameter.</span></span> <span data-ttu-id="2e3ef-164">스트림 위치 다시 설정 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-164">The position of the stream is not reset.</span></span> <span data-ttu-id="2e3ef-165">자세한 내용은 <xref:System.IO.TextWriter.Encoding%2A>을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-165">For additional information, see <xref:System.IO.TextWriter.Encoding%2A>.</span></span>  
  
 <span data-ttu-id="2e3ef-166"><xref:System.IO.StreamWriter> 호출 개체 <xref:System.IO.Stream.Dispose> 제공 된 <xref:System.IO.Stream> 개체 때 <xref:System.IO.StreamWriter.Dispose%2A?displayProperty=nameWithType> 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-166">The <xref:System.IO.StreamWriter> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamWriter.Dispose%2A?displayProperty=nameWithType> is called.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="2e3ef-167">문자 집합을 특정 문화권 설정을 사용 하 여 컴파일하고 하면 서로 다른 문화권 설정 사용 하 여 동일한 문자 검색 문자를 해석할 수 없어 및를 throw 하면 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-167">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="2e3ef-168">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-168">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e3ef-169">다음 예제에서는이 생성자를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-169">The following example demonstrates this constructor.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter.ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.streamwriter.ctor/cs/program2.cs#2)]
 [!code-vb[System.IO.StreamWriter.ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.streamwriter.ctor/vb/program2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2e3ef-170">
            <paramref name="stream" /> 또는 <paramref name="encoding" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-170">
              <paramref name="stream" /> or <paramref name="encoding" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2e3ef-171">
            <paramref name="stream" />에 쓸 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-171">
              <paramref name="stream" /> is not writable.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamWriter (string path, bool append);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, bool append) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, append As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamWriter(System::String ^ path, bool append);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="append" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="2e3ef-172">기록할 전체 파일 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-172">The complete file path to write to.</span>
          </span>
        </param>
        <param name="append">
          <span data-ttu-id="2e3ef-173">데이터를 파일에 추가하려면 <see langword="true" />이고, 파일을 덮어쓰려면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-173">
              <see langword="true" /> to append data to the file; <see langword="false" /> to overwrite the file.</span>
          </span>
          <span data-ttu-id="2e3ef-174">지정한 파일이 없으며 이 매개 변수에 영향이 없으면 생성자는 새 파일을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-174">If the specified file does not exist, this parameter has no effect, and the constructor creates a new file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2e3ef-175">기본 인코딩 및 버퍼 크기를 사용하여 지정된 파일에 대해 <see cref="T:System.IO.StreamWriter" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-175">Initializes a new instance of the <see cref="T:System.IO.StreamWriter" /> class for the specified file by using the default encoding and buffer size.</span>
          </span>
          <span data-ttu-id="2e3ef-176">해당 파일이 있으면 덮어쓰거나 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-176">If the file exists, it can be either overwritten or appended to.</span>
          </span>
          <span data-ttu-id="2e3ef-177">해당 파일이 없으면 이 생성자는 새 파일을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-177">If the file does not exist, this constructor creates a new file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e3ef-178">이 생성자를 만듭니다는 <xref:System.IO.StreamWriter> u t F-8 인코딩하여 하지 않고 바이트 순서 표시 (BOM), 따라서 해당 <xref:System.Text.Encoding.GetPreamble%2A> 메서드는 빈 바이트 배열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-178">This constructor creates a <xref:System.IO.StreamWriter> with UTF-8 encoding without a Byte-Order Mark (BOM), so its <xref:System.Text.Encoding.GetPreamble%2A> method returns an empty byte array.</span></span> <span data-ttu-id="2e3ef-179">이 생성자에 대 한 기본 utf-8 인코딩을 잘못 된 바이트에 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-179">The default UTF-8 encoding for this constructor throws an exception on invalid bytes.</span></span> <span data-ttu-id="2e3ef-180">이 동작은의 인코딩 개체가 제공 하는 동작은 다른는 <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-180">This behavior is different from the behavior provided by the encoding object in the <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="2e3ef-181">BOM을 지정 하 고 잘못 된 바이트에 예외가 발생 하는지 여부를 확인 하려면 같은 매개 변수로 한 인코딩 개체를 허용 하는 생성자를 사용 하 여 <xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Text.Encoding%29>합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-181">To specify a BOM and determine whether an exception is thrown on invalid bytes, use a constructor that accepts an encoding object as a parameter, such as <xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Text.Encoding%29>.</span></span>  
  
 <span data-ttu-id="2e3ef-182">`path` 매개 변수는 파일 이름, 범용 명명 규칙 (UNC) 공유에 파일을 포함 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-182">The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</span></span>  
  
 <span data-ttu-id="2e3ef-183">`path` 매개 변수는 디스크에 저장 된 파일이 필요 하지 않으면 스트림을 사용 하 여 액세스를 지 원하는 시스템의 모든 일부가 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-183">The `path` parameter is not required to be a file stored on disk; it can be any part of a system that supports access using streams.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="2e3ef-184">문자 집합을 특정 문화권 설정을 사용 하 여 컴파일하고 하면 서로 다른 문화권 설정 사용 하 여 동일한 문자 검색 문자를 해석할 수 없어 및를 throw 하면 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-184">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="2e3ef-185">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-185">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e3ef-186">다음 코드 예제에서는이 생성자를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-186">The following code example demonstrates this constructor.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter.ctor#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.streamwriter.ctor/cs/program6.cs#6)]
 [!code-vb[System.IO.StreamWriter.ctor#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.streamwriter.ctor/vb/program6.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="2e3ef-187">액세스가 거부되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-187">Access is denied.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2e3ef-188">
            <paramref name="path" />가 비어 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-188">
              <paramref name="path" /> is empty.</span>
          </span>
          <span data-ttu-id="2e3ef-189">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-189">-or-</span>
          </span>
          <span data-ttu-id="2e3ef-190">
            <paramref name="path" />에 com1, com2 등의 시스템 장치 이름이 포함되어 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-190">
              <paramref name="path" /> contains the name of a system device (com1, com2, and so on).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2e3ef-191">
            <paramref name="path" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-191">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="2e3ef-192">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-192">The specified path is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="2e3ef-193">
            <paramref name="path" />에 부정확하거나 올바르지 않은 파일 이름, 디렉터리 이름 또는 볼륨 레이블 구문이 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-193">
              <paramref name="path" /> includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="2e3ef-194">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-194">The specified path, file name, or both exceed the system-defined maximum length.</span>
          </span>
          <span data-ttu-id="2e3ef-195">예를 들어 Windows 기반 플랫폼에서 경로는 248자를 초과할 수 없고 파일 이름은 260자를 초과할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-195">For example, on Windows-based platforms, paths must not exceed 248 characters, and file names must not exceed 260 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="2e3ef-196">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-196">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="2e3ef-197">에 파일 읽기 및 쓰기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-197">for reading and writing files.</span>
          </span>
          <span data-ttu-id="2e3ef-198">연관 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-198">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamWriter (System.IO.Stream stream, System.Text.Encoding encoding, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Text.Encoding encoding, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamWriter(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, int bufferSize);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="2e3ef-199">쓸 스트림입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-199">The stream to write to.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="2e3ef-200">사용할 문자 인코딩입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-200">The character encoding to use.</span>
          </span>
        </param>
        <param name="bufferSize">
          <span data-ttu-id="2e3ef-201">버퍼 크기(바이트)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-201">The buffer size, in bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2e3ef-202">지정된 인코딩과 버퍼 크기를 사용하여 지정된 스트림에 대한 <see cref="T:System.IO.StreamWriter" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-202">Initializes a new instance of the <see cref="T:System.IO.StreamWriter" /> class for the specified stream by using the specified encoding and buffer size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e3ef-203">이 생성자는 <xref:System.IO.StreamWriter.Encoding%2A> 사용 하 여 속성은 `encoding` 매개 변수를 및 <xref:System.IO.StreamWriter.BaseStream%2A> 사용 하 여 속성의 `stream` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-203">This constructor initializes the <xref:System.IO.StreamWriter.Encoding%2A> property using the `encoding` parameter, and the <xref:System.IO.StreamWriter.BaseStream%2A> property using the `stream` parameter.</span></span> <span data-ttu-id="2e3ef-204">스트림 위치 다시 설정 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-204">The position of the stream is not reset.</span></span> <span data-ttu-id="2e3ef-205">자세한 내용은 <xref:System.IO.TextWriter.Encoding%2A>을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-205">For additional information, see <xref:System.IO.TextWriter.Encoding%2A>.</span></span>  
  
 <span data-ttu-id="2e3ef-206"><xref:System.IO.StreamWriter> 호출 개체 <xref:System.IO.Stream.Dispose> 제공 된 <xref:System.IO.Stream> 개체 때 <xref:System.IO.StreamWriter.Dispose%2A?displayProperty=nameWithType> 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-206">The <xref:System.IO.StreamWriter> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamWriter.Dispose%2A?displayProperty=nameWithType> is called.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="2e3ef-207">문자 집합을 특정 문화권 설정을 사용 하 여 컴파일하고 하면 서로 다른 문화권 설정 사용 하 여 동일한 문자 검색 문자를 해석할 수 없어 및를 throw 하면 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-207">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="2e3ef-208">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-208">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e3ef-209">다음 예제에서는이 생성자를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-209">The following example demonstrates this constructor.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter.ctor#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.streamwriter.ctor/cs/program3.cs#3)]
 [!code-vb[System.IO.StreamWriter.ctor#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.streamwriter.ctor/vb/program3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2e3ef-210">
            <paramref name="stream" /> 또는 <paramref name="encoding" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-210">
              <paramref name="stream" /> or <paramref name="encoding" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2e3ef-211">
            <paramref name="bufferSize" />가 음수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-211">
              <paramref name="bufferSize" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2e3ef-212">
            <paramref name="stream" />에 쓸 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-212">
              <paramref name="stream" /> is not writable.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamWriter (string path, bool append, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, bool append, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamWriter(System::String ^ path, bool append, System::Text::Encoding ^ encoding);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="append" Type="System.Boolean" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="2e3ef-213">기록할 전체 파일 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-213">The complete file path to write to.</span>
          </span>
        </param>
        <param name="append">
          <span data-ttu-id="2e3ef-214">데이터를 파일에 추가하려면 <see langword="true" />이고, 파일을 덮어쓰려면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-214">
              <see langword="true" /> to append data to the file; <see langword="false" /> to overwrite the file.</span>
          </span>
          <span data-ttu-id="2e3ef-215">지정한 파일이 없으며 이 매개 변수에 영향이 없으면 생성자는 새 파일을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-215">If the specified file does not exist, this parameter has no effect, and the constructor creates a new file.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="2e3ef-216">사용할 문자 인코딩입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-216">The character encoding to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2e3ef-217">지정된 인코딩 및 기본 버퍼 크기를 사용하여 지정된 파일에 대해 <see cref="T:System.IO.StreamWriter" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-217">Initializes a new instance of the <see cref="T:System.IO.StreamWriter" /> class for the specified file by using the specified encoding and default buffer size.</span>
          </span>
          <span data-ttu-id="2e3ef-218">해당 파일이 있으면 덮어쓰거나 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-218">If the file exists, it can be either overwritten or appended to.</span>
          </span>
          <span data-ttu-id="2e3ef-219">해당 파일이 없으면 이 생성자는 새 파일을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-219">If the file does not exist, this constructor creates a new file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e3ef-220">이 생성자는 <xref:System.IO.StreamWriter.Encoding%2A> 인코딩 매개 변수를 사용 하 여 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-220">This constructor initializes the <xref:System.IO.StreamWriter.Encoding%2A> property using the encoding parameter.</span></span> <span data-ttu-id="2e3ef-221">자세한 내용은 <xref:System.IO.TextWriter.Encoding%2A>을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-221">For additional information, see <xref:System.IO.TextWriter.Encoding%2A>.</span></span>  
  
 <span data-ttu-id="2e3ef-222">`path` 범용 명명 규칙 (UNC) 공유에 파일을 포함 하는 파일 이름을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-222">`path` can be a file name, including a file on a Universal Naming Convention (UNC) share.</span></span>  
  
 <span data-ttu-id="2e3ef-223">`path` 디스크에 저장 된 파일이 필요 하지 않습니다. 스트림을 통해 액세스를 지 원하는 시스템의 모든 부분 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-223">`path` is not required to be a file stored on disk; it can be any part of a system that supports access via streams.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="2e3ef-224">문자 집합을 특정 문화권 설정을 사용 하 여 컴파일하고 하면 서로 다른 문화권 설정 사용 하 여 동일한 문자 검색 문자를 해석할 수 없어 및를 throw 하면 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-224">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="2e3ef-225">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-225">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e3ef-226">다음 예제에서는이 생성자를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-226">The following example demonstrates this constructor.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter.ctor#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.streamwriter.ctor/cs/program7.cs#7)]
 [!code-vb[System.IO.StreamWriter.ctor#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.streamwriter.ctor/vb/program7.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="2e3ef-227">액세스가 거부되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-227">Access is denied.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2e3ef-228">
            <paramref name="path" />가 비어 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-228">
              <paramref name="path" /> is empty.</span>
          </span>
          <span data-ttu-id="2e3ef-229">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-229">-or-</span>
          </span>
          <span data-ttu-id="2e3ef-230">
            <paramref name="path" />에 com1, com2 등의 시스템 장치 이름이 포함되어 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-230">
              <paramref name="path" /> contains the name of a system device (com1, com2, and so on).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2e3ef-231">
            <paramref name="path" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-231">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="2e3ef-232">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-232">The specified path is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="2e3ef-233">
            <paramref name="path" />에 부정확하거나 올바르지 않은 파일 이름, 디렉터리 이름 또는 볼륨 레이블 구문이 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-233">
              <paramref name="path" /> includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="2e3ef-234">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-234">The specified path, file name, or both exceed the system-defined maximum length.</span>
          </span>
          <span data-ttu-id="2e3ef-235">예를 들어 Windows 기반 플랫폼에서 경로는 248자를 초과할 수 없고 파일 이름은 260자를 초과할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-235">For example, on Windows-based platforms, paths must not exceed 248 characters, and file names must not exceed 260 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="2e3ef-236">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-236">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="2e3ef-237">에 파일 읽기 및 쓰기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-237">for reading and writing files.</span>
          </span>
          <span data-ttu-id="2e3ef-238">연관 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-238">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamWriter (System.IO.Stream stream, System.Text.Encoding encoding, int bufferSize, bool leaveOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Text.Encoding encoding, int32 bufferSize, bool leaveOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamWriter(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, int bufferSize, bool leaveOpen);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="bufferSize" Type="System.Int32" />
        <Parameter Name="leaveOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="2e3ef-239">쓸 스트림입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-239">The stream to write to.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="2e3ef-240">사용할 문자 인코딩입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-240">The character encoding to use.</span>
          </span>
        </param>
        <param name="bufferSize">
          <span data-ttu-id="2e3ef-241">버퍼 크기(바이트)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-241">The buffer size, in bytes.</span>
          </span>
        </param>
        <param name="leaveOpen">
          <span data-ttu-id="2e3ef-242">
            <see cref="T:System.IO.StreamWriter" /> 개체를 삭제한 후 스트림을 열어 두려면 <see langword="true" />이고, 닫으려면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-242">
              <see langword="true" /> to leave the stream open after the <see cref="T:System.IO.StreamWriter" /> object is disposed; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2e3ef-243">지정된 인코딩과 기본 버퍼 크기를 사용하여 지정된 스트림에 대한 <see cref="T:System.IO.StreamWriter" /> 클래스의 새 인스턴스를 초기화하며, 선택적으로 스트림을 연 상태로 둘 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-243">Initializes a new instance of the <see cref="T:System.IO.StreamWriter" /> class for the specified stream by using the specified encoding and buffer size, and optionally leaves the stream open.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e3ef-244">설정 하지 않으면는 `leaveOpen` 매개 변수를 `true`, <xref:System.IO.StreamWriter> 호출 개체 <xref:System.IO.Stream.Dispose> 제공 된 <xref:System.IO.Stream> 개체 때 <xref:System.IO.StreamWriter.Dispose%2A?displayProperty=nameWithType> 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-244">Unless you set the `leaveOpen` parameter to `true`, the <xref:System.IO.StreamWriter> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamWriter.Dispose%2A?displayProperty=nameWithType> is called.</span></span>  
  
 <span data-ttu-id="2e3ef-245">이 생성자는 <xref:System.IO.StreamWriter.Encoding%2A> 사용 하 여 속성은 `encoding` 매개 변수를 초기화 합니다는 <xref:System.IO.StreamWriter.BaseStream%2A> 사용 하 여 속성은 `stream` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-245">This constructor initializes the <xref:System.IO.StreamWriter.Encoding%2A> property by using the `encoding` parameter, and initializes the <xref:System.IO.StreamWriter.BaseStream%2A> property by using the `stream` parameter.</span></span> <span data-ttu-id="2e3ef-246">스트림 위치 다시 설정 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-246">The position of the stream is not reset.</span></span> <span data-ttu-id="2e3ef-247">자세한 내용은 참조는 <xref:System.IO.TextWriter.Encoding%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-247">For additional information, see the <xref:System.IO.TextWriter.Encoding%2A> property.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="2e3ef-248">문자 집합을 특정 문화권 설정을 사용 하 여 컴파일하고 하면 서로 다른 문화권 설정 사용 하 여 동일한 문자 검색 문자를 해석할 수 없어 및를 throw 하면 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-248">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e3ef-249">다음 예제에서는이 생성자를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-249">The following example demonstrates this constructor.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter.ctor#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.streamwriter.ctor/cs/program4.cs#4)]
 [!code-vb[System.IO.StreamWriter.ctor#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.streamwriter.ctor/vb/program4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2e3ef-250">
            <paramref name="stream" /> 또는 <paramref name="encoding" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-250">
              <paramref name="stream" /> or <paramref name="encoding" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2e3ef-251">
            <paramref name="bufferSize" />가 음수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-251">
              <paramref name="bufferSize" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2e3ef-252">
            <paramref name="stream" />에 쓸 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-252">
              <paramref name="stream" /> is not writable.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamWriter (string path, bool append, System.Text.Encoding encoding, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, bool append, class System.Text.Encoding encoding, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamWriter(System::String ^ path, bool append, System::Text::Encoding ^ encoding, int bufferSize);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="append" Type="System.Boolean" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="2e3ef-253">기록할 전체 파일 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-253">The complete file path to write to.</span>
          </span>
        </param>
        <param name="append">
          <span data-ttu-id="2e3ef-254">데이터를 파일에 추가하려면 <see langword="true" />이고, 파일을 덮어쓰려면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-254">
              <see langword="true" /> to append data to the file; <see langword="false" /> to overwrite the file.</span>
          </span>
          <span data-ttu-id="2e3ef-255">지정한 파일이 없으며 이 매개 변수에 영향이 없으면 생성자는 새 파일을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-255">If the specified file does not exist, this parameter has no effect, and the constructor creates a new file.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="2e3ef-256">사용할 문자 인코딩입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-256">The character encoding to use.</span>
          </span>
        </param>
        <param name="bufferSize">
          <span data-ttu-id="2e3ef-257">버퍼 크기(바이트)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-257">The buffer size, in bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2e3ef-258">지정된 인코딩과 버퍼 크기를 사용하여 지정 경로의 지정 파일에 대한 <see cref="T:System.IO.StreamWriter" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-258">Initializes a new instance of the <see cref="T:System.IO.StreamWriter" /> class for the specified file on the specified path, using the specified encoding and buffer size.</span>
          </span>
          <span data-ttu-id="2e3ef-259">해당 파일이 있으면 덮어쓰거나 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-259">If the file exists, it can be either overwritten or appended to.</span>
          </span>
          <span data-ttu-id="2e3ef-260">해당 파일이 없으면 이 생성자는 새 파일을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-260">If the file does not exist, this constructor creates a new file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e3ef-261">이 생성자는 <xref:System.IO.StreamWriter.Encoding%2A> 인코딩 매개 변수를 사용 하 여 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-261">This constructor initializes the <xref:System.IO.StreamWriter.Encoding%2A> property using the encoding parameter.</span></span> <span data-ttu-id="2e3ef-262">자세한 내용은 <xref:System.IO.TextWriter.Encoding%2A>을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-262">For additional information, see <xref:System.IO.TextWriter.Encoding%2A>.</span></span>  
  
 <span data-ttu-id="2e3ef-263">`path` 범용 명명 규칙 (UNC) 공유에 파일을 포함 하는 파일 이름을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-263">`path` can be a file name, including a file on a Universal Naming Convention (UNC) share.</span></span>  
  
 <span data-ttu-id="2e3ef-264">`path` 디스크에 저장 된 파일이 필요 하지 않습니다. 스트림을 통해 액세스를 지 원하는 시스템의 모든 부분 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-264">`path` is not required to be a file stored on disk; it can be any part of a system that supports access via streams.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="2e3ef-265">문자 집합을 특정 문화권 설정을 사용 하 여 컴파일하고 하면 서로 다른 문화권 설정 사용 하 여 동일한 문자 검색 문자를 해석할 수 없어 및를 throw 하면 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-265">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="2e3ef-266">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-266">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e3ef-267">다음 예제에서는이 생성자를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-267">The following example demonstrates this constructor.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter.ctor#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.streamwriter.ctor/cs/program8.cs#8)]
 [!code-vb[System.IO.StreamWriter.ctor#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.streamwriter.ctor/vb/program8.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2e3ef-268">
            <paramref name="path" />가 빈 문자열("")인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-268">
              <paramref name="path" /> is an empty string ("").</span>
          </span>
          <span data-ttu-id="2e3ef-269">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-269">-or-</span>
          </span>
          <span data-ttu-id="2e3ef-270">
            <paramref name="path" />에 com1, com2 등의 시스템 장치 이름이 포함되어 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-270">
              <paramref name="path" /> contains the name of a system device (com1, com2, and so on).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2e3ef-271">
            <paramref name="path" /> 또는 <paramref name="encoding" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-271">
              <paramref name="path" /> or <paramref name="encoding" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2e3ef-272">
            <paramref name="bufferSize" />가 음수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-272">
              <paramref name="bufferSize" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="2e3ef-273">
            <paramref name="path" />에 부정확하거나 올바르지 않은 파일 이름, 디렉터리 이름 또는 볼륨 레이블 구문이 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-273">
              <paramref name="path" /> includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="2e3ef-274">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-274">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="2e3ef-275">액세스가 거부되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-275">Access is denied.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="2e3ef-276">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-276">The specified path is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="2e3ef-277">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-277">The specified path, file name, or both exceed the system-defined maximum length.</span>
          </span>
          <span data-ttu-id="2e3ef-278">예를 들어 Windows 기반 플랫폼에서 경로는 248자를 초과할 수 없고 파일 이름은 260자를 초과할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-278">For example, on Windows-based platforms, paths must not exceed 248 characters, and file names must not exceed 260 characters.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="2e3ef-279">에 파일 읽기 및 쓰기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-279">for reading and writing files.</span>
          </span>
          <span data-ttu-id="2e3ef-280">연관 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-280">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName="AutoFlush">
      <MemberSignature Language="C#" Value="public virtual bool AutoFlush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoFlush" />
      <MemberSignature Language="DocId" Value="P:System.IO.StreamWriter.AutoFlush" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AutoFlush As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoFlush { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2e3ef-281">
            <see cref="T:System.IO.StreamWriter" />가 <see cref="M:System.IO.StreamWriter.Write(System.Char)" />를 호출할 때마다 해당 버퍼를 내부 스트림에 플러시할지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-281">Gets or sets a value indicating whether the <see cref="T:System.IO.StreamWriter" /> will flush its buffer to the underlying stream after every call to <see cref="M:System.IO.StreamWriter.Write(System.Char)" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2e3ef-282">
            <see cref="T:System.IO.StreamWriter" />가 해당 버퍼를 플러시하게 하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-282">
              <see langword="true" /> to force <see cref="T:System.IO.StreamWriter" /> to flush its buffer; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e3ef-283">명시적으로 호출 하지 않으면 스트림을 내부 인코더가 플러시되지 것입니다 <xref:System.IO.StreamWriter.Flush%2A> 또는 <xref:System.IO.StreamWriter.Close%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-283">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.IO.StreamWriter.Flush%2A> or <xref:System.IO.StreamWriter.Close%2A>.</span></span> <span data-ttu-id="2e3ef-284">설정 <xref:System.IO.StreamWriter.AutoFlush%2A> 를 `true` 데이터 버퍼에서 스트림에 각 쓰기 작업 후 플러시되지만 것입니다 인코더 상태 플러시되지 것입니다 있다는 것을 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-284">Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream after each write operation, but the encoder state will not be flushed.</span></span> <span data-ttu-id="2e3ef-285">따라서 올바르게 문자의 다음 블록을 인코딩할 수 있도록 (부분 문자)의 상태를 유지 하기 위해 인코더 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-285">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="2e3ef-286">이 시나리오는 u t f 8와 UTF7 인코더는 인접 한 문자를 받은 후 특정 문자를 인코딩할만 수 있는 위치에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-286">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
 <span data-ttu-id="2e3ef-287">때 `AutoFlush` 로 설정 된 `false`, `StreamWriter` 버퍼링을 내부적으로 및에서 전달 된 인코딩에서 인코더에 잠재적으로 제한 된 정보만 작업을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-287">When `AutoFlush` is set to `false`, `StreamWriter` will do a limited amount of buffering, both internally and potentially in the encoder from the encoding you passed in.</span></span> <span data-ttu-id="2e3ef-288">설정 하 여 더 나은 성능을 얻을 수 있습니다 `AutoFlush` 를 `false`단 항상 호출, `Close` (또는 최소한 `Flush`) 다로 작성 한 `StreamWriter`합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-288">You can get better performance by setting `AutoFlush` to `false`, assuming that you always call `Close` (or at least `Flush`) when you're done writing with a `StreamWriter`.</span></span>  
  
 <span data-ttu-id="2e3ef-289">예를 들어 설정 `AutoFlush` 를 `true` 사용자 즉각적인 피드백을 기대 하는 장치에 작성 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-289">For example, set `AutoFlush` to `true` when you are writing to a device where the user expects immediate feedback.</span></span> <span data-ttu-id="2e3ef-290">`Console.Out` 이러한 경우 중 하나:는 `StreamWriter` 에 쓰기 위한 내부적으로 사용 `Console` 인코더 상태를 제외한 모든 내부 상태를 호출할 때마다 플러시 <xref:System.IO.StreamWriter.Write%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-290">`Console.Out` is one of these cases: The `StreamWriter` used internally for writing to `Console` flushes all its internal state except the encoder state after every call to <xref:System.IO.StreamWriter.Write%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2e3ef-291">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-291">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e3ef-292">다음 예제에서는 사용 하는 구문을 `AutoFlush` 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-292">The following example shows the syntax for using the `AutoFlush` property.</span></span>  
  
 [!code-cpp[System.IO.StreamWriter#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StreamWriter/CPP/logger.cpp#5)]
 [!code-csharp[System.IO.StreamWriter#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/logger.cs#5)]
 [!code-vb[System.IO.StreamWriter#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/logger.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream BaseStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream BaseStream" />
      <MemberSignature Language="DocId" Value="P:System.IO.StreamWriter.BaseStream" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BaseStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IO::Stream ^ BaseStream { System::IO::Stream ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2e3ef-293">백업 저장소의 인터페이스 역할을 하는 내부 스트림을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-293">Gets the underlying stream that interfaces with a backing store.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2e3ef-294">이 <see langword="StreamWriter" />가 쓰고 있는 스트림입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-294">The stream this <see langword="StreamWriter" /> is writing to.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e3ef-295">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-295">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2e3ef-296">현재 <see langword="StreamWriter" /> 개체 및 내부 스트림을 닫습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-296">Closes the current <see langword="StreamWriter" /> object and the underlying stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e3ef-297">이 메서드는 <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType>를 재정의합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-297">This method overrides <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2e3ef-298">이 구현 <xref:System.IO.StreamWriter.Close%2A> 호출은 <xref:System.IO.StreamWriter.Dispose%2A> 전달 메서드는 `true` 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-298">This implementation of <xref:System.IO.StreamWriter.Close%2A> calls the <xref:System.IO.StreamWriter.Dispose%2A> method passing a `true` value.</span></span>  
  
 <span data-ttu-id="2e3ef-299">호출 해야 <xref:System.IO.StreamWriter.Close%2A> 내부 스트림에 모든 데이터는 올바르게 기록 되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-299">You must call <xref:System.IO.StreamWriter.Close%2A> to ensure that all data is correctly written out to the underlying stream.</span></span> <span data-ttu-id="2e3ef-300">호출한 다음 <xref:System.IO.StreamWriter.Close%2A>에 대 한 모든 작업은 <xref:System.IO.StreamWriter> 예외가 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-300">Following a call to <xref:System.IO.StreamWriter.Close%2A>, any operations on the <xref:System.IO.StreamWriter> might raise exceptions.</span></span> <span data-ttu-id="2e3ef-301">디스크에 공간이 부족 한 경우 호출 <xref:System.IO.StreamWriter.Close%2A> 하면 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-301">If there is insufficient space on the disk, calling <xref:System.IO.StreamWriter.Close%2A> will raise an exception.</span></span>  
  
 <span data-ttu-id="2e3ef-302">명시적으로 호출 하지 않으면 스트림을 내부 인코더가 플러시되지 것입니다 <xref:System.IO.StreamWriter.Flush%2A> 또는 <xref:System.IO.StreamWriter.Close%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-302">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.IO.StreamWriter.Flush%2A> or <xref:System.IO.StreamWriter.Close%2A>.</span></span> <span data-ttu-id="2e3ef-303">설정 <xref:System.IO.StreamWriter.AutoFlush%2A> 를 `true` 스트림 버퍼에서 데이터를 플러시할 수는 있지만 인코더 상태 플러시되지 것입니다 있다는 것을 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-303">Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="2e3ef-304">따라서 올바르게 문자의 다음 블록을 인코딩할 수 있도록 (부분 문자)의 상태를 유지 하기 위해 인코더 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-304">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="2e3ef-305">이 시나리오는 u t f 8와 UTF7 인코더는 인접 한 문자를 받은 후 특정 문자를 인코딩할만 수 있는 위치에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-305">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e3ef-306">다음 코드 예제는 `Close` 메서드.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-306">The following code example demonstrates the `Close` method.</span></span>  
  
 [!code-cpp[System.IO.StreamWriter#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StreamWriter/CPP/logger.cpp#17)]
 [!code-csharp[System.IO.StreamWriter#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/logger.cs#17)]
 [!code-vb[System.IO.StreamWriter#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/logger.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="2e3ef-307">현재 인코딩으로 유니코드 서로게이트 쌍의 한 쪽을 표시할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-307">The current encoding does not support displaying half of a Unicode surrogate pair.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="2e3ef-308">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-308">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2e3ef-309">
            <see cref="T:System.IO.StreamWriter" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-309">Releases the unmanaged resources used by the <see cref="T:System.IO.StreamWriter" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e3ef-310">`disposing` 매개 변수가 `true`인 경우 이 메서드는 이 <xref:System.IO.StreamWriter>에서 참조하는 관리 개체가 보유하고 있는 리소스를 모두 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-310">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.StreamWriter> references.</span></span> <span data-ttu-id="2e3ef-311">이 메서드는 참조되는 각 개체의 `Dispose` 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-311">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="2e3ef-312">현재 인코딩으로 유니코드 서로게이트 쌍의 한 쪽을 표시할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-312">The current encoding does not support displaying half of a Unicode surrogate pair.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="2e3ef-313">
              <see langword="Dispose" />는 다른 개체에서 여러 번 호출할 수 있습니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="2e3ef-313">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="2e3ef-314">재정의 하는 경우 <see langword="Dispose" />한 이전 호출에서 삭제 된 개체를 참조 하지 않도록 주의 하십시오 <see langword="Dispose" />합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="2e3ef-314">When overriding <see langword="Dispose" />, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="2e3ef-315">이 메서드는 기본 클래스의 dispose 메서드를 호출 <see cref="M:System.IO.TextWriter.Dispose(System.Boolean)" />합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="2e3ef-315">This method calls the dispose method of the base class, <see cref="M:System.IO.TextWriter.Dispose(System.Boolean)" />.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public override System.Text.Encoding Encoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.IO.StreamWriter.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2e3ef-316">출력이 쓰여질 <see cref="T:System.Text.Encoding" />을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-316">Gets the <see cref="T:System.Text.Encoding" /> in which the output is written.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2e3ef-317">현재 인스턴스에 대해 생성자에 지정된 <see cref="T:System.Text.Encoding" />이거나, 인코딩이 지정되지 않은 경우 <see cref="T:System.Text.UTF8Encoding" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-317">The <see cref="T:System.Text.Encoding" /> specified in the constructor for the current instance, or <see cref="T:System.Text.UTF8Encoding" /> if an encoding was not specified.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e3ef-318">이 속성은 위치 헤더를 작성 해야에서 사용 하는 인코딩을 포함 하는 일부 XML 시나리오에 대 한 필요는 <xref:System.IO.StreamWriter>합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-318">This property is necessary for some XML scenarios where a header must be written containing the encoding used by the <xref:System.IO.StreamWriter>.</span></span> <span data-ttu-id="2e3ef-319">이렇게 하면 XML 코드는 임의의 소비를 <xref:System.IO.StreamWriter> 올바른 XML 헤더를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-319">This allows the XML code to consume an arbitrary <xref:System.IO.StreamWriter> and generate the correct XML header.</span></span>  
  
 <span data-ttu-id="2e3ef-320">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-320">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e3ef-321">다음 예제에서는 지정 된 인코딩을 검색 <xref:System.IO.StreamWriter> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-321">The following example retrieves the encoding of the specified <xref:System.IO.StreamWriter> instance.</span></span>  
  
 [!code-cpp[System.IO.StreamWriter#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StreamWriter/CPP/logger.cpp#11)]
 [!code-csharp[System.IO.StreamWriter#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/logger.cs#11)]
 [!code-vb[System.IO.StreamWriter#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/logger.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2e3ef-322">현재 writer의 모든 버퍼를 지우면 버퍼링된 모든 데이터가 내부 스트림에 쓰여집니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-322">Clears all buffers for the current writer and causes any buffered data to be written to the underlying stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e3ef-323">이 메서드는 <xref:System.IO.TextWriter.Flush%2A?displayProperty=nameWithType>를 재정의합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-323">This method overrides <xref:System.IO.TextWriter.Flush%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2e3ef-324">명시적으로 호출 하지 않으면 스트림을 내부 인코더가 플러시되지 것입니다 `Flush` 또는 <xref:System.IO.StreamWriter.Close%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-324">Flushing the stream will not flush its underlying encoder unless you explicitly call `Flush` or <xref:System.IO.StreamWriter.Close%2A>.</span></span> <span data-ttu-id="2e3ef-325">설정 <xref:System.IO.StreamWriter.AutoFlush%2A> 를 `true` 데이터 버퍼에서 스트림에 각 쓰기 작업 후 플러시되지만 것입니다 인코더 상태 플러시되지 것입니다 있다는 것을 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-325">Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream after each write operation, but the encoder state will not be flushed.</span></span> <span data-ttu-id="2e3ef-326">따라서 올바르게 문자의 다음 블록을 인코딩할 수 있도록 (부분 문자)의 상태를 유지 하기 위해 인코더 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-326">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="2e3ef-327">이 시나리오는 u t f 8와 UTF7 인코더는 인접 한 문자를 받은 후 특정 문자를 인코딩할만 수 있는 위치에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-327">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
 <span data-ttu-id="2e3ef-328">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-328">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2e3ef-329">현재 writer가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-329">The current writer is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="2e3ef-330">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-330">An I/O error has occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="2e3ef-331">현재 인코딩으로 유니코드 서로게이트 쌍의 한 쪽을 표시할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-331">The current encoding does not support displaying half of a Unicode surrogate pair.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.Stream.Close" />
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task FlushAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task FlushAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.FlushAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FlushAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ FlushAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2e3ef-332">이 스트림에 대한 모든 버퍼를 비동기적으로 지우고 버퍼링된 모든 데이터가 내부 장치에 비동기적으로 쓰여지도록 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-332">Clears all buffers for this stream asynchronously and causes any buffered data to be written to the underlying device.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2e3ef-333">비동기 플러시 작업을 나타내는 작업입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-333">A task that represents the asynchronous flush operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2e3ef-334">스트림이 삭제되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-334">The stream has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static readonly System.IO.StreamWriter Null;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.IO.StreamWriter Null" />
      <MemberSignature Language="DocId" Value="F:System.IO.StreamWriter.Null" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Null As StreamWriter " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::IO::StreamWriter ^ Null;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.StreamWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2e3ef-335">쓸 수는 있지만 읽을 수는 없는 백업 저장소를 <see langword="StreamWriter" />에 제공하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-335">Provides a <see langword="StreamWriter" /> with no backing store that can be written to, but not read from.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e3ef-336">사용 하 여 `Null` 출력을 리디렉션하는 `StreamWriter` 운영 체제 리소스를 사용 하지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-336">Use `Null` to redirect output to a `StreamWriter` that will not consume any operating system resources.</span></span>  
  
 <span data-ttu-id="2e3ef-337">경우는 `StreamWriter.Write` 메서드를 호출 `Null`, 호출이 반환 되 고 데이터가 없는 백업 저장소에 실제로 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-337">When the `StreamWriter.Write` methods are invoked on `Null`, the call simply returns, and no data is actually written to any backing store.</span></span>  
  
 <span data-ttu-id="2e3ef-338">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-338">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e3ef-339">다음 예제에서는 사용 하는 `Null` 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-339">The following example demonstrates a use of the `Null` field.</span></span>  
  
 [!code-cpp[System.IO.StreamWriter#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StreamWriter/CPP/logger.cpp#6)]
 [!code-csharp[System.IO.StreamWriter#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/logger.cs#6)]
 [!code-vb[System.IO.StreamWriter#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/logger.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2e3ef-340">데이터를 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-340">Writes data to the stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.Write(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(char value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="2e3ef-341">스트림에 쓸 문자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-341">The character to write to the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2e3ef-342">스트림에 문자를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-342">Writes a character to the stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e3ef-343">이 메서드는 <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>를 재정의합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-343">This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2e3ef-344">지정 된 문자 중간에 스트림 끝에 도달할 때 내부 스트림에 쓰여집니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-344">The specified character is written to the underlying stream unless the end of the stream is reached prematurely.</span></span> <span data-ttu-id="2e3ef-345">경우 <xref:System.IO.StreamWriter.AutoFlush%2A> 은 `true`, <xref:System.IO.StreamWriter.Flush%2A> 자동으로 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-345">If <xref:System.IO.StreamWriter.AutoFlush%2A> is `true`, <xref:System.IO.StreamWriter.Flush%2A> is invoked automatically.</span></span>  
  
 <span data-ttu-id="2e3ef-346">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-346">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="2e3ef-347">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-347">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2e3ef-348">
            <see cref="P:System.IO.StreamWriter.AutoFlush" />가 true이거나 <see cref="T:System.IO.StreamWriter" /> 버퍼가 꽉 차 있고, 현재 작성기가 닫혀 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-348">
              <see cref="P:System.IO.StreamWriter.AutoFlush" /> is true or the <see cref="T:System.IO.StreamWriter" /> buffer is full, and current writer is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="2e3ef-349">
            <see cref="P:System.IO.StreamWriter.AutoFlush" />가 true이거나 <see cref="T:System.IO.StreamWriter" /> 버퍼가 꽉 차 있고, <see cref="T:System.IO.StreamWriter" />가 스트림 끝에 있기 때문에 버퍼 내용을 내부 고정 크기 스트림에 쓸 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-349">
              <see cref="P:System.IO.StreamWriter.AutoFlush" /> is true or the <see cref="T:System.IO.StreamWriter" /> buffer is full, and the contents of the buffer cannot be written to the underlying fixed size stream because the <see cref="T:System.IO.StreamWriter" /> is at the end the stream.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.Write(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Char())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;char&gt; ^ buffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="2e3ef-350">쓸 데이터를 포함하는 문자 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-350">A character array containing the data to write.</span>
          </span>
          <span data-ttu-id="2e3ef-351">
            <c>버퍼</c>가 <see langword="null" />이면 아무 것도 쓰지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-351">If <c>buffer</c> is <see langword="null" />, nothing is written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2e3ef-352">스트림에 문자 배열을 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-352">Writes a character array to the stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e3ef-353">이 메서드는 <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>를 재정의합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-353">This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2e3ef-354">지정된 된 문자는 중간에 스트림 끝에 도달할 때 내부 스트림에 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-354">The specified characters are written to the underlying stream unless the end of the stream is reached prematurely.</span></span> <span data-ttu-id="2e3ef-355">경우 <xref:System.IO.StreamWriter.AutoFlush%2A> 은 `true`, <xref:System.IO.StreamWriter.Flush%2A> 자동으로 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-355">If <xref:System.IO.StreamWriter.AutoFlush%2A> is `true`, <xref:System.IO.StreamWriter.Flush%2A> is invoked automatically.</span></span>  
  
 <span data-ttu-id="2e3ef-356">이 메서드는 보다 빠른 성능을 제공할 수 있습니다 `Write` (`char[],``int,``int`) 확인 하려면 더 적은 인수 있기 때문입니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-356">This method might provide faster performance than `Write` (`char[],``int,``int`) because it has fewer arguments to check.</span></span>  
  
 <span data-ttu-id="2e3ef-357">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-357">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="2e3ef-358">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-358">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2e3ef-359">
            <see cref="P:System.IO.StreamWriter.AutoFlush" />가 true이거나 <see cref="T:System.IO.StreamWriter" /> 버퍼가 꽉 차 있고, 현재 작성기가 닫혀 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-359">
              <see cref="P:System.IO.StreamWriter.AutoFlush" /> is true or the <see cref="T:System.IO.StreamWriter" /> buffer is full, and current writer is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="2e3ef-360">
            <see cref="P:System.IO.StreamWriter.AutoFlush" />가 true이거나 <see cref="T:System.IO.StreamWriter" /> 버퍼가 꽉 차 있고, <see cref="T:System.IO.StreamWriter" />가 스트림 끝에 있기 때문에 버퍼 내용을 내부 고정 크기 스트림에 쓸 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-360">
              <see cref="P:System.IO.StreamWriter.AutoFlush" /> is true or the <see cref="T:System.IO.StreamWriter" /> buffer is full, and the contents of the buffer cannot be written to the underlying fixed size stream because the <see cref="T:System.IO.StreamWriter" /> is at the end the stream.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(valuetype System.ReadOnlySpan`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.Write(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="2e3ef-361">스트림에 쓸 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-361">The string to write to the stream.</span>
          </span>
          <span data-ttu-id="2e3ef-362">
            <c>값</c>이 null이면 아무 것도 쓰지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-362">If <c>value</c> is null, nothing is written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2e3ef-363">스트림에 문자열을 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-363">Writes a string to the stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e3ef-364">이 메서드는 <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>를 재정의합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-364">This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2e3ef-365">지정 된 <xref:System.String> 중간에 스트림 끝에 도달할 때 내부 스트림에 쓰여집니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-365">The specified <xref:System.String> is written to the underlying stream unless the end of the stream is reached prematurely.</span></span>  
  
 <span data-ttu-id="2e3ef-366"><xref:System.IO.StreamWriter.Flush%2A> 호출 하는 자동으로 경우 <xref:System.IO.StreamWriter.AutoFlush%2A> 은 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-366"><xref:System.IO.StreamWriter.Flush%2A> is invoked automatically if <xref:System.IO.StreamWriter.AutoFlush%2A> is `true`.</span></span> <span data-ttu-id="2e3ef-367">경우 `value` 은 `null`, 항목이 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-367">If `value` is `null`, no entries are written.</span></span>  
  
 <span data-ttu-id="2e3ef-368">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-368">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2e3ef-369">
            <see cref="P:System.IO.StreamWriter.AutoFlush" />가 true이거나 <see cref="T:System.IO.StreamWriter" /> 버퍼가 꽉 차 있고, 현재 작성기가 닫혀 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-369">
              <see cref="P:System.IO.StreamWriter.AutoFlush" /> is true or the <see cref="T:System.IO.StreamWriter" /> buffer is full, and current writer is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="2e3ef-370">
            <see cref="P:System.IO.StreamWriter.AutoFlush" />가 true이거나 <see cref="T:System.IO.StreamWriter" /> 버퍼가 꽉 차 있고, <see cref="T:System.IO.StreamWriter" />가 스트림 끝에 있기 때문에 버퍼 내용을 내부 고정 크기 스트림에 쓸 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-370">
              <see cref="P:System.IO.StreamWriter.AutoFlush" /> is true or the <see cref="T:System.IO.StreamWriter" /> buffer is full, and the contents of the buffer cannot be written to the underlying fixed size stream because the <see cref="T:System.IO.StreamWriter" /> is at the end the stream.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="2e3ef-371">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-371">An I/O error occurs.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.Write(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="2e3ef-372">쓸 데이터를 포함하는 문자 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-372">A character array that contains the data to write.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="2e3ef-373">데이터 읽기를 시작하는 버퍼의 문자 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-373">The character position in the buffer at which to start reading data.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="2e3ef-374">쓸 최대 문자 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-374">The maximum number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2e3ef-375">스트림에 문자의 하위 배열을 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-375">Writes a subarray of characters to the stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e3ef-376">이 메서드는 <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>를 재정의합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-376">This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2e3ef-377">문자에서 읽혀집니다 `buffer` 부터 `index` 까지 계속 `index` + (`count` -1).</span><span class="sxs-lookup"><span data-stu-id="2e3ef-377">The characters are read from `buffer` beginning at `index` and continuing through `index` + (`count` - 1).</span></span> <span data-ttu-id="2e3ef-378">모든 문자는 중간에 기본 스트림 끝에 도달할 때 내부 스트림에 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-378">All characters are written to the underlying stream unless the end of the underlying stream is reached prematurely.</span></span> <span data-ttu-id="2e3ef-379"><xref:System.IO.StreamWriter.Flush%2A> 호출 하는 자동으로 경우 <xref:System.IO.StreamWriter.AutoFlush%2A> 은 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-379"><xref:System.IO.StreamWriter.Flush%2A> is invoked automatically if <xref:System.IO.StreamWriter.AutoFlush%2A> is `true`.</span></span>  
  
 <span data-ttu-id="2e3ef-380">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-380">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e3ef-381">이 예제에서는 배열의 세 번째 요소부터 시작 하는 파일에 13 개 요소 배열에서 8 자의 씁니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-381">This example writes eight characters from a 13-element array to a file, beginning at the third element of the array.</span></span>  
  
 [!code-cpp[Classic StreamWriter.Write2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic StreamWriter.Write2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic StreamWriter.Write2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic StreamWriter.Write2 Example/CS/source.cs#1)]
 [!code-vb[Classic StreamWriter.Write2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic StreamWriter.Write2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2e3ef-382">
            <paramref name="buffer" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-382">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2e3ef-383">버퍼 길이에서 <paramref name="index" />를 빼면 <paramref name="count" />보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-383">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2e3ef-384">
            <paramref name="index" /> 또는 <paramref name="count" />가 음수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-384">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="2e3ef-385">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-385">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2e3ef-386">
            <see cref="P:System.IO.StreamWriter.AutoFlush" />가 true이거나 <see cref="T:System.IO.StreamWriter" /> 버퍼가 꽉 차 있고, 현재 작성기가 닫혀 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-386">
              <see cref="P:System.IO.StreamWriter.AutoFlush" /> is true or the <see cref="T:System.IO.StreamWriter" /> buffer is full, and current writer is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="2e3ef-387">
            <see cref="P:System.IO.StreamWriter.AutoFlush" />가 true이거나 <see cref="T:System.IO.StreamWriter" /> 버퍼가 꽉 차 있고, <see cref="T:System.IO.StreamWriter" />가 스트림 끝에 있기 때문에 버퍼 내용을 내부 고정 크기 스트림에 쓸 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-387">
              <see cref="P:System.IO.StreamWriter.AutoFlush" /> is true or the <see cref="T:System.IO.StreamWriter" /> buffer is full, and the contents of the buffer cannot be written to the underlying fixed size stream because the <see cref="T:System.IO.StreamWriter" /> is at the end the stream.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2e3ef-388">데이터를 스트림에 비동기적으로 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-388">Writes data to the stream asynchronously.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.WriteAsync(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteAsync (value As Char) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(char value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="2e3ef-389">스트림에 쓸 문자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-389">The character to write to the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2e3ef-390">문자를 스트림에 비동기적으로 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-390">Writes a character to the stream asynchronously.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2e3ef-391">비동기 쓰기 작업을 나타내는 작업입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-391">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2e3ef-392">다음 예제에서는 단일 문자를 작성 하는 방법을 보여 줍니다 (문자 "a")를 사용 하 여 텍스트 파일에는 <xref:System.IO.StreamWriter.WriteAsync%28System.Char%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-392">The following example shows how to write a single character (the letter "a") to a text file by using the <xref:System.IO.StreamWriter.WriteAsync%28System.Char%29> method.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/example20.cs#20)]
 [!code-vb[System.IO.StreamWriter#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/example20.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2e3ef-393">스트림 작성기가 삭제됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-393">The stream writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2e3ef-394">이전 쓰기 작업에서 현재 스트림 작성기를 사용하고 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-394">The stream writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.WriteAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteAsync (value As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="2e3ef-395">스트림에 쓸 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-395">The string to write to the stream.</span>
          </span>
          <span data-ttu-id="2e3ef-396">
            <c>값</c>이 <see langword="null" />이면 아무 것도 쓰지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-396">If <c>value</c> is <see langword="null" />, nothing is written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2e3ef-397">문자열을 스트림에 비동기적으로 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-397">Writes a string to the stream asynchronously.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2e3ef-398">비동기 쓰기 작업을 나타내는 작업입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-398">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2e3ef-399">문자열을 사용 하 여 텍스트 파일에 기록 하는 방법을 보여 주는 다음 예제는 <xref:System.IO.StreamWriter.WriteAsync%28System.String%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-399">The following example shows how to write a string to a text file by using the <xref:System.IO.StreamWriter.WriteAsync%28System.String%29> method.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter#21](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/example21.cs#21)]
 [!code-vb[System.IO.StreamWriter#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/example21.vb#21)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2e3ef-400">스트림 작성기가 삭제됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-400">The stream writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2e3ef-401">이전 쓰기 작업에서 현재 스트림 작성기를 사용하고 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-401">The stream writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (ReadOnlyMemory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(valuetype System.ReadOnlyMemory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.WriteAsync(System.ReadOnlyMemory{System.Char},System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlyMemory&lt;System.Char&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.WriteAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteAsync (buffer As Char(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="2e3ef-402">쓸 데이터를 포함하는 문자 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-402">A character array that contains the data to write.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="2e3ef-403">데이터 읽기를 시작할 버퍼의 문자 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-403">The character position in the buffer at which to begin reading data.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="2e3ef-404">쓸 최대 문자 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-404">The maximum number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2e3ef-405">문자의 하위 배열을 스트림에 비동기적으로 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-405">Writes a subarray of characters to the stream asynchronously.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2e3ef-406">비동기 쓰기 작업을 나타내는 작업입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-406">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2e3ef-407">다음 예제에서는 여러 문자를 사용 하 여 텍스트 파일에 작성 하는 방법을 보여 줍니다는 <xref:System.IO.StreamWriter.WriteAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-407">The following example shows how to write multiple characters to a text file by using the <xref:System.IO.StreamWriter.WriteAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter#24](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/example24.cs#24)]
 [!code-vb[System.IO.StreamWriter#24](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/example24.vb#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2e3ef-408">
            <paramref name="buffer" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-408">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2e3ef-409">
            <paramref name="index" />와 <paramref name="count" />의 합이 버퍼 길이보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-409">The <paramref name="index" /> plus <paramref name="count" /> is greater than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2e3ef-410">
            <paramref name="index" /> 또는 <paramref name="count" />가 음수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-410">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2e3ef-411">스트림 작성기가 삭제됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-411">The stream writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2e3ef-412">이전 쓰기 작업에서 현재 스트림 작성기를 사용하고 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-412">The stream writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(valuetype System.ReadOnlySpan`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.WriteLine(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (buffer As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLineAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2e3ef-413">데이터와 줄 종결자를 차례로 스트림에 비동기적으로 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-413">Writes data followed by a line terminator asynchronously to the stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.WriteLineAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteLineAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteLineAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2e3ef-414">줄 종결자를 스트림에 비동기적으로 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-414">Writes a line terminator asynchronously to the stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2e3ef-415">비동기 쓰기 작업을 나타내는 작업입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-415">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e3ef-416">줄 종결자가 정의한는 <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-416">The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2e3ef-417">스트림 작성기가 삭제됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-417">The stream writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2e3ef-418">이전 쓰기 작업에서 현재 스트림 작성기를 사용하고 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-418">The stream writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.WriteLineAsync(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteLineAsync (value As Char) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteLineAsync(char value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="2e3ef-419">스트림에 쓸 문자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-419">The character to write to the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2e3ef-420">문자와 줄 종결자를 차례로 스트림에 비동기적으로 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-420">Writes a character followed by a line terminator asynchronously to the stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2e3ef-421">비동기 쓰기 작업을 나타내는 작업입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-421">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e3ef-422">줄 종결자가 정의한는 <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-422">The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e3ef-423">다음 예제에서는 단일 문자를 작성 하는 방법을 보여 줍니다 (문자 "a")를 사용 하 여 단일 문자 (문자 "b")를 포함 하는 다른 줄 뒤 텍스트 파일의 줄에 <xref:System.IO.StreamWriter.WriteLineAsync%28System.Char%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-423">The following example shows how to write a single character (the letter "a") to a line in a text file, followed by another line that contains a single character (the letter "b"), by using the <xref:System.IO.StreamWriter.WriteLineAsync%28System.Char%29> method.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter#22](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/example22.cs#22)]
 [!code-vb[System.IO.StreamWriter#22](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/example22.vb#22)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2e3ef-424">스트림 작성기가 삭제됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-424">The stream writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2e3ef-425">이전 쓰기 작업에서 현재 스트림 작성기를 사용하고 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-425">The stream writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.WriteLineAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteLineAsync (value As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteLineAsync(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="2e3ef-426">쓸 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-426">The string to write.</span>
          </span>
          <span data-ttu-id="2e3ef-427">값이 <see langword="null" />이면 줄 종결자만 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-427">If the value is <see langword="null" />, only a line terminator is written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2e3ef-428">문자열과 줄 종결자를 차례로 스트림에 비동기적으로 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-428">Writes a string followed by a line terminator asynchronously to the stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2e3ef-429">비동기 쓰기 작업을 나타내는 작업입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-429">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e3ef-430">줄 종결자가 정의한는 <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-430">The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e3ef-431">다음 예제를 사용 하 여 문자열 값을 텍스트 파일에 구성 된 두 줄을 작성 하는 방법을 보여 줍니다는 <xref:System.IO.StreamWriter.WriteLineAsync%28System.String%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-431">The following example shows how to write two lines that consist of string values to a text file by using the <xref:System.IO.StreamWriter.WriteLineAsync%28System.String%29> method.</span></span>  
  
 [!code-csharp[System.IO.StreamWriter#23](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/example23.cs#23)]
 [!code-vb[System.IO.StreamWriter#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/example23.vb#23)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2e3ef-432">스트림 작성기가 삭제됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-432">The stream writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2e3ef-433">이전 쓰기 작업에서 현재 스트림 작성기를 사용하고 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-433">The stream writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync (ReadOnlyMemory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync(valuetype System.ReadOnlyMemory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.WriteLineAsync(System.ReadOnlyMemory{System.Char},System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlyMemory&lt;System.Char&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteLineAsync (buffer As Char(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteLineAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="2e3ef-434">쓸 데이터가 있는 문자 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-434">The character array to write data from.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="2e3ef-435">데이터 읽기를 시작하는 버퍼의 문자 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-435">The character position in the buffer at which to start reading data.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="2e3ef-436">쓸 최대 문자 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-436">The maximum number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2e3ef-437">문자의 하위 배열과 줄 종결자를 차례로 스트림에 비동기적으로 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-437">Writes a subarray of characters followed by a line terminator asynchronously to the stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2e3ef-438">비동기 쓰기 작업을 나타내는 작업입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-438">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e3ef-439">줄 종결자가 정의한는 <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-439">The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e3ef-440">다음 예제에서는 문자를 사용 하 여 텍스트 파일에서 두 개의 별도 줄을 작성 하는 방법을 보여 줍니다.는 <xref:System.IO.StreamWriter.WriteLineAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-440">The following example shows how to write characters to two separate lines in a text file by using the <xref:System.IO.StreamWriter.WriteLineAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="2e3ef-441">첫 번째 줄 ("줄 먼저" 뒤에 공백 문자) 문자열에서 처음 11 문자를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="2e3ef-441">The first line contains the first 11 characters from the string (the letters "First line" followed by a space).</span></span> <span data-ttu-id="2e3ef-442">문자열에서 나머지 문자를 포함 하는 두 번째 줄 (문자 "및 줄의 두 번째").</span><span class="sxs-lookup"><span data-stu-id="2e3ef-442">The second line contains the remaining characters from the string (the letters "and second line").</span></span>  
  
 [!code-csharp[System.IO.StreamWriter#25](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/example25.cs#25)]
 [!code-vb[System.IO.StreamWriter#25](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/example25.vb#25)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2e3ef-443">
            <paramref name="buffer" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-443">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2e3ef-444">
            <paramref name="index" />와 <paramref name="count" />의 합이 버퍼 길이보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-444">The <paramref name="index" /> plus <paramref name="count" /> is greater than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2e3ef-445">
            <paramref name="index" /> 또는 <paramref name="count" />가 음수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-445">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2e3ef-446">스트림 작성기가 삭제됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-446">The stream writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2e3ef-447">이전 쓰기 작업에서 현재 스트림 작성기를 사용하고 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e3ef-447">The stream writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>