<Type Name="StreamReader" FullName="System.IO.StreamReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="eaa27dae19046fabd638ca567a16e9b0c52a25ff" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30420677" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class StreamReader : System.IO.TextReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit StreamReader extends System.IO.TextReader" />
  <TypeSignature Language="DocId" Value="T:System.IO.StreamReader" />
  <TypeSignature Language="VB.NET" Value="Public Class StreamReader&#xA;Inherits TextReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class StreamReader : System::IO::TextReader" />
  <AssemblyInfo>
    <AssemblyName>System.IO</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.TextReader</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="619f6-101">특정 인코딩의 바이트 스트림에서 문자를 읽는 <see cref="T:System.IO.TextReader" />를 구현합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="619f6-101">Implements a <see cref="T:System.IO.TextReader" /> that reads characters from a byte stream in a particular encoding.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="619f6-102"><xref:System.IO.StreamReader> 반면를 특정 인코딩으로 문자 입력을 위해 설계 된 <xref:System.IO.Stream> 클래스는 바이트 입력 및 출력에 대 한 설계 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-102"><xref:System.IO.StreamReader> is designed for character input in a particular encoding, whereas the <xref:System.IO.Stream> class is designed for byte input and output.</span></span> <span data-ttu-id="619f6-103">사용 하 여 <xref:System.IO.StreamReader> 표준 텍스트 파일에서 줄 정보를 읽기 위한 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-103">Use <xref:System.IO.StreamReader> for reading lines of information from a standard text file.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="619f6-104">이 형식이 구현 하는 <xref:System.IDisposable> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-104">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="619f6-105">형식을 사용 하 여 마쳤으면는 삭제 해야의 직접 또는 간접적으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-105">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="619f6-106">직접 형식의 dispose를 호출 해당 <xref:System.IDisposable.Dispose%2A> 에서 메서드는 `try` / `catch` 블록입니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-106">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="619f6-107">작업을 삭제할 하지 직접,를 사용 하 여 언어 구문와 같은 `using` (C#에서) 또는 `Using` (Visual Basic)에서는 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-107">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="619f6-108">자세한 내용은의 "를 사용 하는 개체는 구현 IDisposable" 섹션을 참조 하십시오.는 <xref:System.IDisposable> 인터페이스 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-108">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="619f6-109"><xref:System.IO.StreamReader> 그렇지 않은 경우 현재 시스템의 ANSI 코드 페이지 대신 지정 하지 않으면 u t F-8 인코딩으로 기본값입니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-109"><xref:System.IO.StreamReader> defaults to UTF-8 encoding unless specified otherwise, instead of defaulting to the ANSI code page for the current system.</span></span> <span data-ttu-id="619f6-110">U t F-8 유니코드 문자를 올바르게 처리 하 고 운영 체제의 언어 버전에서 일관 된 결과 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-110">UTF-8 handles Unicode characters correctly and provides consistent results on localized versions of the operating system.</span></span> <span data-ttu-id="619f6-111">사용 하 여 현재 문자 인코딩을 가져오는 경우는 <xref:System.IO.StreamReader.CurrentEncoding%2A> 속성 값이 될 때까지 신뢰할 수 있는 첫 번째 후 <xref:System.IO.StreamReader.Read%2A> 되므로 인코딩 자동 감지를 처음 호출 될 때까지 메서드는 <xref:System.IO.StreamReader.Read%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="619f6-111">If you get the current character encoding using the <xref:System.IO.StreamReader.CurrentEncoding%2A> property, the value is not reliable until after the first <xref:System.IO.StreamReader.Read%2A> method, since encoding auto detection is not done until the first call to a <xref:System.IO.StreamReader.Read%2A> method.</span></span>  
  
 <span data-ttu-id="619f6-112">기본적으로는 <xref:System.IO.StreamReader> 는 스레드로부터 안전 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-112">By default, a <xref:System.IO.StreamReader> is not thread safe.</span></span> <span data-ttu-id="619f6-113">참조 <xref:System.IO.TextReader.Synchronized%2A?displayProperty=nameWithType> 스레드로부터 안전한 래퍼에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-113">See <xref:System.IO.TextReader.Synchronized%2A?displayProperty=nameWithType> for a thread-safe wrapper.</span></span>  
  
 <span data-ttu-id="619f6-114"><xref:System.IO.StreamReader.Read%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> 및 <xref:System.IO.StreamWriter.Write%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> 메서드 오버 로드 한 읽기 및 쓰기 변수로 지정 된 문자 수는 `count` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-114">The <xref:System.IO.StreamReader.Read%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> and <xref:System.IO.StreamWriter.Write%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method overloads read and write the number of characters specified by the `count` parameter.</span></span> <span data-ttu-id="619f6-115">고유 해야 하는 이러한 <xref:System.IO.BufferedStream.Read%2A?displayProperty=nameWithType> 및 <xref:System.IO.BufferedStream.Write%2A?displayProperty=nameWithType>, 하 한 읽기 및 쓰기에 지정 된 바이트 수는 `count` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-115">These are to be distinguished from <xref:System.IO.BufferedStream.Read%2A?displayProperty=nameWithType> and <xref:System.IO.BufferedStream.Write%2A?displayProperty=nameWithType>, which read and write the number of bytes specified by the `count` parameter.</span></span> <span data-ttu-id="619f6-116">사용 하 여 <xref:System.IO.BufferedStream> 읽기 및 쓰기의 바이트 정수가 배열 요소에 대해서만 메서드.</span><span class="sxs-lookup"><span data-stu-id="619f6-116">Use the <xref:System.IO.BufferedStream> methods only for reading and writing an integral number of byte array elements.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="619f6-117">읽을 때는 <xref:System.IO.Stream>,이 스트림 내부 버퍼와 같은 크기 버퍼를 사용 하는 것이 효율적입니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-117">When reading from a <xref:System.IO.Stream>, it is more efficient to use a buffer that is the same size as the internal buffer of the stream.</span></span>  
  
 <span data-ttu-id="619f6-118">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-118">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="619f6-119">다음 예제에서는의 인스턴스를 사용 하 여 <xref:System.IO.StreamReader> 파일에서 텍스트를 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-119">The following example uses an instance of <xref:System.IO.StreamReader> to read text from a file.</span></span> <span data-ttu-id="619f6-120">이 예에서 사용 된 생성자에서 사용 하기 위해 지원 되지 않습니다 [!INCLUDE[win8_appstore_long](~/includes/win8-appstore-long-md.md)] 앱.</span><span class="sxs-lookup"><span data-stu-id="619f6-120">The constructor used in this example is not supported for use in [!INCLUDE[win8_appstore_long](~/includes/win8-appstore-long-md.md)] Apps.</span></span>  
  
 [!code-cpp[readtextfile#1](~/samples/snippets/cpp/VS_Snippets_CLR/ReadTextFile/CPP/readtextfile.cpp#1)]
 [!code-csharp[readtextfile#1](~/samples/snippets/csharp/VS_Snippets_CLR/ReadTextFile/CS/readtextfile.cs#1)]
 [!code-vb[readtextfile#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ReadTextFile/VB/readtextfile.vb#1)]  
  
 <span data-ttu-id="619f6-121">다음 예제는 <xref:System.IO.StreamReader> 개체와 호출 해당 <xref:System.IO.StreamReader.ReadAsync%2A> 메서드를 비동기적으로 파일을 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-121">The following example instantiates a <xref:System.IO.StreamReader> object and calls its <xref:System.IO.StreamReader.ReadAsync%2A> method to read a file asynchronously.</span></span>  
  
 [!code-csharp[System.IO.StreamReader#51](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamReader/CS/asyncex1.cs#51)]
 [!code-vb[System.IO.StreamReader#51](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamReader/VB/asyncex1.vb#51)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.Encoding" />
    <altmember cref="T:System.IO.Stream" />
    <altmember cref="T:System.IO.StreamWriter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="619f6-122">지정된 스트림에 대한 <see cref="T:System.IO.StreamReader" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-122">Initializes a new instance of the <see cref="T:System.IO.StreamReader" /> class for the specified stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamReader (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamReader.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamReader(System::IO::Stream ^ stream);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="619f6-123">읽을 스트림입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-123">The stream to be read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="619f6-124">지정된 스트림에 대한 <see cref="T:System.IO.StreamReader" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-124">Initializes a new instance of the <see cref="T:System.IO.StreamReader" /> class for the specified stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="619f6-125">이 생성자의 인코딩을 초기화 <xref:System.Text.UTF8Encoding>, <xref:System.IO.StreamReader.BaseStream%2A> 사용 하 여 속성의 `stream` 매개 변수 및 내부 버퍼 크기를 1024 바이트로 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-125">This constructor initializes the encoding to <xref:System.Text.UTF8Encoding>, the <xref:System.IO.StreamReader.BaseStream%2A> property using the `stream` parameter, and the internal buffer size to 1024 bytes.</span></span>  
  
 <span data-ttu-id="619f6-126"><xref:System.IO.StreamReader> 호출 개체 <xref:System.IO.Stream.Dispose> 제공 된 <xref:System.IO.Stream> 개체 때 <xref:System.IO.StreamReader.Dispose%2A?displayProperty=nameWithType> 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-126">The <xref:System.IO.StreamReader> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamReader.Dispose%2A?displayProperty=nameWithType> is called.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="619f6-127">문자 집합을 특정 문화권 설정을 사용 하 여 컴파일하고 하면 서로 다른 문화권 설정 사용 하 여 동일한 문자 검색 문자를 해석할 수 없어 및를 throw 하면 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-127">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="619f6-128">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-128">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="619f6-129">다음 코드 예제에서는 이러한 부하 분산 방식이 <xref:System.IO.StreamReader> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-129">The following code example demonstrates this <xref:System.IO.StreamReader> constructor.</span></span>  
  
 [!code-cpp[strmreader ctor1#1](~/samples/snippets/cpp/VS_Snippets_CLR/StrmReader Ctor1/CPP/strmreader ctor1.cpp#1)]
 [!code-csharp[strmreader ctor1#1](~/samples/snippets/csharp/VS_Snippets_CLR/StrmReader Ctor1/CS/strmreader ctor1.cs#1)]
 [!code-vb[strmreader ctor1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StrmReader Ctor1/VB/strmreader ctor1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="619f6-130">
            <paramref name="stream" />이 읽기를 지원하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-130">
              <paramref name="stream" /> does not support reading.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="619f6-131">
            <paramref name="stream" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-131">
              <paramref name="stream" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamReader (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamReader.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamReader(System::String ^ path);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="619f6-132">읽을 전체 파일 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-132">The complete file path to be read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="619f6-133">지정된 파일 이름에 대해 <see cref="T:System.IO.StreamReader" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-133">Initializes a new instance of the <see cref="T:System.IO.StreamReader" /> class for the specified file name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="619f6-134">의해 지정 된 전체 파일 경로 `path` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-134">The complete file path is specified by the `path` parameter.</span></span> <span data-ttu-id="619f6-135">이 생성자의 인코딩을 초기화 <xref:System.Text.UTF8Encoding> 및 버퍼 크기를 1024 바이트로 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-135">This constructor initializes the encoding to <xref:System.Text.UTF8Encoding> and the buffer size to 1024 bytes.</span></span>  
  
 <span data-ttu-id="619f6-136">`path` 매개 변수는 파일 이름, 범용 명명 규칙 (UNC) 공유에 파일을 포함 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-136">The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</span></span>  
  
 <span data-ttu-id="619f6-137">`path` 매개 변수는 디스크에 저장 된 파일이 필요 하지 않으면 스트림을 사용 하 여 액세스를 지 원하는 시스템의 모든 일부가 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-137">The `path` parameter is not required to be a file stored on disk; it can be any part of a system that supports access using streams.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="619f6-138">문자 집합을 특정 문화권 설정을 사용 하 여 컴파일하고 하면 서로 다른 문화권 설정 사용 하 여 동일한 문자 검색 문자를 해석할 수 없어 및를 throw 하면 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-138">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="619f6-139">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-139">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="619f6-140">다음 코드 예제에서는 이러한 부하 분산 방식이 <xref:System.IO.StreamReader> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-140">The following code example demonstrates this <xref:System.IO.StreamReader> constructor.</span></span>  
  
 [!code-cpp[strmreader ctor2#1](~/samples/snippets/cpp/VS_Snippets_CLR/StrmReader Ctor2/CPP/strmreader ctor2.cpp#1)]
 [!code-csharp[strmreader ctor2#1](~/samples/snippets/csharp/VS_Snippets_CLR/StrmReader Ctor2/CS/strmreader ctor2.cs#1)]
 [!code-vb[strmreader ctor2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StrmReader Ctor2/VB/strmreader ctor2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="619f6-141">
            <paramref name="path" />가 빈 문자열("")인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-141">
              <paramref name="path" /> is an empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="619f6-142">
            <paramref name="path" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-142">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="619f6-143">파일을 찾을 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-143">The file cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="619f6-144">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-144">The specified path is invalid, such as being on an unmapped drive.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="619f6-145">
            <paramref name="path" />에 부정확하거나 올바르지 않은 파일 이름, 디렉터리 이름 또는 볼륨 레이블이 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-145">
              <paramref name="path" /> includes an incorrect or invalid syntax for file name, directory name, or volume label.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamReader (System.IO.Stream stream, bool detectEncodingFromByteOrderMarks);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, bool detectEncodingFromByteOrderMarks) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamReader.#ctor(System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamReader(System::IO::Stream ^ stream, bool detectEncodingFromByteOrderMarks);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="detectEncodingFromByteOrderMarks" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="619f6-146">읽을 스트림입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-146">The stream to be read.</span>
          </span>
        </param>
        <param name="detectEncodingFromByteOrderMarks">
          <span data-ttu-id="619f6-147">파일의 시작 부분에서 바이트 순서 표시를 찾을지 여부를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-147">Indicates whether to look for byte order marks at the beginning of the file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="619f6-148">지정한 바이트 순서 표시 검색 옵션을 사용하여 지정된 스트림에 대해 <see cref="T:System.IO.StreamReader" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-148">Initializes a new instance of the <see cref="T:System.IO.StreamReader" /> class for the specified stream, with the specified byte order mark detection option.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="619f6-149">이 생성자의 인코딩을 초기화 <xref:System.Text.UTF8Encoding>, <xref:System.IO.StreamReader.BaseStream%2A> 사용 하 여 속성의 `stream` 매개 변수 및 내부 버퍼 크기를 1024 바이트로 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-149">This constructor initializes the encoding to <xref:System.Text.UTF8Encoding>, the <xref:System.IO.StreamReader.BaseStream%2A> property using the `stream` parameter, and the internal buffer size to 1024 bytes.</span></span>  
  
 <span data-ttu-id="619f6-150">`detectEncodingFromByteOrderMarks` 스트림의 첫 번째 3 바이트를 확인 하 여 인코딩을 매개 변수를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-150">The `detectEncodingFromByteOrderMarks` parameter detects the encoding by looking at the first three bytes of the stream.</span></span> <span data-ttu-id="619f6-151">U t F-8, little endian 유니코드를 자동으로 인식 하 고 big endian 유니코드 텍스트 파일 시작 적절 한 바이트 순서 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-151">It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte order marks.</span></span> <span data-ttu-id="619f6-152">자세한 내용은 <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=nameWithType> 메서드를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="619f6-152">See the <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=nameWithType> method for more information.</span></span>  
  
 <span data-ttu-id="619f6-153"><xref:System.IO.StreamReader> 호출 개체 <xref:System.IO.Stream.Dispose> 제공 된 <xref:System.IO.Stream> 개체 때 <xref:System.IO.StreamReader.Dispose%2A?displayProperty=nameWithType> 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-153">The <xref:System.IO.StreamReader> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamReader.Dispose%2A?displayProperty=nameWithType> is called.</span></span>  
  
 <span data-ttu-id="619f6-154">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-154">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="619f6-155">다음 코드 예제에서는 이러한 부하 분산 방식이 <xref:System.IO.StreamReader> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-155">The following code example demonstrates this <xref:System.IO.StreamReader> constructor.</span></span>  
  
 [!code-cpp[System.IO.StreamReader#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StreamReader/CPP/streamreadersample.cpp#2)]
 [!code-csharp[System.IO.StreamReader#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamReader/CS/streamreadersample.cs#2)]
 [!code-vb[System.IO.StreamReader#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamReader/VB/streamreadersample.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="619f6-156">
            <paramref name="stream" />이 읽기를 지원하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-156">
              <paramref name="stream" /> does not support reading.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="619f6-157">
            <paramref name="stream" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-157">
              <paramref name="stream" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamReader (System.IO.Stream stream, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamReader.#ctor(System.IO.Stream,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamReader(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="619f6-158">읽을 스트림입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-158">The stream to be read.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="619f6-159">사용할 문자 인코딩입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-159">The character encoding to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="619f6-160">지정된 문자 인코딩을 사용하여 지정된 스트림에 대해 <see cref="T:System.IO.StreamReader" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-160">Initializes a new instance of the <see cref="T:System.IO.StreamReader" /> class for the specified stream, with the specified character encoding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="619f6-161">문자 인코딩은 의해 설정 되 고 `encoding` 매개 변수 및 버퍼 크기를 1024 바이트로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-161">The character encoding is set by the `encoding` parameter, and the buffer size is set to 1024 bytes.</span></span> <span data-ttu-id="619f6-162"><xref:System.IO.StreamReader> 개체 스트림의 첫 번째 3 바이트를 검색 하 여 인코딩 검색을 시도 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-162">The <xref:System.IO.StreamReader> object attempts to  detect the encoding by looking at the first three bytes of the stream.</span></span> <span data-ttu-id="619f6-163">U t F-8, little endian 유니코드를 자동으로 인식 하 고 big endian 유니코드 텍스트 파일 시작 적절 한 바이트 순서 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-163">It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte order marks.</span></span> <span data-ttu-id="619f6-164">그렇지 않은 경우는 사용자가 제공한 인코딩은 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-164">Otherwise, the user-provided encoding is used.</span></span> <span data-ttu-id="619f6-165">자세한 내용은 <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=nameWithType> 메서드를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="619f6-165">See the <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=nameWithType> method for more information.</span></span>  
  
 <span data-ttu-id="619f6-166"><xref:System.IO.StreamReader> 호출 개체 <xref:System.IO.Stream.Dispose> 제공 된 <xref:System.IO.Stream> 개체 때 <xref:System.IO.StreamReader.Dispose%2A?displayProperty=nameWithType> 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-166">The <xref:System.IO.StreamReader> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamReader.Dispose%2A?displayProperty=nameWithType> is called.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="619f6-167">문자 집합을 특정 문화권 설정을 사용 하 여 컴파일하고 하면 서로 다른 문화권 설정 사용 하 여 동일한 문자 검색 문자를 해석할 수 없어 및를 throw 하면 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-167">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="619f6-168">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-168">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="619f6-169">다음 코드 예제에서는 이러한 부하 분산 방식이 <xref:System.IO.StreamReader> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-169">The following code example demonstrates this <xref:System.IO.StreamReader> constructor.</span></span>  
  
 [!code-cpp[System.IO.StreamReader#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StreamReader/CPP/streamreadersample.cpp#2)]
 [!code-csharp[System.IO.StreamReader#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamReader/CS/streamreadersample.cs#2)]
 [!code-vb[System.IO.StreamReader#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamReader/VB/streamreadersample.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="619f6-170">
            <paramref name="stream" />이 읽기를 지원하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-170">
              <paramref name="stream" /> does not support reading.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="619f6-171">
            <paramref name="stream" /> 또는 <paramref name="encoding" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-171">
              <paramref name="stream" /> or <paramref name="encoding" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamReader (string path, bool detectEncodingFromByteOrderMarks);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, bool detectEncodingFromByteOrderMarks) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamReader.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, detectEncodingFromByteOrderMarks As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamReader(System::String ^ path, bool detectEncodingFromByteOrderMarks);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="detectEncodingFromByteOrderMarks" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="619f6-172">읽을 전체 파일 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-172">The complete file path to be read.</span>
          </span>
        </param>
        <param name="detectEncodingFromByteOrderMarks">
          <span data-ttu-id="619f6-173">파일의 시작 부분에서 바이트 순서 표시를 찾을지 여부를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-173">Indicates whether to look for byte order marks at the beginning of the file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="619f6-174">지정한 바이트 순서 표시 검색 옵션을 사용하여 지정한 파일 이름에 대해 <see cref="T:System.IO.StreamReader" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-174">Initializes a new instance of the <see cref="T:System.IO.StreamReader" /> class for the specified file name, with the specified byte order mark detection option.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="619f6-175">이 생성자의 인코딩을 초기화 <xref:System.Text.UTF8Encoding>, <xref:System.IO.StreamReader.BaseStream%2A> 사용 하 여 속성의 `stream` 매개 변수 및 내부 버퍼 크기를 1024 바이트로 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-175">This constructor initializes the encoding to <xref:System.Text.UTF8Encoding>, the <xref:System.IO.StreamReader.BaseStream%2A> property using the `stream` parameter, and the internal buffer size to 1024 bytes.</span></span>  
  
 <span data-ttu-id="619f6-176">`path` 매개 변수는 파일 이름, 범용 명명 규칙 (UNC) 공유에 파일을 포함 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-176">The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</span></span>  
  
 <span data-ttu-id="619f6-177">`path` 매개 변수는 디스크에 저장 된 파일이 필요 하지 않으면 스트림을 사용 하 여 액세스를 지 원하는 시스템의 모든 일부가 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-177">The `path` parameter is not required to be a file stored on disk; it can be any part of a system that supports access using streams.</span></span>  
  
 <span data-ttu-id="619f6-178">`detectEncodingFromByteOrderMarks` 스트림의 첫 번째 3 바이트를 확인 하 여 인코딩을 매개 변수를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-178">The `detectEncodingFromByteOrderMarks` parameter detects the encoding by looking at the first three bytes of the stream.</span></span> <span data-ttu-id="619f6-179">U t F-8, little endian 유니코드를 자동으로 인식 하 고 big endian 유니코드 텍스트 파일 시작 적절 한 바이트 순서 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-179">It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte order marks.</span></span> <span data-ttu-id="619f6-180">그렇지 않은 경우는 <xref:System.Text.UTF8Encoding> 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-180">Otherwise, the <xref:System.Text.UTF8Encoding> is used.</span></span> <span data-ttu-id="619f6-181">자세한 내용은 <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=nameWithType> 메서드를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="619f6-181">See the <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=nameWithType> method for more information.</span></span>  
  
 <span data-ttu-id="619f6-182">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-182">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="619f6-183">다음 코드 예제에서는 이러한 부하 분산 방식이 <xref:System.IO.StreamReader> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-183">The following code example demonstrates this <xref:System.IO.StreamReader> constructor.</span></span>  
  
 [!code-cpp[System.IO.StreamReader#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StreamReader/CPP/streamreadersample.cpp#2)]
 [!code-csharp[System.IO.StreamReader#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamReader/CS/streamreadersample.cs#2)]
 [!code-vb[System.IO.StreamReader#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamReader/VB/streamreadersample.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="619f6-184">
            <paramref name="path" />가 빈 문자열("")인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-184">
              <paramref name="path" /> is an empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="619f6-185">
            <paramref name="path" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-185">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="619f6-186">파일을 찾을 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-186">The file cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="619f6-187">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-187">The specified path is invalid, such as being on an unmapped drive.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="619f6-188">
            <paramref name="path" />에 부정확하거나 올바르지 않은 파일 이름, 디렉터리 이름 또는 볼륨 레이블이 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-188">
              <paramref name="path" /> includes an incorrect or invalid syntax for file name, directory name, or volume label.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamReader (string path, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamReader.#ctor(System.String,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamReader(System::String ^ path, System::Text::Encoding ^ encoding);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="619f6-189">읽을 전체 파일 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-189">The complete file path to be read.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="619f6-190">사용할 문자 인코딩입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-190">The character encoding to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="619f6-191">지정된 문자 인코딩을 사용하여 지정된 파일 이름에 대해 <see cref="T:System.IO.StreamReader" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-191">Initializes a new instance of the <see cref="T:System.IO.StreamReader" /> class for the specified file name, with the specified character encoding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="619f6-192">이 생성자에 지정 된 대로 인코딩 초기화는 `encoding` 매개 변수 및 내부 버퍼 크기를 1024 바이트로 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-192">This constructor initializes the encoding as specified by the `encoding` parameter, and the internal buffer size to 1024 bytes.</span></span> <span data-ttu-id="619f6-193"><xref:System.IO.StreamReader> 개체 스트림의 첫 번째 3 바이트를 검색 하 여 인코딩 검색을 시도 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-193">The <xref:System.IO.StreamReader> object attempts to  detect the encoding by looking at the first three bytes of the stream.</span></span> <span data-ttu-id="619f6-194">U t F-8, little endian 유니코드를 자동으로 인식 하 고 big endian 유니코드 텍스트 파일 시작 적절 한 바이트 순서 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-194">It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte order marks.</span></span> <span data-ttu-id="619f6-195">그렇지 않은 경우는 사용자가 제공한 인코딩은 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-195">Otherwise, the user-provided encoding is used.</span></span> <span data-ttu-id="619f6-196">자세한 내용은 <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=nameWithType> 메서드를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="619f6-196">See the <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=nameWithType> method for more information.</span></span>  
  
 <span data-ttu-id="619f6-197">`path` 매개 변수는 파일 이름, 범용 명명 규칙 (UNC) 공유에 파일을 포함 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-197">The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</span></span>  
  
 <span data-ttu-id="619f6-198">`path` 매개 변수는 디스크에 저장 된 파일이 필요 하지 않으면 스트림을 사용 하 여 액세스를 지 원하는 시스템의 모든 일부가 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-198">The `path` parameter is not required to be a file stored on disk; it can be any part of a system that supports access using streams.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="619f6-199">문자 집합을 특정 문화권 설정을 사용 하 여 컴파일하고 하면 서로 다른 문화권 설정 사용 하 여 동일한 문자 검색 문자를 해석할 수 없어 및를 throw 하면 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-199">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="619f6-200">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-200">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="619f6-201">다음 코드 예제에서는 이러한 부하 분산 방식이 <xref:System.IO.StreamReader> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-201">The following code example demonstrates this <xref:System.IO.StreamReader> constructor.</span></span>  
  
 [!code-cpp[System.IO.StreamReader#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StreamReader/CPP/streamreadersample.cpp#2)]
 [!code-csharp[System.IO.StreamReader#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamReader/CS/streamreadersample.cs#2)]
 [!code-vb[System.IO.StreamReader#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamReader/VB/streamreadersample.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="619f6-202">
            <paramref name="path" />가 빈 문자열("")인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-202">
              <paramref name="path" /> is an empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="619f6-203">
            <paramref name="path" /> 또는 <paramref name="encoding" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-203">
              <paramref name="path" /> or <paramref name="encoding" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="619f6-204">파일을 찾을 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-204">The file cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="619f6-205">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-205">The specified path is invalid, such as being on an unmapped drive.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="619f6-206">
            <paramref name="path" />에 부정확하거나 올바르지 않은 파일 이름, 디렉터리 이름 또는 볼륨 레이블이 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-206">
              <paramref name="path" /> includes an incorrect or invalid syntax for file name, directory name, or volume label.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamReader (System.IO.Stream stream, System.Text.Encoding encoding, bool detectEncodingFromByteOrderMarks);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Text.Encoding encoding, bool detectEncodingFromByteOrderMarks) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamReader(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, bool detectEncodingFromByteOrderMarks);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="detectEncodingFromByteOrderMarks" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="619f6-207">읽을 스트림입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-207">The stream to be read.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="619f6-208">사용할 문자 인코딩입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-208">The character encoding to use.</span>
          </span>
        </param>
        <param name="detectEncodingFromByteOrderMarks">
          <span data-ttu-id="619f6-209">파일의 시작 부분에서 바이트 순서 표시를 찾을지 여부를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-209">Indicates whether to look for byte order marks at the beginning of the file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="619f6-210">지정된 문자 인코딩과 바이트 순서 표시 검색 옵션을 사용하여 특정 스트림에 대해 <see cref="T:System.IO.StreamReader" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-210">Initializes a new instance of the <see cref="T:System.IO.StreamReader" /> class for the specified stream, with the specified character encoding and byte order mark detection option.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="619f6-211">이 생성자에 지정 된 대로 인코딩 초기화는 `encoding` 매개 변수는 <xref:System.IO.StreamReader.BaseStream%2A> 사용 하 여 속성의 `stream` 매개 변수 및 내부 버퍼 크기를 1024 바이트로 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-211">This constructor initializes the encoding as specified by the `encoding` parameter, the <xref:System.IO.StreamReader.BaseStream%2A> property using the `stream` parameter, and the internal buffer size to 1024 bytes.</span></span>  
  
 <span data-ttu-id="619f6-212">`detectEncodingFromByteOrderMarks` 스트림의 첫 번째 3 바이트를 확인 하 여 인코딩을 매개 변수를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-212">The `detectEncodingFromByteOrderMarks` parameter detects the encoding by looking at the first three bytes of the stream.</span></span> <span data-ttu-id="619f6-213">U t F-8, little endian 유니코드를 자동으로 인식 하 고 big endian 유니코드 텍스트 파일 시작 적절 한 바이트 순서 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-213">It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte order marks.</span></span> <span data-ttu-id="619f6-214">그렇지 않은 경우는 사용자가 제공한 인코딩은 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-214">Otherwise, the user-provided encoding is used.</span></span> <span data-ttu-id="619f6-215">자세한 내용은 <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=nameWithType> 메서드를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="619f6-215">See the <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=nameWithType> method for more information.</span></span>  
  
 <span data-ttu-id="619f6-216"><xref:System.IO.StreamReader> 호출 개체 <xref:System.IO.Stream.Dispose> 제공 된 <xref:System.IO.Stream> 개체 때 <xref:System.IO.StreamReader.Dispose%2A?displayProperty=nameWithType> 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-216">The <xref:System.IO.StreamReader> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamReader.Dispose%2A?displayProperty=nameWithType> is called.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="619f6-217">문자 집합을 특정 문화권 설정을 사용 하 여 컴파일하고 하면 서로 다른 문화권 설정 사용 하 여 동일한 문자 검색 문자를 해석할 수 없어 및를 throw 하면 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-217">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="619f6-218">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-218">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="619f6-219">다음 코드 예제에서는 이러한 부하 분산 방식이 <xref:System.IO.StreamReader> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-219">The following code example demonstrates this <xref:System.IO.StreamReader> constructor.</span></span>  
  
 [!code-cpp[System.IO.StreamReader#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StreamReader/CPP/streamreadersample.cpp#2)]
 [!code-csharp[System.IO.StreamReader#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamReader/CS/streamreadersample.cs#2)]
 [!code-vb[System.IO.StreamReader#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamReader/VB/streamreadersample.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="619f6-220">
            <paramref name="stream" />이 읽기를 지원하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-220">
              <paramref name="stream" /> does not support reading.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="619f6-221">
            <paramref name="stream" /> 또는 <paramref name="encoding" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-221">
              <paramref name="stream" /> or <paramref name="encoding" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamReader (string path, System.Text.Encoding encoding, bool detectEncodingFromByteOrderMarks);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, class System.Text.Encoding encoding, bool detectEncodingFromByteOrderMarks) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamReader.#ctor(System.String,System.Text.Encoding,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamReader(System::String ^ path, System::Text::Encoding ^ encoding, bool detectEncodingFromByteOrderMarks);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="detectEncodingFromByteOrderMarks" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="619f6-222">읽을 전체 파일 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-222">The complete file path to be read.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="619f6-223">사용할 문자 인코딩입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-223">The character encoding to use.</span>
          </span>
        </param>
        <param name="detectEncodingFromByteOrderMarks">
          <span data-ttu-id="619f6-224">파일의 시작 부분에서 바이트 순서 표시를 찾을지 여부를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-224">Indicates whether to look for byte order marks at the beginning of the file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="619f6-225">지정한 문자 인코딩과 바이트 순서 표시 검색 옵션을 사용하여 지정된 파일 이름에 대해 <see cref="T:System.IO.StreamReader" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-225">Initializes a new instance of the <see cref="T:System.IO.StreamReader" /> class for the specified file name, with the specified character encoding and byte order mark detection option.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="619f6-226">이 생성자에 지정 된 대로 인코딩 초기화는 `encoding` 매개 변수 및 내부 버퍼 크기를 1024 바이트로 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-226">This constructor initializes the encoding as specified by the `encoding` parameter, and the internal buffer size to 1024 bytes.</span></span>  
  
 <span data-ttu-id="619f6-227">`detectEncodingFromByteOrderMarks` 스트림의 첫 번째 3 바이트를 확인 하 여 인코딩을 매개 변수를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-227">The `detectEncodingFromByteOrderMarks` parameter detects the encoding by looking at the first three bytes of the stream.</span></span> <span data-ttu-id="619f6-228">U t F-8, little endian 유니코드를 자동으로 인식 하 고 big endian 유니코드 텍스트 파일 시작 적절 한 바이트 순서 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-228">It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte order marks.</span></span> <span data-ttu-id="619f6-229">그렇지 않은 경우는 사용자가 제공한 인코딩은 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-229">Otherwise, the user-provided encoding is used.</span></span> <span data-ttu-id="619f6-230">자세한 내용은 <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=nameWithType> 메서드를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="619f6-230">See the <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=nameWithType> method for more information.</span></span>  
  
 <span data-ttu-id="619f6-231">`path` 매개 변수는 파일 이름, 범용 명명 규칙 (UNC) 공유에 파일을 포함 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-231">The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</span></span>  
  
 <span data-ttu-id="619f6-232">`path` 매개 변수는 디스크에 저장 된 파일이 필요 하지 않으면 스트림을 사용 하 여 액세스를 지 원하는 시스템의 모든 일부가 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-232">The `path` parameter is not required to be a file stored on disk; it can be any part of a system that supports access using streams.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="619f6-233">문자 집합을 특정 문화권 설정을 사용 하 여 컴파일하고 하면 서로 다른 문화권 설정 사용 하 여 동일한 문자 검색 문자를 해석할 수 없어 및를 throw 하면 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-233">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="619f6-234">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-234">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="619f6-235">다음 코드 예제에서는 이러한 부하 분산 방식이 <xref:System.IO.StreamReader> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-235">The following code example demonstrates this <xref:System.IO.StreamReader> constructor.</span></span>  
  
 [!code-cpp[System.IO.StreamReader#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StreamReader/CPP/streamreadersample.cpp#2)]
 [!code-csharp[System.IO.StreamReader#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamReader/CS/streamreadersample.cs#2)]
 [!code-vb[System.IO.StreamReader#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamReader/VB/streamreadersample.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="619f6-236">
            <paramref name="path" />가 빈 문자열("")인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-236">
              <paramref name="path" /> is an empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="619f6-237">
            <paramref name="path" /> 또는 <paramref name="encoding" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-237">
              <paramref name="path" /> or <paramref name="encoding" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="619f6-238">파일을 찾을 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-238">The file cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="619f6-239">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-239">The specified path is invalid, such as being on an unmapped drive.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="619f6-240">
            <paramref name="path" />에 부정확하거나 올바르지 않은 파일 이름, 디렉터리 이름 또는 볼륨 레이블이 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-240">
              <paramref name="path" /> includes an incorrect or invalid syntax for file name, directory name, or volume label.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamReader (System.IO.Stream stream, System.Text.Encoding encoding, bool detectEncodingFromByteOrderMarks, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Text.Encoding encoding, bool detectEncodingFromByteOrderMarks, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamReader(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, bool detectEncodingFromByteOrderMarks, int bufferSize);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="detectEncodingFromByteOrderMarks" Type="System.Boolean" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="619f6-241">읽을 스트림입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-241">The stream to be read.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="619f6-242">사용할 문자 인코딩입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-242">The character encoding to use.</span>
          </span>
        </param>
        <param name="detectEncodingFromByteOrderMarks">
          <span data-ttu-id="619f6-243">파일의 시작 부분에서 바이트 순서 표시를 찾을지 여부를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-243">Indicates whether to look for byte order marks at the beginning of the file.</span>
          </span>
        </param>
        <param name="bufferSize">
          <span data-ttu-id="619f6-244">최소 버퍼 크기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-244">The minimum buffer size.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="619f6-245">지정된 문자 인코딩과 바이트 순서 표시 검색 옵션, 버퍼 크기를 사용하여 특정 스트림에 대해 <see cref="T:System.IO.StreamReader" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-245">Initializes a new instance of the <see cref="T:System.IO.StreamReader" /> class for the specified stream, with the specified character encoding, byte order mark detection option, and buffer size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="619f6-246">16 비트 문자 수에서를 사용 하는 버퍼 크기를 설정한는 `bufferSize` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-246">The buffer size, in number of 16-bit characters, is set by the `bufferSize` parameter.</span></span> <span data-ttu-id="619f6-247">경우 `bufferSize` 작으면 최소 허용 크기 (128 자), 보다 크기가 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-247">If `bufferSize` is less than the minimum allowable size (128 characters), the minimum allowable size is used.</span></span>  
  
 <span data-ttu-id="619f6-248">이 생성자를 사용 하면 인코딩을에서 읽은 처음으로 변경할 수는 <xref:System.IO.StreamReader> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-248">This constructor allows you to change the encoding the first time you read from the <xref:System.IO.StreamReader> object.</span></span> <span data-ttu-id="619f6-249">`detectEncodingFromByteOrderMarks` 스트림의 첫 번째 3 바이트를 확인 하 여 인코딩을 매개 변수를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-249">The `detectEncodingFromByteOrderMarks` parameter detects the encoding by looking at the first three bytes of the stream.</span></span> <span data-ttu-id="619f6-250">U t F-8, little endian 유니코드를 자동으로 인식 하 고 big endian 유니코드 텍스트 파일 시작 적절 한 바이트 순서 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-250">It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte order marks.</span></span> <span data-ttu-id="619f6-251">그렇지 않은 경우는 사용자가 제공한 인코딩은 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-251">Otherwise, the user-provided encoding is used.</span></span> <span data-ttu-id="619f6-252">자세한 내용은 <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=nameWithType> 메서드를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="619f6-252">See the <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=nameWithType> method for more information.</span></span>  
  
 <span data-ttu-id="619f6-253"><xref:System.IO.StreamReader> 호출 개체 <xref:System.IO.Stream.Dispose> 제공 된 <xref:System.IO.Stream> 개체 때 <xref:System.IO.StreamReader.Dispose%2A?displayProperty=nameWithType> 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-253">The <xref:System.IO.StreamReader> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamReader.Dispose%2A?displayProperty=nameWithType> is called.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="619f6-254">읽을 때는 <xref:System.IO.Stream>,이 스트림 내부 버퍼와 같은 크기 버퍼를 사용 하는 것이 효율적입니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-254">When reading from a <xref:System.IO.Stream>, it is more efficient to use a buffer that is the same size as the internal buffer of the stream.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="619f6-255">문자 집합을 특정 문화권 설정을 사용 하 여 컴파일하고 하면 서로 다른 문화권 설정 사용 하 여 동일한 문자 검색 문자를 해석할 수 없어 및를 throw 하면 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-255">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="619f6-256">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-256">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="619f6-257">다음 코드 예제에서는 이러한 부하 분산 방식이 <xref:System.IO.StreamReader> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-257">The following code example demonstrates this <xref:System.IO.StreamReader> constructor.</span></span>  
  
 [!code-cpp[System.IO.StreamReader#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StreamReader/CPP/streamreadersample.cpp#2)]
 [!code-csharp[System.IO.StreamReader#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamReader/CS/streamreadersample.cs#2)]
 [!code-vb[System.IO.StreamReader#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamReader/VB/streamreadersample.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="619f6-258">스트림이 읽기를 지원하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-258">The stream does not support reading.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="619f6-259">
            <paramref name="stream" /> 또는 <paramref name="encoding" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-259">
              <paramref name="stream" /> or <paramref name="encoding" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="619f6-260">
            <paramref name="bufferSize" />가 0보다 작거나 같은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-260">
              <paramref name="bufferSize" /> is less than or equal to zero.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamReader (string path, System.Text.Encoding encoding, bool detectEncodingFromByteOrderMarks, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, class System.Text.Encoding encoding, bool detectEncodingFromByteOrderMarks, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamReader.#ctor(System.String,System.Text.Encoding,System.Boolean,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamReader(System::String ^ path, System::Text::Encoding ^ encoding, bool detectEncodingFromByteOrderMarks, int bufferSize);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="detectEncodingFromByteOrderMarks" Type="System.Boolean" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="619f6-261">읽을 전체 파일 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-261">The complete file path to be read.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="619f6-262">사용할 문자 인코딩입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-262">The character encoding to use.</span>
          </span>
        </param>
        <param name="detectEncodingFromByteOrderMarks">
          <span data-ttu-id="619f6-263">파일의 시작 부분에서 바이트 순서 표시를 찾을지 여부를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-263">Indicates whether to look for byte order marks at the beginning of the file.</span>
          </span>
        </param>
        <param name="bufferSize">
          <span data-ttu-id="619f6-264">최소 버퍼 크기(16비트 문자 수)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-264">The minimum buffer size, in number of 16-bit characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="619f6-265">지정된 문자 인코딩과 바이트 순서 표시 검색 옵션을 사용하여 지정된 파일 이름에 대해 <see cref="T:System.IO.StreamReader" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-265">Initializes a new instance of the <see cref="T:System.IO.StreamReader" /> class for the specified file name, with the specified character encoding, byte order mark detection option, and buffer size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="619f6-266">이 생성자에 지정 된 대로 인코딩 초기화는 `encoding` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-266">This constructor initializes the encoding as specified by the `encoding` parameter.</span></span>  
  
 <span data-ttu-id="619f6-267">이 생성자를 사용 하면 인코딩을에서 읽은 처음으로 변경할 수는 <xref:System.IO.StreamReader> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-267">This constructor allows you to change the encoding the first time you read from the <xref:System.IO.StreamReader> object.</span></span> <span data-ttu-id="619f6-268">`detectEncodingFromByteOrderMarks` 스트림의 첫 번째 3 바이트를 확인 하 여 인코딩을 매개 변수를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-268">The `detectEncodingFromByteOrderMarks` parameter detects the encoding by looking at the first three bytes of the stream.</span></span> <span data-ttu-id="619f6-269">U t F-8, little endian 유니코드를 자동으로 인식 하 고 big endian 유니코드 텍스트 파일 시작 적절 한 바이트 순서 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-269">It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte order marks.</span></span> <span data-ttu-id="619f6-270">그렇지 않은 경우는 사용자가 제공한 인코딩은 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-270">Otherwise, the user-provided encoding is used.</span></span> <span data-ttu-id="619f6-271">자세한 내용은 <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=nameWithType> 메서드를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="619f6-271">See the <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=nameWithType> method for more information.</span></span>  
  
 <span data-ttu-id="619f6-272">16 비트 문자 수에서를 사용 하는 버퍼 크기를 설정한는 `bufferSize` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-272">The buffer size, in number of 16-bit characters, is set by the `bufferSize` parameter.</span></span> <span data-ttu-id="619f6-273">경우 `bufferSize` 작으면 최소 허용 크기 (128 자), 보다 크기가 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-273">If `bufferSize` is less than the minimum allowable size (128 characters), the minimum allowable size is used.</span></span>  
  
 <span data-ttu-id="619f6-274">`path` 매개 변수는 파일 이름, 범용 명명 규칙 (UNC) 공유에 파일을 포함 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-274">The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</span></span>  
  
 <span data-ttu-id="619f6-275">`path` 매개 변수는 디스크에 저장 된 파일이 필요 하지 않으면 스트림을 사용 하 여 액세스를 지 원하는 시스템의 모든 일부가 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-275">The `path` parameter is not required to be a file stored on disk; it can be any part of a system that supports access using streams.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="619f6-276">문자 집합을 특정 문화권 설정을 사용 하 여 컴파일하고 하면 서로 다른 문화권 설정 사용 하 여 동일한 문자 검색 문자를 해석할 수 없어 및를 throw 하면 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-276">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="619f6-277">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-277">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="619f6-278">다음 코드 예제에서는 이러한 부하 분산 방식이 <xref:System.IO.StreamReader> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-278">The following code example demonstrates this <xref:System.IO.StreamReader> constructor.</span></span>  
  
 [!code-cpp[System.IO.StreamReader#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StreamReader/CPP/streamreadersample.cpp#2)]
 [!code-csharp[System.IO.StreamReader#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamReader/CS/streamreadersample.cs#2)]
 [!code-vb[System.IO.StreamReader#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamReader/VB/streamreadersample.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="619f6-279">
            <paramref name="path" />가 빈 문자열("")인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-279">
              <paramref name="path" /> is an empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="619f6-280">
            <paramref name="path" /> 또는 <paramref name="encoding" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-280">
              <paramref name="path" /> or <paramref name="encoding" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="619f6-281">파일을 찾을 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-281">The file cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="619f6-282">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-282">The specified path is invalid, such as being on an unmapped drive.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="619f6-283">
            <paramref name="path" />에 부정확하거나 올바르지 않은 파일 이름, 디렉터리 이름 또는 볼륨 레이블이 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-283">
              <paramref name="path" /> includes an incorrect or invalid syntax for file name, directory name, or volume label.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="619f6-284">
            <paramref name="buffersize" />가 0보다 작거나 같은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-284">
              <paramref name="buffersize" /> is less than or equal to zero.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamReader (System.IO.Stream stream, System.Text.Encoding encoding, bool detectEncodingFromByteOrderMarks, int bufferSize, bool leaveOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Text.Encoding encoding, bool detectEncodingFromByteOrderMarks, int32 bufferSize, bool leaveOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Int32,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamReader(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, bool detectEncodingFromByteOrderMarks, int bufferSize, bool leaveOpen);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="detectEncodingFromByteOrderMarks" Type="System.Boolean" />
        <Parameter Name="bufferSize" Type="System.Int32" />
        <Parameter Name="leaveOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="619f6-285">읽을 스트림입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-285">The stream to read.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="619f6-286">사용할 문자 인코딩입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-286">The character encoding to use.</span>
          </span>
        </param>
        <param name="detectEncodingFromByteOrderMarks">
          <span data-ttu-id="619f6-287">파일의 시작 부분에서 바이트 순서 표시를 찾으려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-287">
              <see langword="true" /> to look for byte order marks at the beginning of the file; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="bufferSize">
          <span data-ttu-id="619f6-288">최소 버퍼 크기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-288">The minimum buffer size.</span>
          </span>
        </param>
        <param name="leaveOpen">
          <span data-ttu-id="619f6-289">
            <see cref="T:System.IO.StreamReader" /> 개체를 삭제한 후 스트림을 열어 두려면 <see langword="true" />이고, 닫으려면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-289">
              <see langword="true" /> to leave the stream open after the <see cref="T:System.IO.StreamReader" /> object is disposed; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="619f6-290">지정된 문자 인코딩과 바이트 순서 표시 검색 옵션, 버퍼 크기를 기반으로 지정된 스트림에 대해 <see cref="T:System.IO.StreamReader" /> 클래스의 새 인스턴스를 초기화하고 스트림을 선택적으로 연 상태로 둡니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-290">Initializes a new instance of the <see cref="T:System.IO.StreamReader" /> class for the specified stream based on the specified character encoding, byte order mark detection option, and buffer size, and optionally leaves the stream open.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="619f6-291">설정 하지 않으면는 `leaveOpen` 매개 변수를 `true`, <xref:System.IO.StreamReader> 호출 개체 <xref:System.IO.Stream.Dispose> 제공 된 <xref:System.IO.Stream> 개체 때 <xref:System.IO.StreamReader.Dispose%2A?displayProperty=nameWithType> 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-291">Unless you set the `leaveOpen` parameter to `true`, the <xref:System.IO.StreamReader> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamReader.Dispose%2A?displayProperty=nameWithType> is called.</span></span>  
  
 <span data-ttu-id="619f6-292">16 비트 문자 수에서를 사용 하는 버퍼 크기를 설정한는 `bufferSize` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-292">The buffer size, in number of 16-bit characters, is set by the `bufferSize` parameter.</span></span> <span data-ttu-id="619f6-293">경우 `bufferSize` 작으면 최소 허용 크기 (128 자), 보다 크기가 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-293">If `bufferSize` is less than the minimum allowable size (128 characters), the minimum allowable size is used.</span></span>  
  
 <span data-ttu-id="619f6-294">이 생성자를 사용 하는 인코딩에서 읽은 처음으로 변경할 수 있습니다는 <xref:System.IO.StreamReader> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-294">This constructor enables you to change the encoding the first time you read from the <xref:System.IO.StreamReader> object.</span></span> <span data-ttu-id="619f6-295">경우는 `detectEncodingFromByteOrderMarks` 매개 변수는 `true`, 생성자 스트림의 첫 번째 3 바이트를 확인 하 여 인코딩을 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-295">If the `detectEncodingFromByteOrderMarks` parameter is `true`, the constructor detects the encoding by looking at the first three bytes of the stream.</span></span> <span data-ttu-id="619f6-296">U t F-8, little endian 유니코드를 자동으로 인식 하 고 big endian 유니코드 텍스트 파일 시작 적절 한 바이트 순서 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-296">It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte order marks.</span></span> <span data-ttu-id="619f6-297">그렇지 않은 경우는 사용자가 제공한 인코딩은 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-297">Otherwise, the user-provided encoding is used.</span></span> <span data-ttu-id="619f6-298">자세한 내용은 <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=nameWithType> 메서드를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="619f6-298">See the <xref:System.Text.Encoding.GetPreamble%2A?displayProperty=nameWithType> method for more information.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="619f6-299">읽을 때는 <xref:System.IO.Stream>,이 스트림 내부 버퍼와 같은 크기 버퍼를 사용 하는 것이 효율적입니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-299">When reading from a <xref:System.IO.Stream>, it is more efficient to use a buffer that is the same size as the internal buffer of the stream.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="619f6-300">문자 집합을 특정 문화권 설정을 사용 하 여 컴파일하고 하면 서로 다른 문화권 설정 사용 하 여 동일한 문자 검색 문자는 올바르게 해석 될 수 있습니다 및를 throw 하면 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-300">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpreted correctly, and could cause an exception to be thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream BaseStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream BaseStream" />
      <MemberSignature Language="DocId" Value="P:System.IO.StreamReader.BaseStream" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BaseStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IO::Stream ^ BaseStream { System::IO::Stream ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="619f6-301">내부 스트림을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-301">Returns the underlying stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="619f6-302">내부 스트림입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-302">The underlying stream.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="619f6-303">이 속성을 사용 하 여 내부 스트림에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-303">You use this property to access the underlying stream.</span></span> <span data-ttu-id="619f6-304"><xref:System.IO.StreamReader> 중 하나를 호출 하는 경우 원본 스트림에서 입력 버퍼 클래스는 <xref:System.IO.StreamReader.Read%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="619f6-304">The <xref:System.IO.StreamReader> class buffers input from the underlying stream when you call one of the <xref:System.IO.StreamReader.Read%2A> methods.</span></span> <span data-ttu-id="619f6-305">버퍼에 데이터를 읽은 후 기본 스트림 위치를 조작 하는 경우 기본 스트림의 위치 내부 버퍼의 위치를 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-305">If you manipulate the position of the underlying stream after reading data into the buffer, the position of the underlying stream might not match the position of the internal buffer.</span></span> <span data-ttu-id="619f6-306">내부 버퍼를 다시 설정 하려면 호출의 <xref:System.IO.StreamReader.DiscardBufferedData%2A> 메서드도 있습니다; 그러나이 인해 성능이 저하 메서드와 반드시 필요한 경우에 호출 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-306">To reset the internal buffer, call the <xref:System.IO.StreamReader.DiscardBufferedData%2A> method; however, this method slows performance and should be called only when absolutely necessary.</span></span> <span data-ttu-id="619f6-307"><xref:System.IO.StreamReader> 생성자가 포함 된는 `detectEncodingFromByteOrderMarks` 매개 변수 인코딩에서 읽은 처음으로 변경할 수는 <xref:System.IO.StreamReader> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-307">The <xref:System.IO.StreamReader> constructors that have the `detectEncodingFromByteOrderMarks` parameter can change the encoding the first time you read from the <xref:System.IO.StreamReader> object.</span></span>  
  
 <span data-ttu-id="619f6-308">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-308">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="619f6-309">
            <see cref="T:System.IO.StreamReader" /> 개체와 내부 스트림을 닫고 판독기와 관련된 모든 시스템 리소스를 해제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-309">Closes the <see cref="T:System.IO.StreamReader" /> object and the underlying stream, and releases any system resources associated with the reader.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="619f6-310">이 메서드를 재정의 <xref:System.IO.TextWriter.Close%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="619f6-310">This method overrides the <xref:System.IO.TextWriter.Close%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="619f6-311">이 구현 <xref:System.IO.StreamReader.Close%2A> 호출은 <xref:System.IO.StreamReader.Dispose%2A> 전달 메서드는 `true` 값입니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-311">This implementation of <xref:System.IO.StreamReader.Close%2A> calls the <xref:System.IO.StreamReader.Dispose%2A> method passing a `true` value.</span></span>  
  
 <span data-ttu-id="619f6-312">명시적으로 호출 하지 않으면 스트림을 내부 인코더가 플러시되지 것입니다 <xref:System.IO.StreamReader.Close%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-312">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.IO.StreamReader.Close%2A>.</span></span> <span data-ttu-id="619f6-313">설정 <xref:System.IO.StreamWriter.AutoFlush%2A> 를 `true` 스트림 버퍼에서 데이터를 플러시할 수는 있지만 인코더 상태 플러시되지 것입니다 있다는 것을 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-313">Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="619f6-314">따라서 올바르게 문자의 다음 블록을 인코딩할 수 있도록 (부분 문자)의 상태를 유지 하기 위해 인코더 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-314">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="619f6-315">이 시나리오는 u t f 8와 UTF7, 인코더는 인접 한 문자를 받은 후에 특정 문자를 인코딩할 수 있는 위치에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-315">This scenario affects UTF8 and UTF7, where certain characters can be encoded only after the encoder receives the adjacent character or characters.</span></span>  
  
 <span data-ttu-id="619f6-316">호출한 다음 <xref:System.IO.StreamReader.Close%2A>, 판독기에 대 한 모든 작업 예외를 발생 시킬 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-316">Following a call to <xref:System.IO.StreamReader.Close%2A>, any operations on the reader might raise exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentEncoding">
      <MemberSignature Language="C#" Value="public virtual System.Text.Encoding CurrentEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding CurrentEncoding" />
      <MemberSignature Language="DocId" Value="P:System.IO.StreamReader.CurrentEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CurrentEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Text::Encoding ^ CurrentEncoding { System::Text::Encoding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="619f6-317">현재 <see cref="T:System.IO.StreamReader" /> 개체에서 사용 중인 현재 문자 인코딩을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-317">Gets the current character encoding that the current <see cref="T:System.IO.StreamReader" /> object is using.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="619f6-318">현재 판독기에서 사용하는 문자 인코딩입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-318">The current character encoding used by the current reader.</span>
          </span>
          <span data-ttu-id="619f6-319">
            <see cref="Overload:System.IO.StreamReader.Read" /> 메서드를 처음으로 호출할 때 인코딩이 자동으로 검색되므로 <see cref="T:System.IO.StreamReader" />의 <see cref="Overload:System.IO.StreamReader.Read" /> 메서드를 처음으로 호출하면 값이 달라질 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-319">The value can be different after the first call to any <see cref="Overload:System.IO.StreamReader.Read" /> method of <see cref="T:System.IO.StreamReader" />, since encoding autodetection is not done until the first call to a <see cref="Overload:System.IO.StreamReader.Read" /> method.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="619f6-320">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-320">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="619f6-321">다음 코드 예제에서는 지정 된 인코딩을 가져옵니다 <xref:System.IO.StreamReader> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-321">The following code example gets the encoding of the specified <xref:System.IO.StreamReader> object.</span></span>  
  
 [!code-cpp[strmreader currentencoding#1](~/samples/snippets/cpp/VS_Snippets_CLR/StrmReader CurrentEncoding/CPP/strmreader currentencoding.cpp#1)]
 [!code-csharp[strmreader currentencoding#1](~/samples/snippets/csharp/VS_Snippets_CLR/StrmReader CurrentEncoding/CS/strmreader currentencoding.cs#1)]
 [!code-vb[strmreader currentencoding#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StrmReader CurrentEncoding/VB/strmreader currentencoding.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscardBufferedData">
      <MemberSignature Language="C#" Value="public void DiscardBufferedData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DiscardBufferedData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamReader.DiscardBufferedData" />
      <MemberSignature Language="VB.NET" Value="Public Sub DiscardBufferedData ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DiscardBufferedData();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="619f6-322">내부 버퍼를 지웁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-322">Clears the internal buffer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="619f6-323">사용 하 여는 <xref:System.IO.StreamReader.DiscardBufferedData%2A> 에 대 한 내부 버퍼를 다시 설정 하는 메서드는 <xref:System.IO.StreamReader> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-323">Use the <xref:System.IO.StreamReader.DiscardBufferedData%2A> method to reset the internal buffer for the <xref:System.IO.StreamReader> object.</span></span> <span data-ttu-id="619f6-324">이 메서드를 호출 해야 경우에만 내부 버퍼의 위치 및 <xref:System.IO.StreamReader.BaseStream%2A> 일치 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-324">You need to call this method only when the position of the internal buffer and the <xref:System.IO.StreamReader.BaseStream%2A> do not match.</span></span> <span data-ttu-id="619f6-325">버퍼에 데이터를 읽고 다음 내부 스트림 내의 새 위치를 검색 하는 경우이 위치는 일치 하지 않는 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-325">These positions can become mismatched when you read data into the buffer and then seek a new position in the underlying stream.</span></span> <span data-ttu-id="619f6-326">이 인해 성능이 저하 메서드와 내용의의 일부를 읽을 경우와 같이 꼭 필요한 경우에 사용 해야는 <xref:System.IO.StreamReader> 개체를 한 번 이상.</span><span class="sxs-lookup"><span data-stu-id="619f6-326">This method slows performance and should be used only when absolutely necessary, such as when you want to read a portion of the contents of a <xref:System.IO.StreamReader> object more than once.</span></span>  
  
 <span data-ttu-id="619f6-327">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-327">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="619f6-328">다음 예제 시나리오를 보여 줍니다. 여기서는 <xref:System.IO.StreamReader.DiscardBufferedData%2A> 내부 버퍼와 내부 스트림을 동기화 할 메서드를 호출 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-328">The following example shows a scenario where the <xref:System.IO.StreamReader.DiscardBufferedData%2A> method must be called to synchronize the internal buffer and the underlying stream.</span></span> <span data-ttu-id="619f6-329">예제에서 파일 위치를 설명 하는 데 사용 되 고 텍스트의 구성 `abcdefghijklmnopqrstuvwxyz`합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-329">The file in the example is used to illustrate position and consists of the text `abcdefghijklmnopqrstuvwxyz`.</span></span> <span data-ttu-id="619f6-330">호출 하 여 <xref:System.IO.StreamReader.DiscardBufferedData%2A> 예제 예상 대로 작동 하는 데이터를 읽은 다음 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-330">By calling <xref:System.IO.StreamReader.DiscardBufferedData%2A> after the data is read, the example works as expected.</span></span> <span data-ttu-id="619f6-331">처음 15 문자를 읽은 후 위치 2의 오프셋된 값 다시 설정 되 고 나머지 문자를 모두 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-331">After the first 15 characters are read, the position is reset to the offset value of 2 and all the remaining characters are read.</span></span> <span data-ttu-id="619f6-332">에 대 한 호출을 제거 하면 <xref:System.IO.StreamReader.DiscardBufferedData%2A>, 예제에는 예상 대로 작동 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-332">If you remove the call to <xref:System.IO.StreamReader.DiscardBufferedData%2A>, the example does not work as expected.</span></span> <span data-ttu-id="619f6-333">처음 15 자를 읽었지만 내부 스트림의 위치에만 다시 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-333">The first 15 characters are read, but only the position of the underlying stream is reset.</span></span> <span data-ttu-id="619f6-334">내부 버퍼는 <xref:System.IO.StreamReader> 개체가 16 번째 문자에 남아 있습니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-334">The internal buffer of the <xref:System.IO.StreamReader> object is still on the 16th character.</span></span> <span data-ttu-id="619f6-335">따라서 <xref:System.IO.StreamReader.ReadToEnd%2A> 재설정 위치에서 시작 하 고 내부 스트림이의 문자는 버퍼의 모든 문자를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-335">Therefore, <xref:System.IO.StreamReader.ReadToEnd%2A> returns all the characters in the buffer plus the characters in the underlying stream starting from the reset position.</span></span>  
  
 [!code-csharp[System.IO.StreamReader#30](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamReader/CS/program.cs#30)]
 [!code-vb[System.IO.StreamReader#30](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamReader/VB/module1.vb#30)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamReader.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="619f6-336">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-336">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="619f6-337">내부 스트림을 닫고 <see cref="T:System.IO.StreamReader" />에서 사용하는 관리되지 않는 리소스를 해제하고 관리되는 리소스를 선택적으로 해제할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-337">Closes the underlying stream, releases the unmanaged resources used by the <see cref="T:System.IO.StreamReader" />, and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="619f6-338">이 메서드는 public <xref:System.IDisposable.Dispose%2A> 메서드 및 <xref:System.Object.Finalize%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="619f6-338">This method is called by the public <xref:System.IDisposable.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="619f6-339"><xref:System.IDisposable.Dispose%2A> 보호 된 호출 <xref:System.IO.StreamReader.Dispose%2A> 메서드는 `disposing` 매개 변수가 true로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-339"><xref:System.IDisposable.Dispose%2A> invokes the protected <xref:System.IO.StreamReader.Dispose%2A> method with the `disposing` parameter set to true.</span></span> <span data-ttu-id="619f6-340"><xref:System.Object.Finalize%2A> 호출 <xref:System.IO.StreamReader.Dispose%2A> 와 `disposing` false로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-340"><xref:System.Object.Finalize%2A> invokes <xref:System.IO.StreamReader.Dispose%2A> with `disposing` set to false.</span></span>  
  
 <span data-ttu-id="619f6-341">때는 `disposing` 매개 변수는 `true`,이 개체를 관리 되는 모든 리소스를 보유 하는 메서드 릴리스는 <xref:System.IO.StreamReader> 개체에서 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-341">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that the <xref:System.IO.StreamReader> object references.</span></span> <span data-ttu-id="619f6-342">이 메서드는 참조되는 각 개체의 <xref:System.IDisposable.Dispose%2A> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-342">This method invokes the <xref:System.IDisposable.Dispose%2A> method of each referenced object.</span></span>  
  
 <span data-ttu-id="619f6-343">이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-343">.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="619f6-344">Dispose 다른 개체에서 여러 번 호출할 수 있습니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="619f6-344">Dispose can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="619f6-345">재정의 하는 경우 <see cref="M:System.IO.StreamReader.Dispose(System.Boolean)" />[cref,...] Dispose 호출 하 여 이전에 삭제 된 개체를 참조 하지 않도록 주의 하십시오. 구현 하는 방법에 대 한 자세한 내용은 <see cref="M:System.IO.StreamReader.Dispose(System.Boolean)" /> 참조 [Dispose 메서드를 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="619f6-345">When overriding <see cref="M:System.IO.StreamReader.Dispose(System.Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to Dispose[cref,...]. For more information about how to implement <see cref="M:System.IO.StreamReader.Dispose(System.Boolean)" /> see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="619f6-346">에 대 한 자세한 내용은 <see cref="M:System.IDisposable.Dispose" /> 및 <see cref="M:System.Object.Finalize" />, 참조 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md)합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="619f6-346">For more information about <see cref="M:System.IDisposable.Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndOfStream">
      <MemberSignature Language="C#" Value="public bool EndOfStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EndOfStream" />
      <MemberSignature Language="DocId" Value="P:System.IO.StreamReader.EndOfStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndOfStream As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EndOfStream { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="619f6-347">현재 스트림 위치가 스트림의 끝에 있는지를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-347">Gets a value that indicates whether the current stream position is at the end of the stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="619f6-348">현재 스트림 위치가 스트림의 끝에 있으면 <see langword="true" />이고, 없으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-348">
              <see langword="true" /> if the current stream position is at the end of the stream; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="619f6-349">기본 스트림이 삭제되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-349">The underlying stream has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static readonly System.IO.StreamReader Null;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.IO.StreamReader Null" />
      <MemberSignature Language="DocId" Value="F:System.IO.StreamReader.Null" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Null As StreamReader " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::IO::StreamReader ^ Null;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.StreamReader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="619f6-350">빈 스트림 주위의 <see cref="T:System.IO.StreamReader" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-350">A <see cref="T:System.IO.StreamReader" /> object around an empty stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="619f6-351">메서드는 호출을 읽을 때 <xref:System.IO.StreamReader.Null>, 항상 0이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-351">When read methods are invoked on <xref:System.IO.StreamReader.Null>, zero is always returned.</span></span> <span data-ttu-id="619f6-352">때 <xref:System.IO.StreamReader.ReadLine%2A> 에서 호출 되어 <xref:System.IO.StreamReader.Null>, `null` 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-352">When <xref:System.IO.StreamReader.ReadLine%2A> is invoked on <xref:System.IO.StreamReader.Null>, `null` is returned.</span></span>  
  
 <span data-ttu-id="619f6-353">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-353">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public override int Peek ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Peek() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamReader.Peek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Peek () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Peek();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="619f6-354">사용할 수 있는 다음 문자를 반환하지만 사용하지는 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-354">Returns the next available character but does not consume it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="619f6-355">읽을 다음 문자를 나타내는 정수이거나, 읽을 문자가 없거나 스트림에서 검색을 지원하지 않을 경우 -1입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-355">An integer representing the next character to be read, or -1 if there are no characters to be read or if the stream does not support seeking.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="619f6-356"><xref:System.IO.StreamReader.Peek%2A> 메서드 끝은 파일 또는 다른 오류가 발생 했는지 확인 하기 위해 정수 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-356">The <xref:System.IO.StreamReader.Peek%2A> method returns an integer value in order to determine whether the end of the file, or another error has occurred.</span></span> <span data-ttu-id="619f6-357">이렇게 하면 반환 된 값은-1로 캐스팅 하기 전에 먼저 확인 하려면 사용자는 <xref:System.Char> 유형입니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-357">This allows a user to first check if the returned value is -1 before casting it to a <xref:System.Char> type.</span></span>  
  
 <span data-ttu-id="619f6-358">이 메서드는 <xref:System.IO.TextReader.Peek%2A?displayProperty=nameWithType>를 재정의합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-358">This method overrides <xref:System.IO.TextReader.Peek%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="619f6-359">현재 위치는 <xref:System.IO.StreamReader> 의해 개체가 변경 되지 않습니다 <xref:System.IO.StreamReader.Peek%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-359">The current position of the <xref:System.IO.StreamReader> object is not changed by <xref:System.IO.StreamReader.Peek%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="619f6-360">다음 코드 예제에서는 파일의 끝에 도달할 때까지 파일에서 줄을 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-360">The following code example reads lines from a file until the end of the file is reached.</span></span>  
  
 [!code-cpp[strmreader peek#1](~/samples/snippets/cpp/VS_Snippets_CLR/StrmReader Peek/CPP/strmreader peek.cpp#1)]
 [!code-csharp[strmreader peek#1](~/samples/snippets/csharp/VS_Snippets_CLR/StrmReader Peek/CS/strmreader peek.cs#1)]
 [!code-vb[strmreader peek#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StrmReader Peek/VB/strmreader peek.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="619f6-361">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-361">An I/O error occurs.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Read">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="619f6-362">입력 스트림에서 다음 문자 또는 다음 문자 집합을 읽습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-362">Reads the next character or next set of characters from the input stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="619f6-363">입력 스트림에서 다음 문자를 읽고 문자 위치를 한 문자씩 앞으로 이동합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-363">Reads the next character from the input stream and advances the character position by one character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="619f6-364">
            <see cref="T:System.Int32" /> 개체로 표시되는 입력 스트림의 다음 문자이거나, 사용할 수 있는 문자가 더 이상 없는 경우에는 -1입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-364">The next character from the input stream represented as an <see cref="T:System.Int32" /> object, or -1 if no more characters are available.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="619f6-365">이 메서드는 <xref:System.IO.TextReader.Read%2A?displayProperty=nameWithType>를 재정의합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-365">This method overrides <xref:System.IO.TextReader.Read%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="619f6-366">스트림의 끝에 도달한 경우-1을 반환 될 수 있도록이 메서드는 정수를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-366">This method returns an integer so that it can return -1 if the end of the stream has been reached.</span></span> <span data-ttu-id="619f6-367">버퍼에 데이터를 읽은 후 기본 스트림 위치를 조작 하는 경우 기본 스트림의 위치 내부 버퍼의 위치를 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-367">If you manipulate the position of the underlying stream after reading data into the buffer, the position of the underlying stream might not match the position of the internal buffer.</span></span> <span data-ttu-id="619f6-368">내부 버퍼를 다시 설정 하려면 호출의 <xref:System.IO.StreamReader.DiscardBufferedData%2A> 메서드도 있습니다; 그러나이 인해 성능이 저하 메서드와 반드시 필요한 경우에 호출 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-368">To reset the internal buffer, call the <xref:System.IO.StreamReader.DiscardBufferedData%2A> method; however, this method slows performance and should be called only when absolutely necessary.</span></span>  
  
 <span data-ttu-id="619f6-369">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-369">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="619f6-370">간단한 사용법을 설명 하는 다음 코드 예제는 <xref:System.IO.StreamReader.Read%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="619f6-370">The following code example demonstrates a simple use of the <xref:System.IO.StreamReader.Read%2A> method.</span></span>  
  
 [!code-cpp[strmreader read1#1](~/samples/snippets/cpp/VS_Snippets_CLR/StrmReader Read1/CPP/strmreader read1.cpp#1)]
 [!code-csharp[strmreader read1#1](~/samples/snippets/csharp/VS_Snippets_CLR/StrmReader Read1/CS/strmreader read1.cs#1)]
 [!code-vb[strmreader read1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StrmReader Read1/VB/strmreader read1.vb#1)]  
  
 <span data-ttu-id="619f6-371">다음 코드 예제에서는 사용 하 여 단일 문자를 읽는 방법을 보여 줍니다는 <xref:System.IO.StreamReader.Read> ASCII 정수 10 진수 및 16 진수 출력 서식 지정 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-371">The following code example demonstrates reading a single character using the <xref:System.IO.StreamReader.Read> method overload, formatting the ASCII integer output as decimal and hexadecimal.</span></span>  
  
 [!code-cpp[StrmRdrRead#1](~/samples/snippets/cpp/VS_Snippets_CLR/StrmRdrRead/CPP/strmrdrread.cpp#1)]
 [!code-csharp[StrmRdrRead#1](~/samples/snippets/csharp/VS_Snippets_CLR/StrmRdrRead/CS/strmrdrread.cs#1)]
 [!code-vb[StrmRdrRead#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StrmRdrRead/VB/strmrdrread.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="619f6-372">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-372">An I/O error occurs.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (Span&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(valuetype System.Span`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamReader.Read(System.Span{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Span(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(Span&lt;char&gt; buffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read([out] char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamReader.Read(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="619f6-373">이 메서드는 지정된 문자 배열의 값이 <c>인덱스</c>와 (<c>인덱스 + 카운트 - 1</c>) 사이에서 현재 소스로부터 읽어온 문자로 교체된 상태로 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-373">When this method returns, contains the specified character array with the values between <c>index</c> and (<c>index + count - 1</c>) replaced by the characters read from the current source.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="619f6-374">쓰기를 시작할 <c>버퍼</c>의 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-374">The index of <c>buffer</c> at which to begin writing.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="619f6-375">읽을 최대 문자 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-375">The maximum number of characters to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="619f6-376">현재 스트림에서 지정된 최대 문자를 지정된 인덱스부터 버퍼로 읽어 들입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-376">Reads a specified maximum of characters from the current stream into a buffer, beginning at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="619f6-377">읽은 문자 수를 반환하거나 스트림의 끝에 있고 읽은 데이터가 없으면 0을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-377">The number of characters that have been read, or 0 if at the end of the stream and no data was read.</span>
          </span>
          <span data-ttu-id="619f6-378">이 수는 스트림 내에서 데이터를 사용할 수 있는지 여부에 따라 <paramref name="count" /> 매개 변수보다 작거나 같습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-378">The number will be less than or equal to the <paramref name="count" /> parameter, depending on whether the data is available within the stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="619f6-379">이 메서드는 <xref:System.IO.TextReader.Read%2A?displayProperty=nameWithType>를 재정의합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-379">This method overrides <xref:System.IO.TextReader.Read%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="619f6-380">스트림의 끝에 도달한 경우 0을 반환할 수 있도록이 메서드는 정수를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-380">This method returns an integer so that it can return 0 if the end of the stream has been reached.</span></span>  
  
 <span data-ttu-id="619f6-381">사용 하는 경우는 <xref:System.IO.StreamReader.Read%2A> 메서드를 것이 버퍼는 내부 버퍼를 원하는 블록 크기 설정 되어 있는 스트림 내부 버퍼와 같은 크기를 사용 하 고 항상 블록 크기 보다 작은 읽을 더 효율적입니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-381">When using the <xref:System.IO.StreamReader.Read%2A> method, it is more efficient to use a buffer that is the same size as the internal buffer of the stream, where the internal buffer is set to your desired block size, and to always read less than the block size.</span></span> <span data-ttu-id="619f6-382">스트림을 생성할 때 내부 버퍼의 크기를 지정 하지 않은, 해당 기본 크기는 4kb (4096 바이트)입니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-382">If the size of the internal buffer was unspecified when the stream was constructed, its default size is 4 kilobytes (4096 bytes).</span></span> <span data-ttu-id="619f6-383">버퍼에 데이터를 읽은 후 기본 스트림 위치를 조작 하는 경우 기본 스트림의 위치 내부 버퍼의 위치를 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-383">If you manipulate the position of the underlying stream after reading data into the buffer, the position of the underlying stream might not match the position of the internal buffer.</span></span> <span data-ttu-id="619f6-384">내부 버퍼를 다시 설정 하려면 호출의 <xref:System.IO.StreamReader.DiscardBufferedData%2A> 메서드도 있습니다; 그러나이 인해 성능이 저하 메서드와 반드시 필요한 경우에 호출 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-384">To reset the internal buffer, call the <xref:System.IO.StreamReader.DiscardBufferedData%2A> method; however, this method slows performance and should be called only when absolutely necessary.</span></span>  
  
 <span data-ttu-id="619f6-385">이 메서드가 반환 중에서 지정 된 문자 수는 `count` 매개 변수를 읽거나 파일의 끝에 도달 했습니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-385">This method returns after either the number of characters specified by the `count` parameter are read, or the end of the file is reached.</span></span> <span data-ttu-id="619f6-386"><xref:System.IO.TextReader.ReadBlock%2A> 차단 버전이 <xref:System.IO.StreamReader.Read%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-386"><xref:System.IO.TextReader.ReadBlock%2A> is a blocking version of <xref:System.IO.StreamReader.Read%2A>.</span></span>  
  
 <span data-ttu-id="619f6-387">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-387">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="619f6-388">다음 코드 예제에서는 파일의 끝에 도달할 때까지 한 번에 5 개 문자를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-388">The following code example reads five characters at a time until the end of the file is reached.</span></span>  
  
 [!code-cpp[strmreader read2#1](~/samples/snippets/cpp/VS_Snippets_CLR/StrmReader Read2/CPP/strmreader read2.cpp#1)]
 [!code-csharp[strmreader read2#1](~/samples/snippets/csharp/VS_Snippets_CLR/StrmReader Read2/CS/strmreader read2.cs#1)]
 [!code-vb[strmreader read2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StrmReader Read2/VB/strmreader read2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="619f6-389">버퍼 길이에서 <paramref name="index" />를 빼면 <paramref name="count" />보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-389">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="619f6-390">
            <paramref name="buffer" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-390">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="619f6-391">
            <paramref name="index" /> 또는 <paramref name="count" />가 음수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-391">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="619f6-392">I/O 오류(예: 스트림이 닫혀 있음)가 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-392">An I/O error occurs, such as the stream is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask&lt;int&gt; ReadAsync (Memory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;int32&gt; ReadAsync(valuetype System.Memory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamReader.ReadAsync(System.Memory{System.Char},System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Char&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;int&gt; ReadAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamReader.ReadAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadAsync (buffer As Char(), index As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;int&gt; ^ ReadAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="619f6-393">이 메서드는 지정된 문자 배열의 값이 <c>인덱스</c>와 (<c>인덱스</c> + <c>카운트</c> - 1) 사이에서 현재 소스로부터 읽어온 문자로 교체된 상태로 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-393">When this method returns, contains the specified character array with the values between <c>index</c> and (<c>index</c> + <c>count</c> - 1) replaced by the characters read from the current source.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="619f6-394">쓰기를 시작할 <c>버퍼</c>의 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-394">The position in <c>buffer</c> at which to begin writing.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="619f6-395">읽을 최대 문자 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-395">The maximum number of characters to read.</span>
          </span>
          <span data-ttu-id="619f6-396">지정한 문자 수를 버퍼에 기록하기 전에 스트림의 끝에 도달하면 현재 메서드가 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-396">If the end of the stream is reached before the specified number of characters is written into the buffer, the current method returns.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="619f6-397">현재 스트림에서 지정된 최대 수의 문자를 비동기적으로 읽어 이 데이터를 지정된 인덱스에서 시작되는 버퍼에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-397">Reads a specified maximum number of characters from the current stream asynchronously and writes the data to a buffer, beginning at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="619f6-398">비동기 읽기 작업을 나타내는 작업입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-398">A task that represents the asynchronous read operation.</span>
          </span>
          <span data-ttu-id="619f6-399">
            <paramref name="TResult" /> 매개 변수의 값은 버퍼 안으로 읽어 들인 총 문자 수를 포함합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-399">The value of the <paramref name="TResult" /> parameter contains the total number of characters read into the buffer.</span>
          </span>
          <span data-ttu-id="619f6-400">현재 사용할 수 있는 문자 수가 요청된 수보다 작을 경우 결과 값이 요청된 문자 수보다 작을 수 있으며, 스트림의 끝에 도달한 경우에는 0이 될 수도 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-400">The result value can be less than the number of characters requested if the number of characters currently available is less than the requested number, or it can be 0 (zero) if the end of the stream has been reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="619f6-401">작업이 완료 중에서 지정 된 문자 수는 `count` 매개 변수를 읽거나 스트림의 끝에 도달 했습니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-401">The task completes after either the number of characters specified by the `count` parameter are read or the end of the stream is reached.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="619f6-402">다음 예제를 사용 하 여 파일에 있는 모든 문자를 읽는 방법을 <xref:System.IO.StreamReader.ReadAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="619f6-402">The following example shows how to read all the characters in a file by using the <xref:System.IO.StreamReader.ReadAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="619f6-403">각 문자는 문자, 숫자, 또는 공백 문자의 인스턴스를 추가 하기 전에 지 확인는 <xref:System.Text.StringBuilder> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-403">It checks whether each character is a letter, digit, or white space before adding the character to an instance of the <xref:System.Text.StringBuilder> class.</span></span>  
  
 [!code-csharp[System.IO.StreamReader#42](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamReader/CS/example42.cs#42)]
 [!code-vb[System.IO.StreamReader#42](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamReader/VB/example42.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="619f6-404">
            <paramref name="buffer" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-404">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="619f6-405">
            <paramref name="index" /> 또는 <paramref name="count" />가 음수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-405">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="619f6-406">
            <paramref name="index" /> 및 <paramref name="count" />의 합계가 버퍼 길이보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-406">The sum of <paramref name="index" /> and <paramref name="count" /> is larger than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="619f6-407">스트림이 삭제되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-407">The stream has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="619f6-408">판독기가 현재 이전 읽기 작업에서 사용 중입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-408">The reader is currently in use by a previous read operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadBlock">
      <MemberSignature Language="C#" Value="public override int ReadBlock (Span&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadBlock(valuetype System.Span`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamReader.ReadBlock(System.Span{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadBlock (buffer As Span(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadBlock(Span&lt;char&gt; buffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadBlock">
      <MemberSignature Language="C#" Value="public override int ReadBlock (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadBlock([out] char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamReader.ReadBlock(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadBlock (buffer As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadBlock(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="619f6-409">이 메서드는 지정된 문자 배열의 값이 <c>인덱스</c>와 (<c>인덱스 + 카운트 - 1</c>) 사이에서 현재 소스로부터 읽어온 문자로 교체된 상태로 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-409">When this method returns, contains the specified character array with the values between <c>index</c> and (<c>index + count - 1</c>) replaced by the characters read from the current source.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="619f6-410">쓰기를 시작할 <c>버퍼</c>의 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-410">The position in <c>buffer</c> at which to begin writing.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="619f6-411">읽을 최대 문자 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-411">The maximum number of characters to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="619f6-412">현재 스트림에서 지정된 최대 수의 문자를 읽어 이 데이터를 지정된 인덱스에서 시작되는 버퍼에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-412">Reads a specified maximum number of characters from the current stream and writes the data to a buffer, beginning at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="619f6-413">읽은 문자 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-413">The number of characters that have been read.</span>
          </span>
          <span data-ttu-id="619f6-414">이 문자 수는 모든 입력 문자를 읽었는지 여부에 따라 <paramref name="count" />보다 작거나 같습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-414">The number will be less than or equal to <paramref name="count" />, depending on whether all input characters have been read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="619f6-415">내부 스트림의 위치는로 읽은 문자 수 만큼 앞 `buffer`합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-415">The position of the underlying stream is advanced by the number of characters that were read into `buffer`.</span></span>  
  
 <span data-ttu-id="619f6-416">될 때까지 메서드 블록 `count` 문자를 읽을 또는 스트림의 끝에 도달 했습니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-416">The method blocks until either `count` characters are read, or the end of the stream has been reached.</span></span> <span data-ttu-id="619f6-417">차단 버전 이것이 <xref:System.IO.StreamReader.Read%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-417">This is a blocking version of <xref:System.IO.StreamReader.Read%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="619f6-418">
            <paramref name="buffer" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-418">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="619f6-419">버퍼 길이에서 <paramref name="index" />를 빼면 <paramref name="count" />보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-419">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="619f6-420">
            <paramref name="index" /> 또는 <paramref name="count" />가 음수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-420">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="619f6-421">
            <see cref="T:System.IO.StreamReader" />가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-421">The <see cref="T:System.IO.StreamReader" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="619f6-422">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-422">An I/O error occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadBlockAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask&lt;int&gt; ReadBlockAsync (Memory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;int32&gt; ReadBlockAsync(valuetype System.Memory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamReader.ReadBlockAsync(System.Memory{System.Char},System.Threading.CancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Char&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadBlockAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;int&gt; ReadBlockAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadBlockAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadBlockAsync (buffer As Char(), index As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;int&gt; ^ ReadBlockAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="619f6-423">이 메서드는 지정된 문자 배열의 값이 <c>인덱스</c>와 (<c>인덱스</c> + <c>카운트</c> - 1) 사이에서 현재 소스로부터 읽어온 문자로 교체된 상태로 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-423">When this method returns, contains the specified character array with the values between <c>index</c> and (<c>index</c> + <c>count</c> - 1) replaced by the characters read from the current source.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="619f6-424">쓰기를 시작할 <c>버퍼</c>의 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-424">The position in <c>buffer</c> at which to begin writing.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="619f6-425">읽을 최대 문자 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-425">The maximum number of characters to read.</span>
          </span>
          <span data-ttu-id="619f6-426">지정한 문자 수를 버퍼에 기록하기 전에 스트림의 끝에 도달하면 메서드가 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-426">If the end of the stream is reached before the specified number of characters is written into the buffer, the method returns.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="619f6-427">현재 스트림에서 지정된 최대 수의 문자를 비동기적으로 읽어 이 데이터를 지정된 인덱스에서 시작되는 버퍼에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-427">Reads a specified maximum number of characters from the current stream asynchronously and writes the data to a buffer, beginning at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="619f6-428">비동기 읽기 작업을 나타내는 작업입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-428">A task that represents the asynchronous read operation.</span>
          </span>
          <span data-ttu-id="619f6-429">
            <paramref name="TResult" /> 매개 변수의 값은 버퍼 안으로 읽어 들인 총 문자 수를 포함합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-429">The value of the <paramref name="TResult" /> parameter contains the total number of characters read into the buffer.</span>
          </span>
          <span data-ttu-id="619f6-430">현재 사용할 수 있는 문자 수가 요청된 수보다 작을 경우 결과 값이 요청된 문자 수보다 작을 수 있으며, 스트림의 끝에 도달한 경우에는 0이 될 수도 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-430">The result value can be less than the number of characters requested if the number of characters currently available is less than the requested number, or it can be 0 (zero) if the end of the stream has been reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="619f6-431">작업이 완료 되지 않을 때까지 변수에 지정 된 문자 수는 `count` 매개 변수를 읽거나 스트림의 끝에 도달 했습니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-431">The task does not complete until either the number of characters specified by the `count` parameter are read, or the end of the stream has been reached.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="619f6-432">
            <paramref name="buffer" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-432">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="619f6-433">
            <paramref name="index" /> 또는 <paramref name="count" />가 음수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-433">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="619f6-434">
            <paramref name="index" /> 및 <paramref name="count" />의 합계가 버퍼 길이보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-434">The sum of <paramref name="index" /> and <paramref name="count" /> is larger than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="619f6-435">스트림이 삭제되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-435">The stream has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="619f6-436">판독기가 현재 이전 읽기 작업에서 사용 중입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-436">The reader is currently in use by a previous read operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadLine">
      <MemberSignature Language="C#" Value="public override string ReadLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ReadLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamReader.ReadLine" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadLine () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ReadLine();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="619f6-437">현재 스트림에서 한 줄의 문자를 읽고 데이터를 문자열로 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-437">Reads a line of characters from the current stream and returns the data as a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="619f6-438">입력 스트림의 다음 줄을 반환하거나 입력 스트림의 끝에 도달한 경우 <see langword="null" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-438">The next line from the input stream, or <see langword="null" /> if the end of the input stream is reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="619f6-439">줄 다음에 줄 문자 시퀀스 ("\n") 피드, 캐리지 리턴 문자 ("\r") 또는 캐리지 리턴 뒤에 줄 바꿈 ("\r\n")으로 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-439">A line is defined as a sequence of characters followed by a line feed ("\n"), a carriage return ("\r"), or a carriage return immediately followed by a line feed ("\r\n").</span></span> <span data-ttu-id="619f6-440">반환 되는 문자열 종료 캐리지 리턴 또는 줄 바꿈 없습니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-440">The string that is returned does not contain the terminating carriage return or line feed.</span></span> <span data-ttu-id="619f6-441">반환 된 값이 `null` 입력된 스트림의 끝에 도달 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="619f6-441">The returned value is `null` if the end of the input stream is reached.</span></span>  
  
 <span data-ttu-id="619f6-442">이 메서드는 <xref:System.IO.TextReader.ReadLine%2A?displayProperty=nameWithType>를 재정의합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-442">This method overrides <xref:System.IO.TextReader.ReadLine%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="619f6-443">현재 메서드가 throw 하는 경우는 <xref:System.OutOfMemoryException>, 판독기의 위치는 기본 <xref:System.IO.Stream> 개체는 문자를 읽으려면 메서드에서 못한 하지만 내부에 이미 읽은 문자 수 만큼 앞 <xref:System.IO.StreamReader.ReadLine%2A> 버퍼는 삭제 됩니다. .</span><span class="sxs-lookup"><span data-stu-id="619f6-443">If the current method throws an <xref:System.OutOfMemoryException>, the reader's position in the underlying <xref:System.IO.Stream> object is advanced by the number of characters the method was able to read, but the characters already read into the internal <xref:System.IO.StreamReader.ReadLine%2A> buffer are discarded.</span></span> <span data-ttu-id="619f6-444">버퍼에 데이터를 읽은 후 기본 스트림 위치를 조작 하는 경우 기본 스트림의 위치 내부 버퍼의 위치를 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-444">If you manipulate the position of the underlying stream after reading data into the buffer, the position of the underlying stream might not match the position of the internal buffer.</span></span> <span data-ttu-id="619f6-445">내부 버퍼를 다시 설정 하려면 호출의 <xref:System.IO.StreamReader.DiscardBufferedData%2A> 메서드도 있습니다; 그러나이 인해 성능이 저하 메서드와 반드시 필요한 경우에 호출 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-445">To reset the internal buffer, call the <xref:System.IO.StreamReader.DiscardBufferedData%2A> method; however, this method slows performance and should be called only when absolutely necessary.</span></span>  
  
 <span data-ttu-id="619f6-446">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-446">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="619f6-447">다음 코드 예제에서는 파일의 끝에 도달할 때까지 파일에서 줄을 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-447">The following code example reads lines from a file until the end of the file is reached.</span></span>  
  
 [!code-cpp[strmreader readline#1](~/samples/snippets/cpp/VS_Snippets_CLR/StrmReader ReadLine/CPP/strmreader readline.cpp#1)]
 [!code-csharp[strmreader readline#1](~/samples/snippets/csharp/VS_Snippets_CLR/StrmReader ReadLine/CS/strmreader readline.cs#1)]
 [!code-vb[strmreader readline#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StrmReader ReadLine/VB/strmreader readline.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="619f6-448">메모리가 부족하여 반환된 문자열의 버퍼를 할당할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-448">There is insufficient memory to allocate a buffer for the returned string.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="619f6-449">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-449">An I/O error occurs.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;string&gt; ReadLineAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; ReadLineAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamReader.ReadLineAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadLineAsync () As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;System::String ^&gt; ^ ReadLineAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="619f6-450">현재 스트림에서 한 줄의 문자를 비동기적으로 읽고 데이터를 문자열로 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-450">Reads a line of characters asynchronously from the current stream and returns the data as a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="619f6-451">비동기 읽기 작업을 나타내는 작업입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-451">A task that represents the asynchronous read operation.</span>
          </span>
          <span data-ttu-id="619f6-452">
            <paramref name="TResult" /> 매개 변수의 값은 스트림의 다음 줄을 포함하거나 모든 문자를 읽은 경우에는 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-452">The value of the <paramref name="TResult" /> parameter contains the next line from the stream, or is <see langword="null" /> if all the characters have been read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="619f6-453">다음 예제를 사용 하 여 파일의 첫 번째 줄을 읽는 방법을 <xref:System.IO.StreamReader.ReadLineAsync> 메서드.</span><span class="sxs-lookup"><span data-stu-id="619f6-453">The following example shows how to read the first line of a file by using the <xref:System.IO.StreamReader.ReadLineAsync> method.</span></span>  
  
 [!code-csharp[System.IO.StreamReader#41](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamReader/CS/example41.cs#41)]
 [!code-vb[System.IO.StreamReader#41](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamReader/VB/example41.vb#41)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="619f6-454">다음 줄의 문자 수가 <see cref="F:System.Int32.MaxValue" />보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-454">The number of characters in the next line is larger than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="619f6-455">스트림이 삭제되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-455">The stream has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="619f6-456">판독기가 현재 이전 읽기 작업에서 사용 중입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-456">The reader is currently in use by a previous read operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadToEnd">
      <MemberSignature Language="C#" Value="public override string ReadToEnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ReadToEnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamReader.ReadToEnd" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadToEnd () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ReadToEnd();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="619f6-457">현재 위치부터 스트림 끝까지의 모든 문자를 읽습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-457">Reads all characters from the current position to the end of the stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="619f6-458">현재 위치부터 끝까지의 나머지 스트림은 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-458">The rest of the stream as a string, from the current position to the end.</span>
          </span>
          <span data-ttu-id="619f6-459">현재 위치가 스트림 끝에 있으면 빈 문자열("")을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-459">If the current position is at the end of the stream, returns an empty string ("").</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="619f6-460">이 메서드는 <xref:System.IO.TextReader.ReadToEnd%2A?displayProperty=nameWithType>를 재정의합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-460">This method overrides <xref:System.IO.TextReader.ReadToEnd%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="619f6-461"><xref:System.IO.StreamReader.ReadToEnd%2A> 스트림의 끝에 현재 위치에서 모든 입력을 읽어야 하는 경우 가장 적합 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-461"><xref:System.IO.StreamReader.ReadToEnd%2A> works best when you need to read all the input from the current position to the end of the stream.</span></span> <span data-ttu-id="619f6-462">스트림에서 읽은 문자 수를 통해 더 많은 제어를 필요한 경우 사용 된 <xref:System.IO.StreamReader.Read%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> 일반적으로 성능 향상으로 인해 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-462">If more control is needed over how many characters are read from the stream, use the <xref:System.IO.StreamReader.Read%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method overload, which generally results in better performance.</span></span>  
  
 <span data-ttu-id="619f6-463"><xref:System.IO.StreamReader.ReadToEnd%2A> 스트림의 끝에 도달 하면 알고 있는 것으로 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-463"><xref:System.IO.StreamReader.ReadToEnd%2A> assumes that the stream knows when it has reached an end.</span></span> <span data-ttu-id="619f6-464">서버를 보내는 데이터 연결을 닫지 않습니다를 요청할 경우에 대화형 프로토콜에 대 한 <xref:System.IO.StreamReader.ReadToEnd%2A> 는 끝에 도달 하지 않도록 하 고 피해 야 하기 때문에 무기한으로 차단 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-464">For interactive protocols in which the server sends data only when you ask for it and does not close the connection, <xref:System.IO.StreamReader.ReadToEnd%2A> might block indefinitely because it does not reach an end, and should be avoided.</span></span>  
  
 <span data-ttu-id="619f6-465">사용할 때의 <xref:System.IO.StreamReader.Read%2A> 메서드를 것이 스트림 내부 버퍼와 같은 크기 버퍼를 사용 하는 것이 효율적입니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-465">Note that when using the <xref:System.IO.StreamReader.Read%2A> method, it is more efficient to use a buffer that is the same size as the internal buffer of the stream.</span></span> <span data-ttu-id="619f6-466">스트림을 생성할 때 버퍼의 크기를 지정 하지 않은, 해당 기본 크기는 4kb (4096 바이트)입니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-466">If the size of the buffer was unspecified when the stream was constructed, its default size is 4 kilobytes (4096 bytes).</span></span>  
  
 <span data-ttu-id="619f6-467">현재 메서드가 throw 하는 경우는 <xref:System.OutOfMemoryException>, 판독기의 위치는 기본 <xref:System.IO.Stream> 개체는 문자를 읽으려면 메서드에서 못한 하지만 내부에 이미 읽은 문자 수 만큼 앞 <xref:System.IO.StreamReader.ReadLine%2A> 버퍼는 삭제 됩니다. .</span><span class="sxs-lookup"><span data-stu-id="619f6-467">If the current method throws an <xref:System.OutOfMemoryException>, the reader's position in the underlying <xref:System.IO.Stream> object is advanced by the number of characters the method was able to read, but the characters already read into the internal <xref:System.IO.StreamReader.ReadLine%2A> buffer are discarded.</span></span> <span data-ttu-id="619f6-468">버퍼에 데이터를 읽은 후 기본 스트림 위치를 조작 하는 경우 기본 스트림의 위치 내부 버퍼의 위치를 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-468">If you manipulate the position of the underlying stream after reading data into the buffer, the position of the underlying stream might not match the position of the internal buffer.</span></span> <span data-ttu-id="619f6-469">내부 버퍼를 다시 설정 하려면 호출의 <xref:System.IO.StreamReader.DiscardBufferedData%2A> 메서드도 있습니다; 그러나이 인해 성능이 저하 메서드와 반드시 필요한 경우에 호출 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-469">To reset the internal buffer, call the <xref:System.IO.StreamReader.DiscardBufferedData%2A> method; however, this method slows performance and should be called only when absolutely necessary.</span></span>  
  
 <span data-ttu-id="619f6-470">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-470">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="619f6-471">다음 코드 예제에서는 한 번에 파일의 끝까지 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="619f6-471">The following code example reads all the way to the end of a file in one operation.</span></span>  
  
 [!code-cpp[strmreader readtoend#1](~/samples/snippets/cpp/VS_Snippets_CLR/StrmReader ReadToEnd/CPP/strmreader readtoend.cpp#1)]
 [!code-csharp[strmreader readtoend#1](~/samples/snippets/csharp/VS_Snippets_CLR/StrmReader ReadToEnd/CS/strmreader readtoend.cs#1)]
 [!code-vb[strmreader readtoend#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StrmReader ReadToEnd/VB/strmreader readtoend.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="619f6-472">메모리가 부족하여 반환된 문자열의 버퍼를 할당할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-472">There is insufficient memory to allocate a buffer for the returned string.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="619f6-473">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-473">An I/O error occurs.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadToEndAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;string&gt; ReadToEndAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; ReadToEndAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StreamReader.ReadToEndAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadToEndAsync () As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;System::String ^&gt; ^ ReadToEndAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="619f6-474">현재 위치부터 스트림 끝까지의 모든 문자를 비동기적으로 읽어서 이를 하나의 문자열로 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-474">Reads all characters from the current position to the end of the stream asynchronously and returns them as one string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="619f6-475">비동기 읽기 작업을 나타내는 작업입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-475">A task that represents the asynchronous read operation.</span>
          </span>
          <span data-ttu-id="619f6-476">
            <paramref name="TResult" /> 매개 변수의 값은 현재 위치에서 스트림 끝까지 있는 문자로 이루어진 문자열을 포함합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-476">The value of the <paramref name="TResult" /> parameter contains a string with the characters from the current position to the end of the stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="619f6-477">다음 예제에서는 사용 하 여 파일의 내용을 읽을 수는 <xref:System.IO.StreamReader.ReadToEndAsync> 메서드.</span><span class="sxs-lookup"><span data-stu-id="619f6-477">The following example shows how to read the contents of a file by using the <xref:System.IO.StreamReader.ReadToEndAsync> method.</span></span>  
  
 [!code-csharp[System.IO.StreamReader#40](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamReader/CS/example40.cs#40)]
 [!code-vb[System.IO.StreamReader#40](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamReader/VB/example40.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="619f6-478">문자 수가 <see cref="F:System.Int32.MaxValue" />보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-478">The number of characters is larger than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="619f6-479">스트림이 삭제되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-479">The stream has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="619f6-480">판독기가 현재 이전 읽기 작업에서 사용 중입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="619f6-480">The reader is currently in use by a previous read operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>