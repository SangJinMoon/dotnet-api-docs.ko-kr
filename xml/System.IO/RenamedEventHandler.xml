<Type Name="RenamedEventHandler" FullName="System.IO.RenamedEventHandler">
  <TypeSignature Language="C#" Value="public delegate void RenamedEventHandler(object sender, RenamedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed RenamedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.IO.RenamedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub RenamedEventHandler(sender As Object, e As RenamedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void RenamedEventHandler(System::Object ^ sender, RenamedEventArgs ^ e);" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.IO.RenamedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender"><span data-ttu-id="73543-101">이벤트 소스입니다.</span><span class="sxs-lookup"><span data-stu-id="73543-101">The source of the event.</span></span></param>
    <param name="e"><span data-ttu-id="73543-102">이벤트 데이터를 포함하는 <see cref="T:System.IO.RenamedEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="73543-102">The <see cref="T:System.IO.RenamedEventArgs" /> that contains the event data.</span></span></param>
    <summary><span data-ttu-id="73543-103"><see cref="E:System.IO.FileSystemWatcher.Renamed" /> 클래스의 <see cref="T:System.IO.FileSystemWatcher" /> 이벤트를 처리할 메서드를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="73543-103">Represents the method that will handle the <see cref="E:System.IO.FileSystemWatcher.Renamed" /> event of a <see cref="T:System.IO.FileSystemWatcher" /> class.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73543-104"><xref:System.IO.RenamedEventHandler> 대리자를 만들 때, 이벤트를 처리할 메서드를 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="73543-104">When you create a <xref:System.IO.RenamedEventHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="73543-105">이벤트를 이벤트 처리기와 연결하려면 대리자의 인스턴스를 해당 이벤트에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="73543-105">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="73543-106">대리자를 제거하지 않는 경우 이벤트가 발생할 때마다 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="73543-106">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="73543-107">이벤트 처리기 대리자에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="73543-107">For more information about event handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73543-108">다음 예제에는 파일 변경 내용을 모니터링 하기 FileSystemWatcher를 만드는 방법을 보여 줍니다 (, 삭제, 이름 바꾸기, 변경과) 디스크 드라이브에서 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="73543-108">The following example shows how to create a FileSystemWatcher to monitor file changes (creates, deletes, renames, changes) occurring on a disk drive.</span></span> <span data-ttu-id="73543-109">이 예제에는 오류 알림을 받는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="73543-109">The example also shows how to properly receive error notifications.</span></span>  
  
 [!code-csharp[FileSystemWatcher#1](~/samples/snippets/csharp/VS_Snippets_CLR/FileSystemWatcher/cs/filesystemwatcher.cs#1)]
 [!code-vb[FileSystemWatcher#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FileSystemWatcher/VB/FileSystemWatcher.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.FileSystemEventArgs" />
    <altmember cref="T:System.IO.FileSystemEventHandler" />
    <altmember cref="T:System.IO.FileSystemWatcher" />
    <altmember cref="T:System.IO.InternalBufferOverflowException" />
    <altmember cref="T:System.IO.NotifyFilters" />
    <altmember cref="M:System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)" />
    <altmember cref="E:System.IO.FileSystemWatcher.Renamed" />
    <altmember cref="T:System.IO.RenamedEventArgs" />
    <altmember cref="T:System.IO.WaitForChangedResult" />
    <altmember cref="T:System.IO.WatcherChangeTypes" />
  </Docs>
</Type>