<Type Name="StringReader" FullName="System.IO.StringReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7464a35d5d918ea9d55ba7973845d7fc133537cc" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37651629" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class StringReader : System.IO.TextReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit StringReader extends System.IO.TextReader" />
  <TypeSignature Language="DocId" Value="T:System.IO.StringReader" />
  <TypeSignature Language="VB.NET" Value="Public Class StringReader&#xA;Inherits TextReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class StringReader : System::IO::TextReader" />
  <TypeSignature Language="F#" Value="type StringReader = class&#xA;    inherit TextReader" />
  <AssemblyInfo>
    <AssemblyName>System.IO</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.TextReader</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="b5218-101">문자열에서 읽어오는 <see cref="T:System.IO.TextReader" />를 구현합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b5218-101">Implements a <see cref="T:System.IO.TextReader" /> that reads from a string.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5218-102"><xref:System.IO.StringReader> 동기적 또는 비동기적으로 문자열을 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-102"><xref:System.IO.StringReader> enables you to read a string synchronously or asynchronously.</span></span> <span data-ttu-id="b5218-103">사용 하 여 한 번에 문자를 읽을 수는 <xref:System.IO.StringReader.Read%2A> 또는 <xref:System.IO.StringReader.ReadAsync%2A> 메서드를 사용 하 여 시간을 줄을 <xref:System.IO.StringReader.ReadLine%2A> 또는 <xref:System.IO.StringReader.ReadLineAsync%2A> 메서드 및 사용 하는 전체 문자열을 <xref:System.IO.StringReader.ReadToEnd%2A> 또는 <xref:System.IO.StringReader.ReadToEndAsync%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b5218-103">You can read a character at a time with the <xref:System.IO.StringReader.Read%2A> or the <xref:System.IO.StringReader.ReadAsync%2A> method, a line at a time using the <xref:System.IO.StringReader.ReadLine%2A> or the <xref:System.IO.StringReader.ReadLineAsync%2A> method and an entire string using the <xref:System.IO.StringReader.ReadToEnd%2A> or the <xref:System.IO.StringReader.ReadToEndAsync%2A> method.</span></span>  
  
[!INCLUDE[note_unnecessary_dispose](~/includes/note-unnecessary-dispose.md)]
  
 <span data-ttu-id="b5218-104">다음 표에서 일반적인 하거나 관련 된 I/O 작업의 예제를 나열합니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-104">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="b5218-105">수행 작업</span><span class="sxs-lookup"><span data-stu-id="b5218-105">To do this...</span></span>|<span data-ttu-id="b5218-106">참조 항목</span><span class="sxs-lookup"><span data-stu-id="b5218-106">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="b5218-107">텍스트 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-107">Create a text file.</span></span>|[<span data-ttu-id="b5218-108">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="b5218-108">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="b5218-109">텍스트 파일에 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-109">Write to a text file.</span></span>|[<span data-ttu-id="b5218-110">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="b5218-110">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="b5218-111">텍스트 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-111">Read from a text file.</span></span>|[<span data-ttu-id="b5218-112">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="b5218-112">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="b5218-113">파일에 텍스트를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-113">Append text to a file.</span></span>|[<span data-ttu-id="b5218-114">방법: 로그 파일 열기 및 추가</span><span class="sxs-lookup"><span data-stu-id="b5218-114">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="b5218-115">파일의 크기를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-115">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="b5218-116">파일의 특성을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-116">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="b5218-117">파일의 특성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-117">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="b5218-118">파일의 존재 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-118">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="b5218-119">이진 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-119">Read from a binary file.</span></span>|[<span data-ttu-id="b5218-120">방법: 새로 만든 데이터 파일 읽기 및 쓰기</span><span class="sxs-lookup"><span data-stu-id="b5218-120">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="b5218-121">이진 파일에 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-121">Write to a binary file.</span></span>|[<span data-ttu-id="b5218-122">방법: 새로 만든 데이터 파일 읽기 및 쓰기</span><span class="sxs-lookup"><span data-stu-id="b5218-122">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="b5218-123">다음 예제에서는 전체 문자열을 비동기적으로 읽는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-123">The following example shows how to read an entire string asynchronously.</span></span>  
  
 [!code-csharp[System.IO.StringReader#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringreader/cs/example2.cs#2)]
 [!code-vb[System.IO.StringReader#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringreader/vb/example2.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.TextReader" />
    <altmember cref="T:System.IO.StringWriter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringReader (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringReader(System::String ^ s);" />
      <MemberSignature Language="F#" Value="new System.IO.StringReader : string -&gt; System.IO.StringReader" Usage="new System.IO.StringReader s" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="b5218-124">
            <see cref="T:System.IO.StringReader" />가 초기화되어야 하는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-124">The string to which the <see cref="T:System.IO.StringReader" /> should be initialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b5218-125">지정된 문자열에서 읽어오는 <see cref="T:System.IO.StringReader" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-125">Initializes a new instance of the <see cref="T:System.IO.StringReader" /> class that reads from the specified string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5218-126">다음 표에서 일반적인 하거나 관련 된 I/O 작업의 예제를 나열합니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-126">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="b5218-127">수행 작업</span><span class="sxs-lookup"><span data-stu-id="b5218-127">To do this...</span></span>|<span data-ttu-id="b5218-128">참조 항목</span><span class="sxs-lookup"><span data-stu-id="b5218-128">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="b5218-129">텍스트 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-129">Create a text file.</span></span>|[<span data-ttu-id="b5218-130">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="b5218-130">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="b5218-131">텍스트 파일에 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-131">Write to a text file.</span></span>|[<span data-ttu-id="b5218-132">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="b5218-132">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="b5218-133">텍스트 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-133">Read from a text file.</span></span>|[<span data-ttu-id="b5218-134">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="b5218-134">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="b5218-135">파일에 텍스트를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-135">Append text to a file.</span></span>|[<span data-ttu-id="b5218-136">방법: 로그 파일 열기 및 추가</span><span class="sxs-lookup"><span data-stu-id="b5218-136">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="b5218-137">파일의 크기를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-137">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="b5218-138">파일의 특성을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-138">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="b5218-139">파일의 특성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-139">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="b5218-140">파일의 존재 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-140">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="b5218-141">이진 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-141">Read from a binary file.</span></span>|[<span data-ttu-id="b5218-142">방법: 새로 만든 데이터 파일 읽기 및 쓰기</span><span class="sxs-lookup"><span data-stu-id="b5218-142">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="b5218-143">이진 파일에 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-143">Write to a binary file.</span></span>|[<span data-ttu-id="b5218-144">방법: 새로 만든 데이터 파일 읽기 및 쓰기</span><span class="sxs-lookup"><span data-stu-id="b5218-144">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="b5218-145">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.IO.StringReader> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-145">This code example is part of a larger example provided for the <xref:System.IO.StringReader> class.</span></span>  
  
 [!code-cpp[System.IO.StringReaderWriter#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CPP/stringrw.cpp#2)]
 [!code-csharp[System.IO.StringReaderWriter#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CS/stringrw.cs#2)]
 [!code-vb[System.IO.StringReaderWriter#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringReaderWriter/VB/stringrw.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b5218-146">
            <paramref name="s" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-146">The <paramref name="s" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="stringReader.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b5218-147">
            <see cref="T:System.IO.StringReader" />를 닫습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-147">Closes the <see cref="T:System.IO.StringReader" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5218-148">파일을 만들고 파일에 텍스트 쓰기의 예제를 보려면 [방법: 파일에 텍스트 쓰기](~/docs/standard/io/how-to-write-text-to-a-file.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-148">For an example of creating a file and writing text to a file, see [How to: Write Text to a File](~/docs/standard/io/how-to-write-text-to-a-file.md).</span></span> <span data-ttu-id="b5218-149">파일에서 읽는 텍스트의 예제를 보려면 [방법: 파일에서 텍스트 읽기](~/docs/standard/io/how-to-read-text-from-a-file.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-149">For an example of reading text from a file, see [How to: Read Text from a File](~/docs/standard/io/how-to-read-text-from-a-file.md).</span></span> <span data-ttu-id="b5218-150">읽기 및 쓰기 이진 파일의 예제를 참조 하세요 [방법: 새로 만든 데이터 파일에 읽기 및 쓰기](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-150">For an example of reading from and writing to a binary file, see [How to: Read and Write to a Newly Created Data File](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md).</span></span>  
  
 <span data-ttu-id="b5218-151">이 메서드를 재정의 합니다 <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b5218-151">This method overrides the <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="b5218-152">이 구현의 `Close` 호출을 <xref:System.IO.StringReader.Dispose%2A> 전달 하는 메서드를 `true` 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-152">This implementation of `Close` calls the <xref:System.IO.StringReader.Dispose%2A> method passing a `true` value.</span></span>  
  
 <span data-ttu-id="b5218-153">명시적으로 호출 하지 않으면 스트림을 내부 인코더가 플러시되지 것입니다 `Close`합니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-153">Flushing the stream will not flush its underlying encoder unless you explicitly call `Close`.</span></span> <span data-ttu-id="b5218-154">설정 <xref:System.IO.StreamWriter.AutoFlush%2A> 에 `true` 스트림 버퍼에서 데이터를 플러시할 수는 있지만 인코더 상태는 플러시되지 있다는 것을 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-154">Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="b5218-155">이 수는 다음 문자 블록을 올바르게 인코딩할 수 있도록 상태로 (부분 자)를 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-155">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="b5218-156">이 시나리오는 UTF8 및 UTF7 인코더는 인접 한 문자를 받은 후 특정 문자를 인코딩된만 수 있는 영향을 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-156">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
 <span data-ttu-id="b5218-157">호출한 다음 `Close`, 다른 메서드 예외를 throw 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-157">Following a call to `Close`, other methods might throw an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="stringReader.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="b5218-158">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-158">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b5218-159">
            <see cref="T:System.IO.StringReader" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-159">Releases the unmanaged resources used by the <see cref="T:System.IO.StringReader" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5218-160">`disposing` 매개 변수가 `true`인 경우 이 메서드는 이 <xref:System.IO.StringReader>에서 참조하는 관리 개체가 보유하고 있는 리소스를 모두 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-160">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.StringReader> references.</span></span> <span data-ttu-id="b5218-161">이 메서드는 참조되는 각 개체의 `Dispose` 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-161">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="b5218-162">
            <para>
              <see cref="M:System.IO.StringReader.Dispose(System.Boolean)" /> 다른 개체에서 여러 번 호출할 수 있습니다. 재정의 하는 경우 <see cref="M:System.IO.StringReader.Dispose(System.Boolean)" />대 한 이전 호출에서 삭제 된 개체를 참조 하지 않도록 주의 하십시오 <see cref="M:System.IO.StringReader.Dispose(System.Boolean)" />합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-162">
              <para>
                <see cref="M:System.IO.StringReader.Dispose(System.Boolean)" /> can be called multiple times by other objects. When overriding <see cref="M:System.IO.StringReader.Dispose(System.Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see cref="M:System.IO.StringReader.Dispose(System.Boolean)" />.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public override int Peek ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Peek() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.Peek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Peek () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Peek();" />
      <MemberSignature Language="F#" Value="override this.Peek : unit -&gt; int" Usage="stringReader.Peek " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b5218-163">사용할 수 있는 다음 문자를 반환하지만 사용하지는 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-163">Returns the next available character but does not consume it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b5218-164">읽을 다음 문자를 나타내는 정수이거나, 사용할 수 있는 문자가 더 이상 없거나 스트림에서 검색을 지원하지 않을 경우 -1입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-164">An integer representing the next character to be read, or -1 if no more characters are available or the stream does not support seeking.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5218-165"><xref:System.IO.StringReader.Peek%2A> 메서드 끝 파일 또는 다른 오류가 발생 했는지 여부를 확인 하기 위해 정수 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-165">The <xref:System.IO.StringReader.Peek%2A> method returns an integer value in order to determine whether the end of the file, or another error has occurred.</span></span> <span data-ttu-id="b5218-166">이렇게 하면 사용자는 반환된 값은-1로 캐스팅 하기 전에 먼저 확인 하는 <xref:System.Char> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-166">This allows a user to first check if the returned value is -1 before casting it to a <xref:System.Char> type.</span></span>  
  
 <span data-ttu-id="b5218-167">이 메서드를 재정의 합니다 <xref:System.IO.TextReader.Peek%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b5218-167">This method overrides the <xref:System.IO.TextReader.Peek%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="b5218-168">현재 위치를 `StringReader` 이 작업에 의해 변경 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-168">The current position of the `StringReader` is not changed by this operation.</span></span>  
  
 <span data-ttu-id="b5218-169">다음 표에서 일반적인 하거나 관련 된 I/O 작업의 예제를 나열합니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-169">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="b5218-170">수행 작업</span><span class="sxs-lookup"><span data-stu-id="b5218-170">To do this...</span></span>|<span data-ttu-id="b5218-171">참조 항목</span><span class="sxs-lookup"><span data-stu-id="b5218-171">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="b5218-172">텍스트 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-172">Create a text file.</span></span>|[<span data-ttu-id="b5218-173">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="b5218-173">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="b5218-174">텍스트 파일에 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-174">Write to a text file.</span></span>|[<span data-ttu-id="b5218-175">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="b5218-175">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="b5218-176">텍스트 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-176">Read from a text file.</span></span>|[<span data-ttu-id="b5218-177">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="b5218-177">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="b5218-178">파일의 크기를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-178">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="b5218-179">현재 판독기가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-179">The current reader is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Read">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b5218-180">입력 문자열에서 다음 문자 또는 다음 문자 집합을 읽습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-180">Reads the next character or next set of characters from the input string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read();" />
      <MemberSignature Language="F#" Value="override this.Read : unit -&gt; int" Usage="stringReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b5218-181">입력 문자열에서 다음 문자를 읽고 문자 위치를 한 문자씩 앞으로 이동합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-181">Reads the next character from the input string and advances the character position by one character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b5218-182">내부 문자열의 다음 문자를 반환하거나, 사용할 수 있는 문자가 더 이상 없으면 -1을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-182">The next character from the underlying string, or -1 if no more characters are available.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5218-183">이 메서드를 재정의 합니다 <xref:System.IO.TextReader.Read%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b5218-183">This method overrides the <xref:System.IO.TextReader.Read%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="b5218-184">다음 표에서 일반적인 하거나 관련 된 I/O 작업의 예제를 나열합니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-184">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="b5218-185">수행 작업</span><span class="sxs-lookup"><span data-stu-id="b5218-185">To do this...</span></span>|<span data-ttu-id="b5218-186">참조 항목</span><span class="sxs-lookup"><span data-stu-id="b5218-186">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="b5218-187">텍스트 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-187">Create a text file.</span></span>|[<span data-ttu-id="b5218-188">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="b5218-188">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="b5218-189">텍스트 파일에 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-189">Write to a text file.</span></span>|[<span data-ttu-id="b5218-190">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="b5218-190">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="b5218-191">텍스트 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-191">Read from a text file.</span></span>|[<span data-ttu-id="b5218-192">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="b5218-192">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="b5218-193">파일에 텍스트를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-193">Append text to a file.</span></span>|[<span data-ttu-id="b5218-194">방법: 로그 파일 열기 및 추가</span><span class="sxs-lookup"><span data-stu-id="b5218-194">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="b5218-195">파일의 크기를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-195">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="b5218-196">파일의 특성을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-196">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="b5218-197">파일의 특성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-197">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="b5218-198">파일의 존재 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-198">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="b5218-199">이진 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-199">Read from a binary file.</span></span>|[<span data-ttu-id="b5218-200">방법: 새로 만든 데이터 파일 읽기 및 쓰기</span><span class="sxs-lookup"><span data-stu-id="b5218-200">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="b5218-201">이진 파일에 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-201">Write to a binary file.</span></span>|[<span data-ttu-id="b5218-202">방법: 새로 만든 데이터 파일 읽기 및 쓰기</span><span class="sxs-lookup"><span data-stu-id="b5218-202">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="b5218-203">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.IO.StringReader> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-203">This code example is part of a larger example provided for the <xref:System.IO.StringReader> class.</span></span>  
  
 [!code-cpp[System.IO.StringReaderWriter#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CPP/stringrw.cpp#3)]
 [!code-csharp[System.IO.StringReaderWriter#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CS/stringrw.cs#3)]
 [!code-vb[System.IO.StringReaderWriter#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringReaderWriter/VB/stringrw.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="b5218-204">현재 판독기가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-204">The current reader is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (Span&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(valuetype System.Span`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.Read(System.Span{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Span(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(Span&lt;char&gt; buffer);" />
      <MemberSignature Language="F#" Value="override this.Read : Span&lt;char&gt; -&gt; int" Usage="stringReader.Read buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read([out] char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.Read : char[] * int * int -&gt; int" Usage="stringReader.Read (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="b5218-205">이 메서드는 지정된 문자 배열의 값이 <c>인덱스</c>와 (<c>인덱스</c> + <c>카운트</c> - 1) 사이에서 현재 소스로부터 읽어온 문자로 교체된 상태로 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-205">When this method returns, contains the specified character array with the values between <c>index</c> and (<c>index</c> + <c>count</c> - 1) replaced by the characters read from the current source.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="b5218-206">버퍼의 시작 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-206">The starting index in the buffer.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="b5218-207">읽을 문자 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-207">The number of characters to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b5218-208">입력 문자열에서 문자 블록을 읽은 다음 문자 위치를 <paramref name="count" />씩 앞으로 이동합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-208">Reads a block of characters from the input string and advances the character position by <paramref name="count" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b5218-209">버퍼로 읽어온 총 문자 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-209">The total number of characters read into the buffer.</span>
          </span>
          <span data-ttu-id="b5218-210">이 문자 수는 현재 문자가 충분하지 않은 경우 요청된 문자 수보다 작을 수 있으며 내부 문자열의 끝에 도달하면 0이 됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-210">This can be less than the number of characters requested if that many characters are not currently available, or zero if the end of the underlying string has been reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5218-211">이 메서드는 <xref:System.IO.TextReader.Read%2A?displayProperty=nameWithType>를 재정의합니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-211">This method overrides <xref:System.IO.TextReader.Read%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="b5218-212">메서드는 최대 읽습니다 `count` 에서 문자를 <xref:System.IO.StringReader> 에 `buffer` 위치에서 시작 하는 문자 배열 `index`합니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-212">The method will read up to `count` characters from the <xref:System.IO.StringReader> into the `buffer` character array starting at position `index`.</span></span> <span data-ttu-id="b5218-213">문자 수가 실제 읽기, 또는 문자열의 끝에 도달 했으며 없는 문자를 읽은 경우 0을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-213">Returns the actual number of characters read, or zero if the end of the string has been reached and no characters are read.</span></span>  
  
 <span data-ttu-id="b5218-214">다음 표에서 일반적인 하거나 관련 된 I/O 작업의 예제를 나열합니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-214">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="b5218-215">수행 작업</span><span class="sxs-lookup"><span data-stu-id="b5218-215">To do this...</span></span>|<span data-ttu-id="b5218-216">참조 항목</span><span class="sxs-lookup"><span data-stu-id="b5218-216">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="b5218-217">텍스트 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-217">Create a text file.</span></span>|[<span data-ttu-id="b5218-218">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="b5218-218">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="b5218-219">텍스트 파일에 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-219">Write to a text file.</span></span>|[<span data-ttu-id="b5218-220">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="b5218-220">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="b5218-221">텍스트 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-221">Read from a text file.</span></span>|[<span data-ttu-id="b5218-222">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="b5218-222">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="b5218-223">파일에 텍스트를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-223">Append text to a file.</span></span>|[<span data-ttu-id="b5218-224">방법: 로그 파일 열기 및 추가</span><span class="sxs-lookup"><span data-stu-id="b5218-224">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="b5218-225">파일의 크기를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-225">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="b5218-226">파일의 특성을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-226">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="b5218-227">파일의 특성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-227">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="b5218-228">파일의 존재 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-228">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="b5218-229">이진 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-229">Read from a binary file.</span></span>|[<span data-ttu-id="b5218-230">방법: 새로 만든 데이터 파일 읽기 및 쓰기</span><span class="sxs-lookup"><span data-stu-id="b5218-230">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="b5218-231">이진 파일에 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-231">Write to a binary file.</span></span>|[<span data-ttu-id="b5218-232">방법: 새로 만든 데이터 파일 읽기 및 쓰기</span><span class="sxs-lookup"><span data-stu-id="b5218-232">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b5218-233">
            <paramref name="buffer" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-233">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b5218-234">버퍼 길이에서 <paramref name="index" />를 빼면 <paramref name="count" />보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-234">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b5218-235">
            <paramref name="index" /> 또는 <paramref name="count" />가 음수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-235">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="b5218-236">현재 판독기가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-236">The current reader is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask&lt;int&gt; ReadAsync (Memory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;int32&gt; ReadAsync(valuetype System.Memory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadAsync(System.Memory{System.Char},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.ReadAsync : Memory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;" Usage="stringReader.ReadAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Char&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;int&gt; ReadAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadAsync (buffer As Char(), index As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;int&gt; ^ ReadAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="stringReader.ReadAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="b5218-237">이 메서드는 지정된 문자 배열의 값이 <c>인덱스</c>와 (<c>인덱스</c> + <c>카운트</c> - 1) 사이에서 현재 소스로부터 읽어온 문자로 교체된 상태로 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-237">When this method returns, contains the specified character array with the values between <c>index</c> and (<c>index</c> + <c>count</c> - 1) replaced by the characters read from the current source.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="b5218-238">쓰기를 시작할 <c>버퍼</c>의 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-238">The position in <c>buffer</c> at which to begin writing.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="b5218-239">읽을 최대 문자 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-239">The maximum number of characters to read.</span>
          </span>
          <span data-ttu-id="b5218-240">지정한 문자 수를 버퍼에 기록하기 전에 문자열의 끝에 도달하면 메서드가 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-240">If the end of the string is reached before the specified number of characters is written into the buffer, the method returns.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b5218-241">현재 문자열에서 지정된 최대 수의 문자를 비동기적으로 읽어 이 데이터를 지정된 인덱스에서 시작되는 버퍼에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-241">Reads a specified maximum number of characters from the current string asynchronously and writes the data to a buffer, beginning at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b5218-242">비동기 읽기 작업을 나타내는 작업입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-242">A task that represents the asynchronous read operation.</span>
          </span>
          <span data-ttu-id="b5218-243">
            <paramref name="TResult" /> 매개 변수의 값은 버퍼 안으로 읽어들인 총 바이트 수를 포함합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-243">The value of the <paramref name="TResult" /> parameter contains the total number of bytes read into the buffer.</span>
          </span>
          <span data-ttu-id="b5218-244">현재 사용할 수 있는 바이트 수가 요청된 수보다 작을 경우 결과 값이 요청된 바이트 수보다 작을 수 있으며 문자열의 끝에 도달한 경우에는 0이 될 수도 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-244">The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the string has been reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5218-245">작업 완료 후 지정 된 문자의 수를 `count` 매개 변수는 읽기 또는 문자열의 끝에 도달 합니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-245">The task completes after either the number of characters specified by the `count` parameter are read or the end of the string is reached.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5218-246">다음 예제에서는 문자열의 처음 23 문자를 비동기적으로 읽는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-246">The following example shows how to read the first 23 characters of a string asynchronously.</span></span>  
  
 [!code-csharp[System.IO.StringReader#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringreader/cs/example1.cs#1)]
 [!code-vb[System.IO.StringReader#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringreader/vb/example1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b5218-247">
            <paramref name="buffer" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-247">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b5218-248">
            <paramref name="index" /> 또는 <paramref name="count" />가 음수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-248">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b5218-249">
            <paramref name="index" /> 및 <paramref name="count" />의 합계가 버퍼 길이보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-249">The sum of <paramref name="index" /> and <paramref name="count" /> is larger than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="b5218-250">문자열 판독기가 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-250">The string reader has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b5218-251">판독기가 현재 이전 읽기 작업에서 사용 중입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-251">The reader is currently in use by a previous read operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadBlock">
      <MemberSignature Language="C#" Value="public override int ReadBlock (Span&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadBlock(valuetype System.Span`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadBlock(System.Span{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadBlock (buffer As Span(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadBlock(Span&lt;char&gt; buffer);" />
      <MemberSignature Language="F#" Value="override this.ReadBlock : Span&lt;char&gt; -&gt; int" Usage="stringReader.ReadBlock buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadBlockAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask&lt;int&gt; ReadBlockAsync (Memory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;int32&gt; ReadBlockAsync(valuetype System.Memory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadBlockAsync(System.Memory{System.Char},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.ReadBlockAsync : Memory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;" Usage="stringReader.ReadBlockAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Char&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadBlockAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;int&gt; ReadBlockAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadBlockAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadBlockAsync (buffer As Char(), index As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;int&gt; ^ ReadBlockAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadBlockAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="stringReader.ReadBlockAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="b5218-252">이 메서드는 지정된 문자 배열의 값이 <c>인덱스</c>와 (<c>인덱스</c> + <c>카운트</c> - 1) 사이에서 현재 소스로부터 읽어온 문자로 교체된 상태로 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-252">When this method returns, contains the specified character array with the values between <c>index</c> and (<c>index</c> + <c>count</c> - 1) replaced by the characters read from the current source.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="b5218-253">쓰기를 시작할 <c>버퍼</c>의 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-253">The position in <c>buffer</c> at which to begin writing.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="b5218-254">읽을 최대 문자 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-254">The maximum number of characters to read.</span>
          </span>
          <span data-ttu-id="b5218-255">지정한 문자 수를 버퍼에 기록하기 전에 문자열의 끝에 도달하면 메서드가 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-255">If the end of the string is reached before the specified number of characters is written into the buffer, the method returns.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b5218-256">현재 문자열에서 지정된 최대 수의 문자를 비동기적으로 읽어 이 데이터를 지정된 인덱스에서 시작되는 버퍼에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-256">Reads a specified maximum number of characters from the current string asynchronously and writes the data to a buffer, beginning at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b5218-257">비동기 읽기 작업을 나타내는 작업입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-257">A task that represents the asynchronous read operation.</span>
          </span>
          <span data-ttu-id="b5218-258">
            <paramref name="TResult" /> 매개 변수의 값은 버퍼 안으로 읽어들인 총 바이트 수를 포함합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-258">The value of the <paramref name="TResult" /> parameter contains the total number of bytes read into the buffer.</span>
          </span>
          <span data-ttu-id="b5218-259">현재 사용할 수 있는 바이트 수가 요청된 수보다 작을 경우 결과 값이 요청된 바이트 수보다 작을 수 있으며 문자열의 끝에 도달한 경우에는 0이 될 수도 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-259">The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the string has been reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5218-260">작업이 완료 되지 않으면 될 때까지 지정 된 문자의 수를 `count` 매개 변수를 읽거나 문자열의 끝에 도달 합니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-260">The task does not complete until either the number of characters specified by the `count` parameter are read, or the end of the string has been reached.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b5218-261">
            <paramref name="buffer" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-261">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b5218-262">
            <paramref name="index" /> 또는 <paramref name="count" />가 음수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-262">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b5218-263">
            <paramref name="index" /> 및 <paramref name="count" />의 합계가 버퍼 길이보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-263">The sum of <paramref name="index" /> and <paramref name="count" /> is larger than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="b5218-264">문자열 판독기가 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-264">The string reader has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b5218-265">판독기가 현재 이전 읽기 작업에서 사용 중입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-265">The reader is currently in use by a previous read operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadLine">
      <MemberSignature Language="C#" Value="public override string ReadLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ReadLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadLine" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadLine () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ReadLine();" />
      <MemberSignature Language="F#" Value="override this.ReadLine : unit -&gt; string" Usage="stringReader.ReadLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b5218-266">현재 문자열에서 한 줄의 문자를 읽고 데이터를 문자열로 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-266">Reads a line of characters from the current string and returns the data as a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b5218-267">현재 문자열의 다음 줄 또는 문자열의 끝에 도달한 경우 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-267">The next line from the current string, or <see langword="null" /> if the end of the string is reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5218-268">이 메서드를 재정의 합니다 <xref:System.IO.TextReader.ReadLine%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b5218-268">This method overrides the <xref:System.IO.TextReader.ReadLine%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="b5218-269">줄 뒤에 줄 문자의 시퀀스 ("\n") 피드, 캐리지 리턴 ("\r") 또는 캐리지 리턴 바로 뒤에 줄 바꿈 ("\r\n")으로 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-269">A line is defined as a sequence of characters followed by a line feed ("\n"), a carriage return ("\r"), or a carriage return immediately followed by a line feed ("\r\n").</span></span> <span data-ttu-id="b5218-270">반환 되는 문자열 종료 캐리지 리턴 또는 줄 바꿈 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-270">The string that is returned does not contain the terminating carriage return or line feed.</span></span> <span data-ttu-id="b5218-271">반환된 값은 `null` 문자열의 끝에 도달한 경우입니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-271">The returned value is `null` if the end of the string has been reached.</span></span>  
  
 <span data-ttu-id="b5218-272">현재 메서드가 throw 하는 경우는 <xref:System.OutOfMemoryException>, 판독기의 위치는 기본 문자열에서 문자 메서드를 읽을 수 있었습니다. 하지만 내부에 이미 읽은 문자 수로 고급 <xref:System.IO.StringReader.ReadLine%2A> 버퍼 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-272">If the current method throws an <xref:System.OutOfMemoryException>, the reader's position in the underlying string is advanced by the number of characters the method was able to read, but the characters already read into the internal <xref:System.IO.StringReader.ReadLine%2A> buffer are discarded.</span></span> <span data-ttu-id="b5218-273">이미 읽은 문자 문자열에서 판독기의 위치를 변경할 수 없으므로, 복구할 수 없는 하 고 다시 초기화에 의해서만 액세스할 수 있습니다는 <xref:System.IO.StringReader>합니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-273">Because the position of the reader in the string cannot be changed, the characters already read are unrecoverable, and can be accessed only by reinitializing the <xref:System.IO.StringReader>.</span></span> <span data-ttu-id="b5218-274">이러한 상황을 방지 하려면 사용 된 <xref:System.IO.StringReader.Read%2A> 읽기 미리 할당 된 버퍼의 문자 메서드와 저장소.</span><span class="sxs-lookup"><span data-stu-id="b5218-274">To avoid such a situation, use the <xref:System.IO.StringReader.Read%2A> method and store the read characters in a preallocated buffer.</span></span>  
  
 <span data-ttu-id="b5218-275">다음 표에서 일반적인 하거나 관련 된 I/O 작업의 예제를 나열합니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-275">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="b5218-276">수행 작업</span><span class="sxs-lookup"><span data-stu-id="b5218-276">To do this...</span></span>|<span data-ttu-id="b5218-277">참조 항목</span><span class="sxs-lookup"><span data-stu-id="b5218-277">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="b5218-278">텍스트 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-278">Create a text file.</span></span>|[<span data-ttu-id="b5218-279">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="b5218-279">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="b5218-280">텍스트 파일에 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-280">Write to a text file.</span></span>|[<span data-ttu-id="b5218-281">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="b5218-281">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="b5218-282">텍스트 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-282">Read from a text file.</span></span>|[<span data-ttu-id="b5218-283">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="b5218-283">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="b5218-284">파일에 텍스트를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-284">Append text to a file.</span></span>|[<span data-ttu-id="b5218-285">방법: 로그 파일 열기 및 추가</span><span class="sxs-lookup"><span data-stu-id="b5218-285">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="b5218-286">파일의 크기를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-286">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="b5218-287">파일의 특성을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-287">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="b5218-288">파일의 특성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-288">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="b5218-289">파일의 존재 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-289">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="b5218-290">이진 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-290">Read from a binary file.</span></span>|[<span data-ttu-id="b5218-291">방법: 새로 만든 데이터 파일 읽기 및 쓰기</span><span class="sxs-lookup"><span data-stu-id="b5218-291">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="b5218-292">이진 파일에 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-292">Write to a binary file.</span></span>|[<span data-ttu-id="b5218-293">방법: 새로 만든 데이터 파일 읽기 및 쓰기</span><span class="sxs-lookup"><span data-stu-id="b5218-293">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="b5218-294">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.IO.StringReader> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-294">This code example is part of a larger example provided for the <xref:System.IO.StringReader> class.</span></span>  
  
 [!code-cpp[System.IO.StringReaderWriter#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CPP/stringrw.cpp#2)]
 [!code-csharp[System.IO.StringReaderWriter#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CS/stringrw.cs#2)]
 [!code-vb[System.IO.StringReaderWriter#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringReaderWriter/VB/stringrw.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="b5218-295">현재 판독기가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-295">The current reader is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="b5218-296">메모리가 부족하여 반환된 문자열의 버퍼를 할당할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-296">There is insufficient memory to allocate a buffer for the returned string.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;string&gt; ReadLineAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; ReadLineAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadLineAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadLineAsync () As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;System::String ^&gt; ^ ReadLineAsync();" />
      <MemberSignature Language="F#" Value="override this.ReadLineAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="stringReader.ReadLineAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b5218-297">현재 문자열에서 한 줄의 문자를 비동기적으로 읽고 데이터를 문자열로 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-297">Reads a line of characters asynchronously from the current string and returns the data as a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b5218-298">비동기 읽기 작업을 나타내는 작업입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-298">A task that represents the asynchronous read operation.</span>
          </span>
          <span data-ttu-id="b5218-299">
            <paramref name="TResult" /> 매개 변수의 값은 문자열 판독기의 다음 줄을 포함하거나 모든 문자가 읽혀진 경우에는 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-299">The value of the <paramref name="TResult" /> parameter contains the next line from the string reader, or is <see langword="null" /> if all the characters have been read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b5218-300">다음 예제에서는 문자열에서 한 번에 한 줄씩을 비동기적으로 읽는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-300">The following example shows how to read one line at a time from a string asynchronously.</span></span>  
  
 [!code-csharp[System.IO.StringReader#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringreader/cs/example3.cs#3)]
 [!code-vb[System.IO.StringReader#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringreader/vb/example3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b5218-301">다음 줄의 문자 수가 <see cref="F:System.Int32.MaxValue" />보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-301">The number of characters in the next line is larger than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="b5218-302">문자열 판독기가 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-302">The string reader has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b5218-303">판독기가 현재 이전 읽기 작업에서 사용 중입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-303">The reader is currently in use by a previous read operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadToEnd">
      <MemberSignature Language="C#" Value="public override string ReadToEnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ReadToEnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadToEnd" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadToEnd () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ReadToEnd();" />
      <MemberSignature Language="F#" Value="override this.ReadToEnd : unit -&gt; string" Usage="stringReader.ReadToEnd " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b5218-304">현재 위치부터 문자열 끝까지의 모든 문자를 읽어서 이를 단일 문자열로 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-304">Reads all characters from the current position to the end of the string and returns them as a single string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b5218-305">내부 문자열의 현재 위치에서 끝까지의 내용입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-305">The content from the current position to the end of the underlying string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5218-306">이 메서드를 재정의 합니다 <xref:System.IO.TextReader.ReadToEnd%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b5218-306">This method overrides the <xref:System.IO.TextReader.ReadToEnd%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="b5218-307">현재 메서드가 throw 하는 경우는 <xref:System.OutOfMemoryException>, 판독기의 위치는 기본 문자열에서 문자 메서드를 읽을 수 있었습니다. 하지만 내부에 이미 읽은 문자 수로 고급 <xref:System.IO.StringReader.ReadToEnd%2A> 버퍼 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-307">If the current method throws an <xref:System.OutOfMemoryException>, the reader's position in the underlying string is advanced by the number of characters the method was able to read, but the characters already read into the internal <xref:System.IO.StringReader.ReadToEnd%2A> buffer are discarded.</span></span> <span data-ttu-id="b5218-308">이미 읽은 문자 문자열에서 판독기의 위치를 변경할 수 없으므로, 복구할 수 없는 하 고 다시 초기화에 의해서만 액세스할 수 있습니다는 <xref:System.IO.StringReader>합니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-308">Because the position of the reader in the string cannot be changed, the characters already read are unrecoverable, and can be accessed only by reinitializing the <xref:System.IO.StringReader>.</span></span> <span data-ttu-id="b5218-309">이러한 상황을 방지 하려면 사용 된 <xref:System.IO.StringReader.Read%2A> 읽기 미리 할당 된 버퍼의 문자 메서드와 저장소.</span><span class="sxs-lookup"><span data-stu-id="b5218-309">To avoid such a situation, use the <xref:System.IO.StringReader.Read%2A> method and store the read characters in a preallocated buffer.</span></span>  
  
 <span data-ttu-id="b5218-310">다음 표에서 일반적인 하거나 관련 된 I/O 작업의 예제를 나열합니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-310">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="b5218-311">수행 작업</span><span class="sxs-lookup"><span data-stu-id="b5218-311">To do this...</span></span>|<span data-ttu-id="b5218-312">참조 항목</span><span class="sxs-lookup"><span data-stu-id="b5218-312">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="b5218-313">텍스트 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-313">Create a text file.</span></span>|[<span data-ttu-id="b5218-314">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="b5218-314">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="b5218-315">텍스트 파일에 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-315">Write to a text file.</span></span>|[<span data-ttu-id="b5218-316">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="b5218-316">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="b5218-317">텍스트 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-317">Read from a text file.</span></span>|[<span data-ttu-id="b5218-318">방법: 파일의 텍스트 읽기</span><span class="sxs-lookup"><span data-stu-id="b5218-318">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="b5218-319">파일에 텍스트를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-319">Append text to a file.</span></span>|[<span data-ttu-id="b5218-320">방법: 로그 파일 열기 및 추가</span><span class="sxs-lookup"><span data-stu-id="b5218-320">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="b5218-321">파일의 크기를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-321">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="b5218-322">파일의 특성을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-322">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="b5218-323">파일의 특성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-323">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="b5218-324">파일의 존재 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-324">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="b5218-325">이진 파일에서 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-325">Read from a binary file.</span></span>|[<span data-ttu-id="b5218-326">방법: 새로 만든 데이터 파일 읽기 및 쓰기</span><span class="sxs-lookup"><span data-stu-id="b5218-326">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="b5218-327">이진 파일에 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-327">Write to a binary file.</span></span>|[<span data-ttu-id="b5218-328">방법: 새로 만든 데이터 파일 읽기 및 쓰기</span><span class="sxs-lookup"><span data-stu-id="b5218-328">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="b5218-329">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.IO.TextReader> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-329">This code example is part of a larger example provided for the <xref:System.IO.TextReader> class.</span></span>  
  
 [!code-cpp[System.IO.TextReaderWriter#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.TextReaderWriter/CPP/textrw.cpp#5)]
 [!code-csharp[System.IO.TextReaderWriter#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.TextReaderWriter/CS/textrw.cs#5)]
 [!code-vb[System.IO.TextReaderWriter#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.TextReaderWriter/VB/textrw.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="b5218-330">메모리가 부족하여 반환된 문자열의 버퍼를 할당할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-330">There is insufficient memory to allocate a buffer for the returned string.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="b5218-331">현재 판독기가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-331">The current reader is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadToEndAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;string&gt; ReadToEndAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; ReadToEndAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringReader.ReadToEndAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadToEndAsync () As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;System::String ^&gt; ^ ReadToEndAsync();" />
      <MemberSignature Language="F#" Value="override this.ReadToEndAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="stringReader.ReadToEndAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b5218-332">현재 위치부터 문자열 끝까지의 모든 문자를 비동기적으로 읽어서 이를 단일 문자열로 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-332">Reads all characters from the current position to the end of the string asynchronously and returns them as a single string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b5218-333">비동기 읽기 작업을 나타내는 작업입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-333">A task that represents the asynchronous read operation.</span>
          </span>
          <span data-ttu-id="b5218-334">
            <paramref name="TResult" /> 매개 변수의 값은 현재 위치에서 문자열 끝까지의 문자로 이루어진 문자열을 포함합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-334">The value of the <paramref name="TResult" /> parameter contains a string with the characters from the current position to the end of the string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b5218-335">다음 예제에서는 전체 문자열을 비동기적으로 읽는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b5218-335">The following example shows how to read an entire string asynchronously.</span></span>  
  
 [!code-csharp[System.IO.StringReader#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringreader/cs/example2.cs#2)]
 [!code-vb[System.IO.StringReader#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringreader/vb/example2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b5218-336">문자 수가 <see cref="F:System.Int32.MaxValue" />보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-336">The number of characters is larger than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="b5218-337">문자열 판독기가 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-337">The string reader has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b5218-338">판독기가 현재 이전 읽기 작업에서 사용 중입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5218-338">The reader is currently in use by a previous read operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>