<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="StringReader.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58e5544ec430580a68ed365b7ad95b2b2d74d4e0e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8e5544ec430580a68ed365b7ad95b2b2d74d4e0e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IO.StringReader">
          <source>Implements a <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> that reads from a string.</source>
          <target state="translated">문자열에서 읽어오는 <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>를 구현합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringReader">
          <source><ph id="ph1">&lt;xref:System.IO.StringReader&gt;</ph> enables you to read a string synchronously or asynchronously.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.StringReader&gt;</ph> 동기적 또는 비동기적으로 문자열을 읽을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringReader">
          <source>You can read a character at a time with the <ph id="ph1">&lt;xref:System.IO.StringReader.Read%2A&gt;</ph> or the <ph id="ph2">&lt;xref:System.IO.StringReader.ReadAsync%2A&gt;</ph> method, a line at a time using the <ph id="ph3">&lt;xref:System.IO.StringReader.ReadLine%2A&gt;</ph> or the <ph id="ph4">&lt;xref:System.IO.StringReader.ReadLineAsync%2A&gt;</ph> method and an entire string using the <ph id="ph5">&lt;xref:System.IO.StringReader.ReadToEnd%2A&gt;</ph> or the <ph id="ph6">&lt;xref:System.IO.StringReader.ReadToEndAsync%2A&gt;</ph> method.</source>
          <target state="translated">으로 한 번에 한 문자를 읽을 수는 <ph id="ph1">&lt;xref:System.IO.StringReader.Read%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.IO.StringReader.ReadAsync%2A&gt;</ph> 메서드를 사용 하 여 한 번에 한 줄씩은 <ph id="ph3">&lt;xref:System.IO.StringReader.ReadLine%2A&gt;</ph> 또는 <ph id="ph4">&lt;xref:System.IO.StringReader.ReadLineAsync%2A&gt;</ph> 메서드와 사용 하 여 전체 문자열의 <ph id="ph5">&lt;xref:System.IO.StringReader.ReadToEnd%2A&gt;</ph> 또는 <ph id="ph6">&lt;xref:System.IO.StringReader.ReadToEndAsync%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringReader">
          <source>The following table lists examples of other typical or related I/O tasks.</source>
          <target state="translated">다음 표에서 일반적인 또는 관련 된 I/O 작업의 예제를 나열합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringReader">
          <source>To do this...</source>
          <target state="translated">수행 작업</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringReader">
          <source>See the example in this topic...</source>
          <target state="translated">참조 항목</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringReader">
          <source>Create a text file.</source>
          <target state="translated">텍스트 파일을 만듭니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringReader">
          <source><bpt id="p1">[</bpt>How to: Write Text to a File<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 파일에 텍스트 쓰기<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringReader">
          <source>Write to a text file.</source>
          <target state="translated">텍스트 파일에 작성 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringReader">
          <source><bpt id="p1">[</bpt>How to: Write Text to a File<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 파일에 텍스트 쓰기<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringReader">
          <source>Read from a text file.</source>
          <target state="translated">텍스트 파일에서 읽습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringReader">
          <source><bpt id="p1">[</bpt>How to: Read Text from a File<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 파일의 텍스트 읽기<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringReader">
          <source>Append text to a file.</source>
          <target state="translated">파일에 텍스트를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringReader">
          <source><bpt id="p1">[</bpt>How to: Open and Append to a Log File<ept id="p1">](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 로그 파일 열기 및 추가<ept id="p1">](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)</ept></target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringReader">
          <source>Get the size of a file.</source>
          <target state="translated">파일의 크기를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringReader">
          <source>Get the attributes of a file.</source>
          <target state="translated">파일의 특성을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringReader">
          <source>Set the attributes of a file.</source>
          <target state="translated">파일의 특성을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringReader">
          <source>Determine if a file exists.</source>
          <target state="translated">파일이 있는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringReader">
          <source>Read from a binary file.</source>
          <target state="translated">이진 파일에서 읽습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringReader">
          <source><bpt id="p1">[</bpt>How to: Read and Write to a Newly Created Data File<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 새로 만든 데이터 파일 읽기 및 쓰기<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringReader">
          <source>Write to a binary file.</source>
          <target state="translated">이진 파일에 씁니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringReader">
          <source><bpt id="p1">[</bpt>How to: Read and Write to a Newly Created Data File<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 새로 만든 데이터 파일 읽기 및 쓰기<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.StringReader">
          <source>The following example shows how to read an entire string asynchronously.</source>
          <target state="translated">다음 예에서는 전체 문자열을 비동기적으로 읽는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.#ctor(System.String)">
          <source>The string to which the <ph id="ph1">&lt;see cref="T:System.IO.StringReader" /&gt;</ph> should be initialized.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.StringReader" /&gt;</ph>가 초기화되어야 하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.StringReader" /&gt;</ph> class that reads from the specified string.</source>
          <target state="translated">지정된 문자열에서 읽어오는 <ph id="ph1">&lt;see cref="T:System.IO.StringReader" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.#ctor(System.String)">
          <source>The following table lists examples of other typical or related I/O tasks.</source>
          <target state="translated">다음 표에서 일반적인 또는 관련 된 I/O 작업의 예제를 나열합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.#ctor(System.String)">
          <source>To do this...</source>
          <target state="translated">수행 작업</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.#ctor(System.String)">
          <source>See the example in this topic...</source>
          <target state="translated">참조 항목</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.#ctor(System.String)">
          <source>Create a text file.</source>
          <target state="translated">텍스트 파일을 만듭니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.#ctor(System.String)">
          <source><bpt id="p1">[</bpt>How to: Write Text to a File<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 파일에 텍스트 쓰기<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.#ctor(System.String)">
          <source>Write to a text file.</source>
          <target state="translated">텍스트 파일에 작성 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.#ctor(System.String)">
          <source><bpt id="p1">[</bpt>How to: Write Text to a File<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 파일에 텍스트 쓰기<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.#ctor(System.String)">
          <source>Read from a text file.</source>
          <target state="translated">텍스트 파일에서 읽습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.#ctor(System.String)">
          <source><bpt id="p1">[</bpt>How to: Read Text from a File<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 파일의 텍스트 읽기<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.#ctor(System.String)">
          <source>Append text to a file.</source>
          <target state="translated">파일에 텍스트를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.#ctor(System.String)">
          <source><bpt id="p1">[</bpt>How to: Open and Append to a Log File<ept id="p1">](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 로그 파일 열기 및 추가<ept id="p1">](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)</ept></target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.#ctor(System.String)">
          <source>Get the size of a file.</source>
          <target state="translated">파일의 크기를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.#ctor(System.String)">
          <source>Get the attributes of a file.</source>
          <target state="translated">파일의 특성을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.#ctor(System.String)">
          <source>Set the attributes of a file.</source>
          <target state="translated">파일의 특성을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.#ctor(System.String)">
          <source>Determine if a file exists.</source>
          <target state="translated">파일이 있는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.#ctor(System.String)">
          <source>Read from a binary file.</source>
          <target state="translated">이진 파일에서 읽습니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.#ctor(System.String)">
          <source><bpt id="p1">[</bpt>How to: Read and Write to a Newly Created Data File<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 새로 만든 데이터 파일 읽기 및 쓰기<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.#ctor(System.String)">
          <source>Write to a binary file.</source>
          <target state="translated">이진 파일에 씁니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.#ctor(System.String)">
          <source><bpt id="p1">[</bpt>How to: Read and Write to a Newly Created Data File<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 새로 만든 데이터 파일 읽기 및 쓰기<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.#ctor(System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.IO.StringReader&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.IO.StringReader&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.#ctor(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="s" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.Close">
          <source>Closes the <ph id="ph1">&lt;see cref="T:System.IO.StringReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.StringReader" /&gt;</ph>를 닫습니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Close">
          <source>For an example of creating a file and writing text to a file, see <bpt id="p1">[</bpt>How to: Write Text to a File<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept>.</source>
          <target state="translated">파일을 파일에 텍스트 쓰기의 예제를 보려면 <bpt id="p1">[</bpt>하는 방법: 파일에 텍스트 쓰기<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Close">
          <source>For an example of reading text from a file, see <bpt id="p1">[</bpt>How to: Read Text from a File<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept>.</source>
          <target state="translated">파일에서 읽는 텍스트의 예를 들어 참조 <bpt id="p1">[</bpt>하는 방법: 파일에서 텍스트 읽기<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Close">
          <source>For an example of reading from and writing to a binary file, see <bpt id="p1">[</bpt>How to: Read and Write to a Newly Created Data File<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept>.</source>
          <target state="translated">읽기 및 쓰기 이진 파일의 예제를 보려면 <bpt id="p1">[</bpt>하는 방법: 읽기 및 새로 만든 데이터 파일에 쓰기<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Close">
          <source>This method overrides the <ph id="ph1">&lt;xref:System.IO.Stream.Close%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">이 메서드를 재정의 <ph id="ph1">&lt;xref:System.IO.Stream.Close%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Close">
          <source>This implementation of <ph id="ph1">`Close`</ph> calls the <ph id="ph2">&lt;xref:System.IO.StringReader.Dispose%2A&gt;</ph> method passing a <ph id="ph3">`true`</ph> value.</source>
          <target state="translated">이 구현 <ph id="ph1">`Close`</ph> 호출은 <ph id="ph2">&lt;xref:System.IO.StringReader.Dispose%2A&gt;</ph> 전달 메서드는 <ph id="ph3">`true`</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Close">
          <source>Flushing the stream will not flush its underlying encoder unless you explicitly call <ph id="ph1">`Close`</ph>.</source>
          <target state="translated">명시적으로 호출 하지 않으면 스트림을 내부 인코더가 플러시되지 것입니다 <ph id="ph1">`Close`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Close">
          <source>Setting <ph id="ph1">&lt;xref:System.IO.StreamWriter.AutoFlush%2A&gt;</ph> to <ph id="ph2">`true`</ph> means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</source>
          <target state="translated">설정 <ph id="ph1">&lt;xref:System.IO.StreamWriter.AutoFlush%2A&gt;</ph> 를 <ph id="ph2">`true`</ph> 스트림 버퍼에서 데이터를 플러시할 수는 있지만 인코더 상태 플러시되지 것입니다 있다는 것을 의미 합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Close">
          <source>This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</source>
          <target state="translated">따라서 올바르게 문자의 다음 블록을 인코딩할 수 있도록 (부분 문자)의 상태를 유지 하기 위해 인코더 수 있습니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Close">
          <source>This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</source>
          <target state="translated">이 시나리오는 u t f 8와 UTF7 인코더는 인접 한 문자를 받은 후 특정 문자를 인코딩할만 수 있는 위치에 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Close">
          <source>Following a call to <ph id="ph1">`Close`</ph>, other methods might throw an exception.</source>
          <target state="translated">호출한 다음 <ph id="ph1">`Close`</ph>, 다른 메서드가 예외를 throw 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>로 설정하고, 관리되지 않는 리소스만 해제하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>로 설정합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.IO.StringReader" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.StringReader" /&gt;</ph>에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.IO.StringReader&gt;</ph> references.</source>
          <target state="translated"><ph id="ph1">`disposing`</ph> 매개 변수가 <ph id="ph2">`true`</ph>인 경우 이 메서드는 이 <ph id="ph3">&lt;xref:System.IO.StringReader&gt;</ph>에서 참조하는 관리 개체가 보유하고 있는 리소스를 모두 해제합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose`</ph> method of each referenced object.</source>
          <target state="translated">이 메서드는 참조되는 각 개체의 <ph id="ph1">`Dispose`</ph> 메서드를 호출합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see cref="M:System.IO.StringReader.Dispose(System.Boolean)" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IO.StringReader.Dispose(System.Boolean)" /&gt;</ph>는 다른 개체에서 여러 번 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.IO.StringReader.Dispose(System.Boolean)" /&gt;</ph>, be careful not to reference objects that have been previously disposed in an earlier call to <ph id="ph2">&lt;see cref="M:System.IO.StringReader.Dispose(System.Boolean)" /&gt;</ph>.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.IO.StringReader.Dispose(System.Boolean)" /&gt;</ph>한 이전 호출에서 삭제 된 개체를 참조 하지 않도록 주의 하십시오 <ph id="ph2">&lt;see cref="M:System.IO.StringReader.Dispose(System.Boolean)" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.Peek">
          <source>Returns the next available character but does not consume it.</source>
          <target state="translated">사용할 수 있는 다음 문자를 반환하지만 사용하지는 않습니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.Peek">
          <source>An integer representing the next character to be read, or -1 if no more characters are available or the stream does not support seeking.</source>
          <target state="translated">읽을 다음 문자를 나타내는 정수이거나, 사용할 수 있는 문자가 더 이상 없거나 스트림에서 검색을 지원하지 않을 경우 -1입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Peek">
          <source>The <ph id="ph1">&lt;xref:System.IO.StringReader.Peek%2A&gt;</ph> method returns an integer value in order to determine whether the end of the file, or another error has occurred.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.StringReader.Peek%2A&gt;</ph> 메서드 끝은 파일 또는 다른 오류가 발생 했는지 확인 하기 위해 정수 값을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Peek">
          <source>This allows a user to first check if the returned value is -1 before casting it to a <ph id="ph1">&lt;xref:System.Char&gt;</ph> type.</source>
          <target state="translated">이렇게 하면 반환 된 값은-1로 캐스팅 하기 전에 먼저 확인 하려면 사용자는 <ph id="ph1">&lt;xref:System.Char&gt;</ph> 유형입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Peek">
          <source>This method overrides the <ph id="ph1">&lt;xref:System.IO.TextReader.Peek%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">이 메서드를 재정의 <ph id="ph1">&lt;xref:System.IO.TextReader.Peek%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Peek">
          <source>The current position of the <ph id="ph1">`StringReader`</ph> is not changed by this operation.</source>
          <target state="translated">현재 위치는 <ph id="ph1">`StringReader`</ph> 이 작업에 의해 변경 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Peek">
          <source>The following table lists examples of other typical or related I/O tasks.</source>
          <target state="translated">다음 표에서 일반적인 또는 관련 된 I/O 작업의 예제를 나열합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Peek">
          <source>To do this...</source>
          <target state="translated">수행 작업</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Peek">
          <source>See the example in this topic...</source>
          <target state="translated">참조 항목</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Peek">
          <source>Create a text file.</source>
          <target state="translated">텍스트 파일을 만듭니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Peek">
          <source><bpt id="p1">[</bpt>How to: Write Text to a File<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 파일에 텍스트 쓰기<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Peek">
          <source>Write to a text file.</source>
          <target state="translated">텍스트 파일에 작성 합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Peek">
          <source><bpt id="p1">[</bpt>How to: Write Text to a File<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 파일에 텍스트 쓰기<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Peek">
          <source>Read from a text file.</source>
          <target state="translated">텍스트 파일에서 읽습니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Peek">
          <source><bpt id="p1">[</bpt>How to: Read Text from a File<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 파일의 텍스트 읽기<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Peek">
          <source>Get the size of a file.</source>
          <target state="translated">파일의 크기를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.Peek">
          <source>The current reader is closed.</source>
          <target state="translated">현재 판독기가 닫힌 경우</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="T:System.IO.StringReader">
          <source>Reads the next character or next set of characters from the input string.</source>
          <target state="translated">입력 문자열에서 다음 문자 또는 다음 문자 집합을 읽습니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.Read">
          <source>Reads the next character from the input string and advances the character position by one character.</source>
          <target state="translated">입력 문자열에서 다음 문자를 읽고 문자 위치를 한 문자씩 앞으로 이동합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.Read">
          <source>The next character from the underlying string, or -1 if no more characters are available.</source>
          <target state="translated">내부 문자열의 다음 문자를 반환하거나, 사용할 수 있는 문자가 더 이상 없으면 -1을 반환합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read">
          <source>This method overrides the <ph id="ph1">&lt;xref:System.IO.TextReader.Read%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">이 메서드를 재정의 <ph id="ph1">&lt;xref:System.IO.TextReader.Read%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read">
          <source>The following table lists examples of other typical or related I/O tasks.</source>
          <target state="translated">다음 표에서 일반적인 또는 관련 된 I/O 작업의 예제를 나열합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read">
          <source>To do this...</source>
          <target state="translated">수행 작업</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read">
          <source>See the example in this topic...</source>
          <target state="translated">참조 항목</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read">
          <source>Create a text file.</source>
          <target state="translated">텍스트 파일을 만듭니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read">
          <source><bpt id="p1">[</bpt>How to: Write Text to a File<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 파일에 텍스트 쓰기<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read">
          <source>Write to a text file.</source>
          <target state="translated">텍스트 파일에 작성 합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read">
          <source><bpt id="p1">[</bpt>How to: Write Text to a File<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 파일에 텍스트 쓰기<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read">
          <source>Read from a text file.</source>
          <target state="translated">텍스트 파일에서 읽습니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read">
          <source><bpt id="p1">[</bpt>How to: Read Text from a File<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 파일의 텍스트 읽기<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read">
          <source>Append text to a file.</source>
          <target state="translated">파일에 텍스트를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read">
          <source><bpt id="p1">[</bpt>How to: Open and Append to a Log File<ept id="p1">](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 로그 파일 열기 및 추가<ept id="p1">](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)</ept></target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read">
          <source>Get the size of a file.</source>
          <target state="translated">파일의 크기를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read">
          <source>Get the attributes of a file.</source>
          <target state="translated">파일의 특성을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read">
          <source>Set the attributes of a file.</source>
          <target state="translated">파일의 특성을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read">
          <source>Determine if a file exists.</source>
          <target state="translated">파일이 있는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read">
          <source>Read from a binary file.</source>
          <target state="translated">이진 파일에서 읽습니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read">
          <source><bpt id="p1">[</bpt>How to: Read and Write to a Newly Created Data File<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 새로 만든 데이터 파일 읽기 및 쓰기<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read">
          <source>Write to a binary file.</source>
          <target state="translated">이진 파일에 씁니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read">
          <source><bpt id="p1">[</bpt>How to: Read and Write to a Newly Created Data File<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 새로 만든 데이터 파일 읽기 및 쓰기<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.IO.StringReader&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.IO.StringReader&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.Read">
          <source>The current reader is closed.</source>
          <target state="translated">현재 판독기가 닫힌 경우</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>When this method returns, contains the specified character array with the values between <bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept> and (<bpt id="p2">&lt;c&gt;</bpt>index<ept id="p2">&lt;/c&gt;</ept><ph id="ph1"> + </ph><bpt id="p3">&lt;c&gt;</bpt>count<ept id="p3">&lt;/c&gt;</ept> - 1) replaced by the characters read from the current source.</source>
          <target state="translated">이 메서드는 지정된 문자 배열의 값이 <bpt id="p1">&lt;c&gt;</bpt>인덱스<ept id="p1">&lt;/c&gt;</ept>와 (<bpt id="p2">&lt;c&gt;</bpt>인덱스<ept id="p2">&lt;/c&gt;</ept><ph id="ph1"> + </ph><bpt id="p3">&lt;c&gt;</bpt>카운트<ept id="p3">&lt;/c&gt;</ept> - 1) 사이에서 현재 소스로부터 읽어온 문자로 교체된 상태로 반환됩니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>The starting index in the buffer.</source>
          <target state="translated">버퍼의 시작 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters to read.</source>
          <target state="translated">읽을 문자 수입니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>Reads a block of characters from the input string and advances the character position by <ph id="ph1">&lt;paramref name="count" /&gt;</ph>.</source>
          <target state="translated">입력 문자열에서 문자 블록을 읽은 다음 문자 위치를 <ph id="ph1">&lt;paramref name="count" /&gt;</ph>씩 앞으로 이동합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>The total number of characters read into the buffer.</source>
          <target state="translated">버퍼로 읽어온 총 문자 수입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>This can be less than the number of characters requested if that many characters are not currently available, or zero if the end of the underlying string has been reached.</source>
          <target state="translated">이 문자 수는 현재 문자가 충분하지 않은 경우 요청된 문자 수보다 작을 수 있으며 내부 문자열의 끝에 도달하면 0이 됩니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>This method overrides <ph id="ph1">&lt;xref:System.IO.TextReader.Read%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이 메서드는 <ph id="ph1">&lt;xref:System.IO.TextReader.Read%2A?displayProperty=nameWithType&gt;</ph>를 재정의합니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>The method will read up to <ph id="ph1">`count`</ph> characters from the <ph id="ph2">&lt;xref:System.IO.StringReader&gt;</ph> into the <ph id="ph3">`buffer`</ph> character array starting at position <ph id="ph4">`index`</ph>.</source>
          <target state="translated">메서드는 최대 읽기 <ph id="ph1">`count`</ph> 에서 문자는 <ph id="ph2">&lt;xref:System.IO.StringReader&gt;</ph> 에 <ph id="ph3">`buffer`</ph> 위치에서 시작 하는 문자 배열 <ph id="ph4">`index`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>Returns the actual number of characters read, or zero if the end of the string has been reached and no characters are read.</source>
          <target state="translated">실제 문자 수 읽거나 문자열의 끝에 도달 했으며 없는 문자를 읽은 경우 0을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>The following table lists examples of other typical or related I/O tasks.</source>
          <target state="translated">다음 표에서 일반적인 또는 관련 된 I/O 작업의 예제를 나열합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>To do this...</source>
          <target state="translated">수행 작업</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>See the example in this topic...</source>
          <target state="translated">참조 항목</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>Create a text file.</source>
          <target state="translated">텍스트 파일을 만듭니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
          <source><bpt id="p1">[</bpt>How to: Write Text to a File<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 파일에 텍스트 쓰기<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>Write to a text file.</source>
          <target state="translated">텍스트 파일에 작성 합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
          <source><bpt id="p1">[</bpt>How to: Write Text to a File<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 파일에 텍스트 쓰기<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>Read from a text file.</source>
          <target state="translated">텍스트 파일에서 읽습니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
          <source><bpt id="p1">[</bpt>How to: Read Text from a File<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 파일의 텍스트 읽기<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>Append text to a file.</source>
          <target state="translated">파일에 텍스트를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
          <source><bpt id="p1">[</bpt>How to: Open and Append to a Log File<ept id="p1">](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 로그 파일 열기 및 추가<ept id="p1">](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)</ept></target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>Get the size of a file.</source>
          <target state="translated">파일의 크기를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>Get the attributes of a file.</source>
          <target state="translated">파일의 특성을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>Set the attributes of a file.</source>
          <target state="translated">파일의 특성을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>Determine if a file exists.</source>
          <target state="translated">파일이 있는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>Read from a binary file.</source>
          <target state="translated">이진 파일에서 읽습니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
          <source><bpt id="p1">[</bpt>How to: Read and Write to a Newly Created Data File<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 새로 만든 데이터 파일 읽기 및 쓰기<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>Write to a binary file.</source>
          <target state="translated">이진 파일에 씁니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
          <source><bpt id="p1">[</bpt>How to: Read and Write to a Newly Created Data File<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 새로 만든 데이터 파일 읽기 및 쓰기<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>The buffer length minus <ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</source>
          <target state="translated">버퍼 길이에서 <ph id="ph1">&lt;paramref name="index" /&gt;</ph>를 빼면 <ph id="ph2">&lt;paramref name="count" /&gt;</ph>보다 작은 경우</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="count" /&gt;</ph>가 음수입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
          <source>The current reader is closed.</source>
          <target state="translated">현재 판독기가 닫힌 경우</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadAsync(System.Char[],System.Int32,System.Int32)">
          <source>When this method returns, contains the specified character array with the values between <bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept> and (<bpt id="p2">&lt;c&gt;</bpt>index<ept id="p2">&lt;/c&gt;</ept><ph id="ph1"> + </ph><bpt id="p3">&lt;c&gt;</bpt>count<ept id="p3">&lt;/c&gt;</ept> - 1) replaced by the characters read from the current source.</source>
          <target state="translated">이 메서드는 지정된 문자 배열의 값이 <bpt id="p1">&lt;c&gt;</bpt>인덱스<ept id="p1">&lt;/c&gt;</ept>와 (<bpt id="p2">&lt;c&gt;</bpt>인덱스<ept id="p2">&lt;/c&gt;</ept><ph id="ph1"> + </ph><bpt id="p3">&lt;c&gt;</bpt>카운트<ept id="p3">&lt;/c&gt;</ept> - 1) 사이에서 현재 소스로부터 읽어온 문자로 교체된 상태로 반환됩니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadAsync(System.Char[],System.Int32,System.Int32)">
          <source>The position in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> at which to begin writing.</source>
          <target state="translated">쓰기를 시작할 <bpt id="p1">&lt;c&gt;</bpt>버퍼<ept id="p1">&lt;/c&gt;</ept>의 위치입니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadAsync(System.Char[],System.Int32,System.Int32)">
          <source>The maximum number of characters to read.</source>
          <target state="translated">읽을 최대 문자 수입니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadAsync(System.Char[],System.Int32,System.Int32)">
          <source>If the end of the string is reached before the specified number of characters is written into the buffer, the method returns.</source>
          <target state="translated">지정한 문자 수를 버퍼에 기록하기 전에 문자열의 끝에 도달하면 메서드가 반환됩니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadAsync(System.Char[],System.Int32,System.Int32)">
          <source>Reads a specified maximum number of characters from the current string asynchronously and writes the data to a buffer, beginning at the specified index.</source>
          <target state="translated">현재 문자열에서 지정된 최대 수의 문자를 비동기적으로 읽어 이 데이터를 지정된 인덱스에서 시작되는 버퍼에 씁니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadAsync(System.Char[],System.Int32,System.Int32)">
          <source>A task that represents the asynchronous read operation.</source>
          <target state="translated">비동기 읽기 작업을 나타내는 작업입니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadAsync(System.Char[],System.Int32,System.Int32)">
          <source>The value of the <ph id="ph1">&lt;paramref name="TResult" /&gt;</ph> parameter contains the total number of bytes read into the buffer.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="TResult" /&gt;</ph> 매개 변수의 값은 버퍼 안으로 읽어들인 총 바이트 수를 포함합니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadAsync(System.Char[],System.Int32,System.Int32)">
          <source>The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the string has been reached.</source>
          <target state="translated">현재 사용할 수 있는 바이트 수가 요청된 수보다 작을 경우 결과 값이 요청된 바이트 수보다 작을 수 있으며 문자열의 끝에 도달한 경우에는 0이 될 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadAsync(System.Char[],System.Int32,System.Int32)">
          <source>The task completes after either the number of characters specified by the <ph id="ph1">`count`</ph> parameter are read or the end of the string is reached.</source>
          <target state="translated">작업이 완료 중에서 지정 된 문자 수는 <ph id="ph1">`count`</ph> 매개 변수를 읽거나 문자열의 끝에 도달 했습니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadAsync(System.Char[],System.Int32,System.Int32)">
          <source>The following example shows how to read the first 23 characters of a string asynchronously.</source>
          <target state="translated">다음 예제에서는 문자열의 처음 23 문자를 비동기적으로 읽는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadAsync(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadAsync(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="count" /&gt;</ph>가 음수입니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadAsync(System.Char[],System.Int32,System.Int32)">
          <source>The sum of <ph id="ph1">&lt;paramref name="index" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is larger than the buffer length.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 및 <ph id="ph2">&lt;paramref name="count" /&gt;</ph>의 합계가 버퍼 길이보다 큽니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadAsync(System.Char[],System.Int32,System.Int32)">
          <source>The string reader has been disposed.</source>
          <target state="translated">문자열 판독기가 삭제된 경우</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadAsync(System.Char[],System.Int32,System.Int32)">
          <source>The reader is currently in use by a previous read operation.</source>
          <target state="translated">판독기가 현재 이전 읽기 작업에서 사용 중입니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)">
          <source>When this method returns, contains the specified character array with the values between <bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept> and (<bpt id="p2">&lt;c&gt;</bpt>index<ept id="p2">&lt;/c&gt;</ept><ph id="ph1"> + </ph><bpt id="p3">&lt;c&gt;</bpt>count<ept id="p3">&lt;/c&gt;</ept> - 1) replaced by the characters read from the current source.</source>
          <target state="translated">이 메서드는 지정된 문자 배열의 값이 <bpt id="p1">&lt;c&gt;</bpt>인덱스<ept id="p1">&lt;/c&gt;</ept>와 (<bpt id="p2">&lt;c&gt;</bpt>인덱스<ept id="p2">&lt;/c&gt;</ept><ph id="ph1"> + </ph><bpt id="p3">&lt;c&gt;</bpt>카운트<ept id="p3">&lt;/c&gt;</ept> - 1) 사이에서 현재 소스로부터 읽어온 문자로 교체된 상태로 반환됩니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)">
          <source>The position in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> at which to begin writing.</source>
          <target state="translated">쓰기를 시작할 <bpt id="p1">&lt;c&gt;</bpt>버퍼<ept id="p1">&lt;/c&gt;</ept>의 위치입니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)">
          <source>The maximum number of characters to read.</source>
          <target state="translated">읽을 최대 문자 수입니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)">
          <source>If the end of the string is reached before the specified number of characters is written into the buffer, the method returns.</source>
          <target state="translated">지정한 문자 수를 버퍼에 기록하기 전에 문자열의 끝에 도달하면 메서드가 반환됩니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)">
          <source>Reads a specified maximum number of characters from the current string asynchronously and writes the data to a buffer, beginning at the specified index.</source>
          <target state="translated">현재 문자열에서 지정된 최대 수의 문자를 비동기적으로 읽어 이 데이터를 지정된 인덱스에서 시작되는 버퍼에 씁니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)">
          <source>A task that represents the asynchronous read operation.</source>
          <target state="translated">비동기 읽기 작업을 나타내는 작업입니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)">
          <source>The value of the <ph id="ph1">&lt;paramref name="TResult" /&gt;</ph> parameter contains the total number of bytes read into the buffer.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="TResult" /&gt;</ph> 매개 변수의 값은 버퍼 안으로 읽어들인 총 바이트 수를 포함합니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)">
          <source>The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the string has been reached.</source>
          <target state="translated">현재 사용할 수 있는 바이트 수가 요청된 수보다 작을 경우 결과 값이 요청된 바이트 수보다 작을 수 있으며 문자열의 끝에 도달한 경우에는 0이 될 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)">
          <source>The task does not complete until either the number of characters specified by the <ph id="ph1">`count`</ph> parameter are read, or the end of the string has been reached.</source>
          <target state="translated">작업이 완료 되지 않을 때까지 변수에 지정 된 문자 수는 <ph id="ph1">`count`</ph> 매개 변수를 읽거나 문자열의 끝에 도달 했습니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="count" /&gt;</ph>가 음수입니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)">
          <source>The sum of <ph id="ph1">&lt;paramref name="index" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is larger than the buffer length.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 및 <ph id="ph2">&lt;paramref name="count" /&gt;</ph>의 합계가 버퍼 길이보다 큽니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)">
          <source>The string reader has been disposed.</source>
          <target state="translated">문자열 판독기가 삭제된 경우</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)">
          <source>The reader is currently in use by a previous read operation.</source>
          <target state="translated">판독기가 현재 이전 읽기 작업에서 사용 중입니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadLine">
          <source>Reads a line of characters from the current string and returns the data as a string.</source>
          <target state="translated">현재 문자열에서 한 줄의 문자를 읽고 데이터를 문자열로 반환합니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadLine">
          <source>The next line from the current string, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the end of the string is reached.</source>
          <target state="translated">현재 문자열의 다음 줄 또는 문자열의 끝에 도달한 경우 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadLine">
          <source>This method overrides the <ph id="ph1">&lt;xref:System.IO.TextReader.ReadLine%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">이 메서드를 재정의 <ph id="ph1">&lt;xref:System.IO.TextReader.ReadLine%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadLine">
          <source>A line is defined as a sequence of characters followed by a line feed ("\n"), a carriage return ("\r"), or a carriage return immediately followed by a line feed ("\r\n").</source>
          <target state="translated">줄 다음에 줄 문자 시퀀스 ("\n") 피드, 캐리지 리턴 문자 ("\r") 또는 캐리지 리턴 뒤에 줄 바꿈 ("\r\n")으로 정의 됩니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadLine">
          <source>The string that is returned does not contain the terminating carriage return or line feed.</source>
          <target state="translated">반환 되는 문자열 종료 캐리지 리턴 또는 줄 바꿈 없습니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadLine">
          <source>The returned value is <ph id="ph1">`null`</ph> if the end of the string has been reached.</source>
          <target state="translated">반환 된 값이 <ph id="ph1">`null`</ph> 문자열의 끝에 도달한 경우.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadLine">
          <source>If the current method throws an <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph>, the reader's position in the underlying string is advanced by the number of characters the method was able to read, but the characters already read into the internal <ph id="ph2">&lt;xref:System.IO.StringReader.ReadLine%2A&gt;</ph> buffer are discarded.</source>
          <target state="translated">현재 메서드가 throw 하는 경우는 <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph>, 판독기의 위치는 기본 문자열에서 문자를 읽으려면 메서드에서 못한 하지만 내부에 이미 읽은 문자 수로 고급 <ph id="ph2">&lt;xref:System.IO.StringReader.ReadLine%2A&gt;</ph> 버퍼 삭제 됩니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadLine">
          <source>Because the position of the reader in the string cannot be changed, the characters already read are unrecoverable, and can be accessed only by reinitializing the <ph id="ph1">&lt;xref:System.IO.StringReader&gt;</ph>.</source>
          <target state="translated">문자열에 판독기의 위치를 변경할 수 없으므로, 이미 읽은 복구할 하 고 다시 초기화 하 여만 액세스할 수는 <ph id="ph1">&lt;xref:System.IO.StringReader&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadLine">
          <source>To avoid such a situation, use the <ph id="ph1">&lt;xref:System.IO.StringReader.Read%2A&gt;</ph> method and store the read characters in a preallocated buffer.</source>
          <target state="translated">이러한 상황을 방지 하려면 사용 하 여는 <ph id="ph1">&lt;xref:System.IO.StringReader.Read%2A&gt;</ph> 미리 할당 된 버퍼에서 문자를 읽기 메서드와 저장소입니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadLine">
          <source>The following table lists examples of other typical or related I/O tasks.</source>
          <target state="translated">다음 표에서 일반적인 또는 관련 된 I/O 작업의 예제를 나열합니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadLine">
          <source>To do this...</source>
          <target state="translated">수행 작업</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadLine">
          <source>See the example in this topic...</source>
          <target state="translated">참조 항목</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadLine">
          <source>Create a text file.</source>
          <target state="translated">텍스트 파일을 만듭니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadLine">
          <source><bpt id="p1">[</bpt>How to: Write Text to a File<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 파일에 텍스트 쓰기<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadLine">
          <source>Write to a text file.</source>
          <target state="translated">텍스트 파일에 작성 합니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadLine">
          <source><bpt id="p1">[</bpt>How to: Write Text to a File<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 파일에 텍스트 쓰기<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadLine">
          <source>Read from a text file.</source>
          <target state="translated">텍스트 파일에서 읽습니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadLine">
          <source><bpt id="p1">[</bpt>How to: Read Text from a File<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 파일의 텍스트 읽기<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadLine">
          <source>Append text to a file.</source>
          <target state="translated">파일에 텍스트를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadLine">
          <source><bpt id="p1">[</bpt>How to: Open and Append to a Log File<ept id="p1">](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 로그 파일 열기 및 추가<ept id="p1">](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)</ept></target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadLine">
          <source>Get the size of a file.</source>
          <target state="translated">파일의 크기를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadLine">
          <source>Get the attributes of a file.</source>
          <target state="translated">파일의 특성을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadLine">
          <source>Set the attributes of a file.</source>
          <target state="translated">파일의 특성을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadLine">
          <source>Determine if a file exists.</source>
          <target state="translated">파일이 있는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadLine">
          <source>Read from a binary file.</source>
          <target state="translated">이진 파일에서 읽습니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadLine">
          <source><bpt id="p1">[</bpt>How to: Read and Write to a Newly Created Data File<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 새로 만든 데이터 파일 읽기 및 쓰기<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadLine">
          <source>Write to a binary file.</source>
          <target state="translated">이진 파일에 씁니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadLine">
          <source><bpt id="p1">[</bpt>How to: Read and Write to a Newly Created Data File<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 새로 만든 데이터 파일 읽기 및 쓰기<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadLine">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.IO.StringReader&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.IO.StringReader&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadLine">
          <source>The current reader is closed.</source>
          <target state="translated">현재 판독기가 닫힌 경우</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadLine">
          <source>There is insufficient memory to allocate a buffer for the returned string.</source>
          <target state="translated">메모리가 부족하여 반환된 문자열의 버퍼를 할당할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadLineAsync">
          <source>Reads a line of characters asynchronously from the current string and returns the data as a string.</source>
          <target state="translated">현재 문자열에서 한 줄의 문자를 비동기적으로 읽고 데이터를 문자열로 반환합니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadLineAsync">
          <source>A task that represents the asynchronous read operation.</source>
          <target state="translated">비동기 읽기 작업을 나타내는 작업입니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadLineAsync">
          <source>The value of the <ph id="ph1">&lt;paramref name="TResult" /&gt;</ph> parameter contains the next line from the string reader, or is <ph id="ph2">&lt;see langword="null" /&gt;</ph> if all the characters have been read.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="TResult" /&gt;</ph> 매개 변수의 값은 문자열 판독기의 다음 줄을 포함하거나 모든 문자가 읽혀진 경우에는 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadLineAsync">
          <source>The following example shows how to read one line at a time from a string asynchronously.</source>
          <target state="translated">다음 예제에서는 문자열에서 한 번에 한 줄씩을 비동기적으로 읽는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadLineAsync">
          <source>The number of characters in the next line is larger than <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated">다음 줄의 문자 수가 <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>보다 큽니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadLineAsync">
          <source>The string reader has been disposed.</source>
          <target state="translated">문자열 판독기가 삭제된 경우</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadLineAsync">
          <source>The reader is currently in use by a previous read operation.</source>
          <target state="translated">판독기가 현재 이전 읽기 작업에서 사용 중입니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadToEnd">
          <source>Reads all characters from the current position to the end of the string and returns them as a single string.</source>
          <target state="translated">현재 위치부터 문자열 끝까지의 모든 문자를 읽어서 이를 단일 문자열로 반환합니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadToEnd">
          <source>The content from the current position to the end of the underlying string.</source>
          <target state="translated">내부 문자열의 현재 위치에서 끝까지의 내용입니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadToEnd">
          <source>This method overrides the <ph id="ph1">&lt;xref:System.IO.TextReader.ReadToEnd%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">이 메서드를 재정의 <ph id="ph1">&lt;xref:System.IO.TextReader.ReadToEnd%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadToEnd">
          <source>If the current method throws an <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph>, the reader's position in the underlying string is advanced by the number of characters the method was able to read, but the characters already read into the internal <ph id="ph2">&lt;xref:System.IO.StringReader.ReadToEnd%2A&gt;</ph> buffer are discarded.</source>
          <target state="translated">현재 메서드가 throw 하는 경우는 <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph>, 판독기의 위치는 기본 문자열에서 문자를 읽으려면 메서드에서 못한 하지만 내부에 이미 읽은 문자 수로 고급 <ph id="ph2">&lt;xref:System.IO.StringReader.ReadToEnd%2A&gt;</ph> 버퍼 삭제 됩니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadToEnd">
          <source>Because the position of the reader in the string cannot be changed, the characters already read are unrecoverable, and can be accessed only by reinitializing the <ph id="ph1">&lt;xref:System.IO.StringReader&gt;</ph>.</source>
          <target state="translated">문자열에 판독기의 위치를 변경할 수 없으므로, 이미 읽은 복구할 하 고 다시 초기화 하 여만 액세스할 수는 <ph id="ph1">&lt;xref:System.IO.StringReader&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadToEnd">
          <source>To avoid such a situation, use the <ph id="ph1">&lt;xref:System.IO.StringReader.Read%2A&gt;</ph> method and store the read characters in a preallocated buffer.</source>
          <target state="translated">이러한 상황을 방지 하려면 사용 하 여는 <ph id="ph1">&lt;xref:System.IO.StringReader.Read%2A&gt;</ph> 미리 할당 된 버퍼에서 문자를 읽기 메서드와 저장소입니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadToEnd">
          <source>The following table lists examples of other typical or related I/O tasks.</source>
          <target state="translated">다음 표에서 일반적인 또는 관련 된 I/O 작업의 예제를 나열합니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadToEnd">
          <source>To do this...</source>
          <target state="translated">수행 작업</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadToEnd">
          <source>See the example in this topic...</source>
          <target state="translated">참조 항목</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadToEnd">
          <source>Create a text file.</source>
          <target state="translated">텍스트 파일을 만듭니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadToEnd">
          <source><bpt id="p1">[</bpt>How to: Write Text to a File<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 파일에 텍스트 쓰기<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadToEnd">
          <source>Write to a text file.</source>
          <target state="translated">텍스트 파일에 작성 합니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadToEnd">
          <source><bpt id="p1">[</bpt>How to: Write Text to a File<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 파일에 텍스트 쓰기<ept id="p1">](~/docs/standard/io/how-to-write-text-to-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadToEnd">
          <source>Read from a text file.</source>
          <target state="translated">텍스트 파일에서 읽습니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadToEnd">
          <source><bpt id="p1">[</bpt>How to: Read Text from a File<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 파일의 텍스트 읽기<ept id="p1">](~/docs/standard/io/how-to-read-text-from-a-file.md)</ept></target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadToEnd">
          <source>Append text to a file.</source>
          <target state="translated">파일에 텍스트를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadToEnd">
          <source><bpt id="p1">[</bpt>How to: Open and Append to a Log File<ept id="p1">](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 로그 파일 열기 및 추가<ept id="p1">](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)</ept></target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadToEnd">
          <source>Get the size of a file.</source>
          <target state="translated">파일의 크기를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadToEnd">
          <source>Get the attributes of a file.</source>
          <target state="translated">파일의 특성을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadToEnd">
          <source>Set the attributes of a file.</source>
          <target state="translated">파일의 특성을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadToEnd">
          <source>Determine if a file exists.</source>
          <target state="translated">파일이 있는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadToEnd">
          <source>Read from a binary file.</source>
          <target state="translated">이진 파일에서 읽습니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadToEnd">
          <source><bpt id="p1">[</bpt>How to: Read and Write to a Newly Created Data File<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 새로 만든 데이터 파일 읽기 및 쓰기<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadToEnd">
          <source>Write to a binary file.</source>
          <target state="translated">이진 파일에 씁니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadToEnd">
          <source><bpt id="p1">[</bpt>How to: Read and Write to a Newly Created Data File<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 새로 만든 데이터 파일 읽기 및 쓰기<ept id="p1">](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)</ept></target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadToEnd">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadToEnd">
          <source>There is insufficient memory to allocate a buffer for the returned string.</source>
          <target state="translated">메모리가 부족하여 반환된 문자열의 버퍼를 할당할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadToEnd">
          <source>The current reader is closed.</source>
          <target state="translated">현재 판독기가 닫힌 경우</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadToEndAsync">
          <source>Reads all characters from the current position to the end of the string asynchronously and returns them as a single string.</source>
          <target state="translated">현재 위치부터 문자열 끝까지의 모든 문자를 비동기적으로 읽어서 이를 단일 문자열로 반환합니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadToEndAsync">
          <source>A task that represents the asynchronous read operation.</source>
          <target state="translated">비동기 읽기 작업을 나타내는 작업입니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadToEndAsync">
          <source>The value of the <ph id="ph1">&lt;paramref name="TResult" /&gt;</ph> parameter contains a string with the characters from the current position to the end of the string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="TResult" /&gt;</ph> 매개 변수의 값은 현재 위치에서 문자열 끝까지의 문자로 이루어진 문자열을 포함합니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.StringReader.ReadToEndAsync">
          <source>The following example shows how to read an entire string asynchronously.</source>
          <target state="translated">다음 예에서는 전체 문자열을 비동기적으로 읽는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadToEndAsync">
          <source>The number of characters is larger than <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated">문자 수가 <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>보다 큽니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadToEndAsync">
          <source>The string reader has been disposed.</source>
          <target state="translated">문자열 판독기가 삭제된 경우</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.IO.StringReader.ReadToEndAsync">
          <source>The reader is currently in use by a previous read operation.</source>
          <target state="translated">판독기가 현재 이전 읽기 작업에서 사용 중입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>