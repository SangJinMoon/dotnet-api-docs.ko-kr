<Type Name="FileMode" FullName="System.IO.FileMode">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c4556c5a1a0e8172ca71d5b88b1b7a5a566b203e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36484865" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum FileMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed FileMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.IO.FileMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum FileMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class FileMode" />
  <TypeSignature Language="F#" Value="type FileMode = " />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem.Primitives</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="347b5-101">운영 체제에서 파일을 여는 방법을 지정합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="347b5-101">Specifies how the operating system should open a file.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="347b5-102">파일을 파일에 텍스트 쓰기의 예제를 보려면 [하는 방법: 파일에 텍스트 쓰기](~/docs/standard/io/how-to-write-text-to-a-file.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="347b5-102">For an example of creating a file and writing text to a file, see [How to: Write Text to a File](~/docs/standard/io/how-to-write-text-to-a-file.md).</span></span> <span data-ttu-id="347b5-103">파일에서 읽는 텍스트의 예를 들어 참조 [하는 방법: 파일에서 텍스트 읽기](~/docs/standard/io/how-to-read-text-from-a-file.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="347b5-103">For an example of reading text from a file, see [How to: Read Text from a File](~/docs/standard/io/how-to-read-text-from-a-file.md).</span></span> <span data-ttu-id="347b5-104">읽기 및 쓰기 이진 파일의 예제를 보려면 [하는 방법: 읽기 및 새로 만든 데이터 파일에 쓰기](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="347b5-104">For an example of reading from and writing to a binary file, see [How to: Read and Write to a Newly Created Data File](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md).</span></span>  
  
 <span data-ttu-id="347b5-105">A `FileMode` 대부분에 대 한 생성자의 매개 변수를 지정 하는 <xref:System.IO.FileStream>, <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>, 및는 `Open` 의 메서드 <xref:System.IO.File> 및 <xref:System.IO.FileInfo> 파일을 열 하는 방법을 제어할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="347b5-105">A `FileMode` parameter is specified in many of the constructors for <xref:System.IO.FileStream>, <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>, and in the `Open` methods of <xref:System.IO.File> and <xref:System.IO.FileInfo> to control how a file is opened.</span></span>  
  
 <span data-ttu-id="347b5-106">`FileMode` 매개 변수 컨트롤을 만든 파일을 덮어쓰면 열려 있는지를 조합 합니다.</span><span class="sxs-lookup"><span data-stu-id="347b5-106">`FileMode` parameters control whether a file is overwritten, created, opened, or some combination thereof.</span></span> <span data-ttu-id="347b5-107">사용 하 여 `Open` 기존 파일을 엽니다.</span><span class="sxs-lookup"><span data-stu-id="347b5-107">Use `Open` to open an existing file.</span></span> <span data-ttu-id="347b5-108">파일에 추가 하려면 사용 `Append`합니다.</span><span class="sxs-lookup"><span data-stu-id="347b5-108">To append to a file, use `Append`.</span></span> <span data-ttu-id="347b5-109">를 자르거나 파일이 하거나 존재 하지 않는 경우 파일을 만들 `Create`합니다.</span><span class="sxs-lookup"><span data-stu-id="347b5-109">To truncate a file or create a file if it doesn't exist, use `Create`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="347b5-110">다음 `FileStream` 생성자는 기존 파일을 엽니다 (`FileMode.Open`).</span><span class="sxs-lookup"><span data-stu-id="347b5-110">The following `FileStream` constructor opens an existing file (`FileMode.Open`).</span></span>  
  
 [!code-cpp[Classic FileAccess Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileAccess Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileAccess Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileAccess Example/CS/source.cs#1)]
 [!code-vb[Classic FileAccess Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileAccess Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.IO.File.Open(System.String,System.IO.FileMode)" />
    <altmember cref="M:System.IO.FileInfo.Open(System.IO.FileMode)" />
    <altmember cref="T:System.IO.FileStream" />
    <altmember cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" />
  </Docs>
  <Members>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="Append" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.IO.FileMode Append = int32(6)" />
      <MemberSignature Language="DocId" Value="F:System.IO.FileMode.Append" />
      <MemberSignature Language="VB.NET" Value="Append" />
      <MemberSignature Language="C++ CLI" Value="Append" />
      <MemberSignature Language="F#" Value="Append = 6" Usage="System.IO.FileMode.Append" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Primitives</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileMode</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="347b5-111">해당 파일이 있을 경우 파일을 열고 파일의 끝까지 검색하거나 새 파일을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="347b5-111">Opens the file if it exists and seeks to the end of the file, or creates a new file.</span>
          </span>
          <span data-ttu-id="347b5-112">
            <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" /> 권한이 필요합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="347b5-112">This requires <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" /> permission.</span>
          </span>
          <span data-ttu-id="347b5-113">
            <see langword="FileMode.Append" />는 <see langword="FileAccess.Write" />와 함께만 사용할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="347b5-113">
              <see langword="FileMode.Append" /> can be used only in conjunction with <see langword="FileAccess.Write" />.</span>
          </span>
          <span data-ttu-id="347b5-114">파일이 끝나기 이전 위치까지 검색하려고 하면 <see cref="T:System.IO.IOException" /> 예외를 throw하고 읽기 시도가 실패하면 <see cref="T:System.NotSupportedException" /> 예외를 throw합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="347b5-114">Trying to seek to a position before the end of the file throws an <see cref="T:System.IO.IOException" /> exception, and any attempt to read fails and throws a <see cref="T:System.NotSupportedException" /> exception.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="Create" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.IO.FileMode Create = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.IO.FileMode.Create" />
      <MemberSignature Language="VB.NET" Value="Create" />
      <MemberSignature Language="C++ CLI" Value="Create" />
      <MemberSignature Language="F#" Value="Create = 2" Usage="System.IO.FileMode.Create" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Primitives</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="347b5-115">운영 체제에서 새 파일을 만들도록 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="347b5-115">Specifies that the operating system should create a new file.</span>
          </span>
          <span data-ttu-id="347b5-116">파일이 이미 있으면 해당 파일을 덮어씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="347b5-116">If the file already exists, it will be overwritten.</span>
          </span>
          <span data-ttu-id="347b5-117">
            <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /> 권한이 필요합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="347b5-117">This requires <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /> permission.</span>
          </span>
          <span data-ttu-id="347b5-118">
            <see langword="FileMode.Create" />는 파일이 없으면 <see cref="F:System.IO.FileMode.CreateNew" />를 사용하고, 파일이 있으면 <see cref="F:System.IO.FileMode.Truncate" />를 사용하도록 요청하는 것과 마찬가지입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="347b5-118">
              <see langword="FileMode.Create" /> is equivalent to requesting that if the file does not exist, use <see cref="F:System.IO.FileMode.CreateNew" />; otherwise, use <see cref="F:System.IO.FileMode.Truncate" />.</span>
          </span>
          <span data-ttu-id="347b5-119">파일이 이미 있지만 숨김 파일이면 <see cref="T:System.UnauthorizedAccessException" /> 예외가 throw됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="347b5-119">If the file already exists but is a hidden file, an <see cref="T:System.UnauthorizedAccessException" /> exception is thrown.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="CreateNew">
      <MemberSignature Language="C#" Value="CreateNew" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.IO.FileMode CreateNew = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.IO.FileMode.CreateNew" />
      <MemberSignature Language="VB.NET" Value="CreateNew" />
      <MemberSignature Language="C++ CLI" Value="CreateNew" />
      <MemberSignature Language="F#" Value="CreateNew = 1" Usage="System.IO.FileMode.CreateNew" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Primitives</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="347b5-120">운영 체제에서 새 파일을 만들도록 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="347b5-120">Specifies that the operating system should create a new file.</span>
          </span>
          <span data-ttu-id="347b5-121">
            <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /> 권한이 필요합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="347b5-121">This requires <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /> permission.</span>
          </span>
          <span data-ttu-id="347b5-122">파일이 이미 있으면 <see cref="T:System.IO.IOException" /> 예외가 throw됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="347b5-122">If the file already exists, an <see cref="T:System.IO.IOException" /> exception is thrown.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="Open" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.IO.FileMode Open = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.IO.FileMode.Open" />
      <MemberSignature Language="VB.NET" Value="Open" />
      <MemberSignature Language="C++ CLI" Value="Open" />
      <MemberSignature Language="F#" Value="Open = 3" Usage="System.IO.FileMode.Open" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Primitives</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileMode</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="347b5-123">운영 체제에서 기존 파일을 열도록 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="347b5-123">Specifies that the operating system should open an existing file.</span>
          </span>
          <span data-ttu-id="347b5-124">파일을 열 수 있는지 여부는 <see cref="T:System.IO.FileAccess" /> 열거형에서 지정된 값에 따라 달라집니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="347b5-124">The ability to open the file is dependent on the value specified by the <see cref="T:System.IO.FileAccess" /> enumeration.</span>
          </span>
          <span data-ttu-id="347b5-125">파일이 없으면 <see cref="T:System.IO.FileNotFoundException" /> 예외가 throw됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="347b5-125">A <see cref="T:System.IO.FileNotFoundException" /> exception is thrown if the file does not exist.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="OpenOrCreate">
      <MemberSignature Language="C#" Value="OpenOrCreate" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.IO.FileMode OpenOrCreate = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.IO.FileMode.OpenOrCreate" />
      <MemberSignature Language="VB.NET" Value="OpenOrCreate" />
      <MemberSignature Language="C++ CLI" Value="OpenOrCreate" />
      <MemberSignature Language="F#" Value="OpenOrCreate = 4" Usage="System.IO.FileMode.OpenOrCreate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Primitives</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileMode</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="347b5-126">파일이 있으면 운영 체제에서 파일을 열고 그렇지 않으면 새 파일을 만들도록 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="347b5-126">Specifies that the operating system should open a file if it exists; otherwise, a new file should be created.</span>
          </span>
          <span data-ttu-id="347b5-127">
            <see langword="FileAccess.Read" />를 사용하여 파일을 여는 경우 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /> 권한이 필요합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="347b5-127">If the file is opened with <see langword="FileAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /> permission is required.</span>
          </span>
          <span data-ttu-id="347b5-128">파일 액세스가 <see langword="FileAccess.Write" />이면 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /> 권한이 필요합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="347b5-128">If the file access is <see langword="FileAccess.Write" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /> permission is required.</span>
          </span>
          <span data-ttu-id="347b5-129">
            <see langword="FileAccess.ReadWrite" />를 사용하여 파일을 여는 경우 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />와 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /> 권한이 모두 필요합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="347b5-129">If the file is opened with <see langword="FileAccess.ReadWrite" />, both <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /> permissions are required.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Truncate">
      <MemberSignature Language="C#" Value="Truncate" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.IO.FileMode Truncate = int32(5)" />
      <MemberSignature Language="DocId" Value="F:System.IO.FileMode.Truncate" />
      <MemberSignature Language="VB.NET" Value="Truncate" />
      <MemberSignature Language="C++ CLI" Value="Truncate" />
      <MemberSignature Language="F#" Value="Truncate = 5" Usage="System.IO.FileMode.Truncate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Primitives</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileMode</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="347b5-130">운영 체제에서 기존 파일을 열도록 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="347b5-130">Specifies that the operating system should open an existing file.</span>
          </span>
          <span data-ttu-id="347b5-131">파일을 열면 크기가 0바이트가 되도록 잘라야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="347b5-131">When the file is opened, it should be truncated so that its size is zero bytes.</span>
          </span>
          <span data-ttu-id="347b5-132">
            <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /> 권한이 필요합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="347b5-132">This requires <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /> permission.</span>
          </span>
          <span data-ttu-id="347b5-133">
            <see langword="FileMode.Truncate" />로 연 파일에서 읽으려고 하면 <see cref="T:System.ArgumentException" /> 예외가 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="347b5-133">Attempts to read from a file opened with <see langword="FileMode.Truncate" /> cause an <see cref="T:System.ArgumentException" /> exception.</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>