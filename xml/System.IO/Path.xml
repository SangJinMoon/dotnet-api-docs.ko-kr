<Type Name="Path" FullName="System.IO.Path">
  <TypeSignature Language="C#" Value="public static class Path" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed Path extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Path" />
  <TypeSignature Language="VB.NET" Value="Public Class Path" />
  <TypeSignature Language="C++ CLI" Value="public ref class Path abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="20a51-101">파일이나 디렉터리 경로 정보를 포함하는 <see cref="T:System.String" /> 인스턴스에 대한 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-101">Performs operations on <see cref="T:System.String" /> instances that contain file or directory path information.</span></span> <span data-ttu-id="20a51-102">이러한 작업은 플랫폼 간에 호환되는 방식으로 수행됩니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-102">These operations are performed in a cross-platform manner.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20a51-103">.NET Framework와 같은 장치 이름, 해당 경로 통해 실제 디스크에 대 한 직접 액세스를 지원 하지 않습니다 "\\\\. \PHYSICALDRIVE0"입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-103">The .NET Framework does not support direct access to physical disks through paths that are device names, such as "\\\\.\PHYSICALDRIVE0 ".</span></span>  
  
 <span data-ttu-id="20a51-104">경로 파일 또는 디렉터리의 위치를 제공 하는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-104">A path is a string that provides the location of a file or directory.</span></span> <span data-ttu-id="20a51-105">경로 가리키지 않아도; 디스크에 있는 위치를 예를 들어 경로 메모리에 또는 장치에서 위치에 매핑될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-105">A path does not necessarily point to a location on disk; for example, a path might map to a location in memory or on a device.</span></span> <span data-ttu-id="20a51-106">패스의 정확한 형식은 현재 플랫폼에 따라 결정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-106">The exact format of a path is determined by the current platform.</span></span> <span data-ttu-id="20a51-107">예를 들어 일부 시스템 경로 시작할 수에 드라이브 또는 볼륨 문자를이 요소를 다른 시스템에 없을 때.</span><span class="sxs-lookup"><span data-stu-id="20a51-107">For example, on some systems, a path can start with a drive or volume letter, while this element is not present in other systems.</span></span> <span data-ttu-id="20a51-108">일부 시스템 파일 경로 파일에 저장 된 정보 유형을 지정 하는 확장을 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-108">On some systems, file paths can contain extensions, which indicate the type of information stored in the file.</span></span> <span data-ttu-id="20a51-109">파일 이름 확장명의 형식은 플랫폼에 따라 다릅니다. 예를 들어 일부 시스템 3 자에 대 한 확장을 제한 하 고 그렇지 않은 경우도 합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-109">The format of a file name extension is platform-dependent; for example, some systems limit extensions to three characters, and others do not.</span></span> <span data-ttu-id="20a51-110">현재 플랫폼에는 경로 요소를 구분 하는 데 사용 되는 문자 집합 및 경로 지정 하는 경우에 사용할 수 없는 문자 집합이 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-110">The current platform also determines the set of characters used to separate the elements of a path, and the set of characters that cannot be used when specifying paths.</span></span> <span data-ttu-id="20a51-111">필드의 이러한 차이 때문에 `Path` 클래스의 일부 구성원의 정확한 동작은 뿐만 아니라는 `Path` 클래스는 플랫폼에 따라 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-111">Because of these differences, the fields of the `Path` class as well as the exact behavior of some members of the `Path` class are platform-dependent.</span></span>  
  
 <span data-ttu-id="20a51-112">경로 절대 또는 상대 위치 정보를 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-112">A path can contain absolute or relative location information.</span></span> <span data-ttu-id="20a51-113">위치를 완전 하 게 지정 하는 절대 경로: 파일 또는 디렉터리 고유 하 게 식별할 수 현재 위치에 관계 없이 합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-113">Absolute paths fully specify a location: the file or directory can be uniquely identified regardless of the current location.</span></span> <span data-ttu-id="20a51-114">상대 경로 부분 위치 지정: 상대 경로와 지정 된 파일을 찾을 때 현재 위치가 시작 지점으로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-114">Relative paths specify a partial location: the current location is used as the starting point when locating a file specified with a relative path.</span></span> <span data-ttu-id="20a51-115">현재 디렉터리를 확인 하려면 호출 <xref:System.IO.Directory.GetCurrentDirectory%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-115">To determine the current directory, call <xref:System.IO.Directory.GetCurrentDirectory%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="20a51-116">멤버는 대부분의 `Path` 클래스 파일 시스템 상호 작용 하지 않으며 및 경로 문자열에 의해 지정 된 파일의 존재 여부를 확인 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-116">Most members of the `Path` class do not interact with the file system and do not verify the existence of the file specified by a path string.</span></span> <span data-ttu-id="20a51-117">`Path` 클래스와 같은 경로 문자열을 수정 하는 멤버 <xref:System.IO.Path.ChangeExtension%2A>, 파일 시스템에 파일 이름에 효과가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-117">`Path` class members that modify a path string, such as <xref:System.IO.Path.ChangeExtension%2A>, have no effect on names of files in the file system.</span></span> <span data-ttu-id="20a51-118">`Path` 그러나 멤버 않습니다, 지정 된 경로 문자열의 내용을 확인 및 throw 한 <xref:System.ArgumentException> 문자열에서 반환 된 문자에 정의 된 경로 문자열에 유효 하지 않은 문자를 포함 하는 경우 예외는 <xref:System.IO.Path.GetInvalidPathChars%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="20a51-118">`Path` members do, however, validate the contents of a specified path string, and throw an <xref:System.ArgumentException> exception if the string contains characters that are not valid in path strings, as defined in the characters returned from the <xref:System.IO.Path.GetInvalidPathChars%2A> method.</span></span> <span data-ttu-id="20a51-119">예를 들어 Windows 기반 데스크톱 플랫폼에서 잘못 된 경로 문자가 포함 될 수 있습니다 따옴표 ("), 미만 (\<), 보다 큼 (>), 파이프 (&#124;), 백스페이스 (\b), (\0), null 및 유니코드 문자 16-18과 20부터 25입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-119">For example, on Windows-based desktop platforms, invalid path characters might include quote ("), less than (\<), greater than (>), pipe (&#124;), backspace (\b), null (\0), and Unicode characters 16 through 18 and 20 through 25.</span></span>  
  
 <span data-ttu-id="20a51-120">멤버는 `Path` 클래스를 사용 하면 신속 하 고 쉽게 파일 이름 확장명, 패스의 일부 인지 확인 하 고 두 문자열을 하나의 경로 이름으로 결합 하는 등의 일반적인 작업을 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-120">The members of the `Path` class enable you to quickly and easily perform common operations such as determining whether a file name extension is part of a path, and combining two strings into one path name.</span></span>  
  
 <span data-ttu-id="20a51-121">모든 멤버는 `Path` 클래스는 정적이 고 경로의 인스턴스 없이 호출 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-121">All members of the `Path` class are static and can therefore be called without having an instance of a path.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="20a51-122">가 경로 입력된 문자열을 허용 하는 멤버에 해당 경로 올바른 형식 이어야 합니다 또는 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-122">In members that accept a path as an input string, that path must be well-formed or an exception is raised.</span></span> <span data-ttu-id="20a51-123">예를 들어 경로 정규화 된 표시 되지만 공백으로 시작 경로 클래스의 메서드에서 잘리지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-123">For example, if a path is fully qualified but begins with a space, the path is not trimmed in methods of the class.</span></span> <span data-ttu-id="20a51-124">따라서 경로 잘못 되었으며 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-124">Therefore, the path is malformed and an exception is raised.</span></span> <span data-ttu-id="20a51-125">마찬가지로, 경로 또는 경로의 조합 두 번 정규화 될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-125">Similarly, a path or a combination of paths cannot be fully qualified twice.</span></span> <span data-ttu-id="20a51-126">예를 들어 "c:\temp c:\windows"는 또한 대부분의 경우에서 예외가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-126">For example, "c:\temp c:\windows" also raises an exception in most cases.</span></span> <span data-ttu-id="20a51-127">경로 문자열을 허용 하는 메서드를 사용 하는 경우 경로 형식이 있는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-127">Ensure that your paths are well-formed when using methods that accept a path string.</span></span>  
  
 <span data-ttu-id="20a51-128">경로 허용 하는 멤버를 파일이 나 디렉터리 경로 참조할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-128">In members that accept a path, the path can refer to a file or just a directory.</span></span> <span data-ttu-id="20a51-129">지정된 된 경로 상대 경로 또는 서버 및 공유 이름에 대 한 범용 명명 규칙 (UNC) 경로를 참조할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-129">The specified path can also refer to a relative path or a Universal Naming Convention (UNC) path for a server and share name.</span></span> <span data-ttu-id="20a51-130">예를 들어 다음은 허용 가능한 경로.</span><span class="sxs-lookup"><span data-stu-id="20a51-130">For example, all the following are acceptable paths:</span></span>  
  
-   <span data-ttu-id="20a51-131">"c:\\\MyDir\\\MyFile.txt" C# 또는 Visual Basic의 "c:\MyDir\MyFile.txt"입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-131">"c:\\\MyDir\\\MyFile.txt" in C#, or "c:\MyDir\MyFile.txt" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="20a51-132">"c:\\\MyDir" C# 또는 Visual Basic의 "c:\MyDir"입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-132">"c:\\\MyDir" in C#, or "c:\MyDir" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="20a51-133">"MyDir\\\MySubdir" C# 또는 Visual Basic의 "MyDir\MySubDir"입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-133">"MyDir\\\MySubdir" in C#, or "MyDir\MySubDir" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="20a51-134">"\\\\\\\MyServer\\\MyShare" C# 또는 "\\\MyServer\MyShare" Visual Basic의 합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-134">"\\\\\\\MyServer\\\MyShare" in C#, or "\\\MyServer\MyShare" in Visual Basic.</span></span>  
  
 <span data-ttu-id="20a51-135">이러한 모든 작업은 문자열에서 수행 되므로 결과 모든 시나리오에서 유효한 지 확인할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-135">Because all these operations are performed on strings, it is impossible to verify that the results are valid in all scenarios.</span></span> <span data-ttu-id="20a51-136">예를 들어는 <xref:System.IO.Path.GetExtension%2A> 메서드를 전달 하는 문자열을 구문 분석 하 고 해당 문자열에서 확장명을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-136">For example, the <xref:System.IO.Path.GetExtension%2A> method parses a string that you pass to it and returns the extension from that string.</span></span> <span data-ttu-id="20a51-137">그러나 해당 확장명을 가진 파일을 디스크에 있는지이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-137">However, this does not mean that a file with that extension exists on the disk.</span></span>  
  
 <span data-ttu-id="20a51-138">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-138">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20a51-139">다음 코드 예제를 보여 줍니다 주 멤버 중 일부는 `Path` 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-139">The following code example demonstrates some of the main members of the `Path` class.</span></span>  
  
 [!code-cpp[path class#1](~/samples/snippets/cpp/VS_Snippets_CLR/Path Class/CPP/path class.cpp#1)]
 [!code-csharp[path class#1](~/samples/snippets/csharp/VS_Snippets_CLR/Path Class/CS/path class.cs#1)]
 [!code-vb[path class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Path Class/VB/path class.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AltDirectorySeparatorChar">
      <MemberSignature Language="C#" Value="public static readonly char AltDirectorySeparatorChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly char AltDirectorySeparatorChar" />
      <MemberSignature Language="DocId" Value="F:System.IO.Path.AltDirectorySeparatorChar" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AltDirectorySeparatorChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly char AltDirectorySeparatorChar;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20a51-140">계층적 파일 시스템 구조를 반영하는 경로 문자열에서 디렉터리 수준을 구분하는 데 사용되는 플랫폼 특정 대체 문자를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-140">Provides a platform-specific alternate character used to separate directory levels in a path string that reflects a hierarchical file system organization.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20a51-141">이 필드에 저장 된 문자에 있을 수 없습니다 <xref:System.IO.Path.InvalidPathChars>합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-141">The character stored in this field cannot be in <xref:System.IO.Path.InvalidPathChars>.</span></span> <span data-ttu-id="20a51-142">이 필드는 동일한 값으로 설정할 수 있습니다 <xref:System.IO.Path.DirectorySeparatorChar>합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-142">This field can be set to the same value as <xref:System.IO.Path.DirectorySeparatorChar>.</span></span> <span data-ttu-id="20a51-143">`AltDirectorySeparatorChar` 및 <xref:System.IO.Path.DirectorySeparatorChar> 은 모두 경로 문자열에서 디렉터리 수준을 구분 하는 것에 대 한 유효 합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-143">`AltDirectorySeparatorChar` and <xref:System.IO.Path.DirectorySeparatorChar> are both valid for separating directory levels in a path string.</span></span>  
  
 <span data-ttu-id="20a51-144">이 필드의 값은 Windows, UNIX 및 Macintosh 운영 체제에서 슬래시 ('/').</span><span class="sxs-lookup"><span data-stu-id="20a51-144">The value of this field is a slash ('/') on Windows, UNIX and Macintosh operating systems.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20a51-145">사용법을 설명 하는 다음 코드 예제는 `AltDirectorySeparatorChar` 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-145">The following code example demonstrates a use of the `AltDirectorySeparatorChar` field.</span></span>  
  
 [!code-cpp[System.IO.Path Members#13](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#13)]
 [!code-csharp[System.IO.Path Members#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#13)]
 [!code-vb[System.IO.Path Members#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeExtension">
      <MemberSignature Language="C#" Value="public static string ChangeExtension (string path, string extension);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ChangeExtension(string path, string extension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.ChangeExtension(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ChangeExtension (path As String, extension As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ChangeExtension(System::String ^ path, System::String ^ extension);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="extension" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="20a51-146">수정할 경로 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-146">The path information to modify.</span></span> <span data-ttu-id="20a51-147">경로에는 <see cref="M:System.IO.Path.GetInvalidPathChars" />에 정의된 문자가 포함될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-147">The path cannot contain any of the characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span></span></param>
        <param name="extension"><span data-ttu-id="20a51-148">앞에 마침표가 있거나 없는 새 확장명입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-148">The new extension (with or without a leading period).</span></span> <span data-ttu-id="20a51-149"><c>경로</c>에서 기존 확장명을 제거하려면 <see langword="null" />을(를) 지정하세요.</span><span class="sxs-lookup"><span data-stu-id="20a51-149">Specify <see langword="null" /> to remove an existing extension from <c>path</c>.</span></span></param>
        <summary><span data-ttu-id="20a51-150">경로 문자열의 확장명을 변경합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-150">Changes the extension of a path string.</span></span></summary>
        <returns><span data-ttu-id="20a51-151">수정된 경로 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-151">The modified path information.</span></span>  
  
 <span data-ttu-id="20a51-152">Windows 기반 데스크톱 플랫폼에서 <paramref name="path" />이(가) <see langword="null" />이거나 빈 문자열("")이면 경로 정보가 수정되지 않고 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-152">On Windows-based desktop platforms, if <paramref name="path" /> is <see langword="null" /> or an empty string (""), the path information is returned unmodified.</span></span> <span data-ttu-id="20a51-153"><paramref name="extension" />이(가) <see langword="null" />이면 반환된 문자열에 확장명이 제거된 지정된 경로가 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-153">If <paramref name="extension" /> is <see langword="null" />, the returned string contains the specified path with its extension removed.</span></span> <span data-ttu-id="20a51-154"><paramref name="path" />에 확장명이 없고 <paramref name="extension" />이(가) <see langword="null" />이 아니면 반환된 경로 문자열에는 <paramref name="extension" /> 끝에 추가된 <paramref name="path" />이(가) 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-154">If <paramref name="path" /> has no extension, and <paramref name="extension" /> is not <see langword="null" />, the returned path string contains <paramref name="extension" /> appended to the end of <paramref name="path" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20a51-155">모두 `path` 나 `extension` 마침표 (.), 포함 `ChangeExtension` 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-155">If neither `path` nor `extension` contains a period (.), `ChangeExtension` adds the period.</span></span>  
  
 <span data-ttu-id="20a51-156">`extension` 매개 변수는 여러 개의 마침표 및 유효한 경로 문자를 포함할 수 있습니다 및 길이 제한이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-156">The `extension` parameter can contain multiple periods and any valid path characters, and can be any length.</span></span> <span data-ttu-id="20a51-157">경우 `extension` 은 `null`, 반환 된 문자열의 내용을 포함 `path` 마지막 기간 및 다음 문자를 모두 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-157">If `extension` is `null`, the returned string contains the contents of `path` with the last period and all characters following it removed.</span></span>  
  
 <span data-ttu-id="20a51-158">경우 `extension` 빈 문자열이 면 반환된 된 경로 문자열의 내용을 포함 `path` 제거 마지막 마침표 다음 모든 문자를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-158">If `extension` is an empty string, the returned path string contains the contents of `path` with any characters following the last period removed.</span></span>  
  
 <span data-ttu-id="20a51-159">경우 `path` 는 확장명이 없는 및 `extension` 않습니다 `null`, 반환 된 문자열에 포함 되어 `path` 이어서 `extension`합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-159">If `path` does not have an extension and `extension` is not `null`, the returned string contains `path` followed by `extension`.</span></span>  
  
 <span data-ttu-id="20a51-160">경우 `extension` 않습니다 `null` 앞에 마침표를 포함 하지 마침표가 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-160">If `extension` is not `null` and does not contain a leading period, the period is added.</span></span>  
  
 <span data-ttu-id="20a51-161">경우 `path` 여러 마침표로 구분 하 여 여러 확장을 포함 반환 된 문자열의 내용을 포함 `path` 에 마지막 기간 및 문자열 교체 `extension`합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-161">If `path` contains a multiple extension separated by multiple periods, the returned string contains the contents of `path` with the last period and all characters following it replaced by `extension`.</span></span> <span data-ttu-id="20a51-162">예를 들어 경우 `path` "\Dir1\examples\pathtests.csx.txt"은 및 `extension` "cs" 이면 수정된 된 경로 "\Dir1\examples\pathtests.csx.cs"입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-162">For example, if `path` is "\Dir1\examples\pathtests.csx.txt" and `extension` is "cs", the modified path is "\Dir1\examples\pathtests.csx.cs".</span></span>  
  
 <span data-ttu-id="20a51-163">반환 된 결과 모든 시나리오에서 유효한 지 확인 하는 것이 불가능 합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-163">It is not possible to verify that the returned results are valid in all scenarios.</span></span> <span data-ttu-id="20a51-164">예를 들어 경우 `path` 비어 `extension` 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-164">For example, if `path` is empty, `extension` is appended.</span></span>  
  
 <span data-ttu-id="20a51-165">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-165">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20a51-166">사용법을 설명 하는 다음 코드 예제는 `ChangeExtension` 메서드.</span><span class="sxs-lookup"><span data-stu-id="20a51-166">The following code example demonstrates a use of the `ChangeExtension` method.</span></span>  
  
 [!code-cpp[System.IO.Path Members#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#1)]
 [!code-csharp[System.IO.Path Members#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#1)]
 [!code-vb[System.IO.Path Members#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="20a51-167"><paramref name="path" />에 <see cref="M:System.IO.Path.GetInvalidPathChars" />에 정의된 잘못된 문자가 하나 이상 포함되어 있는 경우</span><span class="sxs-lookup"><span data-stu-id="20a51-167"><paramref name="path" /> contains one or more of the invalid characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Combine">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="20a51-168">여러 문자열을 한 경로로 결합합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-168">Combines strings into a path.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Combine">
      <MemberSignature Language="C#" Value="public static string Combine (params string[] paths);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Combine(string[] paths) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.Combine(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Combine (ParamArray paths As String()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Combine(... cli::array &lt;System::String ^&gt; ^ paths);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="paths" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="paths"><span data-ttu-id="20a51-169">경로 각 부분의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-169">An array of parts of the path.</span></span></param>
        <summary><span data-ttu-id="20a51-170">문자열 배열을 한 경로로 결합합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-170">Combines an array of strings into a path.</span></span></summary>
        <returns><span data-ttu-id="20a51-171">결합된 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-171">The combined paths.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20a51-172">`paths` 배열을 결합 하는 경로 부분을 지정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-172">`paths` should be an array of the parts of the path to combine.</span></span> <span data-ttu-id="20a51-173">후속 경로 중 하나를 절대 경로 이면 다음 결합 작업은 다시 설정 된 모든 이전 결합 된 경로 삭제 하는 해당 절대 경로, 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-173">If the one of the subsequent paths is an absolute path, then the combine operation resets starting with that absolute path, discarding all previous combined paths.</span></span>  
  
 <span data-ttu-id="20a51-174">길이가 0 인 문자열은 조합 된 경로에서 생략 됩니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-174">Zero-length strings are omitted from the combined path.</span></span>  
  
 <span data-ttu-id="20a51-175">공백이 있는 경우 매개 변수를 구문 분석 됩니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-175">The parameters are not parsed if they have white space.</span></span>  
  
 <span data-ttu-id="20a51-176">디렉터리 및 파일 이름에 일부 잘못 된 문자에서 같이 허용 되지 않는 해석 되는 `Combine` 메서드를 검색 와일드 카드 문자에 대 한 이러한 문자를 사용할 수 있으므로 합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-176">Not all invalid characters for directory and file names are interpreted as unacceptable by the `Combine` method, because you can use these characters for search wildcard characters.</span></span> <span data-ttu-id="20a51-177">예를 들어 동안 `Path.Combine("c:\\", "*.txt")` 잘못 되었을 수 검색 문자열로 올바른지, 여기에서 파일을 만들 경우.</span><span class="sxs-lookup"><span data-stu-id="20a51-177">For example, while `Path.Combine("c:\\", "*.txt")` might be invalid if you were to create a file from it, it is valid as a search string.</span></span> <span data-ttu-id="20a51-178">성공적으로 해석 따라서는 `Combine` 메서드.</span><span class="sxs-lookup"><span data-stu-id="20a51-178">It is therefore successfully interpreted by the `Combine` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20a51-179">다음 예제에서는 문자열 배열을 한 경로로 결합 됩니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-179">The following example combines an array of strings into a path.</span></span>  
  
 [!code-csharp[System.IO.Path.Combine#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.path.combine/cs/program.cs#3)]
 [!code-vb[System.IO.Path.Combine#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.path.combine/vb/program.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="20a51-180">배열의 문자열 중 하나에 <see cref="M:System.IO.Path.GetInvalidPathChars" />에 정의된 잘못된 문자가 하나 이상 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="20a51-180">One of the strings in the array contains one or more of the invalid characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="20a51-181">배열의 문자열 중 하나가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="20a51-181">One of the strings in the array is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Combine">
      <MemberSignature Language="C#" Value="public static string Combine (string path1, string path2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Combine(string path1, string path2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.Combine(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Combine (path1 As String, path2 As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Combine(System::String ^ path1, System::String ^ path2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path1" Type="System.String" />
        <Parameter Name="path2" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path1"><span data-ttu-id="20a51-182">결합할 첫 번째 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-182">The first path to combine.</span></span></param>
        <param name="path2"><span data-ttu-id="20a51-183">결합할 두 번째 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-183">The second path to combine.</span></span></param>
        <summary><span data-ttu-id="20a51-184">두 문자열을 한 경로로 결합합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-184">Combines two strings into a path.</span></span></summary>
        <returns><span data-ttu-id="20a51-185">결합된 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-185">The combined paths.</span></span> <span data-ttu-id="20a51-186">지정된 경로 중 하나가 0 길이의 문자열이면 이 메서드는 다른 경로를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-186">If one of the specified paths is a zero-length string, this method returns the other path.</span></span> <span data-ttu-id="20a51-187"><paramref name="path2" />에 절대 경로가 포함되어 있으면 이 메서드는 <paramref name="path2" />을(를) 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-187">If <paramref name="path2" /> contains an absolute path, this method returns <paramref name="path2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20a51-188">경우 `path1` 은 드라이브 참조 (즉, "c:" 또는 "d:") 및에 정의 된 유효한 구분 기호 문자로 끝나지 않는 <xref:System.IO.Path.DirectorySeparatorChar>, <xref:System.IO.Path.AltDirectorySeparatorChar>, 또는 <xref:System.IO.Path.VolumeSeparatorChar>, <xref:System.IO.Path.DirectorySeparatorChar> 에 추가 `path1` 연결 하기 전에.</span><span class="sxs-lookup"><span data-stu-id="20a51-188">If `path1` is not a drive reference (that is, "C:" or "D:") and does not end with a valid separator character as defined in <xref:System.IO.Path.DirectorySeparatorChar>, <xref:System.IO.Path.AltDirectorySeparatorChar>, or <xref:System.IO.Path.VolumeSeparatorChar>, <xref:System.IO.Path.DirectorySeparatorChar> is appended to `path1` before concatenation.</span></span>  
  
 <span data-ttu-id="20a51-189">경우 `path2` 루트를 포함 하지 않습니다 (경우에 예를 들어 `path2` 구분 기호 문자 또는 드라이브 사양으로 시작 하지 않는)는 결과 두 경로의 중간 구분 문자가 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-189">If `path2` does not include a root (for example, if `path2` does not start with a separator character or a drive specification), the result is a concatenation of the two paths, with an intervening separator character.</span></span> <span data-ttu-id="20a51-190">경우 `path2` 루트가 포함 `path2` 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-190">If `path2` includes a root, `path2` is returned.</span></span>  
  
 <span data-ttu-id="20a51-191">공백이 있는 경우 매개 변수를 구문 분석 됩니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-191">The parameters are not parsed if they have white space.</span></span> <span data-ttu-id="20a51-192">따라서 경우 `path2` 에 공백을 (예: "\file.txt")를 포함 하는 <xref:System.IO.Path.Combine%2A> 메서드 추가 `path2` 를 `path1` 만 반환 하는 대신 `path2`합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-192">Therefore, if `path2` includes white space (for example, " \file.txt "), the <xref:System.IO.Path.Combine%2A> method appends `path2` to `path1` instead of returning only `path2`.</span></span>  
  
 <span data-ttu-id="20a51-193">디렉터리 및 파일 이름에 일부 잘못 된 문자에서 같이 허용 되지 않는 해석 되는 `Combine` 메서드를 검색 와일드 카드 문자에 대 한 이러한 문자를 사용할 수 있으므로 합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-193">Not all invalid characters for directory and file names are interpreted as unacceptable by the `Combine` method, because you can use these characters for search wildcard characters.</span></span> <span data-ttu-id="20a51-194">예를 들어 동안 `Path.Combine("c:\\", "*.txt")` 잘못 되었을 수 검색 문자열로 올바른지, 여기에서 파일을 만들 경우.</span><span class="sxs-lookup"><span data-stu-id="20a51-194">For example, while `Path.Combine("c:\\", "*.txt")` might be invalid if you were to create a file from it, it is valid as a search string.</span></span> <span data-ttu-id="20a51-195">성공적으로 해석 따라서는 `Combine` 메서드.</span><span class="sxs-lookup"><span data-stu-id="20a51-195">It is therefore successfully interpreted by the `Combine` method.</span></span>  
  
 <span data-ttu-id="20a51-196">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-196">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20a51-197">다음 코드 예제는 `Combine` Windows 기반 데스크톱 플랫폼에서 메서드.</span><span class="sxs-lookup"><span data-stu-id="20a51-197">The following code example demonstrates using the `Combine` method on a Windows-based desktop platform.</span></span>  
  
 [!code-cpp[pathcombine#1](~/samples/snippets/cpp/VS_Snippets_CLR/pathcombine/CPP/pathcombine.cpp#1)]
 [!code-csharp[pathcombine#1](~/samples/snippets/csharp/VS_Snippets_CLR/pathcombine/CS/pathcombine.cs#1)]
 [!code-vb[pathcombine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/pathcombine/VB/pathcombine.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="20a51-198"><paramref name="path1" /> 또는 <paramref name="path2" />에 <see cref="M:System.IO.Path.GetInvalidPathChars" />에 정의된 잘못된 문자가 하나 이상 포함되어 있는 경우</span><span class="sxs-lookup"><span data-stu-id="20a51-198"><paramref name="path1" /> or <paramref name="path2" /> contains one or more of the invalid characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="20a51-199"><paramref name="path1" /> 또는 <paramref name="path2" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="20a51-199"><paramref name="path1" /> or <paramref name="path2" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Combine">
      <MemberSignature Language="C#" Value="public static string Combine (string path1, string path2, string path3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Combine(string path1, string path2, string path3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.Combine(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Combine (path1 As String, path2 As String, path3 As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Combine(System::String ^ path1, System::String ^ path2, System::String ^ path3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path1" Type="System.String" />
        <Parameter Name="path2" Type="System.String" />
        <Parameter Name="path3" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path1"><span data-ttu-id="20a51-200">결합할 첫 번째 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-200">The first path to combine.</span></span></param>
        <param name="path2"><span data-ttu-id="20a51-201">결합할 두 번째 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-201">The second path to combine.</span></span></param>
        <param name="path3"><span data-ttu-id="20a51-202">결합할 세 번째 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-202">The third path to combine.</span></span></param>
        <summary><span data-ttu-id="20a51-203">세 문자열을 한 경로로 결합합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-203">Combines three strings into a path.</span></span></summary>
        <returns><span data-ttu-id="20a51-204">결합된 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-204">The combined paths.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20a51-205">`path1` 절대 경로 여야 하며 (예를 들어 "d:\archives" 또는 "\\\archives\public").</span><span class="sxs-lookup"><span data-stu-id="20a51-205">`path1` should be an absolute path (for example, "d:\archives" or "\\\archives\public").</span></span> <span data-ttu-id="20a51-206">경우 `path2` 또는 `path3` 결합 되어 감사가 만들어집니다 작업 포기 이전에 모두 결합 된 경로 및 절대 해당 경로에 다시 설정 합니다. 절대 경로 이기도 합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-206">If `path2` or `path3` is also an absolute path, the combine operation discards all previously combined paths and resets to that absolute path.</span></span>  
  
 <span data-ttu-id="20a51-207">길이가 0 인 문자열은 조합 된 경로에서 생략 됩니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-207">Zero-length strings are omitted from the combined path.</span></span>  
  
 <span data-ttu-id="20a51-208">경우 `path1` 은 드라이브 참조 (즉, "c:" 또는 "d:") 및에 정의 된 유효한 구분 기호 문자로 끝나지 않는 <xref:System.IO.Path.DirectorySeparatorChar>, <xref:System.IO.Path.AltDirectorySeparatorChar>, 또는 <xref:System.IO.Path.VolumeSeparatorChar>, <xref:System.IO.Path.DirectorySeparatorChar> 에 추가 `path1` 연결 하기 전에.</span><span class="sxs-lookup"><span data-stu-id="20a51-208">If `path1` is not a drive reference (that is, "C:" or "D:") and does not end with a valid separator character as defined in <xref:System.IO.Path.DirectorySeparatorChar>, <xref:System.IO.Path.AltDirectorySeparatorChar>, or <xref:System.IO.Path.VolumeSeparatorChar>, <xref:System.IO.Path.DirectorySeparatorChar> is appended to `path1` before concatenation.</span></span>  
  
 <span data-ttu-id="20a51-209">경우 `path2` 루트를 포함 하지 않습니다 (경우에 예를 들어 `path2` 구분 기호 문자 또는 드라이브 사양으로 시작 하지 않는)는 결과 두 경로의 중간 구분 문자가 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-209">If `path2` does not include a root (for example, if `path2` does not start with a separator character or a drive specification), the result is a concatenation of the two paths, with an intervening separator character.</span></span> <span data-ttu-id="20a51-210">경우 `path2` 루트가 포함 `path2` 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-210">If `path2` includes a root, `path2` is returned.</span></span>  
  
 <span data-ttu-id="20a51-211">공백이 있는 경우 매개 변수를 구문 분석 됩니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-211">The parameters are not parsed if they have white space.</span></span> <span data-ttu-id="20a51-212">따라서 경우 `path2` 에 공백을 (예: "\file.txt")를 포함 하는 <xref:System.IO.Path.Combine%2A> 메서드 추가 `path2` 를 `path1`합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-212">Therefore, if `path2` includes white space (for example, " \file.txt "), the <xref:System.IO.Path.Combine%2A> method appends `path2` to `path1`.</span></span>  
  
 <span data-ttu-id="20a51-213">디렉터리 및 파일 이름에 일부 잘못 된 문자에서 같이 허용 되지 않는 해석 되는 `Combine` 메서드를 검색 와일드 카드 문자에 대 한 이러한 문자를 사용할 수 있으므로 합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-213">Not all invalid characters for directory and file names are interpreted as unacceptable by the `Combine` method, because you can use these characters for search wildcard characters.</span></span> <span data-ttu-id="20a51-214">예를 들어 동안 `Path.Combine("c:\\", "*.txt")` 잘못 되었을 수 검색 문자열로 올바른지, 여기에서 파일을 만들 경우.</span><span class="sxs-lookup"><span data-stu-id="20a51-214">For example, while `Path.Combine("c:\\", "*.txt")` might be invalid if you were to create a file from it, it is valid as a search string.</span></span> <span data-ttu-id="20a51-215">성공적으로 해석 따라서는 `Combine` 메서드.</span><span class="sxs-lookup"><span data-stu-id="20a51-215">It is therefore successfully interpreted by the `Combine` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20a51-216">다음 예제에서는 세 개의 경로 결합합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-216">The following example combines three paths.</span></span>  
  
 [!code-csharp[System.IO.Path.Combine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.path.combine/cs/program.cs#1)]
 [!code-vb[System.IO.Path.Combine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.path.combine/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="20a51-217"><paramref name="path1" />, <paramref name="path2" /> 또는 <paramref name="path3" />이 <see cref="M:System.IO.Path.GetInvalidPathChars" />에 정의된 잘못된 문자 중 하나 이상을 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-217"><paramref name="path1" />, <paramref name="path2" />, or <paramref name="path3" /> contains one or more of the invalid characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="20a51-218"><paramref name="path1" />, <paramref name="path2" /> 또는 <paramref name="path3" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-218"><paramref name="path1" />, <paramref name="path2" />, or <paramref name="path3" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Combine">
      <MemberSignature Language="C#" Value="public static string Combine (string path1, string path2, string path3, string path4);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Combine(string path1, string path2, string path3, string path4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.Combine(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Combine (path1 As String, path2 As String, path3 As String, path4 As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Combine(System::String ^ path1, System::String ^ path2, System::String ^ path3, System::String ^ path4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path1" Type="System.String" />
        <Parameter Name="path2" Type="System.String" />
        <Parameter Name="path3" Type="System.String" />
        <Parameter Name="path4" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path1"><span data-ttu-id="20a51-219">결합할 첫 번째 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-219">The first path to combine.</span></span></param>
        <param name="path2"><span data-ttu-id="20a51-220">결합할 두 번째 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-220">The second path to combine.</span></span></param>
        <param name="path3"><span data-ttu-id="20a51-221">결합할 세 번째 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-221">The third path to combine.</span></span></param>
        <param name="path4"><span data-ttu-id="20a51-222">결합할 네 번째 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-222">The fourth path to combine.</span></span></param>
        <summary><span data-ttu-id="20a51-223">네 문자열을 한 경로로 결합합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-223">Combines four strings into a path.</span></span></summary>
        <returns><span data-ttu-id="20a51-224">결합된 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-224">The combined paths.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20a51-225">`path1` 절대 경로 여야 하며 (예를 들어 "d:\archives" 또는 "\\\archives\public"). 또한 후속 경로 중 하나는 절대 경로, 결합 작업 이전에 결합 된 모든 경로 삭제 하 고 해당 절대 경로로 다시 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-225">`path1` should be an absolute path (for example, "d:\archives" or "\\\archives\public").If one of the subsequent paths is also an absolute path, the combine operation discards all previously combined paths and resets to that absolute path.</span></span>  
  
 <span data-ttu-id="20a51-226">길이가 0 인 문자열은 조합 된 경로에서 생략 됩니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-226">Zero-length strings are omitted from the combined path.</span></span>  
  
 <span data-ttu-id="20a51-227">경우 `path1` 은 드라이브 참조 (즉, "c:" 또는 "d:") 및에 정의 된 유효한 구분 기호 문자로 끝나지 않는 <xref:System.IO.Path.DirectorySeparatorChar>, <xref:System.IO.Path.AltDirectorySeparatorChar>, 또는 <xref:System.IO.Path.VolumeSeparatorChar>, <xref:System.IO.Path.DirectorySeparatorChar> 에 추가 `path1` 연결 하기 전에.</span><span class="sxs-lookup"><span data-stu-id="20a51-227">If `path1` is not a drive reference (that is, "C:" or "D:") and does not end with a valid separator character as defined in <xref:System.IO.Path.DirectorySeparatorChar>, <xref:System.IO.Path.AltDirectorySeparatorChar>, or <xref:System.IO.Path.VolumeSeparatorChar>, <xref:System.IO.Path.DirectorySeparatorChar> is appended to `path1` before concatenation.</span></span>  
  
 <span data-ttu-id="20a51-228">경우 `path2` 루트를 포함 하지 않습니다 (경우에 예를 들어 `path2` 구분 기호 문자 또는 드라이브 사양으로 시작 하지 않는)는 결과 두 경로의 중간 구분 문자가 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-228">If `path2` does not include a root (for example, if `path2` does not start with a separator character or a drive specification), the result is a concatenation of the two paths, with an intervening separator character.</span></span> <span data-ttu-id="20a51-229">경우 `path2` 루트가 포함 `path2` 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-229">If `path2` includes a root, `path2` is returned.</span></span>  
  
 <span data-ttu-id="20a51-230">공백이 있는 경우 매개 변수를 구문 분석 됩니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-230">The parameters are not parsed if they have white space.</span></span> <span data-ttu-id="20a51-231">따라서 경우 `path2` 에 공백을 (예: "\file.txt")를 포함 하는 <xref:System.IO.Path.Combine%2A> 메서드 추가 `path2` 를 `path1`합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-231">Therefore, if `path2` includes white space (for example, " \file.txt "), the <xref:System.IO.Path.Combine%2A> method appends `path2` to `path1`.</span></span>  
  
 <span data-ttu-id="20a51-232">디렉터리 및 파일 이름에 일부 잘못 된 문자에서 같이 허용 되지 않는 해석 되는 `Combine` 메서드를 검색 와일드 카드 문자에 대 한 이러한 문자를 사용할 수 있으므로 합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-232">Not all invalid characters for directory and file names are interpreted as unacceptable by the `Combine` method, because you can use these characters for search wildcard characters.</span></span> <span data-ttu-id="20a51-233">예를 들어 동안 `Path.Combine("c:\\", "*.txt")` 잘못 되었을 수 검색 문자열로 올바른지, 여기에서 파일을 만들 경우.</span><span class="sxs-lookup"><span data-stu-id="20a51-233">For example, while `Path.Combine("c:\\", "*.txt")` might be invalid if you were to create a file from it, it is valid as a search string.</span></span> <span data-ttu-id="20a51-234">성공적으로 해석 따라서는 `Combine` 메서드.</span><span class="sxs-lookup"><span data-stu-id="20a51-234">It is therefore successfully interpreted by the `Combine` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20a51-235">다음 예에서는 4 개의 경로 결합합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-235">The following example combines four paths.</span></span>  
  
 [!code-csharp[System.IO.Path.Combine#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.path.combine/cs/program.cs#2)]
 [!code-vb[System.IO.Path.Combine#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.path.combine/vb/program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="20a51-236"><paramref name="path1" />, <paramref name="path2" />, <paramref name="path3" /> 또는 <paramref name="path4" />가 <see cref="M:System.IO.Path.GetInvalidPathChars" />에 정의된 잘못된 문자 중 하나 이상을 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-236"><paramref name="path1" />, <paramref name="path2" />, <paramref name="path3" />, or <paramref name="path4" /> contains one or more of the invalid characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="20a51-237"><paramref name="path1" />, <paramref name="path2" />, <paramref name="path3" /> 또는 <paramref name="path4" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-237"><paramref name="path1" />, <paramref name="path2" />, <paramref name="path3" />, or <paramref name="path4" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DirectorySeparatorChar">
      <MemberSignature Language="C#" Value="public static readonly char DirectorySeparatorChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly char DirectorySeparatorChar" />
      <MemberSignature Language="DocId" Value="F:System.IO.Path.DirectorySeparatorChar" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DirectorySeparatorChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly char DirectorySeparatorChar;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20a51-238">계층적 파일 시스템 구조를 반영하는 경로 문자열에서 디렉터리 수준을 구분하는 데 사용되는 플랫폼 특정 문자를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-238">Provides a platform-specific character used to separate directory levels in a path string that reflects a hierarchical file system organization.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20a51-239">이 필드에 저장 된 문자에 있을 수 없습니다 <xref:System.IO.Path.InvalidPathChars>합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-239">The character stored in this field cannot be in <xref:System.IO.Path.InvalidPathChars>.</span></span> <span data-ttu-id="20a51-240"><xref:System.IO.Path.AltDirectorySeparatorChar> 및 `DirectorySeparatorChar` 은 모두 경로 문자열에서 디렉터리 수준을 구분 하는 것에 대 한 유효 합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-240"><xref:System.IO.Path.AltDirectorySeparatorChar> and `DirectorySeparatorChar` are both valid for separating directory levels in a path string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20a51-241">다음 코드 예제에서는 `DirectorySeparatorChar` 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-241">The following code example demonstrates the use of the `DirectorySeparatorChar` field.</span></span>  
  
 [!code-cpp[System.IO.Path Members#13](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#13)]
 [!code-csharp[System.IO.Path Members#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#13)]
 [!code-vb[System.IO.Path Members#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDirectoryName">
      <MemberSignature Language="C#" Value="public static ReadOnlySpan&lt;char&gt; GetDirectoryName (ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ReadOnlySpan`1&lt;char&gt; GetDirectoryName(valuetype System.ReadOnlySpan`1&lt;char&gt; path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetDirectoryName(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDirectoryName (path As ReadOnlySpan(Of Char)) As ReadOnlySpan(Of Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ReadOnlySpan&lt;char&gt; GetDirectoryName(ReadOnlySpan&lt;char&gt; path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;System.Char&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDirectoryName">
      <MemberSignature Language="C#" Value="public static string GetDirectoryName (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetDirectoryName(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetDirectoryName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDirectoryName (path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetDirectoryName(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="20a51-242">파일 또는 디렉터리의 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-242">The path of a file or directory.</span></span></param>
        <summary><span data-ttu-id="20a51-243">지정된 경로 문자열에 대한 디렉터리 정보를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-243">Returns the directory information for the specified path string.</span></span></summary>
        <returns><span data-ttu-id="20a51-244"><paramref name="path" />에 대한 디렉터리 정보이며, <paramref name="path" />이(가) 루트 디렉터리를 나타내거나 null인 경우 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-244">Directory information for <paramref name="path" />, or <see langword="null" /> if <paramref name="path" /> denotes a root directory or is null.</span></span> <span data-ttu-id="20a51-245"><paramref name="path" />에 디렉터리 정보가 포함되어 있지 않으면 <see cref="F:System.String.Empty" />이(가) 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-245">Returns <see cref="F:System.String.Empty" /> if <paramref name="path" /> does not contain directory information.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20a51-246">대부분의 경우에서이 메서드에서 반환 되는 문자열 이루어져 마지막 점을 포함 하지 않고 최대 경로에서 모든 문자가 <xref:System.IO.Path.DirectorySeparatorChar> 또는 <xref:System.IO.Path.AltDirectorySeparatorChar>합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-246">In most cases, the string returned by this method consists of all characters in the path up to but not including the last <xref:System.IO.Path.DirectorySeparatorChar> or <xref:System.IO.Path.AltDirectorySeparatorChar>.</span></span> <span data-ttu-id="20a51-247">경로는 구성 됩니다 루트 디렉터리와 같은 "c:\\", null이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-247">If the path consists of a root directory, such as "c:\\", null is returned.</span></span> <span data-ttu-id="20a51-248">이 방법은 사용 하 여 경로 지원 하지 않는 참고 "파일:".</span><span class="sxs-lookup"><span data-stu-id="20a51-248">Note that this method does not support paths using "file:".</span></span> <span data-ttu-id="20a51-249">반환 된 경로 포함 되어 있지 않으므로 <xref:System.IO.Path.DirectorySeparatorChar> 또는 <xref:System.IO.Path.AltDirectorySeparatorChar>로 다시 전달 반환 된 경로 <xref:System.IO.Path.GetDirectoryName%2A> 메서드는 결과 문자열에 대 한 후속 호출당 한 폴더 수준 잘림이 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-249">Because the returned path does not include the <xref:System.IO.Path.DirectorySeparatorChar> or <xref:System.IO.Path.AltDirectorySeparatorChar>, passing the returned path back into the <xref:System.IO.Path.GetDirectoryName%2A> method will result in the truncation of one folder level per subsequent call on the result string.</span></span> <span data-ttu-id="20a51-250">예를 들어 "C:\Directory\SubDirectory\test.txt" 경로에 전달 된 <xref:System.IO.Path.GetDirectoryName%2A> 메서드 "C:\Directory\SubDirectory"를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-250">For example, passing the path "C:\Directory\SubDirectory\test.txt" into the <xref:System.IO.Path.GetDirectoryName%2A> method will return "C:\Directory\SubDirectory".</span></span> <span data-ttu-id="20a51-251">문자열에 "C:\Directory\SubDirectory" 전달 <xref:System.IO.Path.GetDirectoryName%2A> "C:\Directory" 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-251">Passing that string, "C:\Directory\SubDirectory", into <xref:System.IO.Path.GetDirectoryName%2A> will result in "C:\Directory".</span></span>  
  
 <span data-ttu-id="20a51-252">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-252">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20a51-253">다음 코드 예제는 `GetDirectoryName` Windows 기반 데스크톱 플랫폼에서 메서드.</span><span class="sxs-lookup"><span data-stu-id="20a51-253">The following code example demonstrates using the `GetDirectoryName` method on a Windows-based desktop platform.</span></span>  
  
 [!code-cpp[System.IO.Path Members#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#3)]
 [!code-csharp[System.IO.Path Members#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#3)]
 [!code-vb[System.IO.Path Members#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="20a51-254"><paramref name="path" /> 매개 변수가 잘못된 문자를 포함하거나, 비어 있거나, 공백만 포함하는 경우</span><span class="sxs-lookup"><span data-stu-id="20a51-254">The <paramref name="path" /> parameter contains invalid characters, is empty, or contains only white spaces.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException">
          <block subset="none" type="note">
            <para>  
 <span data-ttu-id="20a51-255">[Windows 스토어 앱용 .NET](http://go.microsoft.com/fwlink/?LinkID=247912) 또는 [이식 가능한 클래스 라이브러리](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)에서 대신 기본 클래스 예외 <see cref="T:System.IO.IOException" />을 catch합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-255">In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.IO.IOException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="20a51-256"><paramref name="path" /> 매개변수가 시스템에 정의된 최대 길이보다 깁니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-256">The <paramref name="path" /> parameter is longer than the system-defined maximum length.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetExtension">
      <MemberSignature Language="C#" Value="public static ReadOnlySpan&lt;char&gt; GetExtension (ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ReadOnlySpan`1&lt;char&gt; GetExtension(valuetype System.ReadOnlySpan`1&lt;char&gt; path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetExtension(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExtension (path As ReadOnlySpan(Of Char)) As ReadOnlySpan(Of Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ReadOnlySpan&lt;char&gt; GetExtension(ReadOnlySpan&lt;char&gt; path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;System.Char&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExtension">
      <MemberSignature Language="C#" Value="public static string GetExtension (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetExtension(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetExtension(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExtension (path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetExtension(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="20a51-257">확장명을 가져올 경로 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-257">The path string from which to get the extension.</span></span></param>
        <summary><span data-ttu-id="20a51-258">지정된 경로 문자열에서 확장명을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-258">Returns the extension of the specified path string.</span></span></summary>
        <returns><span data-ttu-id="20a51-259">"."(마침표)를 포함한 지정된 경로의 확장명, <see langword="null" /> 또는 <see cref="F:System.String.Empty" />입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-259">The extension of the specified path (including the period "."), or <see langword="null" />, or <see cref="F:System.String.Empty" />.</span></span> <span data-ttu-id="20a51-260"><paramref name="path" />이(가) <see langword="null" />이면, <see cref="M:System.IO.Path.GetExtension(System.String)" />은(는) <see langword="null" />을(를) 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-260">If <paramref name="path" /> is <see langword="null" />, <see cref="M:System.IO.Path.GetExtension(System.String)" /> returns <see langword="null" />.</span></span> <span data-ttu-id="20a51-261"><paramref name="path" />에 확장명 정보가 없는 경우 <see cref="M:System.IO.Path.GetExtension(System.String)" />은(는) <see cref="F:System.String.Empty" />을(를) 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-261">If <paramref name="path" /> does not have extension information, <see cref="M:System.IO.Path.GetExtension(System.String)" /> returns <see cref="F:System.String.Empty" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20a51-262">확장 `path` 검색 하 여 얻은 `path` 경로의 시작까지에 마지막 문자로 시작 하는 마침표 (.)에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-262">The extension of `path` is obtained by searching `path` for a period (.), starting with the last character in path and continuing toward the start of path.</span></span> <span data-ttu-id="20a51-263">앞에 마침표가 발견 되는 <xref:System.IO.Path.DirectorySeparatorChar> 또는 <xref:System.IO.Path.AltDirectorySeparatorChar> 문자 뒤; 기간과 문자를 포함 하는 반환 된 문자열, <xref:System.String.Empty> 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-263">If a period is found before a <xref:System.IO.Path.DirectorySeparatorChar> or <xref:System.IO.Path.AltDirectorySeparatorChar> character, the returned string contains the period and the characters after it; otherwise, <xref:System.String.Empty> is returned.</span></span>  
  
 <span data-ttu-id="20a51-264">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-264">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20a51-265">다음 코드 예제는 `GetExtension` Windows 기반 데스크톱 플랫폼에서 메서드.</span><span class="sxs-lookup"><span data-stu-id="20a51-265">The following code example demonstrates using the `GetExtension` method on a Windows-based desktop platform.</span></span>  
  
 [!code-cpp[System.IO.Path Members#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#4)]
 [!code-csharp[System.IO.Path Members#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#4)]
 [!code-vb[System.IO.Path Members#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="20a51-266"><paramref name="path" />에 <see cref="M:System.IO.Path.GetInvalidPathChars" />에 정의된 잘못된 문자가 하나 이상 포함되어 있는 경우</span><span class="sxs-lookup"><span data-stu-id="20a51-266"><paramref name="path" /> contains one or more of the invalid characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetFileName">
      <MemberSignature Language="C#" Value="public static ReadOnlySpan&lt;char&gt; GetFileName (ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ReadOnlySpan`1&lt;char&gt; GetFileName(valuetype System.ReadOnlySpan`1&lt;char&gt; path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetFileName(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFileName (path As ReadOnlySpan(Of Char)) As ReadOnlySpan(Of Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ReadOnlySpan&lt;char&gt; GetFileName(ReadOnlySpan&lt;char&gt; path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;System.Char&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFileName">
      <MemberSignature Language="C#" Value="public static string GetFileName (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFileName(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetFileName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFileName (path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetFileName(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="20a51-267">파일 이름과 확장명을 가져올 경로 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-267">The path string from which to obtain the file name and extension.</span></span></param>
        <summary><span data-ttu-id="20a51-268">지정된 경로 문자열에서 파일 이름과 확장명을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-268">Returns the file name and extension of the specified path string.</span></span></summary>
        <returns><span data-ttu-id="20a51-269"><paramref name="path" />에서 마지막 디렉터리 문자 다음의 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-269">The characters after the last directory character in <paramref name="path" />.</span></span> <span data-ttu-id="20a51-270"><paramref name="path" />의 마지막 문자가 디렉터리나 볼륨 구분 문자이면 이 메서드는 <see cref="F:System.String.Empty" />을(를) 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-270">If the last character of <paramref name="path" /> is a directory or volume separator character, this method returns <see cref="F:System.String.Empty" />.</span></span> <span data-ttu-id="20a51-271"><paramref name="path" />이(가) <see langword="null" />이면 이 메서드는 <see langword="null" />을(를) 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-271">If <paramref name="path" /> is <see langword="null" />, this method returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20a51-272">반환 된 값이 `null` 파일 경로가 경우 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-272">The returned value is `null` if the file path is `null`.</span></span>  
  
 <span data-ttu-id="20a51-273">파일 이름의 시작을 확인 하는 데 사용 하는 구분 기호 문자는 <xref:System.IO.Path.DirectorySeparatorChar> 및 <xref:System.IO.Path.AltDirectorySeparatorChar>합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-273">The separator characters used to determine the start of the file name are <xref:System.IO.Path.DirectorySeparatorChar> and <xref:System.IO.Path.AltDirectorySeparatorChar>.</span></span>  
  
 <span data-ttu-id="20a51-274">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-274">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20a51-275">다음 코드 예제에서는의 동작을 보여 줍니다.는 `GetFileName` Windows 기반 데스크톱 플랫폼에서 메서드.</span><span class="sxs-lookup"><span data-stu-id="20a51-275">The following code example demonstrates the behavior of the `GetFileName` method on a Windows-based desktop platform.</span></span>  
  
 [!code-cpp[System.IO.Path Members#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#5)]
 [!code-csharp[System.IO.Path Members#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#5)]
 [!code-vb[System.IO.Path Members#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="20a51-276"><paramref name="path" />에 <see cref="M:System.IO.Path.GetInvalidPathChars" />에 정의된 잘못된 문자가 하나 이상 포함되어 있는 경우</span><span class="sxs-lookup"><span data-stu-id="20a51-276"><paramref name="path" /> contains one or more of the invalid characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetFileNameWithoutExtension">
      <MemberSignature Language="C#" Value="public static ReadOnlySpan&lt;char&gt; GetFileNameWithoutExtension (ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ReadOnlySpan`1&lt;char&gt; GetFileNameWithoutExtension(valuetype System.ReadOnlySpan`1&lt;char&gt; path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetFileNameWithoutExtension(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFileNameWithoutExtension (path As ReadOnlySpan(Of Char)) As ReadOnlySpan(Of Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ReadOnlySpan&lt;char&gt; GetFileNameWithoutExtension(ReadOnlySpan&lt;char&gt; path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;System.Char&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFileNameWithoutExtension">
      <MemberSignature Language="C#" Value="public static string GetFileNameWithoutExtension (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFileNameWithoutExtension(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetFileNameWithoutExtension(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFileNameWithoutExtension (path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetFileNameWithoutExtension(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="20a51-277">파일의 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-277">The path of the file.</span></span></param>
        <summary><span data-ttu-id="20a51-278">확장명 없이 지정된 경로 문자열의 파일 이름을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-278">Returns the file name of the specified path string without the extension.</span></span></summary>
        <returns><span data-ttu-id="20a51-279">마지막 마침표(.)와 그 다음에 나오는 모든 문자인 <see cref="M:System.IO.Path.GetFileName(System.String)" />에서 반환한 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-279">The string returned by <see cref="M:System.IO.Path.GetFileName(System.String)" />, minus the last period (.) and all characters following it.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20a51-280">이 메서드는 경로 또는 파일 이름이 존재 하는지 확인 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-280">This method does not verify that the path or file name exists.</span></span>  
  
 <span data-ttu-id="20a51-281">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-281">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20a51-282">사용법을 설명 하는 다음 코드 예제는 `GetFileNameWithoutExtension` 메서드.</span><span class="sxs-lookup"><span data-stu-id="20a51-282">The following code example demonstrates a use of the `GetFileNameWithoutExtension` method.</span></span>  
  
 [!code-cpp[System.IO.Path Members#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#6)]
 [!code-csharp[System.IO.Path Members#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#6)]
 [!code-vb[System.IO.Path Members#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="20a51-283"><paramref name="path" />에 <see cref="M:System.IO.Path.GetInvalidPathChars" />에 정의된 잘못된 문자가 하나 이상 포함되어 있는 경우</span><span class="sxs-lookup"><span data-stu-id="20a51-283"><paramref name="path" /> contains one or more of the invalid characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetFullPath">
      <MemberSignature Language="C#" Value="public static string GetFullPath (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFullPath(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetFullPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFullPath (path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetFullPath(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="20a51-284">절대 경로 정보를 가져올 파일 또는 디렉터리입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-284">The file or directory for which to obtain absolute path information.</span></span></param>
        <summary><span data-ttu-id="20a51-285">지정된 경로 문자열에 대한 절대 경로를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-285">Returns the absolute path for the specified path string.</span></span></summary>
        <returns><span data-ttu-id="20a51-286">"C:\MyFile.txt"처럼 <paramref name="path" />의 정규화된 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-286">The fully qualified location of <paramref name="path" />, such as "C:\MyFile.txt".</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20a51-287">.NET Framework와 같은 장치 이름, 해당 경로 통해 실제 디스크에 대 한 직접 액세스를 지원 하지 않습니다 "\\\\. \PHYSICALDRIVE0"입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-287">The .NET Framework does not support direct access to physical disks through paths that are device names, such as "\\\\.\PHYSICALDRIVE0 ".</span></span>  
  
 <span data-ttu-id="20a51-288">시스템에서 파일 또는 디렉터리를 찾는 데 필요한 모든 정보를 포함 하는 절대 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-288">The absolute path includes all information required to locate a file or directory on a system.</span></span>  
  
 <span data-ttu-id="20a51-289">파일 또는로 지정 된 디렉터리 `path` 있이 필요는 없습니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-289">The file or directory specified by `path` is not required to exist.</span></span> <span data-ttu-id="20a51-290">예를 들어 c:\temp\newdir 현재 디렉터리 이면 호출 `GetFullPath` 파일 c:\temp\newdir\test.txt test.txt 같은 이름을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-290">For example, if c:\temp\newdir is the current directory, calling `GetFullPath` on a file name such as test.txt returns c:\temp\newdir\test.txt.</span></span> <span data-ttu-id="20a51-291">파일이 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-291">The file need not exist.</span></span>  
  
 <span data-ttu-id="20a51-292">그러나 경우 `path` 없는 호출자에 대 한 경로 정보를 얻을 수 있는 권한이 있어야 합니다. `path`합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-292">However, if `path` does exist, the caller must have permission to obtain path information for `path`.</span></span> <span data-ttu-id="20a51-293">멤버는 대부분 달리는 <xref:System.IO.Path> 클래스,이 메서드는 파일 시스템에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-293">Note that unlike most members of the <xref:System.IO.Path> class, this method accesses the file system.</span></span>  
  
 <span data-ttu-id="20a51-294">이 메서드는 현재 디렉터리와 현재 볼륨 정보를 완전히 정규화 사용 `path`합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-294">This method uses current directory and current volume information to fully qualify `path`.</span></span> <span data-ttu-id="20a51-295">파일을 지정 하는 경우에 이름을 `path`, `GetFullPath` 현재 디렉터리의 정규화 된 경로 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-295">If you specify a file name only in `path`, `GetFullPath` returns the fully qualified path of the current directory.</span></span>  
  
 <span data-ttu-id="20a51-296">짧은 파일 이름에 전달 하는 경우 긴 파일 이름으로 확장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-296">If you pass in a short file name, it is expanded to a long file name.</span></span>  
  
 <span data-ttu-id="20a51-297">경로 문자가 포함 된 경우 유효 하지 않은 하나 이상 포함 되어 있지 않으면 "."문자 뒤에 공백에 여러 다음으로 구문 분석 됩니다"."또는".."입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-297">If a path contains no significant characters it is invalid unless it contains one or more "." characters followed by any number of spaces, then it will be parsed as either "." or "..".</span></span>  
  
 <span data-ttu-id="20a51-298">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-298">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20a51-299">다음 코드 예제는 `GetFullPath` Windows 기반 데스크톱 플랫폼에서 메서드.</span><span class="sxs-lookup"><span data-stu-id="20a51-299">The following code example demonstrates the `GetFullPath` method on a Windows-based desktop platform.</span></span>  
  
 [!code-cpp[System.IO.Path Members#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#7)]
 [!code-csharp[System.IO.Path Members#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#7)]
 [!code-vb[System.IO.Path Members#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="20a51-300"><paramref name="path" />가 길이가 0인 문자열이거나 공백만 포함하거나 <see cref="M:System.IO.Path.GetInvalidPathChars" />에 정의된 하나 이상의 잘못된 문자를 포함하는 경우</span><span class="sxs-lookup"><span data-stu-id="20a51-300"><paramref name="path" /> is a zero-length string, contains only white space, or contains one or more of the invalid characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span></span>  
  
 <span data-ttu-id="20a51-301">또는</span><span class="sxs-lookup"><span data-stu-id="20a51-301">-or-</span></span>  
  
 <span data-ttu-id="20a51-302">절대 경로를 검색할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="20a51-302">The system could not retrieve the absolute path.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="20a51-303">호출자에게 필요한 사용 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-303">The caller does not have the required permissions.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="20a51-304"><paramref name="path" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="20a51-304"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="20a51-305"><paramref name="path" />에 볼륨 식별자(예: "c:\\")의 일부가 아닌 콜론(":")이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-305"><paramref name="path" /> contains a colon (":") that is not part of a volume identifier (for example, "c:\\").</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="20a51-306">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-306">The specified path, file name, or both exceed the system-defined maximum length.</span></span> <span data-ttu-id="20a51-307">예를 들어 Windows 기반 플랫폼에서 경로는 248자 미만이어야 하고 파일 이름은 260자 미만이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-307">For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="20a51-308">경로에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-308">for access to the path.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetFullPath">
      <MemberSignature Language="C#" Value="public static string GetFullPath (string path, string basePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFullPath(string path, string basePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetFullPath(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFullPath (path As String, basePath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetFullPath(System::String ^ path, System::String ^ basePath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="basePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <param name="basePath">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInvalidFileNameChars">
      <MemberSignature Language="C#" Value="public static char[] GetInvalidFileNameChars ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char[] GetInvalidFileNameChars() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetInvalidFileNameChars" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetInvalidFileNameChars () As Char()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;char&gt; ^ GetInvalidFileNameChars();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="20a51-309">파일 이름에 사용할 수 없는 문자가 포함된 배열을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-309">Gets an array containing the characters that are not allowed in file names.</span></span></summary>
        <returns><span data-ttu-id="20a51-310">파일 이름에 사용할 수 없는 문자가 포함된 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-310">An array containing the characters that are not allowed in file names.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20a51-311">이 메서드에서 반환 된 배열 전체 집합이 파일 및 디렉터리 이름에 유효 하지 않은 문자를 포함 하도록 보장 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-311">The array returned from this method is not guaranteed to contain the complete set of characters that are invalid in file and directory names.</span></span> <span data-ttu-id="20a51-312">잘못 된 문자가의 전체 집합은 파일 시스템에 따라 달라질 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-312">The full set of invalid characters can vary by file system.</span></span> <span data-ttu-id="20a51-313">예를 들어 Windows 기반 데스크톱 플랫폼에서 잘못 된 경로 문자가 수 I/유니코드 문자 1-31,으로 따옴표 ("), 미만 (\<), 보다 큼 (>), 파이프 (&#124;), 백스페이스 (\b), null (\0) 및 탭 (\t)입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-313">For example, on Windows-based desktop platforms, invalid path characters might include ASCII/Unicode characters 1 through 31, as well as quote ("), less than (\<), greater than (>), pipe (&#124;), backspace (\b), null (\0) and tab (\t).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20a51-314">다음 코드 예제는 <xref:System.IO.Path.GetInvalidFileNameChars%2A> 메서드 및 <xref:System.IO.Path.GetInvalidPathChars%2A> 잘못 된 문자를 검색 하는 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-314">The following code example demonstrates the <xref:System.IO.Path.GetInvalidFileNameChars%2A> method and the <xref:System.IO.Path.GetInvalidPathChars%2A> method to retrieve invalid characters.</span></span>  
  
 [!code-cpp[IO.Path.GetInvalidFile-PathChars#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.Path.GetInvalidFile-PathChars/cpp/example.cpp#1)]
 [!code-csharp[IO.Path.GetInvalidFile-PathChars#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.Path.GetInvalidFile-PathChars/CS/example.cs#1)]
 [!code-vb[IO.Path.GetInvalidFile-PathChars#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.Path.GetInvalidFile-PathChars/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInvalidPathChars">
      <MemberSignature Language="C#" Value="public static char[] GetInvalidPathChars ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char[] GetInvalidPathChars() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetInvalidPathChars" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetInvalidPathChars () As Char()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;char&gt; ^ GetInvalidPathChars();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="20a51-315">경로 이름에 사용할 수 없는 문자가 포함된 배열을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-315">Gets an array containing the characters that are not allowed in path names.</span></span></summary>
        <returns><span data-ttu-id="20a51-316">파일 이름에 사용할 수 없는 문자가 포함된 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-316">An array containing the characters that are not allowed in path names.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20a51-317">이 메서드에서 반환 된 배열 전체 집합이 파일 및 디렉터리 이름에 유효 하지 않은 문자를 포함 하도록 보장 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-317">The array returned from this method is not guaranteed to contain the complete set of characters that are invalid in file and directory names.</span></span> <span data-ttu-id="20a51-318">잘못 된 문자가의 전체 집합은 파일 시스템에 따라 달라질 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-318">The full set of invalid characters can vary by file system.</span></span> <span data-ttu-id="20a51-319">예를 들어 Windows 기반 데스크톱 플랫폼에서 잘못 된 경로 문자가 수 I/유니코드 문자 1-31,으로 따옴표 ("), 미만 (\<), 보다 큼 (>), 파이프 (&#124;), 백스페이스 (\b), null (\0) 및 탭 (\t)입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-319">For example, on Windows-based desktop platforms, invalid path characters might include ASCII/Unicode characters 1 through 31, as well as quote ("), less than (\<), greater than (>), pipe (&#124;), backspace (\b), null (\0) and tab (\t).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20a51-320">다음 코드 예제는 <xref:System.IO.Path.GetInvalidFileNameChars%2A> 메서드 및 <xref:System.IO.Path.GetInvalidPathChars%2A> 잘못 된 문자를 검색 하는 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-320">The following code example demonstrates the <xref:System.IO.Path.GetInvalidFileNameChars%2A> method and the <xref:System.IO.Path.GetInvalidPathChars%2A> method to retrieve invalid characters.</span></span>  
  
 [!code-cpp[IO.Path.GetInvalidFile-PathChars#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.Path.GetInvalidFile-PathChars/cpp/example.cpp#1)]
 [!code-csharp[IO.Path.GetInvalidFile-PathChars#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.Path.GetInvalidFile-PathChars/CS/example.cs#1)]
 [!code-vb[IO.Path.GetInvalidFile-PathChars#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.Path.GetInvalidFile-PathChars/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPathRoot">
      <MemberSignature Language="C#" Value="public static ReadOnlySpan&lt;char&gt; GetPathRoot (ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ReadOnlySpan`1&lt;char&gt; GetPathRoot(valuetype System.ReadOnlySpan`1&lt;char&gt; path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetPathRoot(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPathRoot (path As ReadOnlySpan(Of Char)) As ReadOnlySpan(Of Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ReadOnlySpan&lt;char&gt; GetPathRoot(ReadOnlySpan&lt;char&gt; path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;System.Char&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPathRoot">
      <MemberSignature Language="C#" Value="public static string GetPathRoot (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetPathRoot(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetPathRoot(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPathRoot (path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetPathRoot(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="20a51-321">루트 디렉터리 정보를 가져올 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-321">The path from which to obtain root directory information.</span></span></param>
        <summary><span data-ttu-id="20a51-322">지정된 경로의 루트 디렉터리 정보를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-322">Gets the root directory information of the specified path.</span></span></summary>
        <returns><span data-ttu-id="20a51-323"><paramref name="path" />의 루트 디렉터리(예: "C:\\")이며, <paramref name="path" />이(가) <see langword="null" />인 경우 <see langword="null" />이며 <paramref name="path" />에 루트 디렉터리 정보가 포함되어 있지 않은 경우 빈 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-323">The root directory of <paramref name="path" />, such as "C:\\", or <see langword="null" /> if <paramref name="path" /> is <see langword="null" />, or an empty string if <paramref name="path" /> does not contain root directory information.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20a51-324">이 메서드는 경로 또는 파일 이름이 존재 하는지 확인 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-324">This method does not verify that the path or file name exists.</span></span>  
  
 <span data-ttu-id="20a51-325">이 메서드에 의해 반환 되는 문자열에 대 한 가능한 패턴은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-325">Possible patterns for the string returned by this method are as follows:</span></span>  
  
-   <span data-ttu-id="20a51-326">빈 문자열 (`path` 현재 드라이브 또는 볼륨에 대 한 상대 경로 지정).</span><span class="sxs-lookup"><span data-stu-id="20a51-326">An empty string (`path` specified a relative path on the current drive or volume).</span></span>  
  
-   <span data-ttu-id="20a51-327">"/" (`path` 절대 경로가 현재 드라이브에서 지정).</span><span class="sxs-lookup"><span data-stu-id="20a51-327">"/" (`path` specified an absolute path on the current drive).</span></span>  
  
-   <span data-ttu-id="20a51-328">"X:" (`path` 여기서 X 드라이브 또는 볼륨 문자를 나타냅니다. 드라이브에 대 한 상대 경로 지정).</span><span class="sxs-lookup"><span data-stu-id="20a51-328">"X:" (`path` specified a relative path on a drive, where X represents a drive or volume letter).</span></span>  
  
-   <span data-ttu-id="20a51-329">"X: /" (`path` 절대 경로가 지정된 된 드라이브에서 지정).</span><span class="sxs-lookup"><span data-stu-id="20a51-329">"X:/" (`path` specified an absolute path on a given drive).</span></span>  
  
-   <span data-ttu-id="20a51-330">"\\\ComputerName\SharedFolder" (UNC 경로).</span><span class="sxs-lookup"><span data-stu-id="20a51-330">"\\\ComputerName\SharedFolder" (a UNC path).</span></span>  
  
 <span data-ttu-id="20a51-331">.NET Framework와 같은 장치 이름, 해당 경로 통해 실제 디스크에 대 한 직접 액세스를 지원 하지 않습니다 "\\\\. \PHYSICALDRIVE0"입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-331">The .NET Framework does not support direct access to physical disks through paths that are device names, such as "\\\\.\PHYSICALDRIVE0 ".</span></span>  
  
 <span data-ttu-id="20a51-332">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-332">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20a51-333">사용법을 설명 하는 다음 코드 예제는 `GetPathRoot` 메서드.</span><span class="sxs-lookup"><span data-stu-id="20a51-333">The following code example demonstrates a use of the `GetPathRoot` method.</span></span>  
  
 [!code-cpp[System.IO.Path Members#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#8)]
 [!code-csharp[System.IO.Path Members#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#8)]
 [!code-vb[System.IO.Path Members#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="20a51-334"><paramref name="path" />에 <see cref="M:System.IO.Path.GetInvalidPathChars" />에 정의된 잘못된 문자가 하나 이상 포함되어 있는 경우</span><span class="sxs-lookup"><span data-stu-id="20a51-334"><paramref name="path" /> contains one or more of the invalid characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span></span>  
  
 <span data-ttu-id="20a51-335">또는</span><span class="sxs-lookup"><span data-stu-id="20a51-335">-or-</span></span>  
  
 <span data-ttu-id="20a51-336"><paramref name="path" />에 <see cref="F:System.String.Empty" />가 전달된 경우</span><span class="sxs-lookup"><span data-stu-id="20a51-336"><see cref="F:System.String.Empty" /> was passed to <paramref name="path" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetRandomFileName">
      <MemberSignature Language="C#" Value="public static string GetRandomFileName ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetRandomFileName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetRandomFileName" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRandomFileName () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetRandomFileName();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="20a51-337">임의의 폴더 이름 또는 파일 이름을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-337">Returns a random folder name or file name.</span></span></summary>
        <returns><span data-ttu-id="20a51-338">임의의 폴더 이름 또는 파일 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-338">A random folder name or file name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20a51-339"><xref:System.IO.Path.GetRandomFileName%2A> 메서드 폴더 이름 또는 파일 이름으로 사용할 수 있는 강력 하 게 암호화, 임의 문자열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-339">The <xref:System.IO.Path.GetRandomFileName%2A> method returns a cryptographically strong, random string that can be used as either a folder name or a file name.</span></span> <span data-ttu-id="20a51-340">와 달리 <xref:System.IO.Path.GetTempFileName%2A>, <xref:System.IO.Path.GetRandomFileName%2A> 파일을 만들지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-340">Unlike <xref:System.IO.Path.GetTempFileName%2A>, <xref:System.IO.Path.GetRandomFileName%2A> does not create a file.</span></span> <span data-ttu-id="20a51-341">이 메서드를 대신 사용 해야 파일 시스템의 보안을 가장 중요 하며 이면 <xref:System.IO.Path.GetTempFileName%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-341">When the security of your file system is paramount, this method should be used instead of <xref:System.IO.Path.GetTempFileName%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20a51-342">다음 예제에서 출력 보기는 <xref:System.IO.Path.GetRandomFileName%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="20a51-342">The following example show output from the <xref:System.IO.Path.GetRandomFileName%2A> method.</span></span>  
  
 [!code-csharp[System.IO.Path Members#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers20.cs#20)]
 [!code-vb[System.IO.Path Members#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers20.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRelativePath">
      <MemberSignature Language="C#" Value="public static string GetRelativePath (string relativeTo, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetRelativePath(string relativeTo, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetRelativePath(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRelativePath (relativeTo As String, path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetRelativePath(System::String ^ relativeTo, System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relativeTo">To be added.</param>
        <param name="path">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTempFileName">
      <MemberSignature Language="C#" Value="public static string GetTempFileName ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTempFileName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetTempFileName" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTempFileName () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetTempFileName();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="20a51-343">디스크에 크기가 0바이트인 고유한 이름의 임시 파일을 만들고 해당 파일의 전체 경로를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-343">Creates a uniquely named, zero-byte temporary file on disk and returns the full path of that file.</span></span></summary>
        <returns><span data-ttu-id="20a51-344">임시 파일의 전체 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-344">The full path of the temporary file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20a51-345">이 메서드는 임시 파일을 만듭니다는 합니다. TMP 파일 확장명입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-345">This method creates a temporary file with a .TMP file extension.</span></span> <span data-ttu-id="20a51-346">사용자의 임시 폴더 경로 내에서 임시 파일을 만들에서 반환 되는 <xref:System.IO.Path.GetTempPath%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="20a51-346">The temporary file is created within the user’s temporary folder, which is the path returned by the <xref:System.IO.Path.GetTempPath%2A> method.</span></span>  
  
 <span data-ttu-id="20a51-347"><xref:System.IO.Path.GetTempFileName%2A> 메서드로 인해 발생 한 <xref:System.IO.IOException> 이전의 임시 파일을 삭제 하지 않고 65535 개 이상 파일을 만들려면 사용 되는 경우.</span><span class="sxs-lookup"><span data-stu-id="20a51-347">The <xref:System.IO.Path.GetTempFileName%2A> method will raise an <xref:System.IO.IOException> if it is used to create more than 65535 files without deleting previous temporary files.</span></span>  
  
 <span data-ttu-id="20a51-348"><xref:System.IO.Path.GetTempFileName%2A> 메서드로 인해 발생 한 <xref:System.IO.IOException> 없는 고유한 임시 파일 이름을 사용할 수 있는 경우.</span><span class="sxs-lookup"><span data-stu-id="20a51-348">The <xref:System.IO.Path.GetTempFileName%2A> method will raise an <xref:System.IO.IOException> if no unique temporary file name is available.</span></span> <span data-ttu-id="20a51-349">이 오류를 해결 하려면 모든 필요 없는 임시 파일을 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-349">To resolve this error, delete all unneeded temporary files.</span></span>  
  
 <span data-ttu-id="20a51-350">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-350">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="20a51-351">사용할 수 있는 고유한 임시 파일 이름이 없는 경우와 같은 I/O 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="20a51-351">An I/O error occurs, such as no unique temporary file name is available.</span></span>  
  
 <span data-ttu-id="20a51-352">\- 또는 -</span><span class="sxs-lookup"><span data-stu-id="20a51-352">\- or -</span></span>  
  
 <span data-ttu-id="20a51-353">이 메서드로 임시 파일을 만들지 못한 경우</span><span class="sxs-lookup"><span data-stu-id="20a51-353">This method was unable to create a temporary file.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="20a51-354">임시 디렉터리에 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-354">for writing to the temporary directory.</span></span> <span data-ttu-id="20a51-355">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="20a51-355">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetTempPath">
      <MemberSignature Language="C#" Value="public static string GetTempPath ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTempPath() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetTempPath" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTempPath () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetTempPath();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="20a51-356">현재 사용자의 임시 폴더 경로를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-356">Returns the path of the current user's temporary folder.</span></span></summary>
        <returns><span data-ttu-id="20a51-357">백슬래시로 끝나는 임시 폴더 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-357">The path to the temporary folder, ending with a backslash.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20a51-358">이 메서드는 다음 순서에 환경 변수의 있는지 여부를 확인 하 고 첫 번째 경로 찾을 수를 사용 하 여:</span><span class="sxs-lookup"><span data-stu-id="20a51-358">This method checks for the existence of environment variables in the following order and uses the first path found:</span></span>  
  
1.  <span data-ttu-id="20a51-359">TMP 환경 변수로 지정 된 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-359">The path specified by the TMP environment variable.</span></span>  
  
2.  <span data-ttu-id="20a51-360">TEMP 환경 변수로 지정 된 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-360">The path specified by the TEMP environment variable.</span></span>  
  
3.  <span data-ttu-id="20a51-361">사용자 프로필 환경 변수로 지정 된 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-361">The path specified by the USERPROFILE environment variable.</span></span>  
  
4.  <span data-ttu-id="20a51-362">Windows 디렉터리입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-362">The Windows directory.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20a51-363">다음 코드에서는 <xref:System.IO.Path.GetTempPath%2A> 메서드를 호출하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-363">The following code shows how to call the <xref:System.IO.Path.GetTempPath%2A> method.</span></span>  
  
```vb  
result As String = Path.GetTempPath()  
Console.WriteLine(result)  
```  
  
```csharp  
string result = Path.GetTempPath();  
Console.WriteLine(result);  
```  
  
 <span data-ttu-id="20a51-364">이 예에서는 다음과 유사한 출력을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-364">This example produces output similar to the following.</span></span>  
  
```  
C:\Users\UserName\AppData\Local\Temp\  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="20a51-365">호출자에게 필요한 사용 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-365">The caller does not have the required permissions.</span></span></exception>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission"><span data-ttu-id="20a51-366">에 대 한 무제한 액세스 환경 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-366">for unrestricted access to environment variables.</span></span> <span data-ttu-id="20a51-367">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="20a51-367">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="HasExtension">
      <MemberSignature Language="C#" Value="public static bool HasExtension (ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool HasExtension(valuetype System.ReadOnlySpan`1&lt;char&gt; path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.HasExtension(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HasExtension (path As ReadOnlySpan(Of Char)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool HasExtension(ReadOnlySpan&lt;char&gt; path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasExtension">
      <MemberSignature Language="C#" Value="public static bool HasExtension (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool HasExtension(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.HasExtension(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HasExtension (path As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool HasExtension(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="20a51-368">확장명을 검색할 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-368">The path to search for an extension.</span></span></param>
        <summary><span data-ttu-id="20a51-369">경로에 파일 확장명이 포함된지를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-369">Determines whether a path includes a file name extension.</span></span></summary>
        <returns>
          <span data-ttu-id="20a51-370">경로의 마지막 디렉터리 구분 문자(\\\ 또는 /) 또는 볼륨 구분 기호 문자(:) 다음에 나오는 문자에 마침표(.)와 하나 이상의 문자가 포함되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-370"><see langword="true" /> if the characters that follow the last directory separator (\\\ or /) or volume separator (:) in the path include a period (.) followed by one or more characters; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20a51-371">끝에서 시작 `path`, 마침표 (.)와 문자를 하나 이상에 대 한이 메서드를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-371">Starting from the end of `path`, this method searches for a period (.) followed by at least one character.</span></span> <span data-ttu-id="20a51-372">이 패턴은 하기 전에 발견 되는 <xref:System.IO.Path.DirectorySeparatorChar>, <xref:System.IO.Path.AltDirectorySeparatorChar>, 또는 <xref:System.IO.Path.VolumeSeparatorChar> 문자가 발견 되는이 메서드가 반환 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-372">If this pattern is found before a <xref:System.IO.Path.DirectorySeparatorChar>, <xref:System.IO.Path.AltDirectorySeparatorChar>, or <xref:System.IO.Path.VolumeSeparatorChar> character is encountered, this method returns `true`.</span></span>  
  
 <span data-ttu-id="20a51-373">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-373">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20a51-374">다음 코드 예제에서는 `HasExtension` 메서드.</span><span class="sxs-lookup"><span data-stu-id="20a51-374">The following code example demonstrates the use of the `HasExtension` method.</span></span>  
  
 [!code-cpp[System.IO.Path Members#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#11)]
 [!code-csharp[System.IO.Path Members#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#11)]
 [!code-vb[System.IO.Path Members#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="20a51-375"><paramref name="path" />에 <see cref="M:System.IO.Path.GetInvalidPathChars" />에 정의된 잘못된 문자가 하나 이상 포함되어 있는 경우</span><span class="sxs-lookup"><span data-stu-id="20a51-375"><paramref name="path" /> contains one or more of the invalid characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InvalidPathChars">
      <MemberSignature Language="C#" Value="public static readonly char[] InvalidPathChars;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly char[] InvalidPathChars" />
      <MemberSignature Language="DocId" Value="F:System.IO.Path.InvalidPathChars" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InvalidPathChars As Char() " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly cli::array &lt;char&gt; ^ InvalidPathChars;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("see GetInvalidPathChars and GetInvalidFileNameChars methods.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20a51-376"><see cref="T:System.IO.Path" /> 클래스의 멤버에 전달되는 경로 문자열 인수에 사용할 수 없는 플랫폼 특정 문자 배열을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-376">Provides a platform-specific array of characters that cannot be specified in path string arguments passed to members of the <see cref="T:System.IO.Path" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20a51-377">이 메서드에서 반환 된 배열 전체 집합이 파일 및 디렉터리 이름에 유효 하지 않은 문자를 포함 하도록 보장 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-377">The array returned from this method is not guaranteed to contain the complete set of characters that are invalid in file and directory names.</span></span> <span data-ttu-id="20a51-378">잘못 된 문자가의 전체 집합은 파일 시스템에 따라 달라질 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-378">The full set of invalid characters can vary by file system.</span></span> <span data-ttu-id="20a51-379">예를 들어 Windows 기반 데스크톱 플랫폼에서 잘못 된 경로 문자가 수 I/유니코드 문자 1-31,으로 따옴표 ("), 미만 (\<), 보다 큼 (>), 파이프 (&#124;), 백스페이스 (\b), null (\0) 및 탭 (\t)입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-379">For example, on Windows-based desktop platforms, invalid path characters might include ASCII/Unicode characters 1 through 31, as well as quote ("), less than (\<), greater than (>), pipe (&#124;), backspace (\b), null (\0) and tab (\t).</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="20a51-380">사용 하지 마십시오 <xref:System.IO.Path.InvalidPathChars> 한다면 쿼리 프로그램 코드를 신뢰할 수 없는 코드와 같은 응용 프로그램 도메인에서 실행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-380">Do not use <xref:System.IO.Path.InvalidPathChars> if you think your code might execute in the same application domain as untrusted code.</span></span> <span data-ttu-id="20a51-381"><xref:System.IO.Path.InvalidPathChars> 배열 이므로 해당 요소를 덮어쓸 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-381"><xref:System.IO.Path.InvalidPathChars> is an array, so its elements can be overwritten.</span></span> <span data-ttu-id="20a51-382">신뢰할 수 없는 코드의 요소를 덮어쓰면 <xref:System.IO.Path.InvalidPathChars>, 코드 악용 될 수 있는 방식으로 작동 하지 않을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-382">If untrusted code overwrites elements of <xref:System.IO.Path.InvalidPathChars>, it might cause your code to malfunction in ways that could be exploited.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20a51-383">다음 코드 예제에서는 `InvalidPathChars` 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-383">The following code example demonstrates the use of the `InvalidPathChars` property.</span></span>  
  
 [!code-cpp[System.IO.Path Members#13](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#13)]
 [!code-csharp[System.IO.Path Members#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#13)]
 [!code-vb[System.IO.Path Members#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPathFullyQualified">
      <MemberSignature Language="C#" Value="public static bool IsPathFullyQualified (ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPathFullyQualified(valuetype System.ReadOnlySpan`1&lt;char&gt; path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.IsPathFullyQualified(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPathFullyQualified (path As ReadOnlySpan(Of Char)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPathFullyQualified(ReadOnlySpan&lt;char&gt; path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPathFullyQualified">
      <MemberSignature Language="C#" Value="public static bool IsPathFullyQualified (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPathFullyQualified(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.IsPathFullyQualified(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPathFullyQualified (path As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPathFullyQualified(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPathRooted">
      <MemberSignature Language="C#" Value="public static bool IsPathRooted (ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPathRooted(valuetype System.ReadOnlySpan`1&lt;char&gt; path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.IsPathRooted(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPathRooted (path As ReadOnlySpan(Of Char)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPathRooted(ReadOnlySpan&lt;char&gt; path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPathRooted">
      <MemberSignature Language="C#" Value="public static bool IsPathRooted (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPathRooted(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.IsPathRooted(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPathRooted (path As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPathRooted(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="20a51-384">테스트할 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-384">The path to test.</span></span></param>
        <summary><span data-ttu-id="20a51-385">지정된 경로 문자열에 루트가 포함된지를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-385">Gets a value indicating whether the specified path string contains a root.</span></span></summary>
        <returns>
          <span data-ttu-id="20a51-386"><paramref name="path" />에 루트가 포함되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-386"><see langword="true" /> if <paramref name="path" /> contains a root; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20a51-387"><xref:System.IO.Path.IsPathRooted%2A> 메서드 반환 `true` 첫 번째 문자 디렉터리 구분 기호 문자 인지와 같은 "\\", 경로 드라이브 문자와 콜론 (:)로 시작 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="20a51-387">The <xref:System.IO.Path.IsPathRooted%2A> method returns `true` if the first character is a directory separator character such as "\\", or if the path starts with a drive letter and colon (:).</span></span> <span data-ttu-id="20a51-388">예를 들어 반환 `true` 에 대 한 `path` 와 같은 문자열 "\\\MyDir\\\MyFile.txt", "c:\\\MyDir", 또는 "C:MyDir"입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-388">For example, it returns `true` for `path` strings such as "\\\MyDir\\\MyFile.txt", "C:\\\MyDir", or "C:MyDir".</span></span> <span data-ttu-id="20a51-389">반환 `false` 에 대 한 `path` "MyDir"와 같은 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-389">It returns `false` for `path` strings such as "MyDir".</span></span>  
  
 <span data-ttu-id="20a51-390">이 메서드는 경로 또는 파일 이름이 존재 하는지 확인 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-390">This method does not verify that the path or file name exists.</span></span>  
  
 <span data-ttu-id="20a51-391">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-391">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20a51-392">다음 코드 예제에서는 방법을 `IsPathRooted` 세 개의 문자열을 테스트 하려면 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-392">The following code example demonstrates how the `IsPathRooted` method can be used to test three strings.</span></span>  
  
 [!code-cpp[System.IO.Path Members#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#12)]
 [!code-csharp[System.IO.Path Members#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#12)]
 [!code-vb[System.IO.Path Members#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="20a51-393"><paramref name="path" />에 <see cref="M:System.IO.Path.GetInvalidPathChars" />에 정의된 잘못된 문자가 하나 이상 포함되어 있는 경우</span><span class="sxs-lookup"><span data-stu-id="20a51-393"><paramref name="path" /> contains one or more of the invalid characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public static string Join (ReadOnlySpan&lt;char&gt; path1, ReadOnlySpan&lt;char&gt; path2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Join(valuetype System.ReadOnlySpan`1&lt;char&gt; path1, valuetype System.ReadOnlySpan`1&lt;char&gt; path2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.Join(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Join (path1 As ReadOnlySpan(Of Char), path2 As ReadOnlySpan(Of Char)) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Join(ReadOnlySpan&lt;char&gt; path1, ReadOnlySpan&lt;char&gt; path2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path1" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="path2" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="path1">To be added.</param>
        <param name="path2">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public static string Join (ReadOnlySpan&lt;char&gt; path1, ReadOnlySpan&lt;char&gt; path2, ReadOnlySpan&lt;char&gt; path3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Join(valuetype System.ReadOnlySpan`1&lt;char&gt; path1, valuetype System.ReadOnlySpan`1&lt;char&gt; path2, valuetype System.ReadOnlySpan`1&lt;char&gt; path3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.Join(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Join (path1 As ReadOnlySpan(Of Char), path2 As ReadOnlySpan(Of Char), path3 As ReadOnlySpan(Of Char)) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Join(ReadOnlySpan&lt;char&gt; path1, ReadOnlySpan&lt;char&gt; path2, ReadOnlySpan&lt;char&gt; path3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path1" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="path2" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="path3" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="path1">To be added.</param>
        <param name="path2">To be added.</param>
        <param name="path3">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PathSeparator">
      <MemberSignature Language="C#" Value="public static readonly char PathSeparator;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly char PathSeparator" />
      <MemberSignature Language="DocId" Value="F:System.IO.Path.PathSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PathSeparator As Char " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly char PathSeparator;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20a51-394">환경 변수에서 경로 문자열을 구분하는 데 사용되는 플랫폼 특정 구분 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-394">A platform-specific separator character used to separate path strings in environment variables.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20a51-395">이 필드의 값의 세미콜론 (;)는 Windows 기반 데스크톱 플랫폼에서 기본적으로 하지만 다른 플랫폼에서 다를 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-395">On Windows-based desktop platforms, the value of this field is the semicolon (;) by default, but might vary on other platforms.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20a51-396">다음 코드 예제에서는 `PathSeparator` 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-396">The following code example demonstrates the use of the `PathSeparator` field.</span></span>  
  
 [!code-cpp[System.IO.Path Members#13](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#13)]
 [!code-csharp[System.IO.Path Members#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#13)]
 [!code-vb[System.IO.Path Members#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryJoin">
      <MemberSignature Language="C#" Value="public static bool TryJoin (ReadOnlySpan&lt;char&gt; path1, ReadOnlySpan&lt;char&gt; path2, Span&lt;char&gt; destination, out int charsWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryJoin(valuetype System.ReadOnlySpan`1&lt;char&gt; path1, valuetype System.ReadOnlySpan`1&lt;char&gt; path2, valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.TryJoin(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.Span{System.Char},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryJoin (path1 As ReadOnlySpan(Of Char), path2 As ReadOnlySpan(Of Char), destination As Span(Of Char), ByRef charsWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryJoin(ReadOnlySpan&lt;char&gt; path1, ReadOnlySpan&lt;char&gt; path2, Span&lt;char&gt; destination, [Runtime::InteropServices::Out] int % charsWritten);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path1" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="path2" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="charsWritten" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="path1">To be added.</param>
        <param name="path2">To be added.</param>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryJoin">
      <MemberSignature Language="C#" Value="public static bool TryJoin (ReadOnlySpan&lt;char&gt; path1, ReadOnlySpan&lt;char&gt; path2, ReadOnlySpan&lt;char&gt; path3, Span&lt;char&gt; destination, out int charsWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryJoin(valuetype System.ReadOnlySpan`1&lt;char&gt; path1, valuetype System.ReadOnlySpan`1&lt;char&gt; path2, valuetype System.ReadOnlySpan`1&lt;char&gt; path3, valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.TryJoin(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.Span{System.Char},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryJoin (path1 As ReadOnlySpan(Of Char), path2 As ReadOnlySpan(Of Char), path3 As ReadOnlySpan(Of Char), destination As Span(Of Char), ByRef charsWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryJoin(ReadOnlySpan&lt;char&gt; path1, ReadOnlySpan&lt;char&gt; path2, ReadOnlySpan&lt;char&gt; path3, Span&lt;char&gt; destination, [Runtime::InteropServices::Out] int % charsWritten);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path1" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="path2" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="path3" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="charsWritten" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="path1">To be added.</param>
        <param name="path2">To be added.</param>
        <param name="path3">To be added.</param>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VolumeSeparatorChar">
      <MemberSignature Language="C#" Value="public static readonly char VolumeSeparatorChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly char VolumeSeparatorChar" />
      <MemberSignature Language="DocId" Value="F:System.IO.Path.VolumeSeparatorChar" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly VolumeSeparatorChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly char VolumeSeparatorChar;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20a51-397">플랫폼 특정 볼륨 구분 기호 문자를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-397">Provides a platform-specific volume separator character.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20a51-398">이 필드의 값은 콜론 (:) Macintosh, Windows 및 UNIX 운영 체제에서 슬래시 (/).</span><span class="sxs-lookup"><span data-stu-id="20a51-398">The value of this field is a colon (:) on Windows and Macintosh, and a slash (/) on UNIX operating systems.</span></span> <span data-ttu-id="20a51-399">예: "c:\windows" 또는 "MacVolume:System 폴더" 경로 구문 분석에 가장 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-399">This is most useful for parsing paths such as "c:\windows" or "MacVolume:System Folder".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20a51-400">다음 코드 예제에서는 `VolumeSeparatorChar` 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="20a51-400">The following code example demonstrates the use of the `VolumeSeparatorChar` field.</span></span>  
  
 [!code-cpp[System.IO.Path Members#13](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#13)]
 [!code-csharp[System.IO.Path Members#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#13)]
 [!code-vb[System.IO.Path Members#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>