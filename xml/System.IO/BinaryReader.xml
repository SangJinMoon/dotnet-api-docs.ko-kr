<Type Name="BinaryReader" FullName="System.IO.BinaryReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="22a75f9b356ec6c35a6b7fdfaaf1447ea2b69f02" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class BinaryReader : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BinaryReader extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IO.BinaryReader" />
  <TypeSignature Language="VB.NET" Value="Public Class BinaryReader&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class BinaryReader : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.IO</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="4c6e9-101">Reads primitive data types as binary values in a specific encoding.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4c6e9-101">Reads primitive data types as binary values in a specific encoding.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c6e9-102"><xref:System.IO.BinaryReader> 클래스 기본 데이터 형식을 스트림에서 읽기를 단순화 하는 메서드를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-102">The <xref:System.IO.BinaryReader> class provides methods that simplify reading primitive data types from a stream.</span></span> <span data-ttu-id="4c6e9-103">예를 들어, 사용할 수는 <xref:System.IO.BinaryReader.ReadBoolean%2A> 메서드를 부울 값으로 다음 바이트를 읽고가 1 바이트 스트림 내의 현재 위치를 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-103">For example, you can use the <xref:System.IO.BinaryReader.ReadBoolean%2A> method to read the next byte as a Boolean value and advance the current position in the stream by one byte.</span></span> <span data-ttu-id="4c6e9-104">클래스는 서로 다른 데이터 형식을 지 원하는 읽기 메서드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-104">The class includes read methods that support different data types.</span></span>  
  
 <span data-ttu-id="4c6e9-105">새 인스턴스를 만들 때는 <xref:System.IO.BinaryReader> 클래스를 삭제 한 후 열어 스트림을 두려면 것인지와에서 읽기 스트림을 제공 하 고 필요에 따라는 인코딩 유형을 지정는 <xref:System.IO.BinaryReader> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-105">When you create a new instance of the <xref:System.IO.BinaryReader> class, you provide the stream to read from, and optionally specify the type of encoding and whether to leave the stream open after disposing the <xref:System.IO.BinaryReader> object.</span></span> <span data-ttu-id="4c6e9-106">인코딩 유형을 지정 하지 않으면 u t F-8이 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-106">If you do not specify an encoding type, UTF-8 is used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4c6e9-107">이 형식이 구현 하는 <xref:System.IDisposable> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-107">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="4c6e9-108">형식을 사용 하 여 마쳤으면는 삭제 해야의 직접 또는 간접적으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-108">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="4c6e9-109">직접 형식의 dispose를 호출 해당 <xref:System.IDisposable.Dispose%2A> 에서 메서드는 `try` / `catch` 블록입니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-109">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="4c6e9-110">작업을 삭제할 하지 직접,를 사용 하 여 언어 구문와 같은 `using` (C#에서) 또는 `Using` (Visual Basic)에서는 합니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-110">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="4c6e9-111">자세한 내용은의 "를 사용 하는 개체는 구현 IDisposable" 섹션을 참조 하십시오.는 <xref:System.IDisposable> 인터페이스 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-111">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c6e9-112">다음 코드 예제에는 저장 하 고 파일에서 응용 프로그램 설정을 검색 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-112">The following code example demonstrates how to store and retrieve application settings in a file.</span></span>  
  
 [!code-csharp[System.IO.BinaryReaderWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4c6e9-113">Initializes a new instance of the <see cref="T:System.IO.BinaryReader" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-113">Initializes a new instance of the <see cref="T:System.IO.BinaryReader" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BinaryReader (System.IO.Stream input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.#ctor(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (input As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BinaryReader(System::IO::Stream ^ input);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="input" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="4c6e9-114">The input stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-114">The input stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c6e9-115">Initializes a new instance of the <see cref="T:System.IO.BinaryReader" /> class based on the specified stream and using UTF-8 encoding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-115">Initializes a new instance of the <see cref="T:System.IO.BinaryReader" /> class based on the specified stream and using UTF-8 encoding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c6e9-116">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-116">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c6e9-117">다음 코드 예제에는 저장 하 고 파일에서 응용 프로그램 설정을 검색 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-117">The following code example demonstrates how to store and retrieve application settings in a file.</span></span>  
  
 [!code-csharp[System.IO.BinaryReaderWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4c6e9-118">The stream does not support reading, is <see langword="null" />, or is already closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-118">The stream does not support reading, is <see langword="null" />, or is already closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.UTF8Encoding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BinaryReader (System.IO.Stream input, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream input, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.#ctor(System.IO.Stream,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BinaryReader(System::IO::Stream ^ input, System::Text::Encoding ^ encoding);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="input" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="4c6e9-119">The input stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-119">The input stream.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="4c6e9-120">The character encoding to use.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-120">The character encoding to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c6e9-121">Initializes a new instance of the <see cref="T:System.IO.BinaryReader" /> class based on the specified stream and character encoding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-121">Initializes a new instance of the <see cref="T:System.IO.BinaryReader" /> class based on the specified stream and character encoding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c6e9-122">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-122">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4c6e9-123">The stream does not support reading, is <see langword="null" />, or is already closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-123">The stream does not support reading, is <see langword="null" />, or is already closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4c6e9-124">
            <paramref name="encoding" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-124">
              <paramref name="encoding" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BinaryReader (System.IO.Stream input, System.Text.Encoding encoding, bool leaveOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream input, class System.Text.Encoding encoding, bool leaveOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BinaryReader(System::IO::Stream ^ input, System::Text::Encoding ^ encoding, bool leaveOpen);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="input" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="leaveOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="4c6e9-125">The input stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-125">The input stream.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="4c6e9-126">The character encoding to use.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-126">The character encoding to use.</span>
          </span>
        </param>
        <param name="leaveOpen">
          <span data-ttu-id="4c6e9-127">
            <see langword="true" /> to leave the stream open after the <see cref="T:System.IO.BinaryReader" /> object is disposed; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-127">
              <see langword="true" /> to leave the stream open after the <see cref="T:System.IO.BinaryReader" /> object is disposed; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c6e9-128">Initializes a new instance of the <see cref="T:System.IO.BinaryReader" /> class based on the specified stream and character encoding, and optionally leaves the stream open.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-128">Initializes a new instance of the <see cref="T:System.IO.BinaryReader" /> class based on the specified stream and character encoding, and optionally leaves the stream open.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4c6e9-129">The stream does not support reading, is <see langword="null" />, or is already closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-129">The stream does not support reading, is <see langword="null" />, or is already closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4c6e9-130">
            <paramref name="encoding" /> or <paramref name="input" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-130">
              <paramref name="encoding" /> or <paramref name="input" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BaseStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream BaseStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream BaseStream" />
      <MemberSignature Language="DocId" Value="P:System.IO.BinaryReader.BaseStream" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BaseStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IO::Stream ^ BaseStream { System::IO::Stream ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4c6e9-131">Exposes access to the underlying stream of the <see cref="T:System.IO.BinaryReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-131">Exposes access to the underlying stream of the <see cref="T:System.IO.BinaryReader" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4c6e9-132">
            <see langword="BinaryReader" />와 관련된 내부 스트림입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-132">The underlying stream associated with the <see langword="BinaryReader" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="4c6e9-133">읽는 동안 또는 사용 하는 동안 스트림 내부를 사용 하 여 `BinaryReader` 데이터가 손실 되거나 손상 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-133">Using the underlying stream while reading or while using the `BinaryReader` can cause data loss and corruption.</span></span> <span data-ttu-id="4c6e9-134">예를 들어 같은 바이트를 두 번 이상 읽을 바이트 건너뛸 수 또는 문자 읽기 예측 하지 못할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-134">For example, the same bytes might be read more than once, bytes might be skipped, or character reading might become unpredictable.</span></span>  
  
 <span data-ttu-id="4c6e9-135">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-135">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c6e9-136">다음 코드 예제에서는 읽고 쓰는 방법을 보여 줍니다. `Double` 메모리를 사용 하 여 데이터를는 `BinaryReader` 및 <xref:System.IO.BinaryWriter> 클래스의 맨 위에 <xref:System.IO.MemoryStream> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-136">The following code example shows how to read and write `Double` data to memory by using the `BinaryReader` and <xref:System.IO.BinaryWriter> classes on top of the <xref:System.IO.MemoryStream> class.</span></span> <span data-ttu-id="4c6e9-137">`MemoryStream` 읽기 및 쓰기만 `Byte` 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-137">`MemoryStream` only reads and writes `Byte` data.</span></span>  
  
 [!code-cpp[System.IO.BinaryReaderWriter.RWDouble#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWDouble/CPP/rwdouble.cpp#1)]
 [!code-csharp[System.IO.BinaryReaderWriter.RWDouble#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWDouble/CS/rwdouble.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter.RWDouble#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWDouble/VB/rwdouble.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4c6e9-138">Closes the current reader and the underlying stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-138">Closes the current reader and the underlying stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c6e9-139">이 구현 `Close` 호출은 <xref:System.IO.BinaryReader.Dispose%2A> 전달 메서드는 `true` 값입니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-139">This implementation of `Close` calls the <xref:System.IO.BinaryReader.Dispose%2A> method passing a `true` value.</span></span>  
  
 <span data-ttu-id="4c6e9-140">명시적으로 호출 하지 않으면 스트림을 내부 인코더가 플러시되지 것입니다 <xref:System.IO.Stream.Flush%2A> 또는 `Close`합니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-140">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.IO.Stream.Flush%2A> or `Close`.</span></span> <span data-ttu-id="4c6e9-141">설정 <xref:System.IO.StreamWriter.AutoFlush%2A> 를 `true` 스트림 버퍼에서 데이터를 플러시할 수는 있지만 인코더 상태 플러시되지 것입니다 있다는 것을 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-141">Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="4c6e9-142">따라서 올바르게 문자의 다음 블록을 인코딩할 수 있도록 (부분 문자)의 상태를 유지 하기 위해 인코더 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-142">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="4c6e9-143">이 시나리오는 u t f 8와 UTF7 인코더는 인접 한 문자를 받은 후 특정 문자를 인코딩할만 수 있는 위치에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-143">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4c6e9-144">Releases the resources used by the <see cref="T:System.IO.BinaryReader" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-144">Releases the resources used by the <see cref="T:System.IO.BinaryReader" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4c6e9-145">Releases all resources used by the current instance of the <see cref="T:System.IO.BinaryReader" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-145">Releases all resources used by the current instance of the <see cref="T:System.IO.BinaryReader" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c6e9-146">`Dispose` 사용을 마치면 <xref:System.IO.BinaryReader>를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-146">Call `Dispose` when you are finished using the <xref:System.IO.BinaryReader>.</span></span> <span data-ttu-id="4c6e9-147">`Dispose` 메서드를 사용하면 <xref:System.IO.BinaryReader>를 사용할 수 없게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-147">The `Dispose` method leaves the <xref:System.IO.BinaryReader> in an unusable state.</span></span> <span data-ttu-id="4c6e9-148">호출한 후 `Dispose`에 대 한 모든 참조를 해제 해야는 <xref:System.IO.BinaryReader> 가비지 수집기는 메모리를 회수할 수 있도록 하는 <xref:System.IO.BinaryReader> 차지한 합니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-148">After calling `Dispose`, you must release all references to the <xref:System.IO.BinaryReader> so the garbage collector can reclaim the memory that the <xref:System.IO.BinaryReader> was occupying.</span></span>  
  
 <span data-ttu-id="4c6e9-149">자세한 내용은 참조 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 및 [Dispose 메서드를 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-149">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4c6e9-150">`Dispose`에 대한 마지막 참조를 해제하기 전에 반드시 <xref:System.IO.BinaryReader>를 호출하십시오.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-150">Always call `Dispose` before you release your last reference to the <xref:System.IO.BinaryReader>.</span></span> <span data-ttu-id="4c6e9-151">이렇게 하지 않으면 가비지 수집기가 <xref:System.IO.BinaryReader> 개체의 `Finalize` 메서드를 호출할 때까지 사용 중인 리소스가 해제되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-151">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.IO.BinaryReader> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="4c6e9-152">
            <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-152">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c6e9-153">Releases the unmanaged resources used by the <see cref="T:System.IO.BinaryReader" /> class and optionally releases the managed resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-153">Releases the unmanaged resources used by the <see cref="T:System.IO.BinaryReader" /> class and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c6e9-154">이 메서드는 `Dispose` 및 <xref:System.Object.Finalize%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-154">This method is called by `Dispose` and <xref:System.Object.Finalize%2A>.</span></span> <span data-ttu-id="4c6e9-155">기본적으로이 메서드는 다음과 같이 지정 됩니다.는 `disposing` 매개 변수로 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-155">By default, this method specifies the `disposing` parameter as `true`.</span></span> <span data-ttu-id="4c6e9-156"><xref:System.Object.Finalize%2A> 지정 된 `disposing` 매개 변수로 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-156"><xref:System.Object.Finalize%2A> specifies the `disposing` parameter as `false`.</span></span>  
  
 <span data-ttu-id="4c6e9-157">`disposing` 매개 변수가 `true`인 경우 이 메서드는 이 <xref:System.IO.BinaryReader>에서 참조하는 관리 개체가 보유하고 있는 리소스를 모두 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-157">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.BinaryReader> references.</span></span> <span data-ttu-id="4c6e9-158">이 메서드는 참조되는 각 개체의 `Dispose` 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-158">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="4c6e9-159">
              <see cref="M:System.IO.BinaryReader.Dispose(System.Boolean)" />는 다른 개체에서 여러 번 호출할 수 있습니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4c6e9-159">
                <see cref="M:System.IO.BinaryReader.Dispose(System.Boolean)" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="4c6e9-160">이 메서드를 재정의할 때 이전 호출에서 삭제 된 개체를 참조 하지 않도록 주의 <see langword="Dispose" />합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4c6e9-160">When overriding this method, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="4c6e9-161">이 메서드를 구현 하는 방법에 대 한 자세한 내용은 참조 [Dispose 메서드를 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4c6e9-161">For more information about how to implement this method, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="4c6e9-162">에 대 한 자세한 내용은 <see cref="M:System.IDisposable.Dispose" /> 및 <see cref="M:System.Object.Finalize" />, 참조 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md)합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4c6e9-162">For more information about <see cref="M:System.IDisposable.Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="FillBuffer">
      <MemberSignature Language="C#" Value="protected virtual void FillBuffer (int numBytes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void FillBuffer(int32 numBytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.FillBuffer(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub FillBuffer (numBytes As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void FillBuffer(int numBytes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="numBytes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="numBytes">
          <span data-ttu-id="4c6e9-163">The number of bytes to be read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-163">The number of bytes to be read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c6e9-164">Fills the internal buffer with the specified number of bytes read from the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-164">Fills the internal buffer with the specified number of bytes read from the stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c6e9-165">내부 버퍼 크기는 16에서 반환 되는 값 사이의 보다 큰 값 <xref:System.Text.Encoding.GetMaxByteCount%2A> 대 한 인코딩을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-165">The internal buffer size is the larger value between 16 and the value returned by <xref:System.Text.Encoding.GetMaxByteCount%2A> for the specified encoding.</span></span>  
  
 <span data-ttu-id="4c6e9-166">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-166">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.EndOfStreamException">
          <span data-ttu-id="4c6e9-167">The end of the stream is reached before <paramref name="numBytes" /> could be read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-167">The end of the stream is reached before <paramref name="numBytes" /> could be read.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4c6e9-168">An I/O error occurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-168">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4c6e9-169">Requested <paramref name="numBytes" /> is larger than the internal buffer size.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-169">Requested <paramref name="numBytes" /> is larger than the internal buffer size.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PeekChar">
      <MemberSignature Language="C#" Value="public virtual int PeekChar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 PeekChar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.PeekChar" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PeekChar () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int PeekChar();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4c6e9-170">Returns the next available character and does not advance the byte or character position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-170">Returns the next available character and does not advance the byte or character position.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c6e9-171">The next available character, or -1 if no more characters are available or the stream does not support seeking.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-171">The next available character, or -1 if no more characters are available or the stream does not support seeking.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c6e9-172">서로게이트 문자 스트림 사용 하 여에서 예상할 수 하는 경우는 <xref:System.IO.BinaryReader.ReadChars%2A> 메서드를 원래 위치로 복원 스트림을 다음으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-172">If surrogate characters can be expected in the stream use the <xref:System.IO.BinaryReader.ReadChars%2A> method, then set the stream back to the original position.</span></span>  
  
 <span data-ttu-id="4c6e9-173">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-173">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4c6e9-174">An I/O error occurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-174">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4c6e9-175">The current character cannot be decoded into the internal character buffer by using the <see cref="T:System.Text.Encoding" /> selected for the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-175">The current character cannot be decoded into the internal character buffer by using the <see cref="T:System.Text.Encoding" /> selected for the stream.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Read">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4c6e9-176">Reads bytes from the underlying stream and advances the current position of the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-176">Reads bytes from the underlying stream and advances the current position of the stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public virtual int Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Read () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Read();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4c6e9-177">Reads characters from the underlying stream and advances the current position of the stream in accordance with the <see langword="Encoding" /> used and the specific character being read from the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-177">Reads characters from the underlying stream and advances the current position of the stream in accordance with the <see langword="Encoding" /> used and the specific character being read from the stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c6e9-178">The next character from the input stream, or -1 if no characters are currently available.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-178">The next character from the input stream, or -1 if no characters are currently available.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c6e9-179"><xref:System.IO.BinaryReader> 읽기에 실패 한 후에 파일 위치를 복원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-179"><xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.</span></span>  
  
 <span data-ttu-id="4c6e9-180">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-180">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c6e9-181">다음 예제에서는 읽고 메모리를 사용 하 여 백업 저장소로 데이터를 쓰는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-181">The following example shows how to read and write data using memory as a backing store.</span></span> <span data-ttu-id="4c6e9-182">이 예제에서는 콘솔에 경로 문자는 잘못 된 파일의 목록이 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-182">This example displays a list of invalid file path characters to the console.</span></span> <span data-ttu-id="4c6e9-183">모든 잘못 된 파일 경로 문자 목록을 표시 하는 코드가 시도 하지만 모든 문자가 문자 집합에서 벗어납니다 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-183">Although the code tries to display a list of all invalid file path characters, not all of the characters are within the displayable set of characters.</span></span> <span data-ttu-id="4c6e9-184">잘못 된 문자의 목록을 시스템에 따라 달라질 수 있으므로이 코드에 대 한 출력도 달라질 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-184">Because the list of invalid characters can vary based on the system, output for this code may also vary.</span></span>  
  
 [!code-cpp[System.IO.BinaryReaderWriter.RWChar2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChar2/CPP/rwreadchar.cpp#1)]
 [!code-csharp[System.IO.BinaryReaderWriter.RWChar2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChar2/CS/rwreadchar.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter.RWChar2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChar2/VB/rwreadchar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4c6e9-185">An I/O error occurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-185">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4c6e9-186">The stream is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-186">The stream is closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public virtual int Read (Span&lt;byte&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read(valuetype System.Span`1&lt;unsigned int8&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.Read(System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Read (buffer As Span(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Read(Span&lt;System::Byte&gt; buffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public virtual int Read (Span&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read(valuetype System.Span`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.Read(System.Span{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Read (buffer As Span(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Read(Span&lt;char&gt; buffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public virtual int Read (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Read (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Read(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="4c6e9-187">The buffer to read data into.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-187">The buffer to read data into.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="4c6e9-188">The starting point in the buffer at which to begin reading into the buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-188">The starting point in the buffer at which to begin reading into the buffer.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="4c6e9-189">The number of bytes to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-189">The number of bytes to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c6e9-190">Reads the specified number of bytes from the stream, starting from a specified point in the byte array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-190">Reads the specified number of bytes from the stream, starting from a specified point in the byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c6e9-191">The number of bytes read into <paramref name="buffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-191">The number of bytes read into <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="4c6e9-192">This might be less than the number of bytes requested if that many bytes are not available, or it might be zero if the end of the stream is reached.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-192">This might be less than the number of bytes requested if that many bytes are not available, or it might be zero if the end of the stream is reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c6e9-193"><xref:System.IO.BinaryReader> 읽기 작업에 실패 한 후에 파일 위치를 복원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-193"><xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read operation.</span></span>  
  
 <span data-ttu-id="4c6e9-194">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-194">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c6e9-195">다음 예제에서는 이진 데이터를 백업 저장소로 메모리를 사용 하 여 작성 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-195">The following example shows how to write binary data by using memory as a backing store.</span></span> <span data-ttu-id="4c6e9-196">데이터를 올바르게 작성 하는지 여부를 나타내는 콘솔에 메시지를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-196">It displays a message to the console that indicates whether the data was written correctly.</span></span>  
  
 [!code-csharp[System.IO.BinaryReaderWriter.RWBytes2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWBytes2/CS/rwreadbytes.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter.RWBytes2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWBytes2/VB/rwreadbytes.vb#1)]  
  
 <span data-ttu-id="4c6e9-197">이 예제에서는 파일의 내용을 읽고 각 바이트의 숫자 값을 16 열 형식으로 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-197">This example reads the contents of a file and displays each byte's numeric value in 16-column format.</span></span> <span data-ttu-id="4c6e9-198">읽고 있는 파일의 끝에서 검색 될 때는 <xref:System.IO.BinaryReader.Read%2A> 메서드 0 바이트를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-198">The end of the file that is being read is detected when the <xref:System.IO.BinaryReader.Read%2A> method returns zero bytes.</span></span>  
  
 [!code-csharp[System.IO.BinaryReaderWriter#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source5.cs#6)]
 [!code-vb[System.IO.BinaryReaderWriter#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source5.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4c6e9-199">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-199">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span>
          </span>
          <span data-ttu-id="4c6e9-200">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-200">-or-</span>
          </span>
          <span data-ttu-id="4c6e9-201">The number of decoded characters to read is greater than <paramref name="count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-201">The number of decoded characters to read is greater than <paramref name="count" />.</span>
          </span>
          <span data-ttu-id="4c6e9-202">This can happen if a Unicode decoder returns fallback characters or a surrogate pair.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-202">This can happen if a Unicode decoder returns fallback characters or a surrogate pair.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4c6e9-203">
            <paramref name="buffer" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-203">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4c6e9-204">
            <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-204">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4c6e9-205">The stream is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-205">The stream is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4c6e9-206">An I/O error occurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-206">An I/O error occurs.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public virtual int Read (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.Read(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Read (buffer As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Read(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="4c6e9-207">The buffer to read data into.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-207">The buffer to read data into.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="4c6e9-208">The starting point in the buffer at which to begin reading into the buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-208">The starting point in the buffer at which to begin reading into the buffer.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="4c6e9-209">The number of characters to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-209">The number of characters to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c6e9-210">Reads the specified number of characters from the stream, starting from a specified point in the character array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-210">Reads the specified number of characters from the stream, starting from a specified point in the character array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c6e9-211">The total number of characters read into the buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-211">The total number of characters read into the buffer.</span>
          </span>
          <span data-ttu-id="4c6e9-212">This might be less than the number of characters requested if that many characters are not currently available, or it might be zero if the end of the stream is reached.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-212">This might be less than the number of characters requested if that many characters are not currently available, or it might be zero if the end of the stream is reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c6e9-213"><xref:System.IO.BinaryReader> 읽기 작업에 실패 한 후에 파일 위치를 복원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-213"><xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read operation.</span></span>  
  
 <span data-ttu-id="4c6e9-214">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-214">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c6e9-215">다음 예제에서는 읽고 메모리를 사용 하 여 백업 저장소로 데이터를 쓰는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-215">The following example shows how to read and write data using memory as a backing store.</span></span> <span data-ttu-id="4c6e9-216">이 예제에서는 콘솔에 경로 문자는 잘못 된 파일의 목록이 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-216">This example displays a list of invalid file path characters to the console.</span></span> <span data-ttu-id="4c6e9-217">모든 잘못 된 파일 경로 문자 목록을 표시 하는 코드가 시도 하지만 모든 문자가 문자 집합에서 벗어납니다 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-217">Although the code tries to display a list of all invalid file path characters, not all of the characters are within the displayable set of characters.</span></span> <span data-ttu-id="4c6e9-218">잘못 된 문자의 목록을 시스템에 따라 달라질 수 있으므로이 코드에 대 한 출력도 달라질 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-218">Because the list of invalid characters can vary based on the system, output for this code may also vary.</span></span>  
  
 [!code-cpp[System.IO.BinaryReaderWriter.RWChars2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChars2/CPP/rwreadchars.cpp#1)]
 [!code-csharp[System.IO.BinaryReaderWriter.RWChars2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChars2/CS/rwreadchars.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter.RWChars2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChars2/VB/rwreadchars.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4c6e9-219">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-219">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span>
          </span>
          <span data-ttu-id="4c6e9-220">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-220">-or-</span>
          </span>
          <span data-ttu-id="4c6e9-221">The number of decoded characters to read is greater than <paramref name="count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-221">The number of decoded characters to read is greater than <paramref name="count" />.</span>
          </span>
          <span data-ttu-id="4c6e9-222">This can happen if a Unicode decoder returns fallback characters or a surrogate pair.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-222">This can happen if a Unicode decoder returns fallback characters or a surrogate pair.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4c6e9-223">
            <paramref name="buffer" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-223">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4c6e9-224">
            <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-224">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4c6e9-225">The stream is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-225">The stream is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4c6e9-226">An I/O error occurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-226">An I/O error occurs.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Read7BitEncodedInt">
      <MemberSignature Language="C#" Value="protected internal int Read7BitEncodedInt ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance int32 Read7BitEncodedInt() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.Read7BitEncodedInt" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function Read7BitEncodedInt () As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; int Read7BitEncodedInt();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4c6e9-227">Reads in a 32-bit integer in compressed format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-227">Reads in a 32-bit integer in compressed format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c6e9-228">A 32-bit integer in compressed format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-228">A 32-bit integer in compressed format.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c6e9-229"><xref:System.IO.BinaryReader> 읽기에 실패 한 후에 파일 위치를 복원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-229"><xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.</span></span>  
  
 <span data-ttu-id="4c6e9-230">7 비트에서 정수 채 맞는 경우 정수는 1 바이트의 합니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-230">If the integer will fit in seven bits, the integer takes only one byte of space.</span></span> <span data-ttu-id="4c6e9-231">정수는를 통해 기록 된 해야 <xref:System.IO.BinaryWriter.Write7BitEncodedInt%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-231">The integer is expected to have been written through <xref:System.IO.BinaryWriter.Write7BitEncodedInt%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="4c6e9-232">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-232">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.EndOfStreamException">
          <span data-ttu-id="4c6e9-233">The end of the stream is reached.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-233">The end of the stream is reached.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4c6e9-234">The stream is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-234">The stream is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4c6e9-235">An I/O error occurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-235">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="4c6e9-236">The stream is corrupted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-236">The stream is corrupted.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadBoolean">
      <MemberSignature Language="C#" Value="public virtual bool ReadBoolean ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReadBoolean() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.ReadBoolean" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadBoolean () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ReadBoolean();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4c6e9-237">Reads a <see langword="Boolean" /> value from the current stream and advances the current position of the stream by one byte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-237">Reads a <see langword="Boolean" /> value from the current stream and advances the current position of the stream by one byte.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c6e9-238">
            <see langword="true" /> if the byte is nonzero; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-238">
              <see langword="true" /> if the byte is nonzero; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c6e9-239"><xref:System.IO.BinaryReader> 읽기에 실패 한 후에 파일 위치를 복원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-239"><xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.</span></span>  
  
 <span data-ttu-id="4c6e9-240">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-240">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c6e9-241">다음 코드 예제에는 저장 하 고 파일에서 응용 프로그램 설정을 검색 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-241">The following code example demonstrates how to store and retrieve application settings in a file.</span></span>  
  
 [!code-csharp[System.IO.BinaryReaderWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.EndOfStreamException">
          <span data-ttu-id="4c6e9-242">The end of the stream is reached.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-242">The end of the stream is reached.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4c6e9-243">The stream is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-243">The stream is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4c6e9-244">An I/O error occurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-244">An I/O error occurs.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadByte">
      <MemberSignature Language="C#" Value="public virtual byte ReadByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8 ReadByte() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.ReadByte" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadByte () As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Byte ReadByte();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4c6e9-245">Reads the next byte from the current stream and advances the current position of the stream by one byte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-245">Reads the next byte from the current stream and advances the current position of the stream by one byte.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c6e9-246">The next byte read from the current stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-246">The next byte read from the current stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c6e9-247"><xref:System.IO.BinaryReader> 읽기에 실패 한 후에 파일 위치를 복원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-247"><xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.</span></span>  
  
 <span data-ttu-id="4c6e9-248">데이터 서식 충돌 때문에이 메서드를 사용 하 여 다음 인코딩을 사용 하 여 권장 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-248">Because of data formatting conflicts, using this method with the following encodings is not recommended:</span></span>  
  
-   <span data-ttu-id="4c6e9-249">UTF-7</span><span class="sxs-lookup"><span data-stu-id="4c6e9-249">UTF-7</span></span>  
  
-   <span data-ttu-id="4c6e9-250">ISO-2022-JP</span><span class="sxs-lookup"><span data-stu-id="4c6e9-250">ISO-2022-JP</span></span>  
  
-   <span data-ttu-id="4c6e9-251">ISCII</span><span class="sxs-lookup"><span data-stu-id="4c6e9-251">ISCII</span></span>  
  
 <span data-ttu-id="4c6e9-252">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-252">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c6e9-253">다음 코드 예제에서는 메모리를 사용 하 여 백업 저장소로 이진 데이터를 작성 한 다음 데이터 올바르게 작성 되었다는 확인 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-253">The following code example shows how to write binary data using memory as a backing store, and then verify that the data was written correctly.</span></span>  
  
 [!code-cpp[System.IO.BinaryReaderWriter.RWByte#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWByte/CPP/rwbyte.cpp#1)]
 [!code-csharp[System.IO.BinaryReaderWriter.RWByte#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWByte/CS/rwbyte.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter.RWByte#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWByte/VB/rwbyte.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.EndOfStreamException">
          <span data-ttu-id="4c6e9-254">The end of the stream is reached.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-254">The end of the stream is reached.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4c6e9-255">The stream is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-255">The stream is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4c6e9-256">An I/O error occurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-256">An I/O error occurs.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadBytes">
      <MemberSignature Language="C#" Value="public virtual byte[] ReadBytes (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] ReadBytes(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.ReadBytes(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadBytes (count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ ReadBytes(int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count">
          <span data-ttu-id="4c6e9-257">The number of bytes to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-257">The number of bytes to read.</span>
          </span>
          <span data-ttu-id="4c6e9-258">This value must be 0 or a non-negative number or an exception will occur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-258">This value must be 0 or a non-negative number or an exception will occur.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c6e9-259">Reads the specified number of bytes from the current stream into a byte array and advances the current position by that number of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-259">Reads the specified number of bytes from the current stream into a byte array and advances the current position by that number of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c6e9-260">A byte array containing data read from the underlying stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-260">A byte array containing data read from the underlying stream.</span>
          </span>
          <span data-ttu-id="4c6e9-261">This might be less than the number of bytes requested if the end of the stream is reached.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-261">This might be less than the number of bytes requested if the end of the stream is reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c6e9-262"><xref:System.IO.BinaryReader> 읽기 작업에 실패 한 후에 파일 위치를 복원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-262"><xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read operation.</span></span>  
  
 <span data-ttu-id="4c6e9-263">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-263">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c6e9-264">다음 코드 예제에서는 메모리를 사용 하 여 백업 저장소로 이진 데이터를 작성 한 다음 데이터 올바르게 작성 되었다는 확인 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-264">The following code example shows how to write binary data using memory as a backing store, and then verify that the data was written correctly.</span></span>  
  
 [!code-cpp[System.IO.BinaryReaderWriter.RWBytes1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWBytes1/CPP/rwbytes.cpp#1)]
 [!code-csharp[System.IO.BinaryReaderWriter.RWBytes1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWBytes1/CS/rwbytes.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter.RWBytes1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWBytes1/VB/rwbytes.vb#1)]  
  
 <span data-ttu-id="4c6e9-265">이 예제에서는 파일의 내용을 읽고 덤프 텍스트로 콘솔에 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-265">This example reads the contents of a file and displays it to the console as dump text.</span></span> <span data-ttu-id="4c6e9-266">읽고 있는 파일의 끝에서 검색 될 때의 길이 <xref:System.Byte> 에서 반환 된 배열 <xref:System.IO.BinaryReader.ReadBytes%2A> 0.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-266">The end of the file that is being read is detected when the length of the <xref:System.Byte> array returned from <xref:System.IO.BinaryReader.ReadBytes%2A> is zero.</span></span>  
  
 [!code-csharp[System.IO.BinaryReaderWriter#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source5.cs#6)]
 [!code-vb[System.IO.BinaryReaderWriter#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source5.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4c6e9-267">The number of decoded characters to read is greater than <paramref name="count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-267">The number of decoded characters to read is greater than <paramref name="count" />.</span>
          </span>
          <span data-ttu-id="4c6e9-268">This can happen if a Unicode decoder returns fallback characters or a surrogate pair.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-268">This can happen if a Unicode decoder returns fallback characters or a surrogate pair.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4c6e9-269">An I/O error occurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-269">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4c6e9-270">The stream is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-270">The stream is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4c6e9-271">
            <paramref name="count" /> is negative.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-271">
              <paramref name="count" /> is negative.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadChar">
      <MemberSignature Language="C#" Value="public virtual char ReadChar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char ReadChar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.ReadChar" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadChar () As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual char ReadChar();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4c6e9-272">Reads the next character from the current stream and advances the current position of the stream in accordance with the <see langword="Encoding" /> used and the specific character being read from the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-272">Reads the next character from the current stream and advances the current position of the stream in accordance with the <see langword="Encoding" /> used and the specific character being read from the stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c6e9-273">A character read from the current stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-273">A character read from the current stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c6e9-274">경우는 <xref:System.IO.BinaryReader.ReadChar%2A> 예외가 스트림의 서로게이트 문자를 읽을 하려고 하는 메서드는 발생 하 고 스트림 내의 위치 진행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-274">If the <xref:System.IO.BinaryReader.ReadChar%2A> method attempts to read a surrogate character in the stream an exception will be raised and the position in the stream will advance.</span></span> <span data-ttu-id="4c6e9-275">위치 하기 전에 원래 위치에 복원 됩니다 <xref:System.IO.BinaryReader.ReadChar%2A> 경우 호출 된 스트림을 검색할 수 있는지; 그러나 스트림이 검색할 수 없는 경우 위치 수정 되지는 합니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-275">The position is restored to the original location before <xref:System.IO.BinaryReader.ReadChar%2A> was called if the stream is seekable; however, if the stream is unseekable, the position will not be corrected.</span></span> <span data-ttu-id="4c6e9-276">서로게이트 문자 스트림이 나올 수를 사용 하 여는 <xref:System.IO.BinaryReader.ReadChars%2A> 메서드 대신 합니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-276">If surrogate characters can be expected in the stream, use the <xref:System.IO.BinaryReader.ReadChars%2A> method instead.</span></span>  
  
 <span data-ttu-id="4c6e9-277">데이터 서식 충돌 때문에이 메서드를 사용 하 여 다음 인코딩을 사용 하 여 권장 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-277">Because of data formatting conflicts, using this method with the following encodings is not recommended:</span></span>  
  
-   <span data-ttu-id="4c6e9-278">UTF-7</span><span class="sxs-lookup"><span data-stu-id="4c6e9-278">UTF-7</span></span>  
  
-   <span data-ttu-id="4c6e9-279">ISO-2022-JP</span><span class="sxs-lookup"><span data-stu-id="4c6e9-279">ISO-2022-JP</span></span>  
  
-   <span data-ttu-id="4c6e9-280">ISCII</span><span class="sxs-lookup"><span data-stu-id="4c6e9-280">ISCII</span></span>  
  
 <span data-ttu-id="4c6e9-281">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-281">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c6e9-282">다음 코드 예제에서는 읽고 메모리를 사용 하 여 백업 저장소로 데이터를 쓰는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-282">The following code example shows how to read and write data using memory as a backing store.</span></span>  
  
 [!code-cpp[System.IO.BinaryReaderWriter.RWChar1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChar1/CPP/rwchar.cpp#1)]
 [!code-csharp[System.IO.BinaryReaderWriter.RWChar1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChar1/CS/rwchar.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter.RWChar1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChar1/VB/rwchar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.EndOfStreamException">
          <span data-ttu-id="4c6e9-283">The end of the stream is reached.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-283">The end of the stream is reached.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4c6e9-284">The stream is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-284">The stream is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4c6e9-285">An I/O error occurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-285">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4c6e9-286">A surrogate character was read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-286">A surrogate character was read.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName="ReadChars">
      <MemberSignature Language="C#" Value="public virtual char[] ReadChars (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char[] ReadChars(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.ReadChars(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadChars (count As Integer) As Char()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;char&gt; ^ ReadChars(int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count">
          <span data-ttu-id="4c6e9-287">The number of characters to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-287">The number of characters to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c6e9-288">Reads the specified number of characters from the current stream, returns the data in a character array, and advances the current position in accordance with the <see langword="Encoding" /> used and the specific character being read from the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-288">Reads the specified number of characters from the current stream, returns the data in a character array, and advances the current position in accordance with the <see langword="Encoding" /> used and the specific character being read from the stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c6e9-289">A character array containing data read from the underlying stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-289">A character array containing data read from the underlying stream.</span>
          </span>
          <span data-ttu-id="4c6e9-290">This might be less than the number of characters requested if the end of the stream is reached.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-290">This might be less than the number of characters requested if the end of the stream is reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c6e9-291"><xref:System.IO.BinaryReader> 읽기 작업에 실패 한 후에 파일 위치를 복원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-291"><xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read operation.</span></span>  
  
 <span data-ttu-id="4c6e9-292">일부 드문 경우에서 네트워크 스트림에서 읽을 때의 <xref:System.IO.BinaryReader.ReadChars%2A> 경우 메서드는 스트림에서 의도 하지 않은 문자가 읽을 수는 <xref:System.IO.BinaryReader> 유니코드를 사용 하 여 생성 된 인코딩.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-292">When reading from network streams, in some rare cases, the <xref:System.IO.BinaryReader.ReadChars%2A> method might read an extra character from the stream if the <xref:System.IO.BinaryReader> was constructed with Unicode encoding.</span></span> <span data-ttu-id="4c6e9-293">이 문제가 발생 하는 경우 사용할 수 있습니다는 <xref:System.IO.BinaryReader.ReadBytes%2A> 고정 길이 바이트 배열에 읽고 후 해당 배열을 전달 메서드는 <xref:System.IO.BinaryReader.ReadChars%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-293">If this occurs, you can use the <xref:System.IO.BinaryReader.ReadBytes%2A> method to read a fixed-length byte array, and then pass that array to the <xref:System.IO.BinaryReader.ReadChars%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c6e9-294">다음 코드 예제에서는 읽고 메모리를 사용 하 여 백업 저장소로 데이터를 쓰는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-294">The following code example shows how to read and write data using memory as a backing store.</span></span>  
  
 [!code-cpp[System.IO.BinaryReaderWriter.RWChars1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChars1/CPP/rwchars.cpp#1)]
 [!code-csharp[System.IO.BinaryReaderWriter.RWChars1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChars1/CS/rwchars.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter.RWChars1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChars1/VB/rwchars.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4c6e9-295">The number of decoded characters to read is greater than <paramref name="count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-295">The number of decoded characters to read is greater than <paramref name="count" />.</span>
          </span>
          <span data-ttu-id="4c6e9-296">This can happen if a Unicode decoder returns fallback characters or a surrogate pair.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-296">This can happen if a Unicode decoder returns fallback characters or a surrogate pair.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4c6e9-297">The stream is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-297">The stream is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4c6e9-298">An I/O error occurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-298">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4c6e9-299">
            <paramref name="count" /> is negative.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-299">
              <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName="ReadDecimal">
      <MemberSignature Language="C#" Value="public virtual decimal ReadDecimal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Decimal ReadDecimal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.ReadDecimal" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadDecimal () As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Decimal ReadDecimal();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4c6e9-300">Reads a decimal value from the current stream and advances the current position of the stream by sixteen bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-300">Reads a decimal value from the current stream and advances the current position of the stream by sixteen bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c6e9-301">A decimal value read from the current stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-301">A decimal value read from the current stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c6e9-302"><xref:System.IO.BinaryReader> 읽기에 실패 한 후에 파일 위치를 복원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-302"><xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.</span></span>  
  
 <span data-ttu-id="4c6e9-303">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-303">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.EndOfStreamException">
          <span data-ttu-id="4c6e9-304">The end of the stream is reached.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-304">The end of the stream is reached.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4c6e9-305">The stream is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-305">The stream is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4c6e9-306">An I/O error occurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-306">An I/O error occurs.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadDouble">
      <MemberSignature Language="C#" Value="public virtual double ReadDouble ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ReadDouble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.ReadDouble" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadDouble () As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual double ReadDouble();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4c6e9-307">Reads an 8-byte floating point value from the current stream and advances the current position of the stream by eight bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-307">Reads an 8-byte floating point value from the current stream and advances the current position of the stream by eight bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c6e9-308">An 8-byte floating point value read from the current stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-308">An 8-byte floating point value read from the current stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c6e9-309"><xref:System.IO.BinaryReader> 읽기에 실패 한 후에 파일 위치를 복원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-309"><xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.</span></span>  
  
 <span data-ttu-id="4c6e9-310">`BinaryReader` 이 데이터 형식은 little endian 형식으로 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-310">`BinaryReader` reads this data type in little-endian format.</span></span>  
  
 <span data-ttu-id="4c6e9-311">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-311">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c6e9-312">다음 코드 예제에서는 읽고 쓰는 방법을 보여 줍니다. `Double` 메모리를 사용 하 여 데이터를는 `BinaryReader` 및 <xref:System.IO.BinaryWriter> 클래스의 맨 위에 <xref:System.IO.MemoryStream> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-312">The following code example shows how to read and write `Double` data to memory by using the `BinaryReader` and <xref:System.IO.BinaryWriter> classes on top of the <xref:System.IO.MemoryStream> class.</span></span> <span data-ttu-id="4c6e9-313">`MemoryStream` 읽기 및 쓰기만 `Byte` 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-313">`MemoryStream` only reads and writes `Byte` data.</span></span>  
  
 [!code-cpp[System.IO.BinaryReaderWriter.RWDouble#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWDouble/CPP/rwdouble.cpp#1)]
 [!code-csharp[System.IO.BinaryReaderWriter.RWDouble#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWDouble/CS/rwdouble.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter.RWDouble#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWDouble/VB/rwdouble.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.EndOfStreamException">
          <span data-ttu-id="4c6e9-314">The end of the stream is reached.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-314">The end of the stream is reached.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4c6e9-315">The stream is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-315">The stream is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4c6e9-316">An I/O error occurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-316">An I/O error occurs.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadInt16">
      <MemberSignature Language="C#" Value="public virtual short ReadInt16 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int16 ReadInt16() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.ReadInt16" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadInt16 () As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual short ReadInt16();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4c6e9-317">Reads a 2-byte signed integer from the current stream and advances the current position of the stream by two bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-317">Reads a 2-byte signed integer from the current stream and advances the current position of the stream by two bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c6e9-318">A 2-byte signed integer read from the current stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-318">A 2-byte signed integer read from the current stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c6e9-319"><xref:System.IO.BinaryReader> 읽기에 실패 한 후에 파일 위치를 복원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-319"><xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.</span></span>  
  
 <span data-ttu-id="4c6e9-320">`BinaryReader` 이 데이터 형식은 little endian 형식으로 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-320">`BinaryReader` reads this data type in little-endian format.</span></span>  
  
 <span data-ttu-id="4c6e9-321">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-321">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.EndOfStreamException">
          <span data-ttu-id="4c6e9-322">The end of the stream is reached.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-322">The end of the stream is reached.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4c6e9-323">The stream is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-323">The stream is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4c6e9-324">An I/O error occurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-324">An I/O error occurs.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadInt32">
      <MemberSignature Language="C#" Value="public virtual int ReadInt32 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadInt32() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.ReadInt32" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadInt32 () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ReadInt32();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4c6e9-325">Reads a 4-byte signed integer from the current stream and advances the current position of the stream by four bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-325">Reads a 4-byte signed integer from the current stream and advances the current position of the stream by four bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c6e9-326">A 4-byte signed integer read from the current stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-326">A 4-byte signed integer read from the current stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c6e9-327"><xref:System.IO.BinaryReader> 읽기에 실패 한 후에 파일 위치를 복원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-327"><xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.</span></span>  
  
 <span data-ttu-id="4c6e9-328"><xref:System.IO.BinaryReader> 이 데이터 형식은 little endian 형식으로 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-328"><xref:System.IO.BinaryReader> reads this data type in little-endian format.</span></span>  
  
 <span data-ttu-id="4c6e9-329">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-329">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c6e9-330">다음 코드 예제에는 저장 하 고 파일에서 응용 프로그램 설정을 검색 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-330">The following code example demonstrates how to store and retrieve application settings in a file.</span></span>  
  
 [!code-csharp[System.IO.BinaryReaderWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.EndOfStreamException">
          <span data-ttu-id="4c6e9-331">The end of the stream is reached.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-331">The end of the stream is reached.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4c6e9-332">The stream is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-332">The stream is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4c6e9-333">An I/O error occurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-333">An I/O error occurs.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadInt64">
      <MemberSignature Language="C#" Value="public virtual long ReadInt64 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 ReadInt64() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.ReadInt64" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadInt64 () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual long ReadInt64();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4c6e9-334">Reads an 8-byte signed integer from the current stream and advances the current position of the stream by eight bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-334">Reads an 8-byte signed integer from the current stream and advances the current position of the stream by eight bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c6e9-335">An 8-byte signed integer read from the current stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-335">An 8-byte signed integer read from the current stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c6e9-336"><xref:System.IO.BinaryReader> 읽기에 실패 한 후에 파일 위치를 복원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-336"><xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.</span></span>  
  
 <span data-ttu-id="4c6e9-337">`BinaryReader` 이 데이터 형식은 little endian 형식으로 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-337">`BinaryReader` reads this data type in little-endian format.</span></span>  
  
 <span data-ttu-id="4c6e9-338">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-338">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.EndOfStreamException">
          <span data-ttu-id="4c6e9-339">The end of the stream is reached.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-339">The end of the stream is reached.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4c6e9-340">The stream is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-340">The stream is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4c6e9-341">An I/O error occurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-341">An I/O error occurs.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadSByte">
      <MemberSignature Language="C#" Value="public virtual sbyte ReadSByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int8 ReadSByte() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.ReadSByte" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadSByte () As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::SByte ReadSByte();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4c6e9-342">Reads a signed byte from this stream and advances the current position of the stream by one byte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-342">Reads a signed byte from this stream and advances the current position of the stream by one byte.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c6e9-343">A signed byte read from the current stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-343">A signed byte read from the current stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c6e9-344"><xref:System.IO.BinaryReader> 읽기에 실패 한 후에 파일 위치를 복원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-344"><xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.</span></span>  
  
 <span data-ttu-id="4c6e9-345">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-345">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.EndOfStreamException">
          <span data-ttu-id="4c6e9-346">The end of the stream is reached.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-346">The end of the stream is reached.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4c6e9-347">The stream is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-347">The stream is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4c6e9-348">An I/O error occurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-348">An I/O error occurs.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadSingle">
      <MemberSignature Language="C#" Value="public virtual float ReadSingle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 ReadSingle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.ReadSingle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadSingle () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual float ReadSingle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4c6e9-349">Reads a 4-byte floating point value from the current stream and advances the current position of the stream by four bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-349">Reads a 4-byte floating point value from the current stream and advances the current position of the stream by four bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c6e9-350">A 4-byte floating point value read from the current stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-350">A 4-byte floating point value read from the current stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c6e9-351"><xref:System.IO.BinaryReader> 읽기에 실패 한 후에 파일 위치를 복원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-351"><xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.</span></span>  
  
 <span data-ttu-id="4c6e9-352">`BinaryReader` 이 데이터 형식은 little endian 형식으로 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-352">`BinaryReader` reads this data type in little-endian format.</span></span>  
  
 <span data-ttu-id="4c6e9-353">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-353">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c6e9-354">다음 코드 예제에는 저장 하 고 파일에서 응용 프로그램 설정을 검색 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-354">The following code example demonstrates how to store and retrieve application settings in a file.</span></span>  
  
 [!code-csharp[System.IO.BinaryReaderWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.EndOfStreamException">
          <span data-ttu-id="4c6e9-355">The end of the stream is reached.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-355">The end of the stream is reached.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4c6e9-356">The stream is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-356">The stream is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4c6e9-357">An I/O error occurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-357">An I/O error occurs.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadString">
      <MemberSignature Language="C#" Value="public virtual string ReadString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.ReadString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ReadString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4c6e9-358">Reads a string from the current stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-358">Reads a string from the current stream.</span>
          </span>
          <span data-ttu-id="4c6e9-359">The string is prefixed with the length, encoded as an integer seven bits at a time.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-359">The string is prefixed with the length, encoded as an integer seven bits at a time.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c6e9-360">The string being read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-360">The string being read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c6e9-361"><xref:System.IO.BinaryReader> 읽기에 실패 한 후에 파일 위치를 복원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-361"><xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.</span></span>  
  
 <span data-ttu-id="4c6e9-362">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-362">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c6e9-363">다음 코드 예제에는 저장 하 고 파일에서 응용 프로그램 설정을 검색 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-363">The following code example demonstrates how to store and retrieve application settings in a file.</span></span>  
  
 [!code-csharp[System.IO.BinaryReaderWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.EndOfStreamException">
          <span data-ttu-id="4c6e9-364">The end of the stream is reached.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-364">The end of the stream is reached.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4c6e9-365">The stream is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-365">The stream is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4c6e9-366">An I/O error occurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-366">An I/O error occurs.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadUInt16">
      <MemberSignature Language="C#" Value="public virtual ushort ReadUInt16 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int16 ReadUInt16() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.ReadUInt16" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadUInt16 () As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::UInt16 ReadUInt16();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4c6e9-367">Reads a 2-byte unsigned integer from the current stream using little-endian encoding and advances the position of the stream by two bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-367">Reads a 2-byte unsigned integer from the current stream using little-endian encoding and advances the position of the stream by two bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c6e9-368">A 2-byte unsigned integer read from this stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-368">A 2-byte unsigned integer read from this stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c6e9-369"><xref:System.IO.BinaryReader> 읽기에 실패 한 후에 파일 위치를 복원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-369"><xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.</span></span>  
  
 <span data-ttu-id="4c6e9-370">`BinaryReader` 이 데이터 형식은 little endian 형식으로 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-370">`BinaryReader` reads this data type in little-endian format.</span></span>  
  
 <span data-ttu-id="4c6e9-371">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-371">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.EndOfStreamException">
          <span data-ttu-id="4c6e9-372">The end of the stream is reached.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-372">The end of the stream is reached.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4c6e9-373">The stream is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-373">The stream is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4c6e9-374">An I/O error occurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-374">An I/O error occurs.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadUInt32">
      <MemberSignature Language="C#" Value="public virtual uint ReadUInt32 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int32 ReadUInt32() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.ReadUInt32" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadUInt32 () As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::UInt32 ReadUInt32();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4c6e9-375">Reads a 4-byte unsigned integer from the current stream and advances the position of the stream by four bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-375">Reads a 4-byte unsigned integer from the current stream and advances the position of the stream by four bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c6e9-376">A 4-byte unsigned integer read from this stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-376">A 4-byte unsigned integer read from this stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c6e9-377"><xref:System.IO.BinaryReader> 읽기에 실패 한 후에 파일 위치를 복원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-377"><xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.</span></span>  
  
 <span data-ttu-id="4c6e9-378">`BinaryReader` 이 데이터 형식은 little endian 형식으로 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-378">`BinaryReader` reads this data type in little-endian format.</span></span>  
  
 <span data-ttu-id="4c6e9-379">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-379">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.EndOfStreamException">
          <span data-ttu-id="4c6e9-380">The end of the stream is reached.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-380">The end of the stream is reached.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4c6e9-381">The stream is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-381">The stream is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4c6e9-382">An I/O error occurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-382">An I/O error occurs.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadUInt64">
      <MemberSignature Language="C#" Value="public virtual ulong ReadUInt64 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int64 ReadUInt64() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryReader.ReadUInt64" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadUInt64 () As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::UInt64 ReadUInt64();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4c6e9-383">Reads an 8-byte unsigned integer from the current stream and advances the position of the stream by eight bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-383">Reads an 8-byte unsigned integer from the current stream and advances the position of the stream by eight bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c6e9-384">An 8-byte unsigned integer read from this stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-384">An 8-byte unsigned integer read from this stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c6e9-385"><xref:System.IO.BinaryReader> 읽기에 실패 한 후에 파일 위치를 복원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-385"><xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.</span></span>  
  
 <span data-ttu-id="4c6e9-386">`BinaryReader` 이 데이터 형식은 little endian 형식으로 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-386">`BinaryReader` reads this data type in little-endian format.</span></span>  
  
 <span data-ttu-id="4c6e9-387">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="4c6e9-387">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.EndOfStreamException">
          <span data-ttu-id="4c6e9-388">The end of the stream is reached.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-388">The end of the stream is reached.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="4c6e9-389">An I/O error occurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-389">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4c6e9-390">The stream is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c6e9-390">The stream is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>