<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="FileOptions.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac53cd0cb30e64d712a889a4367aa63c0ac515ff921.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3cd0cb30e64d712a889a4367aa63c0ac515ff921</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IO.FileOptions">
          <source>Represents advanced options for creating a <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph> 개체를 만들기 위한 고급 옵션을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.FileOptions">
          <source>The following example shows how to use the Asynchronous value when creating a file stream.</source>
          <target state="translated">다음 예제에서는 파일 스트림을 만드는 때 비동기 값을 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="F:System.IO.FileOptions.Asynchronous">
          <source>Indicates that a file can be used for asynchronous reading and writing.</source>
          <target state="translated">파일을 비동기 읽기 및 쓰기에 사용할 수 있음을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="F:System.IO.FileOptions.DeleteOnClose">
          <source>Indicates that a file is automatically deleted when it is no longer in use.</source>
          <target state="translated">파일이 더 이상 사용되지 않는 경우 자동으로 삭제됨을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="F:System.IO.FileOptions.Encrypted">
          <source>Indicates that a file is encrypted and can be decrypted only by using the same user account used for encryption.</source>
          <target state="translated">파일이 암호화되어 있고 암호화할 때 사용한 사용자 계정으로만 해독할 수 있음을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="F:System.IO.FileOptions.None">
          <source>Indicates that no additional options should be used when creating a <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph> 개체를 만들 때 추가 옵션을 사용할 수 없음을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="F:System.IO.FileOptions.RandomAccess">
          <source>Indicates that the file is accessed randomly.</source>
          <target state="translated">파일이 임의로 액세스됨을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="F:System.IO.FileOptions.RandomAccess">
          <source>The system can use this as a hint to optimize file caching.</source>
          <target state="translated">시스템에서는 이 필드를 힌트로 사용하여 파일 캐싱을 최적화할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="F:System.IO.FileOptions.SequentialScan">
          <source>Indicates that the file is to be accessed sequentially from beginning to end.</source>
          <target state="translated">파일이 처음부터 끝까지 순차적으로 액세스됨을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="F:System.IO.FileOptions.SequentialScan">
          <source>The system can use this as a hint to optimize file caching.</source>
          <target state="translated">시스템에서는 이 필드를 힌트로 사용하여 파일 캐싱을 최적화할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="F:System.IO.FileOptions.SequentialScan">
          <source>If an application moves the file pointer for random access, optimum caching may not occur; however, correct operation is still guaranteed.</source>
          <target state="translated">응용 프로그램에서 임의 액세스를 위해 파일 포인터를 이동하는 경우 최적 캐싱이 수행되지 않을 수 있지만 올바른 작업은 보장됩니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.IO.FileOptions.SequentialScan">
          <source>Specifying this flag can increase performance for applications that read large files using sequential access.</source>
          <target state="translated">이 플래그를 지정 하면 순차적 액세스를 사용 하 여 큰 파일을 읽는 응용 프로그램 성능을 향상 시킬 수 있습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.IO.FileOptions.SequentialScan">
          <source>Performance gains can be even more noticeable for applications that read large files mostly sequentially, but occasionally skip over small ranges of bytes.</source>
          <target state="translated">성능 향상을 훨씬 더 큰 파일을 대부분를 순차적으로 읽을 하지만 작은 바이트 범위를 건너뛰는 경우에 따라 응용 프로그램을 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="F:System.IO.FileOptions.WriteThrough">
          <source>Indicates that the system should write through any intermediate cache and go directly to disk.</source>
          <target state="translated">시스템이 중간 캐시를 통해 쓰고 디스크로 직접 이동해야 함을 나타냅니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>