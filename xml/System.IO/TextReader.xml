<Type Name="TextReader" FullName="System.IO.TextReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="54f7136318c4cec38e221ed4595e19903db091e1" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36560655" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class TextReader : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit TextReader extends System.MarshalByRefObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IO.TextReader" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TextReader&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextReader abstract : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="F#" Value="type TextReader = class&#xA;    inherit MarshalByRefObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.IO</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="1b987-101">여러 개의 문자를 순차적으로 읽을 수 있는 판독기를 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1b987-101">Represents a reader that can read a sequential series of characters.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b987-102"><xref:System.IO.TextReader> 추상 기본 클래스 <xref:System.IO.StreamReader> 및 <xref:System.IO.StringReader>에서 문자를 읽는 스트림과 문자열에 각각 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-102"><xref:System.IO.TextReader> is the abstract base class of <xref:System.IO.StreamReader> and <xref:System.IO.StringReader>, which read characters from streams and strings, respectively.</span></span> <span data-ttu-id="1b987-103">이러한 파생된 클래스를 사용 하 여 지정 된 범위의 문자를 읽기 위한 텍스트 파일을 열지 또는 기존 스트림에 따라 판독기를 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-103">Use these derived classes to open a text file for reading a specified range of characters, or to create a reader based on an existing stream.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1b987-104">이 형식이 구현 하는 <xref:System.IDisposable> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-104">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="1b987-105">이 형식에서 파생 된 모든 형식을 사용 하 여 마쳤으면는 삭제 해야의 직접 또는 간접적으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-105">When you have finished using any type that derives from this type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="1b987-106">직접 형식의 dispose를 호출 해당 <xref:System.IO.TextReader.Dispose%2A> 에서 메서드는 `try` / `catch` 블록입니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-106">To dispose of the type directly, call its <xref:System.IO.TextReader.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="1b987-107">작업을 삭제할 하지 직접,를 사용 하 여 언어 구문와 같은 `using` (C#에서) 또는 `Using` (Visual Basic)에서는 합니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-107">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="1b987-108">자세한 내용은 Dispose 및의 "를 사용 하는 개체는 구현 IDisposable" 섹션을 참조 하십시오.는 <xref:System.IDisposable> 인터페이스 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-108">For more information, see Dispose and the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1b987-109"><xref:System.IO.TextReader> 클래스는 추상 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-109">The <xref:System.IO.TextReader> class is an abstract class.</span></span> <span data-ttu-id="1b987-110">따라서 인스턴스화하지 않습니다 것 코드에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-110">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="1b987-111"><xref:System.IO.StreamReader> 클래스에서 파생 <xref:System.IO.TextReader> 스트림에서 읽기에 대 한 멤버의 구현을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-111">The <xref:System.IO.StreamReader> class derives from <xref:System.IO.TextReader> and provides implementations of the members for reading from a stream.</span></span> <span data-ttu-id="1b987-112">다음 예제를 사용 하 여 파일에 있는 모든 문자를 읽는 방법을 <xref:System.IO.StreamReader.ReadAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="1b987-112">The following example shows how to read all the characters in a file by using the <xref:System.IO.StreamReader.ReadAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="1b987-113">각 문자는 문자, 숫자, 또는 공백 문자의 인스턴스를 추가 하기 전에 지 확인는 <xref:System.Text.StringBuilder> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-113">It checks whether each character is a letter, digit, or white space before adding the character to an instance of the <xref:System.Text.StringBuilder> class.</span></span>  
  
 [!code-csharp[System.IO.StreamReader#42](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamReader/CS/example42.cs#42)]
 [!code-vb[System.IO.StreamReader#42](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamReader/VB/example42.vb#42)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="1b987-114">
        <para>파생 클래스는 <see cref="M:System.IO.TextReader.Peek" /> 및 <see cref="M:System.IO.TextReader.Read" /> 의 유용한 인스턴스를 만드는 메서드 <see cref="T:System.IO.TextReader" />합니다.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="1b987-114">
          <para>A derived class must minimally implement the <see cref="M:System.IO.TextReader.Peek" /> and <see cref="M:System.IO.TextReader.Read" /> methods to make a useful instance of <see cref="T:System.IO.TextReader" />.</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.IO.StringReader" />
    <altmember cref="T:System.IO.StreamReader" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TextReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TextReader();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1b987-115">
            <see cref="T:System.IO.TextReader" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-115">Initializes a new instance of the <see cref="T:System.IO.TextReader" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b987-116">파생된 클래스에 대 한이 생성자를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-116">Use this constructor for derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.StringReader" />
        <altmember cref="T:System.IO.StreamReader" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="textReader.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1b987-117">
            <see cref="T:System.IO.TextReader" />를 닫고 <see langword="TextReader" />와 관련된 시스템 리소스를 해제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-117">Closes the <see cref="T:System.IO.TextReader" /> and releases any system resources associated with the <see langword="TextReader" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b987-118">이 구현 `Close` 호출은 <xref:System.IO.StringReader.Dispose%28System.Boolean%29?displayProperty=nameWithType> 메서드 전달는 `true` 값입니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-118">This implementation of `Close` calls the <xref:System.IO.StringReader.Dispose%28System.Boolean%29?displayProperty=nameWithType> method and passes it a `true` value.</span></span>  
  
 <span data-ttu-id="1b987-119">명시적으로 호출 하지 않으면 플러시 텍스트 판독기 내부 인코더가 플러시되지 것입니다 `Close`합니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-119">Flushing the text reader will not flush its underlying encoder unless you explicitly call `Close`.</span></span> <span data-ttu-id="1b987-120">설정의 <xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType> 속성을 `true` 스트림 버퍼에서 데이터를 플러시할 수는 있지만 인코더 상태 플러시되지 것입니다 있다는 것을 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-120">Setting the <xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType> property to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="1b987-121">따라서 올바르게 문자의 다음 블록을 인코딩할 수 있도록 (부분 문자)의 상태를 유지 하기 위해 인코더 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-121">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="1b987-122">이 시나리오는 u t f 8와 UTF7 인코더는 인접 한 문자를 받은 후에 특정 문자를 인코딩할 수 있는 위치에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-122">This scenario affects UTF8 and UTF7 where certain characters can be encoded only after the encoder receives the adjacent character or characters.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1b987-123">파생된 클래스에서 재정의 하지 않는 <xref:System.IO.TextReader.Close%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="1b987-123">In derived classes, do not override the <xref:System.IO.TextReader.Close%2A> method.</span></span> <span data-ttu-id="1b987-124">을 재정의 <xref:System.IO.TextReader.Dispose%28System.Boolean%29?displayProperty=nameWithType> 메서드 리소스 해제를 위한 코드를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-124">Instead, override the <xref:System.IO.TextReader.Dispose%28System.Boolean%29?displayProperty=nameWithType> method to add code for releasing resources.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.StringReader" />
        <altmember cref="T:System.IO.StreamReader" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1b987-125">해당 <see cref="T:System.IO.TextReader" /> 개체에서 사용하는 리소스를 모두 해제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-125">Releases all resources used by the <see cref="T:System.IO.TextReader" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="textReader.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1b987-126">해당 <see cref="T:System.IO.TextReader" /> 개체에서 사용하는 리소스를 모두 해제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-126">Releases all resources used by the <see cref="T:System.IO.TextReader" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b987-127"><xref:System.IO.TextReader.Dispose%2A> 사용을 마치면 <xref:System.IO.TextReader>를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-127">Call <xref:System.IO.TextReader.Dispose%2A> when you are finished using the <xref:System.IO.TextReader>.</span></span> <span data-ttu-id="1b987-128"><xref:System.IO.TextReader.Dispose%2A> 메서드를 사용하면 <xref:System.IO.TextReader>를 사용할 수 없게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-128">The <xref:System.IO.TextReader.Dispose%2A> method leaves the <xref:System.IO.TextReader> in an unusable state.</span></span> <span data-ttu-id="1b987-129">호출한 후 <xref:System.IO.TextReader.Dispose%2A>에 대 한 모든 참조를 해제 해야는 <xref:System.IO.TextReader> 가비지 수집기는 메모리를 회수할 수 있도록 하는 <xref:System.IO.TextReader> 차지한 합니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-129">After calling <xref:System.IO.TextReader.Dispose%2A>, you must release all references to the <xref:System.IO.TextReader> so the garbage collector can reclaim the memory that the <xref:System.IO.TextReader> was occupying.</span></span>  
  
 <span data-ttu-id="1b987-130">자세한 내용은 참조 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 및 [Dispose 메서드를 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-130">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1b987-131"><xref:System.IO.TextReader.Dispose%2A>에 대한 마지막 참조를 해제하기 전에 반드시 <xref:System.IO.TextReader>를 호출하십시오.</span><span class="sxs-lookup"><span data-stu-id="1b987-131">Always call <xref:System.IO.TextReader.Dispose%2A> before you release your last reference to the <xref:System.IO.TextReader>.</span></span> <span data-ttu-id="1b987-132">이렇게 하지 않으면 가비지 수집기가 <xref:System.IO.TextReader> 개체의 <xref:System.Object.Finalize%2A> 메서드를 호출할 때까지 사용 중인 리소스가 해제되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-132">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.IO.TextReader> object's <xref:System.Object.Finalize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="textReader.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="1b987-133">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-133">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1b987-134">
            <see cref="T:System.IO.TextReader" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-134">Releases the unmanaged resources used by the <see cref="T:System.IO.TextReader" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b987-135">이 메서드는 public `Dispose` 메서드 및 <xref:System.Object.Finalize%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="1b987-135">This method is called by the public `Dispose` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="1b987-136">기본적으로이 메서드는 다음과 같이 지정 됩니다.는 `disposing` 매개 변수로 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-136">By default, this method specifies the `disposing` parameter as `true`.</span></span> <span data-ttu-id="1b987-137"><xref:System.Object.Finalize%2A> 지정 된 `disposing` 매개 변수로 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-137"><xref:System.Object.Finalize%2A> specifies the `disposing` parameter as `false`.</span></span>  
  
 <span data-ttu-id="1b987-138">`disposing` 매개 변수가 `true`인 경우 이 메서드는 이 <xref:System.IO.TextReader>에서 참조하는 관리 개체가 보유하고 있는 리소스를 모두 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-138">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.TextReader> references.</span></span> <span data-ttu-id="1b987-139">이 메서드는 참조되는 각 개체의 `Dispose` 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-139">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="1b987-140">
            <para>
              <see langword="Dispose" /> 다른 개체에서 여러 번 호출할 수 있습니다. 이 메서드를 재정의할 때 이전 호출에서 삭제 된 개체를 참조 하지 않도록 주의 <see langword="Dispose" />합니다. 이 메서드를 구현 하는 방법에 대 한 자세한 내용은 참조 [Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md) 구현 합니다.  에 대 한 자세한 내용은 <see cref="M:System.IDisposable.Dispose" /> 및 <see cref="M:System.Object.Finalize" />, 참조 [정리를 관리 되지 않는 Resources](~/docs/standard/garbage-collection/unmanaged.md) 합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-140">
              <para>
                <see langword="Dispose" /> can be called multiple times by other objects. When overriding this method, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />. For more information about how to implement this method, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see cref="M:System.IDisposable.Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static readonly System.IO.TextReader Null;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.IO.TextReader Null" />
      <MemberSignature Language="DocId" Value="F:System.IO.TextReader.Null" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Null As TextReader " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::IO::TextReader ^ Null;" />
      <MemberSignature Language="F#" Value=" staticval mutable Null : System.IO.TextReader" Usage="System.IO.TextReader.Null" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1b987-141">
            <see langword="TextReader" />에 읽을 데이터를 제공하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-141">Provides a <see langword="TextReader" /> with no data to read from.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b987-142">읽기는 <xref:System.IO.TextReader.Null> 텍스트 판독기가 스트림의 끝에서 읽기와 유사 합니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-142">Reading from the <xref:System.IO.TextReader.Null> text reader is similar to reading from the end of a stream:</span></span>  
  
-   <span data-ttu-id="1b987-143"><xref:System.IO.TextReader.Read%2A> 및 <xref:System.IO.TextReader.Peek%2A> 메서드는-1을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-143">The <xref:System.IO.TextReader.Read%2A> and <xref:System.IO.TextReader.Peek%2A> methods return -1.</span></span>  
  
-   <span data-ttu-id="1b987-144"><xref:System.IO.TextReader.ReadBlock%2A> 메서드 0을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-144">The <xref:System.IO.TextReader.ReadBlock%2A> method returns zero.</span></span>  
  
-   <span data-ttu-id="1b987-145"><xref:System.IO.TextReader.ReadLine%2A> 메서드 반환 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-145">The <xref:System.IO.TextReader.ReadLine%2A> method returns `null`.</span></span>  
  
-   <span data-ttu-id="1b987-146"><xref:System.IO.TextReader.ReadToEnd%2A> 메서드는 빈 문자열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-146">The <xref:System.IO.TextReader.ReadToEnd%2A> method returns an empty string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.StringReader" />
        <altmember cref="T:System.IO.StreamReader" />
      </Docs>
    </Member>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public virtual int Peek ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Peek() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.Peek" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Peek () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Peek();" />
      <MemberSignature Language="F#" Value="abstract member Peek : unit -&gt; int&#xA;override this.Peek : unit -&gt; int" Usage="textReader.Peek " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1b987-147">문자 소스나 판독기의 상태를 변경하지 않고 다음 문자를 읽습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-147">Reads the next character without changing the state of the reader or the character source.</span>
          </span>
          <span data-ttu-id="1b987-148">판독기에서 실제로 읽지 않고 사용 가능한 다음 문자를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-148">Returns the next available character without actually reading it from the reader.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1b987-149">읽을 다음 문자를 나타내는 정수이거나, 사용할 수 있는 문자가 더 이상 없거나 판독기에서 검색을 지원하지 않을 경우 -1입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-149">An integer representing the next character to be read, or -1 if no more characters are available or the reader does not support seeking.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b987-150"><xref:System.IO.TextReader.Peek%2A> 메서드 끝은 파일 또는 다른 오류가 발생 했는지 확인 하기 위해 정수 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-150">The <xref:System.IO.TextReader.Peek%2A> method returns an integer value in order to determine whether the end of the file, or another error has occurred.</span></span> <span data-ttu-id="1b987-151">이렇게 하면 반환 된 값은-1로 캐스팅 하기 전에 먼저 확인 하려면 사용자는 <xref:System.Char> 유형입니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-151">This allows a user to first check if the returned value is -1 before casting it to a <xref:System.Char> type.</span></span>  
  
 <span data-ttu-id="1b987-152">현재 위치는 <xref:System.IO.TextReader> 이 작업에 의해 변경 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-152">The current position of the <xref:System.IO.TextReader> is not changed by this operation.</span></span> <span data-ttu-id="1b987-153">사용할 수 있는 문자가 더 이상 없으면 반환 되는 값은-1입니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-153">The returned value is -1 if no more characters are available.</span></span> <span data-ttu-id="1b987-154">기본 구현된 경우에는 -1을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-154">The default implementation returns -1.</span></span>  
  
 <span data-ttu-id="1b987-155"><xref:System.IO.TextReader> 클래스는 추상 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-155">The <xref:System.IO.TextReader> class is an abstract class.</span></span> <span data-ttu-id="1b987-156">따라서 인스턴스화하지 않습니다 것 코드에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-156">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="1b987-157">사용 하는 예는 <xref:System.IO.TextReader.Peek%2A> 메서드를 참조는 <xref:System.IO.StreamReader.Peek%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="1b987-157">For an example of using the <xref:System.IO.TextReader.Peek%2A> method, see the <xref:System.IO.StreamReader.Peek%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="1b987-158">
            <see cref="T:System.IO.TextReader" />가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-158">The <see cref="T:System.IO.TextReader" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1b987-159">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-159">An I/O error occurs.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.StreamReader.Peek" />
        <altmember cref="M:System.IO.StringReader.Peek" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Read">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1b987-160">텍스트 판독기에서 데이터를 읽습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-160">Reads data from the text reader.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public virtual int Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Read () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Read();" />
      <MemberSignature Language="F#" Value="abstract member Read : unit -&gt; int&#xA;override this.Read : unit -&gt; int" Usage="textReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1b987-161">텍스트 판독기에서 다음 문자를 읽고 문자 위치를 한 문자씩 앞으로 이동합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-161">Reads the next character from the text reader and advances the character position by one character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1b987-162">텍스트 판독기의 다음 문자 또는 사용할 수 있는 문자가 더 이상 없는 경우 -1입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-162">The next character from the text reader, or -1 if no more characters are available.</span>
          </span>
          <span data-ttu-id="1b987-163">기본 구현된 경우에는 -1을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-163">The default implementation returns -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b987-164"><xref:System.IO.TextReader> 클래스는 추상 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-164">The <xref:System.IO.TextReader> class is an abstract class.</span></span> <span data-ttu-id="1b987-165">따라서 인스턴스화하지 않습니다 것 코드에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-165">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="1b987-166">사용 하는 예는 <xref:System.IO.TextReader.Read%2A> 메서드를 참조는 <xref:System.IO.StreamReader.Read%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="1b987-166">For an example of using the <xref:System.IO.TextReader.Read%2A> method, see the <xref:System.IO.StreamReader.Read%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="1b987-167">
            <see cref="T:System.IO.TextReader" />가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-167">The <see cref="T:System.IO.TextReader" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1b987-168">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-168">An I/O error occurs.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.StreamReader.Read" />
        <altmember cref="M:System.IO.StringReader.Read" />
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public virtual int Read (Span&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read(valuetype System.Span`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.Read(System.Span{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Read (buffer As Span(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Read(Span&lt;char&gt; buffer);" />
      <MemberSignature Language="F#" Value="abstract member Read : Span&lt;char&gt; -&gt; int&#xA;override this.Read : Span&lt;char&gt; -&gt; int" Usage="textReader.Read buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public virtual int Read (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read([out] char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.Read(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Read (buffer As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Read(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member Read : char[] * int * int -&gt; int&#xA;override this.Read : char[] * int * int -&gt; int" Usage="textReader.Read (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="1b987-169">이 메서드는 지정된 문자 배열의 값이 <c>인덱스</c>와 (<c>인덱스</c> + <c>카운트</c> - 1) 사이에서 현재 소스로부터 읽어온 문자로 교체된 상태로 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-169">When this method returns, contains the specified character array with the values between <c>index</c> and (<c>index</c> + <c>count</c> - 1) replaced by the characters read from the current source.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="1b987-170">쓰기를 시작할 <c>버퍼</c>의 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-170">The position in <c>buffer</c> at which to begin writing.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="1b987-171">읽을 최대 문자 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-171">The maximum number of characters to read.</span>
          </span>
          <span data-ttu-id="1b987-172">지정한 문자 수를 버퍼로 읽어오기 전에 판독기의 끝에 도달하면 메서드가 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-172">If the end of the reader is reached before the specified number of characters is read into the buffer, the method returns.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1b987-173">현재 판독기에서 지정된 최대 수의 문자를 읽어 이 데이터를 지정된 인덱스에서 시작되는 버퍼에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-173">Reads a specified maximum number of characters from the current reader and writes the data to a buffer, beginning at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1b987-174">읽은 문자 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-174">The number of characters that have been read.</span>
          </span>
          <span data-ttu-id="1b987-175">이 문자 수는 판독기 내에서 데이터를 사용할 수 있는지 여부에 따라 <paramref name="count" />보다 작거나 같습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-175">The number will be less than or equal to <paramref name="count" />, depending on whether the data is available within the reader.</span>
          </span>
          <span data-ttu-id="1b987-176">읽을 문자가 더 이상 없는 경우에 이 메서드를 호출하면 0이 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-176">This method returns 0 (zero) if it is called when no more characters are left to read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b987-177">이 메서드가 반환 중 `count` 문자를 읽거나 파일의 끝에 도달 했습니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-177">This method returns after either `count` characters are read or the end of the file is reached.</span></span> <span data-ttu-id="1b987-178"><xref:System.IO.TextReader.ReadBlock%2A> 이 메서드의 차단 버전이입니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-178"><xref:System.IO.TextReader.ReadBlock%2A> is a blocking version of this method.</span></span>  
  
 <span data-ttu-id="1b987-179"><xref:System.IO.TextReader> 클래스는 추상 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-179">The <xref:System.IO.TextReader> class is an abstract class.</span></span> <span data-ttu-id="1b987-180">따라서 인스턴스화하지 않습니다 것 코드에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-180">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="1b987-181">사용 하는 예는 <xref:System.IO.TextReader.Read%2A> 메서드를 참조는 <xref:System.IO.StreamReader.Read%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="1b987-181">For an example of using the <xref:System.IO.TextReader.Read%2A> method, see the <xref:System.IO.StreamReader.Read%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1b987-182">
            <paramref name="buffer" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-182">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1b987-183">버퍼 길이에서 <paramref name="index" />를 빼면 <paramref name="count" />보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-183">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1b987-184">
            <paramref name="index" /> 또는 <paramref name="count" />가 음수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-184">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="1b987-185">
            <see cref="T:System.IO.TextReader" />가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-185">The <see cref="T:System.IO.TextReader" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1b987-186">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-186">An I/O error occurs.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.StreamReader.Read(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.ValueTask&lt;int&gt; ReadAsync (Memory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;int32&gt; ReadAsync(valuetype System.Memory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadAsync(System.Memory{System.Char},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ReadAsync : Memory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;&#xA;override this.ReadAsync : Memory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;" Usage="textReader.ReadAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Char&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;int&gt; ReadAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadAsync (buffer As Char(), index As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;int&gt; ^ ReadAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member ReadAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;&#xA;override this.ReadAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="textReader.ReadAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="1b987-187">이 메서드는 지정된 문자 배열의 값이 <c>인덱스</c>와 (<c>인덱스</c> + <c>카운트</c> - 1) 사이에서 현재 소스로부터 읽어온 문자로 교체된 상태로 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-187">When this method returns, contains the specified character array with the values between <c>index</c> and (<c>index</c> + <c>count</c> - 1) replaced by the characters read from the current source.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="1b987-188">쓰기를 시작할 <c>버퍼</c>의 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-188">The position in <c>buffer</c> at which to begin writing.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="1b987-189">읽을 최대 문자 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-189">The maximum number of characters to read.</span>
          </span>
          <span data-ttu-id="1b987-190">지정한 문자 수를 버퍼로 읽어오기 전에 텍스트의 끝에 도달하면 현재 메서드가 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-190">If the end of the text is reached before the specified number of characters is read into the buffer, the current method returns.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1b987-191">현재 텍스트 판독기에서 지정된 최대 문자 수를 비동기적으로 읽어 이 데이터를 지정된 위치에서 시작되는 버퍼에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-191">Reads a specified maximum number of characters from the current text reader asynchronously and writes the data to a buffer, beginning at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1b987-192">비동기 읽기 작업을 나타내는 작업입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-192">A task that represents the asynchronous read operation.</span>
          </span>
          <span data-ttu-id="1b987-193">
            <paramref name="TResult" /> 매개 변수의 값은 버퍼 안으로 읽어들인 총 바이트 수를 포함합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-193">The value of the <paramref name="TResult" /> parameter contains the total number of bytes read into the buffer.</span>
          </span>
          <span data-ttu-id="1b987-194">현재 사용할 수 있는 바이트 수가 요청된 수보다 작을 경우 결과 값이 요청된 바이트 수보다 작을 수 있으며 텍스트의 끝에 도달한 경우에는 0이 될 수도 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-194">The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the text has been reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b987-195">작업이 완료 중에서 지정 된 문자 수는 `count` 매개 변수를 읽거나 파일의 끝에 도달 했습니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-195">The task completes after either the number of characters specified by the `count` parameter are read or the end of the file is reached.</span></span>  
  
 <span data-ttu-id="1b987-196"><xref:System.IO.TextReader> 클래스는 추상 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-196">The <xref:System.IO.TextReader> class is an abstract class.</span></span> <span data-ttu-id="1b987-197">따라서 인스턴스화하지 않습니다 것 코드에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-197">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="1b987-198">사용 하는 예는 <xref:System.IO.TextReader.ReadAsync%2A> 메서드를 참조는 <xref:System.IO.StreamReader.ReadAsync%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="1b987-198">For an example of using the <xref:System.IO.TextReader.ReadAsync%2A> method, see the <xref:System.IO.StreamReader.ReadAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1b987-199">
            <paramref name="buffer" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-199">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1b987-200">
            <paramref name="index" /> 또는 <paramref name="count" />가 음수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-200">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1b987-201">
            <paramref name="index" /> 및 <paramref name="count" />의 합계가 버퍼 길이보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-201">The sum of <paramref name="index" /> and <paramref name="count" /> is larger than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="1b987-202">텍스트 판독기가 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-202">The text reader has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1b987-203">판독기가 현재 이전 읽기 작업에서 사용 중입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-203">The reader is currently in use by a previous read operation.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.StreamReader.ReadAsync(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.IO.StringReader.ReadAsync(System.Char[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadBlock">
      <MemberSignature Language="C#" Value="public virtual int ReadBlock (Span&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadBlock(valuetype System.Span`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadBlock(System.Span{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadBlock (buffer As Span(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ReadBlock(Span&lt;char&gt; buffer);" />
      <MemberSignature Language="F#" Value="abstract member ReadBlock : Span&lt;char&gt; -&gt; int&#xA;override this.ReadBlock : Span&lt;char&gt; -&gt; int" Usage="textReader.ReadBlock buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadBlock">
      <MemberSignature Language="C#" Value="public virtual int ReadBlock (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadBlock([out] char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadBlock(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadBlock (buffer As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ReadBlock(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member ReadBlock : char[] * int * int -&gt; int&#xA;override this.ReadBlock : char[] * int * int -&gt; int" Usage="textReader.ReadBlock (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="1b987-204">이 메서드는 이 매개 변수에 포함된 지정된 문자 배열의 값이 <c>인덱스</c>와 (<c>인덱스</c> + <c>카운트</c> -1) 사이에서 현재 소스로부터 읽어온 문자로 교체된 상태로 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-204">When this method returns, this parameter contains the specified character array with the values between <c>index</c> and (<c>index</c> + <c>count</c> -1) replaced by the characters read from the current source.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="1b987-205">쓰기를 시작할 <c>버퍼</c>의 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-205">The position in <c>buffer</c> at which to begin writing.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="1b987-206">읽을 최대 문자 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-206">The maximum number of characters to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1b987-207">현재 텍스트 판독기에서 지정된 최대 수의 문자를 읽어 이 데이터를 지정된 인덱스에서 시작되는 버퍼에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-207">Reads a specified maximum number of characters from the current text reader and writes the data to a buffer, beginning at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1b987-208">읽은 문자 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-208">The number of characters that have been read.</span>
          </span>
          <span data-ttu-id="1b987-209">이 문자 수는 모든 입력 문자를 읽었는지 여부에 따라 <paramref name="count" />보다 작거나 같습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-209">The number will be less than or equal to <paramref name="count" />, depending on whether all input characters have been read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b987-210">내부 텍스트 판독기의 위치는로 읽은 문자 수 만큼 앞 `buffer`합니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-210">The position of the underlying text reader is advanced by the number of characters that were read into `buffer`.</span></span>  
  
 <span data-ttu-id="1b987-211">될 때까지 메서드 블록 `count` 모든 문자를 읽은 또는 문자를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-211">The method blocks until either `count` characters are read, or all characters have been read.</span></span> <span data-ttu-id="1b987-212">차단 버전 이것이 <xref:System.IO.TextReader.Read%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-212">This is a blocking version of <xref:System.IO.TextReader.Read%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1b987-213">
            <paramref name="buffer" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-213">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1b987-214">버퍼 길이에서 <paramref name="index" />를 빼면 <paramref name="count" />보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-214">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1b987-215">
            <paramref name="index" /> 또는 <paramref name="count" />가 음수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-215">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="1b987-216">
            <see cref="T:System.IO.TextReader" />가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-216">The <see cref="T:System.IO.TextReader" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1b987-217">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-217">An I/O error occurs.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.StreamReader.ReadBlock(System.Char[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadBlockAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.ValueTask&lt;int&gt; ReadBlockAsync (Memory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;int32&gt; ReadBlockAsync(valuetype System.Memory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadBlockAsync(System.Memory{System.Char},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ReadBlockAsync : Memory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;&#xA;override this.ReadBlockAsync : Memory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;" Usage="textReader.ReadBlockAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Char&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadBlockAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;int&gt; ReadBlockAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadBlockAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadBlockAsync (buffer As Char(), index As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;int&gt; ^ ReadBlockAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member ReadBlockAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;&#xA;override this.ReadBlockAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="textReader.ReadBlockAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="1b987-218">이 메서드는 지정된 문자 배열의 값이 <c>인덱스</c>와 (<c>인덱스</c> + <c>카운트</c> - 1) 사이에서 현재 소스로부터 읽어온 문자로 교체된 상태로 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-218">When this method returns, contains the specified character array with the values between <c>index</c> and (<c>index</c> + <c>count</c> - 1) replaced by the characters read from the current source.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="1b987-219">쓰기를 시작할 <c>버퍼</c>의 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-219">The position in <c>buffer</c> at which to begin writing.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="1b987-220">읽을 최대 문자 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-220">The maximum number of characters to read.</span>
          </span>
          <span data-ttu-id="1b987-221">지정한 문자 수를 버퍼로 읽어오기 전에 텍스트의 끝에 도달하면 현재 메서드가 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-221">If the end of the text is reached before the specified number of characters is read into the buffer, the current method returns.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1b987-222">현재 텍스트 판독기에서 지정된 최대 문자 수를 비동기적으로 읽어 이 데이터를 지정된 위치에서 시작되는 버퍼에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-222">Reads a specified maximum number of characters from the current text reader asynchronously and writes the data to a buffer, beginning at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1b987-223">비동기 읽기 작업을 나타내는 작업입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-223">A task that represents the asynchronous read operation.</span>
          </span>
          <span data-ttu-id="1b987-224">
            <paramref name="TResult" /> 매개 변수의 값은 버퍼 안으로 읽어들인 총 바이트 수를 포함합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-224">The value of the <paramref name="TResult" /> parameter contains the total number of bytes read into the buffer.</span>
          </span>
          <span data-ttu-id="1b987-225">현재 사용할 수 있는 바이트 수가 요청된 수보다 작을 경우 결과 값이 요청된 바이트 수보다 작을 수 있으며 텍스트의 끝에 도달한 경우에는 0이 될 수도 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-225">The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the text has been reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b987-226">작업이 완료 되지 않을 때까지 변수에 지정 된 문자 수는 `count` 매개 변수를 읽거나 텍스트의 끝에 도달 했습니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-226">The task does not complete until either the number of characters specified by the `count` parameter are read, or the end of the text has been reached.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1b987-227">
            <paramref name="buffer" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-227">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1b987-228">
            <paramref name="index" /> 또는 <paramref name="count" />가 음수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-228">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1b987-229">
            <paramref name="index" /> 및 <paramref name="count" />의 합계가 버퍼 길이보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-229">The sum of <paramref name="index" /> and <paramref name="count" /> is larger than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="1b987-230">텍스트 판독기가 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-230">The text reader has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1b987-231">판독기가 현재 이전 읽기 작업에서 사용 중입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-231">The reader is currently in use by a previous read operation.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.StreamReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.IO.StringReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadLine">
      <MemberSignature Language="C#" Value="public virtual string ReadLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadLine" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadLine () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ReadLine();" />
      <MemberSignature Language="F#" Value="abstract member ReadLine : unit -&gt; string&#xA;override this.ReadLine : unit -&gt; string" Usage="textReader.ReadLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1b987-232">텍스트 판독기에서 한 줄의 문자를 읽고 데이터를 문자열로 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-232">Reads a line of characters from the text reader and returns the data as a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1b987-233">판독기의 다음 줄이거나 모든 문자를 읽은 경우 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-233">The next line from the reader, or <see langword="null" /> if all characters have been read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b987-234">줄의 문자 뒤에 캐리지 리턴 (0x000d)는 줄 바꿈 (0x000a) 시퀀스로 정의 됩니다, 캐리지 뒤에 줄 바꿈, 반환할. <xref:System.Environment.NewLine%2A?displayProperty=nameWithType>, 또는 스트림 끝 표식입니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-234">A line is defined as a sequence of characters followed by a carriage return (0x000d), a line feed (0x000a), a carriage return followed by a line feed, <xref:System.Environment.NewLine%2A?displayProperty=nameWithType>, or the end-of-stream marker.</span></span> <span data-ttu-id="1b987-235">반환 되는 문자열 종료 캐리지 리턴 또는 줄 바꿈 없습니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-235">The string that is returned does not contain the terminating carriage return or line feed.</span></span> <span data-ttu-id="1b987-236">반환 값은 `null` 입력 스트림의 끝에 도달한 경우.</span><span class="sxs-lookup"><span data-stu-id="1b987-236">The return value is `null` if the end of the input stream has been reached.</span></span>  
  
 <span data-ttu-id="1b987-237">메서드가 throw 하는 경우는 <xref:System.OutOfMemoryException> 예외, 판독기의 위치는 기본 <xref:System.IO.Stream> 문자를 읽으려면 메서드에서 못한 하지만 내부로 이미 읽은 문자 수로 고급 <xref:System.IO.TextReader.ReadLine%2A> 버퍼는 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-237">If the method throws an <xref:System.OutOfMemoryException> exception, the reader's position in the underlying <xref:System.IO.Stream> is advanced by the number of characters the method was able to read, but the characters that were already read into the internal <xref:System.IO.TextReader.ReadLine%2A> buffer are discarded.</span></span> <span data-ttu-id="1b987-238">이미 읽은 문자는 복구할 수 있고만 다시 초기화 하 여 액세스할 수 스트림의 판독기의 위치를 변경할 수 없으므로 <xref:System.IO.TextReader> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-238">Because the position of the reader in the stream cannot be changed, the characters that were already read are unrecoverable and can be accessed only by reinitializing the <xref:System.IO.TextReader> object.</span></span> <span data-ttu-id="1b987-239">스트림 내에서 처음 위치를 알 수 없습니다. 또는 스트림이 검색을 내부을 지원 하지 않는 경우 <xref:System.IO.Stream> 도 다시 초기화 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-239">If the initial position within the stream is unknown or the stream does not support seeking, the underlying <xref:System.IO.Stream> also needs to be reinitialized.</span></span>  
  
 <span data-ttu-id="1b987-240">이러한 상황을 방지 하 고 사용 해야 하는 강력한 코드를 생성 하는 <xref:System.IO.TextReader.Read%2A> 미리 할당 된 버퍼에서 문자를 읽기 메서드와 저장소입니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-240">To avoid such a situation and produce robust code you should use the <xref:System.IO.TextReader.Read%2A> method and store the read characters in a preallocated buffer.</span></span>  
  
 <span data-ttu-id="1b987-241"><xref:System.IO.TextReader> 클래스는 추상 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-241">The <xref:System.IO.TextReader> class is an abstract class.</span></span> <span data-ttu-id="1b987-242">따라서 인스턴스화하지 않습니다 것 코드에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-242">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="1b987-243">사용 하는 예는 <xref:System.IO.TextReader.ReadLine%2A> 메서드를 참조는 <xref:System.IO.StreamReader.ReadLine%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="1b987-243">For an example of using the <xref:System.IO.TextReader.ReadLine%2A> method, see the <xref:System.IO.StreamReader.ReadLine%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1b987-244">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-244">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="1b987-245">메모리가 부족하여 반환된 문자열의 버퍼를 할당할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-245">There is insufficient memory to allocate a buffer for the returned string.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="1b987-246">
            <see cref="T:System.IO.TextReader" />가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-246">The <see cref="T:System.IO.TextReader" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1b987-247">다음 줄의 문자 수가 <see cref="F:System.Int32.MaxValue" />보다 큰 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-247">The number of characters in the next line is larger than <see cref="F:System.Int32.MaxValue" /></span>
          </span>
        </exception>
        <altmember cref="M:System.IO.StreamReader.ReadLine" />
        <altmember cref="M:System.IO.StringReader.ReadLine" />
      </Docs>
    </Member>
    <Member MemberName="ReadLineAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; ReadLineAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; ReadLineAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadLineAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadLineAsync () As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::String ^&gt; ^ ReadLineAsync();" />
      <MemberSignature Language="F#" Value="abstract member ReadLineAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;&#xA;override this.ReadLineAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="textReader.ReadLineAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1b987-248">한 줄의 문자를 비동기적으로 읽고 데이터를 문자열로 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-248">Reads a line of characters asynchronously and returns the data as a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1b987-249">비동기 읽기 작업을 나타내는 작업입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-249">A task that represents the asynchronous read operation.</span>
          </span>
          <span data-ttu-id="1b987-250">
            <paramref name="TResult" /> 매개 변수의 값은 텍스트 판독기의 다음 줄을 포함하거나 모든 문자가 읽혀진 경우에는 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-250">The value of the <paramref name="TResult" /> parameter contains the next line from the text reader, or is <see langword="null" /> if all of the characters have been read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b987-251"><xref:System.IO.TextReader> 클래스는 추상 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-251">The <xref:System.IO.TextReader> class is an abstract class.</span></span> <span data-ttu-id="1b987-252">따라서 인스턴스화하지 않습니다 것 코드에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-252">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="1b987-253">사용 하는 예는 <xref:System.IO.TextReader.ReadLineAsync%2A> 메서드를 참조는 <xref:System.IO.StreamReader.ReadLineAsync%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="1b987-253">For an example of using the <xref:System.IO.TextReader.ReadLineAsync%2A> method, see the <xref:System.IO.StreamReader.ReadLineAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="1b987-254">하는 경우 현재 <xref:System.IO.TextReader> 에서 반환 된 표준 입력된 스트림을 나타내는 <xref:System.Console.In%2A?displayProperty=nameWithType> 속성에는 <xref:System.IO.TextReader.ReadLineAsync%2A> 메서드가 동기적으로 처리 하지 않고 비동기적으로 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-254">If the current <xref:System.IO.TextReader> represents the standard input stream returned by the <xref:System.Console.In%2A?displayProperty=nameWithType> property, the <xref:System.IO.TextReader.ReadLineAsync%2A> method executes synchronously rather than asynchronously.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1b987-255">다음 줄의 문자 수가 <see cref="F:System.Int32.MaxValue" />보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-255">The number of characters in the next line is larger than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="1b987-256">텍스트 판독기가 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-256">The text reader has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1b987-257">판독기가 현재 이전 읽기 작업에서 사용 중입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-257">The reader is currently in use by a previous read operation.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.StreamReader.ReadLineAsync" />
        <altmember cref="M:System.IO.StringReader.ReadLineAsync" />
      </Docs>
    </Member>
    <Member MemberName="ReadToEnd">
      <MemberSignature Language="C#" Value="public virtual string ReadToEnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadToEnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadToEnd" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToEnd () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ReadToEnd();" />
      <MemberSignature Language="F#" Value="abstract member ReadToEnd : unit -&gt; string&#xA;override this.ReadToEnd : unit -&gt; string" Usage="textReader.ReadToEnd " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1b987-258">현재 위치에서 텍스트 판독기 끝까지의 모든 문자를 읽어서 단일 문자열로 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-258">Reads all characters from the current position to the end of the text reader and returns them as one string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1b987-259">현재 위치에서 텍스트 판독기 끝까지의 모든 문자를 포함하는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-259">A string that contains all characters from the current position to the end of the text reader.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b987-260">메서드가 throw 하는 경우는 <xref:System.OutOfMemoryException> 예외, 판독기의 위치는 기본 <xref:System.IO.Stream> 문자를 읽으려면 메서드에서 못한 하지만 내부로 이미 읽은 문자 수로 고급 <xref:System.IO.TextReader.ReadToEnd%2A> 버퍼는 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-260">If the method throws an <xref:System.OutOfMemoryException> exception, the reader's position in the underlying <xref:System.IO.Stream> is advanced by the number of characters the method was able to read, but the characters that were already read into the internal <xref:System.IO.TextReader.ReadToEnd%2A> buffer are discarded.</span></span> <span data-ttu-id="1b987-261">이미 읽은 문자는 복구할 수 있고만 다시 초기화 하 여 액세스할 수 스트림의 판독기의 위치를 변경할 수 없으므로 <xref:System.IO.TextReader>합니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-261">Because the position of the reader in the stream cannot be changed, the characters that were already read are unrecoverable and can be accessed only by reinitializing the <xref:System.IO.TextReader>.</span></span> <span data-ttu-id="1b987-262">스트림 내에서 처음 위치를 알 수 없습니다. 또는 스트림이 검색을 내부을 지원 하지 않는 경우 <xref:System.IO.Stream> 도 다시 초기화 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-262">If the initial position within the stream is unknown or the stream does not support seeking, the underlying <xref:System.IO.Stream> also needs to be reinitialized.</span></span>  
  
 <span data-ttu-id="1b987-263">이러한 상황을 방지 하 고 사용 해야 하는 강력한 코드를 생성 하는 <xref:System.IO.TextReader.Read%2A> 미리 할당 된 버퍼에서 문자를 읽기 메서드와 저장소입니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-263">To avoid such a situation and produce robust code you should use the <xref:System.IO.TextReader.Read%2A> method and store the read characters in a preallocated buffer.</span></span>  
  
 <span data-ttu-id="1b987-264"><xref:System.IO.TextReader> 클래스는 추상 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-264">The <xref:System.IO.TextReader> class is an abstract class.</span></span> <span data-ttu-id="1b987-265">따라서 인스턴스화하지 않습니다 것 코드에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-265">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="1b987-266">사용 하는 예는 <xref:System.IO.TextReader.ReadToEnd%2A> 메서드를 참조는 <xref:System.IO.StreamReader.ReadToEnd%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="1b987-266">For an example of using the <xref:System.IO.TextReader.ReadToEnd%2A> method, see the <xref:System.IO.StreamReader.ReadToEnd%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1b987-267">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-267">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="1b987-268">
            <see cref="T:System.IO.TextReader" />가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-268">The <see cref="T:System.IO.TextReader" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="1b987-269">메모리가 부족하여 반환된 문자열의 버퍼를 할당할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-269">There is insufficient memory to allocate a buffer for the returned string.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1b987-270">다음 줄의 문자 수가 <see cref="F:System.Int32.MaxValue" />보다 큰 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-270">The number of characters in the next line is larger than <see cref="F:System.Int32.MaxValue" /></span>
          </span>
        </exception>
        <altmember cref="M:System.IO.StreamReader.ReadToEnd" />
        <altmember cref="M:System.IO.StringReader.ReadToEnd" />
      </Docs>
    </Member>
    <Member MemberName="ReadToEndAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; ReadToEndAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; ReadToEndAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadToEndAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToEndAsync () As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::String ^&gt; ^ ReadToEndAsync();" />
      <MemberSignature Language="F#" Value="abstract member ReadToEndAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;&#xA;override this.ReadToEndAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="textReader.ReadToEndAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.IO.TextReader/&lt;ReadToEndAsync&gt;c__async0))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1b987-271">현재 위치에서 텍스트 판독기 끝까지의 모든 문자를 비동기적으로 읽어서 하나의 문자열로 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-271">Reads all characters from the current position to the end of the text reader asynchronously and returns them as one string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1b987-272">비동기 읽기 작업을 나타내는 작업입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-272">A task that represents the asynchronous read operation.</span>
          </span>
          <span data-ttu-id="1b987-273">
            <paramref name="TResult" /> 매개 변수의 값은 현재 위치에서 텍스트 판독기 끝까지의 문자로 이루어진 문자열을 포함합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-273">The value of the <paramref name="TResult" /> parameter contains a string with the characters from the current position to the end of the text reader.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b987-274"><xref:System.IO.TextReader> 클래스는 추상 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-274">The <xref:System.IO.TextReader> class is an abstract class.</span></span> <span data-ttu-id="1b987-275">따라서 인스턴스화하지 않습니다 것 코드에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-275">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="1b987-276">사용 하는 예는 <xref:System.IO.TextReader.ReadToEndAsync%2A> 메서드를 참조는 <xref:System.IO.StreamReader.ReadToEndAsync%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="1b987-276">For an example of using the <xref:System.IO.TextReader.ReadToEndAsync%2A> method, see the <xref:System.IO.StreamReader.ReadToEndAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1b987-277">문자 수가 <see cref="F:System.Int32.MaxValue" />보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-277">The number of characters is larger than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="1b987-278">텍스트 판독기가 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-278">The text reader has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1b987-279">판독기가 현재 이전 읽기 작업에서 사용 중입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-279">The reader is currently in use by a previous read operation.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.StreamReader.ReadToEndAsync" />
        <altmember cref="M:System.IO.StringReader.ReadToEndAsync" />
      </Docs>
    </Member>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.IO.TextReader Synchronized (System.IO.TextReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.TextReader Synchronized(class System.IO.TextReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.Synchronized(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Synchronized (reader As TextReader) As TextReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::TextReader ^ Synchronized(System::IO::TextReader ^ reader);" />
      <MemberSignature Language="F#" Value="static member Synchronized : System.IO.TextReader -&gt; System.IO.TextReader" Usage="System.IO.TextReader.Synchronized reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="1b987-280">동기화할 <see langword="TextReader" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-280">The <see langword="TextReader" /> to synchronize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1b987-281">지정된 <see langword="TextReader" /> 주위에 스레드로부터 안전한 래퍼를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-281">Creates a thread-safe wrapper around the specified <see langword="TextReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1b987-282">스레드로부터 안전한 <see cref="T:System.IO.TextReader" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-282">A thread-safe <see cref="T:System.IO.TextReader" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b987-283">현재 메서드가 지정 된 래핑하는 클래스를 반환 <xref:System.IO.TextReader> 인스턴스를 여러 스레드에서 액세스를 제한 합니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-283">The current method returns a class that wraps around the specified <xref:System.IO.TextReader> instance and restricts access to it by multiple threads.</span></span> <span data-ttu-id="1b987-284">모든 읽기에서 반환된 된 래퍼는 스레드로부터 안전 하 게 보호 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1b987-284">All reads from the returned wrapper will be thread safe.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1b987-285">
            <paramref name="reader" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b987-285">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>