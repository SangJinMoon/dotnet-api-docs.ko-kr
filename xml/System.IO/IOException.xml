<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IOException.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac55d3b3668d358cfb41402e806826e7c434e743f29.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5d3b3668d358cfb41402e806826e7c434e743f29</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IO.IOException">
          <source>The exception that is thrown when an I/O error occurs.</source>
          <target state="translated">I/O 오류가 발생하는 경우에 throw되는 예외입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.IOException">
          <source><ph id="ph1">&lt;xref:System.IO.IOException&gt;</ph> is the base class for exceptions thrown while accessing information using streams, files and directories.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.IOException&gt;</ph>은 스트림, 파일 및 디렉터리를 사용하여 정보에 액세스하는 동안 throw되는 예외에 대한 기본 클래스입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.IOException">
          <source>The Base Class Library includes the following types, each of which is a derived class of <ph id="ph1">`IOException`</ph> :</source>
          <target state="translated">기본 클래스 라이브러리의 파생된 클래스는 각각 다음과 같은 형식이 포함 되어 <ph id="ph1">`IOException`</ph> :</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.IOException">
          <source>Where appropriate, use these types instead of IOException.</source>
          <target state="translated">적절 한 경우 이러한 형식을 IOException이 대신 사용 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.IOException">
          <source><ph id="ph1">&lt;xref:System.IO.IOException&gt;</ph> uses the HRESULT COR_E_IO which has the value 0x80131620.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.IOException&gt;</ph> 0x80131620 값이 있는 HRESULT COR_E_IO를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.IOException">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.IO.FileStream.Lock%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.IO.FileStream.Lock%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="T:System.IO.IOException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.IOException" /&gt;</ph> class with its message string.</source>
          <target state="translated">해당 메시지 문자열을 사용하여 <ph id="ph1">&lt;see cref="T:System.IO.IOException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.IO.IOException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.IOException" /&gt;</ph> class with its message string set to the empty string (""), its HRESULT set to COR_E_IO, and its inner exception set to a null reference.</source>
          <target state="translated">빈 문자열("")로 설정된 메시지 문자열, COR_E_IO로 설정된 HRESULT 및 null 참조로 설정된 내부 예외를 사용하여 <ph id="ph1">&lt;see cref="T:System.IO.IOException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IOException.#ctor">
          <source>The constructor initializes the <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph> property of the new instance to a system-supplied message that describes the error, such as "An I/O error occurred while performing the requested operation."</source>
          <target state="translated">생성자가 초기화 하는 <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph> "요청한 작업을 수행 하는 동안 I/O 오류가 발생 했습니다."와 같은 오류를 설명 하는 시스템 제공 메시지로 새 인스턴스의 속성</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IOException.#ctor">
          <source>This message takes into account the current system culture.</source>
          <target state="translated">이 메시지는 현재 시스템 문화권을 고려합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.IO.IOException.#ctor(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that describes the error.</source>
          <target state="translated">오류를 설명하는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.IO.IOException.#ctor(System.String)">
          <source>The content of <bpt id="p1">&lt;c&gt;</bpt>message<ept id="p1">&lt;/c&gt;</ept> is intended to be understood by humans.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>메시지<ept id="p1">&lt;/c&gt;</ept> 콘텐츠는 사용자의 이해를 돕기 위한 것입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.IO.IOException.#ctor(System.String)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">이 생성자의 호출자는 이 문자열이 현재 시스템 문화권에 맞게 지역화되었는지 확인하는 데 필요합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.IO.IOException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.IOException" /&gt;</ph> class with its message string set to <ph id="ph2">&lt;paramref name="message" /&gt;</ph>, its HRESULT set to COR_E_IO, and its inner exception set to <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="message" /&gt;</ph>로 설정된 메시지 문자열, COR_E_IO로 설정된 HRESULT 및 <ph id="ph3">&lt;see langword="null" /&gt;</ph>로 설정된 내부 예외를 사용하여 <ph id="ph1">&lt;see cref="T:System.IO.IOException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IOException.#ctor(System.String)">
          <source>The constructor initializes the <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph> property of the new instance using <ph id="ph2">`message`</ph>.</source>
          <target state="translated">생성자가 초기화 하는 <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph> 속성을 사용 하 여 새 인스턴스의 <ph id="ph2">`message`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.IO.IOException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The data for serializing or deserializing the object.</source>
          <target state="translated">개체를 serialize 또는 deserialize하는 데 사용하는 데이터입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.IO.IOException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The source and destination for the object.</source>
          <target state="translated">개체의 소스와 대상입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.IO.IOException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.IOException" /&gt;</ph> class with the specified serialization and context information.</source>
          <target state="translated">지정한 serialization와 컨텍스트 정보를 사용하여 <ph id="ph1">&lt;see cref="T:System.IO.IOException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.IO.IOException.#ctor(System.String,System.Exception)">
          <source>The error message that explains the reason for the exception.</source>
          <target state="translated">@FSHO2@예외 이유를 설명하는 오류 메시지입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.IO.IOException.#ctor(System.String,System.Exception)">
          <source>The exception that is the cause of the current exception.</source>
          <target state="translated">현재 예외의 원인인 예외입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.IO.IOException.#ctor(System.String,System.Exception)">
          <source>If the <bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> parameter is not <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the current exception is raised in a <ph id="ph2">&lt;see langword="catch" /&gt;</ph> block that handles the inner exception.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> 매개 변수가 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이 아니면 현재 예외는 내부 예외를 처리하는 <ph id="ph2">&lt;see langword="catch" /&gt;</ph> 블록에서 발생합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.IO.IOException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.IOException" /&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of this exception.</source>
          <target state="translated">지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <ph id="ph1">&lt;see cref="T:System.IO.IOException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IOException.#ctor(System.String,System.Exception)">
          <source>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">이전 예외의 직접적인 결과로 throw되는 예외의 <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> 속성에는 이전 예외에 대한 참조가 들어 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IOException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or <ph id="ph2">`null`</ph> if the <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> 속성은 생성자에 전달되는 값과 동일한 값을 반환하며, <ph id="ph2">`null`</ph> 속성이 생성자에 내부 예외 값을 제공하지 않는 경우에는 <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph>을 반환합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IOException.#ctor(System.String,System.Exception)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.IO.IOException&gt;</ph>.</source>
          <target state="translated">다음 표에서는 <ph id="ph1">&lt;xref:System.IO.IOException&gt;</ph> 인스턴스의 초기 속성 값을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IOException.#ctor(System.String,System.Exception)">
          <source>Property</source>
          <target state="translated">속성</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IOException.#ctor(System.String,System.Exception)">
          <source>Value</source>
          <target state="translated">값</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IOException.#ctor(System.String,System.Exception)">
          <source>The inner exception reference.</source>
          <target state="translated">내부 예외 참조</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IOException.#ctor(System.String,System.Exception)">
          <source>The error message string.</source>
          <target state="translated">오류 메시지 문자열</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IOException.#ctor(System.String,System.Exception)">
          <source>For more information on inner exceptions, see <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph>.</source>
          <target state="translated">내부 예외에 대 한 자세한 내용은 참조 하십시오. <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.IO.IOException.#ctor(System.String,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that describes the error.</source>
          <target state="translated">오류를 설명하는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.IO.IOException.#ctor(System.String,System.Int32)">
          <source>The content of <bpt id="p1">&lt;c&gt;</bpt>message<ept id="p1">&lt;/c&gt;</ept> is intended to be understood by humans.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>메시지<ept id="p1">&lt;/c&gt;</ept> 콘텐츠는 사용자의 이해를 돕기 위한 것입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.IO.IOException.#ctor(System.String,System.Int32)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">이 생성자의 호출자는 이 문자열이 현재 시스템 문화권에 맞게 지역화되었는지 확인하는 데 필요합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.IO.IOException.#ctor(System.String,System.Int32)">
          <source>An integer identifying the error that has occurred.</source>
          <target state="translated">발생한 오류를 식별하는 정수입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.IO.IOException.#ctor(System.String,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.IOException" /&gt;</ph> class with its message string set to <ph id="ph2">&lt;paramref name="message" /&gt;</ph> and its HRESULT user-defined.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="message" /&gt;</ph>로 설정된 메시지 문자열과 사용자 정의된 HRESULT를 사용하여 <ph id="ph1">&lt;see cref="T:System.IO.IOException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>