<Type Name="TextWriter" FullName="System.IO.TextWriter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2044a536a769d9003e84e0e81a2cde6657665ff0" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39958216" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class TextWriter : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit TextWriter extends System.MarshalByRefObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IO.TextWriter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TextWriter&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextWriter abstract : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="F#" Value="type TextWriter = class&#xA;    inherit MarshalByRefObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.IO</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="0e362-101">일련의 문자를 연속하여 쓸 수 있는 작성기를 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0e362-101">Represents a writer that can write a sequential series of characters.</span>
      </span>
      <span data-ttu-id="0e362-102">이 클래스는 추상 클래스입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0e362-102">This class is abstract.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e362-103"><xref:System.IO.TextWriter> 추상 기본 클래스인 <xref:System.IO.StreamWriter> 및 <xref:System.IO.StringWriter>를 작성 하는 문자 스트림 및 문자열, 각각.</span><span class="sxs-lookup"><span data-stu-id="0e362-103"><xref:System.IO.TextWriter> is the abstract base class of <xref:System.IO.StreamWriter> and <xref:System.IO.StringWriter>, which write characters to streams and strings, respectively.</span></span> <span data-ttu-id="0e362-104">인스턴스를 만들고 <xref:System.IO.TextWriter> 문자열 개체에 쓰기, 파일, 문자열에 쓸 또는 XML을 serialize 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-104">Create an instance of <xref:System.IO.TextWriter> to write an object to a string, write strings to a file, or to serialize XML.</span></span> <span data-ttu-id="0e362-105">인스턴스를 사용할 수도 있습니다 <xref:System.IO.TextWriter> 텍스트 문자열 또는 스트림에 사용 같은 Api를 사용 하 여 사용자 지정 백업 저장소에 쓸 또는 텍스트 서식 지정에 대 한 지원을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-105">You can also use an instance of <xref:System.IO.TextWriter> to write text to a custom backing store using the same APIs you would use for a string or a stream, or to add support for text formatting.</span></span>  
  
 <span data-ttu-id="0e362-106">모든 합니다 `Write` 메서드의 <xref:System.IO.TextWriter> 매개 변수 값을 문자열로 작성으로 기본 데이터 형식이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-106">All the `Write` methods of <xref:System.IO.TextWriter> having primitive data types as parameters write out the values as strings.</span></span>  
  
 <span data-ttu-id="0e362-107">기본적으로 <xref:System.IO.TextWriter> 은 스레드로부터 안전 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-107">By default, a <xref:System.IO.TextWriter> is not thread safe.</span></span> <span data-ttu-id="0e362-108">참조 <xref:System.IO.TextWriter.Synchronized%2A?displayProperty=nameWithType> 스레드로부터 안전한 래퍼에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-108">See <xref:System.IO.TextWriter.Synchronized%2A?displayProperty=nameWithType> for a thread-safe wrapper.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0e362-109">이 형식이 구현 하는 <xref:System.IDisposable> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-109">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="0e362-110">이 형식에서 파생 되는 모든 형식을 사용 하 여 마쳤으면 직접 또는 간접적으로으로 삭제 해야 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-110">When you have finished using any type that derives from this type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="0e362-111">직접 형식의 dispose 호출 해당 <xref:System.IO.TextWriter.Dispose%2A> 의 메서드를 `try` / `catch` 블록입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-111">To dispose of the type directly, call its <xref:System.IO.TextWriter.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="0e362-112">삭제 하지 직접, 언어 구문 같은 사용 `using` (C#에서) 또는 `Using` (Visual Basic에서는).</span><span class="sxs-lookup"><span data-stu-id="0e362-112">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="0e362-113">자세한 내용은 Dispose 및 "를 사용 하는 개체는 구현 IDisposable" 섹션을 참조 하십시오.는 <xref:System.IDisposable> 인터페이스 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-113">For more information, see Dispose and the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="0e362-114">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-114">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0e362-115"><xref:System.IO.TextWriter> 클래스는 추상 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-115">The <xref:System.IO.TextWriter> class is an abstract class.</span></span> <span data-ttu-id="0e362-116">따라서 인스턴스화하지 않습니다 해당 코드에서.</span><span class="sxs-lookup"><span data-stu-id="0e362-116">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="0e362-117"><xref:System.IO.StreamWriter> 클래스에서 파생 되며 <xref:System.IO.TextWriter> 스트림에 쓸에 대 한 멤버의 구현을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-117">The <xref:System.IO.StreamWriter> class derives from <xref:System.IO.TextWriter> and provides implementations of the members for writing to a stream.</span></span> <span data-ttu-id="0e362-118">다음 예제에서는 문자열 값을 텍스트 파일을 사용 하 여 구성 된 두 줄을 작성 하는 방법을 보여 줍니다는 <xref:System.IO.StreamWriter.WriteLineAsync%28System.String%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0e362-118">The following example shows how to write two lines that consist of string values to a text file by using the <xref:System.IO.StreamWriter.WriteLineAsync%28System.String%29> method.</span></span>  
  
 <span data-ttu-id="0e362-119">제공 하는 파생된 클래스에서 Dispose를 재정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-119">Override Dispose in a derived class to provide</span></span>  
  
 [!code-csharp[System.IO.StreamWriter#23](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/example23.cs#23)]
 [!code-vb[System.IO.StreamWriter#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/example23.vb#23)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="0e362-120">
        <para>파생된 클래스가 최소한으로 구현 해야 합니다 <see cref="M:System.IO.TextWriter.Write(System.Char)" /> 의 유용한 인스턴스를 만들 방법 <see cref="T:System.IO.TextWriter" />합니다.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="0e362-120">
          <para>A derived class must minimally implement the <see cref="M:System.IO.TextWriter.Write(System.Char)" /> method to make a useful instance of <see cref="T:System.IO.TextWriter" />.</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.IO.StreamWriter" />
    <altmember cref="T:System.IO.StringWriter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0e362-121">
            <see cref="T:System.IO.TextWriter" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-121">Initializes a new instance of the <see cref="T:System.IO.TextWriter" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TextWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TextWriter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0e362-122">
            <see cref="T:System.IO.TextWriter" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-122">Initializes a new instance of the <see cref="T:System.IO.TextWriter" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e362-123">에 대 한 값을 제공 하지 않으려면이 생성자 오버 로드를 사용 합니다 <xref:System.IO.TextWriter.FormatProvider%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-123">Use this constructor overload when you do not want to provide a value for the <xref:System.IO.TextWriter.FormatProvider%2A> property.</span></span> <span data-ttu-id="0e362-124">경우는 <xref:System.IO.TextWriter.FormatProvider%2A> 속성은 `null`, 서식 지정에 대 한 현재 스레드의 문화권이 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-124">When the <xref:System.IO.TextWriter.FormatProvider%2A> property is `null`, the culture of the current thread is used for formatting.</span></span>  
  
 <span data-ttu-id="0e362-125">파생된 클래스에 대 한이 생성자를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-125">Use this constructor for derived classes.</span></span>  
  
 <span data-ttu-id="0e362-126">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-126">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TextWriter (IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.#ctor(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (formatProvider As IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TextWriter(IFormatProvider ^ formatProvider);" />
      <MemberSignature Language="F#" Value="new System.IO.TextWriter : IFormatProvider -&gt; System.IO.TextWriter" Usage="new System.IO.TextWriter formatProvider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="formatProvider">
          <span data-ttu-id="0e362-127">서식 지정을 제어하는 <see cref="T:System.IFormatProvider" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-127">An <see cref="T:System.IFormatProvider" /> object that controls formatting.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e362-128">지정된 서식 공급자를 사용하여 <see cref="T:System.IO.TextWriter" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-128">Initializes a new instance of the <see cref="T:System.IO.TextWriter" /> class with the specified format provider.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e362-129">이 생성자 오버 로드에 대 한 값을 제공 하는 데는 <xref:System.IO.TextWriter.FormatProvider%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-129">Use this constructor overload to provide a value for the <xref:System.IO.TextWriter.FormatProvider%2A> property.</span></span> <span data-ttu-id="0e362-130">값을 <xref:System.IO.TextWriter.FormatProvider%2A> 속성을 호출할 때 사용 되는 culture 별 서식 지정 합니다 <xref:System.IO.TextWriter.Write%2A> 및 <xref:System.IO.TextWriter.WriteLine%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0e362-130">The value of the <xref:System.IO.TextWriter.FormatProvider%2A> property specifies the culture-specific formatting that is used when you call the <xref:System.IO.TextWriter.Write%2A> and <xref:System.IO.TextWriter.WriteLine%2A> methods.</span></span> <span data-ttu-id="0e362-131">사용 하 여 인스턴스를 만들 형식 공급자를 제공 하지 않을 경우 합니다 <xref:System.IO.TextWriter.%23ctor> 로 설정 하는 생성자를 <xref:System.IO.TextWriter.FormatProvider%2A> 속성을 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-131">If you do not want to provide a format provider, you create an instance by using the <xref:System.IO.TextWriter.%23ctor> constructor, which sets the <xref:System.IO.TextWriter.FormatProvider%2A> property to `null`.</span></span> <span data-ttu-id="0e362-132">경우는 <xref:System.IO.TextWriter.FormatProvider%2A> 속성은 `null`, 서식 지정에 대 한 현재 스레드의 문화권이 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-132">When the <xref:System.IO.TextWriter.FormatProvider%2A> property is `null`, the culture of the current thread is used for formatting.</span></span>  
  
 <span data-ttu-id="0e362-133">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-133">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="textWriter.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0e362-134">현재 작성기를 닫고 그 작성기와 관련된 모든 시스템 리소스를 해제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-134">Closes the current writer and releases any system resources associated with the writer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e362-135">이 구현의 `Close` 호출을 <xref:System.IO.TextWriter.Dispose%28System.Boolean%29?displayProperty=nameWithType> 메서드 전달는 `true` 값입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-135">This implementation of `Close` calls the <xref:System.IO.TextWriter.Dispose%28System.Boolean%29?displayProperty=nameWithType> method and passes it a `true` value.</span></span>  
  
 <span data-ttu-id="0e362-136">명시적으로 호출 하지 않으면 스트림을 내부 인코더가 플러시되지 것입니다 <xref:System.IO.TextWriter.Flush%2A> 또는 `Close`합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-136">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.IO.TextWriter.Flush%2A> or `Close`.</span></span> <span data-ttu-id="0e362-137">설정 된 <xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType> 속성을 `true` 스트림 버퍼에서 데이터를 플러시할 수는 있지만 인코더 상태는 플러시되지 있다는 것을 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-137">Setting the <xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType> property to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="0e362-138">이 수는 다음 문자 블록을 올바르게 인코딩할 수 있도록 상태로 (부분 자)를 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-138">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="0e362-139">이 시나리오는 UTF8 및 UTF7 여기서 인코더는 인접 한 문자를 받은 후에 특정 문자를 인코딩할 수 있는 영향을 줍니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-139">This scenario affects UTF8 and UTF7 where certain characters can be encoded only after the encoder receives the adjacent character or characters.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0e362-140">파생된 클래스에서 재정의 하지는 <xref:System.IO.TextWriter.Close%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0e362-140">In derived classes, do not override the <xref:System.IO.TextWriter.Close%2A> method.</span></span> <span data-ttu-id="0e362-141">대신 재정의 된 <xref:System.IO.TextWriter.Dispose%28System.Boolean%29?displayProperty=nameWithType> 리소스를 해제 하는 것에 대 한 코드를 추가 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-141">Instead, override the <xref:System.IO.TextWriter.Dispose%28System.Boolean%29?displayProperty=nameWithType> method to add code for releasing resources.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CoreNewLine">
      <MemberSignature Language="C#" Value="protected char[] CoreNewLine;" />
      <MemberSignature Language="ILAsm" Value=".field family char[] CoreNewLine" />
      <MemberSignature Language="DocId" Value="F:System.IO.TextWriter.CoreNewLine" />
      <MemberSignature Language="VB.NET" Value="Protected CoreNewLine As Char() " />
      <MemberSignature Language="C++ CLI" Value="protected: cli::array &lt;char&gt; ^ CoreNewLine;" />
      <MemberSignature Language="F#" Value="val mutable CoreNewLine : char[]" Usage="System.IO.TextWriter.CoreNewLine" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0e362-142">이 <see langword="TextWriter" />에 사용한 줄 바꿈 문자를 저장합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-142">Stores the newline characters used for this <see langword="TextWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e362-143">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-143">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0e362-144">해당 <see cref="T:System.IO.TextWriter" /> 개체에서 사용하는 리소스를 모두 해제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-144">Releases all resources used by the <see cref="T:System.IO.TextWriter" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="textWriter.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0e362-145">해당 <see cref="T:System.IO.TextWriter" /> 개체에서 사용하는 리소스를 모두 해제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-145">Releases all resources used by the <see cref="T:System.IO.TextWriter" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e362-146"><xref:System.IO.TextWriter.Dispose%2A> 사용을 마치면 <xref:System.IO.TextWriter>를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-146">Call <xref:System.IO.TextWriter.Dispose%2A> when you are finished using the <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="0e362-147"><xref:System.IO.TextWriter.Dispose%2A> 메서드를 사용하면 <xref:System.IO.TextWriter>를 사용할 수 없게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-147">The <xref:System.IO.TextWriter.Dispose%2A> method leaves the <xref:System.IO.TextWriter> in an unusable state.</span></span> <span data-ttu-id="0e362-148">호출한 후 <xref:System.IO.TextWriter.Dispose%2A>에 대 한 모든 참조를 해제 해야 합니다 <xref:System.IO.TextWriter> 가비지 수집기에서 메모리를 회수할 수 있도록 하는 <xref:System.IO.TextWriter> 차지한 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-148">After calling <xref:System.IO.TextWriter.Dispose%2A>, you must release all references to the <xref:System.IO.TextWriter> so the garbage collector can reclaim the memory that the <xref:System.IO.TextWriter> was occupying.</span></span>  
  
 <span data-ttu-id="0e362-149">자세한 내용은 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 하 고 [Dispose 메서드 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-149">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
 <span data-ttu-id="0e362-150">**참고** 항상 호출 <xref:System.IO.TextWriter.Dispose%2A> 에 대 한 마지막 참조를 해제 하기 전에 <xref:System.IO.TextWriter>합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-150">**Note** Always call <xref:System.IO.TextWriter.Dispose%2A> before you release your last reference to the <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="0e362-151">이렇게 하지 않으면 가비지 수집기가 <xref:System.IO.TextWriter> 개체의 <xref:System.Object.Finalize%2A> 메서드를 호출할 때까지 사용 중인 리소스가 해제되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-151">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.IO.TextWriter> object's <xref:System.Object.Finalize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="textWriter.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="0e362-152">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-152">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e362-153">
            <see cref="T:System.IO.TextWriter" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-153">Releases the unmanaged resources used by the <see cref="T:System.IO.TextWriter" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e362-154">이 메서드는 `Dispose` 고 <xref:System.Object.Finalize%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-154">This method is called by `Dispose` and <xref:System.Object.Finalize%2A>.</span></span> <span data-ttu-id="0e362-155">기본적으로이 메서드는 다음과 같이 지정 됩니다. 합니다 `disposing` 매개 변수에 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-155">By default, this method specifies the `disposing` parameter as `true`.</span></span> <span data-ttu-id="0e362-156"><xref:System.Object.Finalize%2A> 지정 된 `disposing` 매개 변수에 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-156"><xref:System.Object.Finalize%2A> specifies the `disposing` parameter as `false`.</span></span>  
  
 <span data-ttu-id="0e362-157">`disposing` 매개 변수가 `true`인 경우 이 메서드는 이 <xref:System.IO.TextWriter>에서 참조하는 관리 개체가 보유하고 있는 리소스를 모두 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-157">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.TextWriter> references.</span></span> <span data-ttu-id="0e362-158">이 메서드는 참조되는 각 개체의 `Dispose` 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-158">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="0e362-159">
            <para>
              <see cref="M:System.IO.TextWriter.Dispose(System.Boolean)" /> 다른 개체에서 여러 번 호출할 수 있습니다. 이 메서드를 재정의 하는 경우에 대 한 이전 호출에서 삭제 된 개체를 참조 하지 않도록 주의 <see langword="Dispose" />합니다. 이 메서드를 구현 하는 방법에 대 한 자세한 내용은 참조 하십시오 [Dispose 메서드 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.  에 대 한 자세한 내용은 <see cref="M:System.IDisposable.Dispose" /> 하 고 <see cref="M:System.Object.Finalize" />를 참조 하세요 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md)합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-159">
              <para>
                <see cref="M:System.IO.TextWriter.Dispose(System.Boolean)" /> can be called multiple times by other objects. When overriding this method, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />. For more information about how to implement this method, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see cref="M:System.IDisposable.Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public abstract System.Text.Encoding Encoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.IO.TextWriter.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding" Usage="System.IO.TextWriter.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0e362-160">파생 클래스에서 재정의된 경우 출력을 쓰는 문자 인코딩을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-160">When overridden in a derived class, returns the character encoding in which the output is written.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0e362-161">출력을 쓰는 문자 인코딩입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-161">The character encoding in which the output is written.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e362-162">이 속성은 위치 헤더를 작성 해야 사용한 인코딩을 포함 하는 일부 XML 시나리오에 대 한 필요를 `TextWriter`입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-162">This property is necessary for some XML scenarios where a header must be written containing the encoding used by the `TextWriter`.</span></span> <span data-ttu-id="0e362-163">이렇게 하면 임의의 사용 하는 XML 코드 `TextWriter` 올바른 XML 헤더를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-163">This enables the XML code to consume an arbitrary `TextWriter` and generate the correct XML header.</span></span>  
  
 <span data-ttu-id="0e362-164">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-164">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public virtual void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Flush();" />
      <MemberSignature Language="F#" Value="abstract member Flush : unit -&gt; unit&#xA;override this.Flush : unit -&gt; unit" Usage="textWriter.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0e362-165">현재 작성기에 대한 모든 버퍼를 지우면 버퍼링된 모든 데이터를 내부 장치에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-165">Clears all buffers for the current writer and causes any buffered data to be written to the underlying device.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e362-166">이 기본 메서드는 아무 것도 있지만 파생된 클래스에서 적절 한 기능을 제공 하는 메서드를 재정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-166">This default method does nothing, but derived classes can override the method to provide the appropriate functionality.</span></span>  
  
 <span data-ttu-id="0e362-167">명시적으로 호출 하지 않으면 스트림을 내부 인코더가 플러시되지 것입니다 `Flush` 또는 <xref:System.IO.TextWriter.Close%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-167">Flushing the stream will not flush its underlying encoder unless you explicitly call `Flush` or <xref:System.IO.TextWriter.Close%2A>.</span></span> <span data-ttu-id="0e362-168">설정 <xref:System.IO.StreamWriter.AutoFlush%2A> 에 `true` 스트림 버퍼에서 데이터를 플러시할 수는 있지만 인코더 상태는 플러시되지 있다는 것을 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-168">Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="0e362-169">이 수는 다음 문자 블록을 올바르게 인코딩할 수 있도록 상태로 (부분 자)를 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-169">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="0e362-170">이 시나리오는 UTF8 및 UTF7 인코더는 인접 한 문자를 받은 후 특정 문자를 인코딩된만 수 있는 영향을 줍니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-170">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task FlushAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task FlushAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.FlushAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FlushAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ FlushAsync();" />
      <MemberSignature Language="F#" Value="abstract member FlushAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.FlushAsync : unit -&gt; System.Threading.Tasks.Task" Usage="textWriter.FlushAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0e362-171">현재 작성기에 대한 모든 버퍼를 비동기적으로 지우면 버퍼링된 모든 데이터를 내부 장치에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-171">Asynchronously clears all buffers for the current writer and causes any buffered data to be written to the underlying device.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0e362-172">비동기 플러시 작업을 나타내는 작업입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-172">A task that represents the asynchronous flush operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0e362-173">텍스트 작성기가 삭제됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-173">The text writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0e362-174">이전 쓰기 작업에서 작성기를 현재 사용하고 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-174">The writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
      </Docs>
    </Member>
    <Member MemberName="FormatProvider">
      <MemberSignature Language="C#" Value="public virtual IFormatProvider FormatProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IFormatProvider FormatProvider" />
      <MemberSignature Language="DocId" Value="P:System.IO.TextWriter.FormatProvider" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FormatProvider As IFormatProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property IFormatProvider ^ FormatProvider { IFormatProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FormatProvider : IFormatProvider" Usage="System.IO.TextWriter.FormatProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IFormatProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0e362-175">서식 지정을 제어하는 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-175">Gets an object that controls formatting.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0e362-176">특정 문화권에 대한 <see cref="T:System.IFormatProvider" /> 개체이거나, 다른 문화권을 지정하지 않은 경우 현재 문화권의 서식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-176">An <see cref="T:System.IFormatProvider" /> object for a specific culture, or the formatting of the current culture if no other culture is specified.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e362-177">값을 <xref:System.IO.TextWriter.FormatProvider%2A> 속성을 호출할 때 사용 되는 culture 별 서식 지정 합니다 <xref:System.IO.TextWriter.Write%2A> 및 <xref:System.IO.TextWriter.WriteLine%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0e362-177">The value of the <xref:System.IO.TextWriter.FormatProvider%2A> property specifies the culture-specific formatting that is used when you call the <xref:System.IO.TextWriter.Write%2A> and <xref:System.IO.TextWriter.WriteLine%2A> methods.</span></span> <span data-ttu-id="0e362-178">사용 하 여 인스턴스를 만들 형식 공급자를 제공 하지 않을 경우 합니다 <xref:System.IO.TextWriter.%23ctor> 로 설정 하는 생성자를 <xref:System.IO.TextWriter.FormatProvider%2A> 속성을 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-178">If you do not want to provide a format provider, you create an instance by using the <xref:System.IO.TextWriter.%23ctor> constructor, which sets the <xref:System.IO.TextWriter.FormatProvider%2A> property to `null`.</span></span> <span data-ttu-id="0e362-179">경우는 <xref:System.IO.TextWriter.FormatProvider%2A> 속성에 들어 `null`, 서식 지정에 대 한 현재 스레드의 문화권이 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-179">When the <xref:System.IO.TextWriter.FormatProvider%2A> property contains `null`, the culture of the current thread is used for formatting.</span></span>  
  
 <span data-ttu-id="0e362-180">파일을 만들고 파일에 텍스트 쓰기의 예제를 보려면 [방법: 파일에 텍스트 쓰기](~/docs/standard/io/how-to-write-text-to-a-file.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-180">For an example of creating a file and writing text to a file, see [How to: Write Text to a File](~/docs/standard/io/how-to-write-text-to-a-file.md).</span></span> <span data-ttu-id="0e362-181">파일에서 읽는 텍스트의 예제를 보려면 [방법: 파일에서 텍스트 읽기](~/docs/standard/io/how-to-read-text-from-a-file.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-181">For an example of reading text from a file, see [How to: Read Text from a File](~/docs/standard/io/how-to-read-text-from-a-file.md).</span></span> <span data-ttu-id="0e362-182">읽기 및 쓰기 이진 파일의 예제를 참조 하세요 [방법: 새로 만든 데이터 파일에 읽기 및 쓰기](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-182">For an example of reading from and writing to a binary file, see [How to: Read and Write to a Newly Created Data File](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md).</span></span>  
  
 <span data-ttu-id="0e362-183">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-183">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
      </Docs>
    </Member>
    <Member MemberName="NewLine">
      <MemberSignature Language="C#" Value="public virtual string NewLine { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NewLine" />
      <MemberSignature Language="DocId" Value="P:System.IO.TextWriter.NewLine" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property NewLine As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NewLine { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NewLine : string with get, set" Usage="System.IO.TextWriter.NewLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0e362-184">현재 <see langword="TextWriter" />에서 사용한 줄 종결자 문자열을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-184">Gets or sets the line terminator string used by the current <see langword="TextWriter" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0e362-185">현재 <see langword="TextWriter" />의 줄 종결자 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-185">The line terminator string for the current <see langword="TextWriter" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e362-186">기본 줄 종결자 문자열은 캐리지 리턴 뒤에 줄 바꿈 ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="0e362-186">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span>  
  
 <span data-ttu-id="0e362-187">하나의 때마다 텍스트 스트림에 줄 종결자 문자열을 쓸지의 `WriteLine` 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-187">The line terminator string is written to the text stream whenever one of the `WriteLine` methods is called.</span></span> <span data-ttu-id="0e362-188">작성 한 텍스트 순서로 합니다 `TextWriter` 읽을 수는 <xref:System.IO.TextReader>, "\n" 또는 "\r\n" 문자열 종결자로 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-188">In order for text written by the `TextWriter` to be readable by a <xref:System.IO.TextReader>, only "\n" or "\r\n" should be used as terminator strings.</span></span> <span data-ttu-id="0e362-189">하는 경우 `NewLine` 로 설정 된 `null`를 기본 줄 바꿈 문자 대신 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-189">If `NewLine` is set to `null`, the default newline character is used instead.</span></span>  
  
 <span data-ttu-id="0e362-190">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-190">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static readonly System.IO.TextWriter Null;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.IO.TextWriter Null" />
      <MemberSignature Language="DocId" Value="F:System.IO.TextWriter.Null" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Null As TextWriter " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::IO::TextWriter ^ Null;" />
      <MemberSignature Language="F#" Value=" staticval mutable Null : System.IO.TextWriter" Usage="System.IO.TextWriter.Null" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0e362-191">쓸 수는 있지만 읽을 수는 없는 백업 저장소를 <see langword="TextWriter" />에 제공하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-191">Provides a <see langword="TextWriter" /> with no backing store that can be written to, but not read from.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e362-192">사용 하 여 `Null` 운영 체제 리소스를 사용 하지는 않는 스트림과 출력을 리디렉션할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-192">Use `Null` to redirect output to a stream that will not consume any operating system resources.</span></span>  
  
 <span data-ttu-id="0e362-193">경우는 <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType> 메서드를 호출 `Null`, 호출이 반환 되 고 데이터가 없는 백업 저장소에 실제로 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-193">When the <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType> methods are invoked on `Null`, the call simply returns, and no data is actually written to any backing store.</span></span>  
  
 <span data-ttu-id="0e362-194">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-194">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
      </Docs>
    </Member>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.IO.TextWriter Synchronized (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.TextWriter Synchronized(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Synchronized(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Synchronized (writer As TextWriter) As TextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::TextWriter ^ Synchronized(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="static member Synchronized : System.IO.TextWriter -&gt; System.IO.TextWriter" Usage="System.IO.TextWriter.Synchronized writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="0e362-195">동기화할 <see langword="TextWriter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-195">The <see langword="TextWriter" /> to synchronize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e362-196">지정된 <see langword="TextWriter" /> 주위에 스레드로부터 안전한 래퍼를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-196">Creates a thread-safe wrapper around the specified <see langword="TextWriter" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0e362-197">스레드로부터 안전한 래퍼입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-197">A thread-safe wrapper.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e362-198">모든 쓰기 작업 반환된 래퍼에 스레드로부터 안전 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-198">All write operations to the returned wrapper will be thread safe.</span></span> <span data-ttu-id="0e362-199">한 번에 하나의 스레드만에서 메서드를 실행할 수 없는지 확인 하려면이 메서드를 호출 합니다 <xref:System.IO.TextWriter> 반환 되는 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="0e362-199">You call this method to ensure that only one thread at a time can execute the methods on the <xref:System.IO.TextWriter> instance that is returned.</span></span> <span data-ttu-id="0e362-200">동기화 및 스레딩에 대 한 자세한 내용은 참조 하세요. [다중 스레딩 위한 데이터 동기화](~/docs/standard/threading/synchronizing-data-for-multithreading.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-200">For more information about synchronization and threading, see [Synchronizing Data for Multithreading](~/docs/standard/threading/synchronizing-data-for-multithreading.md).</span></span>  
  
 <span data-ttu-id="0e362-201">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-201">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0e362-202">
            <paramref name="writer" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-202">
              <paramref name="writer" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0e362-203">데이터를 텍스트 문자열 또는 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-203">Writes data to a text string or stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(bool value);" />
      <MemberSignature Language="F#" Value="abstract member Write : bool -&gt; unit&#xA;override this.Write : bool -&gt; unit" Usage="textWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0e362-204">쓸 <see langword="Boolean" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-204">The <see langword="Boolean" /> value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e362-205">
            <see langword="Boolean" /> 값의 텍스트 표현을 텍스트 문자열 또는 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-205">Writes the text representation of a <see langword="Boolean" /> value to the text string or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e362-206">호출 하 여 지정된 된 값의 텍스트 표현을 생성 되는 <xref:System.Boolean.ToString%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0e362-206">The text representation of the specified value is produced by calling the <xref:System.Boolean.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="0e362-207">이 메서드 중 하나를 출력 <xref:System.Boolean.TrueString?displayProperty=nameWithType> 또는 <xref:System.Boolean.FalseString?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-207">This method outputs either <xref:System.Boolean.TrueString?displayProperty=nameWithType> or <xref:System.Boolean.FalseString?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="0e362-208">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-208">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0e362-209">
            <see cref="T:System.IO.TextWriter" />가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-209">The <see cref="T:System.IO.TextWriter" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0e362-210">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-210">An I/O error occurs.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(char value);" />
      <MemberSignature Language="F#" Value="abstract member Write : char -&gt; unit&#xA;override this.Write : char -&gt; unit" Usage="textWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0e362-211">텍스트 스트림에 쓸 문자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-211">The character to write to the text stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e362-212">문자를 텍스트 문자열 또는 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-212">Writes a character to the text string or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e362-213">이 기본 메서드는 아무 것도 있지만 파생된 클래스에서 적절 한 기능을 제공 하는 메서드를 재정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-213">This default method does nothing, but derived classes can override the method to provide the appropriate functionality.</span></span>  
  
 <span data-ttu-id="0e362-214">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-214">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0e362-215">
            <see cref="T:System.IO.TextWriter" />가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-215">The <see cref="T:System.IO.TextWriter" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0e362-216">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-216">An I/O error occurs.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.StreamWriter.Write(System.Char)" />
        <altmember cref="M:System.IO.StringWriter.Write(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (char[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(char[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (buffer As Char())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(cli::array &lt;char&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="abstract member Write : char[] -&gt; unit&#xA;override this.Write : char[] -&gt; unit" Usage="textWriter.Write buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="0e362-217">텍스트 스트림에 쓸 문자 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-217">The character array to write to the text stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e362-218">문자 배열을 텍스트 문자열 또는 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-218">Writes a character array to the text string or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e362-219">이 메서드가 개별 줄 바꿈 문자 (16 진수 0x000a)에 대 한 지정된 된 문자열을 검색 하지 않으며 바꿀 <xref:System.IO.TextWriter.NewLine%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-219">This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <xref:System.IO.TextWriter.NewLine%2A>.</span></span>  
  
 <span data-ttu-id="0e362-220">이 기본 메서드를 호출 합니다 <xref:System.IO.TextWriter.Write%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> 메서드 전체 문자 배열을 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-220">This default method calls the <xref:System.IO.TextWriter.Write%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method and passes the entire character array.</span></span> <span data-ttu-id="0e362-221">문자 배열이 `null`에 아무것도 기록 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-221">If the character array is `null`, nothing is written.</span></span>  
  
 <span data-ttu-id="0e362-222">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-222">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0e362-223">
            <see cref="T:System.IO.TextWriter" />가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-223">The <see cref="T:System.IO.TextWriter" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0e362-224">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-224">An I/O error occurs.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.StreamWriter.Write(System.Char[])" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::Decimal value);" />
      <MemberSignature Language="F#" Value="abstract member Write : decimal -&gt; unit&#xA;override this.Write : decimal -&gt; unit" Usage="textWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0e362-225">쓸 10진수 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-225">The decimal value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e362-226">10진수 값의 텍스트 표현을 텍스트 문자열 또는 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-226">Writes the text representation of a decimal value to the text string or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e362-227">합니다 <xref:System.IO.TextWriter.FormatProvider%2A> 그렇지 않은 경우 속성인 `null`, 문화권별 서식 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-227">The <xref:System.IO.TextWriter.FormatProvider%2A> property, if not `null`, specifies the culture-specific formatting.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0e362-228">
            <see cref="T:System.IO.TextWriter" />가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-228">The <see cref="T:System.IO.TextWriter" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0e362-229">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-229">An I/O error occurs.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(double value);" />
      <MemberSignature Language="F#" Value="abstract member Write : double -&gt; unit&#xA;override this.Write : double -&gt; unit" Usage="textWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0e362-230">쓸 8바이트 부동 소수점 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-230">The 8-byte floating-point value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e362-231">8바이트 부동 소수점 값의 텍스트 표현을 텍스트 문자열 또는 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-231">Writes the text representation of an 8-byte floating-point value to the text string or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e362-232">호출 하 여 지정된 된 값의 텍스트 표현을 생성 되는 <xref:System.Double.ToString%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0e362-232">The text representation of the specified value is produced by calling the <xref:System.Double.ToString%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="0e362-233">합니다 <xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType> 그렇지 않은 경우 속성인 `null`, 문화권별 서식 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-233">The <xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType> property, if not `null`, specifies the culture-specific formatting.</span></span>  
  
 <span data-ttu-id="0e362-234">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-234">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0e362-235">
            <see cref="T:System.IO.TextWriter" />가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-235">The <see cref="T:System.IO.TextWriter" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0e362-236">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-236">An I/O error occurs.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(int value);" />
      <MemberSignature Language="F#" Value="abstract member Write : int -&gt; unit&#xA;override this.Write : int -&gt; unit" Usage="textWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0e362-237">쓸 부호 있는 4바이트 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-237">The 4-byte signed integer to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e362-238">부호 있는 4바이트 정수의 텍스트 표현을 텍스트 문자열 또는 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-238">Writes the text representation of a 4-byte signed integer to the text string or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e362-239">호출 하 여 지정된 된 값의 텍스트 표현을 생성 되는 <xref:System.Int32.ToString%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0e362-239">The text representation of the specified value is produced by calling the <xref:System.Int32.ToString%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="0e362-240">합니다 <xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType> 그렇지 않은 경우 속성인 `null`, 문화권별 서식 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-240">The <xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType> property, if not `null`, specifies the culture-specific formatting.</span></span>  
  
 <span data-ttu-id="0e362-241">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-241">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0e362-242">
            <see cref="T:System.IO.TextWriter" />가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-242">The <see cref="T:System.IO.TextWriter" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0e362-243">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-243">An I/O error occurs.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(long value);" />
      <MemberSignature Language="F#" Value="abstract member Write : int64 -&gt; unit&#xA;override this.Write : int64 -&gt; unit" Usage="textWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0e362-244">쓸 부호 있는 8바이트 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-244">The 8-byte signed integer to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e362-245">부호 있는 8바이트 정수의 텍스트 표현을 텍스트 문자열 또는 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-245">Writes the text representation of an 8-byte signed integer to the text string or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e362-246">호출 하 여 지정된 된 값의 텍스트 표현을 생성 되는 <xref:System.Int64.ToString%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0e362-246">The text representation of the specified value is produced by calling the <xref:System.Int64.ToString%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="0e362-247">합니다 <xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType> 그렇지 않은 경우 속성인 `null`, 문화권별 서식 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-247">The <xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType> property, if not `null`, specifies the culture-specific formatting.</span></span>  
  
 <span data-ttu-id="0e362-248">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-248">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 [<span data-ttu-id="0e362-249">방법: 파일에 텍스트 쓰기</span><span class="sxs-lookup"><span data-stu-id="0e362-249">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0e362-250">
            <see cref="T:System.IO.TextWriter" />가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-250">The <see cref="T:System.IO.TextWriter" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0e362-251">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-251">An I/O error occurs.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Write : obj -&gt; unit&#xA;override this.Write : obj -&gt; unit" Usage="textWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0e362-252">쓸 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-252">The object to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e362-253">개체에 대해 <see langword="ToString" /> 메서드를 호출하여 해당 개체의 텍스트 표현을 텍스트 문자열 또는 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-253">Writes the text representation of an object to the text string or stream by calling the <see langword="ToString" /> method on that object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e362-254">이 오버 로드는 해당 하는 <xref:System.IO.TextWriter.Write%28System.String%29> 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-254">This overload is equivalent to the <xref:System.IO.TextWriter.Write%28System.String%29> overload.</span></span>  
  
 <span data-ttu-id="0e362-255">지정 된 개체가 있으면 `null`, 아무 작업도 수행 하 고 예외가 throw 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-255">If the specified object is `null`, no action is taken and no exception is thrown.</span></span> <span data-ttu-id="0e362-256">그렇지 않으면 개체의 `ToString` 메서드를 호출 하 고 문자열 표현을 생성 하 고 결과 문자열을 출력 스트림에 기록 될 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-256">Otherwise, the object's `ToString` method is called to produce the string representation, and the resulting string is then written to the output stream.</span></span> <span data-ttu-id="0e362-257">합니다 <xref:System.IO.TextWriter.FormatProvider%2A> 그렇지 않은 경우 속성인 `null`, 문화권별 서식 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-257">The <xref:System.IO.TextWriter.FormatProvider%2A> property, if not `null`, specifies the culture-specific formatting.</span></span>  
  
 <span data-ttu-id="0e362-258">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-258">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0e362-259">
            <see cref="T:System.IO.TextWriter" />가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-259">The <see cref="T:System.IO.TextWriter" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0e362-260">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-260">An I/O error occurs.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(valuetype System.ReadOnlySpan`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (buffer As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberSignature Language="F#" Value="abstract member Write : ReadOnlySpan&lt;char&gt; -&gt; unit&#xA;override this.Write : ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="textWriter.Write buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(float value);" />
      <MemberSignature Language="F#" Value="abstract member Write : single -&gt; unit&#xA;override this.Write : single -&gt; unit" Usage="textWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0e362-261">쓸 4바이트 부동 소수점 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-261">The 4-byte floating-point value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e362-262">4바이트 부동 소수점 값의 텍스트 표현을 텍스트 문자열 또는 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-262">Writes the text representation of a 4-byte floating-point value to the text string or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e362-263">호출 하 여 지정된 된 값의 텍스트 표현을 생성 되는 <xref:System.Single.ToString%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0e362-263">The text representation of the specified value is produced by calling the <xref:System.Single.ToString%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="0e362-264">합니다 <xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType> 그렇지 않은 경우 속성인 `null`, 문화권별 서식 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-264">The <xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType> property, if not `null`, specifies the culture-specific formatting.</span></span>  
  
 <span data-ttu-id="0e362-265">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-265">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0e362-266">
            <see cref="T:System.IO.TextWriter" />가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-266">The <see cref="T:System.IO.TextWriter" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0e362-267">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-267">An I/O error occurs.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Write : string -&gt; unit&#xA;override this.Write : string -&gt; unit" Usage="textWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0e362-268">쓸 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-268">The string to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e362-269">문자열을 텍스트 문자열 또는 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-269">Writes a string to the text string or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e362-270">이 오버 로드는 해당 하는 <xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29> 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-270">This overload is equivalent to the <xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29> overload.</span></span>  
  
 <span data-ttu-id="0e362-271">이 메서드가 개별 줄 바꿈 문자 (16 진수 0x000a)에 대 한 지정된 된 문자열을 검색 하지 않으며 바꿀 <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-271">This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="0e362-272">`value`가 `null`이면 텍스트 스트림에 아무 것도 쓰지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-272">If `value` is `null`, nothing is written to the text stream.</span></span>  
  
 <span data-ttu-id="0e362-273">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-273">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0e362-274">
            <see cref="T:System.IO.TextWriter" />가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-274">The <see cref="T:System.IO.TextWriter" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0e362-275">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-275">An I/O error occurs.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.StreamWriter.Write(System.String)" />
        <altmember cref="M:System.IO.StringWriter.Write(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="abstract member Write : uint32 -&gt; unit&#xA;override this.Write : uint32 -&gt; unit" Usage="textWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0e362-276">쓸 부호 없는 4바이트 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-276">The 4-byte unsigned integer to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e362-277">부호 없는 4바이트 정수의 텍스트 표현을 텍스트 문자열 또는 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-277">Writes the text representation of a 4-byte unsigned integer to the text string or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e362-278">호출 하 여 지정된 된 값의 텍스트 표현을 생성 되는 <xref:System.UInt32.ToString%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0e362-278">The text representation of the specified value is produced by calling the <xref:System.UInt32.ToString%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="0e362-279">합니다 <xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType> 그렇지 않은 경우 속성인 `null`, 문화권별 서식 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-279">The <xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType> property, if not `null`, specifies the culture-specific formatting.</span></span>  
  
 <span data-ttu-id="0e362-280">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-280">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0e362-281">
            <see cref="T:System.IO.TextWriter" />가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-281">The <see cref="T:System.IO.TextWriter" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0e362-282">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-282">An I/O error occurs.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="abstract member Write : uint64 -&gt; unit&#xA;override this.Write : uint64 -&gt; unit" Usage="textWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0e362-283">쓸 부호 없는 8바이트 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-283">The 8-byte unsigned integer to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e362-284">부호 없는 8바이트 정수의 텍스트 표현을 텍스트 문자열 또는 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-284">Writes the text representation of an 8-byte unsigned integer to the text string or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e362-285">호출 하 여 지정된 된 값의 텍스트 표현을 생성 되는 <xref:System.UInt64.ToString%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0e362-285">The text representation of the specified value is produced by calling the <xref:System.UInt64.ToString%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="0e362-286">합니다 <xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType> 그렇지 않은 경우 속성인 `null`, 문화권별 서식 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-286">The <xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType> property, if not `null`, specifies the culture-specific formatting.</span></span>  
  
 <span data-ttu-id="0e362-287">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-287">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0e362-288">
            <see cref="T:System.IO.TextWriter" />가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-288">The <see cref="T:System.IO.TextWriter" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0e362-289">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-289">An I/O error occurs.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (string format, object arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(string format, object arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (format As String, arg0 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::String ^ format, System::Object ^ arg0);" />
      <MemberSignature Language="F#" Value="abstract member Write : string * obj -&gt; unit&#xA;override this.Write : string * obj -&gt; unit" Usage="textWriter.Write (format, arg0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="0e362-290">복합 형식 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-290">A composite format string.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="0e362-291">서식을 지정하고 쓸 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-291">The object to format and write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e362-292">
            <see cref="M:System.String.Format(System.String,System.Object)" /> 메서드와 동일한 의미 체계를 사용하여 서식이 지정된 문자열을 텍스트 문자열이나 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-292">Writes a formatted string to the text string or stream, using the same semantics as the <see cref="M:System.String.Format(System.String,System.Object)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e362-293">이 메서드는 개체의 값을 문자열 표현으로 변환 하 고 문자열에서 표현을 포함 복합 서식을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-293">This method uses composite formatting to convert the value of an object to its string representation and to embed that representation in a string.</span></span> <span data-ttu-id="0e362-294">.NET에서는 다음 서식 항목에서 자세히 설명 되어 광범위 한 형식 지원:</span><span class="sxs-lookup"><span data-stu-id="0e362-294">.NET provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="0e362-295">복합 서식 지정 기능에 대 한 자세한 내용은 참조 하세요. [복합 서식 지정](~/docs/standard/base-types/composite-formatting.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-295">For more information about the composite formatting feature, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
-   <span data-ttu-id="0e362-296">숫자 서식 지정자에 대 한 자세한 내용은 참조 하세요. [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) 하 고 [사용자 지정 숫자 서식 문자열](~/docs/standard/base-types/custom-numeric-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-296">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="0e362-297">자세한 내용은 대 한 날짜 및 시간 형식 지정자 [표준 날짜 및 시간 서식 문자열](~/docs/standard/base-types/standard-date-and-time-format-strings.md) 및 [사용자 지정 날짜 및 시간 형식 문자열](~/docs/standard/base-types/custom-date-and-time-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-297">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="0e362-298">열거형 형식 지정자에 대 한 자세한 내용은 참조 하세요. [열거형 형식 문자열](~/docs/standard/base-types/enumeration-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-298">For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="0e362-299">형식에 대 한 자세한 내용은 참조 하세요. [형식](~/docs/standard/base-types/formatting-types.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-299">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="0e362-300">`format` 자세한 텍스트로 0 개 이상의 인덱싱된 자리 표시 자가 있는,이 메서드의 매개 변수 목록의 개체에 해당 하는 서식 항목 이라고 함 또는 매개 변수가 0으로 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-300">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="0e362-301">포맷 프로세스는 해당 개체의 값의 문자열 표현으로 각 서식 항목을 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-301">The formatting process replaces each format item with the string representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="0e362-302">형식 항목의 구문은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-302">The syntax of a format item is as follows:</span></span>  
  
 <span data-ttu-id="0e362-303">{*index*[,*length*][:*formatString*]}</span><span class="sxs-lookup"><span data-stu-id="0e362-303">{*index*[,*length*][:*formatString*]}</span></span>  
  
 <span data-ttu-id="0e362-304">대괄호 안의 요소는 선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-304">Elements in square brackets are optional.</span></span> <span data-ttu-id="0e362-305">다음 표에서는 각 요소에 대해 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-305">The following table describes each element.</span></span> <span data-ttu-id="0e362-306">복합 형식 지정 기능, 형식 항목의 구문을 포함 하는 방법에 대 한 자세한 내용은 참조 [복합 서식 지정](~/docs/standard/base-types/composite-formatting.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-306">For more information about the composite formatting feature, including the syntax of a format item, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
|<span data-ttu-id="0e362-307">요소</span><span class="sxs-lookup"><span data-stu-id="0e362-307">Element</span></span>|<span data-ttu-id="0e362-308">설명</span><span class="sxs-lookup"><span data-stu-id="0e362-308">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="0e362-309">인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-309">index</span></span>|<span data-ttu-id="0e362-310">서식을 지정할 개체의 0부터 시작 위치 매개 변수 목록에서입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-310">The zero-based position in the parameter list of the object to be formatted.</span></span> <span data-ttu-id="0e362-311">지정 된 개체가 *인덱스* 됩니다 `null`, 형식 항목으로 바뀝니다 <xref:System.String.Empty?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-311">If the object specified by *index* is `null`, the format item is replaced by <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="0e362-312">이 오버 로드는 해당 매개 변수에서 개체를 하나만 있으므로 목록에 값 *인덱스* 항상 0 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-312">Because this overload has only a single object in its parameter list, the value of *index* must always be 0.</span></span> <span data-ttu-id="0e362-313">매개 변수가 없는 경우는 *인덱스* 위치는 <xref:System.FormatException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-313">If there is no parameter in the *index* position, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="0e362-314">*길이*</span><span class="sxs-lookup"><span data-stu-id="0e362-314">,*length*</span></span>|<span data-ttu-id="0e362-315">매개 변수의 문자열 표현에 있는 문자의 최소 수입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-315">The minimum number of characters in the string representation of the parameter.</span></span> <span data-ttu-id="0e362-316">양수의 매개 변수는 오른쪽에 맞춰집니다. 음수 이면를 왼쪽에 맞춥니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-316">If positive, the parameter is right-aligned; if negative, it is left-aligned.</span></span>|  
|<span data-ttu-id="0e362-317">:*formatString*</span><span class="sxs-lookup"><span data-stu-id="0e362-317">:*formatString*</span></span>|<span data-ttu-id="0e362-318">서식을 지정할 개체에서 지원 되는 표준 또는 사용자 지정 서식 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-318">A standard or custom format string that is supported by the object to be formatted.</span></span> <span data-ttu-id="0e362-319">가능한 값 *formatString* 개체에서 지 원하는 값으로 동일한 `ToString(string format)` 메서드.</span><span class="sxs-lookup"><span data-stu-id="0e362-319">Possible values for *formatString* are the same as the values supported by the object's `ToString(string format)` method.</span></span> <span data-ttu-id="0e362-320">경우 *formatString* 지정 하지 않으면 구현 형식을 지정할 개체 및를 <xref:System.IFormattable> 인터페이스를 `null` 값으로 전달 되는 `format` 로 사용 되는 매개 변수는 <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> 형식 문자열.</span><span class="sxs-lookup"><span data-stu-id="0e362-320">If *formatString* is not specified and the object to be formatted implements the <xref:System.IFormattable> interface, `null` is passed as the value of the `format` parameter that is used as the <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> format string.</span></span>|  
  
 <span data-ttu-id="0e362-321">앞과 뒤에 문자를 중괄호 "{" 및 "}"을 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-321">The leading and trailing brace characters, "{" and "}", are required.</span></span> <span data-ttu-id="0e362-322">단일 리터럴 중괄호 문자를 지정 하려면 `format`두 개 지정, 중괄호 문자를 후행 즉, "{{" 또는 "}}".</span><span class="sxs-lookup"><span data-stu-id="0e362-322">To specify a single literal brace character in `format`, specify two leading or trailing brace characters; that is, "{{" or "}}".</span></span>  
  
 <span data-ttu-id="0e362-323">.</span><span class="sxs-lookup"><span data-stu-id="0e362-323">.</span></span> <span data-ttu-id="0e362-324">이 메서드가 개별 줄 바꿈 문자 (16 진수 0x000a)에 대 한 지정된 된 문자열을 검색 하지 않으며 바꿀 <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-324">This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="0e362-325">지정된 된 개체의 형식 문자열에서 참조 되지 않은, 하는 경우 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-325">If a specified object is not referenced in the format string, it is ignored.</span></span>  
  
 <span data-ttu-id="0e362-326">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-326">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0e362-327">
            <paramref name="format" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-327">
              <paramref name="format" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0e362-328">
            <see cref="T:System.IO.TextWriter" />가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-328">The <see cref="T:System.IO.TextWriter" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0e362-329">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-329">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="0e362-330">
            <paramref name="format" />이 유효한 합성 서식 문자열이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-330">
              <paramref name="format" /> is not a valid composite format string.</span>
          </span>
          <span data-ttu-id="0e362-331">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-331">-or-</span>
          </span>
          <span data-ttu-id="0e362-332">형식 항목의 인덱스가 0보다 작거나, 형식을 지정할 개체의 수보다 크거나 같은 경우입니다. 즉, 이 메서드 오버로드의 경우는 1입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-332">The index of a format item is less than 0 (zero), or greater than or equal to the number of objects to be formatted (which, for this method overload, is one).</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (string format, params object[] arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(string format, object[] arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (format As String, ParamArray arg As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ arg);" />
      <MemberSignature Language="F#" Value="abstract member Write : string * obj[] -&gt; unit&#xA;override this.Write : string * obj[] -&gt; unit" Usage="textWriter.Write (format, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="0e362-333">복합 형식 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-333">A composite format string.</span>
          </span>
        </param>
        <param name="arg">
          <span data-ttu-id="0e362-334">서식을 지정하고 쓸 개체를 0개 이상 포함하는 개체 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-334">An object array that contains zero or more objects to format and write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e362-335">
            <see cref="M:System.String.Format(System.String,System.Object[])" /> 메서드와 동일한 의미 체계를 사용하여 서식이 지정된 문자열을 텍스트 문자열이나 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-335">Writes a formatted string to the text string or stream, using the same semantics as the <see cref="M:System.String.Format(System.String,System.Object[])" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e362-336">이 메서드는 개체의 값을 문자열 표현으로 변환 하 고 문자열에서 표현을 포함 복합 서식을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-336">This method uses composite formatting to convert the value of an object to its string representation and to embed that representation in a string.</span></span> <span data-ttu-id="0e362-337">.NET에서는 다음 서식 항목에서 자세히 설명 되어 광범위 한 형식 지원:</span><span class="sxs-lookup"><span data-stu-id="0e362-337">.NET provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="0e362-338">복합 서식 지정 기능에 대 한 자세한 내용은 참조 하세요. [복합 서식 지정](~/docs/standard/base-types/composite-formatting.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-338">For more information about the composite formatting feature, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
-   <span data-ttu-id="0e362-339">숫자 서식 지정자에 대 한 자세한 내용은 참조 하세요. [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) 하 고 [사용자 지정 숫자 서식 문자열](~/docs/standard/base-types/custom-numeric-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-339">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="0e362-340">자세한 내용은 대 한 날짜 및 시간 형식 지정자 [표준 날짜 및 시간 서식 문자열](~/docs/standard/base-types/standard-date-and-time-format-strings.md) 및 [사용자 지정 날짜 및 시간 형식 문자열](~/docs/standard/base-types/custom-date-and-time-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-340">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="0e362-341">열거형 형식 지정자에 대 한 자세한 내용은 참조 하세요. [열거형 형식 문자열](~/docs/standard/base-types/enumeration-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-341">For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="0e362-342">형식에 대 한 자세한 내용은 참조 하세요. [형식](~/docs/standard/base-types/formatting-types.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-342">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="0e362-343">`format` 자세한 텍스트로 0 개 이상의 인덱싱된 자리 표시 자가 있는,이 메서드의 매개 변수 목록의 개체에 해당 하는 서식 항목 이라고 함 또는 매개 변수가 0으로 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-343">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="0e362-344">포맷 프로세스는 해당 개체의 값의 문자열 표현으로 각 서식 항목을 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-344">The formatting process replaces each format item with the string representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="0e362-345">형식 항목의 구문은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-345">The syntax of a format item is as follows:</span></span>  
  
 <span data-ttu-id="0e362-346">{*index*[,*length*][:*formatString*]}</span><span class="sxs-lookup"><span data-stu-id="0e362-346">{*index*[,*length*][:*formatString*]}</span></span>  
  
 <span data-ttu-id="0e362-347">대괄호 안의 요소는 선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-347">Elements in square brackets are optional.</span></span> <span data-ttu-id="0e362-348">다음 표에서는 각 요소에 대해 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-348">The following table describes each element.</span></span> <span data-ttu-id="0e362-349">복합 형식 지정 기능, 형식 항목의 구문을 포함 하는 방법에 대 한 자세한 내용은 참조 [복합 서식 지정](~/docs/standard/base-types/composite-formatting.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-349">For more information about the composite formatting feature, including the syntax of a format item, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
|<span data-ttu-id="0e362-350">요소</span><span class="sxs-lookup"><span data-stu-id="0e362-350">Element</span></span>|<span data-ttu-id="0e362-351">설명</span><span class="sxs-lookup"><span data-stu-id="0e362-351">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="0e362-352">인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-352">index</span></span>|<span data-ttu-id="0e362-353">서식을 지정할 개체의 0부터 시작 위치 매개 변수 목록에서입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-353">The zero-based position in the parameter list of the object to be formatted.</span></span> <span data-ttu-id="0e362-354">지정 된 개체가 *인덱스* 됩니다 `null`, 형식 항목으로 바뀝니다 <xref:System.String.Empty?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-354">If the object specified by *index* is `null`, the format item is replaced by <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="0e362-355">이 오버 로드는 해당 매개 변수에서 배열을 때문에 목록 값 *인덱스* 배열의 길이 보다 작으면 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-355">Because this overload has an array in its parameter list, the value of *index* must always be less than the length of the array.</span></span> <span data-ttu-id="0e362-356">매개 변수가 없는 경우는 *인덱스* 위치는 <xref:System.FormatException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-356">If there is no parameter in the *index* position, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="0e362-357">*길이*</span><span class="sxs-lookup"><span data-stu-id="0e362-357">,*length*</span></span>|<span data-ttu-id="0e362-358">매개 변수의 문자열 표현에 있는 문자의 최소 수입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-358">The minimum number of characters in the string representation of the parameter.</span></span> <span data-ttu-id="0e362-359">양수의 매개 변수는 오른쪽에 맞춰집니다. 음수 이면를 왼쪽에 맞춥니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-359">If positive, the parameter is right-aligned; if negative, it is left-aligned.</span></span>|  
|<span data-ttu-id="0e362-360">:*formatString*</span><span class="sxs-lookup"><span data-stu-id="0e362-360">:*formatString*</span></span>|<span data-ttu-id="0e362-361">서식을 지정할 개체에서 지원 되는 표준 또는 사용자 지정 서식 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-361">A standard or custom format string that is supported by the object to be formatted.</span></span> <span data-ttu-id="0e362-362">가능한 값 *formatString* 개체에서 지 원하는 값으로 동일한 `ToString(string format)` 메서드.</span><span class="sxs-lookup"><span data-stu-id="0e362-362">Possible values for *formatString* are the same as the values supported by the object's `ToString(string format)` method.</span></span> <span data-ttu-id="0e362-363">경우 *formatString* 지정 하지 않으면 구현 형식을 지정할 개체 및를 <xref:System.IFormattable> 인터페이스를 `null` 값으로 전달 되는 `format` 로 사용 되는 매개 변수는 <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> 형식 문자열.</span><span class="sxs-lookup"><span data-stu-id="0e362-363">If *formatString* is not specified and the object to be formatted implements the <xref:System.IFormattable> interface, `null` is passed as the value of the `format` parameter that is used as the <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> format string.</span></span>|  
  
 <span data-ttu-id="0e362-364">앞과 뒤에 문자를 중괄호 "{" 및 "}"을 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-364">The leading and trailing brace characters, "{" and "}", are required.</span></span> <span data-ttu-id="0e362-365">단일 리터럴 중괄호 문자를 지정 하려면 `format`두 개 지정, 중괄호 문자를 후행 즉, "{{" 또는 "}}".</span><span class="sxs-lookup"><span data-stu-id="0e362-365">To specify a single literal brace character in `format`, specify two leading or trailing brace characters; that is, "{{" or "}}".</span></span>  
  
 <span data-ttu-id="0e362-366">이 메서드가 개별 줄 바꿈 문자 (16 진수 0x000a)에 대 한 지정된 된 문자열을 검색 하지 않으며 바꿀 <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-366">This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="0e362-367">지정된 된 개체의 형식 문자열에서 참조 되지 않은, 하는 경우 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-367">If a specified object is not referenced in the format string, it is ignored.</span></span>  
  
 <span data-ttu-id="0e362-368">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-368">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0e362-369">
            <paramref name="format" /> 또는 <paramref name="arg" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-369">
              <paramref name="format" /> or <paramref name="arg" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0e362-370">
            <see cref="T:System.IO.TextWriter" />가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-370">The <see cref="T:System.IO.TextWriter" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0e362-371">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-371">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="0e362-372">
            <paramref name="format" />이 유효한 합성 서식 문자열이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-372">
              <paramref name="format" /> is not a valid composite format string.</span>
          </span>
          <span data-ttu-id="0e362-373">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-373">-or-</span>
          </span>
          <span data-ttu-id="0e362-374">형식 항목의 인덱스가 0보다 작거나 <paramref name="arg" /> 배열의 길이보다 크거나 같습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-374">The index of a format item is less than 0 (zero), or greater than or equal to the length of the <paramref name="arg" /> array.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member Write : char[] * int * int -&gt; unit&#xA;override this.Write : char[] * int * int -&gt; unit" Usage="textWriter.Write (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="0e362-375">쓸 데이터가 있는 문자 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-375">The character array to write data from.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="0e362-376">데이터 검색을 시작하는 버퍼의 문자 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-376">The character position in the buffer at which to start retrieving data.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="0e362-377">쓸 문자 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-377">The number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e362-378">문자의 하위 배열을 텍스트 문자열 또는 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-378">Writes a subarray of characters to the text string or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e362-379">이 메서드는 씁니다 `count` 이 데이터 문자의 `TextWriter` 에서 합니다 `buffer` 위치에서 시작 하는 문자 배열 `index`합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-379">This method will write `count` characters of data into this `TextWriter` from the `buffer` character array starting at position `index`.</span></span>  
  
 <span data-ttu-id="0e362-380">이 오버 로드는 해당 하는 <xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29> 각 문자에 대 한 오버 로드 `buffer` 사이의 `index` 및 (`index` + `count`).</span><span class="sxs-lookup"><span data-stu-id="0e362-380">This overload is equivalent to the <xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29> overload for each character in `buffer` between `index` and (`index` + `count`).</span></span>  
  
 <span data-ttu-id="0e362-381">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-381">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0e362-382">버퍼 길이에서 <paramref name="index" />를 빼면 <paramref name="count" />보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-382">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0e362-383">
            <paramref name="buffer" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-383">The <paramref name="buffer" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0e362-384">
            <paramref name="index" /> 또는 <paramref name="count" />가 음수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-384">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0e362-385">
            <see cref="T:System.IO.TextWriter" />가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-385">The <see cref="T:System.IO.TextWriter" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0e362-386">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-386">An I/O error occurs.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.StreamWriter.Write(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.IO.StringWriter.Write(System.Char[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (string format, object arg0, object arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(string format, object arg0, object arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (format As String, arg0 As Object, arg1 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1);" />
      <MemberSignature Language="F#" Value="abstract member Write : string * obj * obj -&gt; unit&#xA;override this.Write : string * obj * obj -&gt; unit" Usage="textWriter.Write (format, arg0, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="0e362-387">복합 형식 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-387">A composite format string.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="0e362-388">서식을 지정하고 쓸 첫 번째 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-388">The first object to format and write.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="0e362-389">서식을 지정하고 쓸 두 번째 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-389">The second object to format and write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e362-390">
            <see cref="M:System.String.Format(System.String,System.Object,System.Object)" /> 메서드와 동일한 의미 체계를 사용하여 서식이 지정된 문자열을 텍스트 문자열이나 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-390">Writes a formatted string to the text string or stream, using the same semantics as the <see cref="M:System.String.Format(System.String,System.Object,System.Object)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e362-391">이 메서드는 개체의 값을 문자열 표현으로 변환 하 고 문자열에서 표현을 포함 복합 서식을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-391">This method uses composite formatting to convert the value of an object to its string representation and to embed that representation in a string.</span></span> <span data-ttu-id="0e362-392">.NET에서는 다음 서식 항목에서 자세히 설명 되어 광범위 한 형식 지원:</span><span class="sxs-lookup"><span data-stu-id="0e362-392">.NET provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="0e362-393">복합 서식 지정 기능에 대 한 자세한 내용은 참조 하세요. [복합 서식 지정](~/docs/standard/base-types/composite-formatting.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-393">For more information about the composite formatting feature, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
-   <span data-ttu-id="0e362-394">숫자 서식 지정자에 대 한 자세한 내용은 참조 하세요. [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) 하 고 [사용자 지정 숫자 서식 문자열](~/docs/standard/base-types/custom-numeric-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-394">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="0e362-395">자세한 내용은 대 한 날짜 및 시간 형식 지정자 [표준 날짜 및 시간 서식 문자열](~/docs/standard/base-types/standard-date-and-time-format-strings.md) 및 [사용자 지정 날짜 및 시간 형식 문자열](~/docs/standard/base-types/custom-date-and-time-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-395">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="0e362-396">열거형 형식 지정자에 대 한 자세한 내용은 참조 하세요. [열거형 형식 문자열](~/docs/standard/base-types/enumeration-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-396">For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="0e362-397">형식에 대 한 자세한 내용은 참조 하세요. [형식](~/docs/standard/base-types/formatting-types.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-397">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="0e362-398">`format` 자세한 텍스트로 0 개 이상의 인덱싱된 자리 표시 자가 있는,이 메서드의 매개 변수 목록의 개체에 해당 하는 서식 항목 이라고 함 또는 매개 변수가 0으로 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-398">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="0e362-399">포맷 프로세스는 해당 개체의 값의 문자열 표현으로 각 서식 항목을 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-399">The formatting process replaces each format item with the string representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="0e362-400">형식 항목의 구문은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-400">The syntax of a format item is as follows:</span></span>  
  
 <span data-ttu-id="0e362-401">{*index*[,*length*][:*formatString*]}</span><span class="sxs-lookup"><span data-stu-id="0e362-401">{*index*[,*length*][:*formatString*]}</span></span>  
  
 <span data-ttu-id="0e362-402">대괄호 안의 요소는 선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-402">Elements in square brackets are optional.</span></span> <span data-ttu-id="0e362-403">다음 표에서는 각 요소에 대해 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-403">The following table describes each element.</span></span> <span data-ttu-id="0e362-404">복합 형식 지정 기능, 형식 항목의 구문을 포함 하는 방법에 대 한 자세한 내용은 참조 [복합 서식 지정](~/docs/standard/base-types/composite-formatting.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-404">For more information about the composite formatting feature, including the syntax of a format item, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
|<span data-ttu-id="0e362-405">요소</span><span class="sxs-lookup"><span data-stu-id="0e362-405">Element</span></span>|<span data-ttu-id="0e362-406">설명</span><span class="sxs-lookup"><span data-stu-id="0e362-406">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="0e362-407">인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-407">index</span></span>|<span data-ttu-id="0e362-408">서식을 지정할 개체의 0부터 시작 위치 매개 변수 목록에서입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-408">The zero-based position in the parameter list of the object to be formatted.</span></span> <span data-ttu-id="0e362-409">지정 된 개체가 *인덱스* 됩니다 `null`, 형식 항목으로 바뀝니다 <xref:System.String.Empty?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-409">If the object specified by *index* is `null`, the format item is replaced by <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="0e362-410">이 오버 로드는 해당 매개 변수에서 두 개체 때문에 목록 값 *인덱스* 0 또는 1은 항상 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-410">Because this overload has two objects in its parameter list, the value of *index* must always be 0 or 1.</span></span> <span data-ttu-id="0e362-411">매개 변수가 없는 경우는 *인덱스* 위치는 <xref:System.FormatException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-411">If there is no parameter in the *index* position, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="0e362-412">*길이*</span><span class="sxs-lookup"><span data-stu-id="0e362-412">,*length*</span></span>|<span data-ttu-id="0e362-413">매개 변수의 문자열 표현에 있는 문자의 최소 수입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-413">The minimum number of characters in the string representation of the parameter.</span></span> <span data-ttu-id="0e362-414">양수의 매개 변수는 오른쪽에 맞춰집니다. 음수 이면를 왼쪽에 맞춥니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-414">If positive, the parameter is right-aligned; if negative, it is left-aligned.</span></span>|  
|<span data-ttu-id="0e362-415">:*formatString*</span><span class="sxs-lookup"><span data-stu-id="0e362-415">:*formatString*</span></span>|<span data-ttu-id="0e362-416">서식을 지정할 개체에서 지원 되는 표준 또는 사용자 지정 서식 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-416">A standard or custom format string that is supported by the object to be formatted.</span></span> <span data-ttu-id="0e362-417">가능한 값 *formatString* 개체에서 지 원하는 값으로 동일한 `ToString(string format)` 메서드.</span><span class="sxs-lookup"><span data-stu-id="0e362-417">Possible values for *formatString* are the same as the values supported by the object's `ToString(string format)` method.</span></span> <span data-ttu-id="0e362-418">경우 *formatString* 지정 하지 않으면 구현 형식을 지정할 개체 및를 <xref:System.IFormattable> 인터페이스를 `null` 값으로 전달 되는 `format` 로 사용 되는 매개 변수는 <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> 형식 문자열.</span><span class="sxs-lookup"><span data-stu-id="0e362-418">If *formatString* is not specified and the object to be formatted implements the <xref:System.IFormattable> interface, `null` is passed as the value of the `format` parameter that is used as the <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> format string.</span></span>|  
  
 <span data-ttu-id="0e362-419">앞과 뒤에 문자를 중괄호 "{" 및 "}"을 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-419">The leading and trailing brace characters, "{" and "}", are required.</span></span> <span data-ttu-id="0e362-420">단일 리터럴 중괄호 문자를 지정 하려면 `format`두 개 지정, 중괄호 문자를 후행 즉, "{{" 또는 "}}".</span><span class="sxs-lookup"><span data-stu-id="0e362-420">To specify a single literal brace character in `format`, specify two leading or trailing brace characters; that is, "{{" or "}}".</span></span>  
  
 <span data-ttu-id="0e362-421">이 메서드가 개별 줄 바꿈 문자 (16 진수 0x000a)에 대 한 지정된 된 문자열을 검색 하지 않으며 바꿀 <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-421">This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="0e362-422">지정된 된 개체의 형식 문자열에서 참조 되지 않은, 하는 경우 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-422">If a specified object is not referenced in the format string, it is ignored.</span></span>  
  
 <span data-ttu-id="0e362-423">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-423">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0e362-424">
            <paramref name="format" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-424">
              <paramref name="format" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0e362-425">
            <see cref="T:System.IO.TextWriter" />가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-425">The <see cref="T:System.IO.TextWriter" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0e362-426">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-426">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="0e362-427">
            <paramref name="format" />이 유효한 합성 서식 문자열이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-427">
              <paramref name="format" /> is not a valid composite format string.</span>
          </span>
          <span data-ttu-id="0e362-428">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-428">-or-</span>
          </span>
          <span data-ttu-id="0e362-429">형식 항목의 인덱스가 0보다 작거나, 형식을 지정할 개체의 수보다 크거나 같은 경우입니다. 즉, 이 메서드 오버로드의 경우는 2입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-429">The index of a format item is less than 0 (zero) or greater than or equal to the number of objects to be formatted (which, for this method overload, is two).</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (string format, object arg0, object arg1, object arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(string format, object arg0, object arg1, object arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (format As String, arg0 As Object, arg1 As Object, arg2 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1, System::Object ^ arg2);" />
      <MemberSignature Language="F#" Value="abstract member Write : string * obj * obj * obj -&gt; unit&#xA;override this.Write : string * obj * obj * obj -&gt; unit" Usage="textWriter.Write (format, arg0, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
        <Parameter Name="arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="0e362-430">복합 형식 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-430">A composite format string.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="0e362-431">서식을 지정하고 쓸 첫 번째 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-431">The first object to format and write.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="0e362-432">서식을 지정하고 쓸 두 번째 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-432">The second object to format and write.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="0e362-433">서식을 지정하고 쓸 세 번째 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-433">The third object to format and write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e362-434">
            <see cref="M:System.String.Format(System.String,System.Object,System.Object,System.Object)" /> 메서드와 동일한 의미 체계를 사용하여 서식이 지정된 문자열을 텍스트 문자열이나 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-434">Writes a formatted string to the text string or stream, using the same semantics as the <see cref="M:System.String.Format(System.String,System.Object,System.Object,System.Object)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e362-435">이 메서드는 개체의 값을 문자열 표현으로 변환 하 고 문자열에서 표현을 포함 복합 서식을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-435">This method uses composite formatting to convert the value of an object to its string representation and to embed that representation in a string.</span></span> <span data-ttu-id="0e362-436">.NET에서는 다음 서식 항목에서 자세히 설명 되어 광범위 한 형식 지원:</span><span class="sxs-lookup"><span data-stu-id="0e362-436">.NET provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="0e362-437">복합 서식 지정 기능에 대 한 자세한 내용은 참조 하세요. [복합 서식 지정](~/docs/standard/base-types/composite-formatting.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-437">For more information about the composite formatting feature, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
-   <span data-ttu-id="0e362-438">숫자 서식 지정자에 대 한 자세한 내용은 참조 하세요. [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) 하 고 [사용자 지정 숫자 서식 문자열](~/docs/standard/base-types/custom-numeric-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-438">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="0e362-439">자세한 내용은 대 한 날짜 및 시간 형식 지정자 [표준 날짜 및 시간 서식 문자열](~/docs/standard/base-types/standard-date-and-time-format-strings.md) 및 [사용자 지정 날짜 및 시간 형식 문자열](~/docs/standard/base-types/custom-date-and-time-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-439">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="0e362-440">열거형 형식 지정자에 대 한 자세한 내용은 참조 하세요. [열거형 형식 문자열](~/docs/standard/base-types/enumeration-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-440">For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="0e362-441">형식에 대 한 자세한 내용은 참조 하세요. [형식](~/docs/standard/base-types/formatting-types.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-441">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="0e362-442">`format` 자세한 텍스트로 0 개 이상의 인덱싱된 자리 표시 자가 있는,이 메서드의 매개 변수 목록의 개체에 해당 하는 서식 항목 이라고 함 또는 매개 변수가 0으로 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-442">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="0e362-443">포맷 프로세스는 해당 개체의 값의 문자열 표현으로 각 서식 항목을 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-443">The formatting process replaces each format item with the string representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="0e362-444">형식 항목의 구문은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-444">The syntax of a format item is as follows:</span></span>  
  
 <span data-ttu-id="0e362-445">{*index*[,*length*][:*formatString*]}</span><span class="sxs-lookup"><span data-stu-id="0e362-445">{*index*[,*length*][:*formatString*]}</span></span>  
  
 <span data-ttu-id="0e362-446">대괄호 안의 요소는 선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-446">Elements in square brackets are optional.</span></span> <span data-ttu-id="0e362-447">다음 표에서는 각 요소에 대해 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-447">The following table describes each element.</span></span> <span data-ttu-id="0e362-448">복합 형식 지정 기능, 형식 항목의 구문을 포함 하는 방법에 대 한 자세한 내용은 참조 [복합 서식 지정](~/docs/standard/base-types/composite-formatting.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-448">For more information about the composite formatting feature, including the syntax of a format item, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
|<span data-ttu-id="0e362-449">요소</span><span class="sxs-lookup"><span data-stu-id="0e362-449">Element</span></span>|<span data-ttu-id="0e362-450">설명</span><span class="sxs-lookup"><span data-stu-id="0e362-450">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="0e362-451">인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-451">index</span></span>|<span data-ttu-id="0e362-452">서식을 지정할 개체의 0부터 시작 위치 매개 변수 목록에서입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-452">The zero-based position in the parameter list of the object to be formatted.</span></span> <span data-ttu-id="0e362-453">지정 된 개체가 *인덱스* 됩니다 `null`, 형식 항목으로 바뀝니다 <xref:System.String.Empty?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-453">If the object specified by *index* is `null`, the format item is replaced by <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="0e362-454">이 오버 로드는 해당 매개 변수에서 세 가지 개체 때문에 목록 값 *인덱스* 0, 1 또는 2 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-454">Because this overload has three objects in its parameter list, the value of *index* must always be 0, 1, or 2.</span></span> <span data-ttu-id="0e362-455">매개 변수가 없는 경우는 *인덱스* 위치는 <xref:System.FormatException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-455">If there is no parameter in the *index* position, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="0e362-456">*길이*</span><span class="sxs-lookup"><span data-stu-id="0e362-456">,*length*</span></span>|<span data-ttu-id="0e362-457">매개 변수의 문자열 표현에 있는 문자의 최소 수입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-457">The minimum number of characters in the string representation of the parameter.</span></span> <span data-ttu-id="0e362-458">양수의 매개 변수는 오른쪽에 맞춰집니다. 음수 이면를 왼쪽에 맞춥니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-458">If positive, the parameter is right-aligned; if negative, it is left-aligned.</span></span>|  
|<span data-ttu-id="0e362-459">:*formatString*</span><span class="sxs-lookup"><span data-stu-id="0e362-459">:*formatString*</span></span>|<span data-ttu-id="0e362-460">서식을 지정할 개체에서 지원 되는 표준 또는 사용자 지정 서식 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-460">A standard or custom format string that is supported by the object to be formatted.</span></span> <span data-ttu-id="0e362-461">가능한 값 *formatString* 개체에서 지 원하는 값으로 동일한 `ToString(string format)` 메서드.</span><span class="sxs-lookup"><span data-stu-id="0e362-461">Possible values for *formatString* are the same as the values supported by the object's `ToString(string format)` method.</span></span> <span data-ttu-id="0e362-462">경우 *formatString* 지정 하지 않으면 구현 형식을 지정할 개체 및를 <xref:System.IFormattable> 인터페이스를 `null` 값으로 전달 되는 `format` 로 사용 되는 매개 변수는 <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> 형식 문자열.</span><span class="sxs-lookup"><span data-stu-id="0e362-462">If *formatString* is not specified and the object to be formatted implements the <xref:System.IFormattable> interface, `null` is passed as the value of the `format` parameter that is used as the <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> format string.</span></span>|  
  
 <span data-ttu-id="0e362-463">앞과 뒤에 문자를 중괄호 "{" 및 "}"을 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-463">The leading and trailing brace characters, "{" and "}", are required.</span></span> <span data-ttu-id="0e362-464">단일 리터럴 중괄호 문자를 지정 하려면 `format`두 개 지정, 중괄호 문자를 후행 즉, "{{" 또는 "}}".</span><span class="sxs-lookup"><span data-stu-id="0e362-464">To specify a single literal brace character in `format`, specify two leading or trailing brace characters; that is, "{{" or "}}".</span></span>  
  
 <span data-ttu-id="0e362-465">이 메서드가 개별 줄 바꿈 문자 (16 진수 0x000a)에 대 한 지정된 된 문자열을 검색 하지 않으며 바꿀 <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-465">This method does not search the specified string  for individual newline characters (hexadecimal 0x000a) and replace them with <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="0e362-466">지정된 된 개체의 형식 문자열에서 참조 되지 않은, 하는 경우 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-466">If a specified object is not referenced in the format string, it is ignored.</span></span>  
  
 <span data-ttu-id="0e362-467">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-467">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0e362-468">
            <paramref name="format" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-468">
              <paramref name="format" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0e362-469">
            <see cref="T:System.IO.TextWriter" />가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-469">The <see cref="T:System.IO.TextWriter" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0e362-470">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-470">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="0e362-471">
            <paramref name="format" />이 유효한 합성 서식 문자열이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-471">
              <paramref name="format" /> is not a valid composite format string.</span>
          </span>
          <span data-ttu-id="0e362-472">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-472">-or-</span>
          </span>
          <span data-ttu-id="0e362-473">형식 항목의 인덱스가 0보다 작거나, 형식을 지정할 개체의 수보다 크거나 같은 경우입니다. 즉, 이 메서드 오버로드의 경우는 3입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-473">The index of a format item is less than 0 (zero), or greater than or equal to the number of objects to be formatted (which, for this method overload, is three).</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0e362-474">데이터를 텍스트 문자열 또는 스트림에 비동기적으로 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-474">Writes data to the text string or stream asynchronously.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteAsync (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteAsync(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteAsync(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteAsync (value As Char) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteAsync(char value);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : char -&gt; System.Threading.Tasks.Task&#xA;override this.WriteAsync : char -&gt; System.Threading.Tasks.Task" Usage="textWriter.WriteAsync value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0e362-475">텍스트 스트림에 쓸 문자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-475">The character to write to the text stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e362-476">문자를 텍스트 문자열 또는 스트림에 비동기적으로 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-476">Writes a character to the text string or stream asynchronously.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0e362-477">비동기 쓰기 작업을 나타내는 작업입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-477">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e362-478"><xref:System.IO.TextWriter> 클래스는 추상 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-478">The <xref:System.IO.TextWriter> class is an abstract class.</span></span> <span data-ttu-id="0e362-479">따라서 인스턴스화하지 않습니다 해당 코드에서.</span><span class="sxs-lookup"><span data-stu-id="0e362-479">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="0e362-480">사용 하는 예는 <xref:System.IO.TextWriter.WriteAsync%2A> 메서드를 참조 합니다 <xref:System.IO.StreamWriter.WriteAsync%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0e362-480">For an example of using the <xref:System.IO.TextWriter.WriteAsync%2A> method, see the <xref:System.IO.StreamWriter.WriteAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0e362-481">텍스트 작성기가 삭제됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-481">The text writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0e362-482">이전 쓰기 작업에서 텍스트 작성기를 현재 사용하고 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-482">The text writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.StreamWriter.WriteAsync(System.Char)" />
        <altmember cref="M:System.IO.StringWriter.WriteAsync(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteAsync (char[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteAsync(char[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteAsync(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteAsync (buffer As Char()) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteAsync(cli::array &lt;char&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="member this.WriteAsync : char[] -&gt; System.Threading.Tasks.Task" Usage="textWriter.WriteAsync buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="0e362-483">텍스트 스트림에 쓸 문자 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-483">The character array to write to the text stream.</span>
          </span>
          <span data-ttu-id="0e362-484">
            <c>버퍼</c>가 <see langword="null" />이면 아무 것도 쓰지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-484">If <c>buffer</c> is <see langword="null" />, nothing is written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e362-485">문자 배열을 텍스트 문자열 또는 스트림에 비동기적으로 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-485">Writes a character array to the text string or stream asynchronously.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0e362-486">비동기 쓰기 작업을 나타내는 작업입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-486">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0e362-487">텍스트 작성기가 삭제됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-487">The text writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0e362-488">이전 쓰기 작업에서 텍스트 작성기를 현재 사용하고 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-488">The text writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteAsync (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteAsync(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteAsync (value As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteAsync(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteAsync : string -&gt; System.Threading.Tasks.Task" Usage="textWriter.WriteAsync value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0e362-489">쓸 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-489">The string to write.</span>
          </span>
          <span data-ttu-id="0e362-490">
            <c>값</c>이 <see langword="null" />이면 텍스트 스트림에 아무 것도 쓰지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-490">If <c>value</c> is <see langword="null" />, nothing is written to the text stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e362-491">문자열을 텍스트 문자열 또는 스트림에 비동기적으로 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-491">Writes a string to the text string or stream asynchronously.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0e362-492">비동기 쓰기 작업을 나타내는 작업입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-492">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e362-493"><xref:System.IO.TextWriter> 클래스는 추상 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-493">The <xref:System.IO.TextWriter> class is an abstract class.</span></span> <span data-ttu-id="0e362-494">따라서 인스턴스화하지 않습니다 해당 코드에서.</span><span class="sxs-lookup"><span data-stu-id="0e362-494">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="0e362-495">사용 하는 예는 <xref:System.IO.TextWriter.WriteAsync%2A> 메서드를 참조 합니다 <xref:System.IO.StreamWriter.WriteAsync%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0e362-495">For an example of using the <xref:System.IO.TextWriter.WriteAsync%2A> method, see the <xref:System.IO.StreamWriter.WriteAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0e362-496">텍스트 작성기가 삭제됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-496">The text writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0e362-497">이전 쓰기 작업에서 텍스트 작성기를 현재 사용하고 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-497">The text writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.StreamWriter.WriteAsync(System.String)" />
        <altmember cref="M:System.IO.StringWriter.WriteAsync(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteAsync (ReadOnlyMemory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteAsync(valuetype System.ReadOnlyMemory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteAsync(System.ReadOnlyMemory{System.Char},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : ReadOnlyMemory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.WriteAsync : ReadOnlyMemory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="textWriter.WriteAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlyMemory&lt;System.Char&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteAsync (buffer As Char(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&#xA;override this.WriteAsync : char[] * int * int -&gt; System.Threading.Tasks.Task" Usage="textWriter.WriteAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="0e362-498">쓸 데이터가 있는 문자 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-498">The character array to write data from.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="0e362-499">데이터 검색을 시작하는 버퍼의 문자 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-499">The character position in the buffer at which to start retrieving data.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="0e362-500">쓸 문자 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-500">The number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e362-501">문자의 하위 배열을 텍스트 문자열 또는 스트림에 비동기적으로 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-501">Writes a subarray of characters to the text string or stream asynchronously.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0e362-502">비동기 쓰기 작업을 나타내는 작업입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-502">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e362-503"><xref:System.IO.TextWriter> 클래스는 추상 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-503">The <xref:System.IO.TextWriter> class is an abstract class.</span></span> <span data-ttu-id="0e362-504">따라서 인스턴스화하지 않습니다 해당 코드에서.</span><span class="sxs-lookup"><span data-stu-id="0e362-504">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="0e362-505">사용 하는 예는 <xref:System.IO.TextWriter.WriteAsync%2A> 메서드를 참조 합니다 <xref:System.IO.StreamWriter.WriteAsync%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0e362-505">For an example of using the <xref:System.IO.TextWriter.WriteAsync%2A> method, see the <xref:System.IO.StreamWriter.WriteAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0e362-506">
            <paramref name="buffer" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-506">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0e362-507">
            <paramref name="index" />와 <paramref name="count" />의 합이 버퍼 길이보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-507">The <paramref name="index" /> plus <paramref name="count" /> is greater than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0e362-508">
            <paramref name="index" /> 또는 <paramref name="count" />가 음수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-508">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0e362-509">텍스트 작성기가 삭제됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-509">The text writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0e362-510">이전 쓰기 작업에서 텍스트 작성기를 현재 사용하고 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-510">The text writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.StreamWriter.WriteAsync(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.IO.StringWriter.WriteAsync(System.Char[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLine">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0e362-511">데이터와 줄 종결자를 차례로 텍스트 문자열 또는 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-511">Writes data followed by a line terminator to the text string or stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine();" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : unit -&gt; unit&#xA;override this.WriteLine : unit -&gt; unit" Usage="textWriter.WriteLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0e362-512">줄 종결자를 텍스트 문자열 또는 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-512">Writes a line terminator to the text string or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e362-513">줄 종결자가 정의한는 <xref:System.IO.TextWriter.CoreNewLine> 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-513">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 <span data-ttu-id="0e362-514">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-514">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0e362-515">
            <see cref="T:System.IO.TextWriter" />가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-515">The <see cref="T:System.IO.TextWriter" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0e362-516">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-516">An I/O error occurs.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(bool value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : bool -&gt; unit&#xA;override this.WriteLine : bool -&gt; unit" Usage="textWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0e362-517">쓸 <see langword="Boolean" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-517">The <see langword="Boolean" /> value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e362-518">
            <see langword="Boolean" /> 값의 텍스트 표현과 줄 종결자를 차례로 텍스트 문자열 또는 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-518">Writes the text representation of a <see langword="Boolean" /> value followed by a line terminator to the text string or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e362-519">호출 하 여 지정된 된 값의 텍스트 표현을 생성 되는 <xref:System.Boolean.ToString%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0e362-519">The text representation of the specified value is produced by calling the <xref:System.Boolean.ToString%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="0e362-520">이 메서드 중 하나를 출력 <xref:System.Boolean.TrueString?displayProperty=nameWithType> 또는 <xref:System.Boolean.FalseString?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-520">This method outputs either <xref:System.Boolean.TrueString?displayProperty=nameWithType> or <xref:System.Boolean.FalseString?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="0e362-521">줄 종결자가 정의한는 <xref:System.IO.TextWriter.CoreNewLine> 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-521">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 <span data-ttu-id="0e362-522">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-522">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0e362-523">
            <see cref="T:System.IO.TextWriter" />가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-523">The <see cref="T:System.IO.TextWriter" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0e362-524">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-524">An I/O error occurs.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(char value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : char -&gt; unit&#xA;override this.WriteLine : char -&gt; unit" Usage="textWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0e362-525">텍스트 스트림에 쓸 문자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-525">The character to write to the text stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e362-526">문자와 줄 종결자를 차례로 텍스트 문자열 또는 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-526">Writes a character followed by a line terminator to the text string or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e362-527">이 오버 로드는 같음 <xref:System.IO.TextWriter.Write%28System.Char%29> 뒤에 <xref:System.IO.TextWriter.WriteLine> 입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-527">This overload is equivalent to <xref:System.IO.TextWriter.Write%28System.Char%29> followed by <xref:System.IO.TextWriter.WriteLine> .</span></span>  
  
 <span data-ttu-id="0e362-528">줄 종결자가 정의한는 <xref:System.IO.TextWriter.CoreNewLine> 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-528">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 <span data-ttu-id="0e362-529">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-529">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0e362-530">
            <see cref="T:System.IO.TextWriter" />가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-530">The <see cref="T:System.IO.TextWriter" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0e362-531">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-531">An I/O error occurs.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (char[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(char[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (buffer As Char())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(cli::array &lt;char&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : char[] -&gt; unit&#xA;override this.WriteLine : char[] -&gt; unit" Usage="textWriter.WriteLine buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="0e362-532">데이터를 읽을 문자 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-532">The character array from which data is read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e362-533">문자의 배열과 줄 종결자를 차례로 텍스트 문자열 또는 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-533">Writes an array of characters followed by a line terminator to the text string or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e362-534">에 있는 모든 문자가 `buffer` 내부 스트림에 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-534">All the characters in `buffer` are written to the underlying stream.</span></span> <span data-ttu-id="0e362-535">문자 배열이 `null`이면 줄 종결자만 씁니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-535">If the character array is `null`, only the line terminator is written.</span></span>  
  
 <span data-ttu-id="0e362-536">이 오버 로드는 같음 <xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29> 뒤에 <xref:System.IO.TextWriter.WriteLine> 입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-536">This overload is equivalent to <xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29> followed by <xref:System.IO.TextWriter.WriteLine> .</span></span>  
  
 <span data-ttu-id="0e362-537">줄 종결자가 정의한는 <xref:System.IO.TextWriter.CoreNewLine> 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-537">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 <span data-ttu-id="0e362-538">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-538">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0e362-539">
            <see cref="T:System.IO.TextWriter" />가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-539">The <see cref="T:System.IO.TextWriter" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0e362-540">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-540">An I/O error occurs.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(System::Decimal value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : decimal -&gt; unit&#xA;override this.WriteLine : decimal -&gt; unit" Usage="textWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0e362-541">쓸 10진수 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-541">The decimal value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e362-542">10진수 값의 텍스트 표현과 줄 종결자를 차례로 텍스트 문자열 또는 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-542">Writes the text representation of a decimal value followed by a line terminator to the text string or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e362-543">합니다 <xref:System.IO.TextWriter.FormatProvider%2A> 그렇지 않은 경우 속성인 `null`, 문화권별 서식 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-543">The <xref:System.IO.TextWriter.FormatProvider%2A> property, if not `null`, specifies the culture-specific formatting.</span></span> <span data-ttu-id="0e362-544">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-544">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 <span data-ttu-id="0e362-545">줄 종결자가 정의한는 <xref:System.IO.TextWriter.CoreNewLine> 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-545">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0e362-546">
            <see cref="T:System.IO.TextWriter" />가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-546">The <see cref="T:System.IO.TextWriter" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0e362-547">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-547">An I/O error occurs.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(double value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : double -&gt; unit&#xA;override this.WriteLine : double -&gt; unit" Usage="textWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0e362-548">쓸 8바이트 부동 소수점 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-548">The 8-byte floating-point value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e362-549">8바이트 부동 소수점 값의 텍스트 표현과 줄 종결자를 차례로 텍스트 문자열 또는 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-549">Writes the text representation of a 8-byte floating-point value followed by a line terminator to the text string or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e362-550">합니다 <xref:System.IO.TextWriter.FormatProvider%2A> 그렇지 않은 경우 속성인 `null`, 문화권별 서식 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-550">The <xref:System.IO.TextWriter.FormatProvider%2A> property, if not `null`, specifies the culture-specific formatting.</span></span> <span data-ttu-id="0e362-551">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-551">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 <span data-ttu-id="0e362-552">줄 종결자가 정의한는 <xref:System.IO.TextWriter.CoreNewLine> 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-552">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0e362-553">
            <see cref="T:System.IO.TextWriter" />가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-553">The <see cref="T:System.IO.TextWriter" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0e362-554">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-554">An I/O error occurs.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(int value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : int -&gt; unit&#xA;override this.WriteLine : int -&gt; unit" Usage="textWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0e362-555">쓸 부호 있는 4바이트 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-555">The 4-byte signed integer to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e362-556">부호 있는 4바이트 정수의 텍스트 표현과 줄 종결자를 차례로 텍스트 문자열 또는 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-556">Writes the text representation of a 4-byte signed integer followed by a line terminator to the text string or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e362-557">호출 하 여 지정된 된 값의 텍스트 표현을 생성 되는 <xref:System.Int32.ToString%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0e362-557">The text representation of the specified value is produced by calling the <xref:System.Int32.ToString%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="0e362-558">합니다 <xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType> 그렇지 않은 경우 속성인 `null`, 문화권별 서식 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-558">The <xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType> property, if not `null`, specifies the culture-specific formatting.</span></span>  
  
 <span data-ttu-id="0e362-559">줄 종결자가 정의한는 <xref:System.IO.TextWriter.CoreNewLine> 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-559">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 <span data-ttu-id="0e362-560">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-560">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0e362-561">
            <see cref="T:System.IO.TextWriter" />가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-561">The <see cref="T:System.IO.TextWriter" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0e362-562">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-562">An I/O error occurs.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(long value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : int64 -&gt; unit&#xA;override this.WriteLine : int64 -&gt; unit" Usage="textWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0e362-563">쓸 부호 있는 8바이트 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-563">The 8-byte signed integer to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e362-564">부호 있는 8바이트 정수의 텍스트 표현과 줄 종결자를 차례로 텍스트 문자열 또는 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-564">Writes the text representation of an 8-byte signed integer followed by a line terminator to the text string or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e362-565">호출 하 여 지정된 된 값의 텍스트 표현을 생성 되는 <xref:System.Int64.ToString%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0e362-565">The text representation of the specified value is produced by calling the <xref:System.Int64.ToString%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="0e362-566">합니다 <xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType> 그렇지 않은 경우 속성인 `null`, 문화권별 서식 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-566">The <xref:System.IO.TextWriter.FormatProvider%2A?displayProperty=nameWithType> property, if not `null`, specifies the culture-specific formatting.</span></span>  
  
 <span data-ttu-id="0e362-567">줄 종결자가 정의한는 <xref:System.IO.TextWriter.CoreNewLine> 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-567">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 <span data-ttu-id="0e362-568">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-568">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0e362-569">
            <see cref="T:System.IO.TextWriter" />가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-569">The <see cref="T:System.IO.TextWriter" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0e362-570">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-570">An I/O error occurs.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : obj -&gt; unit&#xA;override this.WriteLine : obj -&gt; unit" Usage="textWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0e362-571">쓸 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-571">The object to write.</span>
          </span>
          <span data-ttu-id="0e362-572">
            <c>값</c>이 <see langword="null" />이면 줄 종결자만 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-572">If <c>value</c> is <see langword="null" />, only the line terminator is written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e362-573">개체에 대해 <see langword="ToString" /> 메서드를 호출하여 해당 개체의 텍스트 표현과 줄 종결자를 차례로 텍스트 문자열 또는 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-573">Writes the text representation of an object by calling the <see langword="ToString" /> method on that object, followed by a line terminator to the text string or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e362-574">이 오버 로드는 해당 하는 <xref:System.IO.TextWriter.Write%28System.String%2CSystem.Object%29> 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-574">This overload is equivalent to the <xref:System.IO.TextWriter.Write%28System.String%2CSystem.Object%29> overload.</span></span> <span data-ttu-id="0e362-575">합니다 <xref:System.IO.TextWriter.FormatProvider%2A> 그렇지 않은 경우 속성인 `null`, 문화권별 서식 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-575">The <xref:System.IO.TextWriter.FormatProvider%2A> property, if not `null`, specifies the culture-specific formatting.</span></span>  
  
 <span data-ttu-id="0e362-576">줄 종결자가 정의한는 <xref:System.IO.TextWriter.CoreNewLine> 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-576">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 <span data-ttu-id="0e362-577">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-577">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0e362-578">
            <see cref="T:System.IO.TextWriter" />가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-578">The <see cref="T:System.IO.TextWriter" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0e362-579">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-579">An I/O error occurs.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(valuetype System.ReadOnlySpan`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (buffer As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : ReadOnlySpan&lt;char&gt; -&gt; unit&#xA;override this.WriteLine : ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="textWriter.WriteLine buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(float value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : single -&gt; unit&#xA;override this.WriteLine : single -&gt; unit" Usage="textWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0e362-580">쓸 4바이트 부동 소수점 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-580">The 4-byte floating-point value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e362-581">4바이트 부동 소수점 값의 텍스트 표현과 줄 종결자를 차례로 텍스트 문자열 또는 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-581">Writes the text representation of a 4-byte floating-point value followed by a line terminator to the text string or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e362-582">합니다 <xref:System.IO.TextWriter.FormatProvider%2A> 그렇지 않은 경우 속성인 `null`, 문화권별 서식 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-582">The <xref:System.IO.TextWriter.FormatProvider%2A> property, if not `null`, specifies the culture-specific formatting.</span></span> <span data-ttu-id="0e362-583">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-583">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 <span data-ttu-id="0e362-584">줄 종결자가 정의한는 <xref:System.IO.TextWriter.CoreNewLine> 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-584">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0e362-585">
            <see cref="T:System.IO.TextWriter" />가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-585">The <see cref="T:System.IO.TextWriter" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0e362-586">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-586">An I/O error occurs.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : string -&gt; unit&#xA;override this.WriteLine : string -&gt; unit" Usage="textWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0e362-587">쓸 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-587">The string to write.</span>
          </span>
          <span data-ttu-id="0e362-588">
            <c>값</c>이 <see langword="null" />이면 줄 종결자만 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-588">If <c>value</c> is <see langword="null" />, only the line terminator is written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e362-589">문자열과 줄 종결자를 차례로 텍스트 문자열 또는 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-589">Writes a string followed by a line terminator to the text string or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e362-590">이 오버 로드는 해당 하는 <xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29> 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-590">This overload is equivalent to the <xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29> overload.</span></span>  
  
 <span data-ttu-id="0e362-591">줄 종결자가 정의한는 <xref:System.IO.TextWriter.CoreNewLine> 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-591">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 <span data-ttu-id="0e362-592">이 메서드가 개별 줄 바꿈 문자 (16 진수 0x000a)에 대 한 지정된 된 문자열을 검색 하지 않으며 바꿀 <xref:System.IO.TextWriter.NewLine%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-592">This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <xref:System.IO.TextWriter.NewLine%2A>.</span></span>  
  
 <span data-ttu-id="0e362-593">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-593">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0e362-594">
            <see cref="T:System.IO.TextWriter" />가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-594">The <see cref="T:System.IO.TextWriter" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0e362-595">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-595">An I/O error occurs.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : uint32 -&gt; unit&#xA;override this.WriteLine : uint32 -&gt; unit" Usage="textWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0e362-596">쓸 부호 없는 4바이트 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-596">The 4-byte unsigned integer to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e362-597">부호 없는 4바이트 정수의 텍스트 표현과 줄 종결자를 차례로 텍스트 문자열 또는 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-597">Writes the text representation of a 4-byte unsigned integer followed by a line terminator to the text string or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e362-598">호출 하 여 지정된 된 값의 텍스트 표현을 생성 되는 <xref:System.UInt32.ToString%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0e362-598">The text representation of the specified value is produced by calling the <xref:System.UInt32.ToString%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="0e362-599">합니다 <xref:System.IO.TextWriter.FormatProvider%2A> 그렇지 않은 경우 속성인 `null`, 문화권별 서식 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-599">The <xref:System.IO.TextWriter.FormatProvider%2A> property, if not `null`, specifies the culture-specific formatting.</span></span>  
  
 <span data-ttu-id="0e362-600">줄 종결자가 정의한는 <xref:System.IO.TextWriter.CoreNewLine> 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-600">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 <span data-ttu-id="0e362-601">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-601">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0e362-602">
            <see cref="T:System.IO.TextWriter" />가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-602">The <see cref="T:System.IO.TextWriter" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0e362-603">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-603">An I/O error occurs.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : uint64 -&gt; unit&#xA;override this.WriteLine : uint64 -&gt; unit" Usage="textWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0e362-604">쓸 부호 없는 8바이트 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-604">The 8-byte unsigned integer to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e362-605">부호 없는 8바이트 정수의 텍스트 표현과 줄 종결자를 차례로 텍스트 문자열 또는 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-605">Writes the text representation of an 8-byte unsigned integer followed by a line terminator to the text string or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e362-606">호출 하 여 지정된 된 값의 텍스트 표현을 생성 되는 <xref:System.UInt64.ToString%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0e362-606">The text representation of the specified value is produced by calling the <xref:System.UInt64.ToString%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="0e362-607">합니다 <xref:System.IO.TextWriter.FormatProvider%2A> 그렇지 않은 경우 속성인 `null`, 문화권별 서식 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-607">The <xref:System.IO.TextWriter.FormatProvider%2A> property, if not `null`, specifies the culture-specific formatting.</span></span>  
  
 <span data-ttu-id="0e362-608">줄 종결자가 정의한는 <xref:System.IO.TextWriter.CoreNewLine> 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-608">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 <span data-ttu-id="0e362-609">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-609">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0e362-610">
            <see cref="T:System.IO.TextWriter" />가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-610">The <see cref="T:System.IO.TextWriter" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0e362-611">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-611">An I/O error occurs.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (string format, object arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(string format, object arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (format As String, arg0 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(System::String ^ format, System::Object ^ arg0);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : string * obj -&gt; unit&#xA;override this.WriteLine : string * obj -&gt; unit" Usage="textWriter.WriteLine (format, arg0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="0e362-612">복합 형식 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-612">A composite format string.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="0e362-613">서식을 지정하고 쓸 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-613">The object to format and write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e362-614">
            <see cref="M:System.String.Format(System.String,System.Object)" /> 메서드와 동일한 의미 체계를 사용하여 서식이 지정된 문자열과 새 줄을 텍스트 문자열이나 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-614">Writes a formatted string and a new line to the text string or stream, using the same semantics as the <see cref="M:System.String.Format(System.String,System.Object)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e362-615">이 메서드는 개체의 값을 문자열 표현으로 변환 하 고 문자열에서 표현을 포함 복합 서식을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-615">This method uses composite formatting to convert the value of an object to its string representation and to embed that representation in a string.</span></span> <span data-ttu-id="0e362-616">.NET에서는 다음 서식 항목에서 자세히 설명 되어 광범위 한 형식 지원:</span><span class="sxs-lookup"><span data-stu-id="0e362-616">.NET provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="0e362-617">복합 서식 지정 기능에 대 한 자세한 내용은 참조 하세요. [복합 서식 지정](~/docs/standard/base-types/composite-formatting.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-617">For more information about the composite formatting feature, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
-   <span data-ttu-id="0e362-618">숫자 서식 지정자에 대 한 자세한 내용은 참조 하세요. [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) 하 고 [사용자 지정 숫자 서식 문자열](~/docs/standard/base-types/custom-numeric-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-618">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="0e362-619">자세한 내용은 대 한 날짜 및 시간 형식 지정자 [표준 날짜 및 시간 서식 문자열](~/docs/standard/base-types/standard-date-and-time-format-strings.md) 및 [사용자 지정 날짜 및 시간 형식 문자열](~/docs/standard/base-types/custom-date-and-time-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-619">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="0e362-620">열거형 형식 지정자에 대 한 자세한 내용은 참조 하세요. [열거형 형식 문자열](~/docs/standard/base-types/enumeration-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-620">For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="0e362-621">형식에 대 한 자세한 내용은 참조 하세요. [형식](~/docs/standard/base-types/formatting-types.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-621">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="0e362-622">`format` 자세한 텍스트로 0 개 이상의 인덱싱된 자리 표시 자가 있는,이 메서드의 매개 변수 목록의 개체에 해당 하는 서식 항목 이라고 함 또는 매개 변수가 0으로 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-622">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="0e362-623">포맷 프로세스는 해당 개체의 값의 문자열 표현으로 각 서식 항목을 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-623">The formatting process replaces each format item with the string representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="0e362-624">형식 항목의 구문은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-624">The syntax of a format item is as follows:</span></span>  
  
 <span data-ttu-id="0e362-625">{*index*[,*length*][:*formatString*]}</span><span class="sxs-lookup"><span data-stu-id="0e362-625">{*index*[,*length*][:*formatString*]}</span></span>  
  
 <span data-ttu-id="0e362-626">대괄호 안의 요소는 선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-626">Elements in square brackets are optional.</span></span> <span data-ttu-id="0e362-627">다음 표에서는 각 요소에 대해 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-627">The following table describes each element.</span></span> <span data-ttu-id="0e362-628">복합 형식 지정 기능, 형식 항목의 구문을 포함 하는 방법에 대 한 자세한 내용은 참조 [복합 서식 지정](~/docs/standard/base-types/composite-formatting.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-628">For more information about the composite formatting feature, including the syntax of a format item, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
|<span data-ttu-id="0e362-629">요소</span><span class="sxs-lookup"><span data-stu-id="0e362-629">Element</span></span>|<span data-ttu-id="0e362-630">설명</span><span class="sxs-lookup"><span data-stu-id="0e362-630">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="0e362-631">인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-631">index</span></span>|<span data-ttu-id="0e362-632">서식을 지정할 개체의 0부터 시작 위치 매개 변수 목록에서입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-632">The zero-based position in the parameter list of the object to be formatted.</span></span> <span data-ttu-id="0e362-633">지정 된 개체가 *인덱스* 됩니다 `null`, 형식 항목으로 바뀝니다 <xref:System.String.Empty?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-633">If the object specified by *index* is `null`, the format item is replaced by <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="0e362-634">이 오버 로드는 해당 매개 변수에서 개체를 하나만 있으므로 목록에 값 *인덱스* 항상 0 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-634">Because this overload has only a single object in its parameter list, the value of *index* must always be 0.</span></span> <span data-ttu-id="0e362-635">매개 변수가 없는 경우는 *인덱스* 위치는 <xref:System.FormatException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-635">If there is no parameter in the *index* position, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="0e362-636">*길이*</span><span class="sxs-lookup"><span data-stu-id="0e362-636">,*length*</span></span>|<span data-ttu-id="0e362-637">매개 변수의 문자열 표현에 있는 문자의 최소 수입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-637">The minimum number of characters in the string representation of the parameter.</span></span> <span data-ttu-id="0e362-638">양수의 매개 변수는 오른쪽에 맞춰집니다. 음수 이면를 왼쪽에 맞춥니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-638">If positive, the parameter is right-aligned; if negative, it is left-aligned.</span></span>|  
|<span data-ttu-id="0e362-639">:*formatString*</span><span class="sxs-lookup"><span data-stu-id="0e362-639">:*formatString*</span></span>|<span data-ttu-id="0e362-640">서식을 지정할 개체에서 지원 되는 표준 또는 사용자 지정 서식 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-640">A standard or custom format string that is supported by the object to be formatted.</span></span> <span data-ttu-id="0e362-641">가능한 값 *formatString* 개체에서 지 원하는 값으로 동일한 `ToString(string format)` 메서드.</span><span class="sxs-lookup"><span data-stu-id="0e362-641">Possible values for *formatString* are the same as the values supported by the object's `ToString(string format)` method.</span></span> <span data-ttu-id="0e362-642">경우 *formatString* 지정 하지 않으면 구현 형식을 지정할 개체 및를 <xref:System.IFormattable> 인터페이스를 `null` 값으로 전달 되는 `format` 로 사용 되는 매개 변수는 <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> 형식 문자열.</span><span class="sxs-lookup"><span data-stu-id="0e362-642">If *formatString* is not specified and the object to be formatted implements the <xref:System.IFormattable> interface, `null` is passed as the value of the `format` parameter that is used as the <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> format string.</span></span>|  
  
 <span data-ttu-id="0e362-643">앞과 뒤에 문자를 중괄호 "{" 및 "}"을 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-643">The leading and trailing brace characters, "{" and "}", are required.</span></span> <span data-ttu-id="0e362-644">단일 리터럴 중괄호 문자를 지정 하려면 `format`두 개 지정, 중괄호 문자를 후행 즉, "{{" 또는 "}}".</span><span class="sxs-lookup"><span data-stu-id="0e362-644">To specify a single literal brace character in `format`, specify two leading or trailing brace characters; that is, "{{" or "}}".</span></span>  
  
 <span data-ttu-id="0e362-645">이 메서드가 개별 줄 바꿈 문자 (16 진수 0x000a)에 대 한 지정된 된 문자열을 검색 하지 않으며 바꿀 <xref:System.IO.TextWriter.NewLine%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-645">This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <xref:System.IO.TextWriter.NewLine%2A>.</span></span>  
  
 <span data-ttu-id="0e362-646">지정된 된 개체의 형식 문자열에서 참조 되지 않은, 하는 경우 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-646">If a specified object is not referenced in the format string, it is ignored.</span></span>  
  
 <span data-ttu-id="0e362-647">줄 종결자가 정의한는 <xref:System.IO.TextWriter.CoreNewLine> 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-647">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 <span data-ttu-id="0e362-648">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-648">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0e362-649">
            <paramref name="format" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-649">
              <paramref name="format" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0e362-650">
            <see cref="T:System.IO.TextWriter" />가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-650">The <see cref="T:System.IO.TextWriter" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0e362-651">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-651">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="0e362-652">
            <paramref name="format" />이 유효한 합성 서식 문자열이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-652">
              <paramref name="format" /> is not a valid composite format string.</span>
          </span>
          <span data-ttu-id="0e362-653">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-653">-or-</span>
          </span>
          <span data-ttu-id="0e362-654">형식 항목의 인덱스가 0보다 작거나, 형식을 지정할 개체의 수보다 크거나 같은 경우입니다. 즉, 이 메서드 오버로드의 경우는 1입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-654">The index of a format item is less than 0 (zero), or greater than or equal to the number of objects to be formatted (which, for this method overload, is one).</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (string format, params object[] arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(string format, object[] arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (format As String, ParamArray arg As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ arg);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : string * obj[] -&gt; unit&#xA;override this.WriteLine : string * obj[] -&gt; unit" Usage="textWriter.WriteLine (format, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="0e362-655">복합 형식 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-655">A composite format string.</span>
          </span>
        </param>
        <param name="arg">
          <span data-ttu-id="0e362-656">서식을 지정하고 쓸 개체를 0개 이상 포함하는 개체 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-656">An object array that contains zero or more objects to format and write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e362-657">
            <see cref="M:System.String.Format(System.String,System.Object)" />과 같은 의미 체계를 사용하여 서식이 지정된 문자열과 새 줄을 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-657">Writes out a formatted string and a new line, using the same semantics as <see cref="M:System.String.Format(System.String,System.Object)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e362-658">이 메서드는 개체의 값을 문자열 표현으로 변환 하 고 문자열에서 표현을 포함 복합 서식을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-658">This method uses composite formatting to convert the value of an object to its string representation and to embed that representation in a string.</span></span> <span data-ttu-id="0e362-659">.NET에서는 다음 서식 항목에서 자세히 설명 되어 광범위 한 형식 지원:</span><span class="sxs-lookup"><span data-stu-id="0e362-659">.NET provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="0e362-660">복합 서식 지정 기능에 대 한 자세한 내용은 참조 하세요. [복합 서식 지정](~/docs/standard/base-types/composite-formatting.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-660">For more information about the composite formatting feature, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
-   <span data-ttu-id="0e362-661">숫자 서식 지정자에 대 한 자세한 내용은 참조 하세요. [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) 하 고 [사용자 지정 숫자 서식 문자열](~/docs/standard/base-types/custom-numeric-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-661">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="0e362-662">자세한 내용은 대 한 날짜 및 시간 형식 지정자 [표준 날짜 및 시간 서식 문자열](~/docs/standard/base-types/standard-date-and-time-format-strings.md) 및 [사용자 지정 날짜 및 시간 형식 문자열](~/docs/standard/base-types/custom-date-and-time-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-662">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="0e362-663">열거형 형식 지정자에 대 한 자세한 내용은 참조 하세요. [열거형 형식 문자열](~/docs/standard/base-types/enumeration-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-663">For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="0e362-664">형식에 대 한 자세한 내용은 참조 하세요. [형식](~/docs/standard/base-types/formatting-types.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-664">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="0e362-665">`format` 자세한 텍스트로 0 개 이상의 인덱싱된 자리 표시 자가 있는,이 메서드의 매개 변수 목록의 개체에 해당 하는 서식 항목 이라고 함 또는 매개 변수가 0으로 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-665">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="0e362-666">포맷 프로세스는 해당 개체의 값의 문자열 표현으로 각 서식 항목을 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-666">The formatting process replaces each format item with the string representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="0e362-667">형식 항목의 구문은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-667">The syntax of a format item is as follows:</span></span>  
  
 <span data-ttu-id="0e362-668">{*index*[,*length*][:*formatString*]}</span><span class="sxs-lookup"><span data-stu-id="0e362-668">{*index*[,*length*][:*formatString*]}</span></span>  
  
 <span data-ttu-id="0e362-669">대괄호 안의 요소는 선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-669">Elements in square brackets are optional.</span></span> <span data-ttu-id="0e362-670">다음 표에서는 각 요소에 대해 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-670">The following table describes each element.</span></span> <span data-ttu-id="0e362-671">복합 형식 지정 기능, 형식 항목의 구문을 포함 하는 방법에 대 한 자세한 내용은 참조 [복합 서식 지정](~/docs/standard/base-types/composite-formatting.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-671">For more information about the composite formatting feature, including the syntax of a format item, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
|<span data-ttu-id="0e362-672">요소</span><span class="sxs-lookup"><span data-stu-id="0e362-672">Element</span></span>|<span data-ttu-id="0e362-673">설명</span><span class="sxs-lookup"><span data-stu-id="0e362-673">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="0e362-674">인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-674">index</span></span>|<span data-ttu-id="0e362-675">서식을 지정할 개체의 0부터 시작 위치 매개 변수 목록에서입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-675">The zero-based position in the parameter list of the object to be formatted.</span></span> <span data-ttu-id="0e362-676">지정 된 개체가 *인덱스* 됩니다 `null`, 형식 항목으로 바뀝니다 <xref:System.String.Empty?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-676">If the object specified by *index* is `null`, the format item is replaced by <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="0e362-677">이 오버 로드는 해당 매개 변수에서 배열을 때문에 목록 값 *인덱스* 배열의 길이 보다 작으면 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-677">Because this overload has an array in its parameter list, the value of *index* must always be less than the length of the array.</span></span> <span data-ttu-id="0e362-678">매개 변수가 없는 경우는 *인덱스* 위치는 <xref:System.FormatException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-678">If there is no parameter in the *index* position, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="0e362-679">*길이*</span><span class="sxs-lookup"><span data-stu-id="0e362-679">,*length*</span></span>|<span data-ttu-id="0e362-680">매개 변수의 문자열 표현에 있는 문자의 최소 수입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-680">The minimum number of characters in the string representation of the parameter.</span></span> <span data-ttu-id="0e362-681">양수의 매개 변수는 오른쪽에 맞춰집니다. 음수 이면를 왼쪽에 맞춥니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-681">If positive, the parameter is right-aligned; if negative, it is left-aligned.</span></span>|  
|<span data-ttu-id="0e362-682">:*formatString*</span><span class="sxs-lookup"><span data-stu-id="0e362-682">:*formatString*</span></span>|<span data-ttu-id="0e362-683">서식을 지정할 개체에서 지원 되는 표준 또는 사용자 지정 서식 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-683">A standard or custom format string that is supported by the object to be formatted.</span></span> <span data-ttu-id="0e362-684">가능한 값 *formatString* 개체에서 지 원하는 값으로 동일한 `ToString(string format)` 메서드.</span><span class="sxs-lookup"><span data-stu-id="0e362-684">Possible values for *formatString* are the same as the values supported by the object's `ToString(string format)` method.</span></span> <span data-ttu-id="0e362-685">경우 *formatString* 지정 하지 않으면 구현 형식을 지정할 개체 및를 <xref:System.IFormattable> 인터페이스를 `null` 값으로 전달 되는 `format` 로 사용 되는 매개 변수는 <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> 형식 문자열.</span><span class="sxs-lookup"><span data-stu-id="0e362-685">If *formatString* is not specified and the object to be formatted implements the <xref:System.IFormattable> interface, `null` is passed as the value of the `format` parameter that is used as the <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> format string.</span></span>|  
  
 <span data-ttu-id="0e362-686">앞과 뒤에 문자를 중괄호 "{" 및 "}"을 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-686">The leading and trailing brace characters, "{" and "}", are required.</span></span> <span data-ttu-id="0e362-687">단일 리터럴 중괄호 문자를 지정 하려면 `format`두 개 지정, 중괄호 문자를 후행 즉, "{{" 또는 "}}".</span><span class="sxs-lookup"><span data-stu-id="0e362-687">To specify a single literal brace character in `format`, specify two leading or trailing brace characters; that is, "{{" or "}}".</span></span>  
  
 <span data-ttu-id="0e362-688">이 메서드가 개별 줄 바꿈 문자 (16 진수 0x000a)에 대 한 지정된 된 문자열을 검색 하지 않으며 바꿀 <xref:System.IO.TextWriter.NewLine%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-688">This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <xref:System.IO.TextWriter.NewLine%2A>.</span></span>  
  
 <span data-ttu-id="0e362-689">지정된 된 개체의 형식 문자열에서 참조 되지 않은, 하는 경우 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-689">If a specified object is not referenced in the format string, it is ignored.</span></span>  
  
 <span data-ttu-id="0e362-690">줄 종결자가 정의한는 <xref:System.IO.TextWriter.CoreNewLine> 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-690">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 <span data-ttu-id="0e362-691">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-691">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0e362-692">문자열이나 개체가 <see langword="null" />로 전달되는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-692">A string or object is passed in as <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0e362-693">
            <see cref="T:System.IO.TextWriter" />가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-693">The <see cref="T:System.IO.TextWriter" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0e362-694">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-694">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="0e362-695">
            <paramref name="format" />이 유효한 합성 서식 문자열이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-695">
              <paramref name="format" /> is not a valid composite format string.</span>
          </span>
          <span data-ttu-id="0e362-696">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-696">-or-</span>
          </span>
          <span data-ttu-id="0e362-697">형식 항목의 인덱스가 0보다 작거나 <paramref name="arg" /> 배열의 길이보다 크거나 같습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-697">The index of a format item is less than 0 (zero), or greater than or equal to the length of the <paramref name="arg" /> array.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : char[] * int * int -&gt; unit&#xA;override this.WriteLine : char[] * int * int -&gt; unit" Usage="textWriter.WriteLine (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="0e362-698">데이터를 읽을 문자 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-698">The character array from which data is read.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="0e362-699">데이터 읽기를 시작하는 <c>버퍼</c>의 문자 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-699">The character position in <c>buffer</c> at which to start reading data.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="0e362-700">쓸 최대 문자 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-700">The maximum number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e362-701">문자의 하위 배열과 줄 종결자를 차례로 텍스트 문자열 또는 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-701">Writes a subarray of characters followed by a line terminator to the text string or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e362-702">이 메서드는 씁니다 `count` 이 데이터 문자의 `TextWriter` 에서 합니다 `buffer` 위치에서 시작 하는 문자 배열 `index`합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-702">This method will write `count` characters of data into this `TextWriter` from the `buffer` character array starting at position `index`.</span></span>  
  
 <span data-ttu-id="0e362-703">이 오버 로드는 호출에 해당 하는 <xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29> 메서드를 호출한 <xref:System.IO.TextWriter.WriteLine%2A> 각 문자에 대 한 `buffer` 간에 `index` 하 고 (`index` + `count`).</span><span class="sxs-lookup"><span data-stu-id="0e362-703">This overload is equivalent to calling the <xref:System.IO.TextWriter.Write%28System.Char%5B%5D%29> method followed by <xref:System.IO.TextWriter.WriteLine%2A> for each character in `buffer` between `index` and (`index` + `count`).</span></span>  
  
 <span data-ttu-id="0e362-704">줄 종결자가 정의한는 <xref:System.IO.TextWriter.CoreNewLine> 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-704">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 <span data-ttu-id="0e362-705">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-705">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0e362-706">버퍼 길이에서 <paramref name="index" />를 빼면 <paramref name="count" />보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-706">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0e362-707">
            <paramref name="buffer" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-707">The <paramref name="buffer" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0e362-708">
            <paramref name="index" /> 또는 <paramref name="count" />가 음수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-708">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0e362-709">
            <see cref="T:System.IO.TextWriter" />가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-709">The <see cref="T:System.IO.TextWriter" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0e362-710">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-710">An I/O error occurs.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (string format, object arg0, object arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(string format, object arg0, object arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (format As String, arg0 As Object, arg1 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : string * obj * obj -&gt; unit&#xA;override this.WriteLine : string * obj * obj -&gt; unit" Usage="textWriter.WriteLine (format, arg0, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="0e362-711">복합 형식 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-711">A composite format string.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="0e362-712">서식을 지정하고 쓸 첫 번째 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-712">The first object to format and write.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="0e362-713">서식을 지정하고 쓸 두 번째 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-713">The second object to format and write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e362-714">
            <see cref="M:System.String.Format(System.String,System.Object,System.Object)" /> 메서드와 동일한 의미 체계를 사용하여 서식이 지정된 문자열과 새 줄을 텍스트 문자열이나 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-714">Writes a formatted string and a new line to the text string or stream, using the same semantics as the <see cref="M:System.String.Format(System.String,System.Object,System.Object)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e362-715">이 메서드는 개체의 값을 문자열 표현으로 변환 하 고 문자열에서 표현을 포함 복합 서식을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-715">This method uses composite formatting to convert the value of an object to its string representation and to embed that representation in a string.</span></span> <span data-ttu-id="0e362-716">.NET에서는 다음 서식 항목에서 자세히 설명 되어 광범위 한 형식 지원:</span><span class="sxs-lookup"><span data-stu-id="0e362-716">.NET provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="0e362-717">복합 서식 지정 기능에 대 한 자세한 내용은 참조 하세요. [복합 서식 지정](~/docs/standard/base-types/composite-formatting.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-717">For more information about the composite formatting feature, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
-   <span data-ttu-id="0e362-718">숫자 서식 지정자에 대 한 자세한 내용은 참조 하세요. [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) 하 고 [사용자 지정 숫자 서식 문자열](~/docs/standard/base-types/custom-numeric-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-718">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="0e362-719">자세한 내용은 대 한 날짜 및 시간 형식 지정자 [표준 날짜 및 시간 서식 문자열](~/docs/standard/base-types/standard-date-and-time-format-strings.md) 및 [사용자 지정 날짜 및 시간 형식 문자열](~/docs/standard/base-types/custom-date-and-time-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-719">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="0e362-720">열거형 형식 지정자에 대 한 자세한 내용은 참조 하세요. [열거형 형식 문자열](~/docs/standard/base-types/enumeration-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-720">For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="0e362-721">형식에 대 한 자세한 내용은 참조 하세요. [형식](~/docs/standard/base-types/formatting-types.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-721">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="0e362-722">`format` 자세한 텍스트로 0 개 이상의 인덱싱된 자리 표시 자가 있는,이 메서드의 매개 변수 목록의 개체에 해당 하는 서식 항목 이라고 함 또는 매개 변수가 0으로 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-722">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="0e362-723">포맷 프로세스는 해당 개체의 값의 문자열 표현으로 각 서식 항목을 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-723">The formatting process replaces each format item with the string representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="0e362-724">형식 항목의 구문은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-724">The syntax of a format item is as follows:</span></span>  
  
 <span data-ttu-id="0e362-725">{*index*[,*length*][:*formatString*]}</span><span class="sxs-lookup"><span data-stu-id="0e362-725">{*index*[,*length*][:*formatString*]}</span></span>  
  
 <span data-ttu-id="0e362-726">대괄호 안의 요소는 선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-726">Elements in square brackets are optional.</span></span> <span data-ttu-id="0e362-727">다음 표에서는 각 요소에 대해 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-727">The following table describes each element.</span></span> <span data-ttu-id="0e362-728">복합 형식 지정 기능, 형식 항목의 구문을 포함 하는 방법에 대 한 자세한 내용은 참조 [복합 서식 지정](~/docs/standard/base-types/composite-formatting.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-728">For more information about the composite formatting feature, including the syntax of a format item, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
|<span data-ttu-id="0e362-729">요소</span><span class="sxs-lookup"><span data-stu-id="0e362-729">Element</span></span>|<span data-ttu-id="0e362-730">설명</span><span class="sxs-lookup"><span data-stu-id="0e362-730">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="0e362-731">인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-731">index</span></span>|<span data-ttu-id="0e362-732">서식을 지정할 개체의 0부터 시작 위치 매개 변수 목록에서입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-732">The zero-based position in the parameter list of the object to be formatted.</span></span> <span data-ttu-id="0e362-733">지정 된 개체가 *인덱스* 됩니다 `null`, 형식 항목으로 바뀝니다 <xref:System.String.Empty?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-733">If the object specified by *index* is `null`, the format item is replaced by <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="0e362-734">이 오버 로드는 해당 매개 변수에서 두 개체 때문에 목록 값 *인덱스* 0 또는 1은 항상 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-734">Because this overload has two objects in its parameter list, the value of *index* must always be 0 or 1.</span></span> <span data-ttu-id="0e362-735">매개 변수가 없는 경우는 *인덱스* 위치는 <xref:System.FormatException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-735">If there is no parameter in the *index* position, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="0e362-736">*길이*</span><span class="sxs-lookup"><span data-stu-id="0e362-736">,*length*</span></span>|<span data-ttu-id="0e362-737">매개 변수의 문자열 표현에 있는 문자의 최소 수입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-737">The minimum number of characters in the string representation of the parameter.</span></span> <span data-ttu-id="0e362-738">양수의 매개 변수는 오른쪽에 맞춰집니다. 음수 이면를 왼쪽에 맞춥니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-738">If positive, the parameter is right-aligned; if negative, it is left-aligned.</span></span>|  
|<span data-ttu-id="0e362-739">:*formatString*</span><span class="sxs-lookup"><span data-stu-id="0e362-739">:*formatString*</span></span>|<span data-ttu-id="0e362-740">서식을 지정할 개체에서 지원 되는 표준 또는 사용자 지정 서식 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-740">A standard or custom format string that is supported by the object to be formatted.</span></span> <span data-ttu-id="0e362-741">가능한 값 *formatString* 개체에서 지 원하는 값으로 동일한 `ToString(string format)` 메서드.</span><span class="sxs-lookup"><span data-stu-id="0e362-741">Possible values for *formatString* are the same as the values supported by the object's `ToString(string format)` method.</span></span> <span data-ttu-id="0e362-742">경우 *formatString* 지정 하지 않으면 구현 형식을 지정할 개체 및를 <xref:System.IFormattable> 인터페이스를 `null` 값으로 전달 되는 `format` 로 사용 되는 매개 변수는 <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> 형식 문자열.</span><span class="sxs-lookup"><span data-stu-id="0e362-742">If *formatString* is not specified and the object to be formatted implements the <xref:System.IFormattable> interface, `null` is passed as the value of the `format` parameter that is used as the <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> format string.</span></span>|  
  
 <span data-ttu-id="0e362-743">앞과 뒤에 문자를 중괄호 "{" 및 "}"을 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-743">The leading and trailing brace characters, "{" and "}", are required.</span></span> <span data-ttu-id="0e362-744">단일 리터럴 중괄호 문자를 지정 하려면 `format`두 개 지정, 중괄호 문자를 후행 즉, "{{" 또는 "}}".</span><span class="sxs-lookup"><span data-stu-id="0e362-744">To specify a single literal brace character in `format`, specify two leading or trailing brace characters; that is, "{{" or "}}".</span></span>  
  
 <span data-ttu-id="0e362-745">이 메서드가 개별 줄 바꿈 문자 (16 진수 0x000a)에 대 한 지정된 된 문자열을 검색 하지 않으며 바꿀 <xref:System.IO.TextWriter.NewLine%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-745">This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <xref:System.IO.TextWriter.NewLine%2A>.</span></span>  
  
 <span data-ttu-id="0e362-746">지정된 된 개체의 형식 문자열에서 참조 되지 않은, 하는 경우 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-746">If a specified object is not referenced in the format string, it is ignored.</span></span>  
  
 <span data-ttu-id="0e362-747">줄 종결자가 정의한는 <xref:System.IO.TextWriter.CoreNewLine> 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-747">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 <span data-ttu-id="0e362-748">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-748">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0e362-749">
            <paramref name="format" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-749">
              <paramref name="format" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0e362-750">
            <see cref="T:System.IO.TextWriter" />가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-750">The <see cref="T:System.IO.TextWriter" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0e362-751">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-751">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="0e362-752">
            <paramref name="format" />이 유효한 합성 서식 문자열이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-752">
              <paramref name="format" /> is not a valid composite format string.</span>
          </span>
          <span data-ttu-id="0e362-753">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-753">-or-</span>
          </span>
          <span data-ttu-id="0e362-754">서식 항목의 인덱스가 0보다 작거나, 형식을 지정할 개체의 수보다 크거나 같은 경우입니다. 즉, 이 메서드 오버로드의 경우는 2입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-754">The index of a format item is less than 0 (zero), or greater than or equal to the number of objects to be formatted (which, for this method overload, is two).</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (string format, object arg0, object arg1, object arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(string format, object arg0, object arg1, object arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (format As String, arg0 As Object, arg1 As Object, arg2 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1, System::Object ^ arg2);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : string * obj * obj * obj -&gt; unit&#xA;override this.WriteLine : string * obj * obj * obj -&gt; unit" Usage="textWriter.WriteLine (format, arg0, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
        <Parameter Name="arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="0e362-755">복합 형식 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-755">A composite format string.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="0e362-756">서식을 지정하고 쓸 첫 번째 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-756">The first object to format and write.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="0e362-757">서식을 지정하고 쓸 두 번째 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-757">The second object to format and write.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="0e362-758">서식을 지정하고 쓸 세 번째 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-758">The third object to format and write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e362-759">
            <see cref="M:System.String.Format(System.String,System.Object)" />과 같은 의미 체계를 사용하여 서식이 지정된 문자열과 새 줄을 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-759">Writes out a formatted string and a new line, using the same semantics as <see cref="M:System.String.Format(System.String,System.Object)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e362-760">이 메서드는 개체의 값을 문자열 표현으로 변환 하 고 문자열에서 표현을 포함 복합 서식을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-760">This method uses composite formatting to convert the value of an object to its string representation and to embed that representation in a string.</span></span> <span data-ttu-id="0e362-761">.NET에서는 다음 서식 항목에서 자세히 설명 되어 광범위 한 형식 지원:</span><span class="sxs-lookup"><span data-stu-id="0e362-761">.NET provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="0e362-762">복합 서식 지정 기능에 대 한 자세한 내용은 참조 하세요. [복합 서식 지정](~/docs/standard/base-types/composite-formatting.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-762">For more information about the composite formatting feature, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
-   <span data-ttu-id="0e362-763">숫자 서식 지정자에 대 한 자세한 내용은 참조 하세요. [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) 하 고 [사용자 지정 숫자 서식 문자열](~/docs/standard/base-types/custom-numeric-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-763">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="0e362-764">자세한 내용은 대 한 날짜 및 시간 형식 지정자 [표준 날짜 및 시간 서식 문자열](~/docs/standard/base-types/standard-date-and-time-format-strings.md) 및 [사용자 지정 날짜 및 시간 형식 문자열](~/docs/standard/base-types/custom-date-and-time-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-764">For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="0e362-765">열거형 형식 지정자에 대 한 자세한 내용은 참조 하세요. [열거형 형식 문자열](~/docs/standard/base-types/enumeration-format-strings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-765">For more information about enumeration format specifiers, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="0e362-766">형식에 대 한 자세한 내용은 참조 하세요. [형식](~/docs/standard/base-types/formatting-types.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-766">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="0e362-767">`format` 자세한 텍스트로 0 개 이상의 인덱싱된 자리 표시 자가 있는,이 메서드의 매개 변수 목록의 개체에 해당 하는 서식 항목 이라고 함 또는 매개 변수가 0으로 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-767">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method.</span></span> <span data-ttu-id="0e362-768">포맷 프로세스는 해당 개체의 값의 문자열 표현으로 각 서식 항목을 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-768">The formatting process replaces each format item with the string representation of the value of the corresponding object.</span></span>  
  
 <span data-ttu-id="0e362-769">형식 항목의 구문은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-769">The syntax of a format item is as follows:</span></span>  
  
 <span data-ttu-id="0e362-770">{*index*[,*length*][:*formatString*]}</span><span class="sxs-lookup"><span data-stu-id="0e362-770">{*index*[,*length*][:*formatString*]}</span></span>  
  
 <span data-ttu-id="0e362-771">대괄호 안의 요소는 선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-771">Elements in square brackets are optional.</span></span> <span data-ttu-id="0e362-772">다음 표에서는 각 요소에 대해 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-772">The following table describes each element.</span></span> <span data-ttu-id="0e362-773">복합 형식 지정 기능, 형식 항목의 구문을 포함 하는 방법에 대 한 자세한 내용은 참조 [복합 서식 지정](~/docs/standard/base-types/composite-formatting.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-773">For more information about the composite formatting feature, including the syntax of a format item, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
|<span data-ttu-id="0e362-774">요소</span><span class="sxs-lookup"><span data-stu-id="0e362-774">Element</span></span>|<span data-ttu-id="0e362-775">설명</span><span class="sxs-lookup"><span data-stu-id="0e362-775">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="0e362-776">인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-776">index</span></span>|<span data-ttu-id="0e362-777">서식을 지정할 개체의 0부터 시작 위치 매개 변수 목록에서입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-777">The zero-based position in the parameter list of the object to be formatted.</span></span> <span data-ttu-id="0e362-778">지정 된 개체가 *인덱스* 됩니다 `null`, 형식 항목으로 바뀝니다 <xref:System.String.Empty?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-778">If the object specified by *index* is `null`, the format item is replaced by <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="0e362-779">이 오버 로드는 해당 매개 변수에서 세 가지 개체 때문에 목록 값 *인덱스* 0, 1 또는 2 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-779">Because this overload has three objects in its parameter list, the value of *index* must always be 0, 1, or 2.</span></span> <span data-ttu-id="0e362-780">매개 변수가 없는 경우는 *인덱스* 위치는 <xref:System.FormatException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-780">If there is no parameter in the *index* position, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="0e362-781">*길이*</span><span class="sxs-lookup"><span data-stu-id="0e362-781">,*length*</span></span>|<span data-ttu-id="0e362-782">매개 변수의 문자열 표현에 있는 문자의 최소 수입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-782">The minimum number of characters in the string representation of the parameter.</span></span> <span data-ttu-id="0e362-783">양수의 매개 변수는 오른쪽에 맞춰집니다. 음수 이면를 왼쪽에 맞춥니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-783">If positive, the parameter is right-aligned; if negative, it is left-aligned.</span></span>|  
|<span data-ttu-id="0e362-784">:*formatString*</span><span class="sxs-lookup"><span data-stu-id="0e362-784">:*formatString*</span></span>|<span data-ttu-id="0e362-785">서식을 지정할 개체에서 지원 되는 표준 또는 사용자 지정 서식 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-785">A standard or custom format string that is supported by the object to be formatted.</span></span> <span data-ttu-id="0e362-786">가능한 값 *formatString* 개체에서 지 원하는 값으로 동일한 `ToString(string format)` 메서드.</span><span class="sxs-lookup"><span data-stu-id="0e362-786">Possible values for *formatString* are the same as the values supported by the object's `ToString(string format)` method.</span></span> <span data-ttu-id="0e362-787">경우 *formatString* 지정 하지 않으면 구현 형식을 지정할 개체 및를 <xref:System.IFormattable> 인터페이스를 `null` 값으로 전달 되는 `format` 로 사용 되는 매개 변수는 <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> 형식 문자열.</span><span class="sxs-lookup"><span data-stu-id="0e362-787">If *formatString* is not specified and the object to be formatted implements the <xref:System.IFormattable> interface, `null` is passed as the value of the `format` parameter that is used as the <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> format string.</span></span>|  
  
 <span data-ttu-id="0e362-788">앞과 뒤에 문자를 중괄호 "{" 및 "}"을 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-788">The leading and trailing brace characters, "{" and "}", are required.</span></span> <span data-ttu-id="0e362-789">단일 리터럴 중괄호 문자를 지정 하려면 `format`두 개 지정, 중괄호 문자를 후행 즉, "{{" 또는 "}}".</span><span class="sxs-lookup"><span data-stu-id="0e362-789">To specify a single literal brace character in `format`, specify two leading or trailing brace characters; that is, "{{" or "}}".</span></span>  
  
 <span data-ttu-id="0e362-790">이 메서드가 개별 줄 바꿈 문자 (16 진수 0x000a)에 대 한 지정된 된 문자열을 검색 하지 않으며 바꿀 <xref:System.IO.TextWriter.NewLine%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-790">This method does not search the specified string for individual newline characters (hexadecimal 0x000a) and replace them with <xref:System.IO.TextWriter.NewLine%2A>.</span></span>  
  
 <span data-ttu-id="0e362-791">지정된 된 개체의 형식 문자열에서 참조 되지 않은, 하는 경우 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-791">If a specified object is not referenced in the format string, it is ignored.</span></span>  
  
 <span data-ttu-id="0e362-792">줄 종결자가 정의한는 <xref:System.IO.TextWriter.CoreNewLine> 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-792">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 <span data-ttu-id="0e362-793">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-793">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0e362-794">
            <paramref name="format" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-794">
              <paramref name="format" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0e362-795">
            <see cref="T:System.IO.TextWriter" />가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-795">The <see cref="T:System.IO.TextWriter" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0e362-796">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-796">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="0e362-797">
            <paramref name="format" />이 유효한 합성 서식 문자열이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-797">
              <paramref name="format" /> is not a valid composite format string.</span>
          </span>
          <span data-ttu-id="0e362-798">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-798">-or-</span>
          </span>
          <span data-ttu-id="0e362-799">형식 항목의 인덱스가 0보다 작거나, 형식을 지정할 개체의 수보다 크거나 같은 경우입니다. 즉, 이 메서드 오버로드의 경우는 3입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-799">The index of a format item is less than 0 (zero), or greater than or equal to the number of objects to be formatted (which, for this method overload, is three).</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
        <altmember cref="T:System.IFormatProvider" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLineAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0e362-800">데이터와 줄 종결자를 차례로 텍스트 문자열 또는 스트림에 비동기적으로 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-800">Writes data followed by a line terminator asynchronously to the text string or stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteLineAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteLineAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLineAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteLineAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteLineAsync();" />
      <MemberSignature Language="F#" Value="abstract member WriteLineAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.WriteLineAsync : unit -&gt; System.Threading.Tasks.Task" Usage="textWriter.WriteLineAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0e362-801">줄 종결자를 텍스트 문자열 또는 스트림에 비동기적으로 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-801">Writes a line terminator asynchronously to the text string or stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0e362-802">비동기 쓰기 작업을 나타내는 작업입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-802">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e362-803">줄 종결자가 정의한는 <xref:System.IO.TextWriter.CoreNewLine> 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-803">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0e362-804">텍스트 작성기가 삭제됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-804">The text writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0e362-805">이전 쓰기 작업에서 텍스트 작성기를 현재 사용하고 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-805">The text writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.StreamWriter.WriteLineAsync" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteLineAsync (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteLineAsync(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLineAsync(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteLineAsync (value As Char) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteLineAsync(char value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLineAsync : char -&gt; System.Threading.Tasks.Task&#xA;override this.WriteLineAsync : char -&gt; System.Threading.Tasks.Task" Usage="textWriter.WriteLineAsync value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0e362-806">텍스트 스트림에 쓸 문자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-806">The character to write to the text stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e362-807">문자와 줄 종결자를 차례로 텍스트 문자열 또는 스트림에 비동기적으로 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-807">Writes a character followed by a line terminator asynchronously to the text string or stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0e362-808">비동기 쓰기 작업을 나타내는 작업입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-808">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e362-809">줄 종결자가 정의한는 <xref:System.IO.TextWriter.CoreNewLine> 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-809">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 <span data-ttu-id="0e362-810"><xref:System.IO.TextWriter> 클래스는 추상 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-810">The <xref:System.IO.TextWriter> class is an abstract class.</span></span> <span data-ttu-id="0e362-811">따라서 인스턴스화하지 않습니다 해당 코드에서.</span><span class="sxs-lookup"><span data-stu-id="0e362-811">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="0e362-812">사용 하는 예는 <xref:System.IO.TextWriter.WriteLineAsync%2A> 메서드를 참조 합니다 <xref:System.IO.StreamWriter.WriteLineAsync%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0e362-812">For an example of using the <xref:System.IO.TextWriter.WriteLineAsync%2A> method, see the <xref:System.IO.StreamWriter.WriteLineAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0e362-813">텍스트 작성기가 삭제됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-813">The text writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0e362-814">이전 쓰기 작업에서 텍스트 작성기를 현재 사용하고 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-814">The text writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.StreamWriter.WriteLineAsync(System.Char)" />
        <altmember cref="M:System.IO.StringWriter.WriteLineAsync(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteLineAsync (char[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteLineAsync(char[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLineAsync(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteLineAsync (buffer As Char()) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteLineAsync(cli::array &lt;char&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="member this.WriteLineAsync : char[] -&gt; System.Threading.Tasks.Task" Usage="textWriter.WriteLineAsync buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="0e362-815">텍스트 스트림에 쓸 문자 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-815">The character array to write to the text stream.</span>
          </span>
          <span data-ttu-id="0e362-816">문자 배열이 <see langword="null" />이면 줄 종결자만 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-816">If the character array is <see langword="null" />, only the line terminator is written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e362-817">문자의 배열과 줄 종결자를 차례로 텍스트 문자열 또는 스트림에 비동기적으로 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-817">Writes an array of characters followed by a line terminator asynchronously to the text string or stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0e362-818">비동기 쓰기 작업을 나타내는 작업입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-818">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e362-819">줄 종결자가 정의한는 <xref:System.IO.TextWriter.CoreNewLine> 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-819">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0e362-820">텍스트 작성기가 삭제됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-820">The text writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0e362-821">이전 쓰기 작업에서 텍스트 작성기를 현재 사용하고 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-821">The text writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.StreamWriter" />
        <altmember cref="T:System.IO.StringWriter" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteLineAsync (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteLineAsync(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLineAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteLineAsync (value As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteLineAsync(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLineAsync : string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteLineAsync : string -&gt; System.Threading.Tasks.Task" Usage="textWriter.WriteLineAsync value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0e362-822">쓸 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-822">The string to write.</span>
          </span>
          <span data-ttu-id="0e362-823">값이 <see langword="null" />이면 줄 종결자만 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-823">If the value is <see langword="null" />, only a line terminator is written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e362-824">문자열과 줄 종결자를 차례로 텍스트 문자열 또는 스트림에 비동기적으로 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-824">Writes a string followed by a line terminator asynchronously to the text string or stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0e362-825">비동기 쓰기 작업을 나타내는 작업입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-825">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e362-826">줄 종결자가 정의한는 <xref:System.IO.TextWriter.CoreNewLine> 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-826">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 <span data-ttu-id="0e362-827"><xref:System.IO.TextWriter> 클래스는 추상 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-827">The <xref:System.IO.TextWriter> class is an abstract class.</span></span> <span data-ttu-id="0e362-828">따라서 인스턴스화하지 않습니다 해당 코드에서.</span><span class="sxs-lookup"><span data-stu-id="0e362-828">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="0e362-829">사용 하는 예는 <xref:System.IO.TextWriter.WriteLineAsync%2A> 메서드를 참조 합니다 <xref:System.IO.StreamWriter.WriteLineAsync%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0e362-829">For an example of using the <xref:System.IO.TextWriter.WriteLineAsync%2A> method, see the <xref:System.IO.StreamWriter.WriteLineAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0e362-830">텍스트 작성기가 삭제됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-830">The text writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0e362-831">이전 쓰기 작업에서 텍스트 작성기를 현재 사용하고 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-831">The text writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.StreamWriter.WriteLineAsync(System.String)" />
        <altmember cref="M:System.IO.StringWriter.WriteLineAsync(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteLineAsync (ReadOnlyMemory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteLineAsync(valuetype System.ReadOnlyMemory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLineAsync(System.ReadOnlyMemory{System.Char},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member WriteLineAsync : ReadOnlyMemory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.WriteLineAsync : ReadOnlyMemory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="textWriter.WriteLineAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlyMemory&lt;System.Char&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteLineAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteLineAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteLineAsync (buffer As Char(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteLineAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member WriteLineAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&#xA;override this.WriteLineAsync : char[] * int * int -&gt; System.Threading.Tasks.Task" Usage="textWriter.WriteLineAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="0e362-832">쓸 데이터가 있는 문자 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-832">The character array to write data from.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="0e362-833">데이터 검색을 시작하는 버퍼의 문자 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-833">The character position in the buffer at which to start retrieving data.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="0e362-834">쓸 문자 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-834">The number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0e362-835">문자의 하위 배열과 줄 종결자를 차례로 텍스트 문자열 또는 스트림에 비동기적으로 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-835">Writes a subarray of characters followed by a line terminator asynchronously to the text string or stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0e362-836">비동기 쓰기 작업을 나타내는 작업입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-836">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e362-837">줄 종결자가 정의한는 <xref:System.IO.TextWriter.CoreNewLine> 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-837">The line terminator is defined by the <xref:System.IO.TextWriter.CoreNewLine> field.</span></span>  
  
 <span data-ttu-id="0e362-838"><xref:System.IO.TextWriter> 클래스는 추상 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0e362-838">The <xref:System.IO.TextWriter> class is an abstract class.</span></span> <span data-ttu-id="0e362-839">따라서 인스턴스화하지 않습니다 해당 코드에서.</span><span class="sxs-lookup"><span data-stu-id="0e362-839">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="0e362-840">사용 하는 예는 <xref:System.IO.TextWriter.WriteLineAsync%2A> 메서드를 참조 합니다 <xref:System.IO.StreamWriter.WriteLineAsync%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0e362-840">For an example of using the <xref:System.IO.TextWriter.WriteLineAsync%2A> method, see the <xref:System.IO.StreamWriter.WriteLineAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0e362-841">
            <paramref name="buffer" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-841">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0e362-842">
            <paramref name="index" />와 <paramref name="count" />의 합이 버퍼 길이보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-842">The <paramref name="index" /> plus <paramref name="count" /> is greater than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0e362-843">
            <paramref name="index" /> 또는 <paramref name="count" />가 음수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-843">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0e362-844">텍스트 작성기가 삭제됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-844">The text writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0e362-845">이전 쓰기 작업에서 텍스트 작성기를 현재 사용하고 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e362-845">The text writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.StreamWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.IO.StringWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>