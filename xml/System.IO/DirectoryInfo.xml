<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DirectoryInfo.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-81070f4" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1e344e59-9d8e-481b-978a-09f2e01be86cf57138ff45a8e0ac1237da3e85d3d72b784fca1c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f57138ff45a8e0ac1237da3e85d3d72b784fca1c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f9e3295b6cc303a611a73a84c4b27f9da792ad0d</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/26/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IO.DirectoryInfo">
          <source>Exposes instance methods for creating, moving, and enumerating through directories and subdirectories.</source>
          <target state="translated">디렉터리 및 하위 디렉터리를 만들고, 이동하고, 열거하는 인스턴스 메서드를 노출합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.IO.DirectoryInfo">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.DirectoryInfo">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph> class for typical operations such as copying, moving, renaming, creating, and deleting directories.</source>
          <target state="translated">사용 하 여 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph> 복사, 이동, 이름 바꾸기 및 디렉터리 삭제와 같은 일반적인 작업에 대 한 클래스입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.DirectoryInfo">
          <source>If you are going to reuse an object several times, consider using the instance method of <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph> instead of the corresponding static methods of the <ph id="ph2">&lt;xref:System.IO.Directory&gt;</ph> class, because a security check will not always be necessary.</source>
          <target state="translated">인스턴스 메서드를 사용 하 여 고려 하는 개체를 여러 번 다시 경우 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph> 의 해당 정적 메서드 대신는 <ph id="ph2">&lt;xref:System.IO.Directory&gt;</ph> 클래스를 보안 검사를 항상 되지 않으므로 필요 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.DirectoryInfo">
          <source>In members that accept a path as an input string, that path must be well-formed or an exception is raised.</source>
          <target state="translated">가 경로 입력된 문자열을 허용 하는 멤버에 해당 경로 올바른 형식 이어야 합니다 또는 예외가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.DirectoryInfo">
          <source>For example, if a path is fully qualified but begins with a space, the path is not trimmed in methods of the class.</source>
          <target state="translated">예를 들어 경로 정규화 된 표시 되지만 공백으로 시작 경로 클래스의 메서드에서 잘리지 않습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.DirectoryInfo">
          <source>Therefore, the path is malformed and an exception is raised.</source>
          <target state="translated">따라서 경로 잘못 되었으며 예외가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.DirectoryInfo">
          <source>Similarly, a path or a combination of paths cannot be fully qualified twice.</source>
          <target state="translated">마찬가지로, 경로 또는 경로의 조합 두 번 정규화 될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.DirectoryInfo">
          <source>For example, "c:\temp c:\windows" also raises an exception in most cases.</source>
          <target state="translated">예를 들어 "c:\temp c:\windows"는 또한 대부분의 경우에서 예외가 발생합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.DirectoryInfo">
          <source>Ensure that your paths are well-formed when using methods that accept a path string.</source>
          <target state="translated">경로 문자열을 허용 하는 메서드를 사용 하는 경우 경로 형식이 있는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.DirectoryInfo">
          <source>In members that accept a path, the path can refer to a file or just a directory.</source>
          <target state="translated">경로 허용 하는 멤버를 파일이 나 디렉터리 경로 참조할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.DirectoryInfo">
          <source>The specified path can also refer to a relative path or a Universal Naming Convention (UNC) path for a server and share name.</source>
          <target state="translated">지정된 된 경로 상대 경로 또는 서버 및 공유 이름에 대 한 범용 명명 규칙 (UNC) 경로를 참조할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.DirectoryInfo">
          <source>For example, all the following are acceptable paths:</source>
          <target state="translated">예를 들어 다음은 허용 가능한 경로.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.DirectoryInfo">
          <source>"c:<ph id="ph1">\\</ph>\MyDir<ph id="ph2">\\</ph>\MyFile.txt" in C#, or "c:\MyDir\MyFile.txt" in Visual Basic.</source>
          <target state="translated">"c:<ph id="ph1">\\</ph>\MyDir<ph id="ph2">\\</ph>\MyFile.txt" C# 또는 Visual Basic의 "c:\MyDir\MyFile.txt"입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.DirectoryInfo">
          <source>"c:<ph id="ph1">\\</ph>\MyDir" in C#, or "c:\MyDir" in Visual Basic.</source>
          <target state="translated">"c:<ph id="ph1">\\</ph>\MyDir" C# 또는 Visual Basic의 "c:\MyDir"입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.DirectoryInfo">
          <source>"MyDir<ph id="ph1">\\</ph>\MySubdir" in C#, or "MyDir\MySubDir" in Visual Basic.</source>
          <target state="translated">"MyDir<ph id="ph1">\\</ph>\MySubdir" C# 또는 Visual Basic의 "MyDir\MySubDir"입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.DirectoryInfo">
          <source>"<ph id="ph1">\\</ph><ph id="ph2">\\</ph><ph id="ph3">\\</ph>\MyServer<ph id="ph4">\\</ph>\MyShare" in C#, or "<ph id="ph5">\\</ph>\MyServer\MyShare" in Visual Basic.</source>
          <target state="translated">"<ph id="ph1">\\</ph><ph id="ph2">\\</ph><ph id="ph3">\\</ph>\MyServer<ph id="ph4">\\</ph>\MyShare" C# 또는 "<ph id="ph5">\\</ph>\MyServer\MyShare" Visual Basic의 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.DirectoryInfo">
          <source>By default, full read/write access to new directories is granted to all users.</source>
          <target state="translated">기본적으로 새 디렉터리에 대 한 모든 읽기/쓰기 액세스는 모든 사용자에 게 부여 됩니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.DirectoryInfo">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">공통적인 I/O 작업의 목록에 대 한 참조 <bpt id="p1">[</bpt>공통적인 I/O 작업<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.DirectoryInfo">
          <source>The following example demonstrates some of the main members of the <ph id="ph1">`DirectoryInfo`</ph> class.</source>
          <target state="translated">다음 예제에서는 주 멤버 중 일부는 <ph id="ph1">`DirectoryInfo`</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.DirectoryInfo">
          <source>The following example demonstrates how to copy a directory and its contents.</source>
          <target state="translated">다음 예제에서는 디렉터리와 해당 내용을 복사 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.#ctor(System.String)">
          <source>A string specifying the path on which to create the <ph id="ph1">&lt;see langword="DirectoryInfo" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="DirectoryInfo" /&gt;</ph>를 만들 경로를 지정하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> class on the specified path.</source>
          <target state="translated">지정된 경로를 사용하여 <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.#ctor(System.String)">
          <source>This constructor does not check if a directory exists.</source>
          <target state="translated">이 생성자는 디렉터리가 있는지를 확인 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.#ctor(System.String)">
          <source>This constructor is a placeholder for a string that is used to access the disk in subsequent operations.</source>
          <target state="translated">이 생성자에는 후속 작업에서 디스크에 액세스 하는 데 사용 되는 문자열에 대 한 자리 표시자입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.#ctor(System.String)">
          <source>The <ph id="ph1">`path`</ph> parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</source>
          <target state="translated"><ph id="ph1">`path`</ph> 매개 변수는 파일 이름, 범용 명명 규칙 (UNC) 공유에 파일을 포함 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.#ctor(System.String)">
          <source>When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</source>
          <target state="translated">문자 집합을 특정 문화권 설정을 사용 하 여 컴파일하고 하면 서로 다른 문화권 설정 사용 하 여 동일한 문자 검색 문자를 해석할 수 없어 및를 throw 하면 예외가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.#ctor(System.String)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">공통적인 I/O 작업의 목록에 대 한 참조 <bpt id="p1">[</bpt>공통적인 I/O 작업<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.#ctor(System.String)">
          <source>The following example uses this constructor to create the specified directory and subdirectory, and demonstrates that a directory that contains subdirectories cannot be deleted.</source>
          <target state="translated">다음 예제에서는이 생성자를 사용 하 여 지정 된 디렉터리와 하위 디렉터리를 만들려고 하 고 하위 디렉터리를 포함 하는 디렉터리를 삭제할 수 없습니다 시연 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.#ctor(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.#ctor(System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.#ctor(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> contains invalid characters such as ", <ph id="ph2">&amp;lt;</ph>, <ph id="ph3">&amp;gt;</ph>, or |.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>에 잘못된 문자(", <ph id="ph2">&amp;lt;</ph>, <ph id="ph3">&amp;gt;</ph> 또는 |)가 들어 있는 경우</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.#ctor(System.String)">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.#ctor(System.String)">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</source>
          <target state="translated">예를 들어 Windows 기반 플랫폼에서 경로는 248자 미만이어야 하고 파일 이름은 260자 미만이어야 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.#ctor(System.String)">
          <source>The specified path, file name, or both are too long.</source>
          <target state="translated">지정된 경로, 파일 이름 중 하나 또는 둘 다가 너무 깁니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.#ctor(System.String)">
          <source>for reading from files and directories.</source>
          <target state="translated">파일 및 디렉터리에서 계속 하십시오.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.#ctor(System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="T:System.IO.DirectoryInfo">
          <source>Creates a directory.</source>
          <target state="translated">디렉터리를 만듭니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Create">
          <source>Creates a directory.</source>
          <target state="translated">디렉터리를 만듭니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Create">
          <source>If the directory already exists, this method does nothing.</source>
          <target state="translated">디렉터리가 이미 있는 경우이 메서드는 아무 작업도 수행 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Create">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">공통적인 I/O 작업의 목록에 대 한 참조 <bpt id="p1">[</bpt>공통적인 I/O 작업<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Create">
          <source>The following example checks whether a specified directory exists, creates the directory if it does not exist, and deletes the directory.</source>
          <target state="translated">다음 예제에서는 검사 지정된 된 디렉터리가 있는지 여부를 경우 생성 되는 디렉터리 존재 하지 않는 고 디렉터리를 삭제 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Create">
          <source>The directory cannot be created.</source>
          <target state="translated">디렉터리를 만들 수 없습니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Create">
          <source>for writing files.</source>
          <target state="translated">파일을 작성 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Create">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)">
          <source>The access control to apply to the directory.</source>
          <target state="translated">디렉터리에 적용할 액세스 제어입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)">
          <source>Creates a directory using a <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.DirectorySecurity" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.AccessControl.DirectorySecurity" /&gt;</ph> 개체를 사용하여 디렉터리를 만듭니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)">
          <source>Use this method overload to create a directory with access control, so there is no chance the directory can be accessed before security is applied.</source>
          <target state="translated">이 메서드 오버 로드를 사용 하 여 디렉터리를 만들려면 액세스 제어를 사용 하므로 가능성이 보안 적용 되기 전에 디렉터리에 액세스할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)">
          <source>If the directory already exists, this method does nothing.</source>
          <target state="translated">디렉터리가 이미 있는 경우이 메서드는 아무 작업도 수행 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">공통적인 I/O 작업의 목록에 대 한 참조 <bpt id="p1">[</bpt>공통적인 I/O 작업<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)">
          <source>The directory specified by <ph id="ph1">&lt;paramref name="path" /&gt;</ph> is read-only or is not empty.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>로 지정한 디렉터리가 읽기 전용이거나 빈 디렉터리가 아닙니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <ph id="ph2">&lt;see cref="F:System.IO.Path.InvalidPathChars" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 빈 문자열이거나 공백만 포함하거나 <ph id="ph2">&lt;see cref="F:System.IO.Path.InvalidPathChars" /&gt;</ph>로 정의된 하나 이상의 잘못된 문자를 포함합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</source>
          <target state="translated">예를 들어 Windows 기반 플랫폼에서 경로는 248자 미만이어야 하고 파일 이름은 260자 미만이어야 합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)">
          <source>The specified path is invalid, such as being on an unmapped drive.</source>
          <target state="translated">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)">
          <source>Creating a directory with only the colon (:) character was attempted.</source>
          <target state="translated">콜론(:) 문자만으로 디렉터리를 만들려고 했습니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)">
          <source>for permission to create a directory.</source>
          <target state="translated">디렉터리를 만들 수 있는 권한입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">보안 동작: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="T:System.IO.DirectoryInfo">
          <source>Creates a subdirectory or subdirectories on the specified path.</source>
          <target state="translated">지정된 경로에 하위 디렉터리를 하나 이상 만듭니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="T:System.IO.DirectoryInfo">
          <source>The specified path can be relative to this instance of the <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> class.</source>
          <target state="translated">지정된 경로는 <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> 클래스의 이 인스턴스에 대한 상대적 경로일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>The specified path.</source>
          <target state="translated">지정된 경로입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>This cannot be a different disk volume or Universal Naming Convention (UNC) name.</source>
          <target state="translated">이 경로는 다른 디스크 볼륨이나 UNC(Universal Naming Convention) 이름이 될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>Creates a subdirectory or subdirectories on the specified path.</source>
          <target state="translated">지정된 경로에 하위 디렉터리를 하나 이상 만듭니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>The specified path can be relative to this instance of the <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> class.</source>
          <target state="translated">지정된 경로는 <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> 클래스의 이 인스턴스에 대한 상대적 경로일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>The last directory specified in <ph id="ph1">&lt;paramref name="path" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>에 지정된 마지막 경로입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>Any and all directories specified in <ph id="ph1">`path`</ph> are created, unless some part of <ph id="ph2">`path`</ph> is invalid.</source>
          <target state="translated">에 지정 된 모든 디렉터리가 <ph id="ph1">`path`</ph> 않은 경우 만들어집니다 부분이 <ph id="ph2">`path`</ph> 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>The <ph id="ph1">`path`</ph> parameter specifies a directory path, not a file path.</source>
          <target state="translated"><ph id="ph1">`path`</ph> 매개 변수는 파일 경로가 아닌 디렉터리 경로 지정 합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>If the subdirectory already exists, this method does nothing.</source>
          <target state="translated">하위 디렉터리에 이미 있으면이 메서드는 아무 작업도 수행 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>Path names are limited to 248 characters.</source>
          <target state="translated">경로 이름은 248 자로 제한 됩니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">공통적인 I/O 작업의 목록에 대 한 참조 <bpt id="p1">[</bpt>공통적인 I/O 작업<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>The following example demonstrates creating a subdirectory.</source>
          <target state="translated">다음 예제에서는 하위 디렉터리를 만드는 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>In this example, the created directories are removed once created.</source>
          <target state="translated">이 예제에서는 만들어지는 디렉터리 만들어질 때 제거 됩니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>Therefore, to test this sample, comment out the delete lines in the code.</source>
          <target state="translated">따라서이 샘플을 테스트 하려면 주석 처리 코드에서 행 삭제 합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> does not specify a valid file path or contains invalid <ph id="ph2">&lt;see langword="DirectoryInfo" /&gt;</ph> characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 올바른 파일 경로를 지정하지 않거나 잘못된 <ph id="ph2">&lt;see langword="DirectoryInfo" /&gt;</ph> 문자를 포함합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>The specified path is invalid, such as being on an unmapped drive.</source>
          <target state="translated">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>The subdirectory cannot be created.</source>
          <target state="translated">하위 디렉터리를 만들 수 없습니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>A file or directory already has the name specified by <ph id="ph1">&lt;paramref name="path" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>에 지정된 이름을 갖는 파일 또는 디렉터리가 이미 있습니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</source>
          <target state="translated">예를 들어 Windows 기반 플랫폼에서 경로는 248자 미만이어야 하고 파일 이름은 260자 미만이어야 합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>The specified path, file name, or both are too long.</source>
          <target state="translated">지정된 경로, 파일 이름 중 하나 또는 둘 다가 너무 깁니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>The caller does not have code access permission to create the directory.</source>
          <target state="translated">호출자가 디렉터리를 만들기 위한 코드 액세스 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>The caller does not have code access permission to read the directory described by the returned <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> object.</source>
          <target state="translated">호출자가 <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> 개체가 설명하는 디렉터리를 읽기 위한 코드 액세스 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>This can occur when the <ph id="ph1">&lt;paramref name="path" /&gt;</ph> parameter describes an existing directory.</source>
          <target state="translated">이 문제는 <ph id="ph1">&lt;paramref name="path" /&gt;</ph> 매개 변수가 기존 디렉터리를 설명할 때 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> contains a colon character (:) that is not part of a drive label ("C:<ph id="ph2">\\</ph>").</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>에 드라이브 레이블("C:<ph id="ph2">\\</ph>")에 속하지 않는 콜론 문자(:)가 포함되어 있습니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>for reading and writing files.</source>
          <target state="translated">에 파일 읽기 및 쓰기입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></source>
          <target state="translated">연관 된 열거형: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>The specified path.</source>
          <target state="translated">지정된 경로입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>This cannot be a different disk volume or Universal Naming Convention (UNC) name.</source>
          <target state="translated">이 경로는 다른 디스크 볼륨이나 UNC(Universal Naming Convention) 이름이 될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>The security to apply.</source>
          <target state="translated">적용할 보안입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>Creates a subdirectory or subdirectories on the specified path with the specified security.</source>
          <target state="translated">지정된 경로에 지정된 보안을 사용하여 하위 디렉터리를 하나 이상 만듭니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>The specified path can be relative to this instance of the <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> class.</source>
          <target state="translated">지정된 경로는 <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> 클래스의 이 인스턴스에 대한 상대적 경로일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>The last directory specified in <ph id="ph1">&lt;paramref name="path" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>에 지정된 마지막 경로입니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>Any and all directories specified in <ph id="ph1">`path`</ph> are created, unless some part of <ph id="ph2">`path`</ph> is invalid.</source>
          <target state="translated">에 지정 된 모든 디렉터리가 <ph id="ph1">`path`</ph> 않은 경우 만들어집니다 부분이 <ph id="ph2">`path`</ph> 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>The <ph id="ph1">`path`</ph> parameter specifies a directory path, not a file path.</source>
          <target state="translated"><ph id="ph1">`path`</ph> 매개 변수는 파일 경로가 아닌 디렉터리 경로 지정 합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>If the subdirectory already exists, this method does nothing.</source>
          <target state="translated">하위 디렉터리에 이미 있으면이 메서드는 아무 작업도 수행 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>Path names are limited to 248 characters.</source>
          <target state="translated">경로 이름은 248 자로 제한 됩니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">공통적인 I/O 작업의 목록에 대 한 참조 <bpt id="p1">[</bpt>공통적인 I/O 작업<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> does not specify a valid file path or contains invalid <ph id="ph2">&lt;see langword="DirectoryInfo" /&gt;</ph> characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 올바른 파일 경로를 지정하지 않거나 잘못된 <ph id="ph2">&lt;see langword="DirectoryInfo" /&gt;</ph> 문자를 포함합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>The specified path is invalid, such as being on an unmapped drive.</source>
          <target state="translated">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>The subdirectory cannot be created.</source>
          <target state="translated">하위 디렉터리를 만들 수 없습니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>A file or directory already has the name specified by <ph id="ph1">&lt;paramref name="path" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>에 지정된 이름을 갖는 파일 또는 디렉터리가 이미 있습니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</source>
          <target state="translated">예를 들어 Windows 기반 플랫폼에서 경로는 248자 미만이어야 하고 파일 이름은 260자 미만이어야 합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>The specified path, file name, or both are too long.</source>
          <target state="translated">지정된 경로, 파일 이름 중 하나 또는 둘 다가 너무 깁니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>The caller does not have code access permission to create the directory.</source>
          <target state="translated">호출자가 디렉터리를 만들기 위한 코드 액세스 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>The caller does not have code access permission to read the directory described by the returned <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> object.</source>
          <target state="translated">호출자가 <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> 개체가 설명하는 디렉터리를 읽기 위한 코드 액세스 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>This can occur when the <ph id="ph1">&lt;paramref name="path" /&gt;</ph> parameter describes an existing directory.</source>
          <target state="translated">이 문제는 <ph id="ph1">&lt;paramref name="path" /&gt;</ph> 매개 변수가 기존 디렉터리를 설명할 때 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> contains a colon character (:) that is not part of a drive label ("C:<ph id="ph2">\\</ph>").</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>에 드라이브 레이블("C:<ph id="ph2">\\</ph>")에 속하지 않는 콜론 문자(:)가 포함되어 있습니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>for reading and writing files.</source>
          <target state="translated">에 파일 읽기 및 쓰기입니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></source>
          <target state="translated">연관 된 열거형: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="T:System.IO.DirectoryInfo">
          <source>Deletes a <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> and its contents from a path.</source>
          <target state="translated">경로에서 <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> 및 해당 내용을 삭제합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete">
          <source>Deletes this <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> if it is empty.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph>가 비어 있으면 이를 삭제합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Delete">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">공통적인 I/O 작업의 목록에 대 한 참조 <bpt id="p1">[</bpt>공통적인 I/O 작업<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Delete">
          <source>The following example throws an exception if you attempt to delete a directory that is not empty.</source>
          <target state="translated">다음 예에서는 비어 있지 않은 디렉터리를 삭제 하려고 하면 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete">
          <source>The directory contains a read-only file.</source>
          <target state="translated">디렉터리에 읽기 전용 파일이 포함되어 있습니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete">
          <source>The directory described by this <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> object does not exist or could not be found.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> 개체가 설명하는 디렉터리가 없거나 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete">
          <source>The directory is not empty.</source>
          <target state="translated">디렉터리가 비어 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete">
          <source>The directory is the application's current working directory.</source>
          <target state="translated">이 디렉터리는 응용 프로그램의 현재 작업 디렉터리입니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete">
          <source>There is an open handle on the directory, and the operating system is Windows XP or earlier.</source>
          <target state="translated">디렉터리에 대해 열린 핸들이 있고 운영 체제가 Windows XP 또는 이전 버전입니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete">
          <source>This open handle can result from enumerating directories.</source>
          <target state="translated">이 열린 핸들은 디렉터리를 열거하면 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Enumerate Directories and Files<ept id="p1">](~/docs/standard/io/how-to-enumerate-directories-and-files.md)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>방법: 디렉터리 및 파일 열거<ept id="p1">](~/docs/standard/io/how-to-enumerate-directories-and-files.md)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Delete">
          <source>for writing directories.</source>
          <target state="translated">디렉터리를 작성 합니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Delete">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to delete this directory, its subdirectories, and all files; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이 디렉터리, 하위 디렉터리 및 모든 파일을 삭제하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
          <source>Deletes this instance of a <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph>, specifying whether to delete subdirectories and files.</source>
          <target state="translated">하위 디렉터리와 파일을 삭제할지를 지정하여 <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph>의 이 인스턴스를 삭제합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
          <source>If the <ph id="ph1">`DirectoryInfo`</ph> has no files or subdirectories, this method deletes the <ph id="ph2">`DirectoryInfo`</ph> even if <ph id="ph3">`recursive`</ph> is <ph id="ph4">`false`</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">`DirectoryInfo`</ph> 파일이 나 하위 디렉터리에 있는 경우이 메서드는 삭제는 <ph id="ph2">`DirectoryInfo`</ph> 경우에 <ph id="ph3">`recursive`</ph> 은 <ph id="ph4">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
          <source>Attempting to delete a <ph id="ph1">`DirectoryInfo`</ph> that is not empty when <ph id="ph2">`recursive`</ph> is <ph id="ph3">`false`</ph> throws an <ph id="ph4">&lt;xref:System.IO.IOException&gt;</ph>.</source>
          <target state="translated">삭제 하는 한 <ph id="ph1">`DirectoryInfo`</ph> 비어 때 <ph id="ph2">`recursive`</ph> 은 <ph id="ph3">`false`</ph> throw는 <ph id="ph4">&lt;xref:System.IO.IOException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">공통적인 I/O 작업의 목록에 대 한 참조 <bpt id="p1">[</bpt>공통적인 I/O 작업<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
          <source>The following example demonstrates deleting a directory.</source>
          <target state="translated">다음 예제에서는 디렉터리를 삭제 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
          <source>Because the directory is removed, first comment out the <ph id="ph1">`Delete`</ph> line to test that the directory exists.</source>
          <target state="translated">디렉터리가 제거 되기 때문에 먼저 주석으로 처리는 <ph id="ph1">`Delete`</ph> 디렉터리가 있는지를 테스트 하려면.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
          <source>Then uncomment the same line of code to test that the directory was removed successfully.</source>
          <target state="translated">그런 다음 아래 같은 줄의 코드를 테스트 디렉터리가 성공적으로 제거 되었습니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
          <source>The directory contains a read-only file.</source>
          <target state="translated">디렉터리에 읽기 전용 파일이 포함되어 있습니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
          <source>The directory described by this <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> object does not exist or could not be found.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> 개체가 설명하는 디렉터리가 없거나 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
          <source>The directory is read-only.</source>
          <target state="translated">디렉터리가 읽기 전용인 경우</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
          <source>The directory contains one or more files or subdirectories and <ph id="ph1">&lt;paramref name="recursive" /&gt;</ph> is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">디렉터리에 하나 이상의 파일 또는 하위 디렉터리가 포함되어 있고 <ph id="ph1">&lt;paramref name="recursive" /&gt;</ph>가 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
          <source>The directory is the application's current working directory.</source>
          <target state="translated">이 디렉터리는 응용 프로그램의 현재 작업 디렉터리입니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
          <source>There is an open handle on the directory or on one of its files, and the operating system is Windows XP or earlier.</source>
          <target state="translated">디렉터리 또는 해당 파일 중 하나에 대해 열린 핸들이 있고 운영 체제가 Windows XP 또는 이전 버전입니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
          <source>This open handle can result from enumerating directories and files.</source>
          <target state="translated">이 열린 핸들은 디렉터리 및 파일을 열거하면 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Enumerate Directories and Files<ept id="p1">](~/docs/standard/io/how-to-enumerate-directories-and-files.md)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>방법: 디렉터리 및 파일 열거<ept id="p1">](~/docs/standard/io/how-to-enumerate-directories-and-files.md)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
          <source>Write flag required for write permission to the <ph id="ph1">&lt;see langword="DirectoryInfo" /&gt;</ph> and subdirectories to be deleted.</source>
          <target state="translated">쓰기에 대 한 쓰기 권한이 필요한 플래그는 <ph id="ph1">&lt;see langword="DirectoryInfo" /&gt;</ph> 와 하위 디렉터리를 삭제할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="T:System.IO.DirectoryInfo">
          <source>Returns an enumerable collection of directory information in the current directory.</source>
          <target state="translated">현재 디렉터리에 있는 디렉터리 정보의 열거 가능 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateDirectories">
          <source>Returns an enumerable collection of directory information in the current directory.</source>
          <target state="translated">현재 디렉터리에 있는 디렉터리 정보의 열거 가능 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateDirectories">
          <source>An enumerable collection of directories in the current directory.</source>
          <target state="translated">현재 디렉터리에 있는 디렉터리의 열거 가능 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories">
          <source>The <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateDirectories%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetDirectories%2A&gt;</ph> methods differ as follows:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateDirectories%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetDirectories%2A&gt;</ph> 방법은 다음과 같이 달라 집니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateDirectories%2A&gt;</ph>, you can start enumerating the collection of <ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph> objects before the whole collection is returned.</source>
          <target state="translated">사용 하는 경우 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateDirectories%2A&gt;</ph>의 컬렉션을 열거 하기 <ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph> 전체 컬렉션을 반환 하기 전에 개체입니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetDirectories%2A&gt;</ph>, you must wait for the whole array of <ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph> objects to be returned before you can access the array.</source>
          <target state="translated">사용 하는 경우 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetDirectories%2A&gt;</ph>를의 전체 배열에 대해 기다려야 <ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph> 개체 반환 되기 전에 배열에 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories">
          <source>Therefore, when you are working with many files and directories, <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateDirectories%2A&gt;</ph> can be more efficient.</source>
          <target state="translated">따라서 많은 파일 및 디렉터리를 사용 하 여 작업할 때 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateDirectories%2A&gt;</ph> 더 효과적일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories">
          <source>This method pre-populates the values of the following <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph> properties:</source>
          <target state="translated">이 메서드는 다음 값을 미리 채웁니다 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph> 속성:</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories">
          <source>The returned collection is not cached; each call to the <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> method on  the collection will start a new enumeration.</source>
          <target state="translated">반환된 된 컬렉션은 캐시 되지 않습니다. 호출할 때마다는 <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> 메서드는 컬렉션에는 새 열거형을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories">
          <source>The following example enumerates the subdirectories under the C:\Program Files directory and uses a LINQ query to return the names of all directories that were created before 2009 by checking the value of the <ph id="ph1">&lt;xref:System.IO.FileSystemInfo.CreationTimeUtc%2A&gt;</ph> property.</source>
          <target state="translated">다음 예제에서는 C:\Program Files 디렉터리에 하위 디렉터리를 열거 하 고 LINQ 쿼리를 사용 하 여 2009 이전 값을 확인 하 여 생성 된 모든 디렉터리의 이름을 반환 하는 <ph id="ph1">&lt;xref:System.IO.FileSystemInfo.CreationTimeUtc%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories">
          <source>If you only need the names of the subdirectories, use the static <ph id="ph1">&lt;xref:System.IO.Directory&gt;</ph> class for better performance.</source>
          <target state="translated">하위 디렉터리의 이름이 필요한 경우 사용 하 여 정적 <ph id="ph1">&lt;xref:System.IO.Directory&gt;</ph> 성능 향상에 대 한 클래스입니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories">
          <source>For an example, see the <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateDirectories%28System.String%29&gt;</ph> method.</source>
          <target state="translated">예를 들어 참조는 <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateDirectories%28System.String%29&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateDirectories">
          <source>The path encapsulated in the <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> object is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> 개체에 캡슐화된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateDirectories">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>The search string to match against the names of directories.</source>
          <target state="translated">디렉터리 이름과 일치하는지 비교할 검색 문자열입니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>This parameter can contain a combination of valid literal path and wildcard (* and ?) characters, but it doesn't support regular expressions.</source>
          <target state="translated">이 매개 변수는 유효한 리터럴 경로와 와일드카드(* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>Returns an enumerable collection of directory information that matches a specified search pattern.</source>
          <target state="translated">지정된 검색 패턴과 일치하는 디렉터리 정보의 열거 가능 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>An enumerable collection of directories that matches <ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph>과 일치하는 디렉터리의 열거 가능 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source><ph id="ph1">`searchPattern`</ph> can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 리터럴 및 와일드 카드 문자 조합일 수 있지만 정규식을 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>The following wildcard specifiers are permitted in <ph id="ph1">`searchPattern`</ph>.</source>
          <target state="translated">에 다음 와일드 카드 지정자를 사용할 수 <ph id="ph1">`searchPattern`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>Wildcard specifier</source>
          <target state="translated">와일드 카드 지정자</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>Matches</source>
          <target state="translated">일치 항목</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>* (asterisk)</source>
          <target state="translated">*(별표)</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>Zero or more characters in that position.</source>
          <target state="translated">해당 위치에 0 개 이상의 문자가 있습니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>?</source>
          <target state="translated">?</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>(question mark)</source>
          <target state="translated">(물음표)</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>Zero or one character in that position.</source>
          <target state="translated">해당 위치에 0 개 또는 1 문자입니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>Characters other than the wildcard are literal characters.</source>
          <target state="translated">와일드 카드 문자는 리터럴 문자입니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>For example, the  string "*t" searches for all names in  ending with the letter "t".</source>
          <target state="translated">예를 들어 문자열 "* t"에서 문자 "t"로 끝나는 모든 이름 검색 합니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>".</source>
          <target state="translated">".</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>The <ph id="ph1">`searchPattern`</ph> string "s<ph id="ph2">\*</ph>" searches for all names in <ph id="ph3">`path`</ph> beginning with the letter "s".</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 문자열 "s<ph id="ph2">\*</ph>"에서 모든 이름 검색 <ph id="ph3">`path`</ph> "s"로 시작 합니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateDirectories%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetDirectories%2A&gt;</ph> methods differ as follows:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateDirectories%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetDirectories%2A&gt;</ph> 방법은 다음과 같이 달라 집니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateDirectories%2A&gt;</ph>, you can start enumerating the collection of <ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph> objects before the whole collection is returned.</source>
          <target state="translated">사용 하는 경우 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateDirectories%2A&gt;</ph>의 컬렉션을 열거 하기 <ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph> 전체 컬렉션을 반환 하기 전에 개체입니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetDirectories%2A&gt;</ph>, you must wait for the whole array of <ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph> objects to be returned before you can access the array.</source>
          <target state="translated">사용 하는 경우 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetDirectories%2A&gt;</ph>를의 전체 배열에 대해 기다려야 <ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph> 개체 반환 되기 전에 배열에 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>Therefore, when you are working with many files and directories, <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateDirectories%2A&gt;</ph> can be more efficient.</source>
          <target state="translated">따라서 많은 파일 및 디렉터리를 사용 하 여 작업할 때 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateDirectories%2A&gt;</ph> 더 효과적일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>This method pre-populates the values of the following <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph> properties:</source>
          <target state="translated">이 메서드는 다음 값을 미리 채웁니다 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph> 속성:</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>The returned collection is not cached; each call to the <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> method on  the collection will start a new enumeration.</source>
          <target state="translated">반환된 된 컬렉션은 캐시 되지 않습니다. 호출할 때마다는 <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> 메서드는 컬렉션에는 새 열거형을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>The path encapsulated in the <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> object is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> 개체에 캡슐화된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>The search string to match against the names of directories.</source>
          <target state="translated">디렉터리 이름과 일치하는지 비교할 검색 문자열입니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>This parameter can contain a combination of valid literal path and wildcard (* and ?) characters, but it doesn't support regular expressions.</source>
          <target state="translated">이 매개 변수는 유효한 리터럴 경로와 와일드카드(* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</source>
          <target state="translated">검색 작업에 현재 디렉터리만 포함할지 아니면 모든 하위 디렉터리를 포함할지를 지정하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.IO.SearchOption.TopDirectoryOnly" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.IO.SearchOption.TopDirectoryOnly" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>Returns an enumerable collection of directory information that matches a specified search pattern and search subdirectory option.</source>
          <target state="translated">지정된 검색 패턴 및 하위 디렉터리 검색 옵션과 일치하는 디렉터리 정보의 열거 가능 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>An enumerable collection of directories that matches <ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> and <ph id="ph2">&lt;paramref name="searchOption" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> 및 <ph id="ph2">&lt;paramref name="searchOption" /&gt;</ph>과 일치하는 디렉터리의 열거 가능 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source><ph id="ph1">`searchPattern`</ph> can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 리터럴 및 와일드 카드 문자 조합일 수 있지만 정규식을 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>The following wildcard specifiers are permitted in <ph id="ph1">`searchPattern`</ph>.</source>
          <target state="translated">에 다음 와일드 카드 지정자를 사용할 수 <ph id="ph1">`searchPattern`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>Wildcard specifier</source>
          <target state="translated">와일드 카드 지정자</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>Matches</source>
          <target state="translated">일치 항목</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>* (asterisk)</source>
          <target state="translated">*(별표)</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>Zero or more characters in that position.</source>
          <target state="translated">해당 위치에 0 개 이상의 문자가 있습니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>?</source>
          <target state="translated">?</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>(question mark)</source>
          <target state="translated">(물음표)</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>Zero or one character in that position.</source>
          <target state="translated">해당 위치에 0 개 또는 1 문자입니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>Characters other than the wildcard are literal characters.</source>
          <target state="translated">와일드 카드 문자는 리터럴 문자입니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>For example, the  string "*t" searches for all names in  ending with the letter "t".</source>
          <target state="translated">예를 들어 문자열 "* t"에서 문자 "t"로 끝나는 모든 이름 검색 합니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>".</source>
          <target state="translated">".</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>The <ph id="ph1">`searchPattern`</ph> string "s<ph id="ph2">\*</ph>" searches for all names in <ph id="ph3">`path`</ph> beginning with the letter "s".</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 문자열 "s<ph id="ph2">\*</ph>"에서 모든 이름 검색 <ph id="ph3">`path`</ph> "s"로 시작 합니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>The <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateDirectories%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetDirectories%2A&gt;</ph> methods differ as follows:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateDirectories%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetDirectories%2A&gt;</ph> 방법은 다음과 같이 달라 집니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateDirectories%2A&gt;</ph>, you can start enumerating the collection of <ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph> objects before the whole collection is returned.</source>
          <target state="translated">사용 하는 경우 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateDirectories%2A&gt;</ph>의 컬렉션을 열거 하기 <ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph> 전체 컬렉션을 반환 하기 전에 개체입니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetDirectories%2A&gt;</ph>, you must wait for the whole array of <ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph> objects to be returned before you can access the array.</source>
          <target state="translated">사용 하는 경우 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetDirectories%2A&gt;</ph>를의 전체 배열에 대해 기다려야 <ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph> 개체 반환 되기 전에 배열에 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>Therefore, when you are working with many files and directories, <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateDirectories%2A&gt;</ph> can be more efficient.</source>
          <target state="translated">따라서 많은 파일 및 디렉터리를 사용 하 여 작업할 때 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateDirectories%2A&gt;</ph> 더 효과적일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>This method pre-populates the values of the following <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph> properties:</source>
          <target state="translated">이 메서드는 다음 값을 미리 채웁니다 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph> 속성:</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>The returned collection is not cached; each call to the <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> method on  the collection will start a new enumeration.</source>
          <target state="translated">반환된 된 컬렉션은 캐시 되지 않습니다. 호출할 때마다는 <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> 메서드는 컬렉션에는 새 열거형을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>The following example, starting from a specified directory, uses this method and the <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph> method to enumerate the files and directories within the start directory and display details of any files over 10 MB in size.</source>
          <target state="translated">지정된 된 디렉터리에서 시작 하는 다음 예제에서는이 메서드를 사용 하 여 및 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph> 메서드 파일 및 시작 디렉터리 내에서 디렉터리를 열거 하 고 모든 세부 정보를 표시 크기의 파일 이상 10MB.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="searchOption" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.SearchOption" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchOption" /&gt;</ph>은 유효한 <ph id="ph2">&lt;see cref="T:System.IO.SearchOption" /&gt;</ph> 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>The path encapsulated in the <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> object is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> 개체에 캡슐화된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="T:System.IO.DirectoryInfo">
          <source>Returns an enumerable collection of file information in the current directory.</source>
          <target state="translated">현재 디렉터리에 있는 파일 정보의 열거 가능 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFiles">
          <source>Returns an enumerable collection of file information in the current directory.</source>
          <target state="translated">현재 디렉터리에 있는 파일 정보의 열거 가능 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFiles">
          <source>An enumerable collection of the files in the current directory.</source>
          <target state="translated">현재 디렉터리에 있는 파일의 열거 가능 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles">
          <source>The <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph> methods differ as follows:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph> 방법은 다음과 같이 달라 집니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph>, you can start enumerating the collection of <ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph> objects before the whole collection is returned.</source>
          <target state="translated">사용 하는 경우 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph>의 컬렉션을 열거 하기 <ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph> 전체 컬렉션을 반환 하기 전에 개체입니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph>, you must wait for the whole array of <ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph> objects to be returned before you can access the array.</source>
          <target state="translated">사용 하는 경우 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph>를의 전체 배열에 대해 기다려야 <ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph> 개체 반환 되기 전에 배열에 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles">
          <source>Therefore, when you are working with many files and directories, <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph> can be more efficient.</source>
          <target state="translated">따라서 많은 파일 및 디렉터리를 사용 하 여 작업할 때 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph> 더 효과적일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles">
          <source>This method pre-populates the values of the following <ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph> properties:</source>
          <target state="translated">이 메서드는 다음 값을 미리 채웁니다 <ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph> 속성:</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles">
          <source>The returned collection is not cached; each call to the <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> method on the collection will start a new enumeration.</source>
          <target state="translated">반환된 된 컬렉션은 캐시 되지 않습니다. 호출할 때마다는 <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> 메서드는 컬렉션에는 새 열거형을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles">
          <source>The following example enumerates the files under a specified directory and uses a LINQ query to return the names of all files that were created before 2009 by checking the value of the <ph id="ph1">&lt;xref:System.IO.FileSystemInfo.CreationTimeUtc%2A&gt;</ph> property.</source>
          <target state="translated">다음 예제에서는 지정 된 디렉터리 아래 파일을 열거 하 고 LINQ 쿼리를 사용 하 여 2009 이전 값을 확인 하 여 생성 된 모든 파일의 이름을 반환 하는 <ph id="ph1">&lt;xref:System.IO.FileSystemInfo.CreationTimeUtc%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles">
          <source>If you only need the names of the files, use the static <ph id="ph1">&lt;xref:System.IO.Directory&gt;</ph> class for better performance.</source>
          <target state="translated">파일의 이름을 하기만 하는 경우 사용 하 여 정적 <ph id="ph1">&lt;xref:System.IO.Directory&gt;</ph> 성능 향상에 대 한 클래스입니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles">
          <source>For an example, see the <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateFiles%28System.String%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">예를 들어 참조는 <ph id="ph1">&lt;xref:System.IO.Directory.EnumerateFiles%28System.String%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles">
          <source>The following example shows how to enumerate files in a directory by using different search options.</source>
          <target state="translated">다음 예제에서는 다른 검색 옵션을 사용 하 여 디렉터리의 파일을 열거 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles">
          <source>The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</source>
          <target state="translated">파일 이름은 log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, SubFile.txt 라는 파일에 있는 하위 디렉터리에 있는 디렉터리를 가정 합니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFiles">
          <source>The path encapsulated in the <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> object is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> 개체에 캡슐화된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFiles">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>The search string to match against the names of files.</source>
          <target state="translated">파일 이름과 일치하는지 비교할 검색 문자열입니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>This parameter can contain a combination of valid literal path and wildcard (* and ?) characters, but it doesn't support regular expressions.</source>
          <target state="translated">이 매개 변수는 유효한 리터럴 경로와 와일드카드(* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>Returns an enumerable collection of file information that matches a search pattern.</source>
          <target state="translated">검색 패턴과 일치하는 파일 정보의 열거 가능 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>An enumerable collection of files that matches <ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph>과 일치하는 파일의 열거 가능 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source><ph id="ph1">`searchPattern`</ph> can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 리터럴 및 와일드 카드 문자 조합일 수 있지만 정규식을 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>The following wildcard specifiers are permitted in <ph id="ph1">`searchPattern`</ph>.</source>
          <target state="translated">에 다음 와일드 카드 지정자를 사용할 수 <ph id="ph1">`searchPattern`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>Wildcard specifier</source>
          <target state="translated">와일드 카드 지정자</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>Matches</source>
          <target state="translated">일치 항목</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>* (asterisk)</source>
          <target state="translated">*(별표)</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>Zero or more characters in that position.</source>
          <target state="translated">해당 위치에 0 개 이상의 문자가 있습니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>?</source>
          <target state="translated">?</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>(question mark)</source>
          <target state="translated">(물음표)</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>Zero or one character in that position.</source>
          <target state="translated">해당 위치에 0 개 또는 1 문자입니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>Characters other than the wildcard are literal characters.</source>
          <target state="translated">와일드 카드 문자는 리터럴 문자입니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>For example, the  string "*t" searches for all names in  ending with the letter "t".</source>
          <target state="translated">예를 들어 문자열 "* t"에서 문자 "t"로 끝나는 모든 이름 검색 합니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>".</source>
          <target state="translated">".</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>The <ph id="ph1">`searchPattern`</ph> string "s<ph id="ph2">\*</ph>" searches for all names in <ph id="ph3">`path`</ph> beginning with the letter "s".</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 문자열 "s<ph id="ph2">\*</ph>"에서 모든 이름 검색 <ph id="ph3">`path`</ph> "s"로 시작 합니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph> methods differ as follows:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph> 방법은 다음과 같이 달라 집니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph>, you can start enumerating the collection of <ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph> objects before the whole collection is returned.</source>
          <target state="translated">사용 하는 경우 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph>의 컬렉션을 열거 하기 <ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph> 전체 컬렉션을 반환 하기 전에 개체입니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph>, you must wait for the whole array of <ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph> objects to be returned before you can access the array.</source>
          <target state="translated">사용 하는 경우 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph>를의 전체 배열에 대해 기다려야 <ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph> 개체 반환 되기 전에 배열에 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>Therefore, when you are working with many files and directories, <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph> can be more efficient.</source>
          <target state="translated">따라서 많은 파일 및 디렉터리를 사용 하 여 작업할 때 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph> 더 효과적일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>This method pre-populates the values of the following <ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph> properties:</source>
          <target state="translated">이 메서드는 다음 값을 미리 채웁니다 <ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph> 속성:</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>The returned collection is not cached; each call to the <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> method on the collection will start a new enumeration.</source>
          <target state="translated">반환된 된 컬렉션은 캐시 되지 않습니다. 호출할 때마다는 <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> 메서드는 컬렉션에는 새 열거형을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>The following example shows how to enumerate files in a directory by using different search options.</source>
          <target state="translated">다음 예제에서는 다른 검색 옵션을 사용 하 여 디렉터리의 파일을 열거 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</source>
          <target state="translated">파일 이름은 log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, SubFile.txt 라는 파일에 있는 하위 디렉터리에 있는 디렉터리를 가정 합니다.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>The path encapsulated in the <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> object is invalid, (for example, it is on an unmapped drive).</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> 개체에 캡슐화된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>The search string to match against the names of files.</source>
          <target state="translated">파일 이름과 일치하는지 비교할 검색 문자열입니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>This parameter can contain a combination of valid literal path and wildcard (* and ?) characters, but it doesn't support regular expressions.</source>
          <target state="translated">이 매개 변수는 유효한 리터럴 경로와 와일드카드(* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</source>
          <target state="translated">검색 작업에 현재 디렉터리만 포함할지 아니면 모든 하위 디렉터리를 포함할지를 지정하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.IO.SearchOption.TopDirectoryOnly" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.IO.SearchOption.TopDirectoryOnly" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>Returns an enumerable collection of file information that matches a specified search pattern and search subdirectory option.</source>
          <target state="translated">지정된 검색 패턴 및 하위 디렉터리 검색 옵션과 일치하는 파일 정보의 열거 가능 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>An enumerable collection of files that matches <ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> and <ph id="ph2">&lt;paramref name="searchOption" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> 및 <ph id="ph2">&lt;paramref name="searchOption" /&gt;</ph>과 일치하는 파일의 열거 가능 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source><ph id="ph1">`searchPattern`</ph> can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 리터럴 및 와일드 카드 문자 조합일 수 있지만 정규식을 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>The following wildcard specifiers are permitted in <ph id="ph1">`searchPattern`</ph>.</source>
          <target state="translated">에 다음 와일드 카드 지정자를 사용할 수 <ph id="ph1">`searchPattern`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>Wildcard specifier</source>
          <target state="translated">와일드 카드 지정자</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>Matches</source>
          <target state="translated">일치 항목</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>* (asterisk)</source>
          <target state="translated">*(별표)</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>Zero or more characters in that position.</source>
          <target state="translated">해당 위치에 0 개 이상의 문자가 있습니다.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>?</source>
          <target state="translated">?</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>(question mark)</source>
          <target state="translated">(물음표)</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>Zero or one character in that position.</source>
          <target state="translated">해당 위치에 0 개 또는 1 문자입니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>Characters other than the wildcard are literal characters.</source>
          <target state="translated">와일드 카드 문자는 리터럴 문자입니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>For example, the  string "*t" searches for all names in  ending with the letter "t".</source>
          <target state="translated">예를 들어 문자열 "* t"에서 문자 "t"로 끝나는 모든 이름 검색 합니다.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>".</source>
          <target state="translated">".</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>The <ph id="ph1">`searchPattern`</ph> string "s<ph id="ph2">\*</ph>" searches for all names in <ph id="ph3">`path`</ph> beginning with the letter "s".</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 문자열 "s<ph id="ph2">\*</ph>"에서 모든 이름 검색 <ph id="ph3">`path`</ph> "s"로 시작 합니다.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>The <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph> methods differ as follows:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph> 방법은 다음과 같이 달라 집니다.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph>, you can start enumerating the collection of <ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph> objects before the whole collection is returned.</source>
          <target state="translated">사용 하는 경우 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph>의 컬렉션을 열거 하기 <ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph> 전체 컬렉션을 반환 하기 전에 개체입니다.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph>, you must wait for the whole array of <ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph> objects to be returned before you can access the array.</source>
          <target state="translated">사용 하는 경우 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph>를의 전체 배열에 대해 기다려야 <ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph> 개체 반환 되기 전에 배열에 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>Therefore, when you are working with many files and directories, <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph> can be more efficient.</source>
          <target state="translated">따라서 많은 파일 및 디렉터리를 사용 하 여 작업할 때 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph> 더 효과적일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>This method pre-populates the values of the following <ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph> properties:</source>
          <target state="translated">이 메서드는 다음 값을 미리 채웁니다 <ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph> 속성:</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>The returned collection is not cached; each call to the <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> method on the collection will start a new enumeration.</source>
          <target state="translated">반환된 된 컬렉션은 캐시 되지 않습니다. 호출할 때마다는 <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> 메서드는 컬렉션에는 새 열거형을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>The following example shows how to enumerate files in a directory by using different search options.</source>
          <target state="translated">다음 예제에서는 다른 검색 옵션을 사용 하 여 디렉터리의 파일을 열거 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</source>
          <target state="translated">파일 이름은 log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, SubFile.txt 라는 파일에 있는 하위 디렉터리에 있는 디렉터리를 가정 합니다.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="searchOption" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.SearchOption" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchOption" /&gt;</ph>은 유효한 <ph id="ph2">&lt;see cref="T:System.IO.SearchOption" /&gt;</ph> 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>The path encapsulated in the <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> object is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> 개체에 캡슐화된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="T:System.IO.DirectoryInfo">
          <source>Returns an enumerable collection of file system information in the current directory.</source>
          <target state="translated">현재 디렉터리에 있는 파일 시스템 정보의 열거 가능 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos">
          <source>Returns an enumerable collection of file system information in the current directory.</source>
          <target state="translated">현재 디렉터리에 있는 파일 시스템 정보의 열거 가능 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos">
          <source>An enumerable collection of file system information in the current directory.</source>
          <target state="translated">현재 디렉터리에 있는 파일 시스템 정보의 열거 가능 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos">
          <source>The <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A&gt;</ph> methods differ as follows:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A&gt;</ph> 방법은 다음과 같이 달라 집니다.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A&gt;</ph>, you can start enumerating the collection of <ph id="ph2">&lt;xref:System.IO.FileSystemInfo&gt;</ph> objects before the whole collection is returned.</source>
          <target state="translated">사용 하는 경우 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A&gt;</ph>의 컬렉션을 열거 하기 <ph id="ph2">&lt;xref:System.IO.FileSystemInfo&gt;</ph> 전체 컬렉션을 반환 하기 전에 개체입니다.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A&gt;</ph>, you must wait for the whole array of <ph id="ph2">&lt;xref:System.IO.FileSystemInfo&gt;</ph> objects to be returned before you can access the array.</source>
          <target state="translated">사용 하는 경우 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A&gt;</ph>를의 전체 배열에 대해 기다려야 <ph id="ph2">&lt;xref:System.IO.FileSystemInfo&gt;</ph> 개체 반환 되기 전에 배열에 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos">
          <source>Therefore, when you are working with many files and directories, <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A&gt;</ph> can be more efficient.</source>
          <target state="translated">따라서 많은 파일 및 디렉터리를 사용 하 여 작업할 때 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A&gt;</ph> 더 효과적일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos">
          <source>This method pre-populates the values of the following <ph id="ph1">&lt;xref:System.IO.FileSystemInfo&gt;</ph> properties:</source>
          <target state="translated">이 메서드는 다음 값을 미리 채웁니다 <ph id="ph1">&lt;xref:System.IO.FileSystemInfo&gt;</ph> 속성:</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos">
          <source>The returned collection is not cached; each call to the <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> method on the collection will start a new enumeration.</source>
          <target state="translated">반환된 된 컬렉션은 캐시 되지 않습니다. 호출할 때마다는 <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> 메서드는 컬렉션에는 새 열거형을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos">
          <source>The path encapsulated in the <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> object is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> 개체에 캡슐화된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>The search string to match against the names of directories.</source>
          <target state="translated">디렉터리 이름과 일치하는지 비교할 검색 문자열입니다.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>This parameter can contain a combination of valid literal path and wildcard (* and ?) characters, but it doesn't support regular expressions.</source>
          <target state="translated">이 매개 변수는 유효한 리터럴 경로와 와일드카드(* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>Returns an enumerable collection of file system information that matches a specified search pattern.</source>
          <target state="translated">지정된 검색 패턴과 일치하는 파일 시스템 정보의 열거 가능 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>An enumerable collection of file system information objects that matches <ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph>과 일치하는 파일 시스템 정보의 열거 가능 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source><ph id="ph1">`searchPattern`</ph> can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 리터럴 및 와일드 카드 문자 조합일 수 있지만 정규식을 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>The following wildcard specifiers are permitted in <ph id="ph1">`searchPattern`</ph>.</source>
          <target state="translated">에 다음 와일드 카드 지정자를 사용할 수 <ph id="ph1">`searchPattern`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>Wildcard specifier</source>
          <target state="translated">와일드 카드 지정자</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>Matches</source>
          <target state="translated">일치 항목</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>* (asterisk)</source>
          <target state="translated">*(별표)</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>Zero or more characters in that position.</source>
          <target state="translated">해당 위치에 0 개 이상의 문자가 있습니다.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>?</source>
          <target state="translated">?</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>(question mark)</source>
          <target state="translated">(물음표)</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>Zero or one character in that position.</source>
          <target state="translated">해당 위치에 0 개 또는 1 문자입니다.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>Characters other than the wildcard are literal characters.</source>
          <target state="translated">와일드 카드 문자는 리터럴 문자입니다.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>For example, the  string "*t" searches for all names in  ending with the letter "t".</source>
          <target state="translated">예를 들어 문자열 "* t"에서 문자 "t"로 끝나는 모든 이름 검색 합니다.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>".</source>
          <target state="translated">".</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>The <ph id="ph1">`searchPattern`</ph> string "s<ph id="ph2">\*</ph>" searches for all names in <ph id="ph3">`path`</ph> beginning with the letter "s".</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 문자열 "s<ph id="ph2">\*</ph>"에서 모든 이름 검색 <ph id="ph3">`path`</ph> "s"로 시작 합니다.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A&gt;</ph> methods differ as follows:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A&gt;</ph> 방법은 다음과 같이 달라 집니다.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A&gt;</ph>, you can start enumerating the collection of <ph id="ph2">&lt;xref:System.IO.FileSystemInfo&gt;</ph> objects before the whole collection is returned.</source>
          <target state="translated">사용 하는 경우 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A&gt;</ph>의 컬렉션을 열거 하기 <ph id="ph2">&lt;xref:System.IO.FileSystemInfo&gt;</ph> 전체 컬렉션을 반환 하기 전에 개체입니다.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A&gt;</ph>, you must wait for the whole array of <ph id="ph2">&lt;xref:System.IO.FileSystemInfo&gt;</ph> objects to be returned before you can access the array.</source>
          <target state="translated">사용 하는 경우 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A&gt;</ph>를의 전체 배열에 대해 기다려야 <ph id="ph2">&lt;xref:System.IO.FileSystemInfo&gt;</ph> 개체 반환 되기 전에 배열에 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>Therefore, when you are working with many files and directories, <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A&gt;</ph> can be more efficient.</source>
          <target state="translated">따라서 많은 파일 및 디렉터리를 사용 하 여 작업할 때 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A&gt;</ph> 더 효과적일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>This method pre-populates the values of the following <ph id="ph1">&lt;xref:System.IO.FileSystemInfo&gt;</ph> properties:</source>
          <target state="translated">이 메서드는 다음 값을 미리 채웁니다 <ph id="ph1">&lt;xref:System.IO.FileSystemInfo&gt;</ph> 속성:</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>The returned collection is not cached; each call to the <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> method on the collection will start a new enumeration.</source>
          <target state="translated">반환된 된 컬렉션은 캐시 되지 않습니다. 호출할 때마다는 <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> 메서드는 컬렉션에는 새 열거형을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>The path encapsulated in the <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> object is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> 개체에 캡슐화된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>The search string to match against the names of directories.</source>
          <target state="translated">디렉터리 이름과 일치하는지 비교할 검색 문자열입니다.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>This parameter can contain a combination of valid literal path and wildcard (* and ?) characters, but it doesn't support regular expressions.</source>
          <target state="translated">이 매개 변수는 유효한 리터럴 경로와 와일드카드(* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</source>
          <target state="translated">검색 작업에 현재 디렉터리만 포함할지 아니면 모든 하위 디렉터리를 포함할지를 지정하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.IO.SearchOption.TopDirectoryOnly" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.IO.SearchOption.TopDirectoryOnly" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>Returns an enumerable collection of file system information that matches a specified search pattern and search subdirectory option.</source>
          <target state="translated">지정된 검색 패턴 및 하위 디렉터리 검색 옵션과 일치하는 파일 시스템 정보의 열거 가능 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>An enumerable collection of file system information objects that matches <ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> and <ph id="ph2">&lt;paramref name="searchOption" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> 및 <ph id="ph2">&lt;paramref name="searchOption" /&gt;</ph>과 일치하는 파일 시스템 정보의 열거 가능 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source><ph id="ph1">`searchPattern`</ph> can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 리터럴 및 와일드 카드 문자 조합일 수 있지만 정규식을 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>The following wildcard specifiers are permitted in <ph id="ph1">`searchPattern`</ph>.</source>
          <target state="translated">에 다음 와일드 카드 지정자를 사용할 수 <ph id="ph1">`searchPattern`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>Wildcard specifier</source>
          <target state="translated">와일드 카드 지정자</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>Matches</source>
          <target state="translated">일치 항목</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>* (asterisk)</source>
          <target state="translated">*(별표)</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>Zero or more characters in that position.</source>
          <target state="translated">해당 위치에 0 개 이상의 문자가 있습니다.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>?</source>
          <target state="translated">?</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>(question mark)</source>
          <target state="translated">(물음표)</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>Zero or one character in that position.</source>
          <target state="translated">해당 위치에 0 개 또는 1 문자입니다.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>Characters other than the wildcard are literal characters.</source>
          <target state="translated">와일드 카드 문자는 리터럴 문자입니다.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>For example, the  string "*t" searches for all names in  ending with the letter "t".</source>
          <target state="translated">예를 들어 문자열 "* t"에서 문자 "t"로 끝나는 모든 이름 검색 합니다.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>".</source>
          <target state="translated">".</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>The <ph id="ph1">`searchPattern`</ph> string "s<ph id="ph2">\*</ph>" searches for all names in <ph id="ph3">`path`</ph> beginning with the letter "s".</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 문자열 "s<ph id="ph2">\*</ph>"에서 모든 이름 검색 <ph id="ph3">`path`</ph> "s"로 시작 합니다.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>The <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A&gt;</ph> methods differ as follows:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A&gt;</ph> 방법은 다음과 같이 달라 집니다.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A&gt;</ph>, you can start enumerating the collection of <ph id="ph2">&lt;xref:System.IO.FileSystemInfo&gt;</ph> objects before the whole collection is returned.</source>
          <target state="translated">사용 하는 경우 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A&gt;</ph>의 컬렉션을 열거 하기 <ph id="ph2">&lt;xref:System.IO.FileSystemInfo&gt;</ph> 전체 컬렉션을 반환 하기 전에 개체입니다.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A&gt;</ph>, you must wait for the whole array of <ph id="ph2">&lt;xref:System.IO.FileSystemInfo&gt;</ph> objects to be returned before you can access the array.</source>
          <target state="translated">사용 하는 경우 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A&gt;</ph>를의 전체 배열에 대해 기다려야 <ph id="ph2">&lt;xref:System.IO.FileSystemInfo&gt;</ph> 개체 반환 되기 전에 배열에 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>Therefore, when you are working with many files and directories, <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A&gt;</ph> can be more efficient.</source>
          <target state="translated">따라서 많은 파일 및 디렉터리를 사용 하 여 작업할 때 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A&gt;</ph> 더 효과적일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>This method pre-populates the values of the following <ph id="ph1">&lt;xref:System.IO.FileSystemInfo&gt;</ph> properties:</source>
          <target state="translated">이 메서드는 다음 값을 미리 채웁니다 <ph id="ph1">&lt;xref:System.IO.FileSystemInfo&gt;</ph> 속성:</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>The returned collection is not cached; each call to the <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> method on the collection will start a new enumeration.</source>
          <target state="translated">반환된 된 컬렉션은 캐시 되지 않습니다. 호출할 때마다는 <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> 메서드는 컬렉션에는 새 열거형을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="searchOption" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.SearchOption" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchOption" /&gt;</ph>은 유효한 <ph id="ph2">&lt;see cref="T:System.IO.SearchOption" /&gt;</ph> 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>The path encapsulated in the <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> object is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> 개체에 캡슐화된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="P:System.IO.DirectoryInfo.Exists">
          <source>Gets a value indicating whether the directory exists.</source>
          <target state="translated">디렉터리가 있는지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.DirectoryInfo.Exists">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the directory exists; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">디렉터리가 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.DirectoryInfo.Exists">
          <source>The <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.Exists%2A&gt;</ph> property returns <ph id="ph2">`false`</ph> if any error occurs while trying to determine if the specified file exists.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.DirectoryInfo.Exists%2A&gt;</ph> 속성에서 반환 <ph id="ph2">`false`</ph> 지정한 파일이 있는지 확인 하는 동안 오류가 발생 하는 경우.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.DirectoryInfo.Exists">
          <source>This can occur in situations that raise exceptions such as passing a file name with invalid characters or too many characters, a failing or missing disk, or if the caller does not have permission to read the file.</source>
          <target state="translated">이 파일 이름에 잘못 된 문자 또는 실패 나 누락 된 디스크에 문자가 너무 많습니다. 전달할 때 예외를 발생 시키는 상황에서 발생할 수 있습니다 또는 호출자에 게 파일을 읽을 수 있는 사용 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.DirectoryInfo.Exists">
          <source>The following example demonstrates a use of the <ph id="ph1">`Exists`</ph> property in the context of copying a source directory to a target directory.</source>
          <target state="translated">다음 예제에서는 사용 하는 <ph id="ph1">`Exists`</ph> 대상 디렉터리에 복사 하는 원본 디렉터리에서에서 속성입니다.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="P:System.IO.DirectoryInfo.FullName">
          <source>Gets the full path of the directory.</source>
          <target state="translated">디렉터리의 전체 경로를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.DirectoryInfo.FullName">
          <source>A string containing the full path.</source>
          <target state="translated">전체 경로를 포함하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="T:System.IO.DirectoryInfo">
          <source>Gets the access control list (ACL) entries for the current directory.</source>
          <target state="translated">현재 디렉터리의 ACL(액세스 제어 목록) 항목을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.DirectoryInfo">
          <source>Use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetAccessControl%2A&gt;</ph> methods to retrieve the access control list (ACL) entries for the current file.</source>
          <target state="translated">사용 하 여 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetAccessControl%2A&gt;</ph> 액세스를 검색 하는 메서드 현재 파일에 대 한 목록 (ACL) 항목을 제어 합니다.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.DirectoryInfo">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Add or Remove Access Control List Entries<ept id="p1">](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>방법: Access Control 목록 항목 추가 또는 제거<ept id="p1">](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.DirectorySecurity" /&gt;</ph> object that encapsulates the access control list (ACL) entries for the directory described by the current <ph id="ph2">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> object.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.DirectorySecurity" /&gt;</ph> 개체에서 설명하는 디렉터리의 ACL(액세스 제어 목록) 항목을 캡슐화하는 <ph id="ph2">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.DirectorySecurity" /&gt;</ph> object that encapsulates the access control rules for the directory.</source>
          <target state="translated">디렉터리의 액세스 제어 규칙을 캡슐화하는 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.DirectorySecurity" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetAccessControl">
          <source>Calling this method overload is equivalent to calling the <ph id="ph1">&lt;xref:System.IO.Directory.GetAccessControl%2A&gt;</ph> method overload and specifying the access control sections <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType&gt;</ph> &amp;#124; <ph id="ph3">&lt;xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType&gt;</ph> &amp;#124; <ph id="ph4">&lt;xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType&gt;</ph> (<ph id="ph5">&lt;xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType&gt;</ph><ph id="ph6">`Or`</ph><ph id="ph7">&lt;xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType&gt;</ph><ph id="ph8">`Or`</ph><ph id="ph9">&lt;xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType&gt;</ph> in Visual Basic).</source>
          <target state="translated">이 메서드 오버 로드를 호출 하는 것은 <ph id="ph1">&lt;xref:System.IO.Directory.GetAccessControl%2A&gt;</ph> 메서드 오버 로드 하 고 액세스를 지정 하는 섹션 제어 <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType&gt;</ph> &amp;#124; <ph id="ph3">&lt;xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType&gt;</ph> &amp;#124; <ph id="ph4">&lt;xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType&gt;</ph> (<ph id="ph5">&lt;xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType&gt;</ph> <ph id="ph6">`Or`</ph> <ph id="ph7">&lt;xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType&gt;</ph> <ph id="ph8">`Or`</ph> <ph id="ph9">&lt;xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType&gt;</ph> Visual basic에서).</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetAccessControl">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetAccessControl%2A&gt;</ph> method to retrieve the access control list (ACL) entries for the current file.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetAccessControl%2A&gt;</ph> 현재 파일에 대 한 액세스 제어 목록 (ACL) 항목을 검색 하는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetAccessControl">
          <source>An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</source>
          <target state="translated">ACL에는 개인 및/또는 그룹 나 권한이 없는, 특정된 파일이 나 디렉터리에서 특정 작업을 설명 합니다.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetAccessControl">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Add or Remove Access Control List Entries<ept id="p1">](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>방법: Access Control 목록 항목 추가 또는 제거<ept id="p1">](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetAccessControl">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetAccessControl%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.DirectoryInfo.SetAccessControl%2A&gt;</ph> methods to add and then remove an access control list (ACL) entry from a directory.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetAccessControl%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.IO.DirectoryInfo.SetAccessControl%2A&gt;</ph> 디렉터리에서 항목 목록 (ACL)을 제어 하는 메서드를 추가 하 고 액세스를 제거 하십시오.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl">
          <source>The directory could not be found or modified.</source>
          <target state="translated">디렉터리를 찾거나 수정할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl">
          <source>The directory is read-only.</source>
          <target state="translated">디렉터리가 읽기 전용인 경우</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl">
          <source>This operation is not supported on the current platform.</source>
          <target state="translated">현재 플랫폼이 해당 작업을 지원하지 않는 경우</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl">
          <source>An I/O error occurred while opening the directory.</source>
          <target state="translated">디렉터리를 여는 동안 I/O 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl">
          <source>The current operating system is not Microsoft Windows 2000 or later.</source>
          <target state="translated">현재 운영 체제가 Microsoft Windows 2000 이상이 아닌 경우</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetAccessControl">
          <source>for permission to enumerate an access control list (ACL) for a directory.</source>
          <target state="translated">디렉터리에 대 한 액세스 제어 목록 (ACL)를 열거할 수 있는 권한입니다.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetAccessControl">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">보안 동작: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetAccessControl">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.AccessControl.AccessControlActions.View" /&gt;</ph></source>
          <target state="translated">연관 된 열거형: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.AccessControl.AccessControlActions.View" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlSections" /&gt;</ph> values that specifies the type of access control list (ACL) information to receive.</source>
          <target state="translated">가져올 ACL(액세스 제어 목록) 정보의 형식을 지정하는 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlSections" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.DirectorySecurity" /&gt;</ph> object that encapsulates the specified type of access control list (ACL) entries for the directory described by the current <ph id="ph2">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> object.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.DirectorySecurity" /&gt;</ph> 개체에서 설명하는 디렉터리의 지정된 ACL(액세스 제어 목록) 항목 형식을 캡슐화하는 <ph id="ph2">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.DirectorySecurity" /&gt;</ph> object that encapsulates the access control rules for the file described by the <ph id="ph2">&lt;paramref name="path" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.AccessControl.DirectorySecurity" /&gt;</ph> 매개 변수에 설명된 파일의 액세스 제어 규칙을 캡슐화하는 <ph id="ph2">&lt;paramref name="path" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source>Exceptions</source>
          <target state="translated">예외</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Exception type</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 예외 형식</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Condition</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 조건</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see cref="T:System.SystemException" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The directory could not be found or modified.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see cref="T:System.SystemException" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 디렉터리를 찾거나 수정할 수 없는 경습니다.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see cref="T:System.UnauthorizedAccessException" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The current process does not have access to open the directory.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see cref="T:System.UnauthorizedAccessException" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 현재 프로세스에 디렉터리를 열 수 있는 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see cref="T:System.IO.IOException" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> An I/O error occurred while opening the directory.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see cref="T:System.IO.IOException" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 디렉터리를 여는 동안 I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see cref="T:System.PlatformNotSupportedException" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The current operating system is not Microsoft Windows 2000 or later.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see cref="T:System.PlatformNotSupportedException" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 현재 운영 체제가 Microsoft Windows 2000 이상이 아닙니다.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see cref="T:System.UnauthorizedAccessException" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The directory is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see cref="T:System.UnauthorizedAccessException" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 디렉터리가 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source>This operation is not supported on the current platform.</source>
          <target state="translated">현재 플랫폼이 해당 작업을 지원하지 않는 경우</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetAccessControl%2A&gt;</ph> method to retrieve the access control list (ACL) entries for the current file.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetAccessControl%2A&gt;</ph> 현재 파일에 대 한 액세스 제어 목록 (ACL) 항목을 검색 하는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source>An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</source>
          <target state="translated">ACL에는 개인 및/또는 그룹 나 권한이 없는, 특정된 파일이 나 디렉터리에서 특정 작업을 설명 합니다.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Add or Remove Access Control List Entries<ept id="p1">](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>방법: Access Control 목록 항목 추가 또는 제거<ept id="p1">](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source>for permission to enumerate an access control list (ACL) for a directory.</source>
          <target state="translated">디렉터리에 대 한 액세스 제어 목록 (ACL)를 열거할 수 있는 권한입니다.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">보안 동작: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.AccessControl.AccessControlActions.View" /&gt;</ph></source>
          <target state="translated">연관 된 열거형: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.AccessControl.AccessControlActions.View" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="T:System.IO.DirectoryInfo">
          <source>Returns the subdirectories of the current directory.</source>
          <target state="translated">현재 디렉터리의 하위 디렉터리를 반환합니다.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories">
          <source>Returns the subdirectories of the current directory.</source>
          <target state="translated">현재 디렉터리의 하위 디렉터리를 반환합니다.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> 개체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories">
          <source>If there are no subdirectories, this method returns an empty array.</source>
          <target state="translated">하위 디렉터리가 없으면이 메서드는 빈 배열을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories">
          <source>This method is not recursive.</source>
          <target state="translated">이 메서드는 재귀 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories">
          <source>This method pre-populates the values of the following <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph> properties:</source>
          <target state="translated">이 메서드는 다음 값을 미리 채웁니다 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph> 속성:</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories">
          <source>The following example retrieves all the directories in the root directory and displays the directory names.</source>
          <target state="translated">다음 예제에서는 루트 디렉터리에 있는 모든 디렉터리를 검색 하 고 디렉터리 이름이 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories">
          <source>The path encapsulated in the <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> object is invalid, such as being on an unmapped drive.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> 개체에 캡슐화된 경로가 유효하지 않은 경우(예: 매핑되지 않은 드라이브의 경로에 해당하는 경우)</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories">
          <source>for reading directories.</source>
          <target state="translated">에 디렉터리를 읽고 있습니다.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>The search string to match against the names of directories.</source>
          <target state="translated">디렉터리 이름과 일치하는지 비교할 검색 문자열입니다.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>This parameter can contain a combination of valid literal path and wildcard (* and ?) characters, but it doesn't support regular expressions.</source>
          <target state="translated">이 매개 변수는 유효한 리터럴 경로와 와일드카드(* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>Returns an array of directories in the current <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> matching the given search criteria.</source>
          <target state="translated">주어진 검색 조건에 일치하는 현재 <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph>에 있는 디렉터리의 배열을 반환합니다.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>An array of type <ph id="ph1">&lt;see langword="DirectoryInfo" /&gt;</ph> matching <ph id="ph2">&lt;paramref name="searchPattern" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="DirectoryInfo" /&gt;</ph>에 일치하는 <ph id="ph2">&lt;paramref name="searchPattern" /&gt;</ph> 형식의 배열입니다.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source><ph id="ph1">`searchPattern`</ph> can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 리터럴 및 와일드 카드 문자 조합일 수 있지만 정규식을 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>The following wildcard specifiers are permitted in <ph id="ph1">`searchPattern`</ph>.</source>
          <target state="translated">에 다음 와일드 카드 지정자를 사용할 수 <ph id="ph1">`searchPattern`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>Wildcard specifier</source>
          <target state="translated">와일드 카드 지정자</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>Matches</source>
          <target state="translated">일치 항목</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>* (asterisk)</source>
          <target state="translated">*(별표)</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>Zero or more characters in that position.</source>
          <target state="translated">해당 위치에 0 개 이상의 문자가 있습니다.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>?</source>
          <target state="translated">?</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>(question mark)</source>
          <target state="translated">(물음표)</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>Zero or one character in that position.</source>
          <target state="translated">해당 위치에 0 개 또는 1 문자입니다.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>Characters other than the wildcard are literal characters.</source>
          <target state="translated">와일드 카드 문자는 리터럴 문자입니다.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>For example, the  string "*t" searches for all names in  ending with the letter "t".</source>
          <target state="translated">예를 들어 문자열 "* t"에서 문자 "t"로 끝나는 모든 이름 검색 합니다.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>".</source>
          <target state="translated">".</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>The <ph id="ph1">`searchPattern`</ph> string "s<ph id="ph2">\*</ph>" searches for all names in <ph id="ph3">`path`</ph> beginning with the letter "s".</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 문자열 "s<ph id="ph2">\*</ph>"에서 모든 이름 검색 <ph id="ph3">`path`</ph> "s"로 시작 합니다.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>This method pre-populates the values of the following <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph> properties:</source>
          <target state="translated">이 메서드는 다음 값을 미리 채웁니다 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph> 속성:</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>The following example counts the directories in a path that contain the specified letter.</source>
          <target state="translated">다음 예제에서는 지정된 된 문자를 포함 하는 경로에서 디렉터리를 계산 합니다.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> contains one or more invalid characters defined by the <ph id="ph2">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph>에는 <ph id="ph2">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> 메서드로 정의된 잘못된 문자가 하나 이상 포함되어 있습니다.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>The path encapsulated in the <ph id="ph1">&lt;see langword="DirectoryInfo" /&gt;</ph> object is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated"><ph id="ph1">&lt;see langword="DirectoryInfo" /&gt;</ph> 개체에 캡슐화된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>for reading from files and directories and for access to the path.</source>
          <target state="translated">읽을 파일 및 디렉터리 및 경로에 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></source>
          <target state="translated">연관 된 열거형: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>The search string to match against the names of directories.</source>
          <target state="translated">디렉터리 이름과 일치하는지 비교할 검색 문자열입니다.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>This parameter can contain a combination of valid literal path and wildcard (* and ?) characters, but it doesn't support regular expressions.</source>
          <target state="translated">이 매개 변수는 유효한 리터럴 경로와 와일드카드(* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</source>
          <target state="translated">검색 작업에 현재 디렉터리만 포함할지 아니면 모든 하위 디렉터리를 포함할지를 지정하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>Returns an array of directories in the current <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> matching the given search criteria and using a value to determine whether to search subdirectories.</source>
          <target state="translated">하위 디렉터리를 검색할지를 나타내는 값을 사용하여 현재 <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph>에서 지정된 검색 조건과 일치하는 디렉터리의 배열을 반환합니다.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>An array of type <ph id="ph1">&lt;see langword="DirectoryInfo" /&gt;</ph> matching <ph id="ph2">&lt;paramref name="searchPattern" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="DirectoryInfo" /&gt;</ph>에 일치하는 <ph id="ph2">&lt;paramref name="searchPattern" /&gt;</ph> 형식의 배열입니다.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source><ph id="ph1">`searchPattern`</ph> can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 리터럴 및 와일드 카드 문자 조합일 수 있지만 정규식을 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>The following wildcard specifiers are permitted in <ph id="ph1">`searchPattern`</ph>.</source>
          <target state="translated">에 다음 와일드 카드 지정자를 사용할 수 <ph id="ph1">`searchPattern`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>Wildcard specifier</source>
          <target state="translated">와일드 카드 지정자</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>Matches</source>
          <target state="translated">일치 항목</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>* (asterisk)</source>
          <target state="translated">*(별표)</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>Zero or more characters in that position.</source>
          <target state="translated">해당 위치에 0 개 이상의 문자가 있습니다.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>?</source>
          <target state="translated">?</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>(question mark)</source>
          <target state="translated">(물음표)</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>Zero or one character in that position.</source>
          <target state="translated">해당 위치에 0 개 또는 1 문자입니다.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>Characters other than the wildcard are literal characters.</source>
          <target state="translated">와일드 카드 문자는 리터럴 문자입니다.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>For example, the  string "*t" searches for all names in  ending with the letter "t".</source>
          <target state="translated">예를 들어 문자열 "* t"에서 문자 "t"로 끝나는 모든 이름 검색 합니다.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>".</source>
          <target state="translated">".</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>The <ph id="ph1">`searchPattern`</ph> string "s<ph id="ph2">\*</ph>" searches for all names in <ph id="ph3">`path`</ph> beginning with the letter "s".</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 문자열 "s<ph id="ph2">\*</ph>"에서 모든 이름 검색 <ph id="ph3">`path`</ph> "s"로 시작 합니다.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>If there are no subdirectories, or no subdirectories match the <ph id="ph1">`searchPattern`</ph> parameter, this method returns an empty array.</source>
          <target state="translated">하위 디렉터리가 없는지 또는 하위 디렉터리가 없는지와 일치 하는 경우는 <ph id="ph1">`searchPattern`</ph> 매개 변수를이 메서드는 빈 배열을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>This method pre-populates the values of the following <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph> properties:</source>
          <target state="translated">이 메서드는 다음 값을 미리 채웁니다 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph> 속성:</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>The following example lists all of the directories and files that begin with the letter "c" in "c:<ph id="ph1">\\</ph>".</source>
          <target state="translated">다음 예제에는 문자 "c"로 시작 하는 파일과 디렉터리의 모두 나열 합니다 "c:<ph id="ph1">\\</ph>"입니다.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> contains one or more invalid characters defined by the <ph id="ph2">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph>에는 <ph id="ph2">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> 메서드로 정의된 잘못된 문자가 하나 이상 포함되어 있습니다.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="searchOption" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.SearchOption" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchOption" /&gt;</ph>은 유효한 <ph id="ph2">&lt;see cref="T:System.IO.SearchOption" /&gt;</ph> 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>The path encapsulated in the <ph id="ph1">&lt;see langword="DirectoryInfo" /&gt;</ph> object is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated"><ph id="ph1">&lt;see langword="DirectoryInfo" /&gt;</ph> 개체에 캡슐화된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>for reading from files and directories and for access to the path.</source>
          <target state="translated">읽을 파일 및 디렉터리 및 경로에 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></source>
          <target state="translated">연관 된 열거형: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" uid="T:System.IO.DirectoryInfo">
          <source>Returns a file list from the current directory.</source>
          <target state="translated">현재 디렉터리에서 파일 목록을 반환합니다.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFiles">
          <source>Returns a file list from the current directory.</source>
          <target state="translated">현재 디렉터리에서 파일 목록을 반환합니다.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFiles">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.IO.FileInfo" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.FileInfo" /&gt;</ph> 형식의 배열입니다.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles">
          <source>The <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph> methods differ as follows:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph> 방법은 다음과 같이 달라 집니다.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph>, you can start enumerating the collection of <ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph> objects before the whole collection is returned.</source>
          <target state="translated">사용 하는 경우 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph>의 컬렉션을 열거 하기 <ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph> 전체 컬렉션을 반환 하기 전에 개체입니다.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph>, you must wait for the whole array of <ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph> objects to be returned before you can access the array.</source>
          <target state="translated">사용 하는 경우 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph>를의 전체 배열에 대해 기다려야 <ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph> 개체 반환 되기 전에 배열에 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles">
          <source>Therefore, when you are working with many files and directories, <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph> can be more efficient.</source>
          <target state="translated">따라서 많은 파일 및 디렉터리를 사용 하 여 작업할 때 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph> 더 효과적일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles">
          <source>If there are no files in the <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph>, this method returns an empty array.</source>
          <target state="translated">에 파일이 없는 경우는 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph>,이 메서드는 빈 배열을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles">
          <source>The order of the returned file names is not guaranteed; use the <ph id="ph1">&lt;xref:System.Array.Sort%2A&gt;</ph> method if a specific sort order is required.</source>
          <target state="translated">반환 되는 파일 이름의 순서를 보장할 수 없습니다. 사용 하 여는 <ph id="ph1">&lt;xref:System.Array.Sort%2A&gt;</ph> 메서드 특정 정렬 순서를 적용 해야 하는 경우.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles">
          <source>This method pre-populates the values of the following <ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph> properties:</source>
          <target state="translated">이 메서드는 다음 값을 미리 채웁니다 <ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph> 속성:</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles">
          <source>The following example shows how to get a list of files from a directory by using different search options.</source>
          <target state="translated">다음 예제에서는 다른 검색 옵션을 사용 하 여 디렉터리에서 파일의 목록을 가져오는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles">
          <source>The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</source>
          <target state="translated">파일 이름은 log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, SubFile.txt 라는 파일에 있는 하위 디렉터리에 있는 디렉터리를 가정 합니다.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFiles">
          <source>The path is invalid, such as being on an unmapped drive.</source>
          <target state="translated">경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles">
          <source>for reading directories.</source>
          <target state="translated">에 디렉터리를 읽고 있습니다.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>The search string to match against the names of files.</source>
          <target state="translated">파일 이름과 일치하는지 비교할 검색 문자열입니다.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>This parameter can contain a combination of valid literal path and wildcard (* and ?) characters, but it doesn't support regular expressions.</source>
          <target state="translated">이 매개 변수는 유효한 리터럴 경로와 와일드카드(* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>Returns a file list from the current directory matching the given search pattern.</source>
          <target state="translated">현재 디렉터리에서 지정된 검색 패턴과 일치하는 파일 목록을 반환합니다.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.IO.FileInfo" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.FileInfo" /&gt;</ph> 형식의 배열입니다.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source><ph id="ph1">`searchPattern`</ph> can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 리터럴 및 와일드 카드 문자 조합일 수 있지만 정규식을 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>The following wildcard specifiers are permitted in <ph id="ph1">`searchPattern`</ph>.</source>
          <target state="translated">에 다음 와일드 카드 지정자를 사용할 수 <ph id="ph1">`searchPattern`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>Wildcard specifier</source>
          <target state="translated">와일드 카드 지정자</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>Matches</source>
          <target state="translated">일치 항목</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>* (asterisk)</source>
          <target state="translated">*(별표)</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>Zero or more characters in that position.</source>
          <target state="translated">해당 위치에 0 개 이상의 문자가 있습니다.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>?</source>
          <target state="translated">?</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>(question mark)</source>
          <target state="translated">(물음표)</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>Zero or one character in that position.</source>
          <target state="translated">해당 위치에 0 개 또는 1 문자입니다.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>Characters other than the wildcard are literal characters.</source>
          <target state="translated">와일드 카드 문자는 리터럴 문자입니다.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>For example, the  string "*t" searches for all names in  ending with the letter "t".</source>
          <target state="translated">예를 들어 문자열 "* t"에서 문자 "t"로 끝나는 모든 이름 검색 합니다.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>The <ph id="ph1">`searchPattern`</ph> string "s<ph id="ph2">\*</ph>" searches for all names in <ph id="ph3">`path`</ph> beginning with the letter "s".</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 문자열 "s<ph id="ph2">\*</ph>"에서 모든 이름 검색 <ph id="ph3">`path`</ph> "s"로 시작 합니다.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph> methods differ as follows:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph> 방법은 다음과 같이 달라 집니다.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph>, you can start enumerating the collection of <ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph> objects before the whole collection is returned.</source>
          <target state="translated">사용 하는 경우 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph>의 컬렉션을 열거 하기 <ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph> 전체 컬렉션을 반환 하기 전에 개체입니다.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph>, you must wait for the whole array of <ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph> objects to be returned before you can access the array.</source>
          <target state="translated">사용 하는 경우 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph>를의 전체 배열에 대해 기다려야 <ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph> 개체 반환 되기 전에 배열에 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>Therefore, when you are working with many files and directories, <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph> can be more efficient.</source>
          <target state="translated">따라서 많은 파일 및 디렉터리를 사용 하 여 작업할 때 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph> 더 효과적일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>If there are no files in the <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph>, this method returns an empty array.</source>
          <target state="translated">에 파일이 없는 경우는 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph>,이 메서드는 빈 배열을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>The following wildcard specifiers are permitted in the <ph id="ph1">`searchPattern`</ph> parameter.</source>
          <target state="translated">에 다음 와일드 카드 지정자를 사용할 수는 <ph id="ph1">`searchPattern`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>Wildcard character</source>
          <target state="translated">와일드 카드 문자</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>Zero or more characters.</source>
          <target state="translated">0 개 이상의 문자입니다.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>?</source>
          <target state="translated">?</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>Exactly zero or one character.</source>
          <target state="translated">정확히 0 개 또는 1 문자입니다.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>The order of the returned file names is not guaranteed; use the <ph id="ph1">&lt;xref:System.Array.Sort%2A&gt;</ph> method if a specific sort order is required.</source>
          <target state="translated">반환 되는 파일 이름의 순서를 보장할 수 없습니다. 사용 하 여는 <ph id="ph1">&lt;xref:System.Array.Sort%2A&gt;</ph> 메서드 특정 정렬 순서를 적용 해야 하는 경우.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>Wildcards are permitted.</source>
          <target state="translated">와일드 카드가 지원 됩니다.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>For example, the <ph id="ph1">`searchPattern`</ph> string "*.txt" searches for all file names having an extension of "txt".</source>
          <target state="translated">예를 들어는 <ph id="ph1">`searchPattern`</ph> 모든 파일은 확장명이 "txt"의 이름을 "*.txt" 검색 문자열입니다.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>The <ph id="ph1">`searchPattern`</ph> string "s<ph id="ph2">\*</ph>" searches for all file names beginning with the letter "s".</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 문자열 "s<ph id="ph2">\*</ph>" "s"로 시작 하는 이름은 모든 파일을 검색 합니다.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>If there are no files, or no files that match the <ph id="ph1">`searchPattern`</ph> string in the <ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph>, this method returns an empty array.</source>
          <target state="translated">파일이 없습니다 또는 no 있을 경우 일치 하는 파일이 <ph id="ph1">`searchPattern`</ph> 문자열에 <ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph>,이 메서드는 빈 배열을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>When using the asterisk wildcard character in a <ph id="ph1">`searchPattern`</ph> (for example, "*.txt"), the matching behavior varies depending on the length of the specified file extension.</source>
          <target state="translated">에 별표 와일드 카드 문자를 사용 하는 경우는 <ph id="ph1">`searchPattern`</ph> (, 예: "*"), 일치 동작은 지정된 된 파일 확장명의 길이 따라 달라 집니다.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>A <ph id="ph1">`searchPattern`</ph> with a file extension of exactly three characters returns files with an extension of three or more characters, where the first three characters match the file extension specified in the <ph id="ph2">`searchPattern`</ph>.</source>
          <target state="translated">A <ph id="ph1">`searchPattern`</ph> 확장명이 정확히 3 자 파일 확장명의 파일을 3 개 이상의 문자로 구성 된 첫 번째 세 문자가 일치에 지정 된 파일 확장명을 반환 된 <ph id="ph2">`searchPattern`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>A <ph id="ph1">`searchPattern`</ph> with a file extension of one, two, or more than three characters returns only files with extensions of exactly that length that match the file extension specified in the <ph id="ph2">`searchPattern`</ph>.</source>
          <target state="translated">A <ph id="ph1">`searchPattern`</ph> 파일 하나, 두 개 또는 세 개 이상의 문자 확장 자에 지정 된 파일 확장명과 일치 하는 확장명을 가진 파일만 반환 하는 <ph id="ph2">`searchPattern`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>When using the question mark wildcard character, this method returns only files that match the specified file extension.</source>
          <target state="translated">물음표 와일드 카드 문자를 사용할 경우이 메서드는 지정 된 파일 확장명과 일치 하는 파일에만 반환 합니다.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>For example, given two files in a directory, "file1.txt" and "file1.txtother", a search pattern of "file?.txt" returns only the first file, while a search pattern of "file<ph id="ph1">\*</ph>.txt" returns both files.</source>
          <target state="translated">예를 들어 두 개의 파일 디렉터리, "file1.txt" 및 "file1.txtother", 검색 패턴은에 지정 된 "파일?입니다. txt"반환 하는 동안 검색 패턴은만 첫 번째 파일을" 파일<ph id="ph1">\*</ph>.txt "파일을 모두 반환 합니다.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>Because this method checks against file names with both the 8.3 file name format and the long file name format, a search pattern similar to "*1<ph id="ph1">\*</ph>.txt" may return unexpected file names.</source>
          <target state="translated">검색 패턴 비슷합니다 8.3 파일 이름 형식과 긴 파일 이름 형식을 모두 포함 된 파일 이름에 대해이 메서드를 확인 하기 때문에 "* 1<ph id="ph1">\*</ph>.txt" 예기치 않은 파일 이름을 반환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>For example, using a search pattern of "<ph id="ph1">\*</ph>1<ph id="ph2">\*</ph>.txt" will return "longfilename.txt" because the equivalent 8.3 file name format would be "longf~1.txt".</source>
          <target state="translated">예를 들어 검색 패턴을 사용 하 여 "<ph id="ph1">\*</ph>1<ph id="ph2">\*</ph>.txt" 해당 8.3 파일 이름 형식은 "longf~1.txt" 될 수 있으므로 "longfilename.txt"를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>This method pre-populates the values of the following <ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph> properties:</source>
          <target state="translated">이 메서드는 다음 값을 미리 채웁니다 <ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph> 속성:</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>The following example shows how to get a list of files from a directory by using different search options.</source>
          <target state="translated">다음 예제에서는 다른 검색 옵션을 사용 하 여 디렉터리에서 파일의 목록을 가져오는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</source>
          <target state="translated">파일 이름은 log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, SubFile.txt 라는 파일에 있는 하위 디렉터리에 있는 디렉터리를 가정 합니다.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> contains one or more invalid characters defined by the <ph id="ph2">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph>에는 <ph id="ph2">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> 메서드로 정의된 잘못된 문자가 하나 이상 포함되어 있습니다.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>The path is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated">경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>for access to the path and for reading from files and directories.</source>
          <target state="translated">경로 파일 및 디렉터리에서 읽기에 대 한 액세스 권한입니다.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></source>
          <target state="translated">연관 된 열거형: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>The search string to match against the names of files.</source>
          <target state="translated">파일 이름과 일치하는지 비교할 검색 문자열입니다.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>This parameter can contain a combination of valid literal path and wildcard (* and ?) characters, but it doesn't support regular expressions.</source>
          <target state="translated">이 매개 변수는 유효한 리터럴 경로와 와일드카드(* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</source>
          <target state="translated">검색 작업에 현재 디렉터리만 포함할지 아니면 모든 하위 디렉터리를 포함할지를 지정하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>Returns a file list from the current directory matching the given search pattern and using a value to determine whether to search subdirectories.</source>
          <target state="translated">하위 디렉터리를 검색할지를 나타내는 값을 사용하여 현재 디렉터리에서 지정된 검색 패턴과 일치하는 파일 목록을 반환합니다.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.IO.FileInfo" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.FileInfo" /&gt;</ph> 형식의 배열입니다.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>The <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph> methods differ as follows:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph> 방법은 다음과 같이 달라 집니다.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph>, you can start enumerating the collection of <ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph> objects before the whole collection is returned.</source>
          <target state="translated">사용 하는 경우 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph>의 컬렉션을 열거 하기 <ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph> 전체 컬렉션을 반환 하기 전에 개체입니다.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>When you use <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph>, you must wait for the whole array of <ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph> objects to be returned before you can access the array.</source>
          <target state="translated">사용 하는 경우 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph>를의 전체 배열에 대해 기다려야 <ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph> 개체 반환 되기 전에 배열에 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>Therefore, when you are working with many files and directories, <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph> can be more efficient.</source>
          <target state="translated">따라서 많은 파일 및 디렉터리를 사용 하 여 작업할 때 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.EnumerateFiles%2A&gt;</ph> 더 효과적일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>If there are no files in the <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph>, this method returns an empty array.</source>
          <target state="translated">에 파일이 없는 경우는 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph>,이 메서드는 빈 배열을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>The following wildcard specifiers are permitted in <ph id="ph1">`searchPattern`</ph>.</source>
          <target state="translated">에 다음 와일드 카드 지정자를 사용할 수 <ph id="ph1">`searchPattern`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>Wildcard character</source>
          <target state="translated">와일드 카드 문자</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>* (asterisk)</source>
          <target state="translated">*(별표)</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>Zero or more characters.</source>
          <target state="translated">0 개 이상의 문자입니다.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>?</source>
          <target state="translated">?</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>(question mark)</source>
          <target state="translated">(물음표)</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>Exactly zero or one character.</source>
          <target state="translated">정확히 0 개 또는 1 문자입니다.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>The order of the returned file names is not guaranteed; use the <ph id="ph1">&lt;xref:System.Array.Sort%2A&gt;</ph> method if a specific sort order is required.</source>
          <target state="translated">반환 되는 파일 이름의 순서를 보장할 수 없습니다. 사용 하 여는 <ph id="ph1">&lt;xref:System.Array.Sort%2A&gt;</ph> 메서드 특정 정렬 순서를 적용 해야 하는 경우.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>Wildcards are permitted.</source>
          <target state="translated">와일드 카드가 지원 됩니다.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>For example, the <ph id="ph1">`searchPattern`</ph> string "*.txt" searches for all file names having an extension of "txt".</source>
          <target state="translated">예를 들어는 <ph id="ph1">`searchPattern`</ph> 모든 파일은 확장명이 "txt"의 이름을 "*.txt" 검색 문자열입니다.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>The <ph id="ph1">`searchPattern`</ph> string "s<ph id="ph2">\*</ph>" searches for all file names beginning with the letter "s".</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 문자열 "s<ph id="ph2">\*</ph>" "s"로 시작 하는 이름은 모든 파일을 검색 합니다.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>If there are no files, or no files that match the <ph id="ph1">`searchPattern`</ph> string in the <ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph>, this method returns an empty array.</source>
          <target state="translated">파일이 없습니다 또는 no 있을 경우 일치 하는 파일이 <ph id="ph1">`searchPattern`</ph> 문자열에 <ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph>,이 메서드는 빈 배열을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>When using the asterisk wildcard character in a <ph id="ph1">`searchPattern`</ph> (for example, "*.txt"), the matching behavior varies depending on the length of the specified file extension.</source>
          <target state="translated">에 별표 와일드 카드 문자를 사용 하는 경우는 <ph id="ph1">`searchPattern`</ph> (, 예: "*"), 일치 동작은 지정된 된 파일 확장명의 길이 따라 달라 집니다.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>A <ph id="ph1">`searchPattern`</ph> with a file extension of exactly three characters returns files with an extension of three or more characters, where the first three characters match the file extension specified in the <ph id="ph2">`searchPattern`</ph>.</source>
          <target state="translated">A <ph id="ph1">`searchPattern`</ph> 확장명이 정확히 3 자 파일 확장명의 파일을 3 개 이상의 문자로 구성 된 첫 번째 세 문자가 일치에 지정 된 파일 확장명을 반환 된 <ph id="ph2">`searchPattern`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>A <ph id="ph1">`searchPattern`</ph> with a file extension of one, two, or more than three characters returns only files with extensions of exactly that length that match the file extension specified in the <ph id="ph2">`searchPattern`</ph>.</source>
          <target state="translated">A <ph id="ph1">`searchPattern`</ph> 파일 하나, 두 개 또는 세 개 이상의 문자 확장 자에 지정 된 파일 확장명과 일치 하는 확장명을 가진 파일만 반환 하는 <ph id="ph2">`searchPattern`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>When using the question mark wildcard character, this method returns only files that match the specified file extension.</source>
          <target state="translated">물음표 와일드 카드 문자를 사용할 경우이 메서드는 지정 된 파일 확장명과 일치 하는 파일에만 반환 합니다.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>For example, given two files in a directory, "file1.txt" and "file1.txtother", a search pattern of "file?.txt" returns only the first file, while a search pattern of "file<ph id="ph1">\*</ph>.txt" returns both files.</source>
          <target state="translated">예를 들어 두 개의 파일 디렉터리, "file1.txt" 및 "file1.txtother", 검색 패턴은에 지정 된 "파일?입니다. txt"반환 하는 동안 검색 패턴은만 첫 번째 파일을" 파일<ph id="ph1">\*</ph>.txt "파일을 모두 반환 합니다.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>The following list shows the behavior of different lengths for the <ph id="ph1">`searchPattern`</ph> parameter:</source>
          <target state="translated">다음 목록에 대 한 길이가 다른 동작을 보여 줍니다.는 <ph id="ph1">`searchPattern`</ph> 매개 변수:</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>"*.abc" returns files having an extension of.abc,.abcd,.abcde,.abcdef, and so on.</source>
          <target state="translated">"*.abc"는 확장 of.abc,.abcd,.abcde,.abcdef 파일을 반환 등입니다.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>"*.abcd" returns only files having an extension of.abcd.</source>
          <target state="translated">"*.abcd" 확장 of.abcd을 가진 파일만 반환 합니다.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>"*.abcde" returns only files having an extension of.abcde.</source>
          <target state="translated">"*.abcde" 확장 of.abcde을 가진 파일만 반환 합니다.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>"*.abcdef" returns only files having an extension of.abcdef.</source>
          <target state="translated">"*.abcdef" 확장 of.abcdef을 가진 파일만 반환 합니다.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>Because this method checks against file names with both the 8.3 file name format and the long file name format, a search pattern similar to "*1<ph id="ph1">\*</ph>.txt" may return unexpected file names.</source>
          <target state="translated">검색 패턴 비슷합니다 8.3 파일 이름 형식과 긴 파일 이름 형식을 모두 포함 된 파일 이름에 대해이 메서드를 확인 하기 때문에 "* 1<ph id="ph1">\*</ph>.txt" 예기치 않은 파일 이름을 반환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>For example, using a search pattern of "<ph id="ph1">\*</ph>1<ph id="ph2">\*</ph>.txt" will return "longfilename.txt" because the equivalent 8.3 file name format would be "longf~1.txt".</source>
          <target state="translated">예를 들어 검색 패턴을 사용 하 여 "<ph id="ph1">\*</ph>1<ph id="ph2">\*</ph>.txt" 해당 8.3 파일 이름 형식은 "longf~1.txt" 될 수 있으므로 "longfilename.txt"를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>This method pre-populates the values of the following <ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph> properties:</source>
          <target state="translated">이 메서드는 다음 값을 미리 채웁니다 <ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph> 속성:</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>The following example shows how to get a list of files from a directory by using different search options.</source>
          <target state="translated">다음 예제에서는 다른 검색 옵션을 사용 하 여 디렉터리에서 파일의 목록을 가져오는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</source>
          <target state="translated">파일 이름은 log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, SubFile.txt 라는 파일에 있는 하위 디렉터리에 있는 디렉터리를 가정 합니다.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> contains one or more invalid characters defined by the <ph id="ph2">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph>에는 <ph id="ph2">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> 메서드로 정의된 잘못된 문자가 하나 이상 포함되어 있습니다.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="searchOption" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.SearchOption" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchOption" /&gt;</ph>은 유효한 <ph id="ph2">&lt;see cref="T:System.IO.SearchOption" /&gt;</ph> 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>The path is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated">경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>for access to the path and for reading from files and directories.</source>
          <target state="translated">경로 파일 및 디렉터리에서 읽기에 대 한 액세스 권한입니다.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></source>
          <target state="translated">연관 된 열거형: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" uid="T:System.IO.DirectoryInfo">
          <source>Retrieves an array of strongly typed <ph id="ph1">&lt;see cref="T:System.IO.FileSystemInfo" /&gt;</ph> objects representing files and subdirectories of the current directory.</source>
          <target state="translated">현재 디렉터리의 파일과 하위 디렉터리를 나타내는 강력한 형식의 <ph id="ph1">&lt;see cref="T:System.IO.FileSystemInfo" /&gt;</ph> 개체 배열을 검색합니다.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos">
          <source>Returns an array of strongly typed <ph id="ph1">&lt;see cref="T:System.IO.FileSystemInfo" /&gt;</ph> entries representing all the files and subdirectories in a directory.</source>
          <target state="translated">디렉터리의 모든 파일과 하위 디렉터리를 나타내는 강력한 형식의 <ph id="ph1">&lt;see cref="T:System.IO.FileSystemInfo" /&gt;</ph> 항목 배열을 반환합니다.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos">
          <source>An array of strongly typed <ph id="ph1">&lt;see cref="T:System.IO.FileSystemInfo" /&gt;</ph> entries.</source>
          <target state="translated">강력한 형식의 <ph id="ph1">&lt;see cref="T:System.IO.FileSystemInfo" /&gt;</ph> 항목 배열입니다.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos">
          <source>If there are no files or directories in the <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph>, this method returns an empty array.</source>
          <target state="translated">파일 또는 디렉터리에 없는 경우는 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph>,이 메서드는 빈 배열을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos">
          <source>This method is not recursive.</source>
          <target state="translated">이 메서드는 재귀 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos">
          <source>For subdirectories, the <ph id="ph1">&lt;xref:System.IO.FileSystemInfo&gt;</ph> objects returned by this method can be cast to the derived class <ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph>.</source>
          <target state="translated">하위 디렉터리의 경우는 <ph id="ph1">&lt;xref:System.IO.FileSystemInfo&gt;</ph> 파생 된 클래스에이 메서드에서 반환 되는 개체를 캐스팅 될 수 <ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.FileAttributes&gt;</ph> value returned by the <ph id="ph2">&lt;xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType&gt;</ph> property to determine whether the <ph id="ph3">&lt;xref:System.IO.FileSystemInfo&gt;</ph> represents a file or a directory.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.IO.FileAttributes&gt;</ph> 에서 반환 된 값의 <ph id="ph2">&lt;xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType&gt;</ph> 속성을 확인 여부는 <ph id="ph3">&lt;xref:System.IO.FileSystemInfo&gt;</ph> 파일 또는 디렉터리를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos">
          <source>This method pre-populates the values of the following <ph id="ph1">&lt;xref:System.IO.FileSystemInfo&gt;</ph> properties:</source>
          <target state="translated">이 메서드는 다음 값을 미리 채웁니다 <ph id="ph1">&lt;xref:System.IO.FileSystemInfo&gt;</ph> 속성:</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos">
          <source>The following example counts the files and directories under the specified directory.</source>
          <target state="translated">다음 예제에서는 파일 및 지정된 된 디렉터리 아래에 있는 디렉터리를 계산합니다.</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos">
          <source>The path is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated">경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>The search string to match against the names of directories and files.</source>
          <target state="translated">파일에 있는 디렉터리 이름과 일치하는지 비교할 검색 문자열입니다.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>This parameter can contain a combination of valid literal path and wildcard (* and ?) characters, but it doesn't support regular expressions.</source>
          <target state="translated">이 매개 변수는 유효한 리터럴 경로와 와일드카드(* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>Retrieves an array of strongly typed <ph id="ph1">&lt;see cref="T:System.IO.FileSystemInfo" /&gt;</ph> objects representing the files and subdirectories that match the specified search criteria.</source>
          <target state="translated">지정된 검색 조건과 일치하는 파일 및 하위 디렉터리를 나타내는 강력한 형식의 <ph id="ph1">&lt;see cref="T:System.IO.FileSystemInfo" /&gt;</ph> 개체 배열을 검색합니다.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>An array of strongly typed <ph id="ph1">&lt;see langword="FileSystemInfo" /&gt;</ph> objects matching the search criteria.</source>
          <target state="translated">검색 기준과 일치하는 강력한 형식의 <ph id="ph1">&lt;see langword="FileSystemInfo" /&gt;</ph> 개체 배열입니다.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source><ph id="ph1">`searchPattern`</ph> can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 리터럴 및 와일드 카드 문자 조합일 수 있지만 정규식을 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>The following wildcard specifiers are permitted in <ph id="ph1">`searchPattern`</ph>.</source>
          <target state="translated">에 다음 와일드 카드 지정자를 사용할 수 <ph id="ph1">`searchPattern`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>Wildcard specifier</source>
          <target state="translated">와일드 카드 지정자</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>Matches</source>
          <target state="translated">일치 항목</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>* (asterisk)</source>
          <target state="translated">*(별표)</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>Zero or more characters in that position.</source>
          <target state="translated">해당 위치에 0 개 이상의 문자가 있습니다.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>?</source>
          <target state="translated">?</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>(question mark)</source>
          <target state="translated">(물음표)</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>Zero or one character in that position.</source>
          <target state="translated">해당 위치에 0 개 또는 1 문자입니다.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>Characters other than the wildcard are literal characters.</source>
          <target state="translated">와일드 카드 문자는 리터럴 문자입니다.</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>For example, the  string "*t" searches for all names in  ending with the letter "t".</source>
          <target state="translated">예를 들어 문자열 "* t"에서 문자 "t"로 끝나는 모든 이름 검색 합니다.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>".</source>
          <target state="translated">".</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>The <ph id="ph1">`searchPattern`</ph> string "s<ph id="ph2">\*</ph>" searches for all names in <ph id="ph3">`path`</ph> beginning with the letter "s".</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 문자열 "s<ph id="ph2">\*</ph>"에서 모든 이름 검색 <ph id="ph3">`path`</ph> "s"로 시작 합니다.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>This method is not recursive.</source>
          <target state="translated">이 메서드는 재귀 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>For subdirectories, the <ph id="ph1">&lt;xref:System.IO.FileSystemInfo&gt;</ph> objects returned by this method can be cast to the derived class <ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph>.</source>
          <target state="translated">하위 디렉터리의 경우는 <ph id="ph1">&lt;xref:System.IO.FileSystemInfo&gt;</ph> 파생 된 클래스에이 메서드에서 반환 되는 개체를 캐스팅 될 수 <ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.FileAttributes&gt;</ph> value returned by the <ph id="ph2">&lt;xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType&gt;</ph> property to determine whether the <ph id="ph3">&lt;xref:System.IO.FileSystemInfo&gt;</ph> represents a file or a directory.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.IO.FileAttributes&gt;</ph> 에서 반환 된 값의 <ph id="ph2">&lt;xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType&gt;</ph> 속성을 확인 여부는 <ph id="ph3">&lt;xref:System.IO.FileSystemInfo&gt;</ph> 파일 또는 디렉터리를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>Wild cards are permitted.</source>
          <target state="translated">와일드 카드를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>For example, the <ph id="ph1">`searchPattern`</ph> string "*t" searches for all directory names in <ph id="ph2">`path`</ph> ending with the letter "t".</source>
          <target state="translated">예를 들어는 <ph id="ph1">`searchPattern`</ph> 문자열 "* t"의 모든 디렉터리 이름에 대 한 검색 <ph id="ph2">`path`</ph> 문자 "t"로 끝나는 합니다.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>The <ph id="ph1">`searchPattern`</ph> string "s<ph id="ph2">\*</ph>" searches for all directory names in <ph id="ph3">`path`</ph> beginning with the letter "s".</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 문자열 "s<ph id="ph2">\*</ph>"의 모든 디렉터리 이름에 대 한 검색 <ph id="ph3">`path`</ph> "s"로 시작 합니다.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>The string ".." can only be used in <ph id="ph1">`searchPattern`</ph> if it is specified as a part of a valid directory name, such as in the directory name "a..b".</source>
          <target state="translated">문자열 ".."에 사용할 수 <ph id="ph1">`searchPattern`</ph> 디렉터리 이름에과 같은 잘못 된 디렉터리 이름의 일부로 지정 된 경우 "는. b "로 설정 합니다.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>It cannot be used to move up the directory hierarchy.</source>
          <target state="translated">디렉터리 계층 구조 위로 이동 하려면 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>If there are no files or directories, or no files or directories that match the <ph id="ph1">`searchPattern`</ph> string in the <ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph>, this method returns an empty array.</source>
          <target state="translated">파일이 나 디렉터리 또는 파일이 나 디렉터리가 없으면 일치 하는 경우는 <ph id="ph1">`searchPattern`</ph> 문자열에 <ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph>,이 메서드는 빈 배열을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>This method pre-populates the values of the following <ph id="ph1">&lt;xref:System.IO.FileSystemInfo&gt;</ph> properties:</source>
          <target state="translated">이 메서드는 다음 값을 미리 채웁니다 <ph id="ph1">&lt;xref:System.IO.FileSystemInfo&gt;</ph> 속성:</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>The following example counts the files and directories that match the specified search pattern.</source>
          <target state="translated">다음 예제에서는 파일 및 지정된 된 검색 패턴과 일치 하는 디렉터리를 계산 합니다.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> contains one or more invalid characters defined by the <ph id="ph2">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph>에는 <ph id="ph2">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> 메서드로 정의된 잘못된 문자가 하나 이상 포함되어 있습니다.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>The specified path is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>for reading from files and directories and for access to the path.</source>
          <target state="translated">읽을 파일 및 디렉터리 및 경로에 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></source>
          <target state="translated">연관 된 열거형: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>The search string to match against the names of directories and filesa.</source>
          <target state="translated">디렉터리 및 파일 이름과 일치하는지 비교할 검색 문자열입니다.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>This parameter can contain a combination of valid literal path and wildcard (* and ?) characters, but it doesn't support regular expressions.</source>
          <target state="translated">이 매개 변수는 유효한 리터럴 경로와 와일드카드(* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</source>
          <target state="translated">검색 작업에 현재 디렉터리만 포함할지 아니면 모든 하위 디렉터리를 포함할지를 지정하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.IO.SearchOption.TopDirectoryOnly" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.IO.SearchOption.TopDirectoryOnly" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>Retrieves an array of <ph id="ph1">&lt;see cref="T:System.IO.FileSystemInfo" /&gt;</ph> objects that represent the files and subdirectories matching the specified search criteria.</source>
          <target state="translated">지정된 검색 조건과 일치하는 파일 및 하위 디렉터리를 나타내는 <ph id="ph1">&lt;see cref="T:System.IO.FileSystemInfo" /&gt;</ph> 개체 배열을 검색합니다.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>An array of file system entries that match the search criteria.</source>
          <target state="translated">검색 조건과 일치하는 파일 시스템 항목의 배열입니다.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source><ph id="ph1">`searchPattern`</ph> can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 리터럴 및 와일드 카드 문자 조합일 수 있지만 정규식을 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>The following wildcard specifiers are permitted in <ph id="ph1">`searchPattern`</ph>.</source>
          <target state="translated">에 다음 와일드 카드 지정자를 사용할 수 <ph id="ph1">`searchPattern`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>Wildcard specifier</source>
          <target state="translated">와일드 카드 지정자</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>Matches</source>
          <target state="translated">일치 항목</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>* (asterisk)</source>
          <target state="translated">*(별표)</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>Zero or more characters in that position.</source>
          <target state="translated">해당 위치에 0 개 이상의 문자가 있습니다.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>?</source>
          <target state="translated">?</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>(question mark)</source>
          <target state="translated">(물음표)</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>Zero or one character in that position.</source>
          <target state="translated">해당 위치에 0 개 또는 1 문자입니다.</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>Characters other than the wildcard are literal characters.</source>
          <target state="translated">와일드 카드 문자는 리터럴 문자입니다.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>For example, the  string "*t" searches for all names in  ending with the letter "t".</source>
          <target state="translated">예를 들어 문자열 "* t"에서 문자 "t"로 끝나는 모든 이름 검색 합니다.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>".</source>
          <target state="translated">".</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>The <ph id="ph1">`searchPattern`</ph> string "s<ph id="ph2">\*</ph>" searches for all names in <ph id="ph3">`path`</ph> beginning with the letter "s".</source>
          <target state="translated"><ph id="ph1">`searchPattern`</ph> 문자열 "s<ph id="ph2">\*</ph>"에서 모든 이름 검색 <ph id="ph3">`path`</ph> "s"로 시작 합니다.</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>For subdirectories, the <ph id="ph1">&lt;xref:System.IO.FileSystemInfo&gt;</ph> objects returned by this method can be cast to the derived class <ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph>.</source>
          <target state="translated">하위 디렉터리의 경우는 <ph id="ph1">&lt;xref:System.IO.FileSystemInfo&gt;</ph> 파생 된 클래스에이 메서드에서 반환 되는 개체를 캐스팅 될 수 <ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.FileAttributes&gt;</ph> value returned by the <ph id="ph2">&lt;xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType&gt;</ph> property to determine whether the <ph id="ph3">&lt;xref:System.IO.FileSystemInfo&gt;</ph> represents a file or a directory.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.IO.FileAttributes&gt;</ph> 에서 반환 된 값의 <ph id="ph2">&lt;xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType&gt;</ph> 속성을 확인 여부는 <ph id="ph3">&lt;xref:System.IO.FileSystemInfo&gt;</ph> 파일 또는 디렉터리를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>This method pre-populates the values of the following <ph id="ph1">&lt;xref:System.IO.FileSystemInfo&gt;</ph> properties:</source>
          <target state="translated">이 메서드는 다음 값을 미리 채웁니다 <ph id="ph1">&lt;xref:System.IO.FileSystemInfo&gt;</ph> 속성:</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> contains one or more invalid characters defined by the <ph id="ph2">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph>에는 <ph id="ph2">&lt;see cref="M:System.IO.Path.GetInvalidPathChars" /&gt;</ph> 메서드로 정의된 잘못된 문자가 하나 이상 포함되어 있습니다.</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchPattern" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source><ph id="ph1">&lt;paramref name="searchOption" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.SearchOption" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="searchOption" /&gt;</ph>은 유효한 <ph id="ph2">&lt;see cref="T:System.IO.SearchOption" /&gt;</ph> 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>The specified path is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source>The name and path to which to move this directory.</source>
          <target state="translated">이 디렉터리를 이동할 곳의 이름과 경로입니다.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source>The destination cannot be another disk volume or a directory with the identical name.</source>
          <target state="translated">대상 디렉터리는 다른 디스크 볼륨이나 동일한 이름의 디렉터리가 될 수는 없지만,</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source>It can be an existing directory to which you want to add this directory as a subdirectory.</source>
          <target state="translated">이 디렉터리를 하위 디렉터리로 추가할 기존 디렉터리가 될 수는 있습니다.</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source>Moves a <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> instance and its contents to a new path.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> 인스턴스 및 해당 내용을 새 경로로 이동합니다.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source>This method throws an <ph id="ph1">&lt;xref:System.IO.IOException&gt;</ph> if, for example, you try to move c:\mydir to c:\public, and c:\public already exists.</source>
          <target state="translated">이 메서드에서 throw 된 <ph id="ph1">&lt;xref:System.IO.IOException&gt;</ph> 예를 들어 c:\mydir c:\public로 이동 하려고 하면이 고 c:\public 이미 있습니다.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source>You must specify "c:<ph id="ph1">\\</ph>\public<ph id="ph2">\\</ph>\mydir" as the <ph id="ph3">`destDirName`</ph> parameter, or specify a new directory name such as "c:<ph id="ph4">\\</ph>\newdir".</source>
          <target state="translated">지정 해야 합니다 "c:<ph id="ph1">\\</ph>\public<ph id="ph2">\\</ph>\mydir"으로 <ph id="ph3">`destDirName`</ph> 매개 변수를와 같이 새 디렉터리 이름을 지정 하거나 "c:<ph id="ph4">\\</ph>\newdir"입니다.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source>This method permits moving a directory to a read-only directory.</source>
          <target state="translated">이 메서드는 디렉터리 읽기 전용 디렉터리를 옮기는 것을 허용 합니다.</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source>The read/write attribute of neither directory is affected.</source>
          <target state="translated">이들 디렉터리의 읽기/쓰기 특성에 영향이 있습니다.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">공통적인 I/O 작업의 목록에 대 한 참조 <bpt id="p1">[</bpt>공통적인 I/O 작업<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source>The following example demonstrates moving a directory.</source>
          <target state="translated">다음 예제에서는 디렉터리를 이동 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source><ph id="ph1">&lt;paramref name="destDirName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="destDirName" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source><ph id="ph1">&lt;paramref name="destDirName" /&gt;</ph> is an empty string (''").</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="destDirName" /&gt;</ph>이 빈 문자열("")인 경우</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source>An attempt was made to move a directory to a different volume.</source>
          <target state="translated">디렉터리를 다른 볼륨으로 이동하려고 했습니다.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source><ph id="ph1">&lt;paramref name="destDirName" /&gt;</ph> already exists.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="destDirName" /&gt;</ph>이(가) 이미 있습니다.</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source>You are not authorized to access this path.</source>
          <target state="translated">이 경로에 액세스할 수 있는 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source>The directory being moved and the destination directory have the same name.</source>
          <target state="translated">이동되는 디렉터리와 대상 디렉터리의 이름이 같습니다.</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source>The destination directory cannot be found.</source>
          <target state="translated">대상 디렉터리를 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source>for reading and writing files and directories and for access to the destination directory.</source>
          <target state="translated">읽기 및 쓰기 파일 및 디렉터리에 대 한 대상 디렉터리에 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">보안 동작: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.MoveTo(System.String)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></source>
          <target state="translated">연관 된 열거형: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" uid="P:System.IO.DirectoryInfo.Name">
          <source>Gets the name of this <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> instance.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> 인스턴스의 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.DirectoryInfo.Name">
          <source>The directory name.</source>
          <target state="translated">디렉터리 이름입니다.</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.DirectoryInfo.Name">
          <source>This <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.Name%2A&gt;</ph> property returns only the name of the directory, such as "Bin".</source>
          <target state="translated">이 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.Name%2A&gt;</ph> 속성 "Bin" 등 디렉터리의 이름만 반환 합니다.</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.DirectoryInfo.Name">
          <source>To get the full path, such as "c:\public\Bin", use the <ph id="ph1">&lt;xref:System.IO.FileSystemInfo.FullName%2A&gt;</ph> property.</source>
          <target state="translated">"C:\public\Bin" 등의 전체 경로 가져오려면는 <ph id="ph1">&lt;xref:System.IO.FileSystemInfo.FullName%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.DirectoryInfo.Name">
          <source>The <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.Name%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph> requires no permission (beyond the read permission to the directory necessary to construct the <ph id="ph3">&lt;xref:System.IO.DirectoryInfo.Exists%2A&gt;</ph>) but can give out the directory name.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.DirectoryInfo.Name%2A&gt;</ph> 속성은 <ph id="ph2">&lt;xref:System.IO.DirectoryInfo&gt;</ph> 권한이 필요 하지 (생성 하는 데 필요한 디렉터리에 읽기 권한을 벗어나는 <ph id="ph3">&lt;xref:System.IO.DirectoryInfo.Exists%2A&gt;</ph>)은 디렉터리 이름을 제공할 수 있지만 합니다.</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.DirectoryInfo.Name">
          <source>If it is necessary to hand out a <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph> to a protected directory with a cryptographically secure name, create a dummy directory for the untrusted code’s use.</source>
          <target state="translated">필요한 경우 손 out는 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph> 암호화 보안 이름으로 보호 된 디렉터리를 신뢰할 수 없는 코드의 사용에 대 한 더미 디렉터리를 만듭니다.</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.DirectoryInfo.Name">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">공통적인 I/O 작업의 목록에 대 한 참조 <bpt id="p1">[</bpt>공통적인 I/O 작업<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.DirectoryInfo.Name">
          <source>The following example displays the name of the current <ph id="ph1">`DirectoryInfo`</ph> instance only.</source>
          <target state="translated">다음 예제에서는 현재의 이름을 표시 <ph id="ph1">`DirectoryInfo`</ph> 인스턴스만 해당 합니다.</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" uid="P:System.IO.DirectoryInfo.Parent">
          <source>Gets the parent directory of a specified subdirectory.</source>
          <target state="translated">지정된 하위 디렉터리의 부모 디렉터리를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.DirectoryInfo.Parent">
          <source>The parent directory, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the path is null or if the file path denotes a root (such as "<ph id="ph2">\\</ph>", "C:", or * "<ph id="ph3">\\</ph>\server\share").</source>
          <target state="translated">부모 디렉터리 또는 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 경로가 null 또는 파일 경로 루트를 나타낼 경우 (같은 "<ph id="ph2">\\</ph>", "c:" 또는 * "<ph id="ph3">\\</ph>\server\share").</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.DirectoryInfo.Parent">
          <source>For a list of common I/O tasks, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>.</source>
          <target state="translated">공통적인 I/O 작업의 목록에 대 한 참조 <bpt id="p1">[</bpt>공통적인 I/O 작업<ept id="p1">](~/docs/standard/io/common-i-o-tasks.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.DirectoryInfo.Parent">
          <source>The following example demonstrates referring to the parent directory of a specified directory.</source>
          <target state="translated">다음 예제에서는 지정된 된 디렉터리의 부모 디렉터리를 참조 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" uid="P:System.IO.DirectoryInfo.Parent">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.DirectoryInfo.Parent">
          <source>for reading from files and directories and for access to the path.</source>
          <target state="translated">읽을 파일 및 디렉터리 및 경로에 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.DirectoryInfo.Parent">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph></source>
          <target state="translated">연관 된 열거형: <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" uid="P:System.IO.DirectoryInfo.Root">
          <source>Gets the root portion of the directory.</source>
          <target state="translated">디렉터리의 루트 부분을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.DirectoryInfo.Root">
          <source>An object that represents the root of the directory.</source>
          <target state="translated">디렉터리의 루트를 나타내는 개체입니다.</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.DirectoryInfo.Root">
          <source>The following example displays root locations for specified directories.</source>
          <target state="translated">다음 예제에서는 지정 된 디렉터리에 대 한 루트 위치를 표시합니다.</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" uid="P:System.IO.DirectoryInfo.Root">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.DirectoryInfo.Root">
          <source>for reading from files and directories and for access to the path.</source>
          <target state="translated">읽을 파일 및 디렉터리 및 경로에 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.DirectoryInfo.Root">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph></source>
          <target state="translated">연관 된 열거형: <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>An object that describes an ACL entry to apply to the directory described by the <bpt id="p1">&lt;c&gt;</bpt>path<ept id="p1">&lt;/c&gt;</ept> parameter.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>경로<ept id="p1">&lt;/c&gt;</ept> 매개 변수에서 설명하는 디렉터리에 적용할 ACL 항목을 설명하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>Applies access control list (ACL) entries described by a <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.DirectorySecurity" /&gt;</ph> object to the directory described by the current <ph id="ph2">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.AccessControl.DirectorySecurity" /&gt;</ph> 개체에서 설명하는 ACL(액세스 제어 목록) 항목을 현재 <ph id="ph2">&lt;see cref="T:System.IO.DirectoryInfo" /&gt;</ph> 개체에서 설명하는 디렉터리에 적용합니다.</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>An access control list (ACL) describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</source>
          <target state="translated">액세스 제어 목록 (ACL)에 개인 및/또는 그룹 나 권한이 없는, 특정된 파일이 나 디렉터리에서 특정 작업을 설명 합니다.</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Add or Remove Access Control List Entries<ept id="p1">](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>방법: Access Control 목록 항목 추가 또는 제거<ept id="p1">](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>The <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.SetAccessControl%2A&gt;</ph> method applies ACL entries to a file that represents the noninherited ACL list.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.DirectoryInfo.SetAccessControl%2A&gt;</ph> 메서드는 상속 되지 않은 ACL 목록을 표시 하는 파일에 ACL 항목을 적용 합니다.</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>The ACL specified for <ph id="ph1">`directorySecurity`</ph> replaces the existing ACL for the directory.</source>
          <target state="translated">에 대해 지정 된 ACL <ph id="ph1">`directorySecurity`</ph> 디렉터리에 대 한 기존 ACL 대체 합니다.</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>To add permissions for a new user, use the <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetAccessControl%2A&gt;</ph> method to obtain the existing ACL, and modify it.</source>
          <target state="translated">새 사용자에 대 한 권한을 추가 하려면 사용 된 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetAccessControl%2A&gt;</ph> 메서드를 가져올 기존 ACL을 수정 합니다.</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>The <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.SetAccessControl%2A&gt;</ph> method persists only <ph id="ph2">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph> objects that have been modified after object creation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.DirectoryInfo.SetAccessControl%2A&gt;</ph> 메서드만 계속 되 면 <ph id="ph2">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph> 개체를 만든 후 수정 된 개체입니다.</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>If a <ph id="ph1">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph> object has not been modified, it will not be persisted to a file.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph> 개체가 수정 되지 않은, 파일에 유지 되지 것입니다.</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>Therefore, it is not possible to retrieve a <ph id="ph1">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph> object from one file and reapply the same object to another file.</source>
          <target state="translated">검색할 수 없으면 따라서는 <ph id="ph1">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph> 한 파일에서 개체를 다른 파일에 동일한 개체를 다시 적용 합니다.</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>To copy ACL information from one file to another:</source>
          <target state="translated">다른 파일에서 ACL 정보를 복사 합니다.</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetAccessControl%2A&gt;</ph> method to retrieve the <ph id="ph2">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph> object from the source file.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetAccessControl%2A&gt;</ph> 를 검색할 메서드는 <ph id="ph2">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph> 소스 파일에서 개체입니다.</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>Create a new <ph id="ph1">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph> object for the destination file.</source>
          <target state="translated">새 <ph id="ph1">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph> 대상 파일에 대 한 개체입니다.</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>Use the <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A&gt;</ph> method of the source <ph id="ph3">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph> object to retrieve the ACL information.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A&gt;</ph> 원본의 메서드 <ph id="ph3">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph> ACL 정보를 검색 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>Use the <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A&gt;</ph> method to copy the information retrieved in step 3 to the destination <ph id="ph3">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph> object.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A&gt;</ph> 대상에 3 단계에서 검색 메서드 정보를 복사 하려면 <ph id="ph3">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>Set the destination <ph id="ph1">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph> object to the destination file using the <ph id="ph2">&lt;xref:System.IO.DirectoryInfo.SetAccessControl%2A&gt;</ph> method.</source>
          <target state="translated">대상을 설정 <ph id="ph1">&lt;xref:System.Security.AccessControl.DirectorySecurity&gt;</ph> 개체를 사용 하 여 대상 파일의 <ph id="ph2">&lt;xref:System.IO.DirectoryInfo.SetAccessControl%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetAccessControl%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.DirectoryInfo.SetAccessControl%2A&gt;</ph> methods to add and then remove an access control list (ACL) entry from a directory.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.IO.DirectoryInfo.GetAccessControl%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.IO.DirectoryInfo.SetAccessControl%2A&gt;</ph> 디렉터리에서 항목 목록 (ACL)을 제어 하는 메서드를 추가 하 고 액세스를 제거 하십시오.</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>The <ph id="ph1">&lt;paramref name="directorySecurity" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="directorySecurity" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>The file could not be found or modified.</source>
          <target state="translated">파일을 찾을 수 없거나 수정할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>The current process does not have access to open the file.</source>
          <target state="translated">현재 프로세스에 파일을 열 수 있는 액세스 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>The current operating system is not Microsoft Windows 2000 or later.</source>
          <target state="translated">현재 운영 체제가 Microsoft Windows 2000 이상이 아닌 경우</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>for permission to enumerate access control list (ACL) for a directory.</source>
          <target state="translated">디렉터리에 대 한 액세스 제어 목록 (ACL)를 열거할 수 있는 권한입니다.</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">보안 동작: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.AccessControl.AccessControlActions.View" /&gt;</ph></source>
          <target state="translated">연관 된 열거형: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.AccessControl.AccessControlActions.View" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.ToString">
          <source>Returns the original path that was passed by the user.</source>
          <target state="translated">사용자가 통과한 원래의 경로를 반환합니다.</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" uid="M:System.IO.DirectoryInfo.ToString">
          <source>Returns the original path that was passed by the user.</source>
          <target state="translated">사용자가 통과한 원래의 경로를 반환합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>