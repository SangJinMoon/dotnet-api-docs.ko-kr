<Type Name="DirectoryInfo" FullName="System.IO.DirectoryInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a3335d1cdc13ad2b58c4f218d726dde6c0d0dc82" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39983748" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DirectoryInfo : System.IO.FileSystemInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit DirectoryInfo extends System.IO.FileSystemInfo" />
  <TypeSignature Language="DocId" Value="T:System.IO.DirectoryInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DirectoryInfo&#xA;Inherits FileSystemInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class DirectoryInfo sealed : System::IO::FileSystemInfo" />
  <TypeSignature Language="F#" Value="type DirectoryInfo = class&#xA;    inherit FileSystemInfo" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.FileSystemInfo</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="0d8fe-101">디렉터리 및 하위 디렉터리를 만들고, 이동하고, 열거하는 인스턴스 메서드를 노출합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0d8fe-101">Exposes instance methods for creating, moving, and enumerating through directories and subdirectories.</span>
      </span>
      <span data-ttu-id="0d8fe-102">이 클래스는 상속될 수 없습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0d8fe-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d8fe-103">사용 된 <xref:System.IO.DirectoryInfo> 복사, 이동, 이름 바꾸기 및 디렉터리 삭제 등의 일반적인 작업에 대 한 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-103">Use the <xref:System.IO.DirectoryInfo> class for typical operations such as copying, moving, renaming, creating, and deleting directories.</span></span>  
  
 <span data-ttu-id="0d8fe-104">인스턴스 메서드를 사용 하 여 개체를 여러 번 재사용 하려는 경우 고려해 <xref:System.IO.DirectoryInfo> 의 해당 정적 메서드 대신는 <xref:System.IO.Directory> 클래스를 보안 검사는 항상 되지 않으므로 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-104">If you are going to reuse an object several times, consider using the instance method of <xref:System.IO.DirectoryInfo> instead of the corresponding static methods of the <xref:System.IO.Directory> class, because a security check will not always be necessary.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0d8fe-105">입력 문자열로 경로 허용 하는 멤버를 해당 경로 올바른 형식 이어야 합니다. 또는 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-105">In members that accept a path as an input string, that path must be well-formed or an exception is raised.</span></span> <span data-ttu-id="0d8fe-106">예를 들어, 경로 정규화 공백으로 시작 하지만 경로 클래스의 메서드에서 잘리지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-106">For example, if a path is fully qualified but begins with a space, the path is not trimmed in methods of the class.</span></span> <span data-ttu-id="0d8fe-107">따라서 경로 잘못 되었으며 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-107">Therefore, the path is malformed and an exception is raised.</span></span> <span data-ttu-id="0d8fe-108">마찬가지로, 경로 또는 경로의 조합을 두 번 정규화 될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-108">Similarly, a path or a combination of paths cannot be fully qualified twice.</span></span> <span data-ttu-id="0d8fe-109">예를 들어, "c:\temp c:\windows"는 또한 대부분의 경우에서 예외가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-109">For example, "c:\temp c:\windows" also raises an exception in most cases.</span></span> <span data-ttu-id="0d8fe-110">경로 잘 구성 된 경우에 경로 문자열을 허용 하는 메서드를 사용 하 여 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-110">Ensure that your paths are well-formed when using methods that accept a path string.</span></span>  
  
 <span data-ttu-id="0d8fe-111">경로 허용 하는 멤버의 경로 파일 또는 디렉터리를 참조할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-111">In members that accept a path, the path can refer to a file or just a directory.</span></span> <span data-ttu-id="0d8fe-112">지정된 된 경로 상대 경로 또는 서버 및 공유 이름에 대 한 범용 명명 규칙 (UNC) 경로 참조할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-112">The specified path can also refer to a relative path or a Universal Naming Convention (UNC) path for a server and share name.</span></span> <span data-ttu-id="0d8fe-113">예를 들어, 다음은 허용 가능한 경로.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-113">For example, all the following are acceptable paths:</span></span>  
  
-   <span data-ttu-id="0d8fe-114">"c:\\\MyDir\\\MyFile.txt" C# 또는 Visual Basic의 "c:\MyDir\MyFile.txt"입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-114">"c:\\\MyDir\\\MyFile.txt" in C#, or "c:\MyDir\MyFile.txt" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="0d8fe-115">"c:\\\MyDir" C# 또는 Visual Basic의 "c:\MyDir"입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-115">"c:\\\MyDir" in C#, or "c:\MyDir" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="0d8fe-116">"MyDir\\\MySubdir" C# 또는 Visual Basic의 "MyDir\MySubDir"입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-116">"MyDir\\\MySubdir" in C#, or "MyDir\MySubDir" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="0d8fe-117">"\\\\\\\MyServer\\\MyShare" C#에서 또는 "\\\MyServer\MyShare" Visual Basic의 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-117">"\\\\\\\MyServer\\\MyShare" in C#, or "\\\MyServer\MyShare" in Visual Basic.</span></span>  
  
 <span data-ttu-id="0d8fe-118">기본적으로 새 디렉터리에 대 한 전체 읽기/쓰기 액세스는 모든 사용자에 게 부여 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-118">By default, full read/write access to new directories is granted to all users.</span></span>  
  
 <span data-ttu-id="0d8fe-119">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-119">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d8fe-120">다음 예제에서는 기본 멤버 중 일부는 `DirectoryInfo` 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-120">The following example demonstrates some of the main members of the `DirectoryInfo` class.</span></span>  
  
 [!code-cpp[DirInfo Class Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Class Example/CPP/dirinfo class example.cpp#1)]
 [!code-csharp[DirInfo Class Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Class Example/CS/dirinfo class example.cs#1)]
 [!code-vb[DirInfo Class Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Class Example/VB/dirinfo class example.vb#1)]  
  
 <span data-ttu-id="0d8fe-121">다음 예제에서는 디렉터리와 해당 콘텐츠를 복사 하는 방법에 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-121">The following example demonstrates how to copy a directory and its contents.</span></span>  
  
 [!code-csharp[IO.DirectoryInfo-CopyDir#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.DirectoryInfo-CopyDir/cs/copydir.cs#1)]
 [!code-vb[IO.DirectoryInfo-CopyDir#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.DirectoryInfo-CopyDir/vb/CopyDir.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.File" />
    <altmember cref="P:System.IO.FileSystemInfo.Attributes" />
    <altmember cref="T:System.IO.FileSystemWatcher" />
    <altmember cref="T:System.IO.Directory" />
    <altmember cref="T:System.IO.Path" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectoryInfo (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectoryInfo(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.IO.DirectoryInfo : string -&gt; System.IO.DirectoryInfo" Usage="new System.IO.DirectoryInfo path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="0d8fe-122">
            <see langword="DirectoryInfo" />를 만들 경로를 지정하는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-122">A string specifying the path on which to create the <see langword="DirectoryInfo" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d8fe-123">지정된 경로를 사용하여 <see cref="T:System.IO.DirectoryInfo" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-123">Initializes a new instance of the <see cref="T:System.IO.DirectoryInfo" /> class on the specified path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d8fe-124">이 생성자는 디렉터리가 존재 하는지 확인 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-124">This constructor does not check if a directory exists.</span></span> <span data-ttu-id="0d8fe-125">이 생성자에는 후속 작업에서 디스크에 액세스 하는 데 사용 되는 문자열에 대 한 자리 표시자입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-125">This constructor is a placeholder for a string that is used to access the disk in subsequent operations.</span></span>  
  
 <span data-ttu-id="0d8fe-126">`path` 매개 변수는 범용 명명 규칙 (UNC) 공유에 파일을 포함 하는 파일 이름 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-126">The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="0d8fe-127">문자 집합을 특정 문화권 설정을 사용 하 여 컴파일하고 하면 서로 다른 문화권 설정 사용 하 여 동일한 문자 검색 문자를 해석할 수 없어 및 throw 예외가 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-127">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="0d8fe-128">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-128">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d8fe-129">다음 예제에서는이 생성자를 사용 하 여 지정 된 디렉터리와 하위 디렉터리를 만듭니다 및 하위 디렉터리를 포함 하는 디렉터리를 삭제할 수 없습니다 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-129">The following example uses this constructor to create the specified directory and subdirectory, and demonstrates that a directory that contains subdirectories cannot be deleted.</span></span>  
  
 [!code-cpp[DirInfo Ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Ctor/CPP/dirinfo ctor.cpp#1)]
 [!code-csharp[DirInfo Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Ctor/CS/dirinfo ctor.cs#1)]
 [!code-vb[DirInfo Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Ctor/VB/dirinfo ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0d8fe-130">
            <paramref name="path" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-130">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="0d8fe-131">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-131">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0d8fe-132">
            <paramref name="path" />에 잘못된 문자(", &lt;, &gt; 또는 |)가 들어 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-132">
              <paramref name="path" /> contains invalid characters such as ", &lt;, &gt;, or |.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="0d8fe-133">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-133">The specified path, file name, or both exceed the system-defined maximum length.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="0d8fe-134">파일 및 디렉터리에서 계속 하십시오.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-134">for reading from files and directories.</span>
          </span>
          <span data-ttu-id="0d8fe-135">연결 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-135">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <altmember cref="T:System.IO.DriveInfo" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0d8fe-136">디렉터리를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-136">Creates a directory.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public void Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Create" />
      <MemberSignature Language="VB.NET" Value="Public Sub Create ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Create();" />
      <MemberSignature Language="F#" Value="member this.Create : unit -&gt; unit" Usage="directoryInfo.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0d8fe-137">디렉터리를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-137">Creates a directory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d8fe-138">해당 디렉터리가 이미 존재 하는 경우 두이 일은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-138">If the directory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="0d8fe-139">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-139">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d8fe-140">지정된 된 디렉터리가 있는지 여부를 다음 예제에서는 검사는 존재 하지 않는 경우 디렉터리를 삭제에서 디렉터리를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-140">The following example checks whether a specified directory exists, creates the directory if it does not exist, and deletes the directory.</span></span>  
  
 [!code-cpp[DirInfo Create#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Create/CPP/dirinfo create.cpp#1)]
 [!code-csharp[DirInfo Create#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Create/CS/dirinfo create.cs#1)]
 [!code-vb[DirInfo Create#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Create/VB/dirinfo create.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0d8fe-141">디렉터리를 만들 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-141">The directory cannot be created.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="0d8fe-142">파일을 작성 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-142">for writing files.</span>
          </span>
          <span data-ttu-id="0d8fe-143">연결 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-143">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public void Create (System.Security.AccessControl.DirectorySecurity directorySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Create(class System.Security.AccessControl.DirectorySecurity directorySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Create(System::Security::AccessControl::DirectorySecurity ^ directorySecurity);" />
      <MemberSignature Language="F#" Value="member this.Create : System.Security.AccessControl.DirectorySecurity -&gt; unit" Usage="directoryInfo.Create directorySecurity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" />
      </Parameters>
      <Docs>
        <param name="directorySecurity">
          <span data-ttu-id="0d8fe-144">디렉터리에 적용할 액세스 제어입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-144">The access control to apply to the directory.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d8fe-145">
            <see cref="T:System.Security.AccessControl.DirectorySecurity" /> 개체를 사용하여 디렉터리를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-145">Creates a directory using a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d8fe-146">이 메서드 오버 로드를 사용 하 여 보안 적용 되기 전에 디렉터리에 액세스할 수 없는 가능성이 있으므로 액세스 제어를 사용 하 여 디렉터리를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-146">Use this method overload to create a directory with access control, so there is no chance the directory can be accessed before security is applied.</span></span>  
  
 <span data-ttu-id="0d8fe-147">해당 디렉터리가 이미 존재 하는 경우 두이 일은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-147">If the directory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="0d8fe-148">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-148">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0d8fe-149">
            <paramref name="path" />로 지정한 디렉터리가 읽기 전용이거나 빈 디렉터리가 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-149">The directory specified by <paramref name="path" /> is read-only or is not empty.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="0d8fe-150">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-150">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0d8fe-151">
            <paramref name="path" />가 빈 문자열이거나 공백만 포함하거나 <see cref="F:System.IO.Path.InvalidPathChars" />로 정의된 하나 이상의 잘못된 문자를 포함합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-151">
              <paramref name="path" /> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0d8fe-152">
            <paramref name="path" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-152">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="0d8fe-153">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-153">The specified path, file name, or both exceed the system-defined maximum length.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="0d8fe-154">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-154">The specified path is invalid, such as being on an unmapped drive.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0d8fe-155">콜론(:) 문자만으로 디렉터리를 만들려고 했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-155">Creating a directory with only the colon (:) character was attempted.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="0d8fe-156">디렉터리를 만들 수 있는 권한입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-156">for permission to create a directory.</span>
          </span>
          <span data-ttu-id="0d8fe-157">보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-157">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="0d8fe-158">연결 된 열거형: <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-158">Associated enumeration: <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateSubdirectory">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0d8fe-159">지정된 경로에 하위 디렉터리를 하나 이상 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-159">Creates a subdirectory or subdirectories on the specified path.</span>
          </span>
          <span data-ttu-id="0d8fe-160">지정된 경로는 <see cref="T:System.IO.DirectoryInfo" /> 클래스의 이 인스턴스에 대한 상대적 경로일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-160">The specified path can be relative to this instance of the <see cref="T:System.IO.DirectoryInfo" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateSubdirectory">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo CreateSubdirectory (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo CreateSubdirectory(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSubdirectory (path As String) As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::DirectoryInfo ^ CreateSubdirectory(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.CreateSubdirectory : string -&gt; System.IO.DirectoryInfo" Usage="directoryInfo.CreateSubdirectory path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="0d8fe-161">지정된 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-161">The specified path.</span>
          </span>
          <span data-ttu-id="0d8fe-162">이 경로는 다른 디스크 볼륨이나 UNC(Universal Naming Convention) 이름이 될 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-162">This cannot be a different disk volume or Universal Naming Convention (UNC) name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d8fe-163">지정된 경로에 하위 디렉터리를 하나 이상 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-163">Creates a subdirectory or subdirectories on the specified path.</span>
          </span>
          <span data-ttu-id="0d8fe-164">지정된 경로는 <see cref="T:System.IO.DirectoryInfo" /> 클래스의 이 인스턴스에 대한 상대적 경로일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-164">The specified path can be relative to this instance of the <see cref="T:System.IO.DirectoryInfo" /> class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d8fe-165">
            <paramref name="path" />에 지정된 마지막 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-165">The last directory specified in <paramref name="path" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d8fe-166">에 지정 된 모든 디렉터리가 `path` 하지 않으면 만들어집니다 일부 `path` 올바르지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-166">Any and all directories specified in `path` are created, unless some part of `path` is invalid.</span></span> <span data-ttu-id="0d8fe-167">`path` 매개 변수는 파일 경로가 아닌 디렉터리 경로 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-167">The `path` parameter specifies a directory path, not a file path.</span></span> <span data-ttu-id="0d8fe-168">하위 디렉터리에 이미 있으면이 메서드는 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-168">If the subdirectory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="0d8fe-169">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-169">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d8fe-170">다음 예제에서는 하위 디렉터리를 만드는 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-170">The following example demonstrates creating a subdirectory.</span></span> <span data-ttu-id="0d8fe-171">이 예제에서는 만든된 디렉터리를 만든 후 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-171">In this example, the created directories are removed once created.</span></span> <span data-ttu-id="0d8fe-172">따라서이 샘플을 테스트 하려면 줄을 주석 처리를 삭제 코드에서입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-172">Therefore, to test this sample, comment out the delete lines in the code.</span></span>  
  
 [!code-cpp[directoryinfocreatesub#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfocreatesub/CPP/directoryinfocreatesub.cpp#1)]
 [!code-csharp[directoryinfocreatesub#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfocreatesub/CS/directoryinfocreatesub.cs#1)]
 [!code-vb[directoryinfocreatesub#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfocreatesub/VB/directoryinfocreatesub.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0d8fe-173">
            <paramref name="path" />가 올바른 파일 경로를 지정하지 않거나 잘못된 <see langword="DirectoryInfo" /> 문자를 포함합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-173">
              <paramref name="path" /> does not specify a valid file path or contains invalid <see langword="DirectoryInfo" /> characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0d8fe-174">
            <paramref name="path" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-174">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="0d8fe-175">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-175">The specified path is invalid, such as being on an unmapped drive.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0d8fe-176">하위 디렉터리를 만들 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-176">The subdirectory cannot be created.</span>
          </span>
          <span data-ttu-id="0d8fe-177">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-177">-or-</span>
          </span>
          <span data-ttu-id="0d8fe-178">
            <paramref name="path" />에 지정된 이름을 갖는 파일 또는 디렉터리가 이미 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-178">A file or directory already has the name specified by <paramref name="path" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="0d8fe-179">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-179">The specified path, file name, or both exceed the system-defined maximum length.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="0d8fe-180">호출자가 디렉터리를 만들기 위한 코드 액세스 권한이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-180">The caller does not have code access permission to create the directory.</span>
          </span>
          <span data-ttu-id="0d8fe-181">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-181">-or-</span>
          </span>
          <span data-ttu-id="0d8fe-182">호출자가 <see cref="T:System.IO.DirectoryInfo" /> 개체가 설명하는 디렉터리를 읽기 위한 코드 액세스 권한이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-182">The caller does not have code access permission to read the directory described by the returned <see cref="T:System.IO.DirectoryInfo" /> object.</span>
          </span>
          <span data-ttu-id="0d8fe-183">이 문제는 <paramref name="path" /> 매개 변수가 기존 디렉터리를 설명할 때 발생할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-183">This can occur when the <paramref name="path" /> parameter describes an existing directory.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0d8fe-184">
            <paramref name="path" />에 드라이브 레이블("C:\\")에 속하지 않는 콜론 문자(:)가 포함되어 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-184">
              <paramref name="path" /> contains a colon character (:) that is not part of a drive label ("C:\\").</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="0d8fe-185">페이지를 읽고 파일을 작성 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-185">for reading and writing files.</span>
          </span>
          <span data-ttu-id="0d8fe-186">연관 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-186">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateSubdirectory">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo CreateSubdirectory (string path, System.Security.AccessControl.DirectorySecurity directorySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo CreateSubdirectory(string path, class System.Security.AccessControl.DirectorySecurity directorySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::DirectoryInfo ^ CreateSubdirectory(System::String ^ path, System::Security::AccessControl::DirectorySecurity ^ directorySecurity);" />
      <MemberSignature Language="F#" Value="member this.CreateSubdirectory : string * System.Security.AccessControl.DirectorySecurity -&gt; System.IO.DirectoryInfo" Usage="directoryInfo.CreateSubdirectory (path, directorySecurity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="0d8fe-187">지정된 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-187">The specified path.</span>
          </span>
          <span data-ttu-id="0d8fe-188">이 경로는 다른 디스크 볼륨이나 UNC(Universal Naming Convention) 이름이 될 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-188">This cannot be a different disk volume or Universal Naming Convention (UNC) name.</span>
          </span>
        </param>
        <param name="directorySecurity">
          <span data-ttu-id="0d8fe-189">적용할 보안입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-189">The security to apply.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d8fe-190">지정된 경로에 지정된 보안을 사용하여 하위 디렉터리를 하나 이상 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-190">Creates a subdirectory or subdirectories on the specified path with the specified security.</span>
          </span>
          <span data-ttu-id="0d8fe-191">지정된 경로는 <see cref="T:System.IO.DirectoryInfo" /> 클래스의 이 인스턴스에 대한 상대적 경로일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-191">The specified path can be relative to this instance of the <see cref="T:System.IO.DirectoryInfo" /> class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d8fe-192">
            <paramref name="path" />에 지정된 마지막 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-192">The last directory specified in <paramref name="path" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d8fe-193">에 지정 된 모든 디렉터리가 `path` 하지 않으면 만들어집니다 일부 `path` 올바르지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-193">Any and all directories specified in `path` are created, unless some part of `path` is invalid.</span></span> <span data-ttu-id="0d8fe-194">`path` 매개 변수는 파일 경로가 아닌 디렉터리 경로 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-194">The `path` parameter specifies a directory path, not a file path.</span></span> <span data-ttu-id="0d8fe-195">하위 디렉터리에 이미 있으면이 메서드는 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-195">If the subdirectory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="0d8fe-196">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-196">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0d8fe-197">
            <paramref name="path" />가 올바른 파일 경로를 지정하지 않거나 잘못된 <see langword="DirectoryInfo" /> 문자를 포함합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-197">
              <paramref name="path" /> does not specify a valid file path or contains invalid <see langword="DirectoryInfo" /> characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0d8fe-198">
            <paramref name="path" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-198">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="0d8fe-199">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-199">The specified path is invalid, such as being on an unmapped drive.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0d8fe-200">하위 디렉터리를 만들 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-200">The subdirectory cannot be created.</span>
          </span>
          <span data-ttu-id="0d8fe-201">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-201">-or-</span>
          </span>
          <span data-ttu-id="0d8fe-202">
            <paramref name="path" />에 지정된 이름을 갖는 파일 또는 디렉터리가 이미 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-202">A file or directory already has the name specified by <paramref name="path" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="0d8fe-203">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-203">The specified path, file name, or both exceed the system-defined maximum length.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="0d8fe-204">호출자가 디렉터리를 만들기 위한 코드 액세스 권한이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-204">The caller does not have code access permission to create the directory.</span>
          </span>
          <span data-ttu-id="0d8fe-205">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-205">-or-</span>
          </span>
          <span data-ttu-id="0d8fe-206">호출자가 <see cref="T:System.IO.DirectoryInfo" /> 개체가 설명하는 디렉터리를 읽기 위한 코드 액세스 권한이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-206">The caller does not have code access permission to read the directory described by the returned <see cref="T:System.IO.DirectoryInfo" /> object.</span>
          </span>
          <span data-ttu-id="0d8fe-207">이 문제는 <paramref name="path" /> 매개 변수가 기존 디렉터리를 설명할 때 발생할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-207">This can occur when the <paramref name="path" /> parameter describes an existing directory.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0d8fe-208">
            <paramref name="path" />에 드라이브 레이블("C:\\")에 속하지 않는 콜론 문자(:)가 포함되어 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-208">
              <paramref name="path" /> contains a colon character (:) that is not part of a drive label ("C:\\").</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="0d8fe-209">페이지를 읽고 파일을 작성 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-209">for reading and writing files.</span>
          </span>
          <span data-ttu-id="0d8fe-210">연관 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-210">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Delete">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0d8fe-211">경로에서 <see cref="T:System.IO.DirectoryInfo" /> 및 해당 내용을 삭제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-211">Deletes a <see cref="T:System.IO.DirectoryInfo" /> and its contents from a path.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public override void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Delete();" />
      <MemberSignature Language="F#" Value="override this.Delete : unit -&gt; unit" Usage="directoryInfo.Delete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0d8fe-212">
            <see cref="T:System.IO.DirectoryInfo" />가 비어 있으면 이를 삭제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-212">Deletes this <see cref="T:System.IO.DirectoryInfo" /> if it is empty.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d8fe-213">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-213">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d8fe-214">다음 예에서는 비어 있지 않은 디렉터리를 삭제 하려고 하면 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-214">The following example throws an exception if you attempt to delete a directory that is not empty.</span></span>  
  
 [!code-cpp[DirInfo Delete1#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Delete1/CPP/dirinfo delete1.cpp#1)]
 [!code-csharp[DirInfo Delete1#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Delete1/CS/dirinfo delete1.cs#1)]
 [!code-vb[DirInfo Delete1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Delete1/VB/dirinfo delete1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="0d8fe-215">디렉터리에 읽기 전용 파일이 포함되어 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-215">The directory contains a read-only file.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="0d8fe-216">이 <see cref="T:System.IO.DirectoryInfo" /> 개체가 설명하는 디렉터리가 없거나 찾을 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-216">The directory described by this <see cref="T:System.IO.DirectoryInfo" /> object does not exist or could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0d8fe-217">디렉터리가 비어 있지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-217">The directory is not empty.</span>
          </span>
          <span data-ttu-id="0d8fe-218">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-218">-or-</span>
          </span>
          <span data-ttu-id="0d8fe-219">이 디렉터리는 응용 프로그램의 현재 작업 디렉터리입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-219">The directory is the application's current working directory.</span>
          </span>
          <span data-ttu-id="0d8fe-220">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-220">-or-</span>
          </span>
          <span data-ttu-id="0d8fe-221">디렉터리에 대해 열린 핸들이 있고 운영 체제가 Windows XP 또는 이전 버전입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-221">There is an open handle on the directory, and the operating system is Windows XP or earlier.</span>
          </span>
          <span data-ttu-id="0d8fe-222">이 열린 핸들은 디렉터리를 열거하면 발생할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-222">This open handle can result from enumerating directories.</span>
          </span>
          <span data-ttu-id="0d8fe-223">자세한 내용은 [방법: 디렉터리 및 파일 열거](~/docs/standard/io/how-to-enumerate-directories-and-files.md)를 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-223">For more information, see [How to: Enumerate Directories and Files](~/docs/standard/io/how-to-enumerate-directories-and-files.md).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="0d8fe-224">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-224">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="0d8fe-225">디렉터리를 작성 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-225">for writing directories.</span>
          </span>
          <span data-ttu-id="0d8fe-226">연결 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-226">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete (bool recursive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete(bool recursive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Delete(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete (recursive As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete(bool recursive);" />
      <MemberSignature Language="F#" Value="override this.Delete : bool -&gt; unit" Usage="directoryInfo.Delete recursive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recursive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="recursive">
          <span data-ttu-id="0d8fe-227">이 디렉터리, 하위 디렉터리 및 모든 파일을 삭제하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-227">
              <see langword="true" /> to delete this directory, its subdirectories, and all files; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d8fe-228">하위 디렉터리와 파일을 삭제할지를 지정하여 <see cref="T:System.IO.DirectoryInfo" />의 이 인스턴스를 삭제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-228">Deletes this instance of a <see cref="T:System.IO.DirectoryInfo" />, specifying whether to delete subdirectories and files.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d8fe-229">경우는 `DirectoryInfo` 파일 또는 하위 디렉터리에이 메서드를 삭제 합니다 `DirectoryInfo` 경우에 `recursive` 는 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-229">If the `DirectoryInfo` has no files or subdirectories, this method deletes the `DirectoryInfo` even if `recursive` is `false`.</span></span> <span data-ttu-id="0d8fe-230">삭제 하려고를 `DirectoryInfo` 비어 있는 경우 `recursive` 됩니다 `false` throw는 <xref:System.IO.IOException>합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-230">Attempting to delete a `DirectoryInfo` that is not empty when `recursive` is `false` throws an <xref:System.IO.IOException>.</span></span>  
  
 <span data-ttu-id="0d8fe-231">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-231">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d8fe-232">다음 예제에서는 디렉터리를 삭제 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-232">The following example demonstrates deleting a directory.</span></span> <span data-ttu-id="0d8fe-233">디렉터리가 제거 되기 때문에 먼저 주석 처리를 `Delete` 디렉터리가 존재 하는지 테스트할 줄.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-233">Because the directory is removed, first comment out the `Delete` line to test that the directory exists.</span></span> <span data-ttu-id="0d8fe-234">그런 다음 동일한 디렉터리가 성공적으로 제거 되었는지 테스트 하는 코드 줄 주석 처리를 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-234">Then uncomment the same line of code to test that the directory was removed successfully.</span></span>  
  
 [!code-cpp[directoryinfodelete#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfodelete/CPP/directoryinfodelete.cpp#1)]
 [!code-csharp[directoryinfodelete#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfodelete/CS/directoryinfodelete.cs#1)]
 [!code-vb[directoryinfodelete#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfodelete/VB/directoryinfodelete.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="0d8fe-235">디렉터리에 읽기 전용 파일이 포함되어 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-235">The directory contains a read-only file.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="0d8fe-236">이 <see cref="T:System.IO.DirectoryInfo" /> 개체가 설명하는 디렉터리가 없거나 찾을 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-236">The directory described by this <see cref="T:System.IO.DirectoryInfo" /> object does not exist or could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0d8fe-237">디렉터리가 읽기 전용인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-237">The directory is read-only.</span>
          </span>
          <span data-ttu-id="0d8fe-238">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-238">-or-</span>
          </span>
          <span data-ttu-id="0d8fe-239">디렉터리에 하나 이상의 파일 또는 하위 디렉터리가 포함되어 있고 <paramref name="recursive" />가 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-239">The directory contains one or more files or subdirectories and <paramref name="recursive" /> is <see langword="false" />.</span>
          </span>
          <span data-ttu-id="0d8fe-240">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-240">-or-</span>
          </span>
          <span data-ttu-id="0d8fe-241">이 디렉터리는 응용 프로그램의 현재 작업 디렉터리입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-241">The directory is the application's current working directory.</span>
          </span>
          <span data-ttu-id="0d8fe-242">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-242">-or-</span>
          </span>
          <span data-ttu-id="0d8fe-243">디렉터리 또는 해당 파일 중 하나에 대해 열린 핸들이 있고 운영 체제가 Windows XP 또는 이전 버전입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-243">There is an open handle on the directory or on one of its files, and the operating system is Windows XP or earlier.</span>
          </span>
          <span data-ttu-id="0d8fe-244">이 열린 핸들은 디렉터리 및 파일을 열거하면 발생할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-244">This open handle can result from enumerating directories and files.</span>
          </span>
          <span data-ttu-id="0d8fe-245">자세한 내용은 [방법: 디렉터리 및 파일 열거](~/docs/standard/io/how-to-enumerate-directories-and-files.md)를 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-245">For more information, see [How to: Enumerate Directories and Files](~/docs/standard/io/how-to-enumerate-directories-and-files.md).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="0d8fe-246">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-246">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermissionAccess">
          <span data-ttu-id="0d8fe-247">쓰기에 대해 쓰기 권한이 필요한 플래그는 <see langword="DirectoryInfo" /> 및 하위 디렉터리를 삭제할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-247">Write flag required for write permission to the <see langword="DirectoryInfo" /> and subdirectories to be deleted.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnumerateDirectories">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0d8fe-248">현재 디렉터리에 있는 디렉터리 정보의 열거 가능 컬렉션을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-248">Returns an enumerable collection of directory information in the current directory.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateDirectories () As IEnumerable(Of DirectoryInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories();" />
      <MemberSignature Language="F#" Value="member this.EnumerateDirectories : unit -&gt; seq&lt;System.IO.DirectoryInfo&gt;" Usage="directoryInfo.EnumerateDirectories " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0d8fe-249">현재 디렉터리에 있는 디렉터리 정보의 열거 가능 컬렉션을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-249">Returns an enumerable collection of directory information in the current directory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d8fe-250">현재 디렉터리에 있는 디렉터리의 열거 가능 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-250">An enumerable collection of directories in the current directory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d8fe-251">합니다 <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> 고 <xref:System.IO.DirectoryInfo.GetDirectories%2A> 메서드 차이점은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-251">The <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> and <xref:System.IO.DirectoryInfo.GetDirectories%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="0d8fe-252">사용 하는 경우 <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, 컬렉션을 열거 하는 것이 먼저 <xref:System.IO.DirectoryInfo> 전체 컬렉션에 반환 되기 전에 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-252">When you use <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, you can start enumerating the collection of <xref:System.IO.DirectoryInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="0d8fe-253">사용 하는 경우 <xref:System.IO.DirectoryInfo.GetDirectories%2A>, 전체 배열의 기다려야 <xref:System.IO.DirectoryInfo> 개체를 배열에 액세스 하려면 먼저 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-253">When you use <xref:System.IO.DirectoryInfo.GetDirectories%2A>, you must wait for the whole array of <xref:System.IO.DirectoryInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="0d8fe-254">따라서 여러 파일 및 디렉터리를 사용 하 여 작업할 때 <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> 더 효율적일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-254">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="0d8fe-255">이 메서드는 다음 값을 미리 채웁니다 <xref:System.IO.DirectoryInfo> 속성:</span><span class="sxs-lookup"><span data-stu-id="0d8fe-255">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="0d8fe-256">반환된 된 컬렉션은 캐시 되지 않습니다. 각 호출에는 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 메서드 컬렉션에 새 열거형을를 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-256">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on  the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d8fe-257">다음 예제에서는 C:\Program Files 디렉터리 아래 하위 디렉터리를 열거 하 고 LINQ 쿼리를 사용 하 여 값을 확인 하 여 2009 전에 생성 된 모든 디렉터리의 이름을 반환 하는 <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-257">The following example enumerates the subdirectories under the C:\Program Files directory and uses a LINQ query to return the names of all directories that were created before 2009 by checking the value of the <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A> property.</span></span>  
  
 <span data-ttu-id="0d8fe-258">하위 디렉터리의 이름에만 필요한 경우 사용 하 여 정적 <xref:System.IO.Directory> 성능 향상을 위해 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-258">If you only need the names of the subdirectories, use the static <xref:System.IO.Directory> class for better performance.</span></span> <span data-ttu-id="0d8fe-259">예를 들어 참조 된 <xref:System.IO.Directory.EnumerateDirectories%28System.String%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-259">For an example, see the <xref:System.IO.Directory.EnumerateDirectories%28System.String%29> method.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumDirs#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumdirs/cs/program.cs#1)]
 [!code-vb[System.IO.DirectoryInfo.EnumDirs#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumdirs/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="0d8fe-260">
            <see cref="T:System.IO.DirectoryInfo" /> 개체에 캡슐화된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-260">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="0d8fe-261">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-261">The caller does not have the required permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateDirectories (searchPattern As String) As IEnumerable(Of DirectoryInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.EnumerateDirectories : string -&gt; seq&lt;System.IO.DirectoryInfo&gt;" Usage="directoryInfo.EnumerateDirectories searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern">
          <span data-ttu-id="0d8fe-262">디렉터리 이름과 일치하는지 비교할 검색 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-262">The search string to match against the names of directories.</span>
          </span>
          <span data-ttu-id="0d8fe-263">이 매개 변수는 유효한 리터럴 경로와 와일드카드(\* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-263">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d8fe-264">지정된 검색 패턴과 일치하는 디렉터리 정보의 열거 가능 컬렉션을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-264">Returns an enumerable collection of directory information that matches a specified search pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d8fe-265">
            <paramref name="searchPattern" />과 일치하는 디렉터리의 열거 가능 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-265">An enumerable collection of directories that matches <paramref name="searchPattern" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d8fe-266">`searchPattern` 리터럴 및 와일드 카드 문자의 조합일 수 있습니다 하지만 정규식을 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-266">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="0d8fe-267">다음 와일드 카드 지정 자가 허용 됩니다 `searchPattern`합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-267">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="0d8fe-268">와일드 카드 지정자</span><span class="sxs-lookup"><span data-stu-id="0d8fe-268">Wildcard specifier</span></span>|<span data-ttu-id="0d8fe-269">일치 항목</span><span class="sxs-lookup"><span data-stu-id="0d8fe-269">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="0d8fe-270">\*(별표)</span><span class="sxs-lookup"><span data-stu-id="0d8fe-270">\* (asterisk)</span></span>|<span data-ttu-id="0d8fe-271">해당 위치에 0 개 이상의 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-271">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="0d8fe-272">?</span><span class="sxs-lookup"><span data-stu-id="0d8fe-272">?</span></span> <span data-ttu-id="0d8fe-273">(물음표)</span><span class="sxs-lookup"><span data-stu-id="0d8fe-273">(question mark)</span></span>|<span data-ttu-id="0d8fe-274">해당 위치에 0 개 이상의 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-274">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="0d8fe-275">와일드 카드 문자 이외의 문자는 리터럴 문자.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-275">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="0d8fe-276">예를 들어, 문자열 "\* t"에서 문자 "t"로 끝나는 모든 이름 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-276">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="0d8fe-277">".</span><span class="sxs-lookup"><span data-stu-id="0d8fe-277">".</span></span> <span data-ttu-id="0d8fe-278">합니다 `searchPattern` 문자열 "s\*"의 모든 이름 검색 `path` "s"로 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-278">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="0d8fe-279">합니다 <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> 고 <xref:System.IO.DirectoryInfo.GetDirectories%2A> 메서드 차이점은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-279">The <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> and <xref:System.IO.DirectoryInfo.GetDirectories%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="0d8fe-280">사용 하는 경우 <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, 컬렉션을 열거 하는 것이 먼저 <xref:System.IO.DirectoryInfo> 전체 컬렉션에 반환 되기 전에 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-280">When you use <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, you can start enumerating the collection of <xref:System.IO.DirectoryInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="0d8fe-281">사용 하는 경우 <xref:System.IO.DirectoryInfo.GetDirectories%2A>, 전체 배열의 기다려야 <xref:System.IO.DirectoryInfo> 개체를 배열에 액세스 하려면 먼저 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-281">When you use <xref:System.IO.DirectoryInfo.GetDirectories%2A>, you must wait for the whole array of <xref:System.IO.DirectoryInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="0d8fe-282">따라서 여러 파일 및 디렉터리를 사용 하 여 작업할 때 <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> 더 효율적일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-282">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="0d8fe-283">이 메서드는 다음 값을 미리 채웁니다 <xref:System.IO.DirectoryInfo> 속성:</span><span class="sxs-lookup"><span data-stu-id="0d8fe-283">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="0d8fe-284">반환된 된 컬렉션은 캐시 되지 않습니다. 각 호출에는 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 메서드 컬렉션에 새 열거형을를 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-284">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on  the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0d8fe-285">
            <paramref name="searchPattern" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-285">
              <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="0d8fe-286">
            <see cref="T:System.IO.DirectoryInfo" /> 개체에 캡슐화된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-286">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="0d8fe-287">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-287">The caller does not have the required permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.EnumerateDirectories : string * System.IO.EnumerationOptions -&gt; seq&lt;System.IO.DirectoryInfo&gt;" Usage="directoryInfo.EnumerateDirectories (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.EnumerateDirectories : string * System.IO.SearchOption -&gt; seq&lt;System.IO.DirectoryInfo&gt;" Usage="directoryInfo.EnumerateDirectories (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" />
      </Parameters>
      <Docs>
        <param name="searchPattern">
          <span data-ttu-id="0d8fe-288">디렉터리 이름과 일치하는지 비교할 검색 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-288">The search string to match against the names of directories.</span>
          </span>
          <span data-ttu-id="0d8fe-289">이 매개 변수는 유효한 리터럴 경로와 와일드카드(\* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-289">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span>
          </span>
        </param>
        <param name="searchOption">
          <span data-ttu-id="0d8fe-290">검색 작업에 현재 디렉터리만 포함할지 아니면 모든 하위 디렉터리를 포함할지를 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-290">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span>
          </span>
          <span data-ttu-id="0d8fe-291">기본값은 <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-291">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d8fe-292">지정된 검색 패턴 및 하위 디렉터리 검색 옵션과 일치하는 디렉터리 정보의 열거 가능 컬렉션을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-292">Returns an enumerable collection of directory information that matches a specified search pattern and search subdirectory option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d8fe-293">
            <paramref name="searchPattern" /> 및 <paramref name="searchOption" />과 일치하는 디렉터리의 열거 가능 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-293">An enumerable collection of directories that matches <paramref name="searchPattern" /> and <paramref name="searchOption" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d8fe-294">`searchPattern` 리터럴 및 와일드 카드 문자의 조합일 수 있습니다 하지만 정규식을 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-294">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="0d8fe-295">다음 와일드 카드 지정 자가 허용 됩니다 `searchPattern`합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-295">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="0d8fe-296">와일드 카드 지정자</span><span class="sxs-lookup"><span data-stu-id="0d8fe-296">Wildcard specifier</span></span>|<span data-ttu-id="0d8fe-297">일치 항목</span><span class="sxs-lookup"><span data-stu-id="0d8fe-297">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="0d8fe-298">\*(별표)</span><span class="sxs-lookup"><span data-stu-id="0d8fe-298">\* (asterisk)</span></span>|<span data-ttu-id="0d8fe-299">해당 위치에 0 개 이상의 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-299">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="0d8fe-300">?</span><span class="sxs-lookup"><span data-stu-id="0d8fe-300">?</span></span> <span data-ttu-id="0d8fe-301">(물음표)</span><span class="sxs-lookup"><span data-stu-id="0d8fe-301">(question mark)</span></span>|<span data-ttu-id="0d8fe-302">해당 위치에 0 개 이상의 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-302">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="0d8fe-303">와일드 카드 문자 이외의 문자는 리터럴 문자.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-303">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="0d8fe-304">예를 들어, 문자열 "\* t"에서 문자 "t"로 끝나는 모든 이름 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-304">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="0d8fe-305">".</span><span class="sxs-lookup"><span data-stu-id="0d8fe-305">".</span></span> <span data-ttu-id="0d8fe-306">합니다 `searchPattern` 문자열 "s\*"의 모든 이름 검색 `path` "s"로 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-306">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="0d8fe-307">합니다 <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> 고 <xref:System.IO.DirectoryInfo.GetDirectories%2A> 메서드 차이점은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-307">The <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> and <xref:System.IO.DirectoryInfo.GetDirectories%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="0d8fe-308">사용 하는 경우 <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, 컬렉션을 열거 하는 것이 먼저 <xref:System.IO.DirectoryInfo> 전체 컬렉션에 반환 되기 전에 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-308">When you use <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, you can start enumerating the collection of <xref:System.IO.DirectoryInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="0d8fe-309">사용 하는 경우 <xref:System.IO.DirectoryInfo.GetDirectories%2A>, 전체 배열의 기다려야 <xref:System.IO.DirectoryInfo> 개체를 배열에 액세스 하려면 먼저 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-309">When you use <xref:System.IO.DirectoryInfo.GetDirectories%2A>, you must wait for the whole array of <xref:System.IO.DirectoryInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="0d8fe-310">따라서 여러 파일 및 디렉터리를 사용 하 여 작업할 때 <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> 더 효율적일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-310">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="0d8fe-311">이 메서드는 다음 값을 미리 채웁니다 <xref:System.IO.DirectoryInfo> 속성:</span><span class="sxs-lookup"><span data-stu-id="0d8fe-311">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="0d8fe-312">반환된 된 컬렉션은 캐시 되지 않습니다. 각 호출에는 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 메서드 컬렉션에 새 열거형을를 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-312">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on  the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d8fe-313">이 메서드를 사용 하는 다음 예제에서는 지정된 된 디렉터리에서 시작 하며 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 시작 디렉터리 내 디렉터리와 파일을 열거 하 고 모든 세부 정보 표시 방법 개 10MB의에서 파일 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-313">The following example, starting from a specified directory, uses this method and the <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> method to enumerate the files and directories within the start directory and display details of any files over 10 MB in size.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumerateDirectories#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumeratedirectories/cs/program.cs#1)]
 [!code-vb[System.IO.DirectoryInfo.EnumerateDirectories#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumeratedirectories/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0d8fe-314">
            <paramref name="searchPattern" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-314">
              <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0d8fe-315">
            <paramref name="searchOption" />은 유효한 <see cref="T:System.IO.SearchOption" /> 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-315">
              <paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="0d8fe-316">
            <see cref="T:System.IO.DirectoryInfo" /> 개체에 캡슐화된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-316">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="0d8fe-317">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-317">The caller does not have the required permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnumerateFiles">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0d8fe-318">현재 디렉터리에 있는 파일 정보의 열거 가능 컬렉션을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-318">Returns an enumerable collection of file information in the current directory.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFiles () As IEnumerable(Of FileInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles();" />
      <MemberSignature Language="F#" Value="member this.EnumerateFiles : unit -&gt; seq&lt;System.IO.FileInfo&gt;" Usage="directoryInfo.EnumerateFiles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0d8fe-319">현재 디렉터리에 있는 파일 정보의 열거 가능 컬렉션을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-319">Returns an enumerable collection of file information in the current directory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d8fe-320">현재 디렉터리에 있는 파일의 열거 가능 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-320">An enumerable collection of the files in the current directory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d8fe-321">합니다 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 고 <xref:System.IO.DirectoryInfo.GetFiles%2A> 메서드 차이점은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-321">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="0d8fe-322">사용 하는 경우 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, 컬렉션을 열거 하는 것이 먼저 <xref:System.IO.FileInfo> 전체 컬렉션에 반환 되기 전에 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-322">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="0d8fe-323">사용 하는 경우 <xref:System.IO.DirectoryInfo.GetFiles%2A>, 전체 배열의 기다려야 <xref:System.IO.FileInfo> 개체를 배열에 액세스 하려면 먼저 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-323">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="0d8fe-324">따라서 여러 파일 및 디렉터리를 사용 하 여 작업할 때 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 더 효율적일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-324">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="0d8fe-325">이 메서드는 다음 값을 미리 채웁니다 <xref:System.IO.FileInfo> 속성:</span><span class="sxs-lookup"><span data-stu-id="0d8fe-325">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
 <span data-ttu-id="0d8fe-326">반환된 된 컬렉션은 캐시 되지 않습니다. 각 호출에는 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 메서드 컬렉션에 새 열거형을를 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-326">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d8fe-327">다음 예제에서는 지정된 된 디렉터리에서 파일을 열거 하 고 LINQ 쿼리를 사용 하 여 값을 확인 하 여 2009 전에 생성 된 모든 파일의 이름을 반환 하는 <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-327">The following example enumerates the files under a specified directory and uses a LINQ query to return the names of all files that were created before 2009 by checking the value of the <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A> property.</span></span>  
  
 <span data-ttu-id="0d8fe-328">파일의 이름에만 필요한 경우 사용 하 여 정적 <xref:System.IO.Directory> 성능 향상을 위해 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-328">If you only need the names of the files, use the static <xref:System.IO.Directory> class for better performance.</span></span> <span data-ttu-id="0d8fe-329">예를 들어 참조 된 <xref:System.IO.Directory.EnumerateFiles%28System.String%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-329">For an example, see the <xref:System.IO.Directory.EnumerateFiles%28System.String%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program.cs#1)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module1.vb#1)]  
  
 <span data-ttu-id="0d8fe-330">다음 예제에서는 다른 검색 옵션을 사용 하 여 디렉터리의 파일을 열거 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-330">The following example shows how to enumerate files in a directory by using different search options.</span></span> <span data-ttu-id="0d8fe-331">Log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, 및 SubFile.txt 라는 파일에 있는 하위 디렉터리를 명명 된 파일이 있는 디렉터리를 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-331">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program2.cs#2)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="0d8fe-332">
            <see cref="T:System.IO.DirectoryInfo" /> 개체에 캡슐화된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-332">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="0d8fe-333">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-333">The caller does not have the required permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFiles (searchPattern As String) As IEnumerable(Of FileInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFiles : string -&gt; seq&lt;System.IO.FileInfo&gt;" Usage="directoryInfo.EnumerateFiles searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern">
          <span data-ttu-id="0d8fe-334">파일 이름과 일치하는지 비교할 검색 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-334">The search string to match against the names of files.</span>
          </span>
          <span data-ttu-id="0d8fe-335">이 매개 변수는 유효한 리터럴 경로와 와일드카드(\* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-335">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d8fe-336">검색 패턴과 일치하는 파일 정보의 열거 가능 컬렉션을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-336">Returns an enumerable collection of file information that matches a search pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d8fe-337">
            <paramref name="searchPattern" />과 일치하는 파일의 열거 가능 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-337">An enumerable collection of files that matches <paramref name="searchPattern" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d8fe-338">`searchPattern` 리터럴 및 와일드 카드 문자의 조합일 수 있습니다 하지만 정규식을 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-338">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="0d8fe-339">다음 와일드 카드 지정 자가 허용 됩니다 `searchPattern`합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-339">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="0d8fe-340">와일드 카드 지정자</span><span class="sxs-lookup"><span data-stu-id="0d8fe-340">Wildcard specifier</span></span>|<span data-ttu-id="0d8fe-341">일치 항목</span><span class="sxs-lookup"><span data-stu-id="0d8fe-341">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="0d8fe-342">\*(별표)</span><span class="sxs-lookup"><span data-stu-id="0d8fe-342">\* (asterisk)</span></span>|<span data-ttu-id="0d8fe-343">해당 위치에 0 개 이상의 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-343">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="0d8fe-344">?</span><span class="sxs-lookup"><span data-stu-id="0d8fe-344">?</span></span> <span data-ttu-id="0d8fe-345">(물음표)</span><span class="sxs-lookup"><span data-stu-id="0d8fe-345">(question mark)</span></span>|<span data-ttu-id="0d8fe-346">해당 위치에 0 개 이상의 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-346">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="0d8fe-347">와일드 카드 문자 이외의 문자는 리터럴 문자.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-347">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="0d8fe-348">예를 들어, 문자열 "\* t"에서 문자 "t"로 끝나는 모든 이름 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-348">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="0d8fe-349">".</span><span class="sxs-lookup"><span data-stu-id="0d8fe-349">".</span></span> <span data-ttu-id="0d8fe-350">합니다 `searchPattern` 문자열 "s\*"의 모든 이름 검색 `path` "s"로 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-350">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="0d8fe-351">합니다 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 고 <xref:System.IO.DirectoryInfo.GetFiles%2A> 메서드 차이점은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-351">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="0d8fe-352">사용 하는 경우 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, 컬렉션을 열거 하는 것이 먼저 <xref:System.IO.FileInfo> 전체 컬렉션에 반환 되기 전에 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-352">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="0d8fe-353">사용 하는 경우 <xref:System.IO.DirectoryInfo.GetFiles%2A>, 전체 배열의 기다려야 <xref:System.IO.FileInfo> 개체를 배열에 액세스 하려면 먼저 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-353">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="0d8fe-354">따라서 여러 파일 및 디렉터리를 사용 하 여 작업할 때 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 더 효율적일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-354">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="0d8fe-355">이 메서드는 다음 값을 미리 채웁니다 <xref:System.IO.FileInfo> 속성:</span><span class="sxs-lookup"><span data-stu-id="0d8fe-355">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
 <span data-ttu-id="0d8fe-356">반환된 된 컬렉션은 캐시 되지 않습니다. 각 호출에는 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 메서드 컬렉션에 새 열거형을를 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-356">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d8fe-357">다음 예제에서는 다른 검색 옵션을 사용 하 여 디렉터리의 파일을 열거 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-357">The following example shows how to enumerate files in a directory by using different search options.</span></span> <span data-ttu-id="0d8fe-358">Log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, 및 SubFile.txt 라는 파일에 있는 하위 디렉터리를 명명 된 파일이 있는 디렉터리를 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-358">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program2.cs#2)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0d8fe-359">
            <paramref name="searchPattern" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-359">
              <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="0d8fe-360">
            <see cref="T:System.IO.DirectoryInfo" /> 개체에 캡슐화된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-360">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid, (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="0d8fe-361">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-361">The caller does not have the required permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFiles : string * System.IO.EnumerationOptions -&gt; seq&lt;System.IO.FileInfo&gt;" Usage="directoryInfo.EnumerateFiles (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFiles : string * System.IO.SearchOption -&gt; seq&lt;System.IO.FileInfo&gt;" Usage="directoryInfo.EnumerateFiles (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" />
      </Parameters>
      <Docs>
        <param name="searchPattern">
          <span data-ttu-id="0d8fe-362">파일 이름과 일치하는지 비교할 검색 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-362">The search string to match against the names of files.</span>
          </span>
          <span data-ttu-id="0d8fe-363">이 매개 변수는 유효한 리터럴 경로와 와일드카드(\* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-363">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span>
          </span>
        </param>
        <param name="searchOption">
          <span data-ttu-id="0d8fe-364">검색 작업에 현재 디렉터리만 포함할지 아니면 모든 하위 디렉터리를 포함할지를 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-364">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span>
          </span>
          <span data-ttu-id="0d8fe-365">기본값은 <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-365">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d8fe-366">지정된 검색 패턴 및 하위 디렉터리 검색 옵션과 일치하는 파일 정보의 열거 가능 컬렉션을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-366">Returns an enumerable collection of file information that matches a specified search pattern and search subdirectory option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d8fe-367">
            <paramref name="searchPattern" /> 및 <paramref name="searchOption" />과 일치하는 파일의 열거 가능 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-367">An enumerable collection of files that matches <paramref name="searchPattern" /> and <paramref name="searchOption" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d8fe-368">`searchPattern` 리터럴 및 와일드 카드 문자의 조합일 수 있습니다 하지만 정규식을 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-368">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="0d8fe-369">다음 와일드 카드 지정 자가 허용 됩니다 `searchPattern`합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-369">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="0d8fe-370">와일드 카드 지정자</span><span class="sxs-lookup"><span data-stu-id="0d8fe-370">Wildcard specifier</span></span>|<span data-ttu-id="0d8fe-371">일치 항목</span><span class="sxs-lookup"><span data-stu-id="0d8fe-371">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="0d8fe-372">\*(별표)</span><span class="sxs-lookup"><span data-stu-id="0d8fe-372">\* (asterisk)</span></span>|<span data-ttu-id="0d8fe-373">해당 위치에 0 개 이상의 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-373">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="0d8fe-374">?</span><span class="sxs-lookup"><span data-stu-id="0d8fe-374">?</span></span> <span data-ttu-id="0d8fe-375">(물음표)</span><span class="sxs-lookup"><span data-stu-id="0d8fe-375">(question mark)</span></span>|<span data-ttu-id="0d8fe-376">해당 위치에 0 개 이상의 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-376">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="0d8fe-377">와일드 카드 문자 이외의 문자는 리터럴 문자.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-377">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="0d8fe-378">예를 들어, 문자열 "\* t"에서 문자 "t"로 끝나는 모든 이름 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-378">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="0d8fe-379">".</span><span class="sxs-lookup"><span data-stu-id="0d8fe-379">".</span></span> <span data-ttu-id="0d8fe-380">합니다 `searchPattern` 문자열 "s\*"의 모든 이름 검색 `path` "s"로 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-380">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="0d8fe-381">합니다 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 고 <xref:System.IO.DirectoryInfo.GetFiles%2A> 메서드 차이점은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-381">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="0d8fe-382">사용 하는 경우 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, 컬렉션을 열거 하는 것이 먼저 <xref:System.IO.FileInfo> 전체 컬렉션에 반환 되기 전에 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-382">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="0d8fe-383">사용 하는 경우 <xref:System.IO.DirectoryInfo.GetFiles%2A>, 전체 배열의 기다려야 <xref:System.IO.FileInfo> 개체를 배열에 액세스 하려면 먼저 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-383">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="0d8fe-384">따라서 여러 파일 및 디렉터리를 사용 하 여 작업할 때 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 더 효율적일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-384">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="0d8fe-385">이 메서드는 다음 값을 미리 채웁니다 <xref:System.IO.FileInfo> 속성:</span><span class="sxs-lookup"><span data-stu-id="0d8fe-385">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
 <span data-ttu-id="0d8fe-386">반환된 된 컬렉션은 캐시 되지 않습니다. 각 호출에는 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 메서드 컬렉션에 새 열거형을를 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-386">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d8fe-387">다음 예제에서는 다른 검색 옵션을 사용 하 여 디렉터리의 파일을 열거 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-387">The following example shows how to enumerate files in a directory by using different search options.</span></span> <span data-ttu-id="0d8fe-388">Log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, 및 SubFile.txt 라는 파일에 있는 하위 디렉터리를 명명 된 파일이 있는 디렉터리를 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-388">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program2.cs#2)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0d8fe-389">
            <paramref name="searchPattern" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-389">
              <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0d8fe-390">
            <paramref name="searchOption" />은 유효한 <see cref="T:System.IO.SearchOption" /> 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-390">
              <paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="0d8fe-391">
            <see cref="T:System.IO.DirectoryInfo" /> 개체에 캡슐화된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-391">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="0d8fe-392">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-392">The caller does not have the required permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnumerateFileSystemInfos">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0d8fe-393">현재 디렉터리에 있는 파일 시스템 정보의 열거 가능 컬렉션을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-393">Returns an enumerable collection of file system information in the current directory.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFileSystemInfos () As IEnumerable(Of FileSystemInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos();" />
      <MemberSignature Language="F#" Value="member this.EnumerateFileSystemInfos : unit -&gt; seq&lt;System.IO.FileSystemInfo&gt;" Usage="directoryInfo.EnumerateFileSystemInfos " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0d8fe-394">현재 디렉터리에 있는 파일 시스템 정보의 열거 가능 컬렉션을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-394">Returns an enumerable collection of file system information in the current directory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d8fe-395">현재 디렉터리에 있는 파일 시스템 정보의 열거 가능 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-395">An enumerable collection of file system information in the current directory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d8fe-396">합니다 <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> 고 <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> 메서드 차이점은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-396">The <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> and <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="0d8fe-397">사용 하는 경우 <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, 컬렉션을 열거 하는 것이 먼저 <xref:System.IO.FileSystemInfo> 전체 컬렉션에 반환 되기 전에 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-397">When you use <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, you can start enumerating the collection of <xref:System.IO.FileSystemInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="0d8fe-398">사용 하는 경우 <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, 전체 배열의 기다려야 <xref:System.IO.FileSystemInfo> 개체를 배열에 액세스 하려면 먼저 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-398">When you use <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, you must wait for the whole array of <xref:System.IO.FileSystemInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="0d8fe-399">따라서 여러 파일 및 디렉터리를 사용 하 여 작업할 때 <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> 더 효율적일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-399">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="0d8fe-400">이 메서드는 다음 값을 미리 채웁니다 <xref:System.IO.FileSystemInfo> 속성:</span><span class="sxs-lookup"><span data-stu-id="0d8fe-400">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="0d8fe-401">반환된 된 컬렉션은 캐시 되지 않습니다. 각 호출에는 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 메서드 컬렉션에 새 열거형을를 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-401">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="0d8fe-402">
            <see cref="T:System.IO.DirectoryInfo" /> 개체에 캡슐화된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-402">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="0d8fe-403">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-403">The caller does not have the required permission.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFileSystemInfos (searchPattern As String) As IEnumerable(Of FileSystemInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFileSystemInfos : string -&gt; seq&lt;System.IO.FileSystemInfo&gt;" Usage="directoryInfo.EnumerateFileSystemInfos searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern">
          <span data-ttu-id="0d8fe-404">디렉터리 이름과 일치하는지 비교할 검색 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-404">The search string to match against the names of directories.</span>
          </span>
          <span data-ttu-id="0d8fe-405">이 매개 변수는 유효한 리터럴 경로와 와일드카드(\* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-405">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d8fe-406">지정된 검색 패턴과 일치하는 파일 시스템 정보의 열거 가능 컬렉션을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-406">Returns an enumerable collection of file system information that matches a specified search pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d8fe-407">
            <paramref name="searchPattern" />과 일치하는 파일 시스템 정보의 열거 가능 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-407">An enumerable collection of file system information objects that matches <paramref name="searchPattern" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d8fe-408">`searchPattern` 리터럴 및 와일드 카드 문자의 조합일 수 있습니다 하지만 정규식을 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-408">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="0d8fe-409">다음 와일드 카드 지정 자가 허용 됩니다 `searchPattern`합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-409">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="0d8fe-410">와일드 카드 지정자</span><span class="sxs-lookup"><span data-stu-id="0d8fe-410">Wildcard specifier</span></span>|<span data-ttu-id="0d8fe-411">일치 항목</span><span class="sxs-lookup"><span data-stu-id="0d8fe-411">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="0d8fe-412">\*(별표)</span><span class="sxs-lookup"><span data-stu-id="0d8fe-412">\* (asterisk)</span></span>|<span data-ttu-id="0d8fe-413">해당 위치에 0 개 이상의 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-413">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="0d8fe-414">?</span><span class="sxs-lookup"><span data-stu-id="0d8fe-414">?</span></span> <span data-ttu-id="0d8fe-415">(물음표)</span><span class="sxs-lookup"><span data-stu-id="0d8fe-415">(question mark)</span></span>|<span data-ttu-id="0d8fe-416">해당 위치에 0 개 이상의 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-416">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="0d8fe-417">와일드 카드 문자 이외의 문자는 리터럴 문자.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-417">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="0d8fe-418">예를 들어, 문자열 "\* t"에서 문자 "t"로 끝나는 모든 이름 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-418">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="0d8fe-419">".</span><span class="sxs-lookup"><span data-stu-id="0d8fe-419">".</span></span> <span data-ttu-id="0d8fe-420">합니다 `searchPattern` 문자열 "s\*"의 모든 이름 검색 `path` "s"로 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-420">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="0d8fe-421">합니다 <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> 고 <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> 메서드 차이점은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-421">The <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> and <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="0d8fe-422">사용 하는 경우 <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, 컬렉션을 열거 하는 것이 먼저 <xref:System.IO.FileSystemInfo> 전체 컬렉션에 반환 되기 전에 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-422">When you use <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, you can start enumerating the collection of <xref:System.IO.FileSystemInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="0d8fe-423">사용 하는 경우 <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, 전체 배열의 기다려야 <xref:System.IO.FileSystemInfo> 개체를 배열에 액세스 하려면 먼저 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-423">When you use <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, you must wait for the whole array of <xref:System.IO.FileSystemInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="0d8fe-424">따라서 여러 파일 및 디렉터리를 사용 하 여 작업할 때 <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> 더 효율적일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-424">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="0d8fe-425">이 메서드는 다음 값을 미리 채웁니다 <xref:System.IO.FileSystemInfo> 속성:</span><span class="sxs-lookup"><span data-stu-id="0d8fe-425">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="0d8fe-426">반환된 된 컬렉션은 캐시 되지 않습니다. 각 호출에는 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 메서드 컬렉션에 새 열거형을를 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-426">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0d8fe-427">
            <paramref name="searchPattern" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-427">
              <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="0d8fe-428">
            <see cref="T:System.IO.DirectoryInfo" /> 개체에 캡슐화된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-428">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="0d8fe-429">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-429">The caller does not have the required permission.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFileSystemInfos : string * System.IO.EnumerationOptions -&gt; seq&lt;System.IO.FileSystemInfo&gt;" Usage="directoryInfo.EnumerateFileSystemInfos (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFileSystemInfos : string * System.IO.SearchOption -&gt; seq&lt;System.IO.FileSystemInfo&gt;" Usage="directoryInfo.EnumerateFileSystemInfos (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" />
      </Parameters>
      <Docs>
        <param name="searchPattern">
          <span data-ttu-id="0d8fe-430">디렉터리 이름과 일치하는지 비교할 검색 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-430">The search string to match against the names of directories.</span>
          </span>
          <span data-ttu-id="0d8fe-431">이 매개 변수는 유효한 리터럴 경로와 와일드카드(\* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-431">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span>
          </span>
        </param>
        <param name="searchOption">
          <span data-ttu-id="0d8fe-432">검색 작업에 현재 디렉터리만 포함할지 아니면 모든 하위 디렉터리를 포함할지를 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-432">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span>
          </span>
          <span data-ttu-id="0d8fe-433">기본값은 <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-433">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d8fe-434">지정된 검색 패턴 및 하위 디렉터리 검색 옵션과 일치하는 파일 시스템 정보의 열거 가능 컬렉션을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-434">Returns an enumerable collection of file system information that matches a specified search pattern and search subdirectory option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d8fe-435">
            <paramref name="searchPattern" /> 및 <paramref name="searchOption" />과 일치하는 파일 시스템 정보의 열거 가능 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-435">An enumerable collection of file system information objects that matches <paramref name="searchPattern" /> and <paramref name="searchOption" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d8fe-436">`searchPattern` 리터럴 및 와일드 카드 문자의 조합일 수 있습니다 하지만 정규식을 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-436">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="0d8fe-437">다음 와일드 카드 지정 자가 허용 됩니다 `searchPattern`합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-437">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="0d8fe-438">와일드 카드 지정자</span><span class="sxs-lookup"><span data-stu-id="0d8fe-438">Wildcard specifier</span></span>|<span data-ttu-id="0d8fe-439">일치 항목</span><span class="sxs-lookup"><span data-stu-id="0d8fe-439">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="0d8fe-440">\*(별표)</span><span class="sxs-lookup"><span data-stu-id="0d8fe-440">\* (asterisk)</span></span>|<span data-ttu-id="0d8fe-441">해당 위치에 0 개 이상의 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-441">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="0d8fe-442">?</span><span class="sxs-lookup"><span data-stu-id="0d8fe-442">?</span></span> <span data-ttu-id="0d8fe-443">(물음표)</span><span class="sxs-lookup"><span data-stu-id="0d8fe-443">(question mark)</span></span>|<span data-ttu-id="0d8fe-444">해당 위치에 0 개 이상의 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-444">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="0d8fe-445">와일드 카드 문자 이외의 문자는 리터럴 문자.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-445">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="0d8fe-446">예를 들어, 문자열 "\* t"에서 문자 "t"로 끝나는 모든 이름 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-446">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="0d8fe-447">".</span><span class="sxs-lookup"><span data-stu-id="0d8fe-447">".</span></span> <span data-ttu-id="0d8fe-448">합니다 `searchPattern` 문자열 "s\*"의 모든 이름 검색 `path` "s"로 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-448">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="0d8fe-449">합니다 <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> 고 <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> 메서드 차이점은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-449">The <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> and <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="0d8fe-450">사용 하는 경우 <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, 컬렉션을 열거 하는 것이 먼저 <xref:System.IO.FileSystemInfo> 전체 컬렉션에 반환 되기 전에 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-450">When you use <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, you can start enumerating the collection of <xref:System.IO.FileSystemInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="0d8fe-451">사용 하는 경우 <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, 전체 배열의 기다려야 <xref:System.IO.FileSystemInfo> 개체를 배열에 액세스 하려면 먼저 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-451">When you use <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, you must wait for the whole array of <xref:System.IO.FileSystemInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="0d8fe-452">따라서 여러 파일 및 디렉터리를 사용 하 여 작업할 때 <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> 더 효율적일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-452">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="0d8fe-453">이 메서드는 다음 값을 미리 채웁니다 <xref:System.IO.FileSystemInfo> 속성:</span><span class="sxs-lookup"><span data-stu-id="0d8fe-453">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="0d8fe-454">반환된 된 컬렉션은 캐시 되지 않습니다. 각 호출에는 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 메서드 컬렉션에 새 열거형을를 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-454">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0d8fe-455">
            <paramref name="searchPattern" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-455">
              <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0d8fe-456">
            <paramref name="searchOption" />은 유효한 <see cref="T:System.IO.SearchOption" /> 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-456">
              <paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="0d8fe-457">
            <see cref="T:System.IO.DirectoryInfo" /> 개체에 캡슐화된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-457">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="0d8fe-458">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-458">The caller does not have the required permission.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public override bool Exists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Exists" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Exists" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Exists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Exists { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Exists : bool" Usage="System.IO.DirectoryInfo.Exists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d8fe-459">디렉터리가 있는지를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-459">Gets a value indicating whether the directory exists.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d8fe-460">디렉터리가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-460">
              <see langword="true" /> if the directory exists; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d8fe-461">합니다 <xref:System.IO.DirectoryInfo.Exists%2A> 속성이 반환 `false` 지정한 파일이 있는지 확인 하는 동안 오류가 발생 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-461">The <xref:System.IO.DirectoryInfo.Exists%2A> property returns `false` if any error occurs while trying to determine if the specified file exists.</span></span> <span data-ttu-id="0d8fe-462">잘못 된 문자 또는 실패 했거나 누락 된 디스크에 너무 많은 문자를 사용 하 여 파일 이름을 전달할 때 예외를 발생 시키는 상황에서 발생할 수 있습니다 또는 호출자에 게 파일을 읽을 수 있는 사용 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-462">This can occur in situations that raise exceptions such as passing a file name with invalid characters or too many characters, a failing or missing disk, or if the caller does not have permission to read the file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d8fe-463">다음 예제를 사용 하는 방법을 보여 줍니다는 `Exists` 원본 디렉터리가 대상 디렉터리에 복사 하는 컨텍스트의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-463">The following example demonstrates a use of the `Exists` property in the context of copying a source directory to a target directory.</span></span>  
  
 [!code-cpp[DirectoryInfo Usage Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirectoryInfo Usage Example/CPP/copydirectory.cpp#1)]
 [!code-csharp[DirectoryInfo Usage Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirectoryInfo Usage Example/CS/copydirectory.cs#1)]
 [!code-vb[DirectoryInfo Usage Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirectoryInfo Usage Example/VB/copydirectory.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public override string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.FullName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FullName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullName : string" Usage="System.IO.DirectoryInfo.FullName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d8fe-464">디렉터리의 전체 경로를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-464">Gets the full path of the directory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d8fe-465">전체 경로를 포함하는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-465">A string containing the full path.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAccessControl">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0d8fe-466">현재 디렉터리의 ACL(액세스 제어 목록) 항목을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-466">Gets the access control list (ACL) entries for the current directory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d8fe-467">사용 하 여 <xref:System.IO.DirectoryInfo.GetAccessControl%2A> 액세스를 검색 하는 메서드 현재 파일에 대 한 목록 (ACL) 항목을 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-467">Use <xref:System.IO.DirectoryInfo.GetAccessControl%2A> methods to retrieve the access control list (ACL) entries for the current file.</span></span>  
  
 <span data-ttu-id="0d8fe-468">자세한 내용은 [방법: Access Control 목록 항목 추가 또는 제거](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-468">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.DirectorySecurity GetAccessControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.DirectorySecurity GetAccessControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetAccessControl" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl () As DirectorySecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::AccessControl::DirectorySecurity ^ GetAccessControl();" />
      <MemberSignature Language="F#" Value="member this.GetAccessControl : unit -&gt; System.Security.AccessControl.DirectorySecurity" Usage="directoryInfo.GetAccessControl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.DirectorySecurity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0d8fe-469">현재 <see cref="T:System.Security.AccessControl.DirectorySecurity" /> 개체에서 설명하는 디렉터리의 ACL(액세스 제어 목록) 항목을 캡슐화하는 <see cref="T:System.IO.DirectoryInfo" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-469">Gets a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the access control list (ACL) entries for the directory described by the current <see cref="T:System.IO.DirectoryInfo" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d8fe-470">디렉터리의 액세스 제어 규칙을 캡슐화하는 <see cref="T:System.Security.AccessControl.DirectorySecurity" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-470">A <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the access control rules for the directory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d8fe-471">이 메서드 오버 로드는 호출에 해당 하는 <xref:System.IO.Directory.GetAccessControl%2A> 메서드 오버 로드 액세스를 지정 하 고 제어 섹션 <xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType> &#124; <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType> &#124; <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType> (<xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType> `Or` <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType> `Or` <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType> Visual basic에서).</span><span class="sxs-lookup"><span data-stu-id="0d8fe-471">Calling this method overload is equivalent to calling the <xref:System.IO.Directory.GetAccessControl%2A> method overload and specifying the access control sections <xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType> &#124; <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType> &#124; <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType> (<xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType>`Or`<xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType>`Or`<xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType> in Visual Basic).</span></span>  
  
 <span data-ttu-id="0d8fe-472">사용 된 <xref:System.IO.DirectoryInfo.GetAccessControl%2A> 현재 파일에 대 한 액세스 제어 목록 (ACL) 항목을 검색 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-472">Use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to retrieve the access control list (ACL) entries for the current file.</span></span>  
  
 <span data-ttu-id="0d8fe-473">ACL에는 개인 및/또는 그룹 했거나 권한이 없는, 특정된 파일이 나 디렉터리에서 특정 작업을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-473">An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</span></span> <span data-ttu-id="0d8fe-474">자세한 내용은 [방법: Access Control 목록 항목 추가 또는 제거](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-474">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d8fe-475">다음 예제에서는 합니다 <xref:System.IO.DirectoryInfo.GetAccessControl%2A> 고 <xref:System.IO.DirectoryInfo.SetAccessControl%2A> 디렉터리에서 항목 목록 (ACL)을 제어 하는 메서드를 추가 하 고 다음 액세스를 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-475">The following example uses the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> and <xref:System.IO.DirectoryInfo.SetAccessControl%2A> methods to add and then remove an access control list (ACL) entry from a directory.</span></span>  
  
 [!code-cpp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="0d8fe-476">디렉터리를 찾거나 수정할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-476">The directory could not be found or modified.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="0d8fe-477">디렉터리가 읽기 전용인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-477">The directory is read-only.</span>
          </span>
          <span data-ttu-id="0d8fe-478">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-478">-or-</span>
          </span>
          <span data-ttu-id="0d8fe-479">현재 플랫폼이 해당 작업을 지원하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-479">This operation is not supported on the current platform.</span>
          </span>
          <span data-ttu-id="0d8fe-480">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-480">-or-</span>
          </span>
          <span data-ttu-id="0d8fe-481">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-481">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0d8fe-482">디렉터리를 여는 동안 I/O 오류가 발생한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-482">An I/O error occurred while opening the directory.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="0d8fe-483">현재 운영 체제가 Microsoft Windows 2000 이상이 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-483">The current operating system is not Microsoft Windows 2000 or later.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="0d8fe-484">디렉터리에 대 한 액세스 제어 목록 (ACL)을 열거할 수 있는 권한입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-484">for permission to enumerate an access control list (ACL) for a directory.</span>
          </span>
          <span data-ttu-id="0d8fe-485">보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-485">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="0d8fe-486">연관 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />, <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-486">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />, <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.DirectorySecurity GetAccessControl (System.Security.AccessControl.AccessControlSections includeSections);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.DirectorySecurity GetAccessControl(valuetype System.Security.AccessControl.AccessControlSections includeSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl (includeSections As AccessControlSections) As DirectorySecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::AccessControl::DirectorySecurity ^ GetAccessControl(System::Security::AccessControl::AccessControlSections includeSections);" />
      <MemberSignature Language="F#" Value="member this.GetAccessControl : System.Security.AccessControl.AccessControlSections -&gt; System.Security.AccessControl.DirectorySecurity" Usage="directoryInfo.GetAccessControl includeSections" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.DirectorySecurity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
      </Parameters>
      <Docs>
        <param name="includeSections">
          <span data-ttu-id="0d8fe-487">가져올 ACL(액세스 제어 목록) 정보의 형식을 지정하는 <see cref="T:System.Security.AccessControl.AccessControlSections" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-487">One of the <see cref="T:System.Security.AccessControl.AccessControlSections" /> values that specifies the type of access control list (ACL) information to receive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d8fe-488">현재 <see cref="T:System.Security.AccessControl.DirectorySecurity" /> 개체에서 설명하는 디렉터리의 지정된 ACL(액세스 제어 목록) 항목 형식을 캡슐화하는 <see cref="T:System.IO.DirectoryInfo" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-488">Gets a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the specified type of access control list (ACL) entries for the directory described by the current <see cref="T:System.IO.DirectoryInfo" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d8fe-489">
            <see cref="T:System.Security.AccessControl.DirectorySecurity" /> 매개 변수에 설명된 파일의 액세스 제어 규칙을 캡슐화하는 <paramref name="path" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-489">A <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the access control rules for the file described by the <paramref name="path" /> parameter.</span>
          </span>
          <span data-ttu-id="0d8fe-490">예외</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-490">Exceptions</span>
          </span>
          <span data-ttu-id="0d8fe-491">
            <list type="table">
              <listheader>
                <term> 예외 형식  </term>
                <description> 조건  </description>
              </listheader>
              <item>
                <term>
                  <see cref="T:System.SystemException" />
                </term>
                <description> 디렉터리를 찾거나 수정할 수 없습니다.  </description>
              </item>
              <item>
                <term>
                  <see cref="T:System.UnauthorizedAccessException" />
                </term>
                <description> 현재 프로세스에 디렉터리를 열 수 있는 권한이 없습니다.  </description>
              </item>
              <item>
                <term>
                  <see cref="T:System.IO.IOException" />
                </term>
                <description> 디렉터리를 여는 동안 I/O 오류가 발생했습니다.  </description>
              </item>
              <item>
                <term>
                  <see cref="T:System.PlatformNotSupportedException" />
                </term>
                <description> 현재 운영 체제가 Microsoft Windows 2000 이상이 아닙니다.  </description>
              </item>
              <item>
                <term>
                  <see cref="T:System.UnauthorizedAccessException" />
                </term>
                <description> 디렉터리는 읽기 전용입니다.  -또는-  이 작업은 현재 플랫폼에서 지원되지 않습니다.  -또는-  호출자에게 필요한 권한이 없습니다.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-491">
              <list type="table">
                <listheader>
                  <term> Exception type  </term>
                  <description> Condition  </description>
                </listheader>
                <item>
                  <term>
                    <see cref="T:System.SystemException" />
                  </term>
                  <description> The directory could not be found or modified.  </description>
                </item>
                <item>
                  <term>
                    <see cref="T:System.UnauthorizedAccessException" />
                  </term>
                  <description> The current process does not have access to open the directory.  </description>
                </item>
                <item>
                  <term>
                    <see cref="T:System.IO.IOException" />
                  </term>
                  <description> An I/O error occurred while opening the directory.  </description>
                </item>
                <item>
                  <term>
                    <see cref="T:System.PlatformNotSupportedException" />
                  </term>
                  <description> The current operating system is not Microsoft Windows 2000 or later.  </description>
                </item>
                <item>
                  <term>
                    <see cref="T:System.UnauthorizedAccessException" />
                  </term>
                  <description> The directory is read-only.  -or-  This operation is not supported on the current platform.  -or-  The caller does not have the required permission.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d8fe-492">사용 된 <xref:System.IO.DirectoryInfo.GetAccessControl%2A> 현재 파일에 대 한 액세스 제어 목록 (ACL) 항목을 검색 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-492">Use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to retrieve the access control list (ACL) entries for the current file.</span></span>  
  
 <span data-ttu-id="0d8fe-493">ACL에는 개인 및/또는 그룹 했거나 권한이 없는, 특정된 파일이 나 디렉터리에서 특정 작업을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-493">An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</span></span> <span data-ttu-id="0d8fe-494">자세한 내용은 [방법: Access Control 목록 항목 추가 또는 제거](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-494">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="0d8fe-495">디렉터리에 대 한 액세스 제어 목록 (ACL)을 열거할 수 있는 권한입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-495">for permission to enumerate an access control list (ACL) for a directory.</span>
          </span>
          <span data-ttu-id="0d8fe-496">보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-496">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="0d8fe-497">연관 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />, <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-497">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />, <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDirectories">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0d8fe-498">현재 디렉터리의 하위 디렉터리를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-498">Returns the subdirectories of the current directory.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDirectories () As DirectoryInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories();" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : unit -&gt; System.IO.DirectoryInfo[]" Usage="directoryInfo.GetDirectories " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0d8fe-499">현재 디렉터리의 하위 디렉터리를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-499">Returns the subdirectories of the current directory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d8fe-500">
            <see cref="T:System.IO.DirectoryInfo" /> 개체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-500">An array of <see cref="T:System.IO.DirectoryInfo" /> objects.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d8fe-501">하위 디렉터리가 없으면이 메서드는 빈 배열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-501">If there are no subdirectories, this method returns an empty array.</span></span> <span data-ttu-id="0d8fe-502">이 메서드는 재귀 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-502">This method is not recursive.</span></span>  
  
 <span data-ttu-id="0d8fe-503">이 메서드는 다음 값을 미리 채웁니다 <xref:System.IO.DirectoryInfo> 속성:</span><span class="sxs-lookup"><span data-stu-id="0d8fe-503">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="0d8fe-504">다음 예제는 루트 디렉터리에 있는 모든 디렉터리를 검색 하 고 디렉터리 이름을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-504">The following example retrieves all the directories in the root directory and displays the directory names.</span></span>  
  
 [!code-cpp[directoryinfogetdirectories#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfogetdirectories/CPP/directoryinfogetdirectories.cpp#1)]
 [!code-csharp[directoryinfogetdirectories#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetdirectories/CS/directoryinfogetdirectories.cs#1)]
 [!code-vb[directoryinfogetdirectories#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetdirectories/VB/directoryinfogetdirectories.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="0d8fe-505">
            <see cref="T:System.IO.DirectoryInfo" /> 개체에 캡슐화된 경로가 유효하지 않은 경우(예: 매핑되지 않은 드라이브의 경로에 해당하는 경우)</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-505">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid, such as being on an unmapped drive.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="0d8fe-506">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-506">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="0d8fe-507">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-507">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="0d8fe-508">디렉터리 읽기.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-508">for reading directories.</span>
          </span>
          <span data-ttu-id="0d8fe-509">연결 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-509">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDirectories (searchPattern As String) As DirectoryInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : string -&gt; System.IO.DirectoryInfo[]" Usage="directoryInfo.GetDirectories searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern">
          <span data-ttu-id="0d8fe-510">디렉터리 이름과 일치하는지 비교할 검색 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-510">The search string to match against the names of directories.</span>
          </span>
          <span data-ttu-id="0d8fe-511">이 매개 변수는 유효한 리터럴 경로와 와일드카드(\* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-511">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d8fe-512">주어진 검색 조건에 일치하는 현재 <see cref="T:System.IO.DirectoryInfo" />에 있는 디렉터리의 배열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-512">Returns an array of directories in the current <see cref="T:System.IO.DirectoryInfo" /> matching the given search criteria.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d8fe-513">
            <see langword="DirectoryInfo" />에 일치하는 <paramref name="searchPattern" /> 형식의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-513">An array of type <see langword="DirectoryInfo" /> matching <paramref name="searchPattern" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d8fe-514">`searchPattern` 리터럴 및 와일드 카드 문자의 조합일 수 있습니다 하지만 정규식을 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-514">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="0d8fe-515">다음 와일드 카드 지정 자가 허용 됩니다 `searchPattern`합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-515">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="0d8fe-516">와일드 카드 지정자</span><span class="sxs-lookup"><span data-stu-id="0d8fe-516">Wildcard specifier</span></span>|<span data-ttu-id="0d8fe-517">일치 항목</span><span class="sxs-lookup"><span data-stu-id="0d8fe-517">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="0d8fe-518">\*(별표)</span><span class="sxs-lookup"><span data-stu-id="0d8fe-518">\* (asterisk)</span></span>|<span data-ttu-id="0d8fe-519">해당 위치에 0 개 이상의 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-519">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="0d8fe-520">?</span><span class="sxs-lookup"><span data-stu-id="0d8fe-520">?</span></span> <span data-ttu-id="0d8fe-521">(물음표)</span><span class="sxs-lookup"><span data-stu-id="0d8fe-521">(question mark)</span></span>|<span data-ttu-id="0d8fe-522">해당 위치에 0 개 이상의 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-522">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="0d8fe-523">와일드 카드 문자 이외의 문자는 리터럴 문자.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-523">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="0d8fe-524">예를 들어, 문자열 "\* t"에서 문자 "t"로 끝나는 모든 이름 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-524">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="0d8fe-525">".</span><span class="sxs-lookup"><span data-stu-id="0d8fe-525">".</span></span> <span data-ttu-id="0d8fe-526">합니다 `searchPattern` 문자열 "s\*"의 모든 이름 검색 `path` "s"로 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-526">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="0d8fe-527">이 메서드는 다음 값을 미리 채웁니다 <xref:System.IO.DirectoryInfo> 속성:</span><span class="sxs-lookup"><span data-stu-id="0d8fe-527">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="0d8fe-528">다음 예제에서는 지정 된 문자를 포함 하는 경로에 디렉터리를 계산 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-528">The following example counts the directories in a path that contain the specified letter.</span></span>  
  
 [!code-cpp[DirInfo GetDirs2#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo GetDirs2/CPP/dirinfo getdirs2.cpp#1)]
 [!code-csharp[DirInfo GetDirs2#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo GetDirs2/CS/dirinfo getdirs2.cs#1)]
 [!code-vb[DirInfo GetDirs2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo GetDirs2/VB/dirinfo getdirs2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0d8fe-529">
            <paramref name="searchPattern" />에는 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 메서드로 정의된 잘못된 문자가 하나 이상 포함되어 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-529">
              <paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0d8fe-530">
            <paramref name="searchPattern" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-530">
              <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="0d8fe-531">
            <see langword="DirectoryInfo" /> 개체에 캡슐화된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-531">The path encapsulated in the <see langword="DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="0d8fe-532">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-532">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="0d8fe-533">읽을 파일 및 디렉터리 및 경로에 액세스할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-533">for reading from files and directories and for access to the path.</span>
          </span>
          <span data-ttu-id="0d8fe-534">연관 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-534">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : string * System.IO.EnumerationOptions -&gt; System.IO.DirectoryInfo[]" Usage="directoryInfo.GetDirectories (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : string * System.IO.SearchOption -&gt; System.IO.DirectoryInfo[]" Usage="directoryInfo.GetDirectories (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" />
      </Parameters>
      <Docs>
        <param name="searchPattern">
          <span data-ttu-id="0d8fe-535">디렉터리 이름과 일치하는지 비교할 검색 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-535">The search string to match against the names of directories.</span>
          </span>
          <span data-ttu-id="0d8fe-536">이 매개 변수는 유효한 리터럴 경로와 와일드카드(\* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-536">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span>
          </span>
        </param>
        <param name="searchOption">
          <span data-ttu-id="0d8fe-537">검색 작업에 현재 디렉터리만 포함할지 아니면 모든 하위 디렉터리를 포함할지를 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-537">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d8fe-538">하위 디렉터리를 검색할지를 나타내는 값을 사용하여 현재 <see cref="T:System.IO.DirectoryInfo" />에서 지정된 검색 조건과 일치하는 디렉터리의 배열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-538">Returns an array of directories in the current <see cref="T:System.IO.DirectoryInfo" /> matching the given search criteria and using a value to determine whether to search subdirectories.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d8fe-539">
            <see langword="DirectoryInfo" />에 일치하는 <paramref name="searchPattern" /> 형식의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-539">An array of type <see langword="DirectoryInfo" /> matching <paramref name="searchPattern" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d8fe-540">`searchPattern` 리터럴 및 와일드 카드 문자의 조합일 수 있습니다 하지만 정규식을 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-540">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="0d8fe-541">다음 와일드 카드 지정 자가 허용 됩니다 `searchPattern`합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-541">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="0d8fe-542">와일드 카드 지정자</span><span class="sxs-lookup"><span data-stu-id="0d8fe-542">Wildcard specifier</span></span>|<span data-ttu-id="0d8fe-543">일치 항목</span><span class="sxs-lookup"><span data-stu-id="0d8fe-543">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="0d8fe-544">\*(별표)</span><span class="sxs-lookup"><span data-stu-id="0d8fe-544">\* (asterisk)</span></span>|<span data-ttu-id="0d8fe-545">해당 위치에 0 개 이상의 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-545">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="0d8fe-546">?</span><span class="sxs-lookup"><span data-stu-id="0d8fe-546">?</span></span> <span data-ttu-id="0d8fe-547">(물음표)</span><span class="sxs-lookup"><span data-stu-id="0d8fe-547">(question mark)</span></span>|<span data-ttu-id="0d8fe-548">해당 위치에 0 개 이상의 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-548">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="0d8fe-549">와일드 카드 문자 이외의 문자는 리터럴 문자.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-549">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="0d8fe-550">예를 들어, 문자열 "\* t"에서 문자 "t"로 끝나는 모든 이름 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-550">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="0d8fe-551">".</span><span class="sxs-lookup"><span data-stu-id="0d8fe-551">".</span></span> <span data-ttu-id="0d8fe-552">합니다 `searchPattern` 문자열 "s\*"의 모든 이름 검색 `path` "s"로 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-552">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="0d8fe-553">하위 디렉터리가 없는지 또는 하위 디렉터리가 없는지와 일치 하는 경우는 `searchPattern` 매개 변수를이 메서드는 빈 배열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-553">If there are no subdirectories, or no subdirectories match the `searchPattern` parameter, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="0d8fe-554">이 메서드는 다음 값을 미리 채웁니다 <xref:System.IO.DirectoryInfo> 속성:</span><span class="sxs-lookup"><span data-stu-id="0d8fe-554">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="0d8fe-555">다음 예제에는 문자 "c"로 시작 하는 파일과 디렉터리 모두 나열 합니다 "c:\\"입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-555">The following example lists all of the directories and files that begin with the letter "c" in "c:\\".</span></span>  
  
 [!code-cpp[System.IO.DirectoryInfo_SearchOptions#00](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.DirectoryInfo_SearchOptions/cpp/searchoption.cpp#00)]
 [!code-csharp[System.IO.DirectoryInfo_SearchOptions#00](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.DirectoryInfo_SearchOptions/cs/searchoption.cs#00)]
 [!code-vb[System.IO.DirectoryInfo_SearchOptions#00](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.DirectoryInfo_SearchOptions/vb/searchoption.vb#00)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0d8fe-556">
            <paramref name="searchPattern" />에는 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 메서드로 정의된 잘못된 문자가 하나 이상 포함되어 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-556">
              <paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0d8fe-557">
            <paramref name="searchPattern" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-557">
              <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0d8fe-558">
            <paramref name="searchOption" />은 유효한 <see cref="T:System.IO.SearchOption" /> 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-558">
              <paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="0d8fe-559">
            <see langword="DirectoryInfo" /> 개체에 캡슐화된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-559">The path encapsulated in the <see langword="DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="0d8fe-560">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-560">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="0d8fe-561">읽을 파일 및 디렉터리 및 경로에 액세스할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-561">for reading from files and directories and for access to the path.</span>
          </span>
          <span data-ttu-id="0d8fe-562">연관 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-562">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFiles">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0d8fe-563">현재 디렉터리에서 파일 목록을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-563">Returns a file list from the current directory.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFiles () As FileInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles();" />
      <MemberSignature Language="F#" Value="member this.GetFiles : unit -&gt; System.IO.FileInfo[]" Usage="directoryInfo.GetFiles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0d8fe-564">현재 디렉터리에서 파일 목록을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-564">Returns a file list from the current directory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d8fe-565">
            <see cref="T:System.IO.FileInfo" /> 형식의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-565">An array of type <see cref="T:System.IO.FileInfo" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d8fe-566">합니다 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 고 <xref:System.IO.DirectoryInfo.GetFiles%2A> 메서드 차이점은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-566">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="0d8fe-567">사용 하는 경우 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, 컬렉션을 열거 하는 것이 먼저 <xref:System.IO.FileInfo> 전체 컬렉션에 반환 되기 전에 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-567">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="0d8fe-568">사용 하는 경우 <xref:System.IO.DirectoryInfo.GetFiles%2A>, 전체 배열의 기다려야 <xref:System.IO.FileInfo> 개체를 배열에 액세스 하려면 먼저 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-568">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="0d8fe-569">따라서 여러 파일 및 디렉터리를 사용 하 여 작업할 때 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 더 효율적일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-569">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="0d8fe-570">파일이 없을 경우는 <xref:System.IO.DirectoryInfo>,이 메서드는 빈 배열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-570">If there are no files in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="0d8fe-571">반환 된 파일 이름의 순서를 보장할 수 없습니다. 사용 된 <xref:System.Array.Sort%2A> 메서드는 특정 정렬 해야 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-571">The order of the returned file names is not guaranteed; use the <xref:System.Array.Sort%2A> method if a specific sort order is required.</span></span>  
  
 <span data-ttu-id="0d8fe-572">이 메서드는 다음 값을 미리 채웁니다 <xref:System.IO.FileInfo> 속성:</span><span class="sxs-lookup"><span data-stu-id="0d8fe-572">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
   
  
## Examples  
 <span data-ttu-id="0d8fe-573">다음 예제에서는 다른 검색 옵션을 사용 하 여 디렉터리에서 파일의 목록을 가져오는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-573">The following example shows how to get a list of files from a directory by using different search options.</span></span> <span data-ttu-id="0d8fe-574">Log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, 및 SubFile.txt 라는 파일에 있는 하위 디렉터리를 명명 된 파일이 있는 디렉터리를 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-574">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[directoryinfogetfiles#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetfiles/CS/directoryinfogetfiles2.cs#2)]
 [!code-vb[directoryinfogetfiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetfiles/VB/directoryinfogetfiles2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="0d8fe-575">경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-575">The path is invalid, such as being on an unmapped drive.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="0d8fe-576">디렉터리 읽기.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-576">for reading directories.</span>
          </span>
          <span data-ttu-id="0d8fe-577">연결 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-577">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFiles (searchPattern As String) As FileInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.GetFiles : string -&gt; System.IO.FileInfo[]" Usage="directoryInfo.GetFiles searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern">
          <span data-ttu-id="0d8fe-578">파일 이름과 일치하는지 비교할 검색 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-578">The search string to match against the names of files.</span>
          </span>
          <span data-ttu-id="0d8fe-579">이 매개 변수는 유효한 리터럴 경로와 와일드카드(\* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-579">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d8fe-580">현재 디렉터리에서 지정된 검색 패턴과 일치하는 파일 목록을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-580">Returns a file list from the current directory matching the given search pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d8fe-581">
            <see cref="T:System.IO.FileInfo" /> 형식의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-581">An array of type <see cref="T:System.IO.FileInfo" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d8fe-582">`searchPattern` 리터럴 및 와일드 카드 문자의 조합일 수 있습니다 하지만 정규식을 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-582">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="0d8fe-583">다음 와일드 카드 지정 자가 허용 됩니다 `searchPattern`합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-583">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="0d8fe-584">와일드 카드 지정자</span><span class="sxs-lookup"><span data-stu-id="0d8fe-584">Wildcard specifier</span></span>|<span data-ttu-id="0d8fe-585">일치 항목</span><span class="sxs-lookup"><span data-stu-id="0d8fe-585">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="0d8fe-586">\*(별표)</span><span class="sxs-lookup"><span data-stu-id="0d8fe-586">\* (asterisk)</span></span>|<span data-ttu-id="0d8fe-587">해당 위치에 0 개 이상의 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-587">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="0d8fe-588">?</span><span class="sxs-lookup"><span data-stu-id="0d8fe-588">?</span></span> <span data-ttu-id="0d8fe-589">(물음표)</span><span class="sxs-lookup"><span data-stu-id="0d8fe-589">(question mark)</span></span>|<span data-ttu-id="0d8fe-590">해당 위치에 0 개 이상의 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-590">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="0d8fe-591">와일드 카드 문자 이외의 문자는 리터럴 문자.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-591">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="0d8fe-592">예를 들어, 문자열 "\* t"에서 문자 "t"로 끝나는 모든 이름 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-592">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="0d8fe-593">합니다 `searchPattern` 문자열 "s\*"의 모든 이름 검색 `path` "s"로 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-593">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="0d8fe-594">합니다 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 고 <xref:System.IO.DirectoryInfo.GetFiles%2A> 메서드 차이점은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-594">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="0d8fe-595">사용 하는 경우 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, 컬렉션을 열거 하는 것이 먼저 <xref:System.IO.FileInfo> 전체 컬렉션에 반환 되기 전에 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-595">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="0d8fe-596">사용 하는 경우 <xref:System.IO.DirectoryInfo.GetFiles%2A>, 전체 배열의 기다려야 <xref:System.IO.FileInfo> 개체를 배열에 액세스 하려면 먼저 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-596">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="0d8fe-597">따라서 여러 파일 및 디렉터리를 사용 하 여 작업할 때 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 더 효율적일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-597">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="0d8fe-598">파일이 없을 경우는 <xref:System.IO.DirectoryInfo>,이 메서드는 빈 배열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-598">If there are no files in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="0d8fe-599">다음 와일드 카드 지정 자가 허용 되는 `searchPattern` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-599">The following wildcard specifiers are permitted in the `searchPattern` parameter.</span></span>  
  
|<span data-ttu-id="0d8fe-600">와일드 카드 문자</span><span class="sxs-lookup"><span data-stu-id="0d8fe-600">Wildcard character</span></span>|<span data-ttu-id="0d8fe-601">설명</span><span class="sxs-lookup"><span data-stu-id="0d8fe-601">Description</span></span>|  
|------------------------|-----------------|  
|*|<span data-ttu-id="0d8fe-602">0 개 이상의 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-602">Zero or more characters.</span></span>|  
|<span data-ttu-id="0d8fe-603">?</span><span class="sxs-lookup"><span data-stu-id="0d8fe-603">?</span></span>|<span data-ttu-id="0d8fe-604">정확히 0 개 이상의 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-604">Exactly zero or one character.</span></span>|  
  
 <span data-ttu-id="0d8fe-605">반환 된 파일 이름의 순서를 보장할 수 없습니다. 사용 된 <xref:System.Array.Sort%2A> 메서드는 특정 정렬 해야 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-605">The order of the returned file names is not guaranteed; use the <xref:System.Array.Sort%2A> method if a specific sort order is required.</span></span>  
  
 <span data-ttu-id="0d8fe-606">와일드 카드가 허용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-606">Wildcards are permitted.</span></span> <span data-ttu-id="0d8fe-607">예를 들어를 `searchPattern` 모든 파일은 확장명이 "txt" 이름 "\*.txt" 검색 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-607">For example, the `searchPattern` string "\*.txt" searches for all file names having an extension of "txt".</span></span> <span data-ttu-id="0d8fe-608">합니다 `searchPattern` 문자열 "s\*" "s" 문자로 시작 하는 이름은 모든 파일을 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-608">The `searchPattern` string "s\*" searches for all file names beginning with the letter "s".</span></span> <span data-ttu-id="0d8fe-609">없거나 파일이 없는 경우 일치 하는 파일을 `searchPattern` 문자열는 <xref:System.IO.DirectoryInfo>,이 메서드는 빈 배열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-609">If there are no files, or no files that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0d8fe-610">별표 와일드 카드 문자를 사용 하는 경우는 `searchPattern` (예를 들어, \* ".txt"), 일치 하는 동작을 지정된 된 파일 확장명의 길이 따라 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-610">When using the asterisk wildcard character in a `searchPattern` (for example, "\*.txt"), the matching behavior varies depending on the length of the specified file extension.</span></span> <span data-ttu-id="0d8fe-611">A `searchPattern` 파일을 정확히 3 자 확장이 반환 확장인 3 개 이상의 문자를 사용 하 여 파일을 처음 세 문자에 지정 된 파일 확장명이 일치 하는 위치는 `searchPattern`합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-611">A `searchPattern` with a file extension of exactly three characters returns files with an extension of three or more characters, where the first three characters match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="0d8fe-612">A `searchPattern` 파일을 하나, 둘 또는 세 개 이상의 문자 확장 자에 지정 된 파일 확장명과 일치 하는 확장명을 가진 파일만 반환 하는 `searchPattern`합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-612">A `searchPattern` with a file extension of one, two, or more than three characters returns only files with extensions of exactly that length that match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="0d8fe-613">물음표 와일드 카드 문자를 사용할 경우이 메서드는 지정된 된 파일 확장명과 일치 하는 파일에만 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-613">When using the question mark wildcard character, this method returns only files that match the specified file extension.</span></span> <span data-ttu-id="0d8fe-614">예를 들어, 디렉터리, "file1.txt" 및 "file1.txtother", 검색 패턴은 두 개의 파일이 지정 된 "파일?. txt"반환만 첫 번째 파일인 검색 패턴은 하는 동안" 파일\*.txt "파일을 모두 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-614">For example, given two files in a directory, "file1.txt" and "file1.txtother", a search pattern of "file?.txt" returns only the first file, while a search pattern of "file\*.txt" returns both files.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0d8fe-615">검색 패턴 비슷합니다 8.3 파일 이름 형식 및 긴 파일 이름 형식을 모두 사용 하 여 파일 이름에 대해이 메서드는 확인, 때문에 "\* 1\*.txt" 예기치 않은 파일 이름을 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-615">Because this method checks against file names with both the 8.3 file name format and the long file name format, a search pattern similar to "\*1\*.txt" may return unexpected file names.</span></span> <span data-ttu-id="0d8fe-616">예를 들어, 검색 패턴을 사용 하 여 "\*1\*.txt" 동등한 8.3 파일 이름 형식 "longf~1.txt" 될 수 있으므로 "longfilename.txt"를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-616">For example, using a search pattern of "\*1\*.txt" will return "longfilename.txt" because the equivalent 8.3 file name format would be "longf~1.txt".</span></span>  
  
 <span data-ttu-id="0d8fe-617">이 메서드는 다음 값을 미리 채웁니다 <xref:System.IO.FileInfo> 속성:</span><span class="sxs-lookup"><span data-stu-id="0d8fe-617">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
   
  
## Examples  
 <span data-ttu-id="0d8fe-618">다음 예제에서는 다른 검색 옵션을 사용 하 여 디렉터리에서 파일의 목록을 가져오는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-618">The following example shows how to get a list of files from a directory by using different search options.</span></span> <span data-ttu-id="0d8fe-619">Log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, 및 SubFile.txt 라는 파일에 있는 하위 디렉터리를 명명 된 파일이 있는 디렉터리를 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-619">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[directoryinfogetfiles#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetfiles/CS/directoryinfogetfiles2.cs#2)]
 [!code-vb[directoryinfogetfiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetfiles/VB/directoryinfogetfiles2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0d8fe-620">
            <paramref name="searchPattern" />에는 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 메서드로 정의된 잘못된 문자가 하나 이상 포함되어 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-620">
              <paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0d8fe-621">
            <paramref name="searchPattern" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-621">
              <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="0d8fe-622">경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-622">The path is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="0d8fe-623">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-623">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="0d8fe-624">경로 파일 및 디렉터리에서 읽기에 대 한 액세스 권한입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-624">for access to the path and for reading from files and directories.</span>
          </span>
          <span data-ttu-id="0d8fe-625">연관 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-625">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.GetFiles : string * System.IO.EnumerationOptions -&gt; System.IO.FileInfo[]" Usage="directoryInfo.GetFiles (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.GetFiles : string * System.IO.SearchOption -&gt; System.IO.FileInfo[]" Usage="directoryInfo.GetFiles (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" />
      </Parameters>
      <Docs>
        <param name="searchPattern">
          <span data-ttu-id="0d8fe-626">파일 이름과 일치하는지 비교할 검색 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-626">The search string to match against the names of files.</span>
          </span>
          <span data-ttu-id="0d8fe-627">이 매개 변수는 유효한 리터럴 경로와 와일드카드(\* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-627">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span>
          </span>
        </param>
        <param name="searchOption">
          <span data-ttu-id="0d8fe-628">검색 작업에 현재 디렉터리만 포함할지 아니면 모든 하위 디렉터리를 포함할지를 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-628">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d8fe-629">하위 디렉터리를 검색할지를 나타내는 값을 사용하여 현재 디렉터리에서 지정된 검색 패턴과 일치하는 파일 목록을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-629">Returns a file list from the current directory matching the given search pattern and using a value to determine whether to search subdirectories.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d8fe-630">
            <see cref="T:System.IO.FileInfo" /> 형식의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-630">An array of type <see cref="T:System.IO.FileInfo" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d8fe-631">합니다 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 고 <xref:System.IO.DirectoryInfo.GetFiles%2A> 메서드 차이점은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-631">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="0d8fe-632">사용 하는 경우 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, 컬렉션을 열거 하는 것이 먼저 <xref:System.IO.FileInfo> 전체 컬렉션에 반환 되기 전에 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-632">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="0d8fe-633">사용 하는 경우 <xref:System.IO.DirectoryInfo.GetFiles%2A>, 전체 배열의 기다려야 <xref:System.IO.FileInfo> 개체를 배열에 액세스 하려면 먼저 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-633">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="0d8fe-634">따라서 여러 파일 및 디렉터리를 사용 하 여 작업할 때 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 더 효율적일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-634">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="0d8fe-635">파일이 없을 경우는 <xref:System.IO.DirectoryInfo>,이 메서드는 빈 배열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-635">If there are no files in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="0d8fe-636">다음 와일드 카드 지정 자가 허용 됩니다 `searchPattern`합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-636">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="0d8fe-637">와일드 카드 문자</span><span class="sxs-lookup"><span data-stu-id="0d8fe-637">Wildcard character</span></span>|<span data-ttu-id="0d8fe-638">설명</span><span class="sxs-lookup"><span data-stu-id="0d8fe-638">Description</span></span>|  
|------------------------|-----------------|  
|<span data-ttu-id="0d8fe-639">\*(별표)</span><span class="sxs-lookup"><span data-stu-id="0d8fe-639">\* (asterisk)</span></span>|<span data-ttu-id="0d8fe-640">0 개 이상의 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-640">Zero or more characters.</span></span>|  
|<span data-ttu-id="0d8fe-641">?</span><span class="sxs-lookup"><span data-stu-id="0d8fe-641">?</span></span> <span data-ttu-id="0d8fe-642">(물음표)</span><span class="sxs-lookup"><span data-stu-id="0d8fe-642">(question mark)</span></span>|<span data-ttu-id="0d8fe-643">정확히 0 개 이상의 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-643">Exactly zero or one character.</span></span>|  
  
 <span data-ttu-id="0d8fe-644">반환 된 파일 이름의 순서를 보장할 수 없습니다. 사용 된 <xref:System.Array.Sort%2A> 메서드는 특정 정렬 해야 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-644">The order of the returned file names is not guaranteed; use the <xref:System.Array.Sort%2A> method if a specific sort order is required.</span></span>  
  
 <span data-ttu-id="0d8fe-645">와일드 카드가 허용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-645">Wildcards are permitted.</span></span> <span data-ttu-id="0d8fe-646">예를 들어를 `searchPattern` 모든 파일은 확장명이 "txt" 이름 "\*.txt" 검색 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-646">For example, the `searchPattern` string "\*.txt" searches for all file names having an extension of "txt".</span></span> <span data-ttu-id="0d8fe-647">합니다 `searchPattern` 문자열 "s\*" "s" 문자로 시작 하는 이름은 모든 파일을 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-647">The `searchPattern` string "s\*" searches for all file names beginning with the letter "s".</span></span> <span data-ttu-id="0d8fe-648">없거나 파일이 없는 경우 일치 하는 파일을 `searchPattern` 문자열는 <xref:System.IO.DirectoryInfo>,이 메서드는 빈 배열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-648">If there are no files, or no files that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0d8fe-649">별표 와일드 카드 문자를 사용 하는 경우는 `searchPattern` (예를 들어, \* ".txt"), 일치 하는 동작을 지정된 된 파일 확장명의 길이 따라 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-649">When using the asterisk wildcard character in a `searchPattern` (for example, "\*.txt"), the matching behavior varies depending on the length of the specified file extension.</span></span> <span data-ttu-id="0d8fe-650">A `searchPattern` 파일을 정확히 3 자 확장이 반환 확장인 3 개 이상의 문자를 사용 하 여 파일을 처음 세 문자에 지정 된 파일 확장명이 일치 하는 위치는 `searchPattern`합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-650">A `searchPattern` with a file extension of exactly three characters returns files with an extension of three or more characters, where the first three characters match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="0d8fe-651">A `searchPattern` 파일을 하나, 둘 또는 세 개 이상의 문자 확장 자에 지정 된 파일 확장명과 일치 하는 확장명을 가진 파일만 반환 하는 `searchPattern`합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-651">A `searchPattern` with a file extension of one, two, or more than three characters returns only files with extensions of exactly that length that match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="0d8fe-652">물음표 와일드 카드 문자를 사용할 경우이 메서드는 지정된 된 파일 확장명과 일치 하는 파일에만 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-652">When using the question mark wildcard character, this method returns only files that match the specified file extension.</span></span> <span data-ttu-id="0d8fe-653">예를 들어, 디렉터리, "file1.txt" 및 "file1.txtother", 검색 패턴은 두 개의 파일이 지정 된 "파일?. txt"반환만 첫 번째 파일인 검색 패턴은 하는 동안" 파일\*.txt "파일을 모두 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-653">For example, given two files in a directory, "file1.txt" and "file1.txtother", a search pattern of "file?.txt" returns only the first file, while a search pattern of "file\*.txt" returns both files.</span></span>  
  
 <span data-ttu-id="0d8fe-654">다음 목록에 대 한 서로 다른 길이의 동작을 보여 줍니다.는 `searchPattern` 매개 변수:</span><span class="sxs-lookup"><span data-stu-id="0d8fe-654">The following list shows the behavior of different lengths for the `searchPattern` parameter:</span></span>  
  
-   <span data-ttu-id="0d8fe-655">"\*.abc"는 확장 of.abc,.abcd,.abcde,.abcdef 파일을 반환 등입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-655">"\*.abc" returns files having an extension of.abc,.abcd,.abcde,.abcdef, and so on.</span></span>  
  
-   <span data-ttu-id="0d8fe-656">"\*.abcd"는 확장 of.abcd을 가진 파일만 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-656">"\*.abcd" returns only files having an extension of.abcd.</span></span>  
  
-   <span data-ttu-id="0d8fe-657">"\*.abcde"는 확장 of.abcde을 가진 파일만 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-657">"\*.abcde" returns only files having an extension of.abcde.</span></span>  
  
-   <span data-ttu-id="0d8fe-658">"\*.abcdef"는 확장 of.abcdef을 가진 파일만 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-658">"\*.abcdef" returns only files having an extension of.abcdef.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0d8fe-659">검색 패턴 비슷합니다 8.3 파일 이름 형식 및 긴 파일 이름 형식을 모두 사용 하 여 파일 이름에 대해이 메서드는 확인, 때문에 "\* 1\*.txt" 예기치 않은 파일 이름을 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-659">Because this method checks against file names with both the 8.3 file name format and the long file name format, a search pattern similar to "\*1\*.txt" may return unexpected file names.</span></span> <span data-ttu-id="0d8fe-660">예를 들어, 검색 패턴을 사용 하 여 "\*1\*.txt" 동등한 8.3 파일 이름 형식 "longf~1.txt" 될 수 있으므로 "longfilename.txt"를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-660">For example, using a search pattern of "\*1\*.txt" will return "longfilename.txt" because the equivalent 8.3 file name format would be "longf~1.txt".</span></span>  
  
 <span data-ttu-id="0d8fe-661">이 메서드는 다음 값을 미리 채웁니다 <xref:System.IO.FileInfo> 속성:</span><span class="sxs-lookup"><span data-stu-id="0d8fe-661">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
1.  <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
2.  <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
3.  <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
4.  <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
5.  <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
6.  <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
7.  <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
8.  <xref:System.IO.FileInfo.Length%2A>  
  
   
  
## Examples  
 <span data-ttu-id="0d8fe-662">다음 예제에서는 다른 검색 옵션을 사용 하 여 디렉터리에서 파일의 목록을 가져오는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-662">The following example shows how to get a list of files from a directory by using different search options.</span></span> <span data-ttu-id="0d8fe-663">Log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, 및 SubFile.txt 라는 파일에 있는 하위 디렉터리를 명명 된 파일이 있는 디렉터리를 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-663">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[directoryinfogetfiles#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetfiles/CS/directoryinfogetfiles2.cs#2)]
 [!code-vb[directoryinfogetfiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetfiles/VB/directoryinfogetfiles2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0d8fe-664">
            <paramref name="searchPattern" />에는 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 메서드로 정의된 잘못된 문자가 하나 이상 포함되어 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-664">
              <paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0d8fe-665">
            <paramref name="searchPattern" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-665">
              <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0d8fe-666">
            <paramref name="searchOption" />은 유효한 <see cref="T:System.IO.SearchOption" /> 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-666">
              <paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="0d8fe-667">경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-667">The path is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="0d8fe-668">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-668">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="0d8fe-669">경로 파일 및 디렉터리에서 읽기에 대 한 액세스 권한입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-669">for access to the path and for reading from files and directories.</span>
          </span>
          <span data-ttu-id="0d8fe-670">연관 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-670">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFileSystemInfos">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0d8fe-671">현재 디렉터리의 파일과 하위 디렉터리를 나타내는 강력한 형식의 <see cref="T:System.IO.FileSystemInfo" /> 개체 배열을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-671">Retrieves an array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> objects representing files and subdirectories of the current directory.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFileSystemInfos () As FileSystemInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos();" />
      <MemberSignature Language="F#" Value="member this.GetFileSystemInfos : unit -&gt; System.IO.FileSystemInfo[]" Usage="directoryInfo.GetFileSystemInfos " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0d8fe-672">디렉터리의 모든 파일과 하위 디렉터리를 나타내는 강력한 형식의 <see cref="T:System.IO.FileSystemInfo" /> 항목 배열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-672">Returns an array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> entries representing all the files and subdirectories in a directory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d8fe-673">강력한 형식의 <see cref="T:System.IO.FileSystemInfo" /> 항목 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-673">An array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> entries.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d8fe-674">파일 또는 디렉터리에 없는 경우는 <xref:System.IO.DirectoryInfo>,이 메서드는 빈 배열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-674">If there are no files or directories in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span> <span data-ttu-id="0d8fe-675">이 메서드는 재귀 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-675">This method is not recursive.</span></span>  
  
 <span data-ttu-id="0d8fe-676">하위 디렉터리에 대 한 합니다 <xref:System.IO.FileSystemInfo> 파생된 클래스에이 메서드에서 반환 된 개체를 캐스팅 될 수 <xref:System.IO.DirectoryInfo>입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-676">For subdirectories, the <xref:System.IO.FileSystemInfo> objects returned by this method can be cast to the derived class <xref:System.IO.DirectoryInfo>.</span></span> <span data-ttu-id="0d8fe-677">사용 하 여는 <xref:System.IO.FileAttributes> 에서 반환 된 값을 <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> 속성을 여부를 <xref:System.IO.FileSystemInfo> 파일 또는 디렉터리를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-677">Use the <xref:System.IO.FileAttributes> value returned by the <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> property to determine whether the <xref:System.IO.FileSystemInfo> represents a file or a directory.</span></span>  
  
 <span data-ttu-id="0d8fe-678">이 메서드는 다음 값을 미리 채웁니다 <xref:System.IO.FileSystemInfo> 속성:</span><span class="sxs-lookup"><span data-stu-id="0d8fe-678">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="0d8fe-679">다음 예제에서는 파일 및 지정된 된 디렉터리에서 디렉터리를 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-679">The following example counts the files and directories under the specified directory.</span></span>  
  
 [!code-csharp[FSizeSort#1](~/samples/snippets/csharp/VS_Snippets_CLR/FSizeSort/CS/fsizesort.cs#1)]
 [!code-vb[FSizeSort#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FSizeSort/VB/fsizesort.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="0d8fe-680">경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-680">The path is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.FileSystemInfo" />
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFileSystemInfos (searchPattern As String) As FileSystemInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.GetFileSystemInfos : string -&gt; System.IO.FileSystemInfo[]" Usage="directoryInfo.GetFileSystemInfos searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern">
          <span data-ttu-id="0d8fe-681">파일에 있는 디렉터리 이름과 일치하는지 비교할 검색 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-681">The search string to match against the names of directories and files.</span>
          </span>
          <span data-ttu-id="0d8fe-682">이 매개 변수는 유효한 리터럴 경로와 와일드카드(\* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-682">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d8fe-683">지정된 검색 조건과 일치하는 파일 및 하위 디렉터리를 나타내는 강력한 형식의 <see cref="T:System.IO.FileSystemInfo" /> 개체 배열을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-683">Retrieves an array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> objects representing the files and subdirectories that match the specified search criteria.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d8fe-684">검색 기준과 일치하는 강력한 형식의 <see langword="FileSystemInfo" /> 개체 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-684">An array of strongly typed <see langword="FileSystemInfo" /> objects matching the search criteria.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d8fe-685">`searchPattern` 리터럴 및 와일드 카드 문자의 조합일 수 있습니다 하지만 정규식을 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-685">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="0d8fe-686">다음 와일드 카드 지정 자가 허용 됩니다 `searchPattern`합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-686">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="0d8fe-687">와일드 카드 지정자</span><span class="sxs-lookup"><span data-stu-id="0d8fe-687">Wildcard specifier</span></span>|<span data-ttu-id="0d8fe-688">일치 항목</span><span class="sxs-lookup"><span data-stu-id="0d8fe-688">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="0d8fe-689">\*(별표)</span><span class="sxs-lookup"><span data-stu-id="0d8fe-689">\* (asterisk)</span></span>|<span data-ttu-id="0d8fe-690">해당 위치에 0 개 이상의 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-690">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="0d8fe-691">?</span><span class="sxs-lookup"><span data-stu-id="0d8fe-691">?</span></span> <span data-ttu-id="0d8fe-692">(물음표)</span><span class="sxs-lookup"><span data-stu-id="0d8fe-692">(question mark)</span></span>|<span data-ttu-id="0d8fe-693">해당 위치에 0 개 이상의 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-693">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="0d8fe-694">와일드 카드 문자 이외의 문자는 리터럴 문자.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-694">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="0d8fe-695">예를 들어, 문자열 "\* t"에서 문자 "t"로 끝나는 모든 이름 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-695">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="0d8fe-696">".</span><span class="sxs-lookup"><span data-stu-id="0d8fe-696">".</span></span> <span data-ttu-id="0d8fe-697">합니다 `searchPattern` 문자열 "s\*"의 모든 이름 검색 `path` "s"로 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-697">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="0d8fe-698">이 메서드는 재귀 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-698">This method is not recursive.</span></span>  
  
 <span data-ttu-id="0d8fe-699">하위 디렉터리에 대 한 합니다 <xref:System.IO.FileSystemInfo> 파생된 클래스에이 메서드에서 반환 된 개체를 캐스팅 될 수 <xref:System.IO.DirectoryInfo>입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-699">For subdirectories, the <xref:System.IO.FileSystemInfo> objects returned by this method can be cast to the derived class <xref:System.IO.DirectoryInfo>.</span></span> <span data-ttu-id="0d8fe-700">사용 하 여는 <xref:System.IO.FileAttributes> 에서 반환 된 값을 <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> 속성을 여부를 <xref:System.IO.FileSystemInfo> 파일 또는 디렉터리를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-700">Use the <xref:System.IO.FileAttributes> value returned by the <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> property to determine whether the <xref:System.IO.FileSystemInfo> represents a file or a directory.</span></span>  
  
 <span data-ttu-id="0d8fe-701">와일드 카드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-701">Wild cards are permitted.</span></span> <span data-ttu-id="0d8fe-702">예를 들어 합니다 `searchPattern` 문자열 "\* t" 모든 디렉터리 이름에 대 한 검색 `path` 문자 "t"로 끝나는 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-702">For example, the `searchPattern` string "\*t" searches for all directory names in `path` ending with the letter "t".</span></span> <span data-ttu-id="0d8fe-703">합니다 `searchPattern` 문자열 "s\*"의 모든 디렉터리 이름에 대 한 검색 `path` "s"로 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-703">The `searchPattern` string "s\*" searches for all directory names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="0d8fe-704">문자열 "..."에 사용할 수 있습니다 `searchPattern` 디렉터리 이름에 같은 잘못 된 디렉터리 이름의 일부로 지정 된 경우 "는. 합니다. b "로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-704">The string ".." can only be used in `searchPattern` if it is specified as a part of a valid directory name, such as in the directory name "a..b".</span></span> <span data-ttu-id="0d8fe-705">디렉터리 계층 구조 위로 이동 하려면 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-705">It cannot be used to move up the directory hierarchy.</span></span> <span data-ttu-id="0d8fe-706">파일이 나 디렉터리 또는 파일 또는 디렉터리가 일치 하는 경우는 `searchPattern` 문자열을 <xref:System.IO.DirectoryInfo>,이 메서드는 빈 배열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-706">If there are no files or directories, or no files or directories that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="0d8fe-707">이 메서드는 다음 값을 미리 채웁니다 <xref:System.IO.FileSystemInfo> 속성:</span><span class="sxs-lookup"><span data-stu-id="0d8fe-707">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="0d8fe-708">다음 예제에서는 파일 및 지정된 된 검색 패턴과 일치 하는 디렉터리를 계산 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-708">The following example counts the files and directories that match the specified search pattern.</span></span>  
  
 [!code-csharp[DirInfo GetFileSysInfos2#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo GetFileSysInfos2/CS/dirinfo getfilesysinfos2.cs#1)]
 [!code-vb[DirInfo GetFileSysInfos2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo GetFileSysInfos2/VB/dirinfo getfilesysinfos2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0d8fe-709">
            <paramref name="searchPattern" />에는 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 메서드로 정의된 잘못된 문자가 하나 이상 포함되어 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-709">
              <paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0d8fe-710">
            <paramref name="searchPattern" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-710">
              <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="0d8fe-711">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-711">The specified path is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="0d8fe-712">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-712">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="0d8fe-713">읽을 파일 및 디렉터리 및 경로에 액세스할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-713">for reading from files and directories and for access to the path.</span>
          </span>
          <span data-ttu-id="0d8fe-714">연관 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-714">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          </span>
        </permission>
        <altmember cref="T:System.IO.FileSystemInfo" />
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.GetFileSystemInfos : string * System.IO.EnumerationOptions -&gt; System.IO.FileSystemInfo[]" Usage="directoryInfo.GetFileSystemInfos (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.GetFileSystemInfos : string * System.IO.SearchOption -&gt; System.IO.FileSystemInfo[]" Usage="directoryInfo.GetFileSystemInfos (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" />
      </Parameters>
      <Docs>
        <param name="searchPattern">
          <span data-ttu-id="0d8fe-715">디렉터리 및 파일 이름과 일치하는지 비교할 검색 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-715">The search string to match against the names of directories and filesa.</span>
          </span>
          <span data-ttu-id="0d8fe-716">이 매개 변수는 유효한 리터럴 경로와 와일드카드(\* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-716">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span>
          </span>
        </param>
        <param name="searchOption">
          <span data-ttu-id="0d8fe-717">검색 작업에 현재 디렉터리만 포함할지 아니면 모든 하위 디렉터리를 포함할지를 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-717">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span>
          </span>
          <span data-ttu-id="0d8fe-718">기본값은 <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-718">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d8fe-719">지정된 검색 조건과 일치하는 파일 및 하위 디렉터리를 나타내는 <see cref="T:System.IO.FileSystemInfo" /> 개체 배열을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-719">Retrieves an array of <see cref="T:System.IO.FileSystemInfo" /> objects that represent the files and subdirectories matching the specified search criteria.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d8fe-720">검색 조건과 일치하는 파일 시스템 항목의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-720">An array of file system entries that match the search criteria.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d8fe-721">`searchPattern` 리터럴 및 와일드 카드 문자의 조합일 수 있습니다 하지만 정규식을 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-721">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="0d8fe-722">다음 와일드 카드 지정 자가 허용 됩니다 `searchPattern`합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-722">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="0d8fe-723">와일드 카드 지정자</span><span class="sxs-lookup"><span data-stu-id="0d8fe-723">Wildcard specifier</span></span>|<span data-ttu-id="0d8fe-724">일치 항목</span><span class="sxs-lookup"><span data-stu-id="0d8fe-724">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="0d8fe-725">\*(별표)</span><span class="sxs-lookup"><span data-stu-id="0d8fe-725">\* (asterisk)</span></span>|<span data-ttu-id="0d8fe-726">해당 위치에 0 개 이상의 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-726">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="0d8fe-727">?</span><span class="sxs-lookup"><span data-stu-id="0d8fe-727">?</span></span> <span data-ttu-id="0d8fe-728">(물음표)</span><span class="sxs-lookup"><span data-stu-id="0d8fe-728">(question mark)</span></span>|<span data-ttu-id="0d8fe-729">해당 위치에 0 개 이상의 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-729">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="0d8fe-730">와일드 카드 문자 이외의 문자는 리터럴 문자.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-730">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="0d8fe-731">예를 들어, 문자열 "\* t"에서 문자 "t"로 끝나는 모든 이름 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-731">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="0d8fe-732">".</span><span class="sxs-lookup"><span data-stu-id="0d8fe-732">".</span></span> <span data-ttu-id="0d8fe-733">합니다 `searchPattern` 문자열 "s\*"의 모든 이름 검색 `path` "s"로 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-733">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="0d8fe-734">하위 디렉터리에 대 한 합니다 <xref:System.IO.FileSystemInfo> 파생된 클래스에이 메서드에서 반환 된 개체를 캐스팅 될 수 <xref:System.IO.DirectoryInfo>입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-734">For subdirectories, the <xref:System.IO.FileSystemInfo> objects returned by this method can be cast to the derived class <xref:System.IO.DirectoryInfo>.</span></span> <span data-ttu-id="0d8fe-735">사용 하 여는 <xref:System.IO.FileAttributes> 에서 반환 된 값을 <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> 속성을 여부를 <xref:System.IO.FileSystemInfo> 파일 또는 디렉터리를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-735">Use the <xref:System.IO.FileAttributes> value returned by the <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> property to determine whether the <xref:System.IO.FileSystemInfo> represents a file or a directory.</span></span>  
  
 <span data-ttu-id="0d8fe-736">이 메서드는 다음 값을 미리 채웁니다 <xref:System.IO.FileSystemInfo> 속성:</span><span class="sxs-lookup"><span data-stu-id="0d8fe-736">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0d8fe-737">
            <paramref name="searchPattern" />에는 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 메서드로 정의된 잘못된 문자가 하나 이상 포함되어 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-737">
              <paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0d8fe-738">
            <paramref name="searchPattern" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-738">
              <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0d8fe-739">
            <paramref name="searchOption" />은 유효한 <see cref="T:System.IO.SearchOption" /> 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-739">
              <paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="0d8fe-740">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-740">The specified path is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="0d8fe-741">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-741">The caller does not have the required permission.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="MoveTo">
      <MemberSignature Language="C#" Value="public void MoveTo (string destDirName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveTo(string destDirName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.MoveTo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveTo (destDirName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveTo(System::String ^ destDirName);" />
      <MemberSignature Language="F#" Value="member this.MoveTo : string -&gt; unit" Usage="directoryInfo.MoveTo destDirName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destDirName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="destDirName">
          <span data-ttu-id="0d8fe-742">이 디렉터리를 이동할 곳의 이름과 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-742">The name and path to which to move this directory.</span>
          </span>
          <span data-ttu-id="0d8fe-743">대상 디렉터리는 다른 디스크 볼륨이나 동일한 이름의 디렉터리가 될 수는 없지만,</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-743">The destination cannot be another disk volume or a directory with the identical name.</span>
          </span>
          <span data-ttu-id="0d8fe-744">이 디렉터리를 하위 디렉터리로 추가할 기존 디렉터리가 될 수는 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-744">It can be an existing directory to which you want to add this directory as a subdirectory.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d8fe-745">
            <see cref="T:System.IO.DirectoryInfo" /> 인스턴스 및 해당 내용을 새 경로로 이동합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-745">Moves a <see cref="T:System.IO.DirectoryInfo" /> instance and its contents to a new path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d8fe-746">이 메서드가 throw는 <xref:System.IO.IOException> 예를 들어 c:\mydir c:\public를 이동 하려고 하 고 c:\public 이미 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-746">This method throws an <xref:System.IO.IOException> if, for example, you try to move c:\mydir to c:\public, and c:\public already exists.</span></span> <span data-ttu-id="0d8fe-747">지정 해야 합니다 "c:\\\public\\\mydir"로 합니다 `destDirName` 매개 변수를 같은 새 디렉터리 이름을 지정 하거나 "c:\\\newdir"입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-747">You must specify "c:\\\public\\\mydir" as the `destDirName` parameter, or specify a new directory name such as "c:\\\newdir".</span></span>  
  
 <span data-ttu-id="0d8fe-748">이 메서드는 읽기 전용 디렉터리에서 디렉터리 이동을 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-748">This method permits moving a directory to a read-only directory.</span></span> <span data-ttu-id="0d8fe-749">읽기/쓰기 특성을 모두 디렉터리의 영향을 줍니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-749">The read/write attribute of neither directory is affected.</span></span>  
  
 <span data-ttu-id="0d8fe-750">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-750">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d8fe-751">다음 예제에서는 디렉터리를 이동 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-751">The following example demonstrates moving a directory.</span></span>  
  
 [!code-cpp[directoryinfomoveto#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfomoveto/CPP/directoryinfomoveto.cpp#1)]
 [!code-csharp[directoryinfomoveto#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfomoveto/CS/directoryinfomoveto.cs#1)]
 [!code-vb[directoryinfomoveto#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfomoveto/VB/directoryinfomoveto.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0d8fe-752">
            <paramref name="destDirName" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-752">
              <paramref name="destDirName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0d8fe-753">
            <paramref name="destDirName" />이 빈 문자열("")인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-753">
              <paramref name="destDirName" /> is an empty string (''").</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0d8fe-754">디렉터리를 다른 볼륨으로 이동하려고 했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-754">An attempt was made to move a directory to a different volume.</span>
          </span>
          <span data-ttu-id="0d8fe-755">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-755">-or-</span>
          </span>
          <span data-ttu-id="0d8fe-756">
            <paramref name="destDirName" />이(가) 이미 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-756">
              <paramref name="destDirName" /> already exists.</span>
          </span>
          <span data-ttu-id="0d8fe-757">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-757">-or-</span>
          </span>
          <span data-ttu-id="0d8fe-758">이 경로에 액세스할 수 있는 권한이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-758">You are not authorized to access this path.</span>
          </span>
          <span data-ttu-id="0d8fe-759">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-759">-or-</span>
          </span>
          <span data-ttu-id="0d8fe-760">이동되는 디렉터리와 대상 디렉터리의 이름이 같습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-760">The directory being moved and the destination directory have the same name.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="0d8fe-761">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-761">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="0d8fe-762">대상 디렉터리를 찾을 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-762">The destination directory cannot be found.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="0d8fe-763">대상 디렉터리에 대 한 읽기 및 쓰기 파일 및 디렉터리에 대 한 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-763">for reading and writing files and directories and for access to the destination directory.</span>
          </span>
          <span data-ttu-id="0d8fe-764">보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-764">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="0d8fe-765">연관 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-765">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.IO.DirectoryInfo.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d8fe-766">이 <see cref="T:System.IO.DirectoryInfo" /> 인스턴스의 이름을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-766">Gets the name of this <see cref="T:System.IO.DirectoryInfo" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d8fe-767">디렉터리 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-767">The directory name.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d8fe-768">이 <xref:System.IO.DirectoryInfo.Name%2A> 속성 "Bin" 등 디렉터리의 이름만 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-768">This <xref:System.IO.DirectoryInfo.Name%2A> property returns only the name of the directory, such as "Bin".</span></span> <span data-ttu-id="0d8fe-769">"C:\public\Bin"와 같은 전체 경로 사용 합니다 <xref:System.IO.FileSystemInfo.FullName%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-769">To get the full path, such as "c:\public\Bin", use the <xref:System.IO.FileSystemInfo.FullName%2A> property.</span></span>  
  
 <span data-ttu-id="0d8fe-770">합니다 <xref:System.IO.DirectoryInfo.Name%2A> 의 속성을 <xref:System.IO.DirectoryInfo> 권한이 필요 하지 (생성 하는 데 필요한 디렉터리에 읽기 권한 이상의 <xref:System.IO.DirectoryInfo.Exists%2A>) 디렉터리 이름을 제공할 수 있지만.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-770">The <xref:System.IO.DirectoryInfo.Name%2A> property of a <xref:System.IO.DirectoryInfo> requires no permission (beyond the read permission to the directory necessary to construct the <xref:System.IO.DirectoryInfo.Exists%2A>) but can give out the directory name.</span></span> <span data-ttu-id="0d8fe-771">전달 하는 데 필요한 경우 out을 <xref:System.IO.DirectoryInfo> 암호화 된 보안 이름 사용 하 여 보호 된 디렉터리에 신뢰할 수 없는 코드의 사용에 대 한 더미 디렉터리를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-771">If it is necessary to hand out a <xref:System.IO.DirectoryInfo> to a protected directory with a cryptographically secure name, create a dummy directory for the untrusted code’s use.</span></span>  
  
 <span data-ttu-id="0d8fe-772">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-772">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d8fe-773">다음 예에서는 현재의 이름을 표시 `DirectoryInfo` 인스턴스만 해당 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-773">The following example displays the name of the current `DirectoryInfo` instance only.</span></span>  
  
 [!code-cpp[Classic DirectoryInfo.Name Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic DirectoryInfo.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DirectoryInfo.Name Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic DirectoryInfo.Name Example/CS/source.cs#1)]
 [!code-vb[Classic DirectoryInfo.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic DirectoryInfo.Name Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.FileSystemInfo.FullName" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.DirectoryInfo Parent" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::DirectoryInfo ^ Parent { System::IO::DirectoryInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.IO.DirectoryInfo" Usage="System.IO.DirectoryInfo.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d8fe-774">지정된 하위 디렉터리의 부모 디렉터리를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-774">Gets the parent directory of a specified subdirectory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d8fe-775">부모 디렉터리 또는 <see langword="null" /> 경로가 null 또는 파일 경로 루트 (같은 "\\", "c:" 또는 \* "\\\server\share").</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-775">The parent directory, or <see langword="null" /> if the path is null or if the file path denotes a root (such as "\\", "C:", or \* "\\\server\share").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d8fe-776">공통적인 I/O 작업의 목록을 참조 하세요 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-776">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d8fe-777">다음 예제에서는 지정된 된 디렉터리의 부모 디렉터리를 참조 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-777">The following example demonstrates referring to the parent directory of a specified directory.</span></span>  
  
 [!code-cpp[directoryinfoparent#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfoparent/CPP/directoryinfoparent.cpp#1)]
 [!code-csharp[directoryinfoparent#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfoparent/CS/directoryinfoparent.cs#1)]
 [!code-vb[directoryinfoparent#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfoparent/VB/directoryinfoparent.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="0d8fe-778">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-778">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="0d8fe-779">읽을 파일 및 디렉터리 및 경로에 액세스할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-779">for reading from files and directories and for access to the path.</span>
          </span>
          <span data-ttu-id="0d8fe-780">연관 된 열거형: <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />, <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-780">Associated enumerations: <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />, <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Root">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo Root { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.DirectoryInfo Root" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Root" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Root As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::DirectoryInfo ^ Root { System::IO::DirectoryInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Root : System.IO.DirectoryInfo" Usage="System.IO.DirectoryInfo.Root" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d8fe-781">디렉터리의 루트 부분을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-781">Gets the root portion of the directory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d8fe-782">디렉터리의 루트를 나타내는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-782">An object that represents the root of the directory.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0d8fe-783">다음 예제에서는 지정 된 디렉터리에 대 한 루트 위치를 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-783">The following example displays root locations for specified directories.</span></span>  
  
 [!code-csharp[directoryinforoot#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinforoot/CS/directoryinforoot2.cs#2)]
 [!code-vb[directoryinforoot#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinforoot/VB/directoryinforoot2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="0d8fe-784">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-784">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="0d8fe-785">읽을 파일 및 디렉터리 및 경로에 액세스할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-785">for reading from files and directories and for access to the path.</span>
          </span>
          <span data-ttu-id="0d8fe-786">연관 된 열거형: <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />, <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-786">Associated enumerations: <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />, <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SetAccessControl">
      <MemberSignature Language="C#" Value="public void SetAccessControl (System.Security.AccessControl.DirectorySecurity directorySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessControl(class System.Security.AccessControl.DirectorySecurity directorySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessControl(System::Security::AccessControl::DirectorySecurity ^ directorySecurity);" />
      <MemberSignature Language="F#" Value="member this.SetAccessControl : System.Security.AccessControl.DirectorySecurity -&gt; unit" Usage="directoryInfo.SetAccessControl directorySecurity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" />
      </Parameters>
      <Docs>
        <param name="directorySecurity">
          <span data-ttu-id="0d8fe-787">
            <c>경로</c> 매개 변수에서 설명하는 디렉터리에 적용할 ACL 항목을 설명하는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-787">An object that describes an ACL entry to apply to the directory described by the <c>path</c> parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d8fe-788">
            <see cref="T:System.Security.AccessControl.DirectorySecurity" /> 개체에서 설명하는 ACL(액세스 제어 목록) 항목을 현재 <see cref="T:System.IO.DirectoryInfo" /> 개체에서 설명하는 디렉터리에 적용합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-788">Applies access control list (ACL) entries described by a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object to the directory described by the current <see cref="T:System.IO.DirectoryInfo" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d8fe-789">액세스 제어 목록 (ACL)을 개인 및/또는 있거나 없는, 특정된 파일이 나 디렉터리에 대 한 특정 작업에 대 한 권한이 있는 사용자 그룹에 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-789">An access control list (ACL) describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</span></span> <span data-ttu-id="0d8fe-790">자세한 내용은 [방법: Access Control 목록 항목 추가 또는 제거](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-790">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
 <span data-ttu-id="0d8fe-791"><xref:System.IO.DirectoryInfo.SetAccessControl%2A> 메서드는 상속 되지 않은 ACL 목록을 표시 하는 파일에 ACL 항목을 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-791">The <xref:System.IO.DirectoryInfo.SetAccessControl%2A> method applies ACL entries to a file that represents the noninherited ACL list.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="0d8fe-792">에 지정 된 ACL `directorySecurity` 디렉터리에 대 한 기존 ACL을 대체 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-792">The ACL specified for `directorySecurity` replaces the existing ACL for the directory.</span></span> <span data-ttu-id="0d8fe-793">새 사용자에 대 한 권한을 추가 하려면 사용 된 <xref:System.IO.DirectoryInfo.GetAccessControl%2A> 기존 ACL을 가져오고 수정 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-793">To add permissions for a new user, use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to obtain the existing ACL, and modify it.</span></span>  
  
 <span data-ttu-id="0d8fe-794">합니다 <xref:System.IO.DirectoryInfo.SetAccessControl%2A> 메서드만 지속 되 면 <xref:System.Security.AccessControl.DirectorySecurity> 개체를 만든 후 수정 된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-794">The <xref:System.IO.DirectoryInfo.SetAccessControl%2A> method persists only <xref:System.Security.AccessControl.DirectorySecurity> objects that have been modified after object creation.</span></span>  <span data-ttu-id="0d8fe-795">경우는 <xref:System.Security.AccessControl.DirectorySecurity> 개체 수정 되지 않은, 파일에 유지 되지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-795">If a <xref:System.Security.AccessControl.DirectorySecurity> object has not been modified, it will not be persisted to a file.</span></span>  <span data-ttu-id="0d8fe-796">검색할 수 없는 따라서는 <xref:System.Security.AccessControl.DirectorySecurity> 한 파일에서 개체 및 다른 파일에 동일한 개체를 다시 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-796">Therefore, it is not possible to retrieve a <xref:System.Security.AccessControl.DirectorySecurity> object from one file and reapply the same object to another file.</span></span>  
  
 <span data-ttu-id="0d8fe-797">ACL 정보 파일에서 다른 위치로 복사할:</span><span class="sxs-lookup"><span data-stu-id="0d8fe-797">To copy ACL information from one file to another:</span></span>  
  
1.  <span data-ttu-id="0d8fe-798">사용 하 여는 <xref:System.IO.DirectoryInfo.GetAccessControl%2A> 검색 하는 메서드는 <xref:System.Security.AccessControl.DirectorySecurity> 소스 파일에서 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-798">Use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to retrieve the <xref:System.Security.AccessControl.DirectorySecurity> object from the source file.</span></span>  
  
2.  <span data-ttu-id="0d8fe-799">새 <xref:System.Security.AccessControl.DirectorySecurity> 대상 파일에 대 한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-799">Create a new <xref:System.Security.AccessControl.DirectorySecurity> object for the destination file.</span></span>  
  
3.  <span data-ttu-id="0d8fe-800">사용 된 <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A> 또는 <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> 원본의 메서드 <xref:System.Security.AccessControl.DirectorySecurity> ACL 정보를 검색할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-800">Use the <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A> or <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> method of the source <xref:System.Security.AccessControl.DirectorySecurity> object to retrieve the ACL information.</span></span>  
  
4.  <span data-ttu-id="0d8fe-801">사용 된 <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A> 또는 <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> 대상에 3 단계에서 검색 정보를 복사 하는 메서드 <xref:System.Security.AccessControl.DirectorySecurity> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-801">Use the <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A> or <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> method to copy the information retrieved in step 3 to the destination <xref:System.Security.AccessControl.DirectorySecurity> object.</span></span>  
  
5.  <span data-ttu-id="0d8fe-802">대상 설정 <xref:System.Security.AccessControl.DirectorySecurity> 개체를 사용 하 여 대상 파일을 <xref:System.IO.DirectoryInfo.SetAccessControl%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-802">Set the destination <xref:System.Security.AccessControl.DirectorySecurity> object to the destination file using the <xref:System.IO.DirectoryInfo.SetAccessControl%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d8fe-803">다음 예제에서는 합니다 <xref:System.IO.DirectoryInfo.GetAccessControl%2A> 고 <xref:System.IO.DirectoryInfo.SetAccessControl%2A> 디렉터리에서 항목 목록 (ACL)을 제어 하는 메서드를 추가 하 고 다음 액세스를 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d8fe-803">The following example uses the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> and <xref:System.IO.DirectoryInfo.SetAccessControl%2A> methods to add and then remove an access control list (ACL) entry from a directory.</span></span>  
  
 [!code-cpp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0d8fe-804">
            <paramref name="directorySecurity" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-804">The <paramref name="directorySecurity" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="0d8fe-805">파일을 찾을 수 없거나 수정할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-805">The file could not be found or modified.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="0d8fe-806">현재 프로세스에 파일을 열 수 있는 액세스 권한이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-806">The current process does not have access to open the file.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="0d8fe-807">현재 운영 체제가 Microsoft Windows 2000 이상이 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-807">The current operating system is not Microsoft Windows 2000 or later.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="0d8fe-808">디렉터리에 대 한 액세스 제어 목록 (ACL)를 열거할 수 있는 권한입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-808">for permission to enumerate access control list (ACL) for a directory.</span>
          </span>
          <span data-ttu-id="0d8fe-809">보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-809">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="0d8fe-810">연관 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />, <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-810">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />, <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="directoryInfo.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0d8fe-811">사용자가 통과한 원래의 경로를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-811">Returns the original path that was passed by the user.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d8fe-812">사용자가 통과한 원래의 경로를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d8fe-812">Returns the original path that was passed by the user.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>