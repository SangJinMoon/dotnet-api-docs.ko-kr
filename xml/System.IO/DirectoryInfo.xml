<Type Name="DirectoryInfo" FullName="System.IO.DirectoryInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ad0784f971cfb919d9f1e6b7d1918d792bf594e8" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36561409" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DirectoryInfo : System.IO.FileSystemInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit DirectoryInfo extends System.IO.FileSystemInfo" />
  <TypeSignature Language="DocId" Value="T:System.IO.DirectoryInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DirectoryInfo&#xA;Inherits FileSystemInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class DirectoryInfo sealed : System::IO::FileSystemInfo" />
  <TypeSignature Language="F#" Value="type DirectoryInfo = class&#xA;    inherit FileSystemInfo" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.FileSystemInfo</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="241bf-101">디렉터리 및 하위 디렉터리를 만들고, 이동하고, 열거하는 인스턴스 메서드를 노출합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="241bf-101">Exposes instance methods for creating, moving, and enumerating through directories and subdirectories.</span>
      </span>
      <span data-ttu-id="241bf-102">이 클래스는 상속될 수 없습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="241bf-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="241bf-103">사용 하 여 <xref:System.IO.DirectoryInfo> 복사, 이동, 이름 바꾸기 및 디렉터리 삭제와 같은 일반적인 작업에 대 한 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-103">Use the <xref:System.IO.DirectoryInfo> class for typical operations such as copying, moving, renaming, creating, and deleting directories.</span></span>  
  
 <span data-ttu-id="241bf-104">인스턴스 메서드를 사용 하 여 고려 하는 개체를 여러 번 다시 경우 <xref:System.IO.DirectoryInfo> 의 해당 정적 메서드 대신는 <xref:System.IO.Directory> 클래스를 보안 검사를 항상 되지 않으므로 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-104">If you are going to reuse an object several times, consider using the instance method of <xref:System.IO.DirectoryInfo> instead of the corresponding static methods of the <xref:System.IO.Directory> class, because a security check will not always be necessary.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="241bf-105">가 경로 입력된 문자열을 허용 하는 멤버에 해당 경로 올바른 형식 이어야 합니다 또는 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-105">In members that accept a path as an input string, that path must be well-formed or an exception is raised.</span></span> <span data-ttu-id="241bf-106">예를 들어 경로 정규화 된 표시 되지만 공백으로 시작 경로 클래스의 메서드에서 잘리지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-106">For example, if a path is fully qualified but begins with a space, the path is not trimmed in methods of the class.</span></span> <span data-ttu-id="241bf-107">따라서 경로 잘못 되었으며 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-107">Therefore, the path is malformed and an exception is raised.</span></span> <span data-ttu-id="241bf-108">마찬가지로, 경로 또는 경로의 조합 두 번 정규화 될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-108">Similarly, a path or a combination of paths cannot be fully qualified twice.</span></span> <span data-ttu-id="241bf-109">예를 들어 "c:\temp c:\windows"는 또한 대부분의 경우에서 예외가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-109">For example, "c:\temp c:\windows" also raises an exception in most cases.</span></span> <span data-ttu-id="241bf-110">경로 문자열을 허용 하는 메서드를 사용 하는 경우 경로 형식이 있는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-110">Ensure that your paths are well-formed when using methods that accept a path string.</span></span>  
  
 <span data-ttu-id="241bf-111">경로 허용 하는 멤버를 파일이 나 디렉터리 경로 참조할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-111">In members that accept a path, the path can refer to a file or just a directory.</span></span> <span data-ttu-id="241bf-112">지정된 된 경로 상대 경로 또는 서버 및 공유 이름에 대 한 범용 명명 규칙 (UNC) 경로를 참조할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-112">The specified path can also refer to a relative path or a Universal Naming Convention (UNC) path for a server and share name.</span></span> <span data-ttu-id="241bf-113">예를 들어 다음은 허용 가능한 경로.</span><span class="sxs-lookup"><span data-stu-id="241bf-113">For example, all the following are acceptable paths:</span></span>  
  
-   <span data-ttu-id="241bf-114">"c:\\\MyDir\\\MyFile.txt" C# 또는 Visual Basic의 "c:\MyDir\MyFile.txt"입니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-114">"c:\\\MyDir\\\MyFile.txt" in C#, or "c:\MyDir\MyFile.txt" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="241bf-115">"c:\\\MyDir" C# 또는 Visual Basic의 "c:\MyDir"입니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-115">"c:\\\MyDir" in C#, or "c:\MyDir" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="241bf-116">"MyDir\\\MySubdir" C# 또는 Visual Basic의 "MyDir\MySubDir"입니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-116">"MyDir\\\MySubdir" in C#, or "MyDir\MySubDir" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="241bf-117">"\\\\\\\MyServer\\\MyShare" C# 또는 "\\\MyServer\MyShare" Visual Basic의 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-117">"\\\\\\\MyServer\\\MyShare" in C#, or "\\\MyServer\MyShare" in Visual Basic.</span></span>  
  
 <span data-ttu-id="241bf-118">기본적으로 새 디렉터리에 대 한 모든 읽기/쓰기 액세스는 모든 사용자에 게 부여 됩니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-118">By default, full read/write access to new directories is granted to all users.</span></span>  
  
 <span data-ttu-id="241bf-119">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-119">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="241bf-120">다음 예제에서는 주 멤버 중 일부는 `DirectoryInfo` 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-120">The following example demonstrates some of the main members of the `DirectoryInfo` class.</span></span>  
  
 [!code-cpp[DirInfo Class Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Class Example/CPP/dirinfo class example.cpp#1)]
 [!code-csharp[DirInfo Class Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Class Example/CS/dirinfo class example.cs#1)]
 [!code-vb[DirInfo Class Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Class Example/VB/dirinfo class example.vb#1)]  
  
 <span data-ttu-id="241bf-121">다음 예제에서는 디렉터리와 해당 내용을 복사 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-121">The following example demonstrates how to copy a directory and its contents.</span></span>  
  
 [!code-csharp[IO.DirectoryInfo-CopyDir#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.DirectoryInfo-CopyDir/cs/copydir.cs#1)]
 [!code-vb[IO.DirectoryInfo-CopyDir#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.DirectoryInfo-CopyDir/vb/CopyDir.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.File" />
    <altmember cref="P:System.IO.FileSystemInfo.Attributes" />
    <altmember cref="T:System.IO.FileSystemWatcher" />
    <altmember cref="T:System.IO.Directory" />
    <altmember cref="T:System.IO.Path" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectoryInfo (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectoryInfo(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.IO.DirectoryInfo : string -&gt; System.IO.DirectoryInfo" Usage="new System.IO.DirectoryInfo path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="241bf-122">
            <see langword="DirectoryInfo" />를 만들 경로를 지정하는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-122">A string specifying the path on which to create the <see langword="DirectoryInfo" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="241bf-123">지정된 경로를 사용하여 <see cref="T:System.IO.DirectoryInfo" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-123">Initializes a new instance of the <see cref="T:System.IO.DirectoryInfo" /> class on the specified path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="241bf-124">이 생성자는 디렉터리가 있는지를 확인 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-124">This constructor does not check if a directory exists.</span></span> <span data-ttu-id="241bf-125">이 생성자에는 후속 작업에서 디스크에 액세스 하는 데 사용 되는 문자열에 대 한 자리 표시자입니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-125">This constructor is a placeholder for a string that is used to access the disk in subsequent operations.</span></span>  
  
 <span data-ttu-id="241bf-126">`path` 매개 변수는 파일 이름, 범용 명명 규칙 (UNC) 공유에 파일을 포함 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-126">The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="241bf-127">문자 집합을 특정 문화권 설정을 사용 하 여 컴파일하고 하면 서로 다른 문화권 설정 사용 하 여 동일한 문자 검색 문자를 해석할 수 없어 및를 throw 하면 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-127">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="241bf-128">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-128">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="241bf-129">다음 예제에서는이 생성자를 사용 하 여 지정 된 디렉터리와 하위 디렉터리를 만들려고 하 고 하위 디렉터리를 포함 하는 디렉터리를 삭제할 수 없습니다 시연 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-129">The following example uses this constructor to create the specified directory and subdirectory, and demonstrates that a directory that contains subdirectories cannot be deleted.</span></span>  
  
 [!code-cpp[DirInfo Ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Ctor/CPP/dirinfo ctor.cpp#1)]
 [!code-csharp[DirInfo Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Ctor/CS/dirinfo ctor.cs#1)]
 [!code-vb[DirInfo Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Ctor/VB/dirinfo ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="241bf-130">
            <paramref name="path" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-130">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="241bf-131">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-131">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="241bf-132">
            <paramref name="path" />에 잘못된 문자(", &lt;, &gt; 또는 |)가 들어 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-132">
              <paramref name="path" /> contains invalid characters such as ", &lt;, &gt;, or |.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="241bf-133">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-133">The specified path, file name, or both exceed the system-defined maximum length.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="241bf-134">파일 및 디렉터리에서 계속 하십시오.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-134">for reading from files and directories.</span>
          </span>
          <span data-ttu-id="241bf-135">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-135">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
        <altmember cref="T:System.IO.DriveInfo" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="241bf-136">디렉터리를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-136">Creates a directory.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public void Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Create" />
      <MemberSignature Language="VB.NET" Value="Public Sub Create ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Create();" />
      <MemberSignature Language="F#" Value="member this.Create : unit -&gt; unit" Usage="directoryInfo.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="241bf-137">디렉터리를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-137">Creates a directory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="241bf-138">디렉터리가 이미 있는 경우이 메서드는 아무 작업도 수행 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-138">If the directory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="241bf-139">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-139">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="241bf-140">다음 예제에서는 검사 지정된 된 디렉터리가 있는지 여부를 경우 생성 되는 디렉터리 존재 하지 않는 고 디렉터리를 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-140">The following example checks whether a specified directory exists, creates the directory if it does not exist, and deletes the directory.</span></span>  
  
 [!code-cpp[DirInfo Create#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Create/CPP/dirinfo create.cpp#1)]
 [!code-csharp[DirInfo Create#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Create/CS/dirinfo create.cs#1)]
 [!code-vb[DirInfo Create#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Create/VB/dirinfo create.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="241bf-141">디렉터리를 만들 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-141">The directory cannot be created.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="241bf-142">파일을 작성 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-142">for writing files.</span>
          </span>
          <span data-ttu-id="241bf-143">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-143">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public void Create (System.Security.AccessControl.DirectorySecurity directorySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Create(class System.Security.AccessControl.DirectorySecurity directorySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Create(System::Security::AccessControl::DirectorySecurity ^ directorySecurity);" />
      <MemberSignature Language="F#" Value="member this.Create : System.Security.AccessControl.DirectorySecurity -&gt; unit" Usage="directoryInfo.Create directorySecurity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" />
      </Parameters>
      <Docs>
        <param name="directorySecurity">
          <span data-ttu-id="241bf-144">디렉터리에 적용할 액세스 제어입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-144">The access control to apply to the directory.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="241bf-145">
            <see cref="T:System.Security.AccessControl.DirectorySecurity" /> 개체를 사용하여 디렉터리를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-145">Creates a directory using a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="241bf-146">이 메서드 오버 로드를 사용 하 여 디렉터리를 만들려면 액세스 제어를 사용 하므로 가능성이 보안 적용 되기 전에 디렉터리에 액세스할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-146">Use this method overload to create a directory with access control, so there is no chance the directory can be accessed before security is applied.</span></span>  
  
 <span data-ttu-id="241bf-147">디렉터리가 이미 있는 경우이 메서드는 아무 작업도 수행 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-147">If the directory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="241bf-148">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-148">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="241bf-149">
            <paramref name="path" />로 지정한 디렉터리가 읽기 전용이거나 빈 디렉터리가 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-149">The directory specified by <paramref name="path" /> is read-only or is not empty.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="241bf-150">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-150">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="241bf-151">
            <paramref name="path" />가 빈 문자열이거나 공백만 포함하거나 <see cref="F:System.IO.Path.InvalidPathChars" />로 정의된 하나 이상의 잘못된 문자를 포함합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-151">
              <paramref name="path" /> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="241bf-152">
            <paramref name="path" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-152">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="241bf-153">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-153">The specified path, file name, or both exceed the system-defined maximum length.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="241bf-154">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-154">The specified path is invalid, such as being on an unmapped drive.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="241bf-155">콜론(:) 문자만으로 디렉터리를 만들려고 했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-155">Creating a directory with only the colon (:) character was attempted.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="241bf-156">디렉터리를 만들 수 있는 권한입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-156">for permission to create a directory.</span>
          </span>
          <span data-ttu-id="241bf-157">보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-157">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="241bf-158">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-158">Associated enumeration: <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateSubdirectory">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="241bf-159">지정된 경로에 하위 디렉터리를 하나 이상 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-159">Creates a subdirectory or subdirectories on the specified path.</span>
          </span>
          <span data-ttu-id="241bf-160">지정된 경로는 <see cref="T:System.IO.DirectoryInfo" /> 클래스의 이 인스턴스에 대한 상대적 경로일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-160">The specified path can be relative to this instance of the <see cref="T:System.IO.DirectoryInfo" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateSubdirectory">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo CreateSubdirectory (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo CreateSubdirectory(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSubdirectory (path As String) As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::DirectoryInfo ^ CreateSubdirectory(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.CreateSubdirectory : string -&gt; System.IO.DirectoryInfo" Usage="directoryInfo.CreateSubdirectory path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="241bf-161">지정된 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-161">The specified path.</span>
          </span>
          <span data-ttu-id="241bf-162">이 경로는 다른 디스크 볼륨이나 UNC(Universal Naming Convention) 이름이 될 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-162">This cannot be a different disk volume or Universal Naming Convention (UNC) name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="241bf-163">지정된 경로에 하위 디렉터리를 하나 이상 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-163">Creates a subdirectory or subdirectories on the specified path.</span>
          </span>
          <span data-ttu-id="241bf-164">지정된 경로는 <see cref="T:System.IO.DirectoryInfo" /> 클래스의 이 인스턴스에 대한 상대적 경로일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-164">The specified path can be relative to this instance of the <see cref="T:System.IO.DirectoryInfo" /> class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="241bf-165">
            <paramref name="path" />에 지정된 마지막 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-165">The last directory specified in <paramref name="path" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="241bf-166">에 지정 된 모든 디렉터리가 `path` 않은 경우 만들어집니다 부분이 `path` 올바르지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-166">Any and all directories specified in `path` are created, unless some part of `path` is invalid.</span></span> <span data-ttu-id="241bf-167">`path` 매개 변수는 파일 경로가 아닌 디렉터리 경로 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-167">The `path` parameter specifies a directory path, not a file path.</span></span> <span data-ttu-id="241bf-168">하위 디렉터리에 이미 있으면이 메서드는 아무 작업도 수행 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-168">If the subdirectory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="241bf-169">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-169">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="241bf-170">다음 예제에서는 하위 디렉터리를 만드는 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-170">The following example demonstrates creating a subdirectory.</span></span> <span data-ttu-id="241bf-171">이 예제에서는 만들어지는 디렉터리 만들어질 때 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-171">In this example, the created directories are removed once created.</span></span> <span data-ttu-id="241bf-172">따라서이 샘플을 테스트 하려면 주석 처리 코드에서 행 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-172">Therefore, to test this sample, comment out the delete lines in the code.</span></span>  
  
 [!code-cpp[directoryinfocreatesub#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfocreatesub/CPP/directoryinfocreatesub.cpp#1)]
 [!code-csharp[directoryinfocreatesub#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfocreatesub/CS/directoryinfocreatesub.cs#1)]
 [!code-vb[directoryinfocreatesub#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfocreatesub/VB/directoryinfocreatesub.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="241bf-173">
            <paramref name="path" />가 올바른 파일 경로를 지정하지 않거나 잘못된 <see langword="DirectoryInfo" /> 문자를 포함합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-173">
              <paramref name="path" /> does not specify a valid file path or contains invalid <see langword="DirectoryInfo" /> characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="241bf-174">
            <paramref name="path" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-174">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="241bf-175">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-175">The specified path is invalid, such as being on an unmapped drive.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="241bf-176">하위 디렉터리를 만들 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-176">The subdirectory cannot be created.</span>
          </span>
          <span data-ttu-id="241bf-177">-또는-  <paramref name="path" />에서 지정된 이름을 갖는 파일 또는 디렉터리가 이미 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-177">-or-  A file or directory already has the name specified by <paramref name="path" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="241bf-178">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-178">The specified path, file name, or both exceed the system-defined maximum length.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="241bf-179">호출자가 디렉터리를 만들기 위한 코드 액세스 권한이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-179">The caller does not have code access permission to create the directory.</span>
          </span>
          <span data-ttu-id="241bf-180">-또는-  반환된 <see cref="T:System.IO.DirectoryInfo" /> 개체에서 설명된 디렉터리를 읽기 위한 코드 액세스 권한이 호출자에게 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-180">-or-  The caller does not have code access permission to read the directory described by the returned <see cref="T:System.IO.DirectoryInfo" /> object.</span>
          </span>
          <span data-ttu-id="241bf-181">이 문제는 <paramref name="path" /> 매개 변수가 기존 디렉터리를 설명할 때 발생할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-181">This can occur when the <paramref name="path" /> parameter describes an existing directory.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="241bf-182">
            <paramref name="path" />에 드라이브 레이블("C:\\")에 속하지 않는 콜론 문자(:)가 포함되어 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-182">
              <paramref name="path" /> contains a colon character (:) that is not part of a drive label ("C:\\").</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="241bf-183">에 파일 읽기 및 쓰기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-183">for reading and writing files.</span>
          </span>
          <span data-ttu-id="241bf-184">연관 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-184">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateSubdirectory">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo CreateSubdirectory (string path, System.Security.AccessControl.DirectorySecurity directorySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo CreateSubdirectory(string path, class System.Security.AccessControl.DirectorySecurity directorySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::DirectoryInfo ^ CreateSubdirectory(System::String ^ path, System::Security::AccessControl::DirectorySecurity ^ directorySecurity);" />
      <MemberSignature Language="F#" Value="member this.CreateSubdirectory : string * System.Security.AccessControl.DirectorySecurity -&gt; System.IO.DirectoryInfo" Usage="directoryInfo.CreateSubdirectory (path, directorySecurity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="241bf-185">지정된 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-185">The specified path.</span>
          </span>
          <span data-ttu-id="241bf-186">이 경로는 다른 디스크 볼륨이나 UNC(Universal Naming Convention) 이름이 될 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-186">This cannot be a different disk volume or Universal Naming Convention (UNC) name.</span>
          </span>
        </param>
        <param name="directorySecurity">
          <span data-ttu-id="241bf-187">적용할 보안입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-187">The security to apply.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="241bf-188">지정된 경로에 지정된 보안을 사용하여 하위 디렉터리를 하나 이상 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-188">Creates a subdirectory or subdirectories on the specified path with the specified security.</span>
          </span>
          <span data-ttu-id="241bf-189">지정된 경로는 <see cref="T:System.IO.DirectoryInfo" /> 클래스의 이 인스턴스에 대한 상대적 경로일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-189">The specified path can be relative to this instance of the <see cref="T:System.IO.DirectoryInfo" /> class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="241bf-190">
            <paramref name="path" />에 지정된 마지막 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-190">The last directory specified in <paramref name="path" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="241bf-191">에 지정 된 모든 디렉터리가 `path` 않은 경우 만들어집니다 부분이 `path` 올바르지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-191">Any and all directories specified in `path` are created, unless some part of `path` is invalid.</span></span> <span data-ttu-id="241bf-192">`path` 매개 변수는 파일 경로가 아닌 디렉터리 경로 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-192">The `path` parameter specifies a directory path, not a file path.</span></span> <span data-ttu-id="241bf-193">하위 디렉터리에 이미 있으면이 메서드는 아무 작업도 수행 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-193">If the subdirectory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="241bf-194">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-194">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="241bf-195">
            <paramref name="path" />가 올바른 파일 경로를 지정하지 않거나 잘못된 <see langword="DirectoryInfo" /> 문자를 포함합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-195">
              <paramref name="path" /> does not specify a valid file path or contains invalid <see langword="DirectoryInfo" /> characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="241bf-196">
            <paramref name="path" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-196">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="241bf-197">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-197">The specified path is invalid, such as being on an unmapped drive.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="241bf-198">하위 디렉터리를 만들 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-198">The subdirectory cannot be created.</span>
          </span>
          <span data-ttu-id="241bf-199">-또는-  <paramref name="path" />에서 지정된 이름을 갖는 파일 또는 디렉터리가 이미 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-199">-or-  A file or directory already has the name specified by <paramref name="path" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="241bf-200">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-200">The specified path, file name, or both exceed the system-defined maximum length.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="241bf-201">호출자가 디렉터리를 만들기 위한 코드 액세스 권한이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-201">The caller does not have code access permission to create the directory.</span>
          </span>
          <span data-ttu-id="241bf-202">-또는-  반환된 <see cref="T:System.IO.DirectoryInfo" /> 개체에서 설명된 디렉터리를 읽기 위한 코드 액세스 권한이 호출자에게 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-202">-or-  The caller does not have code access permission to read the directory described by the returned <see cref="T:System.IO.DirectoryInfo" /> object.</span>
          </span>
          <span data-ttu-id="241bf-203">이 문제는 <paramref name="path" /> 매개 변수가 기존 디렉터리를 설명할 때 발생할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-203">This can occur when the <paramref name="path" /> parameter describes an existing directory.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="241bf-204">
            <paramref name="path" />에 드라이브 레이블("C:\\")에 속하지 않는 콜론 문자(:)가 포함되어 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-204">
              <paramref name="path" /> contains a colon character (:) that is not part of a drive label ("C:\\").</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="241bf-205">에 파일 읽기 및 쓰기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-205">for reading and writing files.</span>
          </span>
          <span data-ttu-id="241bf-206">연관 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-206">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Delete">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="241bf-207">경로에서 <see cref="T:System.IO.DirectoryInfo" /> 및 해당 내용을 삭제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-207">Deletes a <see cref="T:System.IO.DirectoryInfo" /> and its contents from a path.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public override void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Delete();" />
      <MemberSignature Language="F#" Value="override this.Delete : unit -&gt; unit" Usage="directoryInfo.Delete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="241bf-208">
            <see cref="T:System.IO.DirectoryInfo" />가 비어 있으면 이를 삭제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-208">Deletes this <see cref="T:System.IO.DirectoryInfo" /> if it is empty.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="241bf-209">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-209">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="241bf-210">다음 예에서는 비어 있지 않은 디렉터리를 삭제 하려고 하면 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-210">The following example throws an exception if you attempt to delete a directory that is not empty.</span></span>  
  
 [!code-cpp[DirInfo Delete1#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Delete1/CPP/dirinfo delete1.cpp#1)]
 [!code-csharp[DirInfo Delete1#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Delete1/CS/dirinfo delete1.cs#1)]
 [!code-vb[DirInfo Delete1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Delete1/VB/dirinfo delete1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="241bf-211">디렉터리에 읽기 전용 파일이 포함되어 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-211">The directory contains a read-only file.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="241bf-212">이 <see cref="T:System.IO.DirectoryInfo" /> 개체가 설명하는 디렉터리가 없거나 찾을 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-212">The directory described by this <see cref="T:System.IO.DirectoryInfo" /> object does not exist or could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="241bf-213">디렉터리가 비어 있지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-213">The directory is not empty.</span>
          </span>
          <span data-ttu-id="241bf-214">-또는-  이 디렉터리는 응용 프로그램의 현재 작업 디렉터리입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-214">-or-  The directory is the application's current working directory.</span>
          </span>
          <span data-ttu-id="241bf-215">-또는-  디렉터리에 열린 핸들이 있고 운영 체제가 Windows XP 또는 이전 버전입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-215">-or-  There is an open handle on the directory, and the operating system is Windows XP or earlier.</span>
          </span>
          <span data-ttu-id="241bf-216">이 열린 핸들은 디렉터리를 열거하면 발생할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-216">This open handle can result from enumerating directories.</span>
          </span>
          <span data-ttu-id="241bf-217">자세한 내용은 [방법: 디렉터리 및 파일 열거](~/docs/standard/io/how-to-enumerate-directories-and-files.md)를 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-217">For more information, see [How to: Enumerate Directories and Files](~/docs/standard/io/how-to-enumerate-directories-and-files.md).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="241bf-218">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-218">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="241bf-219">디렉터리를 작성 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-219">for writing directories.</span>
          </span>
          <span data-ttu-id="241bf-220">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-220">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete (bool recursive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete(bool recursive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Delete(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete (recursive As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete(bool recursive);" />
      <MemberSignature Language="F#" Value="override this.Delete : bool -&gt; unit" Usage="directoryInfo.Delete recursive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recursive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="recursive">
          <span data-ttu-id="241bf-221">이 디렉터리, 하위 디렉터리 및 모든 파일을 삭제하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-221">
              <see langword="true" /> to delete this directory, its subdirectories, and all files; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="241bf-222">하위 디렉터리와 파일을 삭제할지를 지정하여 <see cref="T:System.IO.DirectoryInfo" />의 이 인스턴스를 삭제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-222">Deletes this instance of a <see cref="T:System.IO.DirectoryInfo" />, specifying whether to delete subdirectories and files.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="241bf-223">경우는 `DirectoryInfo` 파일이 나 하위 디렉터리에 있는 경우이 메서드는 삭제는 `DirectoryInfo` 경우에 `recursive` 은 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-223">If the `DirectoryInfo` has no files or subdirectories, this method deletes the `DirectoryInfo` even if `recursive` is `false`.</span></span> <span data-ttu-id="241bf-224">삭제 하는 한 `DirectoryInfo` 비어 때 `recursive` 은 `false` throw는 <xref:System.IO.IOException>합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-224">Attempting to delete a `DirectoryInfo` that is not empty when `recursive` is `false` throws an <xref:System.IO.IOException>.</span></span>  
  
 <span data-ttu-id="241bf-225">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-225">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="241bf-226">다음 예제에서는 디렉터리를 삭제 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-226">The following example demonstrates deleting a directory.</span></span> <span data-ttu-id="241bf-227">디렉터리가 제거 되기 때문에 먼저 주석으로 처리는 `Delete` 디렉터리가 있는지를 테스트 하려면.</span><span class="sxs-lookup"><span data-stu-id="241bf-227">Because the directory is removed, first comment out the `Delete` line to test that the directory exists.</span></span> <span data-ttu-id="241bf-228">그런 다음 아래 같은 줄의 코드를 테스트 디렉터리가 성공적으로 제거 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-228">Then uncomment the same line of code to test that the directory was removed successfully.</span></span>  
  
 [!code-cpp[directoryinfodelete#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfodelete/CPP/directoryinfodelete.cpp#1)]
 [!code-csharp[directoryinfodelete#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfodelete/CS/directoryinfodelete.cs#1)]
 [!code-vb[directoryinfodelete#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfodelete/VB/directoryinfodelete.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="241bf-229">디렉터리에 읽기 전용 파일이 포함되어 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-229">The directory contains a read-only file.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="241bf-230">이 <see cref="T:System.IO.DirectoryInfo" /> 개체가 설명하는 디렉터리가 없거나 찾을 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-230">The directory described by this <see cref="T:System.IO.DirectoryInfo" /> object does not exist or could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="241bf-231">디렉터리가 읽기 전용인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-231">The directory is read-only.</span>
          </span>
          <span data-ttu-id="241bf-232">-또는-  디렉터리에 하나 이상의 파일 또는 하위 디렉터리가 포함되어 있고 <paramref name="recursive" />가 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-232">-or-  The directory contains one or more files or subdirectories and <paramref name="recursive" /> is <see langword="false" />.</span>
          </span>
          <span data-ttu-id="241bf-233">-또는-  이 디렉터리는 응용 프로그램의 현재 작업 디렉터리입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-233">-or-  The directory is the application's current working directory.</span>
          </span>
          <span data-ttu-id="241bf-234">-또는-  디렉터리 또는 해당 파일 중 하나에 열린 핸들이 있고 운영 체제가 Windows XP 또는 이전 버전입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-234">-or-  There is an open handle on the directory or on one of its files, and the operating system is Windows XP or earlier.</span>
          </span>
          <span data-ttu-id="241bf-235">이 열린 핸들은 디렉터리 및 파일을 열거하면 발생할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-235">This open handle can result from enumerating directories and files.</span>
          </span>
          <span data-ttu-id="241bf-236">자세한 내용은 [방법: 디렉터리 및 파일 열거](~/docs/standard/io/how-to-enumerate-directories-and-files.md)를 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-236">For more information, see [How to: Enumerate Directories and Files](~/docs/standard/io/how-to-enumerate-directories-and-files.md).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="241bf-237">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-237">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermissionAccess">
          <span data-ttu-id="241bf-238">쓰기에 대 한 쓰기 권한이 필요한 플래그는 <see langword="DirectoryInfo" /> 와 하위 디렉터리를 삭제할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-238">Write flag required for write permission to the <see langword="DirectoryInfo" /> and subdirectories to be deleted.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnumerateDirectories">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="241bf-239">현재 디렉터리에 있는 디렉터리 정보의 열거 가능 컬렉션을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-239">Returns an enumerable collection of directory information in the current directory.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateDirectories () As IEnumerable(Of DirectoryInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories();" />
      <MemberSignature Language="F#" Value="member this.EnumerateDirectories : unit -&gt; seq&lt;System.IO.DirectoryInfo&gt;" Usage="directoryInfo.EnumerateDirectories " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="241bf-240">현재 디렉터리에 있는 디렉터리 정보의 열거 가능 컬렉션을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-240">Returns an enumerable collection of directory information in the current directory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="241bf-241">현재 디렉터리에 있는 디렉터리의 열거 가능 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-241">An enumerable collection of directories in the current directory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="241bf-242"><xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> 및 <xref:System.IO.DirectoryInfo.GetDirectories%2A> 방법은 다음과 같이 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-242">The <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> and <xref:System.IO.DirectoryInfo.GetDirectories%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="241bf-243">사용 하는 경우 <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>의 컬렉션을 열거 하기 <xref:System.IO.DirectoryInfo> 전체 컬렉션을 반환 하기 전에 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-243">When you use <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, you can start enumerating the collection of <xref:System.IO.DirectoryInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="241bf-244">사용 하는 경우 <xref:System.IO.DirectoryInfo.GetDirectories%2A>를의 전체 배열에 대해 기다려야 <xref:System.IO.DirectoryInfo> 개체 반환 되기 전에 배열에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-244">When you use <xref:System.IO.DirectoryInfo.GetDirectories%2A>, you must wait for the whole array of <xref:System.IO.DirectoryInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="241bf-245">따라서 많은 파일 및 디렉터리를 사용 하 여 작업할 때 <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> 더 효과적일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-245">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="241bf-246">이 메서드는 다음 값을 미리 채웁니다 <xref:System.IO.DirectoryInfo> 속성:</span><span class="sxs-lookup"><span data-stu-id="241bf-246">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="241bf-247">반환된 된 컬렉션은 캐시 되지 않습니다. 호출할 때마다는 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 메서드는 컬렉션에는 새 열거형을 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-247">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on  the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="241bf-248">다음 예제에서는 C:\Program Files 디렉터리에 하위 디렉터리를 열거 하 고 LINQ 쿼리를 사용 하 여 2009 이전 값을 확인 하 여 생성 된 모든 디렉터리의 이름을 반환 하는 <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-248">The following example enumerates the subdirectories under the C:\Program Files directory and uses a LINQ query to return the names of all directories that were created before 2009 by checking the value of the <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A> property.</span></span>  
  
 <span data-ttu-id="241bf-249">하위 디렉터리의 이름이 필요한 경우 사용 하 여 정적 <xref:System.IO.Directory> 성능 향상에 대 한 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-249">If you only need the names of the subdirectories, use the static <xref:System.IO.Directory> class for better performance.</span></span> <span data-ttu-id="241bf-250">예를 들어 참조는 <xref:System.IO.Directory.EnumerateDirectories%28System.String%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="241bf-250">For an example, see the <xref:System.IO.Directory.EnumerateDirectories%28System.String%29> method.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumDirs#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumdirs/cs/program.cs#1)]
 [!code-vb[System.IO.DirectoryInfo.EnumDirs#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumdirs/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="241bf-251">
            <see cref="T:System.IO.DirectoryInfo" /> 개체에 캡슐화된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-251">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="241bf-252">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-252">The caller does not have the required permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateDirectories (searchPattern As String) As IEnumerable(Of DirectoryInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.EnumerateDirectories : string -&gt; seq&lt;System.IO.DirectoryInfo&gt;" Usage="directoryInfo.EnumerateDirectories searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern">
          <span data-ttu-id="241bf-253">디렉터리 이름과 일치하는지 비교할 검색 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-253">The search string to match against the names of directories.</span>
          </span>
          <span data-ttu-id="241bf-254">이 매개 변수는 유효한 리터럴 경로와 와일드카드(\* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-254">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="241bf-255">지정된 검색 패턴과 일치하는 디렉터리 정보의 열거 가능 컬렉션을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-255">Returns an enumerable collection of directory information that matches a specified search pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="241bf-256">
            <paramref name="searchPattern" />과 일치하는 디렉터리의 열거 가능 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-256">An enumerable collection of directories that matches <paramref name="searchPattern" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="241bf-257">`searchPattern` 리터럴 및 와일드 카드 문자 조합일 수 있지만 정규식을 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-257">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="241bf-258">에 다음 와일드 카드 지정자를 사용할 수 `searchPattern`합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-258">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="241bf-259">와일드 카드 지정자</span><span class="sxs-lookup"><span data-stu-id="241bf-259">Wildcard specifier</span></span>|<span data-ttu-id="241bf-260">일치 항목</span><span class="sxs-lookup"><span data-stu-id="241bf-260">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="241bf-261">\*(별표)</span><span class="sxs-lookup"><span data-stu-id="241bf-261">\* (asterisk)</span></span>|<span data-ttu-id="241bf-262">해당 위치에 0 개 이상의 문자가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-262">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="241bf-263">?</span><span class="sxs-lookup"><span data-stu-id="241bf-263">?</span></span> <span data-ttu-id="241bf-264">(물음표)</span><span class="sxs-lookup"><span data-stu-id="241bf-264">(question mark)</span></span>|<span data-ttu-id="241bf-265">해당 위치에 0 개 또는 1 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-265">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="241bf-266">와일드 카드 문자는 리터럴 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-266">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="241bf-267">예를 들어 문자열 "\* t"에서 문자 "t"로 끝나는 모든 이름 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-267">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="241bf-268">".</span><span class="sxs-lookup"><span data-stu-id="241bf-268">".</span></span> <span data-ttu-id="241bf-269">`searchPattern` 문자열 "s\*"에서 모든 이름 검색 `path` "s"로 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-269">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="241bf-270"><xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> 및 <xref:System.IO.DirectoryInfo.GetDirectories%2A> 방법은 다음과 같이 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-270">The <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> and <xref:System.IO.DirectoryInfo.GetDirectories%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="241bf-271">사용 하는 경우 <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>의 컬렉션을 열거 하기 <xref:System.IO.DirectoryInfo> 전체 컬렉션을 반환 하기 전에 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-271">When you use <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, you can start enumerating the collection of <xref:System.IO.DirectoryInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="241bf-272">사용 하는 경우 <xref:System.IO.DirectoryInfo.GetDirectories%2A>를의 전체 배열에 대해 기다려야 <xref:System.IO.DirectoryInfo> 개체 반환 되기 전에 배열에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-272">When you use <xref:System.IO.DirectoryInfo.GetDirectories%2A>, you must wait for the whole array of <xref:System.IO.DirectoryInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="241bf-273">따라서 많은 파일 및 디렉터리를 사용 하 여 작업할 때 <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> 더 효과적일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-273">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="241bf-274">이 메서드는 다음 값을 미리 채웁니다 <xref:System.IO.DirectoryInfo> 속성:</span><span class="sxs-lookup"><span data-stu-id="241bf-274">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="241bf-275">반환된 된 컬렉션은 캐시 되지 않습니다. 호출할 때마다는 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 메서드는 컬렉션에는 새 열거형을 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-275">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on  the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="241bf-276">
            <paramref name="searchPattern" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-276">
              <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="241bf-277">
            <see cref="T:System.IO.DirectoryInfo" /> 개체에 캡슐화된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-277">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="241bf-278">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-278">The caller does not have the required permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.EnumerateDirectories : string * System.IO.EnumerationOptions -&gt; seq&lt;System.IO.DirectoryInfo&gt;" Usage="directoryInfo.EnumerateDirectories (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.EnumerateDirectories : string * System.IO.SearchOption -&gt; seq&lt;System.IO.DirectoryInfo&gt;" Usage="directoryInfo.EnumerateDirectories (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" />
      </Parameters>
      <Docs>
        <param name="searchPattern">
          <span data-ttu-id="241bf-279">디렉터리 이름과 일치하는지 비교할 검색 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-279">The search string to match against the names of directories.</span>
          </span>
          <span data-ttu-id="241bf-280">이 매개 변수는 유효한 리터럴 경로와 와일드카드(\* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-280">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span>
          </span>
        </param>
        <param name="searchOption">
          <span data-ttu-id="241bf-281">검색 작업에 현재 디렉터리만 포함할지 아니면 모든 하위 디렉터리를 포함할지를 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-281">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span>
          </span>
          <span data-ttu-id="241bf-282">기본값은 <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-282">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="241bf-283">지정된 검색 패턴 및 하위 디렉터리 검색 옵션과 일치하는 디렉터리 정보의 열거 가능 컬렉션을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-283">Returns an enumerable collection of directory information that matches a specified search pattern and search subdirectory option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="241bf-284">
            <paramref name="searchPattern" /> 및 <paramref name="searchOption" />과 일치하는 디렉터리의 열거 가능 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-284">An enumerable collection of directories that matches <paramref name="searchPattern" /> and <paramref name="searchOption" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="241bf-285">`searchPattern` 리터럴 및 와일드 카드 문자 조합일 수 있지만 정규식을 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-285">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="241bf-286">에 다음 와일드 카드 지정자를 사용할 수 `searchPattern`합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-286">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="241bf-287">와일드 카드 지정자</span><span class="sxs-lookup"><span data-stu-id="241bf-287">Wildcard specifier</span></span>|<span data-ttu-id="241bf-288">일치 항목</span><span class="sxs-lookup"><span data-stu-id="241bf-288">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="241bf-289">\*(별표)</span><span class="sxs-lookup"><span data-stu-id="241bf-289">\* (asterisk)</span></span>|<span data-ttu-id="241bf-290">해당 위치에 0 개 이상의 문자가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-290">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="241bf-291">?</span><span class="sxs-lookup"><span data-stu-id="241bf-291">?</span></span> <span data-ttu-id="241bf-292">(물음표)</span><span class="sxs-lookup"><span data-stu-id="241bf-292">(question mark)</span></span>|<span data-ttu-id="241bf-293">해당 위치에 0 개 또는 1 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-293">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="241bf-294">와일드 카드 문자는 리터럴 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-294">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="241bf-295">예를 들어 문자열 "\* t"에서 문자 "t"로 끝나는 모든 이름 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-295">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="241bf-296">".</span><span class="sxs-lookup"><span data-stu-id="241bf-296">".</span></span> <span data-ttu-id="241bf-297">`searchPattern` 문자열 "s\*"에서 모든 이름 검색 `path` "s"로 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-297">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="241bf-298"><xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> 및 <xref:System.IO.DirectoryInfo.GetDirectories%2A> 방법은 다음과 같이 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-298">The <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> and <xref:System.IO.DirectoryInfo.GetDirectories%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="241bf-299">사용 하는 경우 <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>의 컬렉션을 열거 하기 <xref:System.IO.DirectoryInfo> 전체 컬렉션을 반환 하기 전에 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-299">When you use <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, you can start enumerating the collection of <xref:System.IO.DirectoryInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="241bf-300">사용 하는 경우 <xref:System.IO.DirectoryInfo.GetDirectories%2A>를의 전체 배열에 대해 기다려야 <xref:System.IO.DirectoryInfo> 개체 반환 되기 전에 배열에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-300">When you use <xref:System.IO.DirectoryInfo.GetDirectories%2A>, you must wait for the whole array of <xref:System.IO.DirectoryInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="241bf-301">따라서 많은 파일 및 디렉터리를 사용 하 여 작업할 때 <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> 더 효과적일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-301">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="241bf-302">이 메서드는 다음 값을 미리 채웁니다 <xref:System.IO.DirectoryInfo> 속성:</span><span class="sxs-lookup"><span data-stu-id="241bf-302">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="241bf-303">반환된 된 컬렉션은 캐시 되지 않습니다. 호출할 때마다는 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 메서드는 컬렉션에는 새 열거형을 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-303">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on  the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="241bf-304">지정된 된 디렉터리에서 시작 하는 다음 예제에서는이 메서드를 사용 하 여 및 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 메서드 파일 및 시작 디렉터리 내에서 디렉터리를 열거 하 고 모든 세부 정보를 표시 크기의 파일 이상 10MB.</span><span class="sxs-lookup"><span data-stu-id="241bf-304">The following example, starting from a specified directory, uses this method and the <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> method to enumerate the files and directories within the start directory and display details of any files over 10 MB in size.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumerateDirectories#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumeratedirectories/cs/program.cs#1)]
 [!code-vb[System.IO.DirectoryInfo.EnumerateDirectories#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumeratedirectories/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="241bf-305">
            <paramref name="searchPattern" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-305">
              <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="241bf-306">
            <paramref name="searchOption" />은 유효한 <see cref="T:System.IO.SearchOption" /> 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-306">
              <paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="241bf-307">
            <see cref="T:System.IO.DirectoryInfo" /> 개체에 캡슐화된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-307">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="241bf-308">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-308">The caller does not have the required permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnumerateFiles">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="241bf-309">현재 디렉터리에 있는 파일 정보의 열거 가능 컬렉션을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-309">Returns an enumerable collection of file information in the current directory.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFiles () As IEnumerable(Of FileInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles();" />
      <MemberSignature Language="F#" Value="member this.EnumerateFiles : unit -&gt; seq&lt;System.IO.FileInfo&gt;" Usage="directoryInfo.EnumerateFiles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="241bf-310">현재 디렉터리에 있는 파일 정보의 열거 가능 컬렉션을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-310">Returns an enumerable collection of file information in the current directory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="241bf-311">현재 디렉터리에 있는 파일의 열거 가능 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-311">An enumerable collection of the files in the current directory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="241bf-312"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 및 <xref:System.IO.DirectoryInfo.GetFiles%2A> 방법은 다음과 같이 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-312">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="241bf-313">사용 하는 경우 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>의 컬렉션을 열거 하기 <xref:System.IO.FileInfo> 전체 컬렉션을 반환 하기 전에 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-313">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="241bf-314">사용 하는 경우 <xref:System.IO.DirectoryInfo.GetFiles%2A>를의 전체 배열에 대해 기다려야 <xref:System.IO.FileInfo> 개체 반환 되기 전에 배열에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-314">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="241bf-315">따라서 많은 파일 및 디렉터리를 사용 하 여 작업할 때 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 더 효과적일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-315">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="241bf-316">이 메서드는 다음 값을 미리 채웁니다 <xref:System.IO.FileInfo> 속성:</span><span class="sxs-lookup"><span data-stu-id="241bf-316">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
 <span data-ttu-id="241bf-317">반환된 된 컬렉션은 캐시 되지 않습니다. 호출할 때마다는 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 메서드는 컬렉션에는 새 열거형을 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-317">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="241bf-318">다음 예제에서는 지정 된 디렉터리 아래 파일을 열거 하 고 LINQ 쿼리를 사용 하 여 2009 이전 값을 확인 하 여 생성 된 모든 파일의 이름을 반환 하는 <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-318">The following example enumerates the files under a specified directory and uses a LINQ query to return the names of all files that were created before 2009 by checking the value of the <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A> property.</span></span>  
  
 <span data-ttu-id="241bf-319">파일의 이름을 하기만 하는 경우 사용 하 여 정적 <xref:System.IO.Directory> 성능 향상에 대 한 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-319">If you only need the names of the files, use the static <xref:System.IO.Directory> class for better performance.</span></span> <span data-ttu-id="241bf-320">예를 들어 참조는 <xref:System.IO.Directory.EnumerateFiles%28System.String%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="241bf-320">For an example, see the <xref:System.IO.Directory.EnumerateFiles%28System.String%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program.cs#1)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module1.vb#1)]  
  
 <span data-ttu-id="241bf-321">다음 예제에서는 다른 검색 옵션을 사용 하 여 디렉터리의 파일을 열거 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-321">The following example shows how to enumerate files in a directory by using different search options.</span></span> <span data-ttu-id="241bf-322">파일 이름은 log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, SubFile.txt 라는 파일에 있는 하위 디렉터리에 있는 디렉터리를 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-322">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program2.cs#2)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="241bf-323">
            <see cref="T:System.IO.DirectoryInfo" /> 개체에 캡슐화된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-323">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="241bf-324">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-324">The caller does not have the required permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFiles (searchPattern As String) As IEnumerable(Of FileInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFiles : string -&gt; seq&lt;System.IO.FileInfo&gt;" Usage="directoryInfo.EnumerateFiles searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern">
          <span data-ttu-id="241bf-325">파일 이름과 일치하는지 비교할 검색 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-325">The search string to match against the names of files.</span>
          </span>
          <span data-ttu-id="241bf-326">이 매개 변수는 유효한 리터럴 경로와 와일드카드(\* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-326">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="241bf-327">검색 패턴과 일치하는 파일 정보의 열거 가능 컬렉션을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-327">Returns an enumerable collection of file information that matches a search pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="241bf-328">
            <paramref name="searchPattern" />과 일치하는 파일의 열거 가능 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-328">An enumerable collection of files that matches <paramref name="searchPattern" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="241bf-329">`searchPattern` 리터럴 및 와일드 카드 문자 조합일 수 있지만 정규식을 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-329">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="241bf-330">에 다음 와일드 카드 지정자를 사용할 수 `searchPattern`합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-330">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="241bf-331">와일드 카드 지정자</span><span class="sxs-lookup"><span data-stu-id="241bf-331">Wildcard specifier</span></span>|<span data-ttu-id="241bf-332">일치 항목</span><span class="sxs-lookup"><span data-stu-id="241bf-332">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="241bf-333">\*(별표)</span><span class="sxs-lookup"><span data-stu-id="241bf-333">\* (asterisk)</span></span>|<span data-ttu-id="241bf-334">해당 위치에 0 개 이상의 문자가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-334">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="241bf-335">?</span><span class="sxs-lookup"><span data-stu-id="241bf-335">?</span></span> <span data-ttu-id="241bf-336">(물음표)</span><span class="sxs-lookup"><span data-stu-id="241bf-336">(question mark)</span></span>|<span data-ttu-id="241bf-337">해당 위치에 0 개 또는 1 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-337">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="241bf-338">와일드 카드 문자는 리터럴 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-338">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="241bf-339">예를 들어 문자열 "\* t"에서 문자 "t"로 끝나는 모든 이름 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-339">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="241bf-340">".</span><span class="sxs-lookup"><span data-stu-id="241bf-340">".</span></span> <span data-ttu-id="241bf-341">`searchPattern` 문자열 "s\*"에서 모든 이름 검색 `path` "s"로 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-341">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="241bf-342"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 및 <xref:System.IO.DirectoryInfo.GetFiles%2A> 방법은 다음과 같이 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-342">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="241bf-343">사용 하는 경우 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>의 컬렉션을 열거 하기 <xref:System.IO.FileInfo> 전체 컬렉션을 반환 하기 전에 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-343">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="241bf-344">사용 하는 경우 <xref:System.IO.DirectoryInfo.GetFiles%2A>를의 전체 배열에 대해 기다려야 <xref:System.IO.FileInfo> 개체 반환 되기 전에 배열에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-344">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="241bf-345">따라서 많은 파일 및 디렉터리를 사용 하 여 작업할 때 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 더 효과적일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-345">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="241bf-346">이 메서드는 다음 값을 미리 채웁니다 <xref:System.IO.FileInfo> 속성:</span><span class="sxs-lookup"><span data-stu-id="241bf-346">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
 <span data-ttu-id="241bf-347">반환된 된 컬렉션은 캐시 되지 않습니다. 호출할 때마다는 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 메서드는 컬렉션에는 새 열거형을 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-347">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="241bf-348">다음 예제에서는 다른 검색 옵션을 사용 하 여 디렉터리의 파일을 열거 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-348">The following example shows how to enumerate files in a directory by using different search options.</span></span> <span data-ttu-id="241bf-349">파일 이름은 log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, SubFile.txt 라는 파일에 있는 하위 디렉터리에 있는 디렉터리를 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-349">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program2.cs#2)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="241bf-350">
            <paramref name="searchPattern" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-350">
              <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="241bf-351">
            <see cref="T:System.IO.DirectoryInfo" /> 개체에 캡슐화된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-351">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid, (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="241bf-352">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-352">The caller does not have the required permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFiles : string * System.IO.EnumerationOptions -&gt; seq&lt;System.IO.FileInfo&gt;" Usage="directoryInfo.EnumerateFiles (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFiles : string * System.IO.SearchOption -&gt; seq&lt;System.IO.FileInfo&gt;" Usage="directoryInfo.EnumerateFiles (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" />
      </Parameters>
      <Docs>
        <param name="searchPattern">
          <span data-ttu-id="241bf-353">파일 이름과 일치하는지 비교할 검색 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-353">The search string to match against the names of files.</span>
          </span>
          <span data-ttu-id="241bf-354">이 매개 변수는 유효한 리터럴 경로와 와일드카드(\* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-354">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span>
          </span>
        </param>
        <param name="searchOption">
          <span data-ttu-id="241bf-355">검색 작업에 현재 디렉터리만 포함할지 아니면 모든 하위 디렉터리를 포함할지를 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-355">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span>
          </span>
          <span data-ttu-id="241bf-356">기본값은 <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-356">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="241bf-357">지정된 검색 패턴 및 하위 디렉터리 검색 옵션과 일치하는 파일 정보의 열거 가능 컬렉션을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-357">Returns an enumerable collection of file information that matches a specified search pattern and search subdirectory option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="241bf-358">
            <paramref name="searchPattern" /> 및 <paramref name="searchOption" />과 일치하는 파일의 열거 가능 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-358">An enumerable collection of files that matches <paramref name="searchPattern" /> and <paramref name="searchOption" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="241bf-359">`searchPattern` 리터럴 및 와일드 카드 문자 조합일 수 있지만 정규식을 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-359">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="241bf-360">에 다음 와일드 카드 지정자를 사용할 수 `searchPattern`합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-360">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="241bf-361">와일드 카드 지정자</span><span class="sxs-lookup"><span data-stu-id="241bf-361">Wildcard specifier</span></span>|<span data-ttu-id="241bf-362">일치 항목</span><span class="sxs-lookup"><span data-stu-id="241bf-362">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="241bf-363">\*(별표)</span><span class="sxs-lookup"><span data-stu-id="241bf-363">\* (asterisk)</span></span>|<span data-ttu-id="241bf-364">해당 위치에 0 개 이상의 문자가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-364">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="241bf-365">?</span><span class="sxs-lookup"><span data-stu-id="241bf-365">?</span></span> <span data-ttu-id="241bf-366">(물음표)</span><span class="sxs-lookup"><span data-stu-id="241bf-366">(question mark)</span></span>|<span data-ttu-id="241bf-367">해당 위치에 0 개 또는 1 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-367">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="241bf-368">와일드 카드 문자는 리터럴 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-368">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="241bf-369">예를 들어 문자열 "\* t"에서 문자 "t"로 끝나는 모든 이름 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-369">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="241bf-370">".</span><span class="sxs-lookup"><span data-stu-id="241bf-370">".</span></span> <span data-ttu-id="241bf-371">`searchPattern` 문자열 "s\*"에서 모든 이름 검색 `path` "s"로 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-371">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="241bf-372"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 및 <xref:System.IO.DirectoryInfo.GetFiles%2A> 방법은 다음과 같이 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-372">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="241bf-373">사용 하는 경우 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>의 컬렉션을 열거 하기 <xref:System.IO.FileInfo> 전체 컬렉션을 반환 하기 전에 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-373">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="241bf-374">사용 하는 경우 <xref:System.IO.DirectoryInfo.GetFiles%2A>를의 전체 배열에 대해 기다려야 <xref:System.IO.FileInfo> 개체 반환 되기 전에 배열에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-374">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="241bf-375">따라서 많은 파일 및 디렉터리를 사용 하 여 작업할 때 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 더 효과적일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-375">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="241bf-376">이 메서드는 다음 값을 미리 채웁니다 <xref:System.IO.FileInfo> 속성:</span><span class="sxs-lookup"><span data-stu-id="241bf-376">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
 <span data-ttu-id="241bf-377">반환된 된 컬렉션은 캐시 되지 않습니다. 호출할 때마다는 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 메서드는 컬렉션에는 새 열거형을 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-377">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="241bf-378">다음 예제에서는 다른 검색 옵션을 사용 하 여 디렉터리의 파일을 열거 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-378">The following example shows how to enumerate files in a directory by using different search options.</span></span> <span data-ttu-id="241bf-379">파일 이름은 log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, SubFile.txt 라는 파일에 있는 하위 디렉터리에 있는 디렉터리를 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-379">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program2.cs#2)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="241bf-380">
            <paramref name="searchPattern" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-380">
              <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="241bf-381">
            <paramref name="searchOption" />은 유효한 <see cref="T:System.IO.SearchOption" /> 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-381">
              <paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="241bf-382">
            <see cref="T:System.IO.DirectoryInfo" /> 개체에 캡슐화된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-382">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="241bf-383">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-383">The caller does not have the required permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnumerateFileSystemInfos">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="241bf-384">현재 디렉터리에 있는 파일 시스템 정보의 열거 가능 컬렉션을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-384">Returns an enumerable collection of file system information in the current directory.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFileSystemInfos () As IEnumerable(Of FileSystemInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos();" />
      <MemberSignature Language="F#" Value="member this.EnumerateFileSystemInfos : unit -&gt; seq&lt;System.IO.FileSystemInfo&gt;" Usage="directoryInfo.EnumerateFileSystemInfos " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="241bf-385">현재 디렉터리에 있는 파일 시스템 정보의 열거 가능 컬렉션을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-385">Returns an enumerable collection of file system information in the current directory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="241bf-386">현재 디렉터리에 있는 파일 시스템 정보의 열거 가능 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-386">An enumerable collection of file system information in the current directory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="241bf-387"><xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> 및 <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> 방법은 다음과 같이 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-387">The <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> and <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="241bf-388">사용 하는 경우 <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>의 컬렉션을 열거 하기 <xref:System.IO.FileSystemInfo> 전체 컬렉션을 반환 하기 전에 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-388">When you use <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, you can start enumerating the collection of <xref:System.IO.FileSystemInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="241bf-389">사용 하는 경우 <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>를의 전체 배열에 대해 기다려야 <xref:System.IO.FileSystemInfo> 개체 반환 되기 전에 배열에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-389">When you use <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, you must wait for the whole array of <xref:System.IO.FileSystemInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="241bf-390">따라서 많은 파일 및 디렉터리를 사용 하 여 작업할 때 <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> 더 효과적일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-390">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="241bf-391">이 메서드는 다음 값을 미리 채웁니다 <xref:System.IO.FileSystemInfo> 속성:</span><span class="sxs-lookup"><span data-stu-id="241bf-391">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="241bf-392">반환된 된 컬렉션은 캐시 되지 않습니다. 호출할 때마다는 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 메서드는 컬렉션에는 새 열거형을 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-392">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="241bf-393">
            <see cref="T:System.IO.DirectoryInfo" /> 개체에 캡슐화된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-393">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="241bf-394">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-394">The caller does not have the required permission.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFileSystemInfos (searchPattern As String) As IEnumerable(Of FileSystemInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFileSystemInfos : string -&gt; seq&lt;System.IO.FileSystemInfo&gt;" Usage="directoryInfo.EnumerateFileSystemInfos searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern">
          <span data-ttu-id="241bf-395">디렉터리 이름과 일치하는지 비교할 검색 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-395">The search string to match against the names of directories.</span>
          </span>
          <span data-ttu-id="241bf-396">이 매개 변수는 유효한 리터럴 경로와 와일드카드(\* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-396">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="241bf-397">지정된 검색 패턴과 일치하는 파일 시스템 정보의 열거 가능 컬렉션을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-397">Returns an enumerable collection of file system information that matches a specified search pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="241bf-398">
            <paramref name="searchPattern" />과 일치하는 파일 시스템 정보의 열거 가능 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-398">An enumerable collection of file system information objects that matches <paramref name="searchPattern" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="241bf-399">`searchPattern` 리터럴 및 와일드 카드 문자 조합일 수 있지만 정규식을 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-399">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="241bf-400">에 다음 와일드 카드 지정자를 사용할 수 `searchPattern`합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-400">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="241bf-401">와일드 카드 지정자</span><span class="sxs-lookup"><span data-stu-id="241bf-401">Wildcard specifier</span></span>|<span data-ttu-id="241bf-402">일치 항목</span><span class="sxs-lookup"><span data-stu-id="241bf-402">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="241bf-403">\*(별표)</span><span class="sxs-lookup"><span data-stu-id="241bf-403">\* (asterisk)</span></span>|<span data-ttu-id="241bf-404">해당 위치에 0 개 이상의 문자가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-404">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="241bf-405">?</span><span class="sxs-lookup"><span data-stu-id="241bf-405">?</span></span> <span data-ttu-id="241bf-406">(물음표)</span><span class="sxs-lookup"><span data-stu-id="241bf-406">(question mark)</span></span>|<span data-ttu-id="241bf-407">해당 위치에 0 개 또는 1 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-407">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="241bf-408">와일드 카드 문자는 리터럴 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-408">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="241bf-409">예를 들어 문자열 "\* t"에서 문자 "t"로 끝나는 모든 이름 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-409">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="241bf-410">".</span><span class="sxs-lookup"><span data-stu-id="241bf-410">".</span></span> <span data-ttu-id="241bf-411">`searchPattern` 문자열 "s\*"에서 모든 이름 검색 `path` "s"로 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-411">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="241bf-412"><xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> 및 <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> 방법은 다음과 같이 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-412">The <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> and <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="241bf-413">사용 하는 경우 <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>의 컬렉션을 열거 하기 <xref:System.IO.FileSystemInfo> 전체 컬렉션을 반환 하기 전에 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-413">When you use <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, you can start enumerating the collection of <xref:System.IO.FileSystemInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="241bf-414">사용 하는 경우 <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>를의 전체 배열에 대해 기다려야 <xref:System.IO.FileSystemInfo> 개체 반환 되기 전에 배열에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-414">When you use <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, you must wait for the whole array of <xref:System.IO.FileSystemInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="241bf-415">따라서 많은 파일 및 디렉터리를 사용 하 여 작업할 때 <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> 더 효과적일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-415">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="241bf-416">이 메서드는 다음 값을 미리 채웁니다 <xref:System.IO.FileSystemInfo> 속성:</span><span class="sxs-lookup"><span data-stu-id="241bf-416">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="241bf-417">반환된 된 컬렉션은 캐시 되지 않습니다. 호출할 때마다는 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 메서드는 컬렉션에는 새 열거형을 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-417">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="241bf-418">
            <paramref name="searchPattern" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-418">
              <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="241bf-419">
            <see cref="T:System.IO.DirectoryInfo" /> 개체에 캡슐화된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-419">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="241bf-420">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-420">The caller does not have the required permission.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFileSystemInfos : string * System.IO.EnumerationOptions -&gt; seq&lt;System.IO.FileSystemInfo&gt;" Usage="directoryInfo.EnumerateFileSystemInfos (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFileSystemInfos : string * System.IO.SearchOption -&gt; seq&lt;System.IO.FileSystemInfo&gt;" Usage="directoryInfo.EnumerateFileSystemInfos (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" />
      </Parameters>
      <Docs>
        <param name="searchPattern">
          <span data-ttu-id="241bf-421">디렉터리 이름과 일치하는지 비교할 검색 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-421">The search string to match against the names of directories.</span>
          </span>
          <span data-ttu-id="241bf-422">이 매개 변수는 유효한 리터럴 경로와 와일드카드(\* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-422">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span>
          </span>
        </param>
        <param name="searchOption">
          <span data-ttu-id="241bf-423">검색 작업에 현재 디렉터리만 포함할지 아니면 모든 하위 디렉터리를 포함할지를 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-423">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span>
          </span>
          <span data-ttu-id="241bf-424">기본값은 <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-424">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="241bf-425">지정된 검색 패턴 및 하위 디렉터리 검색 옵션과 일치하는 파일 시스템 정보의 열거 가능 컬렉션을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-425">Returns an enumerable collection of file system information that matches a specified search pattern and search subdirectory option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="241bf-426">
            <paramref name="searchPattern" /> 및 <paramref name="searchOption" />과 일치하는 파일 시스템 정보의 열거 가능 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-426">An enumerable collection of file system information objects that matches <paramref name="searchPattern" /> and <paramref name="searchOption" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="241bf-427">`searchPattern` 리터럴 및 와일드 카드 문자 조합일 수 있지만 정규식을 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-427">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="241bf-428">에 다음 와일드 카드 지정자를 사용할 수 `searchPattern`합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-428">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="241bf-429">와일드 카드 지정자</span><span class="sxs-lookup"><span data-stu-id="241bf-429">Wildcard specifier</span></span>|<span data-ttu-id="241bf-430">일치 항목</span><span class="sxs-lookup"><span data-stu-id="241bf-430">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="241bf-431">\*(별표)</span><span class="sxs-lookup"><span data-stu-id="241bf-431">\* (asterisk)</span></span>|<span data-ttu-id="241bf-432">해당 위치에 0 개 이상의 문자가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-432">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="241bf-433">?</span><span class="sxs-lookup"><span data-stu-id="241bf-433">?</span></span> <span data-ttu-id="241bf-434">(물음표)</span><span class="sxs-lookup"><span data-stu-id="241bf-434">(question mark)</span></span>|<span data-ttu-id="241bf-435">해당 위치에 0 개 또는 1 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-435">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="241bf-436">와일드 카드 문자는 리터럴 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-436">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="241bf-437">예를 들어 문자열 "\* t"에서 문자 "t"로 끝나는 모든 이름 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-437">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="241bf-438">".</span><span class="sxs-lookup"><span data-stu-id="241bf-438">".</span></span> <span data-ttu-id="241bf-439">`searchPattern` 문자열 "s\*"에서 모든 이름 검색 `path` "s"로 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-439">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="241bf-440"><xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> 및 <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> 방법은 다음과 같이 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-440">The <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> and <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="241bf-441">사용 하는 경우 <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>의 컬렉션을 열거 하기 <xref:System.IO.FileSystemInfo> 전체 컬렉션을 반환 하기 전에 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-441">When you use <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, you can start enumerating the collection of <xref:System.IO.FileSystemInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="241bf-442">사용 하는 경우 <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>를의 전체 배열에 대해 기다려야 <xref:System.IO.FileSystemInfo> 개체 반환 되기 전에 배열에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-442">When you use <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, you must wait for the whole array of <xref:System.IO.FileSystemInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="241bf-443">따라서 많은 파일 및 디렉터리를 사용 하 여 작업할 때 <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> 더 효과적일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-443">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="241bf-444">이 메서드는 다음 값을 미리 채웁니다 <xref:System.IO.FileSystemInfo> 속성:</span><span class="sxs-lookup"><span data-stu-id="241bf-444">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="241bf-445">반환된 된 컬렉션은 캐시 되지 않습니다. 호출할 때마다는 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 메서드는 컬렉션에는 새 열거형을 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-445">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="241bf-446">
            <paramref name="searchPattern" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-446">
              <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="241bf-447">
            <paramref name="searchOption" />은 유효한 <see cref="T:System.IO.SearchOption" /> 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-447">
              <paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="241bf-448">
            <see cref="T:System.IO.DirectoryInfo" /> 개체에 캡슐화된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-448">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="241bf-449">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-449">The caller does not have the required permission.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public override bool Exists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Exists" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Exists" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Exists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Exists { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Exists : bool" Usage="System.IO.DirectoryInfo.Exists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="241bf-450">디렉터리가 있는지를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-450">Gets a value indicating whether the directory exists.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="241bf-451">디렉터리가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-451">
              <see langword="true" /> if the directory exists; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="241bf-452"><xref:System.IO.DirectoryInfo.Exists%2A> 속성에서 반환 `false` 지정한 파일이 있는지 확인 하는 동안 오류가 발생 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="241bf-452">The <xref:System.IO.DirectoryInfo.Exists%2A> property returns `false` if any error occurs while trying to determine if the specified file exists.</span></span> <span data-ttu-id="241bf-453">이 파일 이름에 잘못 된 문자 또는 실패 나 누락 된 디스크에 문자가 너무 많습니다. 전달할 때 예외를 발생 시키는 상황에서 발생할 수 있습니다 또는 호출자에 게 파일을 읽을 수 있는 사용 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-453">This can occur in situations that raise exceptions such as passing a file name with invalid characters or too many characters, a failing or missing disk, or if the caller does not have permission to read the file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="241bf-454">다음 예제에서는 사용 하는 `Exists` 대상 디렉터리에 복사 하는 원본 디렉터리에서에서 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-454">The following example demonstrates a use of the `Exists` property in the context of copying a source directory to a target directory.</span></span>  
  
 [!code-cpp[DirectoryInfo Usage Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirectoryInfo Usage Example/CPP/copydirectory.cpp#1)]
 [!code-csharp[DirectoryInfo Usage Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirectoryInfo Usage Example/CS/copydirectory.cs#1)]
 [!code-vb[DirectoryInfo Usage Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirectoryInfo Usage Example/VB/copydirectory.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public override string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.FullName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FullName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullName : string" Usage="System.IO.DirectoryInfo.FullName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="241bf-455">디렉터리의 전체 경로를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-455">Gets the full path of the directory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="241bf-456">전체 경로를 포함하는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-456">A string containing the full path.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAccessControl">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="241bf-457">현재 디렉터리의 ACL(액세스 제어 목록) 항목을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-457">Gets the access control list (ACL) entries for the current directory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="241bf-458">사용 하 여 <xref:System.IO.DirectoryInfo.GetAccessControl%2A> 액세스를 검색 하는 메서드 현재 파일에 대 한 목록 (ACL) 항목을 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-458">Use <xref:System.IO.DirectoryInfo.GetAccessControl%2A> methods to retrieve the access control list (ACL) entries for the current file.</span></span>  
  
 <span data-ttu-id="241bf-459">자세한 내용은 [방법: Access Control 목록 항목 추가 또는 제거](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="241bf-459">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.DirectorySecurity GetAccessControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.DirectorySecurity GetAccessControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetAccessControl" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl () As DirectorySecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::AccessControl::DirectorySecurity ^ GetAccessControl();" />
      <MemberSignature Language="F#" Value="member this.GetAccessControl : unit -&gt; System.Security.AccessControl.DirectorySecurity" Usage="directoryInfo.GetAccessControl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.DirectorySecurity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="241bf-460">현재 <see cref="T:System.Security.AccessControl.DirectorySecurity" /> 개체에서 설명하는 디렉터리의 ACL(액세스 제어 목록) 항목을 캡슐화하는 <see cref="T:System.IO.DirectoryInfo" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-460">Gets a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the access control list (ACL) entries for the directory described by the current <see cref="T:System.IO.DirectoryInfo" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="241bf-461">디렉터리의 액세스 제어 규칙을 캡슐화하는 <see cref="T:System.Security.AccessControl.DirectorySecurity" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-461">A <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the access control rules for the directory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="241bf-462">이 메서드 오버 로드를 호출 하는 것은 <xref:System.IO.Directory.GetAccessControl%2A> 메서드 오버 로드 하 고 액세스를 지정 하는 섹션 제어 <xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType> &#124; <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType> &#124; <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType> (<xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType> `Or` <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType> `Or` <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType> Visual basic에서).</span><span class="sxs-lookup"><span data-stu-id="241bf-462">Calling this method overload is equivalent to calling the <xref:System.IO.Directory.GetAccessControl%2A> method overload and specifying the access control sections <xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType> &#124; <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType> &#124; <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType> (<xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType>`Or`<xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType>`Or`<xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType> in Visual Basic).</span></span>  
  
 <span data-ttu-id="241bf-463">사용 하 여는 <xref:System.IO.DirectoryInfo.GetAccessControl%2A> 현재 파일에 대 한 액세스 제어 목록 (ACL) 항목을 검색 하는 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-463">Use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to retrieve the access control list (ACL) entries for the current file.</span></span>  
  
 <span data-ttu-id="241bf-464">ACL에는 개인 및/또는 그룹 나 권한이 없는, 특정된 파일이 나 디렉터리에서 특정 작업을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-464">An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</span></span> <span data-ttu-id="241bf-465">자세한 내용은 [방법: Access Control 목록 항목 추가 또는 제거](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="241bf-465">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="241bf-466">다음 예제에서는 <xref:System.IO.DirectoryInfo.GetAccessControl%2A> 및 <xref:System.IO.DirectoryInfo.SetAccessControl%2A> 디렉터리에서 항목 목록 (ACL)을 제어 하는 메서드를 추가 하 고 액세스를 제거 하십시오.</span><span class="sxs-lookup"><span data-stu-id="241bf-466">The following example uses the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> and <xref:System.IO.DirectoryInfo.SetAccessControl%2A> methods to add and then remove an access control list (ACL) entry from a directory.</span></span>  
  
 [!code-cpp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="241bf-467">디렉터리를 찾거나 수정할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-467">The directory could not be found or modified.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="241bf-468">디렉터리가 읽기 전용인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-468">The directory is read-only.</span>
          </span>
          <span data-ttu-id="241bf-469">-또는-  현재 플랫폼이 해당 작업을 지원하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-469">-or-  This operation is not supported on the current platform.</span>
          </span>
          <span data-ttu-id="241bf-470">-또는-  호출자에게 필요한 권한이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-470">-or-  The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="241bf-471">디렉터리를 여는 동안 I/O 오류가 발생한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-471">An I/O error occurred while opening the directory.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="241bf-472">현재 운영 체제가 Microsoft Windows 2000 이상이 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-472">The current operating system is not Microsoft Windows 2000 or later.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="241bf-473">디렉터리에 대 한 액세스 제어 목록 (ACL)를 열거할 수 있는 권한입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-473">for permission to enumerate an access control list (ACL) for a directory.</span>
          </span>
          <span data-ttu-id="241bf-474">보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-474">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="241bf-475">연관 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />, <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-475">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />, <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.DirectorySecurity GetAccessControl (System.Security.AccessControl.AccessControlSections includeSections);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.DirectorySecurity GetAccessControl(valuetype System.Security.AccessControl.AccessControlSections includeSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl (includeSections As AccessControlSections) As DirectorySecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::AccessControl::DirectorySecurity ^ GetAccessControl(System::Security::AccessControl::AccessControlSections includeSections);" />
      <MemberSignature Language="F#" Value="member this.GetAccessControl : System.Security.AccessControl.AccessControlSections -&gt; System.Security.AccessControl.DirectorySecurity" Usage="directoryInfo.GetAccessControl includeSections" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.DirectorySecurity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
      </Parameters>
      <Docs>
        <param name="includeSections">
          <span data-ttu-id="241bf-476">가져올 ACL(액세스 제어 목록) 정보의 형식을 지정하는 <see cref="T:System.Security.AccessControl.AccessControlSections" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-476">One of the <see cref="T:System.Security.AccessControl.AccessControlSections" /> values that specifies the type of access control list (ACL) information to receive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="241bf-477">현재 <see cref="T:System.Security.AccessControl.DirectorySecurity" /> 개체에서 설명하는 디렉터리의 지정된 ACL(액세스 제어 목록) 항목 형식을 캡슐화하는 <see cref="T:System.IO.DirectoryInfo" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-477">Gets a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the specified type of access control list (ACL) entries for the directory described by the current <see cref="T:System.IO.DirectoryInfo" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="241bf-478">
            <see cref="T:System.Security.AccessControl.DirectorySecurity" /> 매개 변수에 설명된 파일의 액세스 제어 규칙을 캡슐화하는 <paramref name="path" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-478">A <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the access control rules for the file described by the <paramref name="path" /> parameter.</span>
          </span>
          <span data-ttu-id="241bf-479">예외  <list type="table"><listheader><term> 예외 형식  </term><description> 조건  </description></listheader><item><term><see cref="T:System.SystemException" /></term><description> 디렉터리를 찾거나 수정할 수 없습니다.  </description></item><item><term><see cref="T:System.UnauthorizedAccessException" /></term><description> 현재 프로세스에 디렉터리를 열 수 있는 권한이 없습니다.  </description></item><item><term><see cref="T:System.IO.IOException" /></term><description> 디렉터리를 여는 동안 I/O 오류가 발생했습니다.  </description></item><item><term><see cref="T:System.PlatformNotSupportedException" /></term><description> 현재 운영 체제가 Microsoft Windows 2000 이상이 아닙니다.  </description></item><item><term><see cref="T:System.UnauthorizedAccessException" /></term><description> 디렉터리는 읽기 전용입니다.  -또는-  이 작업은 현재 플랫폼에서 지원되지 않습니다.  -또는-  호출자에게 필요한 권한이 없습니다.  </description></item></list></span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-479">Exceptions  <list type="table"><listheader><term> Exception type  </term><description> Condition  </description></listheader><item><term><see cref="T:System.SystemException" /></term><description> The directory could not be found or modified.  </description></item><item><term><see cref="T:System.UnauthorizedAccessException" /></term><description> The current process does not have access to open the directory.  </description></item><item><term><see cref="T:System.IO.IOException" /></term><description> An I/O error occurred while opening the directory.  </description></item><item><term><see cref="T:System.PlatformNotSupportedException" /></term><description> The current operating system is not Microsoft Windows 2000 or later.  </description></item><item><term><see cref="T:System.UnauthorizedAccessException" /></term><description> The directory is read-only.  -or-  This operation is not supported on the current platform.  -or-  The caller does not have the required permission.  </description></item></list></span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="241bf-480">사용 하 여는 <xref:System.IO.DirectoryInfo.GetAccessControl%2A> 현재 파일에 대 한 액세스 제어 목록 (ACL) 항목을 검색 하는 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-480">Use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to retrieve the access control list (ACL) entries for the current file.</span></span>  
  
 <span data-ttu-id="241bf-481">ACL에는 개인 및/또는 그룹 나 권한이 없는, 특정된 파일이 나 디렉터리에서 특정 작업을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-481">An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</span></span> <span data-ttu-id="241bf-482">자세한 내용은 [방법: Access Control 목록 항목 추가 또는 제거](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="241bf-482">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="241bf-483">디렉터리에 대 한 액세스 제어 목록 (ACL)를 열거할 수 있는 권한입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-483">for permission to enumerate an access control list (ACL) for a directory.</span>
          </span>
          <span data-ttu-id="241bf-484">보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-484">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="241bf-485">연관 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />, <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-485">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />, <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDirectories">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="241bf-486">현재 디렉터리의 하위 디렉터리를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-486">Returns the subdirectories of the current directory.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDirectories () As DirectoryInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories();" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : unit -&gt; System.IO.DirectoryInfo[]" Usage="directoryInfo.GetDirectories " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="241bf-487">현재 디렉터리의 하위 디렉터리를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-487">Returns the subdirectories of the current directory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="241bf-488">
            <see cref="T:System.IO.DirectoryInfo" /> 개체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-488">An array of <see cref="T:System.IO.DirectoryInfo" /> objects.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="241bf-489">하위 디렉터리가 없으면이 메서드는 빈 배열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-489">If there are no subdirectories, this method returns an empty array.</span></span> <span data-ttu-id="241bf-490">이 메서드는 재귀 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-490">This method is not recursive.</span></span>  
  
 <span data-ttu-id="241bf-491">이 메서드는 다음 값을 미리 채웁니다 <xref:System.IO.DirectoryInfo> 속성:</span><span class="sxs-lookup"><span data-stu-id="241bf-491">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="241bf-492">다음 예제에서는 루트 디렉터리에 있는 모든 디렉터리를 검색 하 고 디렉터리 이름이 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-492">The following example retrieves all the directories in the root directory and displays the directory names.</span></span>  
  
 [!code-cpp[directoryinfogetdirectories#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfogetdirectories/CPP/directoryinfogetdirectories.cpp#1)]
 [!code-csharp[directoryinfogetdirectories#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetdirectories/CS/directoryinfogetdirectories.cs#1)]
 [!code-vb[directoryinfogetdirectories#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetdirectories/VB/directoryinfogetdirectories.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="241bf-493">
            <see cref="T:System.IO.DirectoryInfo" /> 개체에 캡슐화된 경로가 유효하지 않은 경우(예: 매핑되지 않은 드라이브의 경로에 해당하는 경우)</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-493">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid, such as being on an unmapped drive.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="241bf-494">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-494">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="241bf-495">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-495">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="241bf-496">에 디렉터리를 읽고 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-496">for reading directories.</span>
          </span>
          <span data-ttu-id="241bf-497">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-497">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDirectories (searchPattern As String) As DirectoryInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : string -&gt; System.IO.DirectoryInfo[]" Usage="directoryInfo.GetDirectories searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern">
          <span data-ttu-id="241bf-498">디렉터리 이름과 일치하는지 비교할 검색 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-498">The search string to match against the names of directories.</span>
          </span>
          <span data-ttu-id="241bf-499">이 매개 변수는 유효한 리터럴 경로와 와일드카드(\* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-499">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="241bf-500">주어진 검색 조건에 일치하는 현재 <see cref="T:System.IO.DirectoryInfo" />에 있는 디렉터리의 배열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-500">Returns an array of directories in the current <see cref="T:System.IO.DirectoryInfo" /> matching the given search criteria.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="241bf-501">
            <see langword="DirectoryInfo" />에 일치하는 <paramref name="searchPattern" /> 형식의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-501">An array of type <see langword="DirectoryInfo" /> matching <paramref name="searchPattern" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="241bf-502">`searchPattern` 리터럴 및 와일드 카드 문자 조합일 수 있지만 정규식을 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-502">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="241bf-503">에 다음 와일드 카드 지정자를 사용할 수 `searchPattern`합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-503">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="241bf-504">와일드 카드 지정자</span><span class="sxs-lookup"><span data-stu-id="241bf-504">Wildcard specifier</span></span>|<span data-ttu-id="241bf-505">일치 항목</span><span class="sxs-lookup"><span data-stu-id="241bf-505">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="241bf-506">\*(별표)</span><span class="sxs-lookup"><span data-stu-id="241bf-506">\* (asterisk)</span></span>|<span data-ttu-id="241bf-507">해당 위치에 0 개 이상의 문자가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-507">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="241bf-508">?</span><span class="sxs-lookup"><span data-stu-id="241bf-508">?</span></span> <span data-ttu-id="241bf-509">(물음표)</span><span class="sxs-lookup"><span data-stu-id="241bf-509">(question mark)</span></span>|<span data-ttu-id="241bf-510">해당 위치에 0 개 또는 1 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-510">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="241bf-511">와일드 카드 문자는 리터럴 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-511">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="241bf-512">예를 들어 문자열 "\* t"에서 문자 "t"로 끝나는 모든 이름 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-512">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="241bf-513">".</span><span class="sxs-lookup"><span data-stu-id="241bf-513">".</span></span> <span data-ttu-id="241bf-514">`searchPattern` 문자열 "s\*"에서 모든 이름 검색 `path` "s"로 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-514">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="241bf-515">이 메서드는 다음 값을 미리 채웁니다 <xref:System.IO.DirectoryInfo> 속성:</span><span class="sxs-lookup"><span data-stu-id="241bf-515">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="241bf-516">다음 예제에서는 지정된 된 문자를 포함 하는 경로에서 디렉터리를 계산 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-516">The following example counts the directories in a path that contain the specified letter.</span></span>  
  
 [!code-cpp[DirInfo GetDirs2#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo GetDirs2/CPP/dirinfo getdirs2.cpp#1)]
 [!code-csharp[DirInfo GetDirs2#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo GetDirs2/CS/dirinfo getdirs2.cs#1)]
 [!code-vb[DirInfo GetDirs2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo GetDirs2/VB/dirinfo getdirs2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="241bf-517">
            <paramref name="searchPattern" />에는 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 메서드로 정의된 잘못된 문자가 하나 이상 포함되어 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-517">
              <paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="241bf-518">
            <paramref name="searchPattern" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-518">
              <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="241bf-519">
            <see langword="DirectoryInfo" /> 개체에 캡슐화된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-519">The path encapsulated in the <see langword="DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="241bf-520">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-520">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="241bf-521">읽을 파일 및 디렉터리 및 경로에 액세스할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-521">for reading from files and directories and for access to the path.</span>
          </span>
          <span data-ttu-id="241bf-522">연관 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-522">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : string * System.IO.EnumerationOptions -&gt; System.IO.DirectoryInfo[]" Usage="directoryInfo.GetDirectories (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : string * System.IO.SearchOption -&gt; System.IO.DirectoryInfo[]" Usage="directoryInfo.GetDirectories (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" />
      </Parameters>
      <Docs>
        <param name="searchPattern">
          <span data-ttu-id="241bf-523">디렉터리 이름과 일치하는지 비교할 검색 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-523">The search string to match against the names of directories.</span>
          </span>
          <span data-ttu-id="241bf-524">이 매개 변수는 유효한 리터럴 경로와 와일드카드(\* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-524">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span>
          </span>
        </param>
        <param name="searchOption">
          <span data-ttu-id="241bf-525">검색 작업에 현재 디렉터리만 포함할지 아니면 모든 하위 디렉터리를 포함할지를 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-525">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="241bf-526">하위 디렉터리를 검색할지를 나타내는 값을 사용하여 현재 <see cref="T:System.IO.DirectoryInfo" />에서 지정된 검색 조건과 일치하는 디렉터리의 배열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-526">Returns an array of directories in the current <see cref="T:System.IO.DirectoryInfo" /> matching the given search criteria and using a value to determine whether to search subdirectories.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="241bf-527">
            <see langword="DirectoryInfo" />에 일치하는 <paramref name="searchPattern" /> 형식의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-527">An array of type <see langword="DirectoryInfo" /> matching <paramref name="searchPattern" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="241bf-528">`searchPattern` 리터럴 및 와일드 카드 문자 조합일 수 있지만 정규식을 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-528">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="241bf-529">에 다음 와일드 카드 지정자를 사용할 수 `searchPattern`합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-529">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="241bf-530">와일드 카드 지정자</span><span class="sxs-lookup"><span data-stu-id="241bf-530">Wildcard specifier</span></span>|<span data-ttu-id="241bf-531">일치 항목</span><span class="sxs-lookup"><span data-stu-id="241bf-531">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="241bf-532">\*(별표)</span><span class="sxs-lookup"><span data-stu-id="241bf-532">\* (asterisk)</span></span>|<span data-ttu-id="241bf-533">해당 위치에 0 개 이상의 문자가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-533">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="241bf-534">?</span><span class="sxs-lookup"><span data-stu-id="241bf-534">?</span></span> <span data-ttu-id="241bf-535">(물음표)</span><span class="sxs-lookup"><span data-stu-id="241bf-535">(question mark)</span></span>|<span data-ttu-id="241bf-536">해당 위치에 0 개 또는 1 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-536">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="241bf-537">와일드 카드 문자는 리터럴 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-537">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="241bf-538">예를 들어 문자열 "\* t"에서 문자 "t"로 끝나는 모든 이름 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-538">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="241bf-539">".</span><span class="sxs-lookup"><span data-stu-id="241bf-539">".</span></span> <span data-ttu-id="241bf-540">`searchPattern` 문자열 "s\*"에서 모든 이름 검색 `path` "s"로 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-540">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="241bf-541">하위 디렉터리가 없는지 또는 하위 디렉터리가 없는지와 일치 하는 경우는 `searchPattern` 매개 변수를이 메서드는 빈 배열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-541">If there are no subdirectories, or no subdirectories match the `searchPattern` parameter, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="241bf-542">이 메서드는 다음 값을 미리 채웁니다 <xref:System.IO.DirectoryInfo> 속성:</span><span class="sxs-lookup"><span data-stu-id="241bf-542">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="241bf-543">다음 예제에는 문자 "c"로 시작 하는 파일과 디렉터리의 모두 나열 합니다 "c:\\"입니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-543">The following example lists all of the directories and files that begin with the letter "c" in "c:\\".</span></span>  
  
 [!code-cpp[System.IO.DirectoryInfo_SearchOptions#00](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.DirectoryInfo_SearchOptions/cpp/searchoption.cpp#00)]
 [!code-csharp[System.IO.DirectoryInfo_SearchOptions#00](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.DirectoryInfo_SearchOptions/cs/searchoption.cs#00)]
 [!code-vb[System.IO.DirectoryInfo_SearchOptions#00](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.DirectoryInfo_SearchOptions/vb/searchoption.vb#00)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="241bf-544">
            <paramref name="searchPattern" />에는 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 메서드로 정의된 잘못된 문자가 하나 이상 포함되어 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-544">
              <paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="241bf-545">
            <paramref name="searchPattern" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-545">
              <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="241bf-546">
            <paramref name="searchOption" />은 유효한 <see cref="T:System.IO.SearchOption" /> 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-546">
              <paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="241bf-547">
            <see langword="DirectoryInfo" /> 개체에 캡슐화된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-547">The path encapsulated in the <see langword="DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="241bf-548">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-548">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="241bf-549">읽을 파일 및 디렉터리 및 경로에 액세스할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-549">for reading from files and directories and for access to the path.</span>
          </span>
          <span data-ttu-id="241bf-550">연관 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-550">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFiles">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="241bf-551">현재 디렉터리에서 파일 목록을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-551">Returns a file list from the current directory.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFiles () As FileInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles();" />
      <MemberSignature Language="F#" Value="member this.GetFiles : unit -&gt; System.IO.FileInfo[]" Usage="directoryInfo.GetFiles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="241bf-552">현재 디렉터리에서 파일 목록을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-552">Returns a file list from the current directory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="241bf-553">
            <see cref="T:System.IO.FileInfo" /> 형식의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-553">An array of type <see cref="T:System.IO.FileInfo" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="241bf-554"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 및 <xref:System.IO.DirectoryInfo.GetFiles%2A> 방법은 다음과 같이 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-554">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="241bf-555">사용 하는 경우 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>의 컬렉션을 열거 하기 <xref:System.IO.FileInfo> 전체 컬렉션을 반환 하기 전에 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-555">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="241bf-556">사용 하는 경우 <xref:System.IO.DirectoryInfo.GetFiles%2A>를의 전체 배열에 대해 기다려야 <xref:System.IO.FileInfo> 개체 반환 되기 전에 배열에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-556">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="241bf-557">따라서 많은 파일 및 디렉터리를 사용 하 여 작업할 때 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 더 효과적일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-557">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="241bf-558">에 파일이 없는 경우는 <xref:System.IO.DirectoryInfo>,이 메서드는 빈 배열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-558">If there are no files in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="241bf-559">반환 되는 파일 이름의 순서를 보장할 수 없습니다. 사용 하 여는 <xref:System.Array.Sort%2A> 메서드 특정 정렬 순서를 적용 해야 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="241bf-559">The order of the returned file names is not guaranteed; use the <xref:System.Array.Sort%2A> method if a specific sort order is required.</span></span>  
  
 <span data-ttu-id="241bf-560">이 메서드는 다음 값을 미리 채웁니다 <xref:System.IO.FileInfo> 속성:</span><span class="sxs-lookup"><span data-stu-id="241bf-560">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
   
  
## Examples  
 <span data-ttu-id="241bf-561">다음 예제에서는 다른 검색 옵션을 사용 하 여 디렉터리에서 파일의 목록을 가져오는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-561">The following example shows how to get a list of files from a directory by using different search options.</span></span> <span data-ttu-id="241bf-562">파일 이름은 log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, SubFile.txt 라는 파일에 있는 하위 디렉터리에 있는 디렉터리를 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-562">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[directoryinfogetfiles#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetfiles/CS/directoryinfogetfiles2.cs#2)]
 [!code-vb[directoryinfogetfiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetfiles/VB/directoryinfogetfiles2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="241bf-563">경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-563">The path is invalid, such as being on an unmapped drive.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="241bf-564">에 디렉터리를 읽고 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-564">for reading directories.</span>
          </span>
          <span data-ttu-id="241bf-565">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-565">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFiles (searchPattern As String) As FileInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.GetFiles : string -&gt; System.IO.FileInfo[]" Usage="directoryInfo.GetFiles searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern">
          <span data-ttu-id="241bf-566">파일 이름과 일치하는지 비교할 검색 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-566">The search string to match against the names of files.</span>
          </span>
          <span data-ttu-id="241bf-567">이 매개 변수는 유효한 리터럴 경로와 와일드카드(\* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-567">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="241bf-568">현재 디렉터리에서 지정된 검색 패턴과 일치하는 파일 목록을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-568">Returns a file list from the current directory matching the given search pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="241bf-569">
            <see cref="T:System.IO.FileInfo" /> 형식의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-569">An array of type <see cref="T:System.IO.FileInfo" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="241bf-570">`searchPattern` 리터럴 및 와일드 카드 문자 조합일 수 있지만 정규식을 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-570">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="241bf-571">에 다음 와일드 카드 지정자를 사용할 수 `searchPattern`합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-571">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="241bf-572">와일드 카드 지정자</span><span class="sxs-lookup"><span data-stu-id="241bf-572">Wildcard specifier</span></span>|<span data-ttu-id="241bf-573">일치 항목</span><span class="sxs-lookup"><span data-stu-id="241bf-573">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="241bf-574">\*(별표)</span><span class="sxs-lookup"><span data-stu-id="241bf-574">\* (asterisk)</span></span>|<span data-ttu-id="241bf-575">해당 위치에 0 개 이상의 문자가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-575">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="241bf-576">?</span><span class="sxs-lookup"><span data-stu-id="241bf-576">?</span></span> <span data-ttu-id="241bf-577">(물음표)</span><span class="sxs-lookup"><span data-stu-id="241bf-577">(question mark)</span></span>|<span data-ttu-id="241bf-578">해당 위치에 0 개 또는 1 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-578">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="241bf-579">와일드 카드 문자는 리터럴 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-579">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="241bf-580">예를 들어 문자열 "\* t"에서 문자 "t"로 끝나는 모든 이름 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-580">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="241bf-581">`searchPattern` 문자열 "s\*"에서 모든 이름 검색 `path` "s"로 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-581">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="241bf-582"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 및 <xref:System.IO.DirectoryInfo.GetFiles%2A> 방법은 다음과 같이 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-582">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="241bf-583">사용 하는 경우 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>의 컬렉션을 열거 하기 <xref:System.IO.FileInfo> 전체 컬렉션을 반환 하기 전에 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-583">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="241bf-584">사용 하는 경우 <xref:System.IO.DirectoryInfo.GetFiles%2A>를의 전체 배열에 대해 기다려야 <xref:System.IO.FileInfo> 개체 반환 되기 전에 배열에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-584">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="241bf-585">따라서 많은 파일 및 디렉터리를 사용 하 여 작업할 때 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 더 효과적일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-585">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="241bf-586">에 파일이 없는 경우는 <xref:System.IO.DirectoryInfo>,이 메서드는 빈 배열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-586">If there are no files in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="241bf-587">에 다음 와일드 카드 지정자를 사용할 수는 `searchPattern` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-587">The following wildcard specifiers are permitted in the `searchPattern` parameter.</span></span>  
  
|<span data-ttu-id="241bf-588">와일드 카드 문자</span><span class="sxs-lookup"><span data-stu-id="241bf-588">Wildcard character</span></span>|<span data-ttu-id="241bf-589">설명</span><span class="sxs-lookup"><span data-stu-id="241bf-589">Description</span></span>|  
|------------------------|-----------------|  
|*|<span data-ttu-id="241bf-590">0 개 이상의 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-590">Zero or more characters.</span></span>|  
|<span data-ttu-id="241bf-591">?</span><span class="sxs-lookup"><span data-stu-id="241bf-591">?</span></span>|<span data-ttu-id="241bf-592">정확히 0 개 또는 1 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-592">Exactly zero or one character.</span></span>|  
  
 <span data-ttu-id="241bf-593">반환 되는 파일 이름의 순서를 보장할 수 없습니다. 사용 하 여는 <xref:System.Array.Sort%2A> 메서드 특정 정렬 순서를 적용 해야 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="241bf-593">The order of the returned file names is not guaranteed; use the <xref:System.Array.Sort%2A> method if a specific sort order is required.</span></span>  
  
 <span data-ttu-id="241bf-594">와일드 카드가 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-594">Wildcards are permitted.</span></span> <span data-ttu-id="241bf-595">예를 들어는 `searchPattern` 모든 파일은 확장명이 "txt"의 이름을 "\*.txt" 검색 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-595">For example, the `searchPattern` string "\*.txt" searches for all file names having an extension of "txt".</span></span> <span data-ttu-id="241bf-596">`searchPattern` 문자열 "s\*" "s"로 시작 하는 이름은 모든 파일을 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-596">The `searchPattern` string "s\*" searches for all file names beginning with the letter "s".</span></span> <span data-ttu-id="241bf-597">파일이 없습니다 또는 no 있을 경우 일치 하는 파일이 `searchPattern` 문자열에 <xref:System.IO.DirectoryInfo>,이 메서드는 빈 배열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-597">If there are no files, or no files that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="241bf-598">에 별표 와일드 카드 문자를 사용 하는 경우는 `searchPattern` (, 예: "\*"), 일치 동작은 지정된 된 파일 확장명의 길이 따라 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-598">When using the asterisk wildcard character in a `searchPattern` (for example, "\*.txt"), the matching behavior varies depending on the length of the specified file extension.</span></span> <span data-ttu-id="241bf-599">A `searchPattern` 확장명이 정확히 3 자 파일 확장명의 파일을 3 개 이상의 문자로 구성 된 첫 번째 세 문자가 일치에 지정 된 파일 확장명을 반환 된 `searchPattern`합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-599">A `searchPattern` with a file extension of exactly three characters returns files with an extension of three or more characters, where the first three characters match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="241bf-600">A `searchPattern` 파일 하나, 두 개 또는 세 개 이상의 문자 확장 자에 지정 된 파일 확장명과 일치 하는 확장명을 가진 파일만 반환 하는 `searchPattern`합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-600">A `searchPattern` with a file extension of one, two, or more than three characters returns only files with extensions of exactly that length that match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="241bf-601">물음표 와일드 카드 문자를 사용할 경우이 메서드는 지정 된 파일 확장명과 일치 하는 파일에만 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-601">When using the question mark wildcard character, this method returns only files that match the specified file extension.</span></span> <span data-ttu-id="241bf-602">예를 들어 두 개의 파일 디렉터리, "file1.txt" 및 "file1.txtother", 검색 패턴은에 지정 된 "파일?입니다. txt"반환 하는 동안 검색 패턴은만 첫 번째 파일을" 파일\*.txt "파일을 모두 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-602">For example, given two files in a directory, "file1.txt" and "file1.txtother", a search pattern of "file?.txt" returns only the first file, while a search pattern of "file\*.txt" returns both files.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="241bf-603">검색 패턴 비슷합니다 8.3 파일 이름 형식과 긴 파일 이름 형식을 모두 포함 된 파일 이름에 대해이 메서드를 확인 하기 때문에 "* 1\*.txt" 예기치 않은 파일 이름을 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-603">Because this method checks against file names with both the 8.3 file name format and the long file name format, a search pattern similar to "*1\*.txt" may return unexpected file names.</span></span> <span data-ttu-id="241bf-604">예를 들어 검색 패턴을 사용 하 여 "\*1\*.txt" 해당 8.3 파일 이름 형식은 "longf~1.txt" 될 수 있으므로 "longfilename.txt"를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-604">For example, using a search pattern of "\*1\*.txt" will return "longfilename.txt" because the equivalent 8.3 file name format would be "longf~1.txt".</span></span>  
  
 <span data-ttu-id="241bf-605">이 메서드는 다음 값을 미리 채웁니다 <xref:System.IO.FileInfo> 속성:</span><span class="sxs-lookup"><span data-stu-id="241bf-605">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
   
  
## Examples  
 <span data-ttu-id="241bf-606">다음 예제에서는 다른 검색 옵션을 사용 하 여 디렉터리에서 파일의 목록을 가져오는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-606">The following example shows how to get a list of files from a directory by using different search options.</span></span> <span data-ttu-id="241bf-607">파일 이름은 log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, SubFile.txt 라는 파일에 있는 하위 디렉터리에 있는 디렉터리를 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-607">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[directoryinfogetfiles#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetfiles/CS/directoryinfogetfiles2.cs#2)]
 [!code-vb[directoryinfogetfiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetfiles/VB/directoryinfogetfiles2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="241bf-608">
            <paramref name="searchPattern" />에는 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 메서드로 정의된 잘못된 문자가 하나 이상 포함되어 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-608">
              <paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="241bf-609">
            <paramref name="searchPattern" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-609">
              <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="241bf-610">경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-610">The path is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="241bf-611">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-611">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="241bf-612">경로 파일 및 디렉터리에서 읽기에 대 한 액세스 권한입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-612">for access to the path and for reading from files and directories.</span>
          </span>
          <span data-ttu-id="241bf-613">연관 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-613">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.GetFiles : string * System.IO.EnumerationOptions -&gt; System.IO.FileInfo[]" Usage="directoryInfo.GetFiles (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.GetFiles : string * System.IO.SearchOption -&gt; System.IO.FileInfo[]" Usage="directoryInfo.GetFiles (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" />
      </Parameters>
      <Docs>
        <param name="searchPattern">
          <span data-ttu-id="241bf-614">파일 이름과 일치하는지 비교할 검색 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-614">The search string to match against the names of files.</span>
          </span>
          <span data-ttu-id="241bf-615">이 매개 변수는 유효한 리터럴 경로와 와일드카드(\* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-615">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span>
          </span>
        </param>
        <param name="searchOption">
          <span data-ttu-id="241bf-616">검색 작업에 현재 디렉터리만 포함할지 아니면 모든 하위 디렉터리를 포함할지를 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-616">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="241bf-617">하위 디렉터리를 검색할지를 나타내는 값을 사용하여 현재 디렉터리에서 지정된 검색 패턴과 일치하는 파일 목록을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-617">Returns a file list from the current directory matching the given search pattern and using a value to determine whether to search subdirectories.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="241bf-618">
            <see cref="T:System.IO.FileInfo" /> 형식의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-618">An array of type <see cref="T:System.IO.FileInfo" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="241bf-619"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 및 <xref:System.IO.DirectoryInfo.GetFiles%2A> 방법은 다음과 같이 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-619">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="241bf-620">사용 하는 경우 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>의 컬렉션을 열거 하기 <xref:System.IO.FileInfo> 전체 컬렉션을 반환 하기 전에 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-620">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="241bf-621">사용 하는 경우 <xref:System.IO.DirectoryInfo.GetFiles%2A>를의 전체 배열에 대해 기다려야 <xref:System.IO.FileInfo> 개체 반환 되기 전에 배열에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-621">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="241bf-622">따라서 많은 파일 및 디렉터리를 사용 하 여 작업할 때 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 더 효과적일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-622">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="241bf-623">에 파일이 없는 경우는 <xref:System.IO.DirectoryInfo>,이 메서드는 빈 배열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-623">If there are no files in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="241bf-624">에 다음 와일드 카드 지정자를 사용할 수 `searchPattern`합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-624">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="241bf-625">와일드 카드 문자</span><span class="sxs-lookup"><span data-stu-id="241bf-625">Wildcard character</span></span>|<span data-ttu-id="241bf-626">설명</span><span class="sxs-lookup"><span data-stu-id="241bf-626">Description</span></span>|  
|------------------------|-----------------|  
|<span data-ttu-id="241bf-627">\*(별표)</span><span class="sxs-lookup"><span data-stu-id="241bf-627">\* (asterisk)</span></span>|<span data-ttu-id="241bf-628">0 개 이상의 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-628">Zero or more characters.</span></span>|  
|<span data-ttu-id="241bf-629">?</span><span class="sxs-lookup"><span data-stu-id="241bf-629">?</span></span> <span data-ttu-id="241bf-630">(물음표)</span><span class="sxs-lookup"><span data-stu-id="241bf-630">(question mark)</span></span>|<span data-ttu-id="241bf-631">정확히 0 개 또는 1 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-631">Exactly zero or one character.</span></span>|  
  
 <span data-ttu-id="241bf-632">반환 되는 파일 이름의 순서를 보장할 수 없습니다. 사용 하 여는 <xref:System.Array.Sort%2A> 메서드 특정 정렬 순서를 적용 해야 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="241bf-632">The order of the returned file names is not guaranteed; use the <xref:System.Array.Sort%2A> method if a specific sort order is required.</span></span>  
  
 <span data-ttu-id="241bf-633">와일드 카드가 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-633">Wildcards are permitted.</span></span> <span data-ttu-id="241bf-634">예를 들어는 `searchPattern` 모든 파일은 확장명이 "txt"의 이름을 "\*.txt" 검색 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-634">For example, the `searchPattern` string "\*.txt" searches for all file names having an extension of "txt".</span></span> <span data-ttu-id="241bf-635">`searchPattern` 문자열 "s\*" "s"로 시작 하는 이름은 모든 파일을 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-635">The `searchPattern` string "s\*" searches for all file names beginning with the letter "s".</span></span> <span data-ttu-id="241bf-636">파일이 없습니다 또는 no 있을 경우 일치 하는 파일이 `searchPattern` 문자열에 <xref:System.IO.DirectoryInfo>,이 메서드는 빈 배열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-636">If there are no files, or no files that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="241bf-637">에 별표 와일드 카드 문자를 사용 하는 경우는 `searchPattern` (, 예: "\*"), 일치 동작은 지정된 된 파일 확장명의 길이 따라 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-637">When using the asterisk wildcard character in a `searchPattern` (for example, "\*.txt"), the matching behavior varies depending on the length of the specified file extension.</span></span> <span data-ttu-id="241bf-638">A `searchPattern` 확장명이 정확히 3 자 파일 확장명의 파일을 3 개 이상의 문자로 구성 된 첫 번째 세 문자가 일치에 지정 된 파일 확장명을 반환 된 `searchPattern`합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-638">A `searchPattern` with a file extension of exactly three characters returns files with an extension of three or more characters, where the first three characters match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="241bf-639">A `searchPattern` 파일 하나, 두 개 또는 세 개 이상의 문자 확장 자에 지정 된 파일 확장명과 일치 하는 확장명을 가진 파일만 반환 하는 `searchPattern`합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-639">A `searchPattern` with a file extension of one, two, or more than three characters returns only files with extensions of exactly that length that match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="241bf-640">물음표 와일드 카드 문자를 사용할 경우이 메서드는 지정 된 파일 확장명과 일치 하는 파일에만 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-640">When using the question mark wildcard character, this method returns only files that match the specified file extension.</span></span> <span data-ttu-id="241bf-641">예를 들어 두 개의 파일 디렉터리, "file1.txt" 및 "file1.txtother", 검색 패턴은에 지정 된 "파일?입니다. txt"반환 하는 동안 검색 패턴은만 첫 번째 파일을" 파일\*.txt "파일을 모두 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-641">For example, given two files in a directory, "file1.txt" and "file1.txtother", a search pattern of "file?.txt" returns only the first file, while a search pattern of "file\*.txt" returns both files.</span></span>  
  
 <span data-ttu-id="241bf-642">다음 목록에 대 한 길이가 다른 동작을 보여 줍니다.는 `searchPattern` 매개 변수:</span><span class="sxs-lookup"><span data-stu-id="241bf-642">The following list shows the behavior of different lengths for the `searchPattern` parameter:</span></span>  
  
-   <span data-ttu-id="241bf-643">"\*.abc"는 확장 of.abc,.abcd,.abcde,.abcdef 파일을 반환 등입니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-643">"\*.abc" returns files having an extension of.abc,.abcd,.abcde,.abcdef, and so on.</span></span>  
  
-   <span data-ttu-id="241bf-644">"\*.abcd" 확장 of.abcd을 가진 파일만 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-644">"\*.abcd" returns only files having an extension of.abcd.</span></span>  
  
-   <span data-ttu-id="241bf-645">"\*.abcde" 확장 of.abcde을 가진 파일만 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-645">"\*.abcde" returns only files having an extension of.abcde.</span></span>  
  
-   <span data-ttu-id="241bf-646">"\*.abcdef" 확장 of.abcdef을 가진 파일만 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-646">"\*.abcdef" returns only files having an extension of.abcdef.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="241bf-647">검색 패턴 비슷합니다 8.3 파일 이름 형식과 긴 파일 이름 형식을 모두 포함 된 파일 이름에 대해이 메서드를 확인 하기 때문에 "* 1\*.txt" 예기치 않은 파일 이름을 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-647">Because this method checks against file names with both the 8.3 file name format and the long file name format, a search pattern similar to "*1\*.txt" may return unexpected file names.</span></span> <span data-ttu-id="241bf-648">예를 들어 검색 패턴을 사용 하 여 "\*1\*.txt" 해당 8.3 파일 이름 형식은 "longf~1.txt" 될 수 있으므로 "longfilename.txt"를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-648">For example, using a search pattern of "\*1\*.txt" will return "longfilename.txt" because the equivalent 8.3 file name format would be "longf~1.txt".</span></span>  
  
 <span data-ttu-id="241bf-649">이 메서드는 다음 값을 미리 채웁니다 <xref:System.IO.FileInfo> 속성:</span><span class="sxs-lookup"><span data-stu-id="241bf-649">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
1.  <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
2.  <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
3.  <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
4.  <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
5.  <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
6.  <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
7.  <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
8.  <xref:System.IO.FileInfo.Length%2A>  
  
   
  
## Examples  
 <span data-ttu-id="241bf-650">다음 예제에서는 다른 검색 옵션을 사용 하 여 디렉터리에서 파일의 목록을 가져오는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-650">The following example shows how to get a list of files from a directory by using different search options.</span></span> <span data-ttu-id="241bf-651">파일 이름은 log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, SubFile.txt 라는 파일에 있는 하위 디렉터리에 있는 디렉터리를 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-651">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[directoryinfogetfiles#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetfiles/CS/directoryinfogetfiles2.cs#2)]
 [!code-vb[directoryinfogetfiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetfiles/VB/directoryinfogetfiles2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="241bf-652">
            <paramref name="searchPattern" />에는 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 메서드로 정의된 잘못된 문자가 하나 이상 포함되어 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-652">
              <paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="241bf-653">
            <paramref name="searchPattern" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-653">
              <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="241bf-654">
            <paramref name="searchOption" />은 유효한 <see cref="T:System.IO.SearchOption" /> 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-654">
              <paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="241bf-655">경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-655">The path is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="241bf-656">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-656">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="241bf-657">경로 파일 및 디렉터리에서 읽기에 대 한 액세스 권한입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-657">for access to the path and for reading from files and directories.</span>
          </span>
          <span data-ttu-id="241bf-658">연관 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-658">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFileSystemInfos">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="241bf-659">현재 디렉터리의 파일과 하위 디렉터리를 나타내는 강력한 형식의 <see cref="T:System.IO.FileSystemInfo" /> 개체 배열을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-659">Retrieves an array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> objects representing files and subdirectories of the current directory.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFileSystemInfos () As FileSystemInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos();" />
      <MemberSignature Language="F#" Value="member this.GetFileSystemInfos : unit -&gt; System.IO.FileSystemInfo[]" Usage="directoryInfo.GetFileSystemInfos " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="241bf-660">디렉터리의 모든 파일과 하위 디렉터리를 나타내는 강력한 형식의 <see cref="T:System.IO.FileSystemInfo" /> 항목 배열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-660">Returns an array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> entries representing all the files and subdirectories in a directory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="241bf-661">강력한 형식의 <see cref="T:System.IO.FileSystemInfo" /> 항목 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-661">An array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> entries.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="241bf-662">파일 또는 디렉터리에 없는 경우는 <xref:System.IO.DirectoryInfo>,이 메서드는 빈 배열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-662">If there are no files or directories in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span> <span data-ttu-id="241bf-663">이 메서드는 재귀 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-663">This method is not recursive.</span></span>  
  
 <span data-ttu-id="241bf-664">하위 디렉터리의 경우는 <xref:System.IO.FileSystemInfo> 파생 된 클래스에이 메서드에서 반환 되는 개체를 캐스팅 될 수 <xref:System.IO.DirectoryInfo>합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-664">For subdirectories, the <xref:System.IO.FileSystemInfo> objects returned by this method can be cast to the derived class <xref:System.IO.DirectoryInfo>.</span></span> <span data-ttu-id="241bf-665">사용 하 여는 <xref:System.IO.FileAttributes> 에서 반환 된 값의 <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> 속성을 확인 여부는 <xref:System.IO.FileSystemInfo> 파일 또는 디렉터리를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-665">Use the <xref:System.IO.FileAttributes> value returned by the <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> property to determine whether the <xref:System.IO.FileSystemInfo> represents a file or a directory.</span></span>  
  
 <span data-ttu-id="241bf-666">이 메서드는 다음 값을 미리 채웁니다 <xref:System.IO.FileSystemInfo> 속성:</span><span class="sxs-lookup"><span data-stu-id="241bf-666">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="241bf-667">다음 예제에서는 파일 및 지정된 된 디렉터리 아래에 있는 디렉터리를 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-667">The following example counts the files and directories under the specified directory.</span></span>  
  
 [!code-csharp[FSizeSort#1](~/samples/snippets/csharp/VS_Snippets_CLR/FSizeSort/CS/fsizesort.cs#1)]
 [!code-vb[FSizeSort#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FSizeSort/VB/fsizesort.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="241bf-668">경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-668">The path is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.FileSystemInfo" />
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFileSystemInfos (searchPattern As String) As FileSystemInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.GetFileSystemInfos : string -&gt; System.IO.FileSystemInfo[]" Usage="directoryInfo.GetFileSystemInfos searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern">
          <span data-ttu-id="241bf-669">파일에 있는 디렉터리 이름과 일치하는지 비교할 검색 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-669">The search string to match against the names of directories and files.</span>
          </span>
          <span data-ttu-id="241bf-670">이 매개 변수는 유효한 리터럴 경로와 와일드카드(\* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-670">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="241bf-671">지정된 검색 조건과 일치하는 파일 및 하위 디렉터리를 나타내는 강력한 형식의 <see cref="T:System.IO.FileSystemInfo" /> 개체 배열을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-671">Retrieves an array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> objects representing the files and subdirectories that match the specified search criteria.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="241bf-672">검색 기준과 일치하는 강력한 형식의 <see langword="FileSystemInfo" /> 개체 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-672">An array of strongly typed <see langword="FileSystemInfo" /> objects matching the search criteria.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="241bf-673">`searchPattern` 리터럴 및 와일드 카드 문자 조합일 수 있지만 정규식을 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-673">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="241bf-674">에 다음 와일드 카드 지정자를 사용할 수 `searchPattern`합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-674">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="241bf-675">와일드 카드 지정자</span><span class="sxs-lookup"><span data-stu-id="241bf-675">Wildcard specifier</span></span>|<span data-ttu-id="241bf-676">일치 항목</span><span class="sxs-lookup"><span data-stu-id="241bf-676">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="241bf-677">\*(별표)</span><span class="sxs-lookup"><span data-stu-id="241bf-677">\* (asterisk)</span></span>|<span data-ttu-id="241bf-678">해당 위치에 0 개 이상의 문자가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-678">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="241bf-679">?</span><span class="sxs-lookup"><span data-stu-id="241bf-679">?</span></span> <span data-ttu-id="241bf-680">(물음표)</span><span class="sxs-lookup"><span data-stu-id="241bf-680">(question mark)</span></span>|<span data-ttu-id="241bf-681">해당 위치에 0 개 또는 1 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-681">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="241bf-682">와일드 카드 문자는 리터럴 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-682">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="241bf-683">예를 들어 문자열 "\* t"에서 문자 "t"로 끝나는 모든 이름 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-683">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="241bf-684">".</span><span class="sxs-lookup"><span data-stu-id="241bf-684">".</span></span> <span data-ttu-id="241bf-685">`searchPattern` 문자열 "s\*"에서 모든 이름 검색 `path` "s"로 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-685">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="241bf-686">이 메서드는 재귀 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-686">This method is not recursive.</span></span>  
  
 <span data-ttu-id="241bf-687">하위 디렉터리의 경우는 <xref:System.IO.FileSystemInfo> 파생 된 클래스에이 메서드에서 반환 되는 개체를 캐스팅 될 수 <xref:System.IO.DirectoryInfo>합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-687">For subdirectories, the <xref:System.IO.FileSystemInfo> objects returned by this method can be cast to the derived class <xref:System.IO.DirectoryInfo>.</span></span> <span data-ttu-id="241bf-688">사용 하 여는 <xref:System.IO.FileAttributes> 에서 반환 된 값의 <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> 속성을 확인 여부는 <xref:System.IO.FileSystemInfo> 파일 또는 디렉터리를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-688">Use the <xref:System.IO.FileAttributes> value returned by the <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> property to determine whether the <xref:System.IO.FileSystemInfo> represents a file or a directory.</span></span>  
  
 <span data-ttu-id="241bf-689">와일드 카드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-689">Wild cards are permitted.</span></span> <span data-ttu-id="241bf-690">예를 들어는 `searchPattern` 문자열 "\* t"의 모든 디렉터리 이름에 대 한 검색 `path` 문자 "t"로 끝나는 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-690">For example, the `searchPattern` string "\*t" searches for all directory names in `path` ending with the letter "t".</span></span> <span data-ttu-id="241bf-691">`searchPattern` 문자열 "s\*"의 모든 디렉터리 이름에 대 한 검색 `path` "s"로 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-691">The `searchPattern` string "s\*" searches for all directory names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="241bf-692">문자열 ".."에 사용할 수 `searchPattern` 디렉터리 이름에과 같은 잘못 된 디렉터리 이름의 일부로 지정 된 경우 "는. b "로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-692">The string ".." can only be used in `searchPattern` if it is specified as a part of a valid directory name, such as in the directory name "a..b".</span></span> <span data-ttu-id="241bf-693">디렉터리 계층 구조 위로 이동 하려면 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-693">It cannot be used to move up the directory hierarchy.</span></span> <span data-ttu-id="241bf-694">파일이 나 디렉터리 또는 파일이 나 디렉터리가 없으면 일치 하는 경우는 `searchPattern` 문자열에 <xref:System.IO.DirectoryInfo>,이 메서드는 빈 배열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-694">If there are no files or directories, or no files or directories that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="241bf-695">이 메서드는 다음 값을 미리 채웁니다 <xref:System.IO.FileSystemInfo> 속성:</span><span class="sxs-lookup"><span data-stu-id="241bf-695">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="241bf-696">다음 예제에서는 파일 및 지정된 된 검색 패턴과 일치 하는 디렉터리를 계산 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-696">The following example counts the files and directories that match the specified search pattern.</span></span>  
  
 [!code-csharp[DirInfo GetFileSysInfos2#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo GetFileSysInfos2/CS/dirinfo getfilesysinfos2.cs#1)]
 [!code-vb[DirInfo GetFileSysInfos2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo GetFileSysInfos2/VB/dirinfo getfilesysinfos2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="241bf-697">
            <paramref name="searchPattern" />에는 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 메서드로 정의된 잘못된 문자가 하나 이상 포함되어 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-697">
              <paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="241bf-698">
            <paramref name="searchPattern" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-698">
              <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="241bf-699">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-699">The specified path is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="241bf-700">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-700">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="241bf-701">읽을 파일 및 디렉터리 및 경로에 액세스할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-701">for reading from files and directories and for access to the path.</span>
          </span>
          <span data-ttu-id="241bf-702">연관 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-702">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          </span>
        </permission>
        <altmember cref="T:System.IO.FileSystemInfo" />
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.GetFileSystemInfos : string * System.IO.EnumerationOptions -&gt; System.IO.FileSystemInfo[]" Usage="directoryInfo.GetFileSystemInfos (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.GetFileSystemInfos : string * System.IO.SearchOption -&gt; System.IO.FileSystemInfo[]" Usage="directoryInfo.GetFileSystemInfos (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" />
      </Parameters>
      <Docs>
        <param name="searchPattern">
          <span data-ttu-id="241bf-703">디렉터리 및 파일 이름과 일치하는지 비교할 검색 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-703">The search string to match against the names of directories and filesa.</span>
          </span>
          <span data-ttu-id="241bf-704">이 매개 변수는 유효한 리터럴 경로와 와일드카드(\* 및 ?) 문자로 된 조합을 포함하지만 정규식을 지원하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-704">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span>
          </span>
        </param>
        <param name="searchOption">
          <span data-ttu-id="241bf-705">검색 작업에 현재 디렉터리만 포함할지 아니면 모든 하위 디렉터리를 포함할지를 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-705">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span>
          </span>
          <span data-ttu-id="241bf-706">기본값은 <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-706">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="241bf-707">지정된 검색 조건과 일치하는 파일 및 하위 디렉터리를 나타내는 <see cref="T:System.IO.FileSystemInfo" /> 개체 배열을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-707">Retrieves an array of <see cref="T:System.IO.FileSystemInfo" /> objects that represent the files and subdirectories matching the specified search criteria.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="241bf-708">검색 조건과 일치하는 파일 시스템 항목의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-708">An array of file system entries that match the search criteria.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="241bf-709">`searchPattern` 리터럴 및 와일드 카드 문자 조합일 수 있지만 정규식을 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-709">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="241bf-710">에 다음 와일드 카드 지정자를 사용할 수 `searchPattern`합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-710">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="241bf-711">와일드 카드 지정자</span><span class="sxs-lookup"><span data-stu-id="241bf-711">Wildcard specifier</span></span>|<span data-ttu-id="241bf-712">일치 항목</span><span class="sxs-lookup"><span data-stu-id="241bf-712">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="241bf-713">\*(별표)</span><span class="sxs-lookup"><span data-stu-id="241bf-713">\* (asterisk)</span></span>|<span data-ttu-id="241bf-714">해당 위치에 0 개 이상의 문자가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-714">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="241bf-715">?</span><span class="sxs-lookup"><span data-stu-id="241bf-715">?</span></span> <span data-ttu-id="241bf-716">(물음표)</span><span class="sxs-lookup"><span data-stu-id="241bf-716">(question mark)</span></span>|<span data-ttu-id="241bf-717">해당 위치에 0 개 또는 1 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-717">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="241bf-718">와일드 카드 문자는 리터럴 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-718">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="241bf-719">예를 들어 문자열 "\* t"에서 문자 "t"로 끝나는 모든 이름 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-719">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="241bf-720">".</span><span class="sxs-lookup"><span data-stu-id="241bf-720">".</span></span> <span data-ttu-id="241bf-721">`searchPattern` 문자열 "s\*"에서 모든 이름 검색 `path` "s"로 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-721">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="241bf-722">하위 디렉터리의 경우는 <xref:System.IO.FileSystemInfo> 파생 된 클래스에이 메서드에서 반환 되는 개체를 캐스팅 될 수 <xref:System.IO.DirectoryInfo>합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-722">For subdirectories, the <xref:System.IO.FileSystemInfo> objects returned by this method can be cast to the derived class <xref:System.IO.DirectoryInfo>.</span></span> <span data-ttu-id="241bf-723">사용 하 여는 <xref:System.IO.FileAttributes> 에서 반환 된 값의 <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> 속성을 확인 여부는 <xref:System.IO.FileSystemInfo> 파일 또는 디렉터리를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-723">Use the <xref:System.IO.FileAttributes> value returned by the <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> property to determine whether the <xref:System.IO.FileSystemInfo> represents a file or a directory.</span></span>  
  
 <span data-ttu-id="241bf-724">이 메서드는 다음 값을 미리 채웁니다 <xref:System.IO.FileSystemInfo> 속성:</span><span class="sxs-lookup"><span data-stu-id="241bf-724">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="241bf-725">
            <paramref name="searchPattern" />에는 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 메서드로 정의된 잘못된 문자가 하나 이상 포함되어 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-725">
              <paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="241bf-726">
            <paramref name="searchPattern" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-726">
              <paramref name="searchPattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="241bf-727">
            <paramref name="searchOption" />은 유효한 <see cref="T:System.IO.SearchOption" /> 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-727">
              <paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="241bf-728">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-728">The specified path is invalid (for example, it is on an unmapped drive).</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="241bf-729">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-729">The caller does not have the required permission.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="MoveTo">
      <MemberSignature Language="C#" Value="public void MoveTo (string destDirName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveTo(string destDirName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.MoveTo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveTo (destDirName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveTo(System::String ^ destDirName);" />
      <MemberSignature Language="F#" Value="member this.MoveTo : string -&gt; unit" Usage="directoryInfo.MoveTo destDirName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destDirName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="destDirName">
          <span data-ttu-id="241bf-730">이 디렉터리를 이동할 곳의 이름과 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-730">The name and path to which to move this directory.</span>
          </span>
          <span data-ttu-id="241bf-731">대상 디렉터리는 다른 디스크 볼륨이나 동일한 이름의 디렉터리가 될 수는 없지만,</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-731">The destination cannot be another disk volume or a directory with the identical name.</span>
          </span>
          <span data-ttu-id="241bf-732">이 디렉터리를 하위 디렉터리로 추가할 기존 디렉터리가 될 수는 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-732">It can be an existing directory to which you want to add this directory as a subdirectory.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="241bf-733">
            <see cref="T:System.IO.DirectoryInfo" /> 인스턴스 및 해당 내용을 새 경로로 이동합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-733">Moves a <see cref="T:System.IO.DirectoryInfo" /> instance and its contents to a new path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="241bf-734">이 메서드에서 throw 된 <xref:System.IO.IOException> 예를 들어 c:\mydir c:\public로 이동 하려고 하면이 고 c:\public 이미 있습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-734">This method throws an <xref:System.IO.IOException> if, for example, you try to move c:\mydir to c:\public, and c:\public already exists.</span></span> <span data-ttu-id="241bf-735">지정 해야 합니다 "c:\\\public\\\mydir"으로 `destDirName` 매개 변수를와 같이 새 디렉터리 이름을 지정 하거나 "c:\\\newdir"입니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-735">You must specify "c:\\\public\\\mydir" as the `destDirName` parameter, or specify a new directory name such as "c:\\\newdir".</span></span>  
  
 <span data-ttu-id="241bf-736">이 메서드는 디렉터리 읽기 전용 디렉터리를 옮기는 것을 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-736">This method permits moving a directory to a read-only directory.</span></span> <span data-ttu-id="241bf-737">이들 디렉터리의 읽기/쓰기 특성에 영향이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-737">The read/write attribute of neither directory is affected.</span></span>  
  
 <span data-ttu-id="241bf-738">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-738">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="241bf-739">다음 예제에서는 디렉터리를 이동 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-739">The following example demonstrates moving a directory.</span></span>  
  
 [!code-cpp[directoryinfomoveto#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfomoveto/CPP/directoryinfomoveto.cpp#1)]
 [!code-csharp[directoryinfomoveto#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfomoveto/CS/directoryinfomoveto.cs#1)]
 [!code-vb[directoryinfomoveto#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfomoveto/VB/directoryinfomoveto.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="241bf-740">
            <paramref name="destDirName" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-740">
              <paramref name="destDirName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="241bf-741">
            <paramref name="destDirName" />이 빈 문자열("")인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-741">
              <paramref name="destDirName" /> is an empty string (''").</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="241bf-742">디렉터리를 다른 볼륨으로 이동하려고 했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-742">An attempt was made to move a directory to a different volume.</span>
          </span>
          <span data-ttu-id="241bf-743">-또는-  <paramref name="destDirName" />이 이미 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-743">-or-  <paramref name="destDirName" /> already exists.</span>
          </span>
          <span data-ttu-id="241bf-744">-또는-  이 경로에 액세스할 수 있는 권한이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-744">-or-  You are not authorized to access this path.</span>
          </span>
          <span data-ttu-id="241bf-745">-또는-  이동되는 디렉터리와 대상 디렉터리의 이름이 같습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-745">-or-  The directory being moved and the destination directory have the same name.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="241bf-746">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-746">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="241bf-747">대상 디렉터리를 찾을 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-747">The destination directory cannot be found.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="241bf-748">읽기 및 쓰기 파일 및 디렉터리에 대 한 대상 디렉터리에 액세스할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-748">for reading and writing files and directories and for access to the destination directory.</span>
          </span>
          <span data-ttu-id="241bf-749">보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-749">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="241bf-750">연관 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-750">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.IO.DirectoryInfo.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="241bf-751">이 <see cref="T:System.IO.DirectoryInfo" /> 인스턴스의 이름을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-751">Gets the name of this <see cref="T:System.IO.DirectoryInfo" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="241bf-752">디렉터리 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-752">The directory name.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="241bf-753">이 <xref:System.IO.DirectoryInfo.Name%2A> 속성 "Bin" 등 디렉터리의 이름만 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-753">This <xref:System.IO.DirectoryInfo.Name%2A> property returns only the name of the directory, such as "Bin".</span></span> <span data-ttu-id="241bf-754">"C:\public\Bin" 등의 전체 경로 가져오려면는 <xref:System.IO.FileSystemInfo.FullName%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-754">To get the full path, such as "c:\public\Bin", use the <xref:System.IO.FileSystemInfo.FullName%2A> property.</span></span>  
  
 <span data-ttu-id="241bf-755"><xref:System.IO.DirectoryInfo.Name%2A> 속성은 <xref:System.IO.DirectoryInfo> 권한이 필요 하지 (생성 하는 데 필요한 디렉터리에 읽기 권한을 벗어나는 <xref:System.IO.DirectoryInfo.Exists%2A>)은 디렉터리 이름을 제공할 수 있지만 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-755">The <xref:System.IO.DirectoryInfo.Name%2A> property of a <xref:System.IO.DirectoryInfo> requires no permission (beyond the read permission to the directory necessary to construct the <xref:System.IO.DirectoryInfo.Exists%2A>) but can give out the directory name.</span></span> <span data-ttu-id="241bf-756">필요한 경우 손 out는 <xref:System.IO.DirectoryInfo> 암호화 보안 이름으로 보호 된 디렉터리를 신뢰할 수 없는 코드의 사용에 대 한 더미 디렉터리를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-756">If it is necessary to hand out a <xref:System.IO.DirectoryInfo> to a protected directory with a cryptographically secure name, create a dummy directory for the untrusted code’s use.</span></span>  
  
 <span data-ttu-id="241bf-757">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-757">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="241bf-758">다음 예제에서는 현재의 이름을 표시 `DirectoryInfo` 인스턴스만 해당 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-758">The following example displays the name of the current `DirectoryInfo` instance only.</span></span>  
  
 [!code-cpp[Classic DirectoryInfo.Name Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic DirectoryInfo.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DirectoryInfo.Name Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic DirectoryInfo.Name Example/CS/source.cs#1)]
 [!code-vb[Classic DirectoryInfo.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic DirectoryInfo.Name Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.FileSystemInfo.FullName" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.DirectoryInfo Parent" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::DirectoryInfo ^ Parent { System::IO::DirectoryInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.IO.DirectoryInfo" Usage="System.IO.DirectoryInfo.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="241bf-759">지정된 하위 디렉터리의 부모 디렉터리를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-759">Gets the parent directory of a specified subdirectory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="241bf-760">부모 디렉터리 또는 <see langword="null" /> 경로가 null 또는 파일 경로 루트를 나타낼 경우 (같은 "\\", "c:" 또는 \* "\\\server\share").</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-760">The parent directory, or <see langword="null" /> if the path is null or if the file path denotes a root (such as "\\", "C:", or \* "\\\server\share").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="241bf-761">공통적인 I/O 작업의 목록에 대 한 참조 [공통적인 I/O 작업](~/docs/standard/io/common-i-o-tasks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-761">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="241bf-762">다음 예제에서는 지정된 된 디렉터리의 부모 디렉터리를 참조 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-762">The following example demonstrates referring to the parent directory of a specified directory.</span></span>  
  
 [!code-cpp[directoryinfoparent#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfoparent/CPP/directoryinfoparent.cpp#1)]
 [!code-csharp[directoryinfoparent#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfoparent/CS/directoryinfoparent.cs#1)]
 [!code-vb[directoryinfoparent#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfoparent/VB/directoryinfoparent.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="241bf-763">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-763">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="241bf-764">읽을 파일 및 디렉터리 및 경로에 액세스할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-764">for reading from files and directories and for access to the path.</span>
          </span>
          <span data-ttu-id="241bf-765">연관 된 열거형: <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />, <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-765">Associated enumerations: <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />, <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Root">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo Root { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.DirectoryInfo Root" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Root" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Root As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::DirectoryInfo ^ Root { System::IO::DirectoryInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Root : System.IO.DirectoryInfo" Usage="System.IO.DirectoryInfo.Root" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="241bf-766">디렉터리의 루트 부분을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-766">Gets the root portion of the directory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="241bf-767">디렉터리의 루트를 나타내는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-767">An object that represents the root of the directory.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="241bf-768">다음 예제에서는 지정 된 디렉터리에 대 한 루트 위치를 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-768">The following example displays root locations for specified directories.</span></span>  
  
 [!code-csharp[directoryinforoot#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinforoot/CS/directoryinforoot2.cs#2)]
 [!code-vb[directoryinforoot#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinforoot/VB/directoryinforoot2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="241bf-769">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-769">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="241bf-770">읽을 파일 및 디렉터리 및 경로에 액세스할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-770">for reading from files and directories and for access to the path.</span>
          </span>
          <span data-ttu-id="241bf-771">연관 된 열거형: <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />, <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-771">Associated enumerations: <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />, <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SetAccessControl">
      <MemberSignature Language="C#" Value="public void SetAccessControl (System.Security.AccessControl.DirectorySecurity directorySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessControl(class System.Security.AccessControl.DirectorySecurity directorySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessControl(System::Security::AccessControl::DirectorySecurity ^ directorySecurity);" />
      <MemberSignature Language="F#" Value="member this.SetAccessControl : System.Security.AccessControl.DirectorySecurity -&gt; unit" Usage="directoryInfo.SetAccessControl directorySecurity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" />
      </Parameters>
      <Docs>
        <param name="directorySecurity">
          <span data-ttu-id="241bf-772">
            <c>경로</c> 매개 변수에서 설명하는 디렉터리에 적용할 ACL 항목을 설명하는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-772">An object that describes an ACL entry to apply to the directory described by the <c>path</c> parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="241bf-773">
            <see cref="T:System.Security.AccessControl.DirectorySecurity" /> 개체에서 설명하는 ACL(액세스 제어 목록) 항목을 현재 <see cref="T:System.IO.DirectoryInfo" /> 개체에서 설명하는 디렉터리에 적용합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-773">Applies access control list (ACL) entries described by a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object to the directory described by the current <see cref="T:System.IO.DirectoryInfo" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="241bf-774">액세스 제어 목록 (ACL)에 개인 및/또는 그룹 나 권한이 없는, 특정된 파일이 나 디렉터리에서 특정 작업을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-774">An access control list (ACL) describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</span></span> <span data-ttu-id="241bf-775">자세한 내용은 [방법: Access Control 목록 항목 추가 또는 제거](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="241bf-775">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
 <span data-ttu-id="241bf-776"><xref:System.IO.DirectoryInfo.SetAccessControl%2A> 메서드는 상속 되지 않은 ACL 목록을 표시 하는 파일에 ACL 항목을 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-776">The <xref:System.IO.DirectoryInfo.SetAccessControl%2A> method applies ACL entries to a file that represents the noninherited ACL list.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="241bf-777">에 대해 지정 된 ACL `directorySecurity` 디렉터리에 대 한 기존 ACL 대체 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-777">The ACL specified for `directorySecurity` replaces the existing ACL for the directory.</span></span> <span data-ttu-id="241bf-778">새 사용자에 대 한 권한을 추가 하려면 사용 된 <xref:System.IO.DirectoryInfo.GetAccessControl%2A> 메서드를 가져올 기존 ACL을 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-778">To add permissions for a new user, use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to obtain the existing ACL, and modify it.</span></span>  
  
 <span data-ttu-id="241bf-779"><xref:System.IO.DirectoryInfo.SetAccessControl%2A> 메서드만 계속 되 면 <xref:System.Security.AccessControl.DirectorySecurity> 개체를 만든 후 수정 된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-779">The <xref:System.IO.DirectoryInfo.SetAccessControl%2A> method persists only <xref:System.Security.AccessControl.DirectorySecurity> objects that have been modified after object creation.</span></span>  <span data-ttu-id="241bf-780">경우는 <xref:System.Security.AccessControl.DirectorySecurity> 개체가 수정 되지 않은, 파일에 유지 되지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-780">If a <xref:System.Security.AccessControl.DirectorySecurity> object has not been modified, it will not be persisted to a file.</span></span>  <span data-ttu-id="241bf-781">검색할 수 없으면 따라서는 <xref:System.Security.AccessControl.DirectorySecurity> 한 파일에서 개체를 다른 파일에 동일한 개체를 다시 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-781">Therefore, it is not possible to retrieve a <xref:System.Security.AccessControl.DirectorySecurity> object from one file and reapply the same object to another file.</span></span>  
  
 <span data-ttu-id="241bf-782">다른 파일에서 ACL 정보를 복사 합니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-782">To copy ACL information from one file to another:</span></span>  
  
1.  <span data-ttu-id="241bf-783">사용 하 여는 <xref:System.IO.DirectoryInfo.GetAccessControl%2A> 를 검색할 메서드는 <xref:System.Security.AccessControl.DirectorySecurity> 소스 파일에서 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-783">Use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to retrieve the <xref:System.Security.AccessControl.DirectorySecurity> object from the source file.</span></span>  
  
2.  <span data-ttu-id="241bf-784">새 <xref:System.Security.AccessControl.DirectorySecurity> 대상 파일에 대 한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-784">Create a new <xref:System.Security.AccessControl.DirectorySecurity> object for the destination file.</span></span>  
  
3.  <span data-ttu-id="241bf-785">사용 하 여는 <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A> 또는 <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> 원본의 메서드 <xref:System.Security.AccessControl.DirectorySecurity> ACL 정보를 검색 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-785">Use the <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A> or <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> method of the source <xref:System.Security.AccessControl.DirectorySecurity> object to retrieve the ACL information.</span></span>  
  
4.  <span data-ttu-id="241bf-786">사용 하 여는 <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A> 또는 <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> 대상에 3 단계에서 검색 메서드 정보를 복사 하려면 <xref:System.Security.AccessControl.DirectorySecurity> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="241bf-786">Use the <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A> or <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> method to copy the information retrieved in step 3 to the destination <xref:System.Security.AccessControl.DirectorySecurity> object.</span></span>  
  
5.  <span data-ttu-id="241bf-787">대상을 설정 <xref:System.Security.AccessControl.DirectorySecurity> 개체를 사용 하 여 대상 파일의 <xref:System.IO.DirectoryInfo.SetAccessControl%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="241bf-787">Set the destination <xref:System.Security.AccessControl.DirectorySecurity> object to the destination file using the <xref:System.IO.DirectoryInfo.SetAccessControl%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="241bf-788">다음 예제에서는 <xref:System.IO.DirectoryInfo.GetAccessControl%2A> 및 <xref:System.IO.DirectoryInfo.SetAccessControl%2A> 디렉터리에서 항목 목록 (ACL)을 제어 하는 메서드를 추가 하 고 액세스를 제거 하십시오.</span><span class="sxs-lookup"><span data-stu-id="241bf-788">The following example uses the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> and <xref:System.IO.DirectoryInfo.SetAccessControl%2A> methods to add and then remove an access control list (ACL) entry from a directory.</span></span>  
  
 [!code-cpp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="241bf-789">
            <paramref name="directorySecurity" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-789">The <paramref name="directorySecurity" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="241bf-790">파일을 찾을 수 없거나 수정할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-790">The file could not be found or modified.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="241bf-791">현재 프로세스에 파일을 열 수 있는 액세스 권한이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-791">The current process does not have access to open the file.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="241bf-792">현재 운영 체제가 Microsoft Windows 2000 이상이 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-792">The current operating system is not Microsoft Windows 2000 or later.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="241bf-793">디렉터리에 대 한 액세스 제어 목록 (ACL)를 열거할 수 있는 권한입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-793">for permission to enumerate access control list (ACL) for a directory.</span>
          </span>
          <span data-ttu-id="241bf-794">보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-794">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="241bf-795">연관 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />, <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-795">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />, <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="directoryInfo.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="241bf-796">사용자가 통과한 원래의 경로를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-796">Returns the original path that was passed by the user.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="241bf-797">사용자가 통과한 원래의 경로를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241bf-797">Returns the original path that was passed by the user.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>