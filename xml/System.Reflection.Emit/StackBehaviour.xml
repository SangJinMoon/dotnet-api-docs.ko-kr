<Type Name="StackBehaviour" FullName="System.Reflection.Emit.StackBehaviour">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a872c1436cc6d45edb6906a7fdc01e94fb40b621" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30469527" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum StackBehaviour" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed StackBehaviour extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Emit.StackBehaviour" />
  <TypeSignature Language="VB.NET" Value="Public Enum StackBehaviour" />
  <TypeSignature Language="C++ CLI" Value="public enum class StackBehaviour" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="579c3-101">값이 스택에 푸시되거나 스택에서 팝하는 방법에 대해 설명합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="579c3-101">Describes how values are pushed onto a stack or popped off a stack.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Pop0">
      <MemberSignature Language="C#" Value="Pop0" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.Emit.StackBehaviour Pop0 = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.Emit.StackBehaviour.Pop0" />
      <MemberSignature Language="VB.NET" Value="Pop0" />
      <MemberSignature Language="C++ CLI" Value="Pop0" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.StackBehaviour</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="579c3-102">스택에서 값을 팝하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c3-102">No values are popped off the stack.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Pop1">
      <MemberSignature Language="C#" Value="Pop1" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.Emit.StackBehaviour Pop1 = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.Emit.StackBehaviour.Pop1" />
      <MemberSignature Language="VB.NET" Value="Pop1" />
      <MemberSignature Language="C++ CLI" Value="Pop1" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.StackBehaviour</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="579c3-103">스택에서 값 하나를 팝합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c3-103">Pops one value off the stack.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Pop1_pop1">
      <MemberSignature Language="C#" Value="Pop1_pop1" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.Emit.StackBehaviour Pop1_pop1 = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.Emit.StackBehaviour.Pop1_pop1" />
      <MemberSignature Language="VB.NET" Value="Pop1_pop1" />
      <MemberSignature Language="C++ CLI" Value="Pop1_pop1" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.StackBehaviour</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="579c3-104">스택에서 첫 번째 피연산자에 대한 값 하나를 팝하고, 두 번째 피연산자에 대한 값 하나를 팝합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c3-104">Pops 1 value off the stack for the first operand, and 1 value of the stack for the second operand.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Popi">
      <MemberSignature Language="C#" Value="Popi" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.Emit.StackBehaviour Popi = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.Emit.StackBehaviour.Popi" />
      <MemberSignature Language="VB.NET" Value="Popi" />
      <MemberSignature Language="C++ CLI" Value="Popi" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.StackBehaviour</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="579c3-105">스택에서 32비트 정수를 팝합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c3-105">Pops a 32-bit integer off the stack.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Popi_pop1">
      <MemberSignature Language="C#" Value="Popi_pop1" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.Emit.StackBehaviour Popi_pop1 = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.Emit.StackBehaviour.Popi_pop1" />
      <MemberSignature Language="VB.NET" Value="Popi_pop1" />
      <MemberSignature Language="C++ CLI" Value="Popi_pop1" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.StackBehaviour</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="579c3-106">스택에서 첫 번째 피연산자에 대한 32비트 정수를 팝하고, 두 번째 피연산자에 대한 값 하나를 팝합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c3-106">Pops a 32-bit integer off the stack for the first operand, and a value off the stack for the second operand.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Popi_popi">
      <MemberSignature Language="C#" Value="Popi_popi" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.Emit.StackBehaviour Popi_popi = int32(5)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.Emit.StackBehaviour.Popi_popi" />
      <MemberSignature Language="VB.NET" Value="Popi_popi" />
      <MemberSignature Language="C++ CLI" Value="Popi_popi" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.StackBehaviour</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="579c3-107">스택에서 첫 번째 피연산자에 대한 32비트 정수를 팝하고, 두 번째 피연산자에 대한 32비트 정수를 팝합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c3-107">Pops a 32-bit integer off the stack for the first operand, and a 32-bit integer off the stack for the second operand.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Popi_popi_popi">
      <MemberSignature Language="C#" Value="Popi_popi_popi" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.Emit.StackBehaviour Popi_popi_popi = int32(7)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.Emit.StackBehaviour.Popi_popi_popi" />
      <MemberSignature Language="VB.NET" Value="Popi_popi_popi" />
      <MemberSignature Language="C++ CLI" Value="Popi_popi_popi" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.StackBehaviour</ReturnType>
      </ReturnValue>
      <MemberValue>7</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="579c3-108">스택에서 첫 번째 피연산자에 대한 32비트 정수를 팝하고, 두 번째 피연산자에 대한 32비트 정수를 팝합니다. 그리고 세 번째 피연산자에 대한 32비트 정수도 팝합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c3-108">Pops a 32-bit integer off the stack for the first operand, a 32-bit integer off the stack for the second operand, and a 32-bit integer off the stack for the third operand.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Popi_popi8">
      <MemberSignature Language="C#" Value="Popi_popi8" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.Emit.StackBehaviour Popi_popi8 = int32(6)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.Emit.StackBehaviour.Popi_popi8" />
      <MemberSignature Language="VB.NET" Value="Popi_popi8" />
      <MemberSignature Language="C++ CLI" Value="Popi_popi8" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.StackBehaviour</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="579c3-109">스택에서 첫 번째 피연산자에 대한 32비트 정수를 팝하고, 두 번째 피연산자에 대한 64비트 정수를 팝합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c3-109">Pops a 32-bit integer off the stack for the first operand, and a 64-bit integer off the stack for the second operand.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Popi_popr4">
      <MemberSignature Language="C#" Value="Popi_popr4" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.Emit.StackBehaviour Popi_popr4 = int32(8)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.Emit.StackBehaviour.Popi_popr4" />
      <MemberSignature Language="VB.NET" Value="Popi_popr4" />
      <MemberSignature Language="C++ CLI" Value="Popi_popr4" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.StackBehaviour</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="579c3-110">스택에서 첫 번째 피연산자에 대한 32비트 정수를 팝하고, 두 번째 피연산자에 대한 32비트 부동 소수점 수를 팝합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c3-110">Pops a 32-bit integer off the stack for the first operand, and a 32-bit floating point number off the stack for the second operand.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Popi_popr8">
      <MemberSignature Language="C#" Value="Popi_popr8" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.Emit.StackBehaviour Popi_popr8 = int32(9)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.Emit.StackBehaviour.Popi_popr8" />
      <MemberSignature Language="VB.NET" Value="Popi_popr8" />
      <MemberSignature Language="C++ CLI" Value="Popi_popr8" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.StackBehaviour</ReturnType>
      </ReturnValue>
      <MemberValue>9</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="579c3-111">스택에서 첫 번째 피연산자에 대한 32비트 정수를 팝하고, 두 번째 피연산자에 대한 64비트 부동 소수점 수를 팝합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c3-111">Pops a 32-bit integer off the stack for the first operand, and a 64-bit floating point number off the stack for the second operand.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Popref">
      <MemberSignature Language="C#" Value="Popref" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.Emit.StackBehaviour Popref = int32(10)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.Emit.StackBehaviour.Popref" />
      <MemberSignature Language="VB.NET" Value="Popref" />
      <MemberSignature Language="C++ CLI" Value="Popref" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.StackBehaviour</ReturnType>
      </ReturnValue>
      <MemberValue>10</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="579c3-112">스택에서 참조를 팝합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c3-112">Pops a reference off the stack.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Popref_pop1">
      <MemberSignature Language="C#" Value="Popref_pop1" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.Emit.StackBehaviour Popref_pop1 = int32(11)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.Emit.StackBehaviour.Popref_pop1" />
      <MemberSignature Language="VB.NET" Value="Popref_pop1" />
      <MemberSignature Language="C++ CLI" Value="Popref_pop1" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.StackBehaviour</ReturnType>
      </ReturnValue>
      <MemberValue>11</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="579c3-113">스택에서 첫 번째 피연산자에 대한 참조를 팝하고, 두 번째 피연산자에 대한 값 하나를 팝합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c3-113">Pops a reference off the stack for the first operand, and a value off the stack for the second operand.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Popref_popi">
      <MemberSignature Language="C#" Value="Popref_popi" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.Emit.StackBehaviour Popref_popi = int32(12)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.Emit.StackBehaviour.Popref_popi" />
      <MemberSignature Language="VB.NET" Value="Popref_popi" />
      <MemberSignature Language="C++ CLI" Value="Popref_popi" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.StackBehaviour</ReturnType>
      </ReturnValue>
      <MemberValue>12</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="579c3-114">스택에서 첫 번째 피연산자에 대한 참조를 팝하고, 두 번째 피연산자에 대한 32비트 정수를 팝합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c3-114">Pops a reference off the stack for the first operand, and a 32-bit integer off the stack for the second operand.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Popref_popi_pop1">
      <MemberSignature Language="C#" Value="Popref_popi_pop1" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.Emit.StackBehaviour Popref_popi_pop1 = int32(28)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.Emit.StackBehaviour.Popref_popi_pop1" />
      <MemberSignature Language="VB.NET" Value="Popref_popi_pop1" />
      <MemberSignature Language="C++ CLI" Value="Popref_popi_pop1" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.StackBehaviour</ReturnType>
      </ReturnValue>
      <MemberValue>28</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="579c3-115">스택에서 첫 번째 피연산자에 대한 참조를 팝하고, 두 번째 피연산자에 대한 값 하나를 팝합니다. 그리고 세 번째 피연산자에 대한 32비트 정수도 팝합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c3-115">Pops a reference off the stack for the first operand, a value off the stack for the second operand, and a 32-bit integer off the stack for the third operand.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Popref_popi_popi">
      <MemberSignature Language="C#" Value="Popref_popi_popi" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.Emit.StackBehaviour Popref_popi_popi = int32(13)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.Emit.StackBehaviour.Popref_popi_popi" />
      <MemberSignature Language="VB.NET" Value="Popref_popi_popi" />
      <MemberSignature Language="C++ CLI" Value="Popref_popi_popi" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.StackBehaviour</ReturnType>
      </ReturnValue>
      <MemberValue>13</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="579c3-116">스택에서 첫 번째 피연산자에 대한 참조를 팝하고, 두 번째 피연산자에 대한 값 하나를 팝합니다. 그리고 세 번째 피연산자에 대한 값 하나도 팝합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c3-116">Pops a reference off the stack for the first operand, a value off the stack for the second operand, and a value off the stack for the third operand.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Popref_popi_popi8">
      <MemberSignature Language="C#" Value="Popref_popi_popi8" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.Emit.StackBehaviour Popref_popi_popi8 = int32(14)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.Emit.StackBehaviour.Popref_popi_popi8" />
      <MemberSignature Language="VB.NET" Value="Popref_popi_popi8" />
      <MemberSignature Language="C++ CLI" Value="Popref_popi_popi8" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.StackBehaviour</ReturnType>
      </ReturnValue>
      <MemberValue>14</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="579c3-117">스택에서 첫 번째 피연산자에 대한 참조를 팝하고, 두 번째 피연산자에 대한 값 하나를 팝합니다. 그리고 세 번째 피연산자에 대한 64비트 정수도 팝합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c3-117">Pops a reference off the stack for the first operand, a value off the stack for the second operand, and a 64-bit integer off the stack for the third operand.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Popref_popi_popr4">
      <MemberSignature Language="C#" Value="Popref_popi_popr4" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.Emit.StackBehaviour Popref_popi_popr4 = int32(15)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.Emit.StackBehaviour.Popref_popi_popr4" />
      <MemberSignature Language="VB.NET" Value="Popref_popi_popr4" />
      <MemberSignature Language="C++ CLI" Value="Popref_popi_popr4" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.StackBehaviour</ReturnType>
      </ReturnValue>
      <MemberValue>15</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="579c3-118">스택에서 첫 번째 피연산자에 대한 참조를 팝하고, 두 번째 피연산자에 대한 값 하나를 팝합니다. 그리고 세 번째 피연산자에 대한 32비트 정수도 팝합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c3-118">Pops a reference off the stack for the first operand, a value off the stack for the second operand, and a 32-bit integer off the stack for the third operand.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Popref_popi_popr8">
      <MemberSignature Language="C#" Value="Popref_popi_popr8" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.Emit.StackBehaviour Popref_popi_popr8 = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.Emit.StackBehaviour.Popref_popi_popr8" />
      <MemberSignature Language="VB.NET" Value="Popref_popi_popr8" />
      <MemberSignature Language="C++ CLI" Value="Popref_popi_popr8" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.StackBehaviour</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="579c3-119">스택에서 첫 번째 피연산자에 대한 참조를 팝하고, 두 번째 피연산자에 대한 64비트 부동 소수점 수를 팝합니다. 그리고 세 번째 피연산자에 대한 64비트 정수도 팝합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c3-119">Pops a reference off the stack for the first operand, a value off the stack for the second operand, and a 64-bit floating point number off the stack for the third operand.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Popref_popi_popref">
      <MemberSignature Language="C#" Value="Popref_popi_popref" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.Emit.StackBehaviour Popref_popi_popref = int32(17)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.Emit.StackBehaviour.Popref_popi_popref" />
      <MemberSignature Language="VB.NET" Value="Popref_popi_popref" />
      <MemberSignature Language="C++ CLI" Value="Popref_popi_popref" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.StackBehaviour</ReturnType>
      </ReturnValue>
      <MemberValue>17</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="579c3-120">스택에서 첫 번째 피연산자에 대한 참조를 팝하고, 두 번째 피연산자에 대한 값 하나를 팝합니다. 그리고 세 번째 피연산자에 대한 참조도 팝합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c3-120">Pops a reference off the stack for the first operand, a value off the stack for the second operand, and a reference off the stack for the third operand.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Push0">
      <MemberSignature Language="C#" Value="Push0" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.Emit.StackBehaviour Push0 = int32(18)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.Emit.StackBehaviour.Push0" />
      <MemberSignature Language="VB.NET" Value="Push0" />
      <MemberSignature Language="C++ CLI" Value="Push0" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.StackBehaviour</ReturnType>
      </ReturnValue>
      <MemberValue>18</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="579c3-121">스택에 값을 푸시하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c3-121">No values are pushed onto the stack.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Push1">
      <MemberSignature Language="C#" Value="Push1" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.Emit.StackBehaviour Push1 = int32(19)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.Emit.StackBehaviour.Push1" />
      <MemberSignature Language="VB.NET" Value="Push1" />
      <MemberSignature Language="C++ CLI" Value="Push1" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.StackBehaviour</ReturnType>
      </ReturnValue>
      <MemberValue>19</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="579c3-122">스택에 값 하나를 푸시합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c3-122">Pushes one value onto the stack.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Push1_push1">
      <MemberSignature Language="C#" Value="Push1_push1" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.Emit.StackBehaviour Push1_push1 = int32(20)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.Emit.StackBehaviour.Push1_push1" />
      <MemberSignature Language="VB.NET" Value="Push1_push1" />
      <MemberSignature Language="C++ CLI" Value="Push1_push1" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.StackBehaviour</ReturnType>
      </ReturnValue>
      <MemberValue>20</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="579c3-123">스택에 첫 번째 피연산자에 대한 값 하나를 푸시하고, 두 번째 피연산자에 대한 값 하나를 푸시합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c3-123">Pushes 1 value onto the stack for the first operand, and 1 value onto the stack for the second operand.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Pushi">
      <MemberSignature Language="C#" Value="Pushi" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.Emit.StackBehaviour Pushi = int32(21)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.Emit.StackBehaviour.Pushi" />
      <MemberSignature Language="VB.NET" Value="Pushi" />
      <MemberSignature Language="C++ CLI" Value="Pushi" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.StackBehaviour</ReturnType>
      </ReturnValue>
      <MemberValue>21</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="579c3-124">스택에 32비트 정수를 푸시합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c3-124">Pushes a 32-bit integer onto the stack.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Pushi8">
      <MemberSignature Language="C#" Value="Pushi8" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.Emit.StackBehaviour Pushi8 = int32(22)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.Emit.StackBehaviour.Pushi8" />
      <MemberSignature Language="VB.NET" Value="Pushi8" />
      <MemberSignature Language="C++ CLI" Value="Pushi8" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.StackBehaviour</ReturnType>
      </ReturnValue>
      <MemberValue>22</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="579c3-125">스택에 64비트 정수를 푸시합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c3-125">Pushes a 64-bit integer onto the stack.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Pushr4">
      <MemberSignature Language="C#" Value="Pushr4" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.Emit.StackBehaviour Pushr4 = int32(23)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.Emit.StackBehaviour.Pushr4" />
      <MemberSignature Language="VB.NET" Value="Pushr4" />
      <MemberSignature Language="C++ CLI" Value="Pushr4" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.StackBehaviour</ReturnType>
      </ReturnValue>
      <MemberValue>23</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="579c3-126">스택에 32비트 부동 소수점 수를 푸시합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c3-126">Pushes a 32-bit floating point number onto the stack.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Pushr8">
      <MemberSignature Language="C#" Value="Pushr8" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.Emit.StackBehaviour Pushr8 = int32(24)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.Emit.StackBehaviour.Pushr8" />
      <MemberSignature Language="VB.NET" Value="Pushr8" />
      <MemberSignature Language="C++ CLI" Value="Pushr8" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.StackBehaviour</ReturnType>
      </ReturnValue>
      <MemberValue>24</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="579c3-127">스택에 64비트 부동 소수점 수를 푸시합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c3-127">Pushes a 64-bit floating point number onto the stack.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Pushref">
      <MemberSignature Language="C#" Value="Pushref" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.Emit.StackBehaviour Pushref = int32(25)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.Emit.StackBehaviour.Pushref" />
      <MemberSignature Language="VB.NET" Value="Pushref" />
      <MemberSignature Language="C++ CLI" Value="Pushref" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.StackBehaviour</ReturnType>
      </ReturnValue>
      <MemberValue>25</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="579c3-128">스택에 참조를 푸시합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c3-128">Pushes a reference onto the stack.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Varpop">
      <MemberSignature Language="C#" Value="Varpop" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.Emit.StackBehaviour Varpop = int32(26)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.Emit.StackBehaviour.Varpop" />
      <MemberSignature Language="VB.NET" Value="Varpop" />
      <MemberSignature Language="C++ CLI" Value="Varpop" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.StackBehaviour</ReturnType>
      </ReturnValue>
      <MemberValue>26</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="579c3-129">스택에서 변수를 팝합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c3-129">Pops a variable off the stack.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Varpush">
      <MemberSignature Language="C#" Value="Varpush" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.Emit.StackBehaviour Varpush = int32(27)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.Emit.StackBehaviour.Varpush" />
      <MemberSignature Language="VB.NET" Value="Varpush" />
      <MemberSignature Language="C++ CLI" Value="Varpush" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.StackBehaviour</ReturnType>
      </ReturnValue>
      <MemberValue>27</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="579c3-130">스택에 변수를 푸시합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="579c3-130">Pushes a variable onto the stack.</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>