<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="PackingSize.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac51f311c07aa6d0e14edf8f5085d9e2bd98f3531a1.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1f311c07aa6d0e14edf8f5085d9e2bd98f3531a1</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Reflection.Emit.PackingSize">
          <source>Specifies one of two factors that determine the memory alignment of fields when a type is marshaled.</source>
          <target state="translated">형식이 마샬링될 때 필드의 메모리 맞춤을 결정하는 두 요소 중 하나를 지정합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Emit.PackingSize">
          <source>Packing size affects the alignment of fields in structures and classes whose organization is <ph id="ph1">&lt;xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">구조체와 클래스를 해당 조직이 필드의 맞춤에 영향을 줍니다 압축 크기 <ph id="ph1">&lt;xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Emit.PackingSize">
          <source>The packing size is one of two factors that determine the offset of a field when the structure or class is marshaled; the other factor is the effective size of the field.</source>
          <target state="translated">압축 크기는 구조체 또는 클래스; 마샬링될 때 필드의 오프셋을 결정 하는 두 요소 중 하나 다른 인수는 필드의 유효 크기입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Emit.PackingSize">
          <source>To determine the offset of a field:</source>
          <target state="translated">확인 하려면 필드의 오프셋:</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Emit.PackingSize">
          <source>Compute the minimum value for the offset by adding the size of the preceding field to the offset of the preceding field.</source>
          <target state="translated">이전 필드의 오프셋을 이전 필드의 크기를 추가 하 여 오프셋에 대 한 최소 값을 계산 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Emit.PackingSize">
          <source>Compute the natural packing size for the field: If the field is a simple data type, use the size.</source>
          <target state="translated">필드에 대 한 자연 압축 크기를 계산: 필드가 단순 데이터 형식인 경우 크기를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Emit.PackingSize">
          <source>If the field is an array, use the size of an array element.</source>
          <target state="translated">필드 배열이 면 배열 요소의 크기를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Emit.PackingSize">
          <source>If the field is itself a structure, compare the packing size of that structure to the size of the largest field in that structure, and use the smaller of the two values.</source>
          <target state="translated">필드 자체가 구조체 경우 해당 구조에서 가장 큰 필드의 크기를 해당 구조체의 압축 크기를 비교 하 고 두 값 중 더 작은 숫자를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Emit.PackingSize">
          <source>Compute the effective packing size by comparing the packing size to the natural packing size of the field, computed in step 2.</source>
          <target state="translated">2 단계에서 계산 된 필드의 원래 압축 크기를 압축 크기를 비교 하 여 효율적인 압축 크기를 계산 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Emit.PackingSize">
          <source>Use the smaller of the two numbers.</source>
          <target state="translated">두 숫자 중 더 작은 숫자를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Emit.PackingSize">
          <source>Compute the offset.</source>
          <target state="translated">오프셋을 계산 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Emit.PackingSize">
          <source>The offset is the first memory location that is equal to or larger than the minimum, and a multiple of the effective packing size computed in step 3.</source>
          <target state="translated">오프셋은 같거나, 최소값 보다 큰 첫 번째 메모리 위치 및 3 단계에서 계산 된 유효 압축 크기의 배수입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Emit.PackingSize">
          <source>Once offsets have been computed for all the fields in the class or structure, padding is added so that the overall size is a multiple of the packing size.</source>
          <target state="translated">클래스 또는 구조체의 모든 필드에 대 한 오프셋을 계산 하는 전체 크기는 압축 크기의 배수 안쪽 여백을 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Emit.PackingSize">
          <source>For example, in a class containing a <ph id="ph1">`byte`</ph> and a <ph id="ph2">`long`</ph>, using packing size <ph id="ph3">`Size1`</ph>, the offset of the <ph id="ph4">`byte`</ph> field is zero (0) and the offset of the <ph id="ph5">`long`</ph> field is one (1).</source>
          <target state="translated">포함 하는 클래스의 예를 들어 한 <ph id="ph1">`byte`</ph> 및 <ph id="ph2">`long`</ph>를 사용 하 여 압축 크기 <ph id="ph3">`Size1`</ph>의 오프셋은 <ph id="ph4">`byte`</ph> 필드 번호는 영 (0)의 오프셋은 <ph id="ph5">`long`</ph> 필드는 한 개 (1).</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Emit.PackingSize">
          <source>If the packing size is <ph id="ph1">`Size4`</ph>, the <ph id="ph2">`long`</ph> field has offset four (4).</source>
          <target state="translated">압축 크기는 경우 <ph id="ph1">`Size4`</ph>, <ph id="ph2">`long`</ph> 필드 오프셋에 4 개 (4).</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Emit.PackingSize">
          <source>In a class containing two <ph id="ph1">`short`</ph> fields, using any packing size, the offset of the second <ph id="ph2">`short`</ph> field is two (2).</source>
          <target state="translated">두 개를 포함 하는 클래스에서 <ph id="ph1">`short`</ph> 임의의 압축 크기를 두 번째의 오프셋을 사용 하 여 필드 <ph id="ph2">`short`</ph> 필드는 2입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Emit.PackingSize">
          <source>Changing the packing size can affect performance if it causes fields to be aligned on offsets that are not multiples of their size.</source>
          <target state="translated">압축 크기를 변경 하면 필드를 해당 크기의 배수가 아닌 오프셋에 정렬 되어야 하는 경우 성능을 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="F:System.Reflection.Emit.PackingSize.Size1">
          <source>The packing size is 1 byte.</source>
          <target state="translated">압축 크기가 1바이트입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="F:System.Reflection.Emit.PackingSize.Size128">
          <source>The packing size is 128 bytes.</source>
          <target state="translated">압축 크기가 128바이트입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="F:System.Reflection.Emit.PackingSize.Size16">
          <source>The packing size is 16 bytes.</source>
          <target state="translated">압축 크기가 16바이트입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="F:System.Reflection.Emit.PackingSize.Size2">
          <source>The packing size is 2 bytes.</source>
          <target state="translated">압축 크기가 2바이트입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="F:System.Reflection.Emit.PackingSize.Size32">
          <source>The packing size is 32 bytes.</source>
          <target state="translated">압축 크기가 32바이트입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="F:System.Reflection.Emit.PackingSize.Size4">
          <source>The packing size is 4 bytes.</source>
          <target state="translated">압축 크기가 4바이트입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="F:System.Reflection.Emit.PackingSize.Size64">
          <source>The packing size is 64 bytes.</source>
          <target state="translated">압축 크기가 64바이트입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="F:System.Reflection.Emit.PackingSize.Size8">
          <source>The packing size is 8 bytes.</source>
          <target state="translated">압축 크기가 8바이트입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="F:System.Reflection.Emit.PackingSize.Unspecified">
          <source>The packing size is not specified.</source>
          <target state="translated">압축 크기가 지정되지 않았습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>