<Type Name="LocalBuilder" FullName="System.Reflection.Emit.LocalBuilder">
  <TypeSignature Language="C#" Value="public sealed class LocalBuilder : System.Reflection.LocalVariableInfo, System.Runtime.InteropServices._LocalBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit LocalBuilder extends System.Reflection.LocalVariableInfo implements class System.Runtime.InteropServices._LocalBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Emit.LocalBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LocalBuilder&#xA;Inherits LocalVariableInfo&#xA;Implements _LocalBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class LocalBuilder sealed : System::Reflection::LocalVariableInfo, System::Runtime::InteropServices::_LocalBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Reflection.LocalVariableInfo</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._LocalBuilder</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._LocalBuilder))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="467a9-101">메서드 또는 생성자 내의 지역 변수를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="467a9-101">Represents a local variable within a method or constructor.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467a9-102">A `LocalBuilder` 를 사용 하 여 개체를 정의할 수 있습니다는 <xref:System.Reflection.Emit.ILGenerator.DeclareLocal%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="467a9-102">A `LocalBuilder` object can be defined using the <xref:System.Reflection.Emit.ILGenerator.DeclareLocal%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="467a9-103">다음 예제에서는 한 `static` 메서드 (`Shared` Visual basic에서) 라는 `Function1` 문자열을 반환 하 고 형식의 매개 변수 <xref:System.Int32>합니다.</span><span class="sxs-lookup"><span data-stu-id="467a9-103">The following example creates a `static` method (`Shared` in Visual Basic) named `Function1` that returns a string and has a parameter of type <xref:System.Int32>.</span></span> <span data-ttu-id="467a9-104">코드 예제에서는 메서드 본문에서 만듭니다 <xref:System.Reflection.Emit.LocalBuilder> 개체를 나타내는 두 개의 지역 변수 기호 정보를 설정 지역 변수에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="467a9-104">In the body of the method, the code example creates <xref:System.Reflection.Emit.LocalBuilder> objects representing two local variables, and sets symbol information for the local variables.</span></span> <span data-ttu-id="467a9-105">메서드는 중요 한 작업을 수행 하지 않습니다 되지만 메서드 본문은 지역 변수를 지역 변수에 리터럴 문자열을 저장 하 고 지역 변수를 로드 하는 매개 변수를 저장 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="467a9-105">The method does not do anything significant, but the method body demonstrates storing a parameter to a local variable, storing a literal string to a local variable, and loading a local variable.</span></span>  
  
 [!code-cpp[LocalBuilder_Sample_SetLocalSymInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/LocalBuilder_Sample_SetLocalSymInfo/CPP/localbuilder_sample_4.cpp#1)]
 [!code-csharp[LocalBuilder_Sample_SetLocalSymInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/LocalBuilder_Sample_SetLocalSymInfo/CS/localbuilder_sample_4.cs#1)]
 [!code-vb[LocalBuilder_Sample_SetLocalSymInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/LocalBuilder_Sample_SetLocalSymInfo/VB/localbuilder_sample_4.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="IsPinned">
      <MemberSignature Language="C#" Value="public override bool IsPinned { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPinned" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.LocalBuilder.IsPinned" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsPinned As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsPinned { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="467a9-106">지역 변수에서 참조하는 개체가 메모리에 고정되어 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="467a9-106">Gets a value indicating whether the object referred to by the local variable is pinned in memory.</span></span></summary>
        <value>
          <span data-ttu-id="467a9-107">지역 변수에서 참조하는 개체가 메모리에 고정되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="467a9-107"><see langword="true" /> if the object referred to by the local variable is pinned in memory; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467a9-108">안전 하지 않은 코드에서 개체를 고정 해야 관리 되지 않는 포인터에 의해를 참조할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="467a9-108">In unsafe code, an object must be pinned before it can be referred to by an unmanaged pointer.</span></span> <span data-ttu-id="467a9-109">참조 된 개체의 고정 되어 있는 동안에 가비지 수집에 의해 이동할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="467a9-109">While the referenced object is pinned, it cannot be moved by garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalIndex">
      <MemberSignature Language="C#" Value="public override int LocalIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LocalIndex" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.LocalBuilder.LocalIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int LocalIndex { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="467a9-110">메서드 본문 내에 있는 지역 변수의 인덱스(0부터 시작)를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="467a9-110">Gets the zero-based index of the local variable within the method body.</span></span></summary>
        <value><span data-ttu-id="467a9-111">메서드 본문 내에서 지역 변수의 선언 순서를 나타내는 정수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="467a9-111">An integer value that represents the order of declaration of the local variable within the method body.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467a9-112">인덱스 번호 순서로 지역 변수에 할당 되는 선언 되거나 내보내집니다의 0부터 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="467a9-112">Index numbers are assigned to local variables in the order in which they are declared or emitted, beginning with zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalType">
      <MemberSignature Language="C#" Value="public override Type LocalType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type LocalType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.LocalBuilder.LocalType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ LocalType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="467a9-113">지역 변수의 형식을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="467a9-113">Gets the type of the local variable.</span></span></summary>
        <value><span data-ttu-id="467a9-114">지역 변수의 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="467a9-114">The <see cref="T:System.Type" /> of the local variable.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="467a9-115">다음 코드 샘플에서는 `LocalType`합니다.</span><span class="sxs-lookup"><span data-stu-id="467a9-115">The following code sample illustrates the use of `LocalType`.</span></span> <span data-ttu-id="467a9-116">이 코드는에 대 한 보다 큰 예제의 일부는 <xref:System.Reflection.Emit.LocalBuilder> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="467a9-116">This code is part of a larger example for the <xref:System.Reflection.Emit.LocalBuilder> class.</span></span>  
  
 [!code-cpp[LocalBuilder_Sample_SetLocalSymInfo#2](~/samples/snippets/cpp/VS_Snippets_CLR/LocalBuilder_Sample_SetLocalSymInfo/CPP/localbuilder_sample_4.cpp#2)]
 [!code-csharp[LocalBuilder_Sample_SetLocalSymInfo#2](~/samples/snippets/csharp/VS_Snippets_CLR/LocalBuilder_Sample_SetLocalSymInfo/CS/localbuilder_sample_4.cs#2)]
 [!code-vb[LocalBuilder_Sample_SetLocalSymInfo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/LocalBuilder_Sample_SetLocalSymInfo/VB/localbuilder_sample_4.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetLocalSymInfo">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="467a9-117">지역 변수의 기호 정보를 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="467a9-117">Sets the local variable's symbolic information.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetLocalSymInfo">
      <MemberSignature Language="C#" Value="public void SetLocalSymInfo (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetLocalSymInfo(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.LocalBuilder.SetLocalSymInfo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetLocalSymInfo (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetLocalSymInfo(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="467a9-118">지역 변수의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="467a9-118">The name of the local variable.</span></span></param>
        <summary><span data-ttu-id="467a9-119">이 지역 변수의 이름을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="467a9-119">Sets the name of this local variable.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467a9-120"><xref:System.Reflection.Emit.LocalBuilder.SetLocalSymInfo%2A> 메서드는 동적 형식에 정의 된 메서드를 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="467a9-120">The <xref:System.Reflection.Emit.LocalBuilder.SetLocalSymInfo%2A> method is supported for methods defined in dynamic types.</span></span> <span data-ttu-id="467a9-121">동적 메서드를 사용 하 여 정의에 지원 되지 않습니다는 <xref:System.Reflection.Emit.DynamicMethod> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="467a9-121">It is not supported for dynamic methods defined using the <xref:System.Reflection.Emit.DynamicMethod> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="467a9-122">다음 코드 예제에서는 사용 된 <xref:System.Reflection.Emit.LocalBuilder.SetLocalSymInfo%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="467a9-122">The following code sample illustrates the use of the <xref:System.Reflection.Emit.LocalBuilder.SetLocalSymInfo%2A> method.</span></span> <span data-ttu-id="467a9-123">이 코드는에 대 한 보다 큰 예제의 일부는 <xref:System.Reflection.Emit.LocalBuilder> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="467a9-123">This code is part of a larger example for the <xref:System.Reflection.Emit.LocalBuilder> class.</span></span>  
  
 [!code-cpp[LocalBuilder_Sample_SetLocalSymInfo#2](~/samples/snippets/cpp/VS_Snippets_CLR/LocalBuilder_Sample_SetLocalSymInfo/CPP/localbuilder_sample_4.cpp#2)]
 [!code-csharp[LocalBuilder_Sample_SetLocalSymInfo#2](~/samples/snippets/csharp/VS_Snippets_CLR/LocalBuilder_Sample_SetLocalSymInfo/CS/localbuilder_sample_4.cs#2)]
 [!code-vb[LocalBuilder_Sample_SetLocalSymInfo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/LocalBuilder_Sample_SetLocalSymInfo/VB/localbuilder_sample_4.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="467a9-124">포함하는 형식을 <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />을 사용하여 만든 경우</span><span class="sxs-lookup"><span data-stu-id="467a9-124">The containing type has been created with <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span></span>  
  
 <span data-ttu-id="467a9-125">또는</span><span class="sxs-lookup"><span data-stu-id="467a9-125">-or-</span></span>  
  
 <span data-ttu-id="467a9-126">포함하는 모듈에 정의된 기호 작성기가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="467a9-126">There is no symbolic writer defined for the containing module.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="467a9-127">이 지역 변수가 동적 형식의 메서드가 아니라 동적 메서드에 정의된 경우</span><span class="sxs-lookup"><span data-stu-id="467a9-127">This local is defined in a dynamic method, rather than in a method of a dynamic type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetLocalSymInfo">
      <MemberSignature Language="C#" Value="public void SetLocalSymInfo (string name, int startOffset, int endOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetLocalSymInfo(string name, int32 startOffset, int32 endOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.LocalBuilder.SetLocalSymInfo(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetLocalSymInfo (name As String, startOffset As Integer, endOffset As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetLocalSymInfo(System::String ^ name, int startOffset, int endOffset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="startOffset" Type="System.Int32" />
        <Parameter Name="endOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="467a9-128">지역 변수의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="467a9-128">The name of the local variable.</span></span></param>
        <param name="startOffset"><span data-ttu-id="467a9-129">지역 변수 어휘 범위의 시작 오프셋입니다.</span><span class="sxs-lookup"><span data-stu-id="467a9-129">The beginning offset of the lexical scope of the local variable.</span></span></param>
        <param name="endOffset"><span data-ttu-id="467a9-130">지역 변수 어휘 범위의 끝 오프셋입니다.</span><span class="sxs-lookup"><span data-stu-id="467a9-130">The ending offset of the lexical scope of the local variable.</span></span></param>
        <summary><span data-ttu-id="467a9-131">이 지역 변수의 이름 및 어휘 범위를 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="467a9-131">Sets the name and lexical scope of this local variable.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467a9-132"><xref:System.Reflection.Emit.LocalBuilder.SetLocalSymInfo%2A> 메서드는 동적 형식에 정의 된 메서드를 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="467a9-132">The <xref:System.Reflection.Emit.LocalBuilder.SetLocalSymInfo%2A> method is supported for methods defined in dynamic types.</span></span> <span data-ttu-id="467a9-133">동적 메서드를 사용 하 여 정의에 지원 되지 않습니다는 <xref:System.Reflection.Emit.DynamicMethod> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="467a9-133">It is not supported for dynamic methods defined using the <xref:System.Reflection.Emit.DynamicMethod> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="467a9-134">다음 코드 예제에서는 사용 된 <xref:System.Reflection.Emit.LocalBuilder.SetLocalSymInfo%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="467a9-134">The following code sample illustrates the use of the <xref:System.Reflection.Emit.LocalBuilder.SetLocalSymInfo%2A> method.</span></span> <span data-ttu-id="467a9-135">이 코드는에 대 한 보다 큰 예제의 일부는 <xref:System.Reflection.Emit.LocalBuilder> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="467a9-135">This code is part of a larger example for the <xref:System.Reflection.Emit.LocalBuilder> class.</span></span>  
  
 [!code-cpp[LocalBuilder_Sample_SetLocalSymInfo#2](~/samples/snippets/cpp/VS_Snippets_CLR/LocalBuilder_Sample_SetLocalSymInfo/CPP/localbuilder_sample_4.cpp#2)]
 [!code-csharp[LocalBuilder_Sample_SetLocalSymInfo#2](~/samples/snippets/csharp/VS_Snippets_CLR/LocalBuilder_Sample_SetLocalSymInfo/CS/localbuilder_sample_4.cs#2)]
 [!code-vb[LocalBuilder_Sample_SetLocalSymInfo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/LocalBuilder_Sample_SetLocalSymInfo/VB/localbuilder_sample_4.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="467a9-136">포함하는 형식을 <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />을 사용하여 만든 경우</span><span class="sxs-lookup"><span data-stu-id="467a9-136">The containing type has been created with <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span></span>  
  
 <span data-ttu-id="467a9-137">또는</span><span class="sxs-lookup"><span data-stu-id="467a9-137">-or-</span></span>  
  
 <span data-ttu-id="467a9-138">포함하는 모듈에 정의된 기호 작성기가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="467a9-138">There is no symbolic writer defined for the containing module.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="467a9-139">이 지역 변수가 동적 형식의 메서드가 아니라 동적 메서드에 정의된 경우</span><span class="sxs-lookup"><span data-stu-id="467a9-139">This local is defined in a dynamic method, rather than in a method of a dynamic type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._LocalBuilder.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _LocalBuilder.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._LocalBuilder.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.LocalBuilder.System#Runtime#InteropServices#_LocalBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _LocalBuilder.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._LocalBuilder.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_LocalBuilder::GetIDsOfNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._LocalBuilder.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid"><span data-ttu-id="467a9-140">나중에 사용하기 위해 예약되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="467a9-140">Reserved for future use.</span></span> <span data-ttu-id="467a9-141">IID_NULL이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="467a9-141">Must be IID_NULL.</span></span></param>
        <param name="rgszNames"><span data-ttu-id="467a9-142">매핑할 전달된 이름의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="467a9-142">Passed-in array of names to be mapped.</span></span></param>
        <param name="cNames"><span data-ttu-id="467a9-143">매핑할 이름의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="467a9-143">Count of the names to be mapped.</span></span></param>
        <param name="lcid"><span data-ttu-id="467a9-144">이름을 해석할 로캘 컨텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="467a9-144">The locale context in which to interpret the names.</span></span></param>
        <param name="rgDispId"><span data-ttu-id="467a9-145">이름에 해당하는 ID를 받는 호출자가 할당한 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="467a9-145">Caller-allocated array which receives the IDs corresponding to the names.</span></span></param>
        <summary><span data-ttu-id="467a9-146">이름 집합을 해당하는 디스패치 식별자 집합에 매핑합니다.</span><span class="sxs-lookup"><span data-stu-id="467a9-146">Maps a set of names to a corresponding set of dispatch identifiers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467a9-147">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="467a9-147">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="467a9-148">에 대 한 자세한 내용은 `IDispatch::GetIDsOfNames`, MSDN Library를 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="467a9-148">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="467a9-149">COM <c>IDispatch</c> 인터페이스를 사용하는 런타임에 바인딩된 액세스는 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="467a9-149">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._LocalBuilder.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _LocalBuilder.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._LocalBuilder.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.LocalBuilder.System#Runtime#InteropServices#_LocalBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _LocalBuilder.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._LocalBuilder.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_LocalBuilder::GetTypeInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._LocalBuilder.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo"><span data-ttu-id="467a9-150">반환할 형식 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="467a9-150">The type information to return.</span></span></param>
        <param name="lcid"><span data-ttu-id="467a9-151">형식 정보의 로캘 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="467a9-151">The locale identifier for the type information.</span></span></param>
        <param name="ppTInfo"><span data-ttu-id="467a9-152">요청된 형식 정보 개체에 대한 포인터를 받습니다.</span><span class="sxs-lookup"><span data-stu-id="467a9-152">Receives a pointer to the requested type information object.</span></span></param>
        <summary><span data-ttu-id="467a9-153">인터페이스의 형식 정보를 가져오는 데 사용할 수 있는 개체의 형식 정보를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="467a9-153">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467a9-154">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="467a9-154">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="467a9-155">에 대 한 자세한 내용은 `IDispatch::GetTypeInfo`, MSDN Library를 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="467a9-155">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="467a9-156">COM <c>IDispatch</c> 인터페이스를 사용하는 런타임에 바인딩된 액세스는 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="467a9-156">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._LocalBuilder.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _LocalBuilder.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._LocalBuilder.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.LocalBuilder.System#Runtime#InteropServices#_LocalBuilder#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _LocalBuilder.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._LocalBuilder.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_LocalBuilder::GetTypeInfoCount;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._LocalBuilder.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo"><span data-ttu-id="467a9-157">개체에서 제공하는 형식 정보 인터페이스의 수를 받는 위치를 가리킵니다.</span><span class="sxs-lookup"><span data-stu-id="467a9-157">Points to a location that receives the number of type information interfaces provided by the object.</span></span></param>
        <summary><span data-ttu-id="467a9-158">개체에서 제공하는 형식 정보 인터페이스의 수를 검색합니다(0 또는 1).</span><span class="sxs-lookup"><span data-stu-id="467a9-158">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467a9-159">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="467a9-159">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="467a9-160">에 대 한 자세한 내용은 `IDispatch::GetTypeInfoCount`, MSDN Library를 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="467a9-160">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="467a9-161">COM <c>IDispatch</c> 인터페이스를 사용하는 런타임에 바인딩된 액세스는 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="467a9-161">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._LocalBuilder.Invoke">
      <MemberSignature Language="C#" Value="void _LocalBuilder.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._LocalBuilder.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.LocalBuilder.System#Runtime#InteropServices#_LocalBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _LocalBuilder.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._LocalBuilder.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_LocalBuilder::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._LocalBuilder.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember"><span data-ttu-id="467a9-162">멤버를 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="467a9-162">Identifies the member.</span></span></param>
        <param name="riid"><span data-ttu-id="467a9-163">나중에 사용하기 위해 예약되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="467a9-163">Reserved for future use.</span></span> <span data-ttu-id="467a9-164">IID_NULL이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="467a9-164">Must be IID_NULL.</span></span></param>
        <param name="lcid"><span data-ttu-id="467a9-165">인수를 해석할 로캘 컨텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="467a9-165">The locale context in which to interpret arguments.</span></span></param>
        <param name="wFlags"><span data-ttu-id="467a9-166">호출의 컨텍스트를 설명하는 플래그입니다.</span><span class="sxs-lookup"><span data-stu-id="467a9-166">Flags describing the context of the call.</span></span></param>
        <param name="pDispParams"><span data-ttu-id="467a9-167">인수의 배열, 명명된 인수에 대한 인수 DISPID의 배열 및 배열에 있는 요소의 개수가 포함된 구조체에 대한 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="467a9-167">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span></span></param>
        <param name="pVarResult"><span data-ttu-id="467a9-168">결과를 저장할 위치에 대한 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="467a9-168">Pointer to the location where the result is to be stored.</span></span></param>
        <param name="pExcepInfo"><span data-ttu-id="467a9-169">예외 정보가 포함된 구조체에 대한 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="467a9-169">Pointer to a structure that contains exception information.</span></span></param>
        <param name="puArgErr"><span data-ttu-id="467a9-170">오류가 있는 첫 번째 인수의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="467a9-170">The index of the first argument that has an error.</span></span></param>
        <summary><span data-ttu-id="467a9-171">개체에서 노출하는 메서드와 속성에 대한 액세스를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="467a9-171">Provides access to properties and methods exposed by an object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="467a9-172">이 메서드는 비관리 코드에서 액세스를 위한 관리 되는 클래스는 하며 관리 코드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="467a9-172">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="467a9-173">에 대 한 자세한 내용은 `IDispatch::Invoke`, MSDN Library를 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="467a9-173">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="467a9-174">COM <c>IDispatch</c> 인터페이스를 사용하는 런타임에 바인딩된 액세스는 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="467a9-174">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>