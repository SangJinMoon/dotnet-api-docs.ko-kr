<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ExceptionHandler.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac531be605a3b3574a4ee5c98e1a592436afc3340c8.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">31be605a3b3574a4ee5c98e1a592436afc3340c8</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Reflection.Emit.ExceptionHandler">
          <source>Represents an exception handler in a byte array of IL to be passed to a method such as <ph id="ph1">&lt;see cref="M:System.Reflection.Emit.MethodBuilder.SetMethodBody(System.Byte[],System.Int32,System.Byte[],System.Collections.Generic.IEnumerable{System.Reflection.Emit.ExceptionHandler},System.Collections.Generic.IEnumerable{System.Int32})" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Reflection.Emit.MethodBuilder.SetMethodBody(System.Byte[],System.Int32,System.Byte[],System.Collections.Generic.IEnumerable{System.Reflection.Emit.ExceptionHandler},System.Collections.Generic.IEnumerable{System.Int32})" /&gt;</ph>과 같은 메서드에 전달될 예외 처리기를 IL의 바이트 배열로 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="M:System.Reflection.Emit.ExceptionHandler.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Reflection.ExceptionHandlingClauseOptions,System.Int32)">
          <source>The byte offset of the first instruction protected by this exception handler.</source>
          <target state="translated">이 예외 처리기에서 보호되는 첫 번째 명령의 바이트 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Reflection.Emit.ExceptionHandler.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Reflection.ExceptionHandlingClauseOptions,System.Int32)">
          <source>The number of bytes protected by this exception handler.</source>
          <target state="translated">이 예외 처리기에서 보호되는 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Reflection.Emit.ExceptionHandler.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Reflection.ExceptionHandlingClauseOptions,System.Int32)">
          <source>The byte offset of the beginning of the filter code.</source>
          <target state="translated">필터 코드의 시작 부분의 바이트 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Reflection.Emit.ExceptionHandler.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Reflection.ExceptionHandlingClauseOptions,System.Int32)">
          <source>The filter code ends at the first instruction of the handler block.</source>
          <target state="translated">필터 코드는 처리기 블록의 첫 번째 명령에서 종료됩니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Reflection.Emit.ExceptionHandler.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Reflection.ExceptionHandlingClauseOptions,System.Int32)">
          <source>For non-filter exception handlers, specify 0 (zero) for this parameter.</source>
          <target state="translated">비 필터 예외 처리기의 경우 이 매개 변수에 0을 지정합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Reflection.Emit.ExceptionHandler.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Reflection.ExceptionHandlingClauseOptions,System.Int32)">
          <source>The byte offset of the first instruction of this exception handler.</source>
          <target state="translated">이 예외 처리기의 첫 번째 명령의 바이트 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Reflection.Emit.ExceptionHandler.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Reflection.ExceptionHandlingClauseOptions,System.Int32)">
          <source>The number of bytes in this exception handler.</source>
          <target state="translated">이 예외 처리기의 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Reflection.Emit.ExceptionHandler.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Reflection.ExceptionHandlingClauseOptions,System.Int32)">
          <source>One of the enumeration values that specifies the kind of exception handler.</source>
          <target state="translated">예외 처리기의 종류를 지정하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Reflection.Emit.ExceptionHandler.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Reflection.ExceptionHandlingClauseOptions,System.Int32)">
          <source>The token of the exception type handled by this exception handler.</source>
          <target state="translated">이 예외 처리기에서 처리되는 예외 형식의 토큰입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Reflection.Emit.ExceptionHandler.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Reflection.ExceptionHandlingClauseOptions,System.Int32)">
          <source>If not applicable, specify 0 (zero).</source>
          <target state="translated">해당하지 않는 경우 0(영)을 지정합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Reflection.Emit.ExceptionHandler.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Reflection.ExceptionHandlingClauseOptions,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.Emit.ExceptionHandler" /&gt;</ph> class with the specified parameters.</source>
          <target state="translated">지정된 매개 변수를 사용하여 <ph id="ph1">&lt;see cref="T:System.Reflection.Emit.ExceptionHandler" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Reflection.Emit.ExceptionHandler.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Reflection.ExceptionHandlingClauseOptions,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="tryOffset" /&gt;</ph>, <ph id="ph2">&lt;paramref name="filterOffset" /&gt;</ph>, <ph id="ph3">&lt;paramref name="handlerOffset" /&gt;</ph>, <ph id="ph4">&lt;paramref name="tryLength" /&gt;</ph>, or <ph id="ph5">&lt;paramref name="handlerLength" /&gt;</ph> are negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="tryOffset" /&gt;</ph>, <ph id="ph2">&lt;paramref name="filterOffset" /&gt;</ph>, <ph id="ph3">&lt;paramref name="handlerOffset" /&gt;</ph>, <ph id="ph4">&lt;paramref name="tryLength" /&gt;</ph> 또는 <ph id="ph5">&lt;paramref name="handlerLength" /&gt;</ph>가 음수인 경우</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="T:System.Reflection.Emit.ExceptionHandler">
          <source>Indicates whether this instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.Emit.ExceptionHandler" /&gt;</ph> object is equal to a specified object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.Emit.ExceptionHandler" /&gt;</ph> 개체의 이 인스턴스가 지정된 개체와 같은지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Reflection.Emit.ExceptionHandler.Equals(System.Object)">
          <source>The object to compare this instance to.</source>
          <target state="translated">이 인스턴스와 비교할 개체입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Reflection.Emit.ExceptionHandler.Equals(System.Object)">
          <source>Indicates whether this instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.Emit.ExceptionHandler" /&gt;</ph> object is equal to a specified object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.Emit.ExceptionHandler" /&gt;</ph> 개체의 이 인스턴스가 지정된 개체와 같은지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Reflection.Emit.ExceptionHandler.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> and this instance are equal; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="obj" /&gt;</ph>와 이 인스턴스가 동일하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Reflection.Emit.ExceptionHandler.Equals(System.Reflection.Emit.ExceptionHandler)">
          <source>The exception handler object to compare this instance to.</source>
          <target state="translated">이 인스턴스와 비교할 예외 처리기 개체입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Reflection.Emit.ExceptionHandler.Equals(System.Reflection.Emit.ExceptionHandler)">
          <source>Indicates whether this instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.Emit.ExceptionHandler" /&gt;</ph> object is equal to another <ph id="ph2">&lt;see cref="T:System.Reflection.Emit.ExceptionHandler" /&gt;</ph> object.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Reflection.Emit.ExceptionHandler" /&gt;</ph> 개체의 인스턴스가 다른 <ph id="ph2">&lt;see cref="T:System.Reflection.Emit.ExceptionHandler" /&gt;</ph> 개체와 같은지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Reflection.Emit.ExceptionHandler.Equals(System.Reflection.Emit.ExceptionHandler)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="other" /&gt;</ph> and this instance are equal; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="other" /&gt;</ph>와 이 인스턴스가 동일하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.Reflection.Emit.ExceptionHandler.ExceptionTypeToken">
          <source>Gets the token of the exception type handled by this handler.</source>
          <target state="translated">이 처리기에서 처리되는 예외 형식의 토큰을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.Emit.ExceptionHandler.ExceptionTypeToken">
          <source>The token of the exception type handled by this handler, or 0 if none exists.</source>
          <target state="translated">이 처리기에서 처리되는 예외 형식의 토큰이거나, 없을 경우 0입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="P:System.Reflection.Emit.ExceptionHandler.FilterOffset">
          <source>Gets the byte offset at which the filter code for the exception handler begins.</source>
          <target state="translated">예외 처리기의 필터 코드가 시작되는 바이트 오프셋을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.Emit.ExceptionHandler.FilterOffset">
          <source>The byte offset at which the filter code begins, or 0 if no filter  is present.</source>
          <target state="translated">필터 코드가 시작되는 바이트 오프셋 또는 필터가 없는 경우 0입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Reflection.Emit.ExceptionHandler.GetHashCode">
          <source>Serves as the default hash function.</source>
          <target state="translated">기본 해시 함수로 작동합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Reflection.Emit.ExceptionHandler.GetHashCode">
          <source>The hash code for the current object.</source>
          <target state="translated">현재 개체의 해시 코드입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.Reflection.Emit.ExceptionHandler.HandlerLength">
          <source>Gets the length, in bytes, of the exception handler.</source>
          <target state="translated">예외 처리기의 길이(바이트)를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.Emit.ExceptionHandler.HandlerLength">
          <source>The length, in bytes, of the exception handler.</source>
          <target state="translated">예외 처리기의 길이(바이트)입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="P:System.Reflection.Emit.ExceptionHandler.HandlerOffset">
          <source>Gets the byte offset of the first instruction of the exception handler.</source>
          <target state="translated">예외 처리기의 첫 번째 명령의 바이트 오프셋을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.Emit.ExceptionHandler.HandlerOffset">
          <source>The byte offset of the first instruction of the exception handler.</source>
          <target state="translated">예외 처리기의 첫 번째 명령의 바이트 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="P:System.Reflection.Emit.ExceptionHandler.Kind">
          <source>Gets a value that represents the kind of exception handler this object represents.</source>
          <target state="translated">이 개체가 나타내는 예외 처리기의 종류를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.Emit.ExceptionHandler.Kind">
          <source>One of the enumeration values that specifies the kind of exception handler.</source>
          <target state="translated">예외 처리기의 종류를 지정하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Reflection.Emit.ExceptionHandler.op_Equality(System.Reflection.Emit.ExceptionHandler,System.Reflection.Emit.ExceptionHandler)">
          <source>The first object to compare.</source>
          <target state="translated">비교할 첫 번째 개체입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Reflection.Emit.ExceptionHandler.op_Equality(System.Reflection.Emit.ExceptionHandler,System.Reflection.Emit.ExceptionHandler)">
          <source>The second object to compare.</source>
          <target state="translated">비교할 두 번째 개체입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Reflection.Emit.ExceptionHandler.op_Equality(System.Reflection.Emit.ExceptionHandler,System.Reflection.Emit.ExceptionHandler)">
          <source>Determines whether two specified instances of <ph id="ph1">&lt;see cref="T:System.Reflection.Emit.ExceptionHandler" /&gt;</ph> are equal.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.Emit.ExceptionHandler" /&gt;</ph>의 지정된 두 인스턴스가 같은지를 확인합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Reflection.Emit.ExceptionHandler.op_Equality(System.Reflection.Emit.ExceptionHandler,System.Reflection.Emit.ExceptionHandler)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph> are equal; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="left" /&gt;</ph>과 <ph id="ph3">&lt;paramref name="right" /&gt;</ph>가 같으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Reflection.Emit.ExceptionHandler.op_Inequality(System.Reflection.Emit.ExceptionHandler,System.Reflection.Emit.ExceptionHandler)">
          <source>The first object to compare.</source>
          <target state="translated">비교할 첫 번째 개체입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Reflection.Emit.ExceptionHandler.op_Inequality(System.Reflection.Emit.ExceptionHandler,System.Reflection.Emit.ExceptionHandler)">
          <source>The second object to compare.</source>
          <target state="translated">비교할 두 번째 개체입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Reflection.Emit.ExceptionHandler.op_Inequality(System.Reflection.Emit.ExceptionHandler,System.Reflection.Emit.ExceptionHandler)">
          <source>Determines whether two specified instances of <ph id="ph1">&lt;see cref="T:System.Reflection.Emit.ExceptionHandler" /&gt;</ph> are not equal.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.Emit.ExceptionHandler" /&gt;</ph>의 지정된 두 인스턴스가 다른지를 확인합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Reflection.Emit.ExceptionHandler.op_Inequality(System.Reflection.Emit.ExceptionHandler,System.Reflection.Emit.ExceptionHandler)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph> are not equal; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="left" /&gt;</ph>과 <ph id="ph3">&lt;paramref name="right" /&gt;</ph>가 다르면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.Reflection.Emit.ExceptionHandler.TryLength">
          <source>Gets the length, in bytes, of the code protected by this exception handler.</source>
          <target state="translated">이 예외 처리기에서 보호하는 코드의 길이(바이트)를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.Emit.ExceptionHandler.TryLength">
          <source>The length, in bytes, of the code protected by this exception handler.</source>
          <target state="translated">이 예외 처리기에서 보호하는 코드의 길이(바이트)입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.Reflection.Emit.ExceptionHandler.TryOffset">
          <source>Gets the byte offset at which the code that is protected by this exception handler begins.</source>
          <target state="translated">이 예외 처리기에서 보호되는 코드가 시작되는 바이트 오프셋을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.Emit.ExceptionHandler.TryOffset">
          <source>The byte offset at which the code that is protected by this exception handler begins.</source>
          <target state="translated">이 예외 처리기에서 보호되는 코드가 시작되는 바이트 오프셋입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>