<Type Name="UnmanagedMarshal" FullName="System.Reflection.Emit.UnmanagedMarshal">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="942b20b5aa490a48ca96c80f7e1eb26f9fbee22a" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39778513" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class UnmanagedMarshal" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit UnmanagedMarshal extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Emit.UnmanagedMarshal" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class UnmanagedMarshal" />
  <TypeSignature Language="C++ CLI" Value="public ref class UnmanagedMarshal sealed" />
  <TypeSignature Language="F#" Value="type UnmanagedMarshal = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinmac-3.0">
      <AttributeName>System.Obsolete("An alternate API is available: Emit the MarshalAs custom attribute instead.")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Obsolete("An alternate API is available: Emit the MarshalAs custom attribute instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="47853-101">관리 코드에서 비관리 코드로 필드를 마샬링하는 방법을 설명하는 클래스를 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="47853-101">Represents the class that describes how to marshal a field from managed to unmanaged code.</span>
      </span>
      <span data-ttu-id="47853-102">이 클래스는 상속될 수 없습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="47853-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47853-103">코드 예제에서는이 사용 되지 않는 형식에 대 한 해결 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="47853-103">The code example shows the workaround for this obsolete type.</span></span>  
  
 <span data-ttu-id="47853-104">마샬링 되므로 프로세스 압축 하 고 패키지 매개 변수를 원격 프로시저 호출에서 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47853-104">Marshaling is the process of packaging and unpackaging parameters so remote procedure calls can occur.</span></span> <span data-ttu-id="47853-105">마샬링하는 동안 관리 되는 형식의 형식을 관리 되지 않는 형식에 해당 형식과 다른 경우 필드 형식 변환이 거쳐야 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47853-105">During marshaling, a field might undergo a format conversion when the format of the managed type is different from the format of the corresponding unmanaged type.</span></span> <span data-ttu-id="47853-106">마샬링할 하려는 하는 예를 들어를 `String` 는 관리 되지 않는 BSTR 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="47853-106">For example, you might want to marshal a `String` type as an unmanaged BSTR.</span></span> <span data-ttu-id="47853-107">일부 형식 변환은 런타임에 의해 자동으로 처리 됩니다.</span><span class="sxs-lookup"><span data-stu-id="47853-107">Some format conversions are handled automatically by the runtime.</span></span> <span data-ttu-id="47853-108">기본 동작을 재정의 하려면 사용 해야는 `UnmanagedMarshal` 형식 변환을 정의 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="47853-108">To override the default behavior, you must use the `UnmanagedMarshal` class to define the format conversion.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47853-109">다음 코드 예제에서는 사용 되지 않는 항목에 대 한 대체 코드를 보여 줍니다. <xref:System.Reflection.Emit.UnmanagedMarshal> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="47853-109">The following code example shows replacement code for the obsolete <xref:System.Reflection.Emit.UnmanagedMarshal> type.</span></span> <span data-ttu-id="47853-110">이 예제에서는 명명 된 단일 모듈 어셈블리를 내보냅니다 `EmitMarshalAs.dll`, 명명 된 형식을 포함 하 `Sample`합니다.</span><span class="sxs-lookup"><span data-stu-id="47853-110">The example emits a single-module assembly named `EmitMarshalAs.dll`, containing a type named `Sample`.</span></span> <span data-ttu-id="47853-111">라는 메서드를 포함 하는 형식을 `Test`, 형식의 매개 변수 하나를 사용 하 여 <xref:System.String>입니다.</span><span class="sxs-lookup"><span data-stu-id="47853-111">The type has a method named `Test`, with one parameter of type <xref:System.String>.</span></span> <span data-ttu-id="47853-112">적용 하는 코드 예제는 <xref:System.Runtime.InteropServices.MarshalAsAttribute> 사용 하 여 <xref:System.Runtime.InteropServices.UnmanagedType.BStr?displayProperty=nameWithType> 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="47853-112">The code example applies the <xref:System.Runtime.InteropServices.MarshalAsAttribute> with <xref:System.Runtime.InteropServices.UnmanagedType.BStr?displayProperty=nameWithType> to the parameter.</span></span>  
  
 <span data-ttu-id="47853-113">사용할 수는 [Ildasm.exe (IL 디스어셈블러)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) 내보낸된 어셈블리를 검사 하 고 매개 변수 표시 되어 있음을 확인할 `marshal(bstr)`합니다.</span><span class="sxs-lookup"><span data-stu-id="47853-113">You can use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the emitted assembly and observe that the parameter is marked `marshal(bstr)`.</span></span>  
  
 [!code-cpp[UnmanagedMarshalObsolete#1](~/samples/snippets/cpp/VS_Snippets_CLR/UnmanagedMarshalObsolete/cpp/source.cpp#1)]
 [!code-csharp[UnmanagedMarshalObsolete#1](~/samples/snippets/csharp/VS_Snippets_CLR/UnmanagedMarshalObsolete/cs/source.cs#1)]
 [!code-vb[UnmanagedMarshalObsolete#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/UnmanagedMarshalObsolete/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Type" />
    <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
    <altmember cref="T:System.Guid" />
  </Docs>
  <Members>
    <Member MemberName="BaseType">
      <MemberSignature Language="C#" Value="public System.Runtime.InteropServices.UnmanagedType BaseType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.InteropServices.UnmanagedType BaseType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.UnmanagedMarshal.BaseType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseType As UnmanagedType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::InteropServices::UnmanagedType BaseType { System::Runtime::InteropServices::UnmanagedType get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseType : System.Runtime.InteropServices.UnmanagedType" Usage="System.Reflection.Emit.UnmanagedMarshal.BaseType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.UnmanagedType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47853-114">관리되지 않는 기본 형식을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47853-114">Gets an unmanaged base type.</span>
          </span>
          <span data-ttu-id="47853-115">이 속성은 읽기 전용입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47853-115">This property is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="47853-116">
            <see langword="UnmanagedType" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47853-116">An <see langword="UnmanagedType" /> object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="47853-117">관리되지 않는 형식이 <see langword="LPArray" /> 또는 <see langword="SafeArray" />가 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="47853-117">The unmanaged type is not an <see langword="LPArray" /> or a <see langword="SafeArray" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="DefineByValArray">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.UnmanagedMarshal DefineByValArray (int elemCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.UnmanagedMarshal DefineByValArray(int32 elemCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.UnmanagedMarshal.DefineByValArray(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DefineByValArray (elemCount As Integer) As UnmanagedMarshal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::UnmanagedMarshal ^ DefineByValArray(int elemCount);" />
      <MemberSignature Language="F#" Value="static member DefineByValArray : int -&gt; System.Reflection.Emit.UnmanagedMarshal" Usage="System.Reflection.Emit.UnmanagedMarshal.DefineByValArray elemCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.UnmanagedMarshal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elemCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="elemCount">
          <span data-ttu-id="47853-118">고정 길이 배열의 요소 개수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47853-118">The number of elements in the fixed-length array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47853-119">고정 길이 배열(ByValArray)을 지정하여 비관리 코드로 마샬링합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47853-119">Specifies a fixed-length array (ByValArray) to marshal to unmanaged code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47853-120">
            <see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47853-120">An <see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47853-121">`DefineByValArray` 메서드는 간단한 네이티브 마샬링 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="47853-121">The `DefineByValArray` method is not a simple native marshal.</span></span>  
  
 <span data-ttu-id="47853-122">이러한 정적 생성자를 사용 하 여 관리 되지 않는 마샬링 생성자만 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47853-122">Only unmanaged marshal constructs can be made using these static constructors.</span></span>  
  
 <span data-ttu-id="47853-123">정수 매개 변수 마샬링 보다 더 복잡 한 프로세스 이며 배열 마샬링</span><span class="sxs-lookup"><span data-stu-id="47853-123">Marshaling an array is a more complex process than marshaling an integer parameter.</span></span> <span data-ttu-id="47853-124">배열 멤버는 다른 쪽 배열을 정확 하 게 재구성 수 있도록 특정 순서에 따라 복사 됩니다.</span><span class="sxs-lookup"><span data-stu-id="47853-124">Array members are copied in a specific order so that the other side can reconstruct the array exactly.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="47853-125">인수가 단순 네이티브 형식이 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="47853-125">The argument is not a simple native type.</span>
          </span>
        </exception>
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="DefineByValTStr">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.UnmanagedMarshal DefineByValTStr (int elemCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.UnmanagedMarshal DefineByValTStr(int32 elemCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.UnmanagedMarshal.DefineByValTStr(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DefineByValTStr (elemCount As Integer) As UnmanagedMarshal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::UnmanagedMarshal ^ DefineByValTStr(int elemCount);" />
      <MemberSignature Language="F#" Value="static member DefineByValTStr : int -&gt; System.Reflection.Emit.UnmanagedMarshal" Usage="System.Reflection.Emit.UnmanagedMarshal.DefineByValTStr elemCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.UnmanagedMarshal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elemCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="elemCount">
          <span data-ttu-id="47853-126">고정 배열 버퍼의 요소 개수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47853-126">The number of elements in the fixed array buffer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47853-127">문자열을 고정 배열 버퍼(ByValTStr)로 지정하여 비관리 코드로 마샬링합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47853-127">Specifies a string in a fixed array buffer (ByValTStr) to marshal to unmanaged code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47853-128">
            <see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47853-128">An <see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47853-129">`DefineByValStr` 메서드는 간단한 네이티브 마샬링 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="47853-129">The `DefineByValStr` method is not a simple native marshal.</span></span>  
  
 <span data-ttu-id="47853-130">이러한 정적 생성자를 사용 하 여 관리 되지 않는 마샬링 생성자만 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47853-130">Only unmanaged marshal constructs can be made using these static constructors.</span></span>  
  
 <span data-ttu-id="47853-131">정수 매개 변수 마샬링 보다 더 복잡 한 프로세스 이며 배열 마샬링</span><span class="sxs-lookup"><span data-stu-id="47853-131">Marshaling an array is a more complex process than marshaling an integer parameter.</span></span> <span data-ttu-id="47853-132">배열 멤버는 다른 쪽 배열을 정확 하 게 재구성 수 있도록 특정 순서에 따라 복사 됩니다.</span><span class="sxs-lookup"><span data-stu-id="47853-132">Array members are copied in a specific order so that the other side can reconstruct the array exactly.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="47853-133">인수가 단순 네이티브 형식이 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="47853-133">The argument is not a simple native type.</span>
          </span>
        </exception>
        <altmember cref="T:System.Int32" />
        <altmember cref="T:System.Array" />
        <altmember cref="T:System.String" />
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="DefineLPArray">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.UnmanagedMarshal DefineLPArray (System.Runtime.InteropServices.UnmanagedType elemType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.UnmanagedMarshal DefineLPArray(valuetype System.Runtime.InteropServices.UnmanagedType elemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.UnmanagedMarshal.DefineLPArray(System.Runtime.InteropServices.UnmanagedType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DefineLPArray (elemType As UnmanagedType) As UnmanagedMarshal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::UnmanagedMarshal ^ DefineLPArray(System::Runtime::InteropServices::UnmanagedType elemType);" />
      <MemberSignature Language="F#" Value="static member DefineLPArray : System.Runtime.InteropServices.UnmanagedType -&gt; System.Reflection.Emit.UnmanagedMarshal" Usage="System.Reflection.Emit.UnmanagedMarshal.DefineLPArray elemType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.UnmanagedMarshal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elemType" Type="System.Runtime.InteropServices.UnmanagedType" />
      </Parameters>
      <Docs>
        <param name="elemType">
          <span data-ttu-id="47853-134">배열을 마샬링할 관리되지 않는 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47853-134">The unmanaged type to which to marshal the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47853-135">
            <see langword="LPArray" />를 지정하여 비관리 코드로 마샬링합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47853-135">Specifies an <see langword="LPArray" /> to marshal to unmanaged code.</span>
          </span>
          <span data-ttu-id="47853-136">
            <see langword="LPArray" />의 길이는 실제 마샬링될 배열의 크기에 따라 런타임에 결정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47853-136">The length of an <see langword="LPArray" /> is determined at runtime by the size of the actual marshaled array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47853-137">
            <see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47853-137">An <see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47853-138">`DefineLPArray` 메서드는 간단한 네이티브 마샬링 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="47853-138">The `DefineLPArray` method is not a simple native marshal.</span></span>  
  
 <span data-ttu-id="47853-139">이러한 정적 생성자를 사용 하 여 관리 되지 않는 마샬링 생성자만 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47853-139">Only unmanaged marshal constructs can be made using these static constructors.</span></span>  
  
 <span data-ttu-id="47853-140">정수 매개 변수 마샬링 보다 더 복잡 한 프로세스 이며 배열 마샬링</span><span class="sxs-lookup"><span data-stu-id="47853-140">Marshaling an array is a more complex process than marshaling an integer parameter.</span></span> <span data-ttu-id="47853-141">배열 멤버는 다른 쪽 배열을 정확 하 게 재구성 수 있도록 특정 순서에 따라 복사 됩니다.</span><span class="sxs-lookup"><span data-stu-id="47853-141">Array members are copied in a specific order so that the other side can reconstruct the array exactly.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="47853-142">인수가 단순 네이티브 형식이 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="47853-142">The argument is not a simple native type.</span>
          </span>
        </exception>
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="DefineSafeArray">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.UnmanagedMarshal DefineSafeArray (System.Runtime.InteropServices.UnmanagedType elemType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.UnmanagedMarshal DefineSafeArray(valuetype System.Runtime.InteropServices.UnmanagedType elemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.UnmanagedMarshal.DefineSafeArray(System.Runtime.InteropServices.UnmanagedType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DefineSafeArray (elemType As UnmanagedType) As UnmanagedMarshal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::UnmanagedMarshal ^ DefineSafeArray(System::Runtime::InteropServices::UnmanagedType elemType);" />
      <MemberSignature Language="F#" Value="static member DefineSafeArray : System.Runtime.InteropServices.UnmanagedType -&gt; System.Reflection.Emit.UnmanagedMarshal" Usage="System.Reflection.Emit.UnmanagedMarshal.DefineSafeArray elemType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.UnmanagedMarshal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elemType" Type="System.Runtime.InteropServices.UnmanagedType" />
      </Parameters>
      <Docs>
        <param name="elemType">
          <span data-ttu-id="47853-143">배열에 들어 있는 각 요소의 기본 형식 또는 <see langword="UnmanagedType" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47853-143">The base type or the <see langword="UnmanagedType" /> of each element of the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47853-144">
            <see langword="SafeArray" />를 지정하여 비관리 코드로 마샬링합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47853-144">Specifies a <see langword="SafeArray" /> to marshal to unmanaged code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47853-145">
            <see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47853-145">An <see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47853-146">`DefineSafeArray` 메서드는 간단한 네이티브 마샬링 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="47853-146">The `DefineSafeArray` method is not a simple native marshal.</span></span>  
  
 <span data-ttu-id="47853-147">이러한 정적 생성자를 사용 하 여 관리 되지 않는 마샬링 생성자만 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47853-147">Only unmanaged marshal constructs can be made using these static constructors.</span></span>  
  
 <span data-ttu-id="47853-148">정수 매개 변수 마샬링 보다 더 복잡 한 프로세스 이며 배열 마샬링</span><span class="sxs-lookup"><span data-stu-id="47853-148">Marshaling an array is a more complex process than marshaling an integer parameter.</span></span> <span data-ttu-id="47853-149">배열 멤버는 다른 쪽 배열을 정확 하 게 재구성 수 있도록 특정 순서에 따라 복사 됩니다.</span><span class="sxs-lookup"><span data-stu-id="47853-149">Array members are copied in a specific order so that the other side can reconstruct the array exactly.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="47853-150">인수가 단순 네이티브 형식이 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="47853-150">The argument is not a simple native type.</span>
          </span>
        </exception>
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="DefineUnmanagedMarshal">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.UnmanagedMarshal DefineUnmanagedMarshal (System.Runtime.InteropServices.UnmanagedType unmanagedType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.UnmanagedMarshal DefineUnmanagedMarshal(valuetype System.Runtime.InteropServices.UnmanagedType unmanagedType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.UnmanagedMarshal.DefineUnmanagedMarshal(System.Runtime.InteropServices.UnmanagedType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::UnmanagedMarshal ^ DefineUnmanagedMarshal(System::Runtime::InteropServices::UnmanagedType unmanagedType);" />
      <MemberSignature Language="F#" Value="static member DefineUnmanagedMarshal : System.Runtime.InteropServices.UnmanagedType -&gt; System.Reflection.Emit.UnmanagedMarshal" Usage="System.Reflection.Emit.UnmanagedMarshal.DefineUnmanagedMarshal unmanagedType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.UnmanagedMarshal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unmanagedType" Type="System.Runtime.InteropServices.UnmanagedType" />
      </Parameters>
      <Docs>
        <param name="unmanagedType">
          <span data-ttu-id="47853-151">형식이 마샬링될 관리되지 않는 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47853-151">The unmanaged type to which the type is to be marshaled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47853-152">비관리 코드로 마샬링될 지정된 형식을 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47853-152">Specifies a given type that is to be marshaled to unmanaged code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47853-153">
            <see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47853-153">An <see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47853-154"><xref:System.Runtime.InteropServices.UnmanagedType> 이 메서드에 전달 된 간단한 기본 형식 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="47853-154">The <xref:System.Runtime.InteropServices.UnmanagedType> passed to this method must be a simple native type.</span></span> <span data-ttu-id="47853-155">다음 값도 사용할 수 있습니다: <xref:System.Runtime.InteropServices.UnmanagedType.ByValTStr?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.UnmanagedType.SafeArray?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.UnmanagedType.ByValArray?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.UnmanagedType.LPArray?displayProperty=nameWithType>, 또는 <xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="47853-155">None of the following values may be used: <xref:System.Runtime.InteropServices.UnmanagedType.ByValTStr?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.UnmanagedType.SafeArray?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.UnmanagedType.ByValArray?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.UnmanagedType.LPArray?displayProperty=nameWithType>, or <xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="47853-156">이 메서드를 사용 하 여 관리 되지 않는 마샬링 생성자만 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47853-156">Only unmanaged marshal constructs can be made using this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="47853-157">인수가 단순 네이티브 형식이 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="47853-157">The argument is not a simple native type.</span>
          </span>
        </exception>
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="ElementCount">
      <MemberSignature Language="C#" Value="public int ElementCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ElementCount" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.UnmanagedMarshal.ElementCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElementCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ElementCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ElementCount : int" Usage="System.Reflection.Emit.UnmanagedMarshal.ElementCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47853-158">숫자 요소를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47853-158">Gets a number element.</span>
          </span>
          <span data-ttu-id="47853-159">이 속성은 읽기 전용입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47853-159">This property is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="47853-160">요소의 개수를 나타내는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47853-160">An integer indicating the element count.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47853-161">`ElementCount` 경우에을 `NativeTypeFixedArray`입니다.</span><span class="sxs-lookup"><span data-stu-id="47853-161">There is an `ElementCount` only if there is a `NativeTypeFixedArray`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="47853-162">인수가 관리되지 않는 요소의 개수가 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="47853-162">The argument is not an unmanaged element count.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetUnmanagedType">
      <MemberSignature Language="C#" Value="public System.Runtime.InteropServices.UnmanagedType GetUnmanagedType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.InteropServices.UnmanagedType GetUnmanagedType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.UnmanagedMarshal.GetUnmanagedType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GetUnmanagedType As UnmanagedType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::InteropServices::UnmanagedType GetUnmanagedType { System::Runtime::InteropServices::UnmanagedType get(); };" />
      <MemberSignature Language="F#" Value="member this.GetUnmanagedType : System.Runtime.InteropServices.UnmanagedType" Usage="System.Reflection.Emit.UnmanagedMarshal.GetUnmanagedType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.UnmanagedType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47853-163">관리되지 않는 형식을 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47853-163">Indicates an unmanaged type.</span>
          </span>
          <span data-ttu-id="47853-164">이 속성은 읽기 전용입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47853-164">This property is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="47853-165">
            <see cref="T:System.Runtime.InteropServices.UnmanagedType" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47853-165">An <see cref="T:System.Runtime.InteropServices.UnmanagedType" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47853-166">`GetUnmanagedType` 속성은 네이티브 형식에 대 한 접근자 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="47853-166">The `GetUnmanagedType` property is an accessor function for the native type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="IIDGuid">
      <MemberSignature Language="C#" Value="public Guid IIDGuid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid IIDGuid" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.UnmanagedMarshal.IIDGuid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IIDGuid As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid IIDGuid { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.IIDGuid : Guid" Usage="System.Reflection.Emit.UnmanagedMarshal.IIDGuid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47853-167">GUID를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47853-167">Gets a GUID.</span>
          </span>
          <span data-ttu-id="47853-168">이 속성은 읽기 전용입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47853-168">This property is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="47853-169">
            <see cref="T:System.Guid" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47853-169">A <see cref="T:System.Guid" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47853-170">이 속성은 항상 Guid.Empty를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="47853-170">This property always returns Guid.Empty.</span></span> <span data-ttu-id="47853-171">이 속성은 이후 릴리스에서 제거 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47853-171">This property might be removed in a future release.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="47853-172">인수가 사용자 지정 마샬러가 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="47853-172">The argument is not a custom marshaler.</span>
          </span>
        </exception>
        <altmember cref="T:System.Int32" />
        <altmember cref="T:System.Guid" />
      </Docs>
    </Member>
  </Members>
</Type>