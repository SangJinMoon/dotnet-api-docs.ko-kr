<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Atom10FeedFormatter.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">73cd4428-9abd-4836-b1ef-ba70fe2e0b728bd8ed78f02d68055ab24e713f340b7f445b1f18.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8bd8ed78f02d68055ab24e713f340b7f445b1f18</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Syndication.Atom10FeedFormatter">
          <source>A class that serializes a <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> instance to and from Atom 1.0 format.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> 인스턴스를 Atom 1.0 형식으로 또는 그 반대로 serialize하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.Atom10FeedFormatter">
          <source>Use this class to serialize instances of <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> and to create instances of <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> from XML documents that represent Atom1.0 feeds.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> 인스턴스를 serialize하고 Atom 1.0 피드를 나타내는 XML 문서로부터 <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> 인스턴스를 만들 때 이 클래스를 사용합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.Atom10FeedFormatter">
          <source>If you have derived a class from <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> and want to serialize it, use the <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.Atom10FeedFormatter%601&gt;</ph> formatter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph>로부터 파생시킨 클래스를 serialize하려는 경우 <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.Atom10FeedFormatter%601&gt;</ph> 포맷터를 사용합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.Atom10FeedFormatter">
          <source>The Atom 1.0 specification allows for fractional seconds to be specified in any of its date constructs.</source>
          <target state="translated">Atom 1.0 사양에 따라 날짜 구문에 소수로 표시된 초를 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.Atom10FeedFormatter">
          <source>When serializing and deserializing, the WCF implementation ignores the fractional seconds.</source>
          <target state="translated">직렬화 및 역직렬화 하는 경우 WCF 구현을 소수 자릿수 초를 무시 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.Atom10FeedFormatter">
          <source>The following code shows how to create a <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> and serialize it to Atom 1.0.</source>
          <target state="translated">다음 코드에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph>를 만들고 이를 Atom 1.0으로 serialize하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Syndication.Atom10FeedFormatter">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" /&gt;</ph> class.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" /&gt;</ph> 클래스의 새 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.Atom10FeedFormatter.#ctor">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" /&gt;</ph> class.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" /&gt;</ph> 클래스의 새 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.Atom10FeedFormatter.#ctor">
          <source>The following code shows how to create a <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.Atom10FeedFormatter&gt;</ph> and read in a syndication feed.</source>
          <target state="translated">다음 코드에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.Atom10FeedFormatter&gt;</ph>를 만들고 배포 피드를 읽는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.Atom10FeedFormatter.#ctor(System.ServiceModel.Syndication.SyndicationFeed)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> to serialize.</source>
          <target state="translated">serialize할 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.Atom10FeedFormatter.#ctor(System.ServiceModel.Syndication.SyndicationFeed)">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> instance.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" /&gt;</ph> 인스턴스를 사용하여 <ph id="ph2">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> 클래스의 새 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.Atom10FeedFormatter.#ctor(System.ServiceModel.Syndication.SyndicationFeed)">
          <source>The following code shows how to create a <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> and serialize it to Atom 1.0.</source>
          <target state="translated">다음 코드에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph>를 만들고 이를 Atom 1.0으로 serialize하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.Atom10FeedFormatter.#ctor(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> derived instance to be serialized.</source>
          <target state="translated">serialize할 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> 파생 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.Atom10FeedFormatter.#ctor(System.Type)">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" /&gt;</ph> class.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" /&gt;</ph> 클래스의 새 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.Atom10FeedFormatter.#ctor(System.Type)">
          <source>Use this constructor to specify a class derived from <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> to instantiate when a syndication feed is read in.</source>
          <target state="translated">배포 피드를 읽어들일 때 인스턴스화할 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> 파생 클래스를 지정하려면 이 생성자를 사용합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.Atom10FeedFormatter.#ctor(System.Type)">
          <source>The following code shows how to use this constructor.</source>
          <target state="translated">다음 코드에서는 이 생성자를 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.Atom10FeedFormatter.CanRead(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> to read from.</source>
          <target state="translated">읽을 소스 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.Atom10FeedFormatter.CanRead(System.Xml.XmlReader)">
          <source>Verifies whether the specified <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> contains a valid Atom 1.0 syndication feed.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>가 유효한 Atom 1.0 배포 피드를 포함하는지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.Atom10FeedFormatter.CanRead(System.Xml.XmlReader)">
          <source>A value that specifies whether the <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> contains a valid Atom 1.0 syndication feed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>가 유효한 Atom 1.0 배포 피드를 포함하는지 여부를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.Atom10FeedFormatter.CanRead(System.Xml.XmlReader)">
          <source>This method does not advance the reader to beyond the start element.</source>
          <target state="translated">이 메서드는 시작 요소를 벗어나도록 판독기를 진행하지 않습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.Atom10FeedFormatter.CanRead(System.Xml.XmlReader)">
          <source>The following code shows how to use the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.Atom10FeedFormatter.CanRead%28System.Xml.XmlReader%29&gt;</ph> method.</source>
          <target state="translated">다음 코드에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.Atom10FeedFormatter.CanRead%28System.Xml.XmlReader%29&gt;</ph> 메서드를 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.Atom10FeedFormatter.CreateFeedInstance">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph>.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph>를 만듭니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.Atom10FeedFormatter.CreateFeedInstance">
          <source>A new <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> instance.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.Atom10FeedFormatter.CreateFeedInstance">
          <source>The newly created <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> instance is not automatically associated with the <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.Atom10FeedFormatter&gt;</ph> used to create it.</source>
          <target state="translated">새로 생성된 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> 인스턴스는 자신을 만드는 데 사용된 <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.Atom10FeedFormatter&gt;</ph>와 자동으로 연결되지 않습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Syndication.Atom10FeedFormatter.FeedType">
          <source>The instance derived from <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> that is associated with the <ph id="ph2">&lt;see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> 인스턴스와 연결된 <ph id="ph2">&lt;see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" /&gt;</ph> 파생 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.Atom10FeedFormatter.FeedType">
          <source>The instance derived from <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> that is associated with the <ph id="ph2">&lt;see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> 인스턴스와 연결된 <ph id="ph2">&lt;see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" /&gt;</ph> 파생 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Syndication.Atom10FeedFormatter.PreserveAttributeExtensions">
          <source>Gets and sets a value that specifies whether to preserve attribute extensions during serialization.</source>
          <target state="translated">serialization 중에 특성 확장을 유지할지 여부를 지정하는 값을 가져오고 설정합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.Atom10FeedFormatter.PreserveAttributeExtensions">
          <source>A value that specifies whether to preserve attribute extensions during serialization.</source>
          <target state="translated">serialization 중에 특성 확장을 유지할지 여부를 지정하는 값입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.Atom10FeedFormatter.PreserveAttributeExtensions">
          <source>The default value of this property is <ph id="ph1">`true`</ph>.</source>
          <target state="translated">이 속성의 기본값은 <ph id="ph1">`true`</ph>입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.Atom10FeedFormatter.PreserveAttributeExtensions">
          <source>Attribute extensions are XML attributes that are not defined in the Atom 1.0 specification.</source>
          <target state="translated">특성 확장은 Atom 1.0 사양에 정의되지 않은 XML 특성입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.Atom10FeedFormatter.PreserveAttributeExtensions">
          <source>This property determines whether to write these attributes during serialization.</source>
          <target state="translated">이 속성은 serialization 중에 이러한 특성을 쓸지 여부를 결정합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.Atom10FeedFormatter.PreserveAttributeExtensions">
          <source>Similarly, this property determines whether to preserve unknown attributes inside the <ph id="ph1">`AttributeExtensions`</ph> properties in the <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> instance when deserializing an Atom1.0 feed.</source>
          <target state="translated">마찬가지로 이 속성은 Atom 1.0 피드를 deserialize할 때 <ph id="ph1">`AttributeExtensions`</ph> 인스턴스의 <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> 속성 내부에 알 수 없는 특성을 보존할지 여부를 결정합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Syndication.Atom10FeedFormatter.PreserveElementExtensions">
          <source>Gets and sets a value that specifies whether to preserve element extensions during serialization.</source>
          <target state="translated">serialization 중에 요소 확장을 유지할지 여부를 지정하는 값을 가져오고 설정합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.Atom10FeedFormatter.PreserveElementExtensions">
          <source>A value that specifies whether to preserve element extensions during serialization.</source>
          <target state="translated">serialization 중에 요소 확장을 유지할지 여부를 지정하는 값입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.Atom10FeedFormatter.PreserveElementExtensions">
          <source>The default value of this property is <ph id="ph1">`true`</ph>.</source>
          <target state="translated">이 속성의 기본값은 <ph id="ph1">`true`</ph>입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.Atom10FeedFormatter.PreserveElementExtensions">
          <source>Element extensions are XML elements that are not defined in the Atom 1.0 specification.</source>
          <target state="translated">요소 확장은 Atom 1.0 사양에 정의되지 않은 XML 요소입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.Atom10FeedFormatter.PreserveElementExtensions">
          <source>This property determines whether to write these elements during serialization.</source>
          <target state="translated">이 속성은 serialization 중에 이러한 요소를 쓸지 여부를 결정합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.Atom10FeedFormatter.PreserveElementExtensions">
          <source>Similarly, this property determines whether to preserve unknown elements inside the <ph id="ph1">`ElementExtensions`</ph> properties in the <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> instance when deserializing an Atom1.0 feed.</source>
          <target state="translated">마찬가지로 이 속성은 Atom 1.0 피드를 deserialize할 때 <ph id="ph1">`ElementExtensions`</ph> 인스턴스의 <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> 속성 내부에 알 수 없는 요소를 보존할지 여부를 결정합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.Atom10FeedFormatter.ReadFrom(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> to read from.</source>
          <target state="translated">읽을 소스 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.Atom10FeedFormatter.ReadFrom(System.Xml.XmlReader)">
          <source>Reads an Atom 1.0 syndication feed from the specified <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> instance.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 인스턴스로부터 Atom 1.0 배포 피드를 읽습니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.Atom10FeedFormatter.ReadFrom(System.Xml.XmlReader)">
          <source>The following code shows how to use the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.Atom10FeedFormatter.ReadFrom%28System.Xml.XmlReader%29&gt;</ph> method.</source>
          <target state="translated">다음 코드에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.Atom10FeedFormatter.ReadFrom%28System.Xml.XmlReader%29&gt;</ph> 메서드를 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.Atom10FeedFormatter.ReadItem(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationFeed)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> to read from.</source>
          <target state="translated">읽을 소스 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.Atom10FeedFormatter.ReadItem(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationFeed)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> used to create the new <ph id="ph2">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationItem" /&gt;</ph> instance.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> 인스턴스를 만드는 데 사용되는 <ph id="ph2">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationItem" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.Atom10FeedFormatter.ReadItem(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationFeed)">
          <source>Reads a syndication item from <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> instance using the <ph id="ph2">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 인스턴스를 사용하여 <ph id="ph2">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> 인스턴스로부터 배포 항목을 읽습니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.Atom10FeedFormatter.ReadItem(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationFeed)">
          <source>A new <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationItem" /&gt;</ph> instance.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationItem" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.Atom10FeedFormatter.ReadItem(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationFeed)">
          <source>This method does not add the newly created <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationItem&gt;</ph> instance to the <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph>, because this is done by the caller of the method.</source>
          <target state="translated">이 메서드는 새로 생성된 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationItem&gt;</ph> 인스턴스를 <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph>에 추가하지 않습니다. 이 작업은 메서드의 호출자가 수행합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.Atom10FeedFormatter.ReadItem(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationFeed)">
          <source>This method provides an extensibility point for classes derived from <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.Atom10FeedFormatter&gt;</ph> to customize how an Atom 1.0 entry is deserialized.</source>
          <target state="translated">이 메서드는 Atom 1.0 항목이 deserialize되는 방법을 사용자 지정하기 위해 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.Atom10FeedFormatter&gt;</ph>로부터 파생된 클래스에 확장 지점을 제공합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.Atom10FeedFormatter.ReadItems(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationFeed,System.Boolean@)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> to read from.</source>
          <target state="translated">읽을 소스 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.Atom10FeedFormatter.ReadItems(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationFeed,System.Boolean@)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> instance to use to create the <ph id="ph2">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationItem" /&gt;</ph> instances.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> 인스턴스를 만드는 데 사용할 <ph id="ph2">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationItem" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.Atom10FeedFormatter.ReadItems(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationFeed,System.Boolean@)">
          <source>A value that specifies whether all of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationItem" /&gt;</ph> instances have been read from the <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> instance.</source>
          <target state="translated">모든 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationItem" /&gt;</ph> 인스턴스를 <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 인스턴스로부터 읽었는지 여부를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.Atom10FeedFormatter.ReadItems(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationFeed,System.Boolean@)">
          <source>Reads in a collection of <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationItem" /&gt;</ph> instances from the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationItem" /&gt;</ph>로부터 <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 인스턴스 컬렉션을 읽습니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.Atom10FeedFormatter.ReadItems(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationFeed,System.Boolean@)">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationItem" /&gt;</ph> instances.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationItem" /&gt;</ph> 인스턴스의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.Atom10FeedFormatter.ReadItems(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationFeed,System.Boolean@)">
          <source>This method does not add the newly created <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationItem&gt;</ph> instances to the <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph>, because this is done by the caller of the method.</source>
          <target state="translated">이 메서드는 새로 생성된 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationItem&gt;</ph> 인스턴스를 <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph>에 추가하지 않습니다. 이 작업은 메서드의 호출자가 수행합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.Atom10FeedFormatter.ReadItems(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationFeed,System.Boolean@)">
          <source>This method provides an extensibility point for classes derived from <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.Atom10FeedFormatter&gt;</ph> to customize how the Atom entries get deserialized.</source>
          <target state="translated">이 메서드는 Atom 항목이 deserialize되는 방법을 사용자 지정하기 위해 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.Atom10FeedFormatter&gt;</ph>로부터 파생된 클래스에 확장 지점을 제공합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.Atom10FeedFormatter.ReadItems(System.Xml.XmlReader,System.ServiceModel.Syndication.SyndicationFeed,System.Boolean@)">
          <source>For instance, derived classes could delay the reading of the Atom entry until the caller accesses the entry.</source>
          <target state="translated">예를 들어, 파생된 클래스는 호출자가 Atom 항목에 액세스할 때까지 해당 항목 읽기를 지연할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.Atom10FeedFormatter.System#Xml#Serialization#IXmlSerializable#GetSchema">
          <source>Implements the <ph id="ph1">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" /&gt;</ph> 메서드를 구현합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.Atom10FeedFormatter.System#Xml#Serialization#IXmlSerializable#GetSchema">
          <source><ph id="ph1">&lt;see langword="Null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.Atom10FeedFormatter.System#Xml#Serialization#IXmlSerializable#GetSchema">
          <source>Override this method to return your own schema.</source>
          <target state="translated">사용자 고유의 스키마를 반환하려면 이 메서드를 재정의합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.Atom10FeedFormatter.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> used to read the XML document.</source>
          <target state="translated">XML 문서를 읽는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.Atom10FeedFormatter.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
          <source>Implements the <ph id="ph1">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /&gt;</ph> 메서드를 구현합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.Atom10FeedFormatter.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> used to write the XML node.</source>
          <target state="translated">XML 노드를 쓰는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.Atom10FeedFormatter.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
          <source>Implements the <ph id="ph1">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /&gt;</ph> 메서드를 구현합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Syndication.Atom10FeedFormatter.Version">
          <source>Gets the syndication version used by the formatter.</source>
          <target state="translated">포맷터에서 사용되는 배포 버전을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.Atom10FeedFormatter.Version">
          <source>The syndication version used by the formatter.</source>
          <target state="translated">포맷터에서 사용하는 배포 버전입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.Atom10FeedFormatter.Version">
          <source><ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> supports Atom 1.0 and RSS 2.0 syndication versions.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph>는 Atom 1.0 및 RSS 2.0 배포 버전을 지원합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.Atom10FeedFormatter.WriteItem(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationItem,System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> to write to.</source>
          <target state="translated">쓸 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.Atom10FeedFormatter.WriteItem(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationItem,System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationItem" /&gt;</ph> to write.</source>
          <target state="translated">쓸 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationItem" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.Atom10FeedFormatter.WriteItem(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationItem,System.Uri)">
          <source>The base URI for the feed.</source>
          <target state="translated">피드의 기본 URI입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.Atom10FeedFormatter.WriteItem(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationItem,System.Uri)">
          <source>Writes the specified <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationItem" /&gt;</ph> instance to the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationItem" /&gt;</ph> 인스턴스를 지정된 <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>에 씁니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.Atom10FeedFormatter.WriteItem(System.Xml.XmlWriter,System.ServiceModel.Syndication.SyndicationItem,System.Uri)">
          <source>Override this method to change the way a <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationItem&gt;</ph> is written.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationItem&gt;</ph>을 쓰는 방법을 변경하려면 이 메서드를 재정의합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.Atom10FeedFormatter.WriteItems(System.Xml.XmlWriter,System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem},System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> to write to.</source>
          <target state="translated">쓸 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.Atom10FeedFormatter.WriteItems(System.Xml.XmlWriter,System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem},System.Uri)">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationItem" /&gt;</ph> instances to write.</source>
          <target state="translated">쓸 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationItem" /&gt;</ph> 인스턴스 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.Atom10FeedFormatter.WriteItems(System.Xml.XmlWriter,System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem},System.Uri)">
          <source>The base URI for the feed.</source>
          <target state="translated">피드의 기본 URI입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.Atom10FeedFormatter.WriteItems(System.Xml.XmlWriter,System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem},System.Uri)">
          <source>Writes a collection of <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationItem" /&gt;</ph> instances to the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationItem" /&gt;</ph> 인스턴스 컬렉션을 지정된 <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>에 씁니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.Atom10FeedFormatter.WriteItems(System.Xml.XmlWriter,System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem},System.Uri)">
          <source>Override this method to change the way a collection of <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationItem&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationItem&gt;</ph> 개체 컬렉션을 쓰는 방법을 변경하려면 이 메서드를 재정의합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.Atom10FeedFormatter.WriteTo(System.Xml.XmlWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> to write to.</source>
          <target state="translated">쓸 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.Atom10FeedFormatter.WriteTo(System.Xml.XmlWriter)">
          <source>Writes the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> associated with the <ph id="ph2">&lt;see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" /&gt;</ph> to the specified <ph id="ph3">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph>와 연결된 <ph id="ph2">&lt;see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" /&gt;</ph>를 지정된 <ph id="ph3">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>에 씁니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.Atom10FeedFormatter.WriteTo(System.Xml.XmlWriter)">
          <source>The following code shows how to create a syndication feed and use a <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.Atom10FeedFormatter&gt;</ph> to write the feed to an <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>.</source>
          <target state="translated">다음 코드에서는 배포 피드를 만들고 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.Atom10FeedFormatter&gt;</ph>를 사용하여 피드를 <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>에 쓰는 방법을 보여 줍니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>