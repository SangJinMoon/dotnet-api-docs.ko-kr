<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SyndicationFeed.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac523959c48002f80809726df0817c1000a69aa2541.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">23959c48002f80809726df0817c1000a69aa2541</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>Represents a top-level feed object, <ph id="ph1">&amp;lt;</ph><ph id="ph2">&lt;see langword="feed" /&gt;</ph><ph id="ph3">&amp;gt;</ph> in Atom 1.0 and <ph id="ph4">&amp;lt;</ph><ph id="ph5">&lt;see langword="rss" /&gt;</ph><ph id="ph6">&amp;gt;</ph> in RSS 2.0.</source>
          <target state="translated">최상위 피드 개체인 <ph id="ph1">&amp;lt;</ph><ph id="ph2">&lt;see langword="feed" /&gt;</ph><ph id="ph3">&amp;gt;</ph>(Atom 1.0) 및 <ph id="ph4">&amp;lt;</ph><ph id="ph5">&lt;see langword="rss" /&gt;</ph><ph id="ph6">&amp;gt;</ph>(RSS 2.0)를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>When serialized to Atom 1.0, a <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> instance is written to a &lt;<ph id="ph2">`feed`</ph>&gt; element.</source>
          <target state="translated">Atom 1.0으로 serialize 될 때는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> 인스턴스에 기록 되는 &lt;<ph id="ph2">`feed`</ph>&gt; 요소입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>The following table shows how each property defined in the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> class is serialized to Atom 1.0.</source>
          <target state="translated">다음 표에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> 클래스에 정의된 각 속성이 어떻게 Atom 1.0으로 serialize되는지 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>SyndicationFeed property</source>
          <target state="translated">SyndicationFeed 속성</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>Serialized form</source>
          <target state="translated">Serialize된 형식</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>An attribute in the &lt;<ph id="ph1">`feed`</ph>&gt; element for each attribute in the collection.</source>
          <target state="translated">특성에는 &lt;<ph id="ph1">`feed`</ph>&gt; 컬렉션의 각 특성에 대 한 요소입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>An &lt;<ph id="ph1">`author`</ph>&gt; element for each <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationPerson&gt;</ph> in the collection.</source>
          <target state="translated">&lt;<ph id="ph1">`author`</ph>&gt; 요소 각각에 대해 <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationPerson&gt;</ph> 컬렉션에 있습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>A &lt;<ph id="ph1">`category`</ph>&gt; element for each <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory&gt;</ph> in the collection.</source>
          <target state="translated">A &lt;<ph id="ph1">`category`</ph>&gt; 요소 각각에 대해 <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory&gt;</ph> 컬렉션에 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>A &lt;<ph id="ph1">`contributor`</ph>&gt; element for each <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationPerson&gt;</ph> in the collection.</source>
          <target state="translated">A &lt;<ph id="ph1">`contributor`</ph>&gt; 요소 각각에 대해 <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationPerson&gt;</ph> 컬렉션에 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>A &lt;<ph id="ph1">`rights`</ph>&gt; element.</source>
          <target state="translated">A &lt;<ph id="ph1">`rights`</ph>&gt; 요소입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>A &lt;<ph id="ph1">`subtitle`</ph>&gt; element.</source>
          <target state="translated">A &lt;<ph id="ph1">`subtitle`</ph>&gt; 요소입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>Each element in the collection is written within the &lt;<ph id="ph1">`feed`</ph>&gt; element.</source>
          <target state="translated">내에서 작성 되는 컬렉션의 각 요소는 &lt;<ph id="ph1">`feed`</ph>&gt; 요소입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>A &lt;<ph id="ph1">`generator`</ph>&gt; element.</source>
          <target state="translated">A &lt;<ph id="ph1">`generator`</ph>&gt; 요소입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>An &lt;<ph id="ph1">`id`</ph>&gt;element.</source>
          <target state="translated">&lt;<ph id="ph1">`id`</ph>&gt; 요소입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>A &lt;<ph id="ph1">`logo`</ph>&gt; element.</source>
          <target state="translated">A &lt;<ph id="ph1">`logo`</ph>&gt; 요소입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>An &lt;<ph id="ph1">`entry`</ph>&gt; element for each <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationItem&gt;</ph> in the collection.</source>
          <target state="translated">&lt;<ph id="ph1">`entry`</ph>&gt; 요소 각각에 대해 <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationItem&gt;</ph> 컬렉션에 있습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>Not serialized.</source>
          <target state="translated">serialize되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>An &lt;<ph id="ph1">`updated`</ph>&gt; element.</source>
          <target state="translated">&lt;<ph id="ph1">`updated`</ph>&gt; 요소입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>A &lt;<ph id="ph1">`link`</ph>&gt; element for each <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationLink&gt;</ph> in the collection.</source>
          <target state="translated">A &lt;<ph id="ph1">`link`</ph>&gt; 요소 각각에 대해 <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationLink&gt;</ph> 컬렉션에 있습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>A &lt;<ph id="ph1">`title`</ph>&gt; element.</source>
          <target state="translated">A &lt;<ph id="ph1">`title`</ph>&gt; 요소입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>When serialized to RSS 2.0, a <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> instance is written to an &lt;<ph id="ph2">`rss`</ph>&gt; element.</source>
          <target state="translated">RSS 2.0으로 serialize 될 때는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> 인스턴스에 기록 되는 &lt;<ph id="ph2">`rss`</ph>&gt; 요소입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>The following table shows how each property defined in the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> class is serialized to RSS 2.0.</source>
          <target state="translated">다음 표에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> 클래스에 정의된 각 속성이 어떻게 RSS 2.0으로 serialize되는지 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>SyndicationFeed property</source>
          <target state="translated">SyndicationFeed 속성</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>Serialized form</source>
          <target state="translated">Serialize된 형식</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>An attribute in the &lt;<ph id="ph1">`channel`</ph>&gt; element for each attribute in the collection.</source>
          <target state="translated">특성에는 &lt;<ph id="ph1">`channel`</ph>&gt; 컬렉션의 각 특성에 대 한 요소입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>A &lt;<ph id="ph1">`managingEditor`</ph>&gt; element if only one <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationPerson&gt;</ph> is in the collection; otherwise, an &lt;<ph id="ph3">`a10:author`</ph>&gt; element for each <ph id="ph4">&lt;xref:System.ServiceModel.Syndication.SyndicationPerson&gt;</ph> in the collection.</source>
          <target state="translated">A &lt;<ph id="ph1">`managingEditor`</ph>&gt; 요소 하나만 <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationPerson&gt;</ph> 는 컬렉션에 그렇지 않은 경우는 &lt;<ph id="ph3">`a10:author`</ph>&gt; 요소 각각에 대해 <ph id="ph4">&lt;xref:System.ServiceModel.Syndication.SyndicationPerson&gt;</ph> 컬렉션에 있습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>A &lt;<ph id="ph1">`category`</ph>&gt; element for each <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory&gt;</ph> in the collection.</source>
          <target state="translated">A &lt;<ph id="ph1">`category`</ph>&gt; 요소 각각에 대해 <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory&gt;</ph> 컬렉션에 있습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>An &lt;<ph id="ph1">`a10:contributor`</ph>&gt; element for each <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationPerson&gt;</ph> in the collection.</source>
          <target state="translated">&lt;<ph id="ph1">`a10:contributor`</ph>&gt; 요소 각각에 대해 <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationPerson&gt;</ph> 컬렉션에 있습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>A &lt;<ph id="ph1">`copyright`</ph>&gt; element.</source>
          <target state="translated">A &lt;<ph id="ph1">`copyright`</ph>&gt; 요소입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>A &lt;<ph id="ph1">`description`</ph>&gt; element.</source>
          <target state="translated">A &lt;<ph id="ph1">`description`</ph>&gt; 요소입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>Each element in the collection is written within the &lt;<ph id="ph1">`channel`</ph>&gt; element.</source>
          <target state="translated">내에서 작성 되는 컬렉션의 각 요소는 &lt;<ph id="ph1">`channel`</ph>&gt; 요소입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>A &lt;<ph id="ph1">`generator`</ph>&gt; element.</source>
          <target state="translated">A &lt;<ph id="ph1">`generator`</ph>&gt; 요소입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>An &lt;<ph id="ph1">`a10:id`</ph>&gt; element.</source>
          <target state="translated">&lt;<ph id="ph1">`a10:id`</ph>&gt; 요소입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>An &lt;<ph id="ph1">`image`</ph>&gt; element.</source>
          <target state="translated">&lt;<ph id="ph1">`image`</ph>&gt; 요소입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>An &lt;<ph id="ph1">`item`</ph>&gt; element for each <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationItem&gt;</ph> in the collection.</source>
          <target state="translated">&lt;<ph id="ph1">`item`</ph>&gt; 요소 각각에 대해 <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationItem&gt;</ph> 컬렉션에 있습니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>A &lt;<ph id="ph1">`language`</ph>&gt; element.</source>
          <target state="translated">A &lt;<ph id="ph1">`language`</ph>&gt; 요소입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>A &lt;<ph id="ph1">`lastBuildDate`</ph>&gt; element.</source>
          <target state="translated">A &lt;<ph id="ph1">`lastBuildDate`</ph>&gt; 요소입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>An &lt;<ph id="ph1">`a10:link`</ph>&gt; element for each <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationLink&gt;</ph> in the collection.</source>
          <target state="translated">&lt;<ph id="ph1">`a10:link`</ph>&gt; 요소 각각에 대해 <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationLink&gt;</ph> 컬렉션에 있습니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>A &lt;<ph id="ph1">`title`</ph>&gt; element.</source>
          <target state="translated">A &lt;<ph id="ph1">`title`</ph>&gt; 요소입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>The following code shows how to create a <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> instance and serialize it to both Atom 1.0 and RSS 2.0.</source>
          <target state="translated">다음 코드에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> 인스턴스를 만들고 이를 Atom 1.0 및 RSS 2.0으로 serialize하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>The following XML shows how a <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> is serialized to Atom 1.0.</source>
          <target state="translated">다음 XML에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph>이 Atom 1.0으로 serialize되는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>The following XML shows how a <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> instance is serialized to RSS 2.0.</source>
          <target state="translated">다음 XML에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> 인스턴스가 RSS 2.0으로 serialize되는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem})">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationItem" /&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationItem" /&gt;</ph> 개체의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> class with the specified collection of <ph id="ph2">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationItem" /&gt;</ph> objects.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> 개체 컬렉션을 사용하여 <ph id="ph2">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationItem" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem})">
          <source>The collection of <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationItem&gt;</ph> objects passed into this constructor is buffered.</source>
          <target state="translated">이 생성자에 전달된 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationItem&gt;</ph> 개체 컬렉션은 버퍼링됩니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem})">
          <source>The following example demonstrates how to call this constructor.</source>
          <target state="translated">다음 예제에서는 이 생성자를 호출하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.ServiceModel.Syndication.SyndicationFeed,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> used to initialize the new instance.</source>
          <target state="translated">새 인스턴스를 초기화하는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.ServiceModel.Syndication.SyndicationFeed,System.Boolean)">
          <source>A value that specifies whether to clone the items in the source instance.</source>
          <target state="translated">소스 인스턴스의 항목을 복제할지 여부를 지정하는 값입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.ServiceModel.Syndication.SyndicationFeed,System.Boolean)">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> class with the specified feed.</source>
          <target state="translated">지정된 피드를 사용하여 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> 클래스의 새 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.ServiceModel.Syndication.SyndicationFeed,System.Boolean)">
          <source>If the <ph id="ph1">`cloneItems`</ph> parameter is <ph id="ph2">`true`</ph>, all <ph id="ph3">&lt;xref:System.ServiceModel.Syndication.SyndicationItem&gt;</ph> instances in the source <ph id="ph4">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> instance are cloned and added to the <ph id="ph5">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A&gt;</ph> collection of the new <ph id="ph6">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">`cloneItems`</ph> 매개 변수가 <ph id="ph2">`true`</ph>이면 소스 <ph id="ph3">&lt;xref:System.ServiceModel.Syndication.SyndicationItem&gt;</ph> 인스턴스의 모든 <ph id="ph4">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> 인스턴스가 복제되어 새 <ph id="ph5">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A&gt;</ph> 인스턴스의 <ph id="ph6">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> 컬렉션에 추가됩니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.ServiceModel.Syndication.SyndicationFeed,System.Boolean)">
          <source>If the <ph id="ph1">`cloneItems`</ph> parameter is <ph id="ph2">`false`</ph>, the <ph id="ph3">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A&gt;</ph> collection of the new <ph id="ph4">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> instance contains references to the existing <ph id="ph5">&lt;xref:System.ServiceModel.Syndication.SyndicationItem&gt;</ph> instances.</source>
          <target state="translated"><ph id="ph1">`cloneItems`</ph> 매개 변수가 <ph id="ph2">`false`</ph>이면 새 <ph id="ph3">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A&gt;</ph> 인스턴스의 <ph id="ph4">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> 컬렉션은 기존 <ph id="ph5">&lt;xref:System.ServiceModel.Syndication.SyndicationItem&gt;</ph> 인스턴스에 대한 참조를 포함합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri)">
          <source>The title of the feed.</source>
          <target state="translated">피드의 제목입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri)">
          <source>The description of the feed.</source>
          <target state="translated">피드에 대한 설명입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri)">
          <source>The URI for the feed.</source>
          <target state="translated">피드의 URI입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> class with the specified title, description, and Uniform Resource Identifier (URI).</source>
          <target state="translated">지정된 제목, 설명 및 URI(Uniform Resource Identifier)를 사용하여 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri)">
          <source>The following example demonstrates how to call this constructor.</source>
          <target state="translated">다음 예제에서는 이 생성자를 호출하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri,System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem})">
          <source>The title of the feed.</source>
          <target state="translated">피드의 제목입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri,System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem})">
          <source>The description of the feed.</source>
          <target state="translated">피드에 대한 설명입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri,System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem})">
          <source>The URI for the feed.</source>
          <target state="translated">피드의 URI입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri,System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem})">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationItem" /&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationItem" /&gt;</ph> 개체의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri,System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> class with the specified title, description, URI, and collection of <ph id="ph2">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationItem" /&gt;</ph> objects.</source>
          <target state="translated">지정된 제목, 설명, URI 및 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> 개체 컬렉션을 사용하여 <ph id="ph2">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationItem" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri,System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem})">
          <source>The following example demonstrates how to call this constructor.</source>
          <target state="translated">다음 예제에서는 이 생성자를 호출하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri,System.String,System.DateTimeOffset)">
          <source>The syndication feed title.</source>
          <target state="translated">배포 피드 제목입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri,System.String,System.DateTimeOffset)">
          <source>The syndication feed description.</source>
          <target state="translated">배포 피드에 대한 설명입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri,System.String,System.DateTimeOffset)">
          <source>The alternate URI for the syndication feed.</source>
          <target state="translated">배포 피드의 대체 URI입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri,System.String,System.DateTimeOffset)">
          <source>The ID of the syndication feed.</source>
          <target state="translated">배포 피드의 ID입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri,System.String,System.DateTimeOffset)">
          <source>The <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> that contains the last time the syndication feed was updated.</source>
          <target state="translated">배포 피드가 마지막으로 업데이트된 시간을 포함하는 <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri,System.String,System.DateTimeOffset)">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> class.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> 클래스의 새 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri,System.String,System.DateTimeOffset)">
          <source>The following code shows how to call this constructor.</source>
          <target state="translated">다음 코드에서는 이 생성자를 호출하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri,System.String,System.DateTimeOffset,System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem})">
          <source>The syndication feed title.</source>
          <target state="translated">배포 피드 제목입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri,System.String,System.DateTimeOffset,System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem})">
          <source>The syndication feed description.</source>
          <target state="translated">배포 피드에 대한 설명입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri,System.String,System.DateTimeOffset,System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem})">
          <source>The alternate URI for the syndication feed.</source>
          <target state="translated">배포 피드의 대체 URI입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri,System.String,System.DateTimeOffset,System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem})">
          <source>The ID of the syndication feed.</source>
          <target state="translated">배포 피드의 ID입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri,System.String,System.DateTimeOffset,System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem})">
          <source>The <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> that contains the last time the syndication feed was updated.</source>
          <target state="translated">배포 피드가 마지막으로 업데이트된 시간을 포함하는 <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri,System.String,System.DateTimeOffset,System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem})">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationItem" /&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationItem" /&gt;</ph> 개체의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri,System.String,System.DateTimeOffset,System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem})">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> class.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> 클래스의 새 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.#ctor(System.String,System.String,System.Uri,System.String,System.DateTimeOffset,System.Collections.Generic.IEnumerable{System.ServiceModel.Syndication.SyndicationItem})">
          <source>The following code shows how to call this constructor.</source>
          <target state="translated">다음 코드에서는 이 생성자를 호출하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Syndication.SyndicationFeed.AttributeExtensions">
          <source>Gets a collection of attribute extensions.</source>
          <target state="translated">특성 확장명 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.AttributeExtensions">
          <source>A dictionary that contains a collection of attribute extensions.</source>
          <target state="translated">특성 확장 컬렉션을 포함하는 사전입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.AttributeExtensions">
          <source>An attribute extension is a valid XML attribute that is not specified in either the Atom 1.0 or RSS 2.0 specifications.</source>
          <target state="translated">특성 확장은 Atom 1.0 또는 RSS 2.0 사양에 정의되지 않은 유효한 XML 특성입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.AttributeExtensions">
          <source>When serialized to Atom 1.0, each custom attribute in the collection is written to the &lt;<ph id="ph1">`atom`</ph>&gt; element.</source>
          <target state="translated">컬렉션의 각 사용자 지정 특성에 기록 됩니다 Atom 1.0으로 serialize 하는 경우는 &lt;<ph id="ph1">`atom`</ph>&gt; 요소입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.AttributeExtensions">
          <source>When serialized to RSS 2.0, each custom attribute is written to the &lt;<ph id="ph1">`channel`</ph>&gt; element.</source>
          <target state="translated">각 사용자 지정 특성에 기록 됩니다 RSS 2.0으로 serialize 될 때의 &lt;<ph id="ph1">`channel`</ph>&gt; 요소입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.AttributeExtensions">
          <source><ph id="ph1">[!INCLUDE[crexample](~/includes/crexample-md.md)]</ph> adding an attribute extension, see the <bpt id="p1">[</bpt>Loosely-Typed Extensions<ept id="p1">](~/docs/framework/wcf/samples/loosely-typed-extensions-sample.md)</ept> sample.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crexample](~/includes/crexample-md.md)]</ph> 특성 확장을 추가 하는 참조는 <bpt id="p1">[</bpt>Loosely-Typed 확장<ept id="p1">](~/docs/framework/wcf/samples/loosely-typed-extensions-sample.md)</ept> 샘플.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.AttributeExtensions">
          <source>The following code shows how to add an attribute extension to a syndication feed.</source>
          <target state="translated">다음 코드에서는 배포 피드에 특성 확장을 추가하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.AttributeExtensions">
          <source>The following XML shows how an attribute extension is serialized to Atom 1.0.</source>
          <target state="translated">다음 XML에서는 특성 확장이 Atom 1.0으로 serialize되는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.AttributeExtensions">
          <source>The following XML shows how an attribute extension is serialized to RSS 2.0.</source>
          <target state="translated">다음 XML에서는 특성 확장이 RSS 2.0으로 serialize되는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Authors">
          <source>Gets a collection of authors of the feed.</source>
          <target state="translated">피드 작성자 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Authors">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /&gt;</ph> objects that represents the authors of the feed.</source>
          <target state="translated">피드 작성자를 나타내는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /&gt;</ph> 개체 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Authors">
          <source>When serialized to Atom 1.0, each <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationPerson&gt;</ph> in the collection is written to an &lt;<ph id="ph2">`author`</ph>&gt; element.</source>
          <target state="translated">Atom 1.0으로 serialize 될 때 각 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationPerson&gt;</ph> 컬렉션에 작성 되는 &lt;<ph id="ph2">`author`</ph>&gt; 요소입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Authors">
          <source>When serialized to RSS 2.0, if only a single <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationPerson&gt;</ph> exists in the collection, it is written to a &lt;<ph id="ph2">`managingEditor`</ph>&gt; element.</source>
          <target state="translated">단일 경우 RSS 2.0으로 serialize 될 때 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationPerson&gt;</ph> 존재에 기록 되기 컬렉션에는 &lt;<ph id="ph2">`managingEditor`</ph>&gt; 요소입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Authors">
          <source>Otherwise, each <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationPerson&gt;</ph> is written to an &lt;<ph id="ph2">`a10:author`</ph>&gt; element.</source>
          <target state="translated">그렇지 않은 경우 각 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationPerson&gt;</ph> 에 기록 되는 &lt;<ph id="ph2">`a10:author`</ph>&gt; 요소입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Authors">
          <source>The following code shows how to add an author to the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Authors%2A&gt;</ph> collection of a <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph>.</source>
          <target state="translated">다음 코드에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Authors%2A&gt;</ph>의 <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> 컬렉션에 작성자를 추가하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Authors">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Authors%2A&gt;</ph> collection is serialized to Atom 1.0.</source>
          <target state="translated">다음 XML에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Authors%2A&gt;</ph> 컬렉션이 Atom 1.0으로 serialize되는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Authors">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Authors%2A&gt;</ph> collection is serialized to RSS 2.0.</source>
          <target state="translated">다음 XML에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Authors%2A&gt;</ph> 컬렉션이 RSS 2.0으로 serialize되는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Syndication.SyndicationFeed.BaseUri">
          <source>Gets and sets the base URI for the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> 인스턴스의 기본 URI를 가져오고 설정합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.BaseUri">
          <source>The base URI for the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> 인스턴스의 기본 URI입니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.BaseUri">
          <source>The following code shows how to access the base URI of a <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> instance.</source>
          <target state="translated">다음 코드에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> 인스턴스의 기본 URI에 액세스하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Categories">
          <source>Gets a collection of categories for the feed.</source>
          <target state="translated">피드의 범주 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Categories">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /&gt;</ph> objects that represent the categories for the feed.</source>
          <target state="translated">피드의 범주를 나타내는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /&gt;</ph> 개체 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Categories">
          <source>When serialized to Atom 1.0, each <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory&gt;</ph> in the collection is written to a &lt;<ph id="ph2">`category`</ph>&gt; element.</source>
          <target state="translated">Atom 1.0으로 serialize 될 때 각 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory&gt;</ph> 컬렉션에 작성 되는 &lt;<ph id="ph2">`category`</ph>&gt; 요소입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Categories">
          <source>When serialized to RSS 2.0, each <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory&gt;</ph> in the collection is written to a &lt;<ph id="ph2">`category`</ph>&gt; element.</source>
          <target state="translated">RSS 2.0으로 serialize 될 때 각 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory&gt;</ph> 컬렉션에 작성 되는 &lt;<ph id="ph2">`category`</ph>&gt; 요소입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Categories">
          <source>The following code shows how to add a category to the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Categories%2A&gt;</ph> collection of a <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph>.</source>
          <target state="translated">다음 코드에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Categories%2A&gt;</ph>의 <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> 컬렉션에 범주를 추가하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Categories">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Categories%2A&gt;</ph> collection is serialized to Atom 1.0.</source>
          <target state="translated">다음 XML에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Categories%2A&gt;</ph> 컬렉션이 Atom 1.0으로 serialize되는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Categories">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Categories%2A&gt;</ph> collection is serialized to RSS 2.0.</source>
          <target state="translated">다음 XML에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Categories%2A&gt;</ph> 컬렉션이 RSS 2.0으로 serialize되는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.Clone(System.Boolean)">
          <source>A value that specifies whether the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationItem" /&gt;</ph> objects are cloned.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationItem" /&gt;</ph> 개체의 복제 여부를 지정하는 값입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.Clone(System.Boolean)">
          <source>Creates a copy of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> 인스턴스의 복사본을 만듭니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.Clone(System.Boolean)">
          <source>A duplicate <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> object.</source>
          <target state="translated">중복된 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.Clone(System.Boolean)">
          <source>If the <ph id="ph1">`cloneItems`</ph> parameter is <ph id="ph2">`true`</ph>, all items within the <ph id="ph3">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> object are cloned; otherwise, the new <ph id="ph4">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> instance's items collection contain references to the original <ph id="ph5">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> instance's items.</source>
          <target state="translated"><ph id="ph1">`cloneItems`</ph> 매개 변수가 <ph id="ph2">`true`</ph>이면 <ph id="ph3">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> 개체의 모든 항목이 복제되고, 그렇지 않으면 새 <ph id="ph4">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> 인스턴스의 항목 컬렉션은 원래 <ph id="ph5">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> 인스턴스의 항목에 대한 참조를 포함합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.Clone(System.Boolean)">
          <source>The following code shows how to call this method.</source>
          <target state="translated">다음 코드에서는 이 메서드를 호출하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Contributors">
          <source>Gets a collection of the contributors to the feed.</source>
          <target state="translated">피드 검토자 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Contributors">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /&gt;</ph> objects that represents the contributors to the feed.</source>
          <target state="translated">피드 검토자를 나타내는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /&gt;</ph> 개체 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Contributors">
          <source>When serialized to Atom 1.0, each <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationPerson&gt;</ph> in the collection is written to a &lt;<ph id="ph2">`contributor`</ph>&gt; element.</source>
          <target state="translated">Atom 1.0으로 serialize 될 때 각 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationPerson&gt;</ph> 컬렉션에 작성 되는 &lt;<ph id="ph2">`contributor`</ph>&gt; 요소입니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Contributors">
          <source>When serialized to RSS 2.0, each <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationPerson&gt;</ph> in the collection is written to an &lt;<ph id="ph2">`a10:contributor`</ph>&gt; element.</source>
          <target state="translated">RSS 2.0으로 serialize 될 때 각 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationPerson&gt;</ph> 컬렉션에 작성 되는 &lt;<ph id="ph2">`a10:contributor`</ph>&gt; 요소입니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Contributors">
          <source>The following code shows how to add a contributor to the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Contributors%2A&gt;</ph> collection of a <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph>.</source>
          <target state="translated">다음 코드에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Contributors%2A&gt;</ph>의 <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> 컬렉션에 검토자를 추가하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Contributors">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Contributors%2A&gt;</ph> collection is serialized to Atom 1.0.</source>
          <target state="translated">다음 XML에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Contributors%2A&gt;</ph> 컬렉션이 Atom 1.0으로 serialize되는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Contributors">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Contributors%2A&gt;</ph> collection is serialized to RSS 2.0.</source>
          <target state="translated">다음 XML에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Contributors%2A&gt;</ph> 컬렉션이 RSS 2.0으로 serialize되는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Copyright">
          <source>Gets and sets copyright information for the feed.</source>
          <target state="translated">피드에 대한 저작권 정보를 가져오고 설정합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Copyright">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationContent" /&gt;</ph> object that represents copyright information for the feed.</source>
          <target state="translated">피드에 대한 저작권 정보를 나타내는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationContent" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Copyright">
          <source>When serialized to Atom 1.0, the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Copyright%2A&gt;</ph> is written to a &lt;<ph id="ph2">`rights`</ph>&gt; element.</source>
          <target state="translated">Atom 1.0으로 serialize 될 때는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Copyright%2A&gt;</ph> 에 기록 되는 &lt;<ph id="ph2">`rights`</ph>&gt; 요소입니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Copyright">
          <source>When serialized to RSS 2.0, the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Copyright%2A&gt;</ph> is written to a &lt;<ph id="ph2">`copyright`</ph>&gt; element.</source>
          <target state="translated">RSS 2.0으로 serialize 될 때는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Copyright%2A&gt;</ph> 에 기록 되는 &lt;<ph id="ph2">`copyright`</ph>&gt; 요소입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Copyright">
          <source>The following code shows how to set the copyright information for a <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph>.</source>
          <target state="translated">다음 코드에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph>의 저작권 정보를 설정하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Copyright">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Copyright%2A&gt;</ph> is serialized to Atom 1.0.</source>
          <target state="translated">다음 XML에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Copyright%2A&gt;</ph>가 Atom 1.0으로 serialize되는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Copyright">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Copyright%2A&gt;</ph> is serialized to RSS 2.0.</source>
          <target state="translated">다음 XML에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Copyright%2A&gt;</ph>가 RSS 2.0으로 serialize되는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.CreateCategory">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /&gt;</ph> instance.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /&gt;</ph> 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.CreateCategory">
          <source>A new <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /&gt;</ph> instance.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.CreateCategory">
          <source>This method does not add the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory&gt;</ph> object to the <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Categories%2A&gt;</ph> collection.</source>
          <target state="translated">이 메서드는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory&gt;</ph> 개체를 <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Categories%2A&gt;</ph> 컬렉션에 추가하지 않습니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.CreateItem">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationItem" /&gt;</ph> instance.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationItem" /&gt;</ph> 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.CreateItem">
          <source>A new <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationItem" /&gt;</ph> instance.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationItem" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.CreateItem">
          <source>This method does not add the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationItem&gt;</ph> object to the <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A&gt;</ph> collection.</source>
          <target state="translated">이 메서드는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationItem&gt;</ph> 개체를 <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A&gt;</ph> 컬렉션에 추가하지 않습니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.CreateLink">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationLink" /&gt;</ph> instance.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationLink" /&gt;</ph> 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.CreateLink">
          <source>A new <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationLink" /&gt;</ph> instance.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationLink" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.CreateLink">
          <source>The new <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationLink&gt;</ph> instance is not added to the <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> instance used to create it.</source>
          <target state="translated">이러한 새 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationLink&gt;</ph> 인스턴스는 자신을 만드는 데 사용된 <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> 인스턴스에 추가되지 않습니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.CreatePerson">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /&gt;</ph> instance.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /&gt;</ph> 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.CreatePerson">
          <source>A new <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /&gt;</ph> instance.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.CreatePerson">
          <source>This method does not add the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationPerson&gt;</ph> object to the <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Authors%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Contributors%2A&gt;</ph> collections.</source>
          <target state="translated">이 메서드는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationPerson&gt;</ph> 개체를 <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Authors%2A&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Contributors%2A&gt;</ph> 컬렉션에 추가하지 않습니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Description">
          <source>Gets and sets a description of the feed.</source>
          <target state="translated">피드에 대한 설명을 가져오고 설정합니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Description">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" /&gt;</ph> object that represents the description of the feed.</source>
          <target state="translated">피드에 대한 설명을 나타내는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Description">
          <source>When serialized to Atom 1.0, <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Description%2A&gt;</ph> is written to a &lt;<ph id="ph2">`subtitle`</ph>&gt; element.</source>
          <target state="translated">Atom 1.0으로 serialize 될 때 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Description%2A&gt;</ph> 에 기록 되는 &lt;<ph id="ph2">`subtitle`</ph>&gt; 요소입니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Description">
          <source>When serialized to RSS 2.0, <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Description%2A&gt;</ph> is written to a &lt;<ph id="ph2">`description`</ph>&gt; element.</source>
          <target state="translated">RSS 2.0으로 serialize 될 때 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Description%2A&gt;</ph> 에 기록 되는 &lt;<ph id="ph2">`description`</ph>&gt; 요소입니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Description">
          <source>The following code shows how to set the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Description%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph>.</source>
          <target state="translated">다음 코드에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Description%2A&gt;</ph>의 <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph>를 설정하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Description">
          <source>The following XML shows how <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Description%2A&gt;</ph> is serialized to Atom 1.0.</source>
          <target state="translated">다음 XML에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Description%2A&gt;</ph>이 Atom 1.0으로 serialize되는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Description">
          <source>The following XML shows how <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Description%2A&gt;</ph> is serialized to RSS 2.0.</source>
          <target state="translated">다음 XML에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Description%2A&gt;</ph>이 RSS 2.0으로 serialize되는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Syndication.SyndicationFeed.ElementExtensions">
          <source>Gets the element extensions for the feed.</source>
          <target state="translated">피드의 요소 확장을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.ElementExtensions">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationElementExtensionCollection" /&gt;</ph> instance that contains the element extensions in the feed.</source>
          <target state="translated">피드의 요소 확장을 포함하는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationElementExtensionCollection" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.ElementExtensions">
          <source>Element extensions are valid XML elements that are not specified in either the Atom 1.0 or RSS 2.0 specifications.</source>
          <target state="translated">요소 확장은 Atom 1.0 또는 RSS 2.0 사양에 정의되지 않은 유효한 XML 요소입니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.ElementExtensions">
          <source>You can add any valid XML element as an extension, provided its namespace is different from the enclosing namespace.</source>
          <target state="translated">유효한 모든 XML 요소를 확장으로 추가할 수 있습니다. 단, XML 요소의 네임스페이스가 바깥쪽 네임스페이스와 달라야 합니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.ElementExtensions">
          <source><ph id="ph1">[!INCLUDE[crexample](~/includes/crexample-md.md)]</ph> adding element extensions, see the <bpt id="p1">[</bpt>Loosely-Typed Extensions<ept id="p1">](~/docs/framework/wcf/samples/loosely-typed-extensions-sample.md)</ept> sample.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crexample](~/includes/crexample-md.md)]</ph> 요소 확장을 추가, 참조는 <bpt id="p1">[</bpt>Loosely-Typed 확장<ept id="p1">](~/docs/framework/wcf/samples/loosely-typed-extensions-sample.md)</ept> 샘플.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.ElementExtensions">
          <source>The following code shows how to add element extensions to a <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> instance.</source>
          <target state="translated">다음 코드에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> 인스턴스에 요소 확장을 추가하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Generator">
          <source>Gets and sets the generator of the feed.</source>
          <target state="translated">피드 생성기를 가져오고 설정합니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Generator">
          <source>The name of the tool that generated the feed.</source>
          <target state="translated">피드를 생성한 도구의 이름입니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Generator">
          <source>When serialized to Atom 1.0 and RSS 2.0, the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Generator%2A&gt;</ph> is written to a &lt;<ph id="ph2">`generator`</ph>&gt; element.</source>
          <target state="translated">Atom 1.0 및 RSS 2.0으로 serialize 될 때는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Generator%2A&gt;</ph> 에 기록 되는 &lt;<ph id="ph2">`generator`</ph>&gt; 요소입니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Generator">
          <source>The following code shows how to set the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Generator%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph>.</source>
          <target state="translated">다음 코드에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Generator%2A&gt;</ph>의 <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph>를 설정하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Generator">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Generator%2A&gt;</ph> property is serialized to Atom 1.0 and RSS 2.0.</source>
          <target state="translated">다음 XML에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Generator%2A&gt;</ph> 속성이 Atom 1.0 및 RSS 2.0으로 serialize되는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.GetAtom10Formatter">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" /&gt;</ph> 인스턴스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.GetAtom10Formatter">
          <source>An <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.Atom10FeedFormatter" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Syndication.SyndicationFeed">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /&gt;</ph> 인스턴스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.GetRss20Formatter">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /&gt;</ph> 인스턴스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.GetRss20Formatter">
          <source>An <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.GetRss20Formatter(System.Boolean)">
          <source>A value that specifies whether to serialize element and attribute extensions with an Atom 1.0 namespace.</source>
          <target state="translated">Atom 1.0 네임스페이스를 사용하여 요소 및 특성 확장을 serialize할지 여부를 지정하는 값입니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.GetRss20Formatter(System.Boolean)">
          <source>Gets a new <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /&gt;</ph> instance.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /&gt;</ph> 인스턴스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.GetRss20Formatter(System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.GetRss20Formatter(System.Boolean)">
          <source>The RSS 2.0 specification allows elements and attributes that are not specified in its specification only if they are within a namespace.</source>
          <target state="translated">RSS 2.0 사양은 사양에 지정되지 않은 요소 및 특성이 네임스페이스에 속한 경우에만 이 요소 및 특성을 허용합니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.GetRss20Formatter(System.Boolean)">
          <source>When the <ph id="ph1">`serializedExtensionsAsAtom`</ph> parameter is <ph id="ph2">`true`</ph>, the formatter automatically adds the <ph id="ph3">`a10`</ph> namespace qualifier to all extensions; otherwise, the extensions are not serialized.</source>
          <target state="translated"><ph id="ph1">`serializedExtensionsAsAtom`</ph> 매개 변수가 <ph id="ph2">`true`</ph>이면 포맷터는 <ph id="ph3">`a10`</ph> 네임스페이스 한정자를 모든 확장에 추가하고, 그렇지 않으면 확장이 serialize되지 않습니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Id">
          <source>Gets and sets the ID of the feed.</source>
          <target state="translated">피드의 ID를 가져오고 설정합니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Id">
          <source>The ID of the feed.</source>
          <target state="translated">피드의 ID입니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Id">
          <source>When serialized to Atom 1.0, the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Id%2A&gt;</ph> is written to an &lt;<ph id="ph2">`id`</ph>&gt; element.</source>
          <target state="translated">Atom 1.0으로 serialize 될 때는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Id%2A&gt;</ph> 에 기록 되는 &lt;<ph id="ph2">`id`</ph>&gt; 요소입니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Id">
          <source>When serialized to RSS 2.0, the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Id%2A&gt;</ph> is written to an &lt;<ph id="ph2">`a10:id`</ph>&gt; element.</source>
          <target state="translated">RSS 2.0으로 serialize 될 때는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Id%2A&gt;</ph> 에 기록 되는 &lt;<ph id="ph2">`a10:id`</ph>&gt; 요소입니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Id">
          <source>The following code shows how to set the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Id%2A&gt;</ph> property on a <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> instance.</source>
          <target state="translated">다음 코드에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Id%2A&gt;</ph> 인스턴스에 <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> 속성을 설정하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Id">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Id%2A&gt;</ph> property is serialized to Atom 1.0.</source>
          <target state="translated">다음 XML에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Id%2A&gt;</ph> 속성이 Atom 1.0으로 serialize되는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Id">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Id%2A&gt;</ph> property is serialized to RSS 2.0.</source>
          <target state="translated">다음 XML에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Id%2A&gt;</ph> 속성이 RSS 2.0으로 serialize되는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl">
          <source>Gets and sets the image URL for the feed.</source>
          <target state="translated">피드의 이미지 URL을 가져오고 설정합니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl">
          <source>The URL for the image for the feed.</source>
          <target state="translated">피드의 이미지 URL입니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl">
          <source>When serialized to Atom 1.0, the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl%2A&gt;</ph> property is written to a &lt;<ph id="ph2">`logo`</ph>&gt; element.</source>
          <target state="translated">Atom 1.0으로 serialize 될 때는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl%2A&gt;</ph> 속성에 기록 되는 &lt;<ph id="ph2">`logo`</ph>&gt; 요소입니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl">
          <source>When serialized to RSS 2.0, the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl%2A&gt;</ph> property is written to an &lt;<ph id="ph2">`image`</ph>&gt; element.</source>
          <target state="translated">RSS 2.0으로 serialize 될 때는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl%2A&gt;</ph> 속성에 기록 되는 &lt;<ph id="ph2">`image`</ph>&gt; 요소입니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl">
          <source>The following code shows how to set the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl%2A&gt;</ph> on a <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> instance.</source>
          <target state="translated">다음 코드에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl%2A&gt;</ph> 인스턴스에 <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph>를 설정하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl%2A&gt;</ph> property is serialized to Atom 1.0.</source>
          <target state="translated">다음 XML에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl%2A&gt;</ph> 속성이 Atom 1.0으로 serialize되는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl%2A&gt;</ph> property is serialized to RSS 2.0.</source>
          <target state="translated">다음 XML에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.ImageUrl%2A&gt;</ph> 속성이 RSS 2.0으로 serialize되는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Items">
          <source>Gets a collection of the feed items contained in the feed.</source>
          <target state="translated">피드에 들어 있는 피드 항목 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Items">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationItem" /&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationItem" /&gt;</ph> 개체의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Items">
          <source>When serialized to Atom 1.0, the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A&gt;</ph> collection is written to &lt;<ph id="ph2">`entry`</ph>&gt; elements.</source>
          <target state="translated">Atom 1.0으로 serialize 될 때는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A&gt;</ph> 컬렉션에 쓰여집니다 &lt;<ph id="ph2">`entry`</ph>&gt; 요소입니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Items">
          <source>When serialized to Atom 1.0, the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A&gt;</ph> collection is written to &lt;<ph id="ph2">`item`</ph>&gt; elements.</source>
          <target state="translated">Atom 1.0으로 serialize 될 때는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A&gt;</ph> 컬렉션에 쓰여집니다 &lt;<ph id="ph2">`item`</ph>&gt; 요소입니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Items">
          <source>The following code shows how to set the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A&gt;</ph> collection of a <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> instance.</source>
          <target state="translated">다음 코드에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A&gt;</ph> 인스턴스의 <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> 컬렉션을 설정하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Items">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A&gt;</ph> collection is serialized to Atom 1.0.</source>
          <target state="translated">다음 XML에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A&gt;</ph> 컬렉션이 Atom 1.0으로 serialize되는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Items">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A&gt;</ph> collection is serialized to RSS 2.0.</source>
          <target state="translated">다음 XML에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Items%2A&gt;</ph> 컬렉션이 RSS 2.0으로 serialize되는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Language">
          <source>Gets and sets the language of the feed.</source>
          <target state="translated">피드의 언어를 가져오고 설정합니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Language">
          <source>The name of the language the feed is written in.</source>
          <target state="translated">피드가 기록된 언어의 이름입니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Language">
          <source>When serialized to Atom 1.0, the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Language%2A&gt;</ph> property is written to the <ph id="ph2">`lang`</ph> attribute in the &lt;<ph id="ph3">`feed`</ph>&gt; element.</source>
          <target state="translated">Atom 1.0으로 serialize 될 때는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Language%2A&gt;</ph> 속성에 기록 되는 <ph id="ph2">`lang`</ph> 특성에 &lt;<ph id="ph3">`feed`</ph>&gt; 요소입니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Language">
          <source>When serialized to RSS 2.0, the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Language%2A&gt;</ph> property is written to the &lt;<ph id="ph2">`language`</ph>&gt; element.</source>
          <target state="translated">RSS 2.0으로 serialize 될 때는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Language%2A&gt;</ph> 속성에 기록 되는 &lt;<ph id="ph2">`language`</ph>&gt; 요소입니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Language">
          <source>The following code shows how to set the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Language%2A&gt;</ph> property on a <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> instance.</source>
          <target state="translated">다음 코드에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Language%2A&gt;</ph> 인스턴스에 <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> 속성을 설정하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Language">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Language%2A&gt;</ph> property is serialized to Atom 1.0.</source>
          <target state="translated">다음 XML에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Language%2A&gt;</ph> 속성이 Atom 1.0으로 serialize되는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Language">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Language%2A&gt;</ph> property is serialized to RSS 2.0.</source>
          <target state="translated">다음 XML에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Language%2A&gt;</ph> 속성이 RSS 2.0으로 serialize되는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime">
          <source>Gets and sets the time the feed was last updated.</source>
          <target state="translated">피드가 마지막으로 업데이트된 시간을 가져오고 설정합니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime">
          <source>A <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> instance set to the time the feed was last updated.</source>
          <target state="translated">피드가 마지막으로 업데이트된 시간으로 설정된 <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime">
          <source>When serialized to Atom 1.0, the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime%2A&gt;</ph> property is written to an &lt;<ph id="ph2">`updated`</ph>&gt;element.</source>
          <target state="translated">Atom 1.0으로 serialize 될 때는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime%2A&gt;</ph> 속성에 기록 되는 &lt;<ph id="ph2">`updated`</ph>&gt; 요소입니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime">
          <source>When serialized to RSS 2.0, the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime%2A&gt;</ph> property is written to a &lt;<ph id="ph2">`lastBuildDate`</ph>&gt; element.</source>
          <target state="translated">RSS 2.0으로 serialize 될 때는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime%2A&gt;</ph> 속성에 기록 되는 &lt;<ph id="ph2">`lastBuildDate`</ph>&gt; 요소입니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime">
          <source>The following code shows how to se the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime%2A&gt;</ph> property on a <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> instance.</source>
          <target state="translated">다음 코드에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime%2A&gt;</ph> 인스턴스에 <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> 속성을 설정하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime%2A&gt;</ph> property is serialized to Atom 1.0.</source>
          <target state="translated">다음 XML에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime%2A&gt;</ph> 속성이 Atom 1.0으로 serialize되는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime%2A&gt;</ph> property is serialized to RSS 2.0.</source>
          <target state="translated">다음 XML에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.LastUpdatedTime%2A&gt;</ph> 속성이 RSS 2.0으로 serialize되는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Links">
          <source>Gets the links associated with the feed.</source>
          <target state="translated">피드와 연결된 링크를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Links">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationLink" /&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationLink" /&gt;</ph> 개체의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Links">
          <source>When serialized to Atom 1.0, the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Links%2A&gt;</ph> collection is written to a number of &lt;<ph id="ph2">`link`</ph>&gt; elements.</source>
          <target state="translated">Atom 1.0으로 serialize 될 때는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Links%2A&gt;</ph> 컬렉션 수의 쓰여집니다 &lt;<ph id="ph2">`link`</ph>&gt; 요소입니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Links">
          <source>When serialized to RSS 2.0, the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Links%2A&gt;</ph> collection is written to a number of &lt;<ph id="ph2">`a10:link`</ph>&gt; elements.</source>
          <target state="translated">RSS 2.0으로 serialize 될 때는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Links%2A&gt;</ph> 컬렉션 수의 쓰여집니다 &lt;<ph id="ph2">`a10:link`</ph>&gt; 요소입니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Links">
          <source>The following code shows how to add a link to the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Links%2A&gt;</ph> collection of a <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> instance.</source>
          <target state="translated">다음 코드에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Links%2A&gt;</ph> 인스턴스의 <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> 컬렉션에 링크를 추가하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Links">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Links%2A&gt;</ph> collection is serialized to Atom 1.0.</source>
          <target state="translated">다음 XML에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Links%2A&gt;</ph> 컬렉션이 Atom 1.0으로 serialize되는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Links">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Links%2A&gt;</ph> collection is serialized to RSS 2.0.</source>
          <target state="translated">다음 XML에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Links%2A&gt;</ph> 컬렉션이 RSS 2.0으로 serialize되는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.Load(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> to load the feed from.</source>
          <target state="translated">피드를 로드할 소스 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.Load(System.Xml.XmlReader)">
          <source>Loads a syndication feed from the specified XML reader.</source>
          <target state="translated">지정된 XML 판독기로부터 배포 피드를 로드합니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.Load(System.Xml.XmlReader)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> that contains the loaded contents.</source>
          <target state="translated">로드한 콘텐츠를 포함하는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.Load(System.Xml.XmlReader)">
          <source>The following example demonstrates how to call this method.</source>
          <target state="translated">다음 예제에서는 이 메서드의 호출 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.Load``1(System.Xml.XmlReader)">
          <source>The syndication feed type.</source>
          <target state="translated">배포 피드 형식입니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.Load``1(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> to read from.</source>
          <target state="translated">읽을 소스 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.Load``1(System.Xml.XmlReader)">
          <source>Loads a <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph>-derived instance from the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph>에서 <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 파생 인스턴스를 로드합니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.Load``1(System.Xml.XmlReader)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph>-derived instance that contains the feed.</source>
          <target state="translated">피드를 포함하는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /&gt;</ph> 파생 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.Load``1(System.Xml.XmlReader)">
          <source>Use this method when you are loading a syndication item into a class derived from <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph>에서 파생된 클래스로 배포 항목을 로드할 때 이 메서드를 사용합니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.Load``1(System.Xml.XmlReader)">
          <source>The following code shows how to load a syndication feed from an <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance.</source>
          <target state="translated">다음 코드에서는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 인스턴스에서 배포 피드를 로드하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.Load``1(System.Xml.XmlReader)">
          <source>Invalid XML encountered during read.</source>
          <target state="translated">읽는 동안 잘못된 XML이 발견된 경우</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.SaveAsAtom10(System.Xml.XmlWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> to write to.</source>
          <target state="translated">쓸 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.SaveAsAtom10(System.Xml.XmlWriter)">
          <source>Write the syndication feed to the specified <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> in Atom 1.0 format.</source>
          <target state="translated">배포 피드를 지정된 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>에 Atom 1.0 형식으로 씁니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.SaveAsAtom10(System.Xml.XmlWriter)">
          <source>The following code shows how to write out a <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> instance in the Atom 1.0 format.</source>
          <target state="translated">다음 코드에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> 인스턴스를 Atom 1.0 형식으로 기록하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.SaveAsRss20(System.Xml.XmlWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> to write to.</source>
          <target state="translated">쓸 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.SaveAsRss20(System.Xml.XmlWriter)">
          <source>Write the syndication feed to the specified <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> in RSS 2.0 format.</source>
          <target state="translated">배포 피드를 지정된 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>에 RSS 2.0 형식으로 씁니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.SaveAsRss20(System.Xml.XmlWriter)">
          <source>The following code shows how to write out a <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> instance in the RSS 2.0 format.</source>
          <target state="translated">다음 코드에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> 인스턴스를 RSS 2.0 형식으로 기록하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Title">
          <source>Gets and sets the title of the feed.</source>
          <target state="translated">피드의 제목을 가져오고 설정합니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Title">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" /&gt;</ph> instance that contains the title of the feed.</source>
          <target state="translated">피드의 제목을 포함하는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.TextSyndicationContent" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Title">
          <source>When serialized to Atom 1.0 and RSS 2.0, the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Title%2A&gt;</ph> property is written to a &lt;<ph id="ph2">`title`</ph>&gt; element.</source>
          <target state="translated">Atom 1.0 및 RSS 2.0으로 serialize 될 때는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Title%2A&gt;</ph> 속성에 기록 되는 &lt;<ph id="ph2">`title`</ph>&gt; 요소입니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Title">
          <source>The following code shows how to set the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Title%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> instance.</source>
          <target state="translated">다음 코드에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Title%2A&gt;</ph> 인스턴스의 <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> 속성을 설정하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Title">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Title%2A&gt;</ph> property is serialized to Atom 1.0.</source>
          <target state="translated">다음 XML에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Title%2A&gt;</ph> 속성이 Atom 1.0으로 serialize되는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationFeed.Title">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Title%2A&gt;</ph> property is serialized to RSS 2.0.</source>
          <target state="translated">다음 XML에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed.Title%2A&gt;</ph> 속성이 RSS 2.0으로 serialize되는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.TryParseAttribute(System.String,System.String,System.String,System.String)">
          <source>The name of the element.</source>
          <target state="translated">요소의 이름을 나타내며</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.TryParseAttribute(System.String,System.String,System.String,System.String)">
          <source>The namespace of the element.</source>
          <target state="translated">요소의 네임스페이스입니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.TryParseAttribute(System.String,System.String,System.String,System.String)">
          <source>The attribute to parse.</source>
          <target state="translated">구문 분석할 특성입니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.TryParseAttribute(System.String,System.String,System.String,System.String)">
          <source>The syndication version to use when parsing.</source>
          <target state="translated">구문 분석 시 사용할 배포 버전입니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.TryParseAttribute(System.String,System.String,System.String,System.String)">
          <source>Attempts to parse an attribute extension.</source>
          <target state="translated">특성 확장의 구문 분석을 시도합니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.TryParseAttribute(System.String,System.String,System.String,System.String)">
          <source>A value that specifies whether the attribute extension was parsed successfully.</source>
          <target state="translated">특성 확장이 성공적으로 구문 분석되었는지 여부를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.TryParseAttribute(System.String,System.String,System.String,System.String)">
          <source>Attribute extensions are custom attributes that are not defined by the Atom 1.0 or RSS 2.0 specifications.</source>
          <target state="translated">특성 확장은 Atom 1.0 또는 RSS 2.0 사양에 정의되지 않은 사용자 지정 특성입니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.TryParseAttribute(System.String,System.String,System.String,System.String)">
          <source>They are serialized as an attribute of the &lt;<ph id="ph1">`feed`</ph>&gt; (for Atom 1.0) or &lt;<ph id="ph2">`rss`</ph>&gt; (for RSS 1.0) element, which depends upon the syndication version being used.</source>
          <target state="translated">특성으로 serialize 되는 &lt;<ph id="ph1">`feed`</ph>&gt; (Atom 1.0)에 대 한 또는 &lt;<ph id="ph2">`rss`</ph>&gt; (RSS 1.0)에 대 한 사용 되는 배포 버전에 따라 달라 지는 요소입니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.TryParseAttribute(System.String,System.String,System.String,System.String)">
          <source>This method is an extension point that allows you to handle the deserialization of a custom attribute extension.</source>
          <target state="translated">이 메서드는 사용자 지정 특성 확장의 deserialization을 처리할 수 있는 확장명 지점입니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.TryParseAttribute(System.String,System.String,System.String,System.String)">
          <source>To do this, you must derive a class from <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> and override this method.</source>
          <target state="translated">이렇게 하려면 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph>에서 클래스를 파생시키고 이 메서드를 재정의해야 합니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.TryParseAttribute(System.String,System.String,System.String,System.String)">
          <source>This method is called for all unrecognized attribute extensions.</source>
          <target state="translated">이 메서드는 인식할 수 없는 모든 특성 확장에 대해 호출됩니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.TryParseAttribute(System.String,System.String,System.String,System.String)">
          <source>Invalid XML Encountered during read.</source>
          <target state="translated">읽는 동안 잘못된 XML이 발견된 경우</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.TryParseElement(System.Xml.XmlReader,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> to read from.</source>
          <target state="translated">읽을 소스 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.TryParseElement(System.Xml.XmlReader,System.String)">
          <source>The syndication version to use while parsing.</source>
          <target state="translated">구문 분석 중 사용할 배포 버전입니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.TryParseElement(System.Xml.XmlReader,System.String)">
          <source>Attempts to parse an element extension.</source>
          <target state="translated">요소 확장의 구문 분석을 시도합니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.TryParseElement(System.Xml.XmlReader,System.String)">
          <source>A value that specifies whether the element extension was parsed successfully.</source>
          <target state="translated">요소 확장이 성공적으로 구문 분석되었는지 여부를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.TryParseElement(System.Xml.XmlReader,System.String)">
          <source>Element extensions are valid XML elements that are not specified in either the Atom 1.0 or RSS 2.0 specifications.</source>
          <target state="translated">요소 확장은 Atom 1.0 또는 RSS 2.0 사양에 정의되지 않은 유효한 XML 요소입니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.TryParseElement(System.Xml.XmlReader,System.String)">
          <source>You can add any valid XML element as an extension, provided its namespace is different from the enclosing namespace.</source>
          <target state="translated">유효한 모든 XML 요소를 확장으로 추가할 수 있습니다. 단, XML 요소의 네임스페이스가 바깥쪽 네임스페이스와 달라야 합니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.TryParseElement(System.Xml.XmlReader,System.String)">
          <source>This method is an extension point that allows you to handle the deserialization of a custom element extension.</source>
          <target state="translated">이 메서드는 사용자 지정 요소 확장의 deserialization을 처리할 수 있는 확장 지점입니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.TryParseElement(System.Xml.XmlReader,System.String)">
          <source>To do this, you must derive a class from <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> and override this method.</source>
          <target state="translated">이렇게 하려면 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph>에서 클래스를 파생시키고 이 메서드를 재정의해야 합니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.TryParseElement(System.Xml.XmlReader,System.String)">
          <source>This method is called for all unrecognized element extensions.</source>
          <target state="translated">이 메서드는 인식할 수 없는 모든 요소 확장에 대해 호출됩니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.TryParseElement(System.Xml.XmlReader,System.String)">
          <source>Invalid XML encountered during read.</source>
          <target state="translated">읽는 동안 잘못된 XML이 발견된 경우</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> to write to.</source>
          <target state="translated">쓸 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)">
          <source>The syndication version to use while writing.</source>
          <target state="translated">작성 중 사용할 배포 버전입니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)">
          <source>Writes the attribute extensions to the specified <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> using the specified syndication version.</source>
          <target state="translated">지정된 배포 버전을 사용하여 지정된 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>에 특성 확장을 씁니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)">
          <source>Attribute extensions are custom attributes that are not defined by the Atom 1.0 or RSS 2.0 specifications.</source>
          <target state="translated">특성 확장은 Atom 1.0 또는 RSS 2.0 사양에 정의되지 않은 사용자 지정 특성입니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)">
          <source>They are serialized as an attribute of the &lt;<ph id="ph1">`feed`</ph>&gt; (for Atom 1.0) or &lt;<ph id="ph2">`rss`</ph>&gt; (for RSS 1.0) element, which depends upon the syndication version being used.</source>
          <target state="translated">특성으로 serialize 되는 &lt;<ph id="ph1">`feed`</ph>&gt; (Atom 1.0)에 대 한 또는 &lt;<ph id="ph2">`rss`</ph>&gt; (RSS 1.0)에 대 한 사용 되는 배포 버전에 따라 달라 지는 요소입니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)">
          <source>This method is an extension point that allows you to handle the serialization of custom attribute extensions.</source>
          <target state="translated">이 메서드는 사용자 지정 특성 확장의 serialization을 처리할 수 있는 확장명 지점입니다.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)">
          <source>To do this, you must derive a class from <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> and override this method.</source>
          <target state="translated">이렇게 하려면 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph>에서 클래스를 파생시키고 이 메서드를 재정의해야 합니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)">
          <source>This method is called for all unrecognized attribute extensions.</source>
          <target state="translated">이 메서드는 인식할 수 없는 모든 특성 확장에 대해 호출됩니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.WriteElementExtensions(System.Xml.XmlWriter,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> to write to.</source>
          <target state="translated">쓸 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.WriteElementExtensions(System.Xml.XmlWriter,System.String)">
          <source>The syndication version to use while writing.</source>
          <target state="translated">작성 중 사용할 배포 버전입니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationFeed.WriteElementExtensions(System.Xml.XmlWriter,System.String)">
          <source>Writes the element extensions to the specified <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> using the specified syndication version.</source>
          <target state="translated">지정된 배포 버전을 사용하여 지정된 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>에 요소 확장을 씁니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.WriteElementExtensions(System.Xml.XmlWriter,System.String)">
          <source>Element extensions are valid XML elements that are not specified in either the Atom 1.0 or RSS 2.0 specifications.</source>
          <target state="translated">요소 확장은 Atom 1.0 또는 RSS 2.0 사양에 정의되지 않은 유효한 XML 요소입니다.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.WriteElementExtensions(System.Xml.XmlWriter,System.String)">
          <source>You can add any valid XML element as an extension, provided its namespace is different from the enclosing namespace.</source>
          <target state="translated">유효한 모든 XML 요소를 확장으로 추가할 수 있습니다. 단, XML 요소의 네임스페이스가 바깥쪽 네임스페이스와 달라야 합니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.WriteElementExtensions(System.Xml.XmlWriter,System.String)">
          <source>This method is an extension point that allows you to handle the serialization of custom element extensions.</source>
          <target state="translated">이 메서드는 사용자 지정 요소 확장의 serialization을 처리할 수 있는 확장 지점입니다.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.WriteElementExtensions(System.Xml.XmlWriter,System.String)">
          <source>To do this, you must derive a class from <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> and override this method.</source>
          <target state="translated">이렇게 하려면 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph>에서 클래스를 파생시키고 이 메서드를 재정의해야 합니다.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationFeed.WriteElementExtensions(System.Xml.XmlWriter,System.String)">
          <source>This method is called for all unrecognized element extensions.</source>
          <target state="translated">이 메서드는 인식할 수 없는 모든 요소 확장에 대해 호출됩니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>