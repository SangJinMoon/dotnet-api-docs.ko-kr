<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SyndicationCategory.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac59cfb965f6fc1e3a6998c4bbf999f6c240e2dbbe3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9cfb965f6fc1e3a6998c4bbf999f6c240e2dbbe3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Syndication.SyndicationCategory">
          <source>A class that represents the category of a syndication feed.</source>
          <target state="translated">배포 피드의 범주를 나타내는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationCategory">
          <source>A category allows you to assign one or more keywords that can be used to search for information.</source>
          <target state="translated">범주를 사용하여 정보 검색에 사용 가능한 키워드를 하나 이상 할당할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationCategory">
          <source>The following code shows how to create a <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> and add a <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationItem&gt;</ph> with a <ph id="ph3">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory&gt;</ph>.</source>
          <target state="translated">다음 코드에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph>를 만들고 <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationItem&gt;</ph>를 사용하여 <ph id="ph3">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory&gt;</ph>을 추가하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Syndication.SyndicationCategory">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationCategory.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationCategory.#ctor(System.ServiceModel.Syndication.SyndicationCategory)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /&gt;</ph> instance to initialize the new <ph id="ph2">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /&gt;</ph> instance.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /&gt;</ph> 인스턴스를 초기화할 <ph id="ph2">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationCategory.#ctor(System.ServiceModel.Syndication.SyndicationCategory)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /&gt;</ph> instance.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /&gt;</ph> 인스턴스를 사용하여 <ph id="ph2">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationCategory.#ctor(System.String)">
          <source>The name of the category.</source>
          <target state="translated">범주 이름입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationCategory.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /&gt;</ph> class with the given name.</source>
          <target state="translated">지정된 이름을 사용하여 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationCategory.#ctor(System.String)">
          <source>The following code shows how to create a <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> and add a <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationItem&gt;</ph> with a <ph id="ph3">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory&gt;</ph>.</source>
          <target state="translated">다음 코드에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph>를 만들고 <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationItem&gt;</ph>를 사용하여 <ph id="ph3">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory&gt;</ph>을 추가하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationCategory.#ctor(System.String,System.String,System.String)">
          <source>The name of the category.</source>
          <target state="translated">범주 이름입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationCategory.#ctor(System.String,System.String,System.String)">
          <source>A Uniform Resource Identifier (URI) that represents the categorization scheme to which this category belongs.</source>
          <target state="translated">이 범주를 포함하는 범주 체계를 나타내는 URI(Uniform Resource Identifier)입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationCategory.#ctor(System.String,System.String,System.String)">
          <source>A human-readable attribute that describes the category.</source>
          <target state="translated">범주를 설명하는, 사용자가 읽고 이해할 수 있는 특성입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationCategory.#ctor(System.String,System.String,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /&gt;</ph> class with the specified name, scheme, and label.</source>
          <target state="translated">지정된 이름, 체계 및 레이블을 사용하여 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationCategory.#ctor(System.String,System.String,System.String)">
          <source>The following code demonstrates how to call this constructor.</source>
          <target state="translated">다음 코드에서는 이 생성자를 호출하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Syndication.SyndicationCategory.AttributeExtensions">
          <source>Gets the attribute extensions for this category.</source>
          <target state="translated">이 범주의 특성 확장을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationCategory.AttributeExtensions">
          <source>The attribute extensions for this category.</source>
          <target state="translated">이 범주의 특성 확장입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationCategory.AttributeExtensions">
          <source>The syndication object model allows you to add custom attributes to a <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory&gt;</ph> instance.</source>
          <target state="translated">배포 개체 모델을 사용하면 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory&gt;</ph> 인스턴스에 사용자 지정 특성을 추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationCategory.AttributeExtensions">
          <source>Attribute extensions are custom attributes that are not defined by the Atom 1.0 or RSS 2.0 specifications.</source>
          <target state="translated">특성 확장은 Atom 1.0 또는 RSS 2.0 사양에 정의되지 않은 사용자 지정 특성입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationCategory.AttributeExtensions">
          <source>They are serialized as an attribute of the <ph id="ph1">`&lt;category&gt;`</ph> element.</source>
          <target state="translated">이러한 특성은 <ph id="ph1">`&lt;category&gt;`</ph> 요소의 특성으로서 serialize됩니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationCategory.Clone">
          <source>Creates a copy of a <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /&gt;</ph> 인스턴스의 복사본을 만듭니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationCategory.Clone">
          <source>A new <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /&gt;</ph> instance.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationCategory" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Syndication.SyndicationCategory.ElementExtensions">
          <source>Gets the element extensions for this category.</source>
          <target state="translated">이 범주의 요소 확장을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationCategory.ElementExtensions">
          <source>A collection of element extensions.</source>
          <target state="translated">요소 확장 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationCategory.ElementExtensions">
          <source>Element extensions are valid XML elements that are not specified in either the Atom 1.0 or RSS 2.0 specification.</source>
          <target state="translated">요소 확장은 Atom 1.0 또는 RSS 2.0 사양에 정의되지 않은 유효한 XML 요소입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationCategory.ElementExtensions">
          <source>You can add any valid XML element as an extension, provided its namespace is different from the enclosing namespace.</source>
          <target state="translated">유효한 모든 XML 요소를 확장으로 추가할 수 있습니다. 단, XML 요소의 네임스페이스가 바깥쪽 네임스페이스와 달라야 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationCategory.ElementExtensions">
          <source>The following XML shows how a <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory&gt;</ph> with a custom element is serialized to Atom 1.0.</source>
          <target state="translated">다음 XML은 사용자 지정 요소가 있는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory&gt;</ph>가 Atom 1.0으로 serialize되는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationCategory.ElementExtensions">
          <source>Custom elements within <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory&gt;</ph> instances are not serialized to RSS 2.0.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory&gt;</ph> 인스턴스 내의 사용자 지정 요소는 RSS 2.0으로 serialize되지 않습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Syndication.SyndicationCategory.Label">
          <source>Gets and sets the label of the category.</source>
          <target state="translated">범주의 레이블을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationCategory.Label">
          <source>The label of the category.</source>
          <target state="translated">범주의 레이블입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationCategory.Label">
          <source>When serialized to Atom 1.0, the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory.Label%2A&gt;</ph> is written to the <ph id="ph2">`label`</ph> attribute of the &lt;<ph id="ph3">`category`</ph>&gt; element.</source>
          <target state="translated">Atom 1.0으로 serialize 될 때는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory.Label%2A&gt;</ph> 에 기록 되는 <ph id="ph2">`label`</ph> 특성에는 &lt;<ph id="ph3">`category`</ph>&gt; 요소 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationCategory.Label">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory.Label%2A&gt;</ph> is not serialized to RSS 2.0.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory.Label%2A&gt;</ph>은 RSS 2.0으로 serialize되지 않습니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationCategory.Label">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory.Label%2A&gt;</ph> property is serialized to Atom 1.0.</source>
          <target state="translated">다음 XML에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory.Label%2A&gt;</ph> 속성이 Atom 1.0으로 serialize되는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Syndication.SyndicationCategory.Name">
          <source>Gets and sets the name of the category.</source>
          <target state="translated">범주의 이름을 가져오고 설정합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationCategory.Name">
          <source>The name of the category.</source>
          <target state="translated">범주 이름입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationCategory.Name">
          <source>When serialized to Atom 1.0, the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory.Name%2A&gt;</ph> is written to the <ph id="ph2">`term`</ph> attribute of the &lt;<ph id="ph3">`category`</ph>&gt; element.</source>
          <target state="translated">Atom 1.0으로 serialize 될 때는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory.Name%2A&gt;</ph> 에 기록 되는 <ph id="ph2">`term`</ph> 특성에는 &lt;<ph id="ph3">`category`</ph>&gt; 요소 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationCategory.Name">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory.Label%2A&gt;</ph> is not serialized to RSS 2.0.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory.Label%2A&gt;</ph>은 RSS 2.0으로 serialize되지 않습니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationCategory.Name">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory.Name%2A&gt;</ph> property is serialized to Atom 1.0.</source>
          <target state="translated">다음 XML에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory.Name%2A&gt;</ph> 속성이 Atom 1.0으로 serialize되는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Syndication.SyndicationCategory.Scheme">
          <source>Gets and sets the scheme of the category.</source>
          <target state="translated">범주의 체계를 가져오고 설정합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationCategory.Scheme">
          <source>The scheme of the category.</source>
          <target state="translated">범주의 체계입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationCategory.Scheme">
          <source>When serialized to Atom 1.0, the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory.Scheme%2A&gt;</ph> property is written to the <ph id="ph2">`scheme`</ph> attribute of the &lt;<ph id="ph3">`category`</ph>&gt; element.</source>
          <target state="translated">Atom 1.0으로 serialize 될 때는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory.Scheme%2A&gt;</ph> 속성에 기록 되는 <ph id="ph2">`scheme`</ph> 특성에는 &lt;<ph id="ph3">`category`</ph>&gt; 요소.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationCategory.Scheme">
          <source>When serialized to RSS 2.0, the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory.Scheme%2A&gt;</ph> property is written to the <ph id="ph2">`domain`</ph> attribute of the &lt;<ph id="ph3">`category`</ph>&gt; element.</source>
          <target state="translated">RSS 2.0으로 serialize 될 때는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory.Scheme%2A&gt;</ph> 속성에 기록 되는 <ph id="ph2">`domain`</ph> 특성에는 &lt;<ph id="ph3">`category`</ph>&gt; 요소입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationCategory.Scheme">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory.Scheme%2A&gt;</ph> property is serialized to Atom 1.0.</source>
          <target state="translated">다음 XML에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory.Scheme%2A&gt;</ph> 속성이 Atom 1.0으로 serialize되는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationCategory.Scheme">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory.Scheme%2A&gt;</ph> property is serialized to RSS 2.0.</source>
          <target state="translated">다음 XML에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory.Scheme%2A&gt;</ph> 속성이 RSS 2.0으로 serialize되는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationCategory.TryParseAttribute(System.String,System.String,System.String,System.String)">
          <source>The name of the element.</source>
          <target state="translated">요소의 이름을 나타내며</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationCategory.TryParseAttribute(System.String,System.String,System.String,System.String)">
          <source>The namespace of the element.</source>
          <target state="translated">요소의 네임스페이스입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationCategory.TryParseAttribute(System.String,System.String,System.String,System.String)">
          <source>The attribute to parse.</source>
          <target state="translated">구문 분석할 특성입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationCategory.TryParseAttribute(System.String,System.String,System.String,System.String)">
          <source>The syndication version to use when parsing.</source>
          <target state="translated">구문 분석 시 사용할 배포 버전입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationCategory.TryParseAttribute(System.String,System.String,System.String,System.String)">
          <source>Attempts to parse an attribute extension.</source>
          <target state="translated">특성 확장의 구문 분석을 시도합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationCategory.TryParseAttribute(System.String,System.String,System.String,System.String)">
          <source>A value that specifies whether the attribute extension was parsed successfully.</source>
          <target state="translated">특성 확장이 성공적으로 구문 분석되었는지 여부를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationCategory.TryParseAttribute(System.String,System.String,System.String,System.String)">
          <source>Attribute extensions are custom attributes that are not defined by the Atom 1.0 or RSS 2.0 specifications.</source>
          <target state="translated">특성 확장은 Atom 1.0 또는 RSS 2.0 사양에 정의되지 않은 사용자 지정 특성입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationCategory.TryParseAttribute(System.String,System.String,System.String,System.String)">
          <source>They are serialized as an attribute of the <ph id="ph1">`&lt;category&gt;`</ph> element.</source>
          <target state="translated">이러한 특성은 <ph id="ph1">`&lt;category&gt;`</ph> 요소의 특성으로서 serialize됩니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationCategory.TryParseAttribute(System.String,System.String,System.String,System.String)">
          <source>This method is an extension point that allows you to handle the deserialization of a custom attribute extension.</source>
          <target state="translated">이 메서드는 사용자 지정 특성 확장의 deserialization을 처리할 수 있는 확장 지점입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationCategory.TryParseAttribute(System.String,System.String,System.String,System.String)">
          <source>To do this, derive a class from <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory&gt;</ph> and override this method.</source>
          <target state="translated">이렇게 하려면 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory&gt;</ph>에서 클래스를 파생시키고 이 메서드를 재정의합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationCategory.TryParseAttribute(System.String,System.String,System.String,System.String)">
          <source>This method is called for all unrecognized attribute extensions.</source>
          <target state="translated">이 메서드는 인식할 수 없는 모든 특성 확장에 대해 호출됩니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationCategory.TryParseAttribute(System.String,System.String,System.String,System.String)">
          <source>Invalid XML encountered during read.</source>
          <target state="translated">읽는 동안 잘못된 XML이 발견된 경우</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationCategory.TryParseElement(System.Xml.XmlReader,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> to read from.</source>
          <target state="translated">읽을 소스 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationCategory.TryParseElement(System.Xml.XmlReader,System.String)">
          <source>The syndication version to use while parsing.</source>
          <target state="translated">구문 분석 중 사용할 배포 버전입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationCategory.TryParseElement(System.Xml.XmlReader,System.String)">
          <source>Attempts to parse an element extension.</source>
          <target state="translated">요소 확장의 구문 분석을 시도합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationCategory.TryParseElement(System.Xml.XmlReader,System.String)">
          <source>A value that specifies whether the element extension has been parsed successfully.</source>
          <target state="translated">요소 확장이 성공적으로 구문 분석되었는지 여부를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationCategory.TryParseElement(System.Xml.XmlReader,System.String)">
          <source>Element extensions are valid XML elements that are not specified in either the Atom 1.0 or RSS 2.0 specifications.</source>
          <target state="translated">요소 확장은 Atom 1.0 또는 RSS 2.0 사양에 정의되지 않은 유효한 XML 요소입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationCategory.TryParseElement(System.Xml.XmlReader,System.String)">
          <source>You can add any valid XML element as an extension, provided its namespace is different from the enclosing namespace.</source>
          <target state="translated">유효한 모든 XML 요소를 확장으로 추가할 수 있습니다. 단, XML 요소의 네임스페이스가 바깥쪽 네임스페이스와 달라야 합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationCategory.TryParseElement(System.Xml.XmlReader,System.String)">
          <source>This method is an extension point that allows you to handle the deserialization of a custom element extension.</source>
          <target state="translated">이 메서드는 사용자 지정 요소 확장의 deserialization을 처리할 수 있는 확장명 지점입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationCategory.TryParseElement(System.Xml.XmlReader,System.String)">
          <source>To do this, derive a class from <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory&gt;</ph> and override this method.</source>
          <target state="translated">이렇게 하려면 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory&gt;</ph>에서 클래스를 파생시키고 이 메서드를 재정의합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationCategory.TryParseElement(System.Xml.XmlReader,System.String)">
          <source>This method is called for all unrecognized attribute extensions.</source>
          <target state="translated">이 메서드는 인식할 수 없는 모든 특성 확장에 대해 호출됩니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationCategory.TryParseElement(System.Xml.XmlReader,System.String)">
          <source>Invalid XML encountered during read.</source>
          <target state="translated">읽는 동안 잘못된 XML이 발견된 경우</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationCategory.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> to write to.</source>
          <target state="translated">쓸 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationCategory.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)">
          <source>The syndication version to use while writing.</source>
          <target state="translated">작성 중 사용할 배포 버전입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationCategory.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)">
          <source>Writes the attribute extensions to the specified writer.</source>
          <target state="translated">지정된 작성기에 특성 확장을 씁니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationCategory.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)">
          <source>Attribute extensions are custom attributes that are not defined by the Atom 1.0 or RSS 2.0 specifications.</source>
          <target state="translated">특성 확장은 Atom 1.0 또는 RSS 2.0 사양에 정의되지 않은 사용자 지정 특성입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationCategory.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)">
          <source>They are serialized as an attribute of the <ph id="ph1">`&lt;category&gt;`</ph> element.</source>
          <target state="translated">이러한 특성은 <ph id="ph1">`&lt;category&gt;`</ph> 요소의 특성으로서 serialize됩니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationCategory.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)">
          <source>This method is an extension point that allows you to handle the serialization of custom attribute extensions.</source>
          <target state="translated">이 메서드는 사용자 지정 특성 확장의 serialization을 처리할 수 있는 확장 지점입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationCategory.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)">
          <source>To do this, derive a class from <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory&gt;</ph> and override this method.</source>
          <target state="translated">이렇게 하려면 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory&gt;</ph>에서 클래스를 파생시키고 이 메서드를 재정의합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationCategory.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)">
          <source>This method is called for all unrecognized attribute extensions.</source>
          <target state="translated">이 메서드는 인식할 수 없는 모든 특성 확장에 대해 호출됩니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationCategory.WriteElementExtensions(System.Xml.XmlWriter,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> to write to.</source>
          <target state="translated">쓸 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationCategory.WriteElementExtensions(System.Xml.XmlWriter,System.String)">
          <source>The syndication version to use while writing.</source>
          <target state="translated">작성 중 사용할 배포 버전입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationCategory.WriteElementExtensions(System.Xml.XmlWriter,System.String)">
          <source>Writes the element extensions to the specified writer.</source>
          <target state="translated">지정된 작성기에 요소 확장을 씁니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationCategory.WriteElementExtensions(System.Xml.XmlWriter,System.String)">
          <source>Element extensions are valid XML elements that are not specified in either the Atom 1.0 or RSS 2.0 specification.</source>
          <target state="translated">요소 확장은 Atom 1.0 또는 RSS 2.0 사양에 정의되지 않은 유효한 XML 요소입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationCategory.WriteElementExtensions(System.Xml.XmlWriter,System.String)">
          <source>You can add any valid XML element as an extension, provided its namespace is different from the enclosing namespace.</source>
          <target state="translated">유효한 모든 XML 요소를 확장으로 추가할 수 있습니다. 단, XML 요소의 네임스페이스가 바깥쪽 네임스페이스와 달라야 합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationCategory.WriteElementExtensions(System.Xml.XmlWriter,System.String)">
          <source>This method is an extension point that allows you to handle the serialization of custom element extensions.</source>
          <target state="translated">이 메서드는 사용자 지정 요소 확장의 serialization을 처리할 수 있는 확장명 지점입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationCategory.WriteElementExtensions(System.Xml.XmlWriter,System.String)">
          <source>To do this, derive a class from <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory&gt;</ph> and override this method.</source>
          <target state="translated">이렇게 하려면 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationCategory&gt;</ph>에서 클래스를 파생시키고 이 메서드를 재정의합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationCategory.WriteElementExtensions(System.Xml.XmlWriter,System.String)">
          <source>This method is called for all unrecognized element extensions.</source>
          <target state="translated">이 메서드는 인식할 수 없는 모든 요소 확장에 대해 호출됩니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>