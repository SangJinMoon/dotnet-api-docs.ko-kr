<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SyndicationLink.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5470d1ed20b2bc6ca0567f0ae9ec8e70b67d9369c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">470d1ed20b2bc6ca0567f0ae9ec8e70b67d9369c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Syndication.SyndicationLink">
          <source>Represents a link within a syndication feed or item.</source>
          <target state="translated">배포 피드 또는 항목 내부의 링크를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationLink">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationLink&gt;</ph> can be added to a <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> or <ph id="ph3">&lt;xref:System.ServiceModel.Syndication.SyndicationItem&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationLink&gt;</ph>는 <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationFeed&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.ServiceModel.Syndication.SyndicationItem&gt;</ph>에 추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationLink">
          <source>When serialized to Atom 1.0 a <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationLink&gt;</ph> is written out as a <ph id="ph2">`&lt;link&gt;`</ph> element, with the <ph id="ph3">&lt;xref:System.ServiceModel.Syndication.SyndicationLink&gt;</ph> properties written out as attributes of the <ph id="ph4">`&lt;link&gt;`</ph> element.</source>
          <target state="translated">Atom 1.0으로 serialize될 때 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationLink&gt;</ph>는 <ph id="ph2">`&lt;link&gt;`</ph> 요소로 기록되며, <ph id="ph3">&lt;xref:System.ServiceModel.Syndication.SyndicationLink&gt;</ph> 속성은 <ph id="ph4">`&lt;link&gt;`</ph> 요소의 특성으로 기록됩니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationLink">
          <source>When serialized to RSS 2.0, the first <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationLink&gt;</ph> with a relationship value of ‘alternate’ is written out as a <ph id="ph2">`&lt;link&gt;`</ph> element.</source>
          <target state="translated">RSS 2.0으로 serialize 될 때 첫 번째 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationLink&gt;</ph> 관계에 있는 '대체'의 값으로 기록 되는 <ph id="ph2">`&lt;link&gt;`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationLink">
          <source>Any additional links are written out as a <ph id="ph1">`&lt;a10:link&gt;`</ph> elements.</source>
          <target state="translated">추가 링크는 <ph id="ph1">`&lt;a10:link&gt;`</ph> 요소로 기록됩니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationLink">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationLink&gt;</ph> class.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationLink&gt;</ph> 클래스를 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Syndication.SyndicationLink">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationLink" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationLink" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationLink.#ctor">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationLink" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationLink" /&gt;</ph> 인스턴스의 새 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationLink.#ctor(System.ServiceModel.Syndication.SyndicationLink)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationLink" /&gt;</ph> instance used to initialize the new instance.</source>
          <target state="translated">새 인스턴스를 초기화하는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationLink" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationLink.#ctor(System.ServiceModel.Syndication.SyndicationLink)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationLink" /&gt;</ph> class with the specified instance.</source>
          <target state="translated">지정된 인스턴스를 사용하여 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationLink" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationLink.#ctor(System.Uri)">
          <source>The URI to the linked resource.</source>
          <target state="translated">링크된 리소스의 URI입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationLink.#ctor(System.Uri)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationLink" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationLink" /&gt;</ph>를 사용하여 <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationLink.#ctor(System.Uri)">
          <source>The following example shows how to call this constructor.</source>
          <target state="translated">다음 예제에서는 이 생성자를 호출하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationLink.#ctor(System.Uri,System.String,System.String,System.String,System.Int64)">
          <source>The URI to the linked resource.</source>
          <target state="translated">링크된 리소스의 URI입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationLink.#ctor(System.Uri,System.String,System.String,System.String,System.Int64)">
          <source>The relationship type.</source>
          <target state="translated">관계 유형입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationLink.#ctor(System.Uri,System.String,System.String,System.String,System.Int64)">
          <source>The title of the link.</source>
          <target state="translated">링크의 제목입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationLink.#ctor(System.Uri,System.String,System.String,System.String,System.Int64)">
          <source>The media type of the link.</source>
          <target state="translated">링크의 미디어 유형입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationLink.#ctor(System.Uri,System.String,System.String,System.String,System.Int64)">
          <source>The length of the linked content.</source>
          <target state="translated">연결된 콘텐츠의 길이입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationLink.#ctor(System.Uri,System.String,System.String,System.String,System.Int64)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationLink" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph>, relation type, title, media type, and length.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationLink" /&gt;</ph>, 관계 유형, 제목, 미디어 유형 및 길이를 사용하여 <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationLink.#ctor(System.Uri,System.String,System.String,System.String,System.Int64)">
          <source>Well-known relationship types include:</source>
          <target state="translated">잘 알려진 관계 유형에는 다음이 포함됩니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationLink.#ctor(System.Uri,System.String,System.String,System.String,System.Int64)">
          <source><ph id="ph1">`alternate`</ph> - The link identifies an alternate version of the resource described by the containing Feed or Item.</source>
          <target state="translated"><ph id="ph1">`alternate`</ph> - 링크는 포함하는 피드 또는 항목에서 설명하는 대체 버전 리소스를 식별합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationLink.#ctor(System.Uri,System.String,System.String,System.String,System.Int64)">
          <source><ph id="ph1">`related`</ph> - The link identifies a resource related to the containing Feed or Item.</source>
          <target state="translated"><ph id="ph1">`related`</ph> - 링크는 포함하는 피드 또는 항목과 관련된 리소스를 식별합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationLink.#ctor(System.Uri,System.String,System.String,System.String,System.Int64)">
          <source><ph id="ph1">`self`</ph> - The link identifies a resource equivalent to the containing Feed or Item.</source>
          <target state="translated"><ph id="ph1">`self`</ph> - 링크는 포함하는 피드 또는 항목에 해당하는 리소스를 식별합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationLink.#ctor(System.Uri,System.String,System.String,System.String,System.Int64)">
          <source><ph id="ph1">`enclosure`</ph> - The link identifies a related resource that is potentially large in size and might require special handling.</source>
          <target state="translated"><ph id="ph1">`enclosure`</ph> - 링크는 크기가 커서 특별히 취급해야 할 수도 있는 관련 리소스를 식별합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationLink.#ctor(System.Uri,System.String,System.String,System.String,System.Int64)">
          <source>This link relation is often used when podcasts or audio files are distributed in a Feed.</source>
          <target state="translated">이 링크 관계는 팟캐스트 또는 오디오 파일이 피드 형태로 배포되는 경우에 자주 사용됩니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationLink.#ctor(System.Uri,System.String,System.String,System.String,System.Int64)">
          <source><ph id="ph1">`via`</ph> - The link identifies a resource that is the source of the information provided in the containing Feed or Item.</source>
          <target state="translated"><ph id="ph1">`via`</ph> - 링크는 포함하는 피드 또는 항목에 제공된 정보의 소스인 리소스를 식별합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationLink.#ctor(System.Uri,System.String,System.String,System.String,System.Int64)">
          <source>The following example shows how to call this constructor.</source>
          <target state="translated">다음 예제에서는 이 생성자를 호출하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Syndication.SyndicationLink.AttributeExtensions">
          <source>Gets the attribute extensions of the link.</source>
          <target state="translated">링크의 특성 확장을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationLink.AttributeExtensions">
          <source>A dictionary that contains a collection of attribute extensions.</source>
          <target state="translated">특성 확장 컬렉션을 포함하는 사전입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationLink.AttributeExtensions">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationLink.AttributeExtensions%2A&gt;</ph> allows you to add custom attributes to the <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationLink&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationLink.AttributeExtensions%2A&gt;</ph>를 사용하면 <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationLink&gt;</ph>에 사용자 지정 특성을 추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationLink.AttributeExtensions">
          <source>When serialized to Atom 1.0, the custom attributes appear within the <ph id="ph1">`&lt;link&gt;`</ph> element.</source>
          <target state="translated">Atom 1.0으로 serialize될 때 이 사용자 지정 특성은 <ph id="ph1">`&lt;link&gt;`</ph> 요소 내부에 나타납니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationLink.AttributeExtensions">
          <source>When serialized to RSS 2.0, the custom attributes appear in the <ph id="ph1">`&lt;a10:link&gt;`</ph> element.</source>
          <target state="translated">RSS 2.0으로 serialize될 때 이 사용자 지정 특성은 <ph id="ph1">`&lt;a10:link&gt;`</ph> 요소에 나타납니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationLink.AttributeExtensions">
          <source>Any valid XML attribute can be added.</source>
          <target state="translated">유효한 XML 특성을 추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationLink.AttributeExtensions">
          <source>The following code shows how to add an attribute extension to a syndication link.</source>
          <target state="translated">다음 코드에서는 배포 링크에 특성 확장을 추가하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Syndication.SyndicationLink.BaseUri">
          <source>Gets and sets the base URI of the syndication link.</source>
          <target state="translated">배포 링크의 기본 URI를 가져오고 설정합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationLink.BaseUri">
          <source>A <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> instance that contains the base URI of the syndication link.</source>
          <target state="translated">배포 링크의 기본 URI를 포함하는 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationLink.BaseUri">
          <source>The following code shows how to set the base URI of a syndication link.</source>
          <target state="translated">다음 코드에서는 배포 링크의 기본 URI를 설정하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationLink.Clone">
          <source>Creates a copy of the current <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationLink" /&gt;</ph> instance.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationLink" /&gt;</ph> 인스턴스의 복사본을 만듭니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationLink.Clone">
          <source>A new <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationLink" /&gt;</ph> instance.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationLink" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationLink.Clone">
          <source>The following code shows how to create a clone of a syndication link.</source>
          <target state="translated">다음 코드에서는 배포 링크의 복제를 만드는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Syndication.SyndicationLink">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationLink" /&gt;</ph> object.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationLink" /&gt;</ph> 개체를 만듭니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationLink">
          <source>This method creates a new <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationLink&gt;</ph> object and sets <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationLink.RelationshipType%2A&gt;</ph> to <ph id="ph3">`alternate`</ph>.</source>
          <target state="translated">이 메서드는 새 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationLink&gt;</ph> 개체를 만들고 <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationLink.RelationshipType%2A&gt;</ph>을 <ph id="ph3">`alternate`</ph>로 설정합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationLink.CreateAlternateLink(System.Uri)">
          <source>The URI of the linked resource.</source>
          <target state="translated">링크된 리소스의 URI입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationLink.CreateAlternateLink(System.Uri)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationLink" /&gt;</ph> object with the specified <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationLink" /&gt;</ph>를 사용하여 새 <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph> 개체를 만듭니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationLink.CreateAlternateLink(System.Uri)">
          <source>A new <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationLink" /&gt;</ph> instance.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationLink" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationLink.CreateAlternateLink(System.Uri)">
          <source>The following example shows how to create an alternate link.</source>
          <target state="translated">다음 예제에서는 대체 링크를 만드는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationLink.CreateAlternateLink(System.Uri,System.String)">
          <source>The URI of the linked resource.</source>
          <target state="translated">링크된 리소스의 URI입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationLink.CreateAlternateLink(System.Uri,System.String)">
          <source>The media type of the link.</source>
          <target state="translated">링크의 미디어 유형입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationLink.CreateAlternateLink(System.Uri,System.String)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationLink" /&gt;</ph> object with the specified <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph> and media type.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationLink" /&gt;</ph> 및 미디어 유형을 사용하여 새 <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph> 개체를 만듭니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationLink.CreateAlternateLink(System.Uri,System.String)">
          <source>A new <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationLink" /&gt;</ph> instance.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationLink" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationLink.CreateAlternateLink(System.Uri,System.String)">
          <source>The following example shows how to create an alternate link.</source>
          <target state="translated">다음 예제에서는 대체 링크를 만드는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationLink.CreateMediaEnclosureLink(System.Uri,System.String,System.Int64)">
          <source>The URI of the linked resource.</source>
          <target state="translated">링크된 리소스의 URI입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationLink.CreateMediaEnclosureLink(System.Uri,System.String,System.Int64)">
          <source>The media type of the link.</source>
          <target state="translated">링크의 미디어 유형입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationLink.CreateMediaEnclosureLink(System.Uri,System.String,System.Int64)">
          <source>The length of the linked content.</source>
          <target state="translated">연결된 콘텐츠의 길이입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationLink.CreateMediaEnclosureLink(System.Uri,System.String,System.Int64)">
          <source>Creates a media enclosure link with the specified URI, media type, and length.</source>
          <target state="translated">지정된 URI, 미디어 유형 및 길이를 사용하여 미디어 동봉물 링크를 만듭니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationLink.CreateMediaEnclosureLink(System.Uri,System.String,System.Int64)">
          <source>A new <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationLink" /&gt;</ph> instance.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationLink" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationLink.CreateMediaEnclosureLink(System.Uri,System.String,System.Int64)">
          <source>This method creates a new <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationLink&gt;</ph> object and sets <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationLink.RelationshipType%2A&gt;</ph> to <ph id="ph3">`enclosure`</ph>.</source>
          <target state="translated">이 메서드는 새 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationLink&gt;</ph> 개체를 만들고 <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationLink.RelationshipType%2A&gt;</ph>을 <ph id="ph3">`enclosure`</ph>로 설정합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationLink.CreateMediaEnclosureLink(System.Uri,System.String,System.Int64)">
          <source>The following example shows how to create a media enclosure link.</source>
          <target state="translated">다음 예제에서는 미디어 동봉물 링크를 만드는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Syndication.SyndicationLink">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationLink" /&gt;</ph> with the relationship type set to <ph id="ph2">&lt;see langword="self" /&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationLink" /&gt;</ph>로 설정된 관계 유형을 사용하여 새 <ph id="ph2">&lt;see langword="self" /&gt;</ph>를 만듭니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Syndication.SyndicationLink">
          <source>This method creates a new <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationLink&gt;</ph> object and sets <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationLink.RelationshipType%2A&gt;</ph> to <ph id="ph3">`self`</ph>.</source>
          <target state="translated">이 메서드는 새 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationLink&gt;</ph> 개체를 만들고 <ph id="ph2">&lt;xref:System.ServiceModel.Syndication.SyndicationLink.RelationshipType%2A&gt;</ph>을 <ph id="ph3">`self`</ph>로 설정합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationLink.CreateSelfLink(System.Uri)">
          <source>The URI to the linked resource.</source>
          <target state="translated">링크된 리소스의 URI입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationLink.CreateSelfLink(System.Uri)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationLink" /&gt;</ph> with the specified URI and relationship type set to <ph id="ph2">&lt;see langword="self" /&gt;</ph>.</source>
          <target state="translated">지정된 URI 및 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationLink" /&gt;</ph>로 설정된 관계 유형을 사용하여 새 <ph id="ph2">&lt;see langword="self" /&gt;</ph>를 만듭니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationLink.CreateSelfLink(System.Uri)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationLink" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationLink" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationLink.CreateSelfLink(System.Uri)">
          <source>The following example shows how to create a self link.</source>
          <target state="translated">다음 예제에서는 자체 링크를 만드는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationLink.CreateSelfLink(System.Uri,System.String)">
          <source>The URI to the linked resource.</source>
          <target state="translated">링크된 리소스의 URI입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationLink.CreateSelfLink(System.Uri,System.String)">
          <source>The media type of the link.</source>
          <target state="translated">링크의 미디어 유형입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationLink.CreateSelfLink(System.Uri,System.String)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationLink" /&gt;</ph> with the specified URI, media type, and relationship type set to <ph id="ph2">&lt;see langword="self" /&gt;</ph>.</source>
          <target state="translated">지정된 URI, 미디어 유형 및 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationLink" /&gt;</ph>로 설정된 관계 유형을 사용하여 새 <ph id="ph2">&lt;see langword="self" /&gt;</ph>를 만듭니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationLink.CreateSelfLink(System.Uri,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationLink" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationLink" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationLink.CreateSelfLink(System.Uri,System.String)">
          <source>The following example shows how to create a self link.</source>
          <target state="translated">다음 예제에서는 자체 링크를 만드는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Syndication.SyndicationLink.ElementExtensions">
          <source>Gets the element extensions for the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationLink" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationLink" /&gt;</ph>의 요소 확장을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationLink.ElementExtensions">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationElementExtensionCollection" /&gt;</ph> that contains the element extensions for the <ph id="ph2">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationLink" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationElementExtensionCollection" /&gt;</ph>에 대한 요소 확장을 포함하는 <ph id="ph2">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationLink" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationLink.ElementExtensions">
          <source>Element extensions are valid XML elements that are not specified in either the Atom 1.0 or RSS 2.0 specifications.</source>
          <target state="translated">요소 확장은 Atom 1.0 또는 RSS 2.0 사양에 정의되지 않은 유효한 XML 요소입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationLink.ElementExtensions">
          <source>You can add any valid XML element as an extension, provided its namespace is different from the enclosing namespace.</source>
          <target state="translated">유효한 모든 XML 요소를 확장으로 추가할 수 있습니다. 단, XML 요소의 네임스페이스가 바깥쪽 네임스페이스와 달라야 합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationLink.ElementExtensions">
          <source>The following code shows how to add an element extension to a syndication link.</source>
          <target state="translated">다음 코드에서는 배포 링크에 요소 확장을 추가하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationLink.GetAbsoluteUri">
          <source>Gets the absolute URI for the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationLink" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationLink" /&gt;</ph>의 절대 URI를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationLink.GetAbsoluteUri">
          <source>A <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> instance that contains the absolute URI of the <ph id="ph2">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationLink" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>의 절대 URI가 포함된 <ph id="ph2">&lt;see cref="T:System.ServiceModel.Syndication.SyndicationLink" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationLink.GetAbsoluteUri">
          <source>The following code shows how to get the absolute URI of a syndication link.</source>
          <target state="translated">다음 코드에서는 배포 링크의 절대 URI를 가져오는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Syndication.SyndicationLink.Length">
          <source>Gets and sets the length of the linked resource in bytes.</source>
          <target state="translated">링크된 리소스의 길이(바이트)를 가져오고 설정합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationLink.Length">
          <source>The length of the linked resource.</source>
          <target state="translated">링크된 리소스의 길이입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationLink.Length">
          <source>When serialized to Atom 1.0 the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationLink.Length%2A&gt;</ph> property is written as a <ph id="ph2">`length`</ph> attribute in the <ph id="ph3">`&lt;link&gt;`</ph> element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationLink.Length%2A&gt;</ph> 속성은 Atom 1.0으로 serialize될 때 <ph id="ph2">`length`</ph> 요소의 <ph id="ph3">`&lt;link&gt;`</ph> 특성에 기록되고,</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationLink.Length">
          <source>When serialized to RSS 2.0 this value is written as the <ph id="ph1">`length`</ph> attribute of the <ph id="ph2">`&lt;a10:link&gt;`</ph> element.</source>
          <target state="translated">RSS 2.0으로 serialize될 때 <ph id="ph1">`length`</ph> 요소의 <ph id="ph2">`&lt;a10:link&gt;`</ph> 특성으로 기록됩니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationLink.Length">
          <source>The following code shows how to set the length of a syndication link.</source>
          <target state="translated">다음 코드에서는 배포 링크의 길이를 설정하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationLink.Length">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationLink.Length%2A&gt;</ph> property is serialized to Atom 1.0.</source>
          <target state="translated">다음 XML에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationLink.Length%2A&gt;</ph> 속성이 Atom 1.0으로 serialize되는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationLink.Length">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationLink.Length%2A&gt;</ph> property is serialized to RSS 2.0.</source>
          <target state="translated">다음 XML에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationLink.Length%2A&gt;</ph> 속성이 RSS 2.0으로 serialize되는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Syndication.SyndicationLink.MediaType">
          <source>Gets and sets the media type of the linked resource.</source>
          <target state="translated">링크된 리소스의 미디어 유형을 가져오고 설정합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationLink.MediaType">
          <source>The media type of the linked resource.</source>
          <target state="translated">링크된 리소스의 미디어 유형입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationLink.MediaType">
          <source>When serialized to Atom 1.0 this value is written as a <ph id="ph1">`type`</ph> attribute in the <ph id="ph2">`&lt;link&gt;`</ph> element.</source>
          <target state="translated">Atom 1.0으로 serialize될 때 이 값은 <ph id="ph1">`type`</ph> 요소의 <ph id="ph2">`&lt;link&gt;`</ph> 특성으로 기록되고,</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationLink.MediaType">
          <source>When serialized to RSS 2.0 this value is written as the <ph id="ph1">`type`</ph> attribute in the <ph id="ph2">`&lt;a10:link&gt;`</ph> element.</source>
          <target state="translated">RSS 2.0으로 serialize될 때 이 값은 <ph id="ph1">`type`</ph> 요소의 <ph id="ph2">`&lt;a10:link&gt;`</ph> 특성으로 기록됩니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationLink.MediaType">
          <source>The following code shows how to set the media type on a syndication link.</source>
          <target state="translated">다음 코드에서는 배포 링크에 미디어 유형을 설정하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationLink.MediaType">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationLink.MediaType%2A&gt;</ph> property is serialized to Atom 1.0.</source>
          <target state="translated">다음 XML에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationLink.MediaType%2A&gt;</ph> 속성이 Atom 1.0으로 serialize되는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationLink.MediaType">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationLink.MediaType%2A&gt;</ph> property is serialized to RSS 2.0.</source>
          <target state="translated">다음 XML에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationLink.MediaType%2A&gt;</ph> 속성이 RSS 2.0으로 serialize되는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Syndication.SyndicationLink.RelationshipType">
          <source>Gets and sets the relationship type of the linked resource.</source>
          <target state="translated">링크된 리소스의 관계 유형을 가져오고 설정합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationLink.RelationshipType">
          <source>The relationship type of the linked resource.</source>
          <target state="translated">링크된 리소스의 관계 유형입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationLink.RelationshipType">
          <source>Well-known relationship types include:</source>
          <target state="translated">잘 알려진 관계 유형에는 다음이 포함됩니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationLink.RelationshipType">
          <source><ph id="ph1">`alternate`</ph> - The link identifies an alternate version of the resource described by the containing Feed or Item.</source>
          <target state="translated"><ph id="ph1">`alternate`</ph> - 링크는 포함하는 피드 또는 항목에서 설명하는 대체 버전 리소스를 식별합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationLink.RelationshipType">
          <source><ph id="ph1">`related`</ph> - The link identifies a resource related to the containing Feed or Item.</source>
          <target state="translated"><ph id="ph1">`related`</ph> - 링크는 포함하는 피드 또는 항목과 관련된 리소스를 식별합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationLink.RelationshipType">
          <source><ph id="ph1">`self`</ph> - The link identifies a resource equivalent to the containing Feed or Item.</source>
          <target state="translated"><ph id="ph1">`self`</ph> - 링크는 포함하는 피드 또는 항목에 해당하는 리소스를 식별합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationLink.RelationshipType">
          <source><ph id="ph1">`enclosure`</ph> - The link identifies a related resource that is potentially large in size and might require special handling.</source>
          <target state="translated"><ph id="ph1">`enclosure`</ph> - 링크는 크기가 커서 특별히 취급해야 할 수도 있는 관련 리소스를 식별합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationLink.RelationshipType">
          <source>This link relation is often used when podcasts or audio files are distributed in a Feed.</source>
          <target state="translated">이 링크 관계는 팟캐스트 또는 오디오 파일이 피드 형태로 배포되는 경우에 자주 사용됩니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationLink.RelationshipType">
          <source><ph id="ph1">`via`</ph> - The link identifies a resource that is the source of the information provided in the containing Feed or Item.</source>
          <target state="translated"><ph id="ph1">`via`</ph> - 링크는 포함하는 피드 또는 항목에 제공된 정보의 소스인 리소스를 식별합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationLink.RelationshipType">
          <source>When serialized to Atom 1.0 this value is written out as the <ph id="ph1">`rel`</ph> attribute of the <ph id="ph2">`&lt;link&gt;`</ph> element.</source>
          <target state="translated">Atom 1.0으로 serialize될 때 이 값은 <ph id="ph1">`rel`</ph> 요소의 <ph id="ph2">`&lt;link&gt;`</ph> 특성으로 기록되고,</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationLink.RelationshipType">
          <source>When serialized to RSS 2.0, this value is written out as the <ph id="ph1">`rel`</ph> attribute in the <ph id="ph2">`&lt;a10:link&gt;`</ph> element.</source>
          <target state="translated">RSS 2.0으로 serialize될 때 이 값은 <ph id="ph1">`rel`</ph> 요소의 <ph id="ph2">`&lt;a10:link&gt;`</ph> 특성으로 기록됩니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationLink.RelationshipType">
          <source>The following code shows how to set the relationship type of a syndication link.</source>
          <target state="translated">다음 코드에서는 배포 링크의 관계 유형을 설정하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationLink.RelationshipType">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationLink.RelationshipType%2A&gt;</ph> property is serialized to Atom 1.0.</source>
          <target state="translated">다음 XML에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationLink.RelationshipType%2A&gt;</ph> 속성이 Atom 1.0으로 serialize되는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationLink.RelationshipType">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationLink.RelationshipType%2A&gt;</ph> property is serialized to RSS 2.0.</source>
          <target state="translated">다음 XML에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationLink.RelationshipType%2A&gt;</ph> 속성이 RSS 2.0으로 serialize되는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Syndication.SyndicationLink.Title">
          <source>Gets and sets the title of the linked resource.</source>
          <target state="translated">링크된 리소스의 제목을 가져오고 설정합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationLink.Title">
          <source>The title of the linked resource.</source>
          <target state="translated">링크된 리소스의 제목입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationLink.Title">
          <source>When serialized to Atom 1.0 this value is written out as the <ph id="ph1">`title`</ph> attribute in the <ph id="ph2">`&lt;link&gt;`</ph> element.</source>
          <target state="translated">Atom 1.0으로 serialize될 때 이 값은 <ph id="ph1">`title`</ph> 요소의 <ph id="ph2">`&lt;link&gt;`</ph> 특성으로 기록되고,</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationLink.Title">
          <source>When serialized to RSS 2.0 the title is written out as the <ph id="ph1">`title`</ph> attribute in the <ph id="ph2">`&lt;a10:link&gt;`</ph> element.</source>
          <target state="translated">RSS 2.0으로 serialize될 때 제목은 <ph id="ph1">`title`</ph> 요소의 <ph id="ph2">`&lt;a10:link&gt;`</ph> 특성으로 기록됩니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationLink.Title">
          <source>The following code shows how to set the title of a syndication link.</source>
          <target state="translated">다음 코드에서는 배포 링크의 제목을 설정하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationLink.Title">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationLink.Title%2A&gt;</ph> property is serialized to Atom 1.0.</source>
          <target state="translated">다음 XML에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationLink.Title%2A&gt;</ph> 속성이 Atom 1.0으로 serialize되는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationLink.Title">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationLink.Title%2A&gt;</ph> property is serialized to RSS 2.0.</source>
          <target state="translated">다음 XML에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationLink.Title%2A&gt;</ph> 속성이 RSS 2.0으로 serialize되는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationLink.TryParseAttribute(System.String,System.String,System.String,System.String)">
          <source>The name of the element.</source>
          <target state="translated">요소의 이름을 나타내며</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationLink.TryParseAttribute(System.String,System.String,System.String,System.String)">
          <source>The namespace of the element.</source>
          <target state="translated">요소의 네임스페이스입니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationLink.TryParseAttribute(System.String,System.String,System.String,System.String)">
          <source>The attribute to parse.</source>
          <target state="translated">구문 분석할 특성입니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationLink.TryParseAttribute(System.String,System.String,System.String,System.String)">
          <source>The syndication version to use when parsing.</source>
          <target state="translated">구문 분석 시 사용할 배포 버전입니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationLink.TryParseAttribute(System.String,System.String,System.String,System.String)">
          <source>Attempts to parse an attribute extension.</source>
          <target state="translated">특성 확장의 구문 분석을 시도합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationLink.TryParseAttribute(System.String,System.String,System.String,System.String)">
          <source>A value that specifies whether the attribute extension was parsed successfully.</source>
          <target state="translated">특성 확장이 성공적으로 구문 분석되었는지 여부를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationLink.TryParseAttribute(System.String,System.String,System.String,System.String)">
          <source>Attribute extensions are custom attributes that are not defined by the Atom 1.0 or RSS 2.0 specifications.</source>
          <target state="translated">특성 확장은 Atom 1.0 또는 RSS 2.0 사양에 정의되지 않은 사용자 지정 특성입니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationLink.TryParseAttribute(System.String,System.String,System.String,System.String)">
          <source>They are serialized as an attribute of the <ph id="ph1">`&lt;link`</ph>&gt; element.</source>
          <target state="translated">특성으로 serialize 되는 <ph id="ph1">`&lt;link`</ph>&gt; 요소입니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationLink.TryParseAttribute(System.String,System.String,System.String,System.String)">
          <source>This method is an extension point that allows you to handle the deserialization of a custom attribute extension.</source>
          <target state="translated">이 메서드는 사용자 지정 특성 확장의 deserialization을 처리할 수 있는 확장명 지점입니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationLink.TryParseAttribute(System.String,System.String,System.String,System.String)">
          <source>To do this, you must derive a class from <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationLink&gt;</ph> and override this method.</source>
          <target state="translated">이렇게 하려면 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationLink&gt;</ph>에서 클래스를 파생시키고 이 메서드를 재정의해야 합니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationLink.TryParseAttribute(System.String,System.String,System.String,System.String)">
          <source>This method is called for all unrecognized attribute extensions.</source>
          <target state="translated">이 메서드는 인식할 수 없는 모든 특성 확장에 대해 호출됩니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationLink.TryParseAttribute(System.String,System.String,System.String,System.String)">
          <source>Invalid XML encountered during read.</source>
          <target state="translated">읽는 동안 잘못된 XML이 발견된 경우</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationLink.TryParseElement(System.Xml.XmlReader,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> to read from.</source>
          <target state="translated">읽을 소스 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationLink.TryParseElement(System.Xml.XmlReader,System.String)">
          <source>The syndication version to use while parsing.</source>
          <target state="translated">구문 분석 중 사용할 배포 버전입니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationLink.TryParseElement(System.Xml.XmlReader,System.String)">
          <source>Attempts to parse an element extension.</source>
          <target state="translated">요소 확장의 구문 분석을 시도합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationLink.TryParseElement(System.Xml.XmlReader,System.String)">
          <source>A value that specifies whether the element extension was parsed successfully.</source>
          <target state="translated">요소 확장이 성공적으로 구문 분석되었는지 여부를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationLink.TryParseElement(System.Xml.XmlReader,System.String)">
          <source>Element extensions are valid XML elements that are not specified in either the Atom 1.0 or RSS 2.0 specifications.</source>
          <target state="translated">요소 확장은 Atom 1.0 또는 RSS 2.0 사양에 정의되지 않은 유효한 XML 요소입니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationLink.TryParseElement(System.Xml.XmlReader,System.String)">
          <source>You can add any valid XML element as an extension, provided its namespace is different from the enclosing namespace.</source>
          <target state="translated">유효한 모든 XML 요소를 확장으로 추가할 수 있습니다. 단, XML 요소의 네임스페이스가 바깥쪽 네임스페이스와 달라야 합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationLink.TryParseElement(System.Xml.XmlReader,System.String)">
          <source>This method is an extension point that allows you to handle the deserialization of a custom element extension.</source>
          <target state="translated">이 메서드는 사용자 지정 요소 확장의 deserialization을 처리할 수 있는 확장 지점입니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationLink.TryParseElement(System.Xml.XmlReader,System.String)">
          <source>To do this, you must derive a class from <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationLink&gt;</ph> and override this method.</source>
          <target state="translated">이렇게 하려면 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationLink&gt;</ph>에서 클래스를 파생시키고 이 메서드를 재정의해야 합니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationLink.TryParseElement(System.Xml.XmlReader,System.String)">
          <source>This method is called for all unrecognized element extensions.</source>
          <target state="translated">이 메서드는 인식할 수 없는 모든 요소 확장에 대해 호출됩니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationLink.TryParseElement(System.Xml.XmlReader,System.String)">
          <source>Invalid XML encountered during read.</source>
          <target state="translated">읽는 동안 잘못된 XML이 발견된 경우</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Syndication.SyndicationLink.Uri">
          <source>Gets and sets the URI for the linked resource.</source>
          <target state="translated">링크된 리소스의 URI를 가져오고 설정합니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationLink.Uri">
          <source>A <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> instance that contains the URI for the linked resource.</source>
          <target state="translated">링크된 리소스의 URI를 포함하는 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationLink.Uri">
          <source>When serialized to Atom 1.0 this value is written out as the <ph id="ph1">`href`</ph> attribute in the <ph id="ph2">`&lt;link&gt;`</ph> element.</source>
          <target state="translated">Atom 1.0으로 serialize될 때 이 값은 <ph id="ph1">`href`</ph> 요소의 <ph id="ph2">`&lt;link&gt;`</ph> 특성으로 기록되고,</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationLink.Uri">
          <source>When serialized to RSS 2.0, this value is written out as the <ph id="ph1">`href`</ph> attribute in the <ph id="ph2">`&lt;a10:link&gt;`</ph> element.</source>
          <target state="translated">RSS 2.0으로 serialize될 때 이 값은 <ph id="ph1">`href`</ph> 요소의 <ph id="ph2">`&lt;a10:link&gt;`</ph> 특성으로 기록됩니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationLink.Uri">
          <source>The following code shows how to set the URI of a syndication link.</source>
          <target state="translated">다음 코드에서는 배포 링크의 URI를 설정하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationLink.Uri">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationLink.Uri%2A&gt;</ph> property is serialized to Atom 1.0.</source>
          <target state="translated">다음 XML에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationLink.Uri%2A&gt;</ph> 속성이 Atom 1.0으로 serialize되는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Syndication.SyndicationLink.Uri">
          <source>The following XML shows how the <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationLink.Uri%2A&gt;</ph> property is serialized to RSS 2.0.</source>
          <target state="translated">다음 XML에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationLink.Uri%2A&gt;</ph> 속성이 RSS 2.0으로 serialize되는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationLink.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> to write to.</source>
          <target state="translated">쓸 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationLink.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)">
          <source>The syndication version to use while writing.</source>
          <target state="translated">작성 중 사용할 배포 버전입니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationLink.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)">
          <source>Writes the attribute extensions to the specified <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> using the specified syndication version.</source>
          <target state="translated">지정된 배포 버전을 사용하여 지정된 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>에 특성 확장을 씁니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationLink.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)">
          <source>Attribute extensions are custom attributes that are not defined by the Atom 1.0 or RSS 2.0 specifications.</source>
          <target state="translated">특성 확장은 Atom 1.0 또는 RSS 2.0 사양에 정의되지 않은 사용자 지정 특성입니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationLink.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)">
          <source>They are serialized as an attribute of the <ph id="ph1">`&lt;link&gt;`</ph> element.</source>
          <target state="translated">이러한 특성은 <ph id="ph1">`&lt;link&gt;`</ph> 요소의 특성으로서 serialize됩니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationLink.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)">
          <source>This method is an extension point that allows you to handle the serialization of custom attribute extensions.</source>
          <target state="translated">이 메서드는 사용자 지정 특성 확장의 serialization을 처리할 수 있는 확장명 지점입니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationLink.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)">
          <source>To do this, you must derive a class from <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationLink&gt;</ph> and override this method.</source>
          <target state="translated">이렇게 하려면 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationLink&gt;</ph>에서 클래스를 파생시키고 이 메서드를 재정의해야 합니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationLink.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)">
          <source>This method is called for all unrecognized attribute extensions.</source>
          <target state="translated">이 메서드는 인식할 수 없는 모든 특성 확장에 대해 호출됩니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationLink.WriteElementExtensions(System.Xml.XmlWriter,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> to write to.</source>
          <target state="translated">쓸 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationLink.WriteElementExtensions(System.Xml.XmlWriter,System.String)">
          <source>The syndication version to use while writing.</source>
          <target state="translated">작성 중 사용할 배포 버전입니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Syndication.SyndicationLink.WriteElementExtensions(System.Xml.XmlWriter,System.String)">
          <source>Writes the element extensions to the specified <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> using the specified syndication version.</source>
          <target state="translated">지정된 배포 버전을 사용하여 지정된 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>에 요소 확장을 씁니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationLink.WriteElementExtensions(System.Xml.XmlWriter,System.String)">
          <source>Element extensions are valid XML elements that are not specified in either the Atom 1.0 or RSS 2.0 specifications.</source>
          <target state="translated">요소 확장은 Atom 1.0 또는 RSS 2.0 사양에 정의되지 않은 유효한 XML 요소입니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationLink.WriteElementExtensions(System.Xml.XmlWriter,System.String)">
          <source>You can add any valid XML element as an extension, provided its namespace is different from the enclosing namespace.</source>
          <target state="translated">유효한 모든 XML 요소를 확장으로 추가할 수 있습니다. 단, XML 요소의 네임스페이스가 바깥쪽 네임스페이스와 달라야 합니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationLink.WriteElementExtensions(System.Xml.XmlWriter,System.String)">
          <source>This method is an extension point that allows you to handle the serialization of custom element extensions.</source>
          <target state="translated">이 메서드는 사용자 지정 요소 확장의 serialization을 처리할 수 있는 확장 지점입니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationLink.WriteElementExtensions(System.Xml.XmlWriter,System.String)">
          <source>To do this, you must derive a class from <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationLink&gt;</ph> and override this method.</source>
          <target state="translated">이렇게 하려면 <ph id="ph1">&lt;xref:System.ServiceModel.Syndication.SyndicationLink&gt;</ph>에서 클래스를 파생시키고 이 메서드를 재정의해야 합니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Syndication.SyndicationLink.WriteElementExtensions(System.Xml.XmlWriter,System.String)">
          <source>This method is called for all unrecognized element extensions.</source>
          <target state="translated">이 메서드는 인식할 수 없는 모든 요소 확장에 대해 호출됩니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>