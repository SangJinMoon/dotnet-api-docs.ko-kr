<Type Name="CryptoProvider" FullName="System.Security.RightsManagement.CryptoProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bc0cdaf3c7e863e24d9544ba9e917e3485b4ad4d" />
    <Meta Name="ms.sourcegitcommit" Value="058bfa0b75b777d3171411d35da8f11617fc06b0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="05/04/2018" />
    <Meta Name="ms.locfileid" Value="33660100" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CryptoProvider : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CryptoProvider extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Security.RightsManagement.CryptoProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class CryptoProvider&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class CryptoProvider : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="34575-101">보호된 콘텐츠를 암호화 및 해독하기 위한 디지털 권한 관리 서비스를 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="34575-101">Provides digital rights management services for encrypting and decrypting protected content.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34575-102"><xref:System.Security.RightsManagement.CryptoProvider> 결과로 생성 되는 <xref:System.Security.RightsManagement.UseLicense.Bind%2A> 메서드는 권한 바인딩 관리 되는 경우 <xref:System.Security.RightsManagement.UseLicense> 에 <xref:System.Security.RightsManagement.SecureEnvironment>합니다.</span><span class="sxs-lookup"><span data-stu-id="34575-102"><xref:System.Security.RightsManagement.CryptoProvider> is created as a result of the <xref:System.Security.RightsManagement.UseLicense.Bind%2A> method when binding a rights managed <xref:System.Security.RightsManagement.UseLicense> to a <xref:System.Security.RightsManagement.SecureEnvironment>.</span></span>  
  
 <span data-ttu-id="34575-103">다른와 마찬가지로 <xref:System.Security.RightsManagement> 형식 <xref:System.Security.RightsManagement.CryptoProvider> 은 완전 신뢰 응용 프로그램에서 사용할 수만 있습니다.</span><span class="sxs-lookup"><span data-stu-id="34575-103">As with other <xref:System.Security.RightsManagement> types, <xref:System.Security.RightsManagement.CryptoProvider> is only usable in full trust applications.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="34575-104">사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Security.RightsManagement.CryptoProvider> 만들 클래스는 <xref:System.IO.Packaging.EncryptedPackageEnvelope>합니다.</span><span class="sxs-lookup"><span data-stu-id="34575-104">The following example shows how to use the <xref:System.Security.RightsManagement.CryptoProvider> class to create an <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span></span>  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.RightsManagement.UseLicense" />
    <altmember cref="T:System.Security.RightsManagement.SecureEnvironment" />
  </Docs>
  <Members>
    <Member MemberName="BlockSize">
      <MemberSignature Language="C#" Value="public int BlockSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BlockSize" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.CryptoProvider.BlockSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BlockSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BlockSize { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="34575-105">암호화 블록 크기를 바이트 단위로 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34575-105">Gets the cipher block size, in bytes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="34575-106">암호화 블록 크기(바이트 단위)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34575-106">The cipher block size, in bytes.</span>
          </span>
          <span data-ttu-id="34575-107">기본 블록 크기에 대 한 표준 AES (고급 암호화)은 8입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34575-107">The default block size for Advanced Encryption Standard (AES) is 8.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34575-108">`clearText` 및 `cipherText` 에 전달 된 버퍼 <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> 및 <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> 해야 n \*<xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> 바이트 길이 여기서 ' n '은 1 보다 크거나 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="34575-108">The `clearText` and `cipherText` buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> and <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> must be n\*<xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> bytes in length, where 'n' is an integer greater than or equal to 1.</span></span>  
  
 <span data-ttu-id="34575-109">경우 <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> 은 `false`에 전달 된 버퍼 <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> 에 전달 되는 버퍼 길이 여야 <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="34575-109">If <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> is `false`, buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> must be the same length as the buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A>.</span></span>  
  
 <span data-ttu-id="34575-110">경우 <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> 은 `true`에 전달 된 버퍼 <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> 에 전달 된 버퍼에서 길이가 다를 수 있습니다 <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> (모든 버퍼 크기의 배수 여야 여전히 <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> 의 길이 바이트)입니다.</span><span class="sxs-lookup"><span data-stu-id="34575-110">If <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> is `true`, buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> can be a different length from the buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> (all buffer sizes must still always be a multiple of <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> bytes in length).</span></span>  
  
 <span data-ttu-id="34575-111">A <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> 1 이면 암호화 스트림 암호; <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> 2 이상의 블록 암호화를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="34575-111">A <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> of 1 indicates that the cipher is a stream cipher; a <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> of 2 or greater indicates a block cipher.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="34575-112">사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> 속성의 일반 텍스트 데이터를 암호화 된 텍스트 데이터로 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="34575-112">The following example shows how to use the <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> property in converting clear-text data to encrypted-text data.</span></span>  
  
 [!code-csharp[RightsManagedContentPublish#RmContPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedContentPublish/CSharp/Window1.xaml.cs#rmcontpubencrypt)]
 [!code-vb[RightsManagedContentPublish#RmContPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedContentPublish/visualbasic/window1.xaml.vb#rmcontpubencrypt)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BoundGrants">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.RightsManagement.ContentGrant&gt; BoundGrants { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Security.RightsManagement.ContentGrant&gt; BoundGrants" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.CryptoProvider.BoundGrants" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BoundGrants As ReadOnlyCollection(Of ContentGrant)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::RightsManagement::ContentGrant ^&gt; ^ BoundGrants { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::RightsManagement::ContentGrant ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.RightsManagement.ContentGrant&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="34575-113">확인 과정을 거쳐 사용자에게 부여된 권한을 나열하는 컬렉션을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34575-113">Gets a collection listing the rights that passed verification and that are granted to the user.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="34575-114">확인 과정을 거쳐 사용자에게 부여된 권한을 열거하는 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34575-114">A collection enumerating the rights that passed verification and that are granted to the user.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="34575-115">사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Security.RightsManagement.CryptoProvider.BoundGrants%2A> 속성을 통해 부여 된 권한 목록을 가져올는 <xref:System.Security.RightsManagement.UseLicense>합니다.</span><span class="sxs-lookup"><span data-stu-id="34575-115">The following example shows how to use the <xref:System.Security.RightsManagement.CryptoProvider.BoundGrants%2A> property to obtain a list rights granted through a <xref:System.Security.RightsManagement.UseLicense>.</span></span>  
  
 [!code-csharp[RightsManagedContentViewer#RmContViewUseLicense](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedContentViewer/CSharp/Window1.xaml.cs#rmcontviewuselicense)]
 [!code-vb[RightsManagedContentViewer#RmContViewUseLicense](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedContentViewer/visualbasic/window1.xaml.vb#rmcontviewuselicense)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanDecrypt">
      <MemberSignature Language="C#" Value="public bool CanDecrypt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanDecrypt" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.CryptoProvider.CanDecrypt" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanDecrypt As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanDecrypt { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="34575-116">사용자에게 암호 해독 권한이 있는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34575-116">Gets a value that indicates whether the user has rights to decrypt.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="34575-117">**true** 경우는 <see cref="T:System.Security.RightsManagement.UseLicense" /> 해독; 사용자 권한을 부여, **false**합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34575-117">**true** if the <see cref="T:System.Security.RightsManagement.UseLicense" /> grants the user rights to decrypt; otherwise, **false**.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34575-118"><xref:System.Security.RightsManagement.CryptoProvider.CanDecrypt%2A> 반환 **true** 경우는 <xref:System.Security.RightsManagement.UseLicense> 이 바인딩된 <xref:System.Security.RightsManagement.CryptoProvider> 보기, 편집, 인쇄 또는 소유자와 같은 읽기 액세스 권한을 사용자에 게 부여 합니다.</span><span class="sxs-lookup"><span data-stu-id="34575-118"><xref:System.Security.RightsManagement.CryptoProvider.CanDecrypt%2A> returns **true** if the <xref:System.Security.RightsManagement.UseLicense> bound to this <xref:System.Security.RightsManagement.CryptoProvider> grants the user read access rights such as View, Edit, Print, or Owner.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="34575-119">사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Security.RightsManagement.CryptoProvider.CanDecrypt%2A> 암호화가 허용 되는지 확인 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="34575-119">The following example shows how to use the <xref:System.Security.RightsManagement.CryptoProvider.CanDecrypt%2A> property to determine if decryption is allowed.</span></span>  
  
 [!code-csharp[RightsManagedContentViewer#RmContViewUseLicense](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedContentViewer/CSharp/Window1.xaml.cs#rmcontviewuselicense)]
 [!code-vb[RightsManagedContentViewer#RmContViewUseLicense](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedContentViewer/visualbasic/window1.xaml.vb#rmcontviewuselicense)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.RightsManagement.CryptoProvider.CanEncrypt" />
        <altmember cref="M:System.Security.RightsManagement.UseLicense.Bind(System.Security.RightsManagement.SecureEnvironment)" />
      </Docs>
    </Member>
    <Member MemberName="CanEncrypt">
      <MemberSignature Language="C#" Value="public bool CanEncrypt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanEncrypt" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.CryptoProvider.CanEncrypt" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanEncrypt As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanEncrypt { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="34575-120">사용자에게 암호화 권한이 있는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34575-120">Gets a value that indicates whether the user has rights to encrypt.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="34575-121">**true** 경우는 <see cref="T:System.Security.RightsManagement.UseLicense" /> 암호화;에 대 한 사용자 권한을 부여, **false**합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34575-121">**true** if the <see cref="T:System.Security.RightsManagement.UseLicense" /> grants the user rights to encrypt; otherwise, **false**.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34575-122"><xref:System.Security.RightsManagement.CryptoProvider.CanDecrypt%2A> 반환 **true** 경우는 <xref:System.Security.RightsManagement.UseLicense> 이 바인딩된 <xref:System.Security.RightsManagement.CryptoProvider> 편집 또는 소유자와 같은 쓰기 액세스 권한을 사용자에 게 부여 합니다.</span><span class="sxs-lookup"><span data-stu-id="34575-122"><xref:System.Security.RightsManagement.CryptoProvider.CanDecrypt%2A> returns **true** if the <xref:System.Security.RightsManagement.UseLicense> bound to this <xref:System.Security.RightsManagement.CryptoProvider> grants the user write access rights such as Edit or Owner.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.RightsManagement.CryptoProvider.CanDecrypt" />
        <altmember cref="M:System.Security.RightsManagement.UseLicense.Bind(System.Security.RightsManagement.SecureEnvironment)" />
      </Docs>
    </Member>
    <Member MemberName="CanMergeBlocks">
      <MemberSignature Language="C#" Value="public bool CanMergeBlocks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanMergeBlocks" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanMergeBlocks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanMergeBlocks { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="34575-123">
            <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> 및 <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" />에 블록 크기의 길이가 서로 다른 버퍼를 사용할 수 있는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34575-123">Gets a value that indicates whether <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> and <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" /> can accept buffers that are different block sizes in length.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="34575-124">**true** 버퍼에 전달 하는 경우 <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> 에 전달 된 버퍼에서 다른 길이가 수 <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" />, 그렇지 않으면 **false** 버퍼에 전달 하는 경우 <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> 및 <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" /> 정확히 해야 동일한 길이입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34575-124">**true** if the buffer passed to <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> can be a different length from the buffer passed to <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" />; otherwise, **false** if the buffers passed to <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> and <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" /> must be the exact same length.</span>
          </span>
          <span data-ttu-id="34575-125">기본값은 aes **true**합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34575-125">For AES the default is **true**.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34575-126">`clearText` 및 `cipherText` 에 전달 된 버퍼 <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> 및 <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> 해야 n \*<xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> 바이트 길이 여기서 ' n '은 1 보다 크거나 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="34575-126">The `clearText` and `cipherText` buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> and <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> must be n\*<xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> bytes in length, where 'n' is an integer greater than or equal to 1.</span></span>  
  
 <span data-ttu-id="34575-127">경우 <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> 은 **false**에 전달 된 버퍼 <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> 에 전달 되는 버퍼 길이 여야 <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="34575-127">If <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> is **false**, buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> must be the same length as the buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A>.</span></span>  
  
 <span data-ttu-id="34575-128">경우 <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> 은 **true**에 전달 된 버퍼 <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> 에 전달 된 버퍼에서 길이가 다를 수 있습니다 <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> (모든 버퍼 크기의 배수 여야 여전히 <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> 의 길이 바이트)입니다.</span><span class="sxs-lookup"><span data-stu-id="34575-128">If <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> is **true**, buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> can be a different length from the buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> (all buffer sizes must still always be a multiple of <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> bytes in length).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Decrypt">
      <MemberSignature Language="C#" Value="public byte[] Decrypt (byte[] cryptoText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Decrypt(unsigned int8[] cryptoText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Decrypt (cryptoText As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Decrypt(cli::array &lt;System::Byte&gt; ^ cryptoText);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cryptoText" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="cryptoText">
          <span data-ttu-id="34575-129">해독할 암호화 텍스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34575-129">The cipher text to decrypt.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="34575-130">암호화 텍스트를 일반 텍스트로 해독합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34575-130">Decrypts cipher text to clear text.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="34575-131">
            <paramref name="cryptoText" />를 해독한 일반 텍스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34575-131">The decrypted clear text of <paramref name="cryptoText" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="34575-132">사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> 암호화 되지 않은 데이터를 암호화 된 데이터를 변환 하는 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="34575-132">The following example shows how to use the <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> method to convert encrypted data to unencrypted data.</span></span>  
  
 [!code-csharp[RightsManagedContentViewer#RmContViewDecrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedContentViewer/CSharp/Window1.xaml.cs#rmcontviewdecrypt)]
 [!code-vb[RightsManagedContentViewer#RmContViewDecrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedContentViewer/visualbasic/window1.xaml.vb#rmcontviewdecrypt)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="34575-133">
            <paramref name="cipherText" />가 null인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="34575-133">
              <paramref name="cipherText" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.RightsManagement.RightsManagementException">
          <span data-ttu-id="34575-134">암호 해독 권한이 부여되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="34575-134">Decryption right not granted.</span>
          </span>
        </exception>
        <altmember cref="P:System.Security.RightsManagement.CryptoProvider.CanDecrypt" />
        <altmember cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="34575-135">
            <see cref="T:System.Security.RightsManagement.CryptoProvider" />에서 사용하는 리소스를 해제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34575-135">Releases the resources used by the <see cref="T:System.Security.RightsManagement.CryptoProvider" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.CryptoProvider.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="34575-136">
            <see cref="T:System.Security.RightsManagement.CryptoProvider" />에서 사용하는 모든 리소스를 해제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34575-136">Releases all resources used by the <see cref="T:System.Security.RightsManagement.CryptoProvider" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34575-137"><xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> 수행 <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>(**true**).</span><span class="sxs-lookup"><span data-stu-id="34575-137"><xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> performs <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>(**true**).</span></span>  
  
 <span data-ttu-id="34575-138"><xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> 사용을 마치면 <xref:System.Security.RightsManagement.CryptoProvider>를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="34575-138">Call <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> when you are finished using the <xref:System.Security.RightsManagement.CryptoProvider>.</span></span> <span data-ttu-id="34575-139"><xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> 메서드를 사용하면 <xref:System.Security.RightsManagement.CryptoProvider>를 사용할 수 없게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="34575-139">The <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> method leaves the <xref:System.Security.RightsManagement.CryptoProvider> in an unusable state.</span></span> <span data-ttu-id="34575-140">호출한 후 <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>에 대 한 모든 참조를 해제 해야는 <xref:System.Security.RightsManagement.CryptoProvider> 가비지 수집기는 메모리를 회수할 수 있도록 하는 <xref:System.Security.RightsManagement.CryptoProvider> 차지한 합니다.</span><span class="sxs-lookup"><span data-stu-id="34575-140">After calling <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>, you must release all references to the <xref:System.Security.RightsManagement.CryptoProvider> so the garbage collector can reclaim the memory that the <xref:System.Security.RightsManagement.CryptoProvider> was occupying.</span></span> <span data-ttu-id="34575-141">자세한 내용은 참조 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 및 [Dispose 메서드를 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="34575-141">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="34575-142"><xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>에 대한 마지막 참조를 해제하기 전에 반드시 <xref:System.Security.RightsManagement.CryptoProvider>를 호출하십시오.</span><span class="sxs-lookup"><span data-stu-id="34575-142">Always call <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> before you release your last reference to the <xref:System.Security.RightsManagement.CryptoProvider>.</span></span> <span data-ttu-id="34575-143">이렇게 하지 않으면 가비지 수집기가 <xref:System.Security.RightsManagement.CryptoProvider> 개체의 `Finalize` 메서드를 호출할 때까지 사용 중인 리소스가 해제되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="34575-143">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.RightsManagement.CryptoProvider> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.CryptoProvider.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="34575-144">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34575-144">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="34575-145">
            <see cref="T:System.Security.RightsManagement.CryptoProvider" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34575-145">Releases the unmanaged resources used by the <see cref="T:System.Security.RightsManagement.CryptoProvider" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34575-146">이 메서드는 public `Dispose()` 메서드 및 <xref:System.Object.Finalize%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="34575-146">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="34575-147">`Dispose()` 보호 된 호출 `Dispose(Boolean)` 메서드는 `disposing` 매개 변수 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="34575-147">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="34575-148"><xref:System.Object.Finalize%2A> 호출 `Dispose` 와 `disposing` 로 설정 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="34575-148"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="34575-149">경우는 `disposing` 매개 변수가 true 이면이 메서드는 관리 개체가 보유 하는 모든 리소스를 해제 합니다.이 <xref:System.Security.RightsManagement.CryptoProvider> 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="34575-149">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Security.RightsManagement.CryptoProvider> references.</span></span> <span data-ttu-id="34575-150">이 메서드는 참조되는 각 개체의 `Dispose()` 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="34575-150">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="34575-151">
              <see langword="Dispose" />는 다른 개체에서 여러 번 호출할 수 있습니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="34575-151">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="34575-152">재정의 하는 경우 <see langword="Dispose(Boolean)" /> 이전 호출에서 삭제 된 개체를 참조 하지 않도록 주의 <see langword="Dispose" />합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="34575-152">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="34575-153">구현 하는 방법에 대 한 자세한 내용은 <see langword="Dispose(Boolean)" />, 참조 [Dispose 메서드를 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="34575-153">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="34575-154">에 대 한 자세한 내용은 <see langword="Dispose" /> 및 <see cref="M:System.Object.Finalize" />, 참조 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 및 [Finalize 메서드를 재정의](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="34575-154">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public byte[] Encrypt (byte[] clearText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Encrypt(unsigned int8[] clearText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Encrypt (clearText As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Encrypt(cli::array &lt;System::Byte&gt; ^ clearText);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clearText" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="clearText">
          <span data-ttu-id="34575-155">암호화할 일반 텍스트 콘텐츠입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34575-155">The clear text content to encrypt.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="34575-156">일반 텍스트를 암호화 텍스트로 암호화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34575-156">Encrypts clear text to cipher text.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="34575-157">지정된 <paramref name="clearText" />의 암호화된 암호화 텍스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34575-157">Encrypted cipher text of the given <paramref name="clearText" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34575-158">바이트 길이 `clearText` 버퍼는 암호의 배수 여야 하며 <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="34575-158">The byte length of the `clearText` buffer should be a multiple of the cipher <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> property.</span></span>  
  
 <span data-ttu-id="34575-159">디지털 권한 관리 시스템 AES 블록 암호화를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="34575-159">The digital rights management system uses AES block cipher.</span></span>  <span data-ttu-id="34575-160">AES, 블록은 독립적으로 암호화 동일한 암호화 텍스트 결과 생성 되는 두 개의 블록의 일반 텍스트가 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="34575-160">With AES, blocks are encrypted independently such that two blocks of identical clear text produce identical cipher text results.</span></span>  <span data-ttu-id="34575-161">독립적인 블록 암호화에서 잠재적인 암호 해독 위협을 최소화 하기 위해 응용 프로그램에는 동일한 일반 텍스트 블록이 암호화 되지 않게 압축 등의 콘텐츠를 수정 하는 방법을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="34575-161">To minimize potential decryption threats from independent block encryption, applications should employ methods to modify content, such as compression, to avoid encrypting identical clear text blocks.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="34575-162">사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> 암호화 된 텍스트 데이터를 일반 텍스트 데이터를 변환 하는 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="34575-162">The following example shows how to use the <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> method to convert clear-text data to encrypted-text data.</span></span>  
  
 [!code-csharp[RightsManagedContentPublish#RmContPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedContentPublish/CSharp/Window1.xaml.cs#rmcontpubencrypt)]
 [!code-vb[RightsManagedContentPublish#RmContPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedContentPublish/visualbasic/window1.xaml.vb#rmcontpubencrypt)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="34575-163">
            <paramref name="clearText" />가 null인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="34575-163">
              <paramref name="clearText" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.RightsManagement.RightsManagementException">
          <span data-ttu-id="34575-164">암호화가 허용되지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="34575-164">Encryption is not permitted.</span>
          </span>
        </exception>
        <altmember cref="P:System.Security.RightsManagement.CryptoProvider.CanEncrypt" />
        <altmember cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~CryptoProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.CryptoProvider.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!CryptoProvider ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="34575-165">가비지 컬렉션에 의해 인스턴스가 회수되기 전에 리소스를 해제하고 내부 정리를 수행합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34575-165">Frees resources and performs internal cleanup before the instance is reclaimed by garbage collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34575-166"><xref:System.Security.RightsManagement.CryptoProvider.Finalize%2A> 수행 <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>(**false**).</span><span class="sxs-lookup"><span data-stu-id="34575-166"><xref:System.Security.RightsManagement.CryptoProvider.Finalize%2A> performs <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>(**false**).</span></span>  
  
 <span data-ttu-id="34575-167">이 메서드를 재정의 <xref:System.Object.Finalize%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="34575-167">This method overrides  <xref:System.Object.Finalize%2A>.</span></span> <span data-ttu-id="34575-168">응용 프로그램 코드,이 메서드를 호출 하지 않아야 개체의 `Finalize` 메서드를 호출 하 여 가비지 수집기의 종료를 사용 하지 않도록 설정 된 경우가 아니면 자동으로 가비지 수집 중 호출 됩니다는 <xref:System.GC.SuppressFinalize%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="34575-168">Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A> method.</span></span>  
  
 <span data-ttu-id="34575-169">자세한 내용은 참조 [Finalize 메서드 및 소멸자](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70), [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md), 및 [Finalize 메서드를 재정의](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)합니다.</span><span class="sxs-lookup"><span data-stu-id="34575-169">For more information, see [Finalize Methods and Destructors](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>