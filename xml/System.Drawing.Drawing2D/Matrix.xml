<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Matrix.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d7c894d909e48d1bcbd0f4c91190becad156464e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d7c894d909e48d1bcbd0f4c91190becad156464e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>Encapsulates a 3-by-3 affine matrix that represents a geometric transform.</source>
          <target state="translated">기하학적 변환을 나타내는 3 x 3 유사 매트릭스를 캡슐화합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>In <ph id="ph1">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph> you can store an affine transformation in a <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.Matrix&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph> 는 3x3 유사 변형에 저장할 수 있습니다는 <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.Matrix&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>Because the third column of a matrix that represents an affine transformation is always (0, 0, 1), you specify only the six numbers in the first two columns when you construct a <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix&gt;</ph> object.</source>
          <target state="translated">나타내는 3x3 유사 변형 매트릭스의 세 번째 열은 항상 때문에 (0, 0, 1)을 만들 때 처음 두 열에 있는 6 개의 숫자만 지정는 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>The statement <ph id="ph1">`Matrix myMatrix = new Matrix(0, 1, -1, 0, 3, 4)`</ph> constructs the matrix shown in the following figure.</source>
          <target state="translated">문이 <ph id="ph1">`Matrix myMatrix = new Matrix(0, 1, -1, 0, 3, 4)`</ph> 다음 그림에 표시 된 매트릭스를 구성 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.Matrix">
          <source><bpt id="p1">![</bpt>Transformations<ept id="p1">]</ept><bpt id="p2">(~/add/media/aboutgdip05-art10.gif "</bpt>Transformations<ept id="p2">")</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>변환<ept id="p1">]</ept><bpt id="p2">(~/add/media/aboutgdip05-art10.gif "</bpt>변환<ept id="p2">")</ept></target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>Composite Transformations</source>
          <target state="translated">합성 변형</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>A composite transformation is a sequence of transformations, one followed by the other.</source>
          <target state="translated">복합 변환에는 다른 뒤에 오는 단일 변환의 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>Consider the matrices and transformations in the following list:</source>
          <target state="translated">매트릭스 및 다음 목록에는 변환을 고려 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>Matrix A</source>
          <target state="translated">Matrix A</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>Rotate 90 degrees</source>
          <target state="translated">90도 회전</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>Matrix B</source>
          <target state="translated">Matrix B</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>Scale by a factor of 2 in the x direction</source>
          <target state="translated">X 방향으로 2의 비율로 크기 조정</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>Matrix C</source>
          <target state="translated">C 매트릭스</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>Translate 3 units in the y direction</source>
          <target state="translated">Y 방향의 3 단위</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>If we start with the point (2, 1) — represented by the matrix [2 1 1] — and multiply by A, then B, then C, the point (2, 1) will undergo the three transformations in the order listed.</source>
          <target state="translated">점 (2, 1)으로 시작 하는 경우-행렬 [2 1 1]로 표시-A, B, C, 점 (2, 1)에 나열 된 순서로 세 가지 변환 될 예정 다음 곱하면 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>[2 1 1]ABC = [-2 5 1]</source>
          <target state="translated">[2 1 1]ABC = [-2 5 1]</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>Rather than store the three parts of the composite transformation in three separate matrices, you can multiply A, B, and C together to get a single 3×3 matrix that stores the entire composite transformation.</source>
          <target state="translated">대신 세 개의 별도 행렬에 복합 변환의 세 부분을 저장, A, 곱하기 수 B 및 C 함께 전체 복합 변환을 저장 하는 단일 3 × 3 행렬을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>Suppose ABC = D. Then a point multiplied by D gives the same result as a point multiplied by A, then B, then C.</source>
          <target state="translated">ABC 가정 = D D를 곱하면 A, B, C 곱하면와 동일한 결과 제공 하는 다음</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>[2 1 1]D = [-2 5 1]</source>
          <target state="translated">[2 1 1]D = [-2 5 1]</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>The following illustration shows the matrices A, B, C, and D.</source>
          <target state="translated">다음 그림 A "," B "," C "및" 4. 매트릭스를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.Matrix">
          <source><bpt id="p1">![</bpt>Transformations<ept id="p1">]</ept><bpt id="p2">(~/add/media/aboutgdip05-art12.gif "</bpt>Transformations<ept id="p2">")</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>변환<ept id="p1">]</ept><bpt id="p2">(~/add/media/aboutgdip05-art12.gif "</bpt>변환<ept id="p2">")</ept></target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>The fact that the matrix of a composite transformation can be formed by multiplying the individual transformation matrices means that any sequence of affine transformations can be stored in a single <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix&gt;</ph> object.</source>
          <target state="translated">개별 변형 매트릭스를 곱하여 복합 변환 매트릭스를 만들 수 있습니다 팩트 관계 변환 시퀀스는 단일에 저장할 수 있습니다 의미 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>The order of a composite transformation is important.</source>
          <target state="translated">복합 변환의 순서가 중요 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>In general, rotate, then scale, then translate is not the same as scale, then rotate, then translate.</source>
          <target state="translated">일반적으로, 다음 크기 조정, 이동을 차례로 동일 하지는 않습니다 눈금으로 한 후를 회전 하 고 변환 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>Similarly, the order of matrix multiplication is important.</source>
          <target state="translated">마찬가지로, 매트릭스 곱의 순서는 중요 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>In general, ABC is not the same as BAC.</source>
          <target state="translated">일반적으로 ABC는 하지 하기와 동일 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix&gt;</ph> class provides several methods for building a composite transformation: <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.Matrix.Multiply%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.Matrix.Rotate%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Drawing.Drawing2D.Matrix.RotateAt%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Drawing.Drawing2D.Matrix.Scale%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Drawing.Drawing2D.Matrix.Shear%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Drawing.Drawing2D.Matrix.Translate%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix&gt;</ph> 클래스 복합 변환을 구성 하는 여러 가지 방법을 제공: <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.Matrix.Multiply%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.Matrix.Rotate%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Drawing.Drawing2D.Matrix.RotateAt%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Drawing.Drawing2D.Matrix.Scale%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Drawing.Drawing2D.Matrix.Shear%2A&gt;</ph>, 및 <ph id="ph7">&lt;xref:System.Drawing.Drawing2D.Matrix.Translate%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>The following example creates the matrix of a composite transformation that first rotates 30 degrees, then scales by a factor of 2 in the y direction, and then translates 5 units in the x direction:</source>
          <target state="translated">다음 예제에서는 30도 회전 다음 y 방향으로 2 배 하 여 확장 한 다음 x 방향의 5 단위를 변환 하는 복합 변환 행렬을 만듭니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> class as the identity matrix.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> 클래스의 새 인스턴스를 항등 매트릭스로 초기화합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.Rectangle,System.Drawing.Point[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structure that represents the rectangle to be transformed.</source>
          <target state="translated">변환할 사각형을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.Rectangle,System.Drawing.Point[])">
          <source>An array of three <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that represents the points of a parallelogram to which the upper-left, upper-right, and lower-left corners of the rectangle is to be transformed.</source>
          <target state="translated">사각형의 왼쪽 위, 오른쪽 위 및 왼쪽 아래 모퉁이가 변환될 평행 사변형의 지점을 나타내는 세 <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> 구조체 배열입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.Rectangle,System.Drawing.Point[])">
          <source>The lower-right corner of the parallelogram is implied by the first three corners.</source>
          <target state="translated">처음 세 모퉁이는 평행 사변형의 오른쪽 아래 모퉁이가 됩니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.Rectangle,System.Drawing.Point[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> class to the geometric transform defined by the specified rectangle and array of points.</source>
          <target state="translated">지정된 사각형 및 지점의 배열에 의해 정의된 기하학적 변환으로 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.Rectangle,System.Drawing.Point[])">
          <source>This method initializes the new Matrix such that it represents the geometric transform that maps the rectangle specified by the <ph id="ph1">`rect`</ph> parameter to the parallelogram defined by the three points in the <ph id="ph2">`plgpts`</ph> parameter.</source>
          <target state="translated">기하학적 변환을 지정 된 영역을 매핑하는 나타낼 수 있도록이 메서드는 새 Matrix를 초기화는 <ph id="ph1">`rect`</ph> 에서 3 개의 점으로 정의 된 평행 사변형에 매개 변수는 <ph id="ph2">`plgpts`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.Rectangle,System.Drawing.Point[])">
          <source>The upper-left corner of the rectangle is mapped to the first point in the <ph id="ph1">`plgpts`</ph> array, the upper-right corner is mapped to the second point, and the lower-left corner is mapped to the third point.</source>
          <target state="translated">사각형의 왼쪽 위 모서리에서 첫 번째 요소와 매핑됩니다는 <ph id="ph1">`plgpts`</ph> 배열 오른쪽 위의 두 번째 요소와 매핑됩니다 및 왼쪽 아래 모서리 세 번째 요소와 매핑됩니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.Rectangle,System.Drawing.Point[])">
          <source>The lower-right point of the parallelogram is implied by the first three.</source>
          <target state="translated">처음 3 개는 평행 사변형의 오른쪽 아래 지점이 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.RectangleF,System.Drawing.PointF[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> structure that represents the rectangle to be transformed.</source>
          <target state="translated">변환할 사각형을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.RectangleF,System.Drawing.PointF[])">
          <source>An array of three <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that represents the points of a parallelogram to which the upper-left, upper-right, and lower-left corners of the rectangle is to be transformed.</source>
          <target state="translated">사각형의 왼쪽 위, 오른쪽 위 및 왼쪽 아래 모퉁이가 변환될 평행 사변형의 지점을 나타내는 세 <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> 구조체 배열입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.RectangleF,System.Drawing.PointF[])">
          <source>The lower-right corner of the parallelogram is implied by the first three corners.</source>
          <target state="translated">처음 세 모퉁이는 평행 사변형의 오른쪽 아래 모퉁이가 됩니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.RectangleF,System.Drawing.PointF[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> class to the geometric transform defined by the specified rectangle and array of points.</source>
          <target state="translated">지정된 사각형 및 지점의 배열에 의해 정의된 기하학적 변환으로 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.RectangleF,System.Drawing.PointF[])">
          <source>This method initializes the new <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix&gt;</ph> such that it represents the geometric transform that maps the rectangle specified by the <ph id="ph2">`rect`</ph> parameter to the parallelogram defined by the three points in the <ph id="ph3">`plgpts`</ph> parameter.</source>
          <target state="translated">이 메서드는 새로운 초기화 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix&gt;</ph> 기하학적 변환을 지정 된 영역을 매핑하는 나타낼 수 있도록는 <ph id="ph2">`rect`</ph> 에서 3 개의 점으로 정의 된 평행 사변형에 매개 변수는 <ph id="ph3">`plgpts`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.RectangleF,System.Drawing.PointF[])">
          <source>The upper-left corner of the rectangle is mapped to the first point in the <ph id="ph1">`plgpts`</ph> array, the upper-right corner is mapped to the second point, and the lower-left corner is mapped to the third point.</source>
          <target state="translated">사각형의 왼쪽 위 모서리에서 첫 번째 요소와 매핑됩니다는 <ph id="ph1">`plgpts`</ph> 배열 오른쪽 위의 두 번째 요소와 매핑됩니다 및 왼쪽 아래 모서리 세 번째 요소와 매핑됩니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.RectangleF,System.Drawing.PointF[])">
          <source>The lower-right point of the parallelogram is implied by the first three.</source>
          <target state="translated">처음 3 개는 평행 사변형의 오른쪽 아래 지점이 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The value in the first row and first column of the new <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>의 첫째 행과 첫째 열 값입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The value in the first row and second column of the new <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>의 첫째 행과 둘째 열 값입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The value in the second row and first column of the new <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>의 둘째 행과 첫째 열 값입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The value in the second row and second column of the new <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>의 둘째 행과 둘째 열 값입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The value in the third row and first column of the new <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>의 셋째 행과 첫째 열 값입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The value in the third row and second column of the new <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>의 셋째 행과 둘째 열 값입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> class with the specified elements.</source>
          <target state="translated">지정된 요소를 사용하여 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Clone">
          <source>Creates an exact copy of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>의 정확한 복사본을 만듭니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Clone">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> that this method creates.</source>
          <target state="translated">이 메서드가 만드는 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Dispose">
          <source>Releases all resources used by this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>에서 사용하는 리소스를 모두 해제합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Dispose">
          <source>Calling <ph id="ph1">`Dispose`</ph> allows the resources used by this <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.Matrix&gt;</ph> object to be reallocated for other purposes.</source>
          <target state="translated">호출 <ph id="ph1">`Dispose`</ph> 이 사용 하는 리소스 <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.Matrix&gt;</ph> 다른 용도에 다시 할당 될 수 있는 개체입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="P:System.Drawing.Drawing2D.Matrix.Elements">
          <source>Gets an array of floating-point values that represents the elements of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>의 요소를 나타내는 부동 소수점 값의 배열을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.Matrix.Elements">
          <source>An array of floating-point values that represents the elements of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>의 요소를 나타내는 부동 소수점 값의 배열입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.Matrix.Elements">
          <source>The elements m11, m12, m21, m22, dx, and dy of the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix&gt;</ph> are represented by the values in the array in that order.</source>
          <target state="translated">요소 m11, m12, m21, m22, dx와 dy는 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix&gt;</ph> 해당 순서로 배열의 값으로 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Equals(System.Object)">
          <source>The object to test.</source>
          <target state="translated">테스트할 개체입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Equals(System.Object)">
          <source>Tests whether the specified object is a <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> and is identical to this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">지정된 개체가 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>이고 이 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>와 동일한지 여부를 테스트합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Equals(System.Object)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> is the specified <ph id="ph3">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> identical to this <ph id="ph4">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>; otherwise, <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이 메서드는 <ph id="ph2">&lt;paramref name="obj" /&gt;</ph>가 이 <ph id="ph4">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>와 동일한 지정된 <ph id="ph3">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>를 반환하고, 그렇지 않으면 <ph id="ph5">&lt;see langword="false" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Finalize">
          <source>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</source>
          <target state="translated">가비지 컬렉션이 회수하기 전에 개체가 리소스를 해제하고 다른 정리 작업을 수행할 수 있게 합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.GetHashCode">
          <source>Returns a hash code.</source>
          <target state="translated">해시 코드를 반환합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.GetHashCode">
          <source>The hash code for this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>에 대한 해시 코드입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Invert">
          <source>Inverts this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>, if it is invertible.</source>
          <target state="translated">역변환할 수 있으면 이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>를 역변환합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Invert">
          <source>The following code example creates a matrix and inverts it:</source>
          <target state="translated">다음 코드 예제에서는 매트릭스를 만든 다음 것을 반전 합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.Drawing.Drawing2D.Matrix.IsIdentity">
          <source>Gets a value indicating whether this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> is the identity matrix.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>가 항등 매트릭스인지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.Matrix.IsIdentity">
          <source>This property is <ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> is identity; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이 속성은 이 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>가 항등 매트릭스이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.Drawing.Drawing2D.Matrix.IsInvertible">
          <source>Gets a value indicating whether this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> is invertible.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>를 역변환할 수 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.Matrix.IsInvertible">
          <source>This property is <ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> is invertible; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이 속성은 이 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>를 역변환할 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>Multiplies this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> by the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> by prepending the specified <ph id="ph3">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph3">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>를 앞에 추가하여 지정된 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>를 이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>에 곱합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> by which this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> is to be multiplied.</source>
          <target state="translated">이 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>에 곱할 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix)">
          <source>Multiplies this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> by the matrix specified in the <ph id="ph2">&lt;paramref name="matrix" /&gt;</ph> parameter, by prepending the specified <ph id="ph3">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph3">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>를 앞에 추가하여 <ph id="ph2">&lt;paramref name="matrix" /&gt;</ph> 매개 변수에 지정된 매트릭스를 이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>에 곱합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix.Multiply%2A&gt;</ph>.</source>
          <target state="translated">예제를 보려면 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix.Multiply%2A&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> by which this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> is to be multiplied.</source>
          <target state="translated">이 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>에 곱할 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.MatrixOrder" /&gt;</ph> that represents the order of the multiplication.</source>
          <target state="translated">곱할 순서를 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.MatrixOrder" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Multiplies this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> by the matrix specified in the <ph id="ph2">&lt;paramref name="matrix" /&gt;</ph> parameter, and in the order specified in the <ph id="ph3">&lt;paramref name="order" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph3">&lt;paramref name="order" /&gt;</ph> 매개 변수에 지정된 순서대로 <ph id="ph2">&lt;paramref name="matrix" /&gt;</ph> 매개 변수에 지정된 매트릭스를 이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>에 곱합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>If the specified order is <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.MatrixOrder.Prepend&gt;</ph>, this <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.Matrix&gt;</ph> is multiplied by the specified matrix in a prepended order.</source>
          <target state="translated">지정 된 순서가 경우 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.MatrixOrder.Prepend&gt;</ph>,이 <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.Matrix&gt;</ph> 앞에 추가 된 순서 대로 지정된 된 매트릭스를 곱합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>If the specified order is <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.MatrixOrder.Append&gt;</ph>, this <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.Matrix&gt;</ph> is multiplied by the specified matrix in an appended order.</source>
          <target state="translated">지정 된 순서가 경우 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.MatrixOrder.Append&gt;</ph>,이 <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.Matrix&gt;</ph> 추가 된 순서로 지정된 된 매트릭스를 곱합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event object.</source>
          <target state="translated">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> 이벤트 개체입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The code performs the following actions:</source>
          <target state="translated">이 코드에서는 다음 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Creates three matrices.</source>
          <target state="translated">세 가지 행렬을 만듭니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Lists the contents of matrix 1 to the screen.</source>
          <target state="translated">화면에 1 매트릭스의 내용을 나열 합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Multiplies matrix 1 by matrix 2 and stores the result in matrix 1.</source>
          <target state="translated">매트릭스 1 행렬 2로 곱하고 1 행렬에 결과 저장 합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Lists the contents of matrix 1 to the screen.</source>
          <target state="translated">화면에 1 매트릭스의 내용을 나열 합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Multiplies the result stored in matrix 1 by matrix 3, and again stores the result in matrix 1.</source>
          <target state="translated">매트릭스 1 3, 매트릭스에에서 저장 된 결과 곱하고 다시 1 행렬에 결과 저장 합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Lists the contents of matrix 1 to the screen.</source>
          <target state="translated">화면에 1 매트릭스의 내용을 나열 합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Draws a rectangle to the screen prior to applying the matrix 1 transform (the blue rectangle).</source>
          <target state="translated">1 매트릭스 변환을 (파란색 사각형)를 적용 하기 전에 화면에 사각형을 그립니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Applies the transform to the rectangle.</source>
          <target state="translated">사각형에 변환을 적용합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Draws the transformed rectangle to the screen (the red rectangle), using the same coordinates as the previous rectangle.</source>
          <target state="translated">이전 사각형과 동일한 좌표를 사용 하 여 화면 (빨간색 사각형)으로 변환된 된 사각형을 그립니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Notice that the red rectangle has been scaled by a factor of two in the horizontal direction, then rotated 90 degrees, and then moved (translated) 250 points in the x direction and 50 points in the y direction.</source>
          <target state="translated">빨간색 직사각형 가로 방향에 두 대의 비율로 크기 조정에 다음 90도 회전 공지와 다음 (번역된) 250 포인트 x 방향의 50 포인트 y 방향으로 이동 합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="P:System.Drawing.Drawing2D.Matrix.OffsetX">
          <source>Gets the x translation value (the dx value, or the element in the third row and first column) of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>의 x 이동 값(dx 값 또는 셋째 행과 첫째 열에 있는 요소)을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.Matrix.OffsetX">
          <source>The x translation value of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>의 x 이동 값입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="P:System.Drawing.Drawing2D.Matrix.OffsetY">
          <source>Gets the y translation value (the dy value, or the element in the third row and second column) of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>의 y 이동 값(dy 값 또는 셋째 행과 둘째 열에 있는 요소)을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.Matrix.OffsetY">
          <source>The y translation value of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>의 y 이동 값입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Reset">
          <source>Resets this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> to have the elements of the identity matrix.</source>
          <target state="translated">항등 매트릭스의 요소를 포함하도록 이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>를 다시 설정합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Reset">
          <source>The elements on the main diagonal of the identity matrix are 1.</source>
          <target state="translated">요소를 항등 매트릭스의 주요 대각선은 1입니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Reset">
          <source>All other elements of the identity matrix are 0.</source>
          <target state="translated">항등 매트릭스의 다른 모든 요소는 0입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Reset">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event object.</source>
          <target state="translated">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> 이벤트 개체입니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Reset">
          <source>The code performs the following actions:</source>
          <target state="translated">이 코드에서는 다음 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Reset">
          <source>Creates a scaling matrix.</source>
          <target state="translated">크기 조정 행렬을 만듭니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Reset">
          <source>Lists the matrix elements to the screen.</source>
          <target state="translated">화면에 행렬 요소를 나열 합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Reset">
          <source>Resets the matrix to identity.</source>
          <target state="translated">항등 행렬으로 다시 설정 합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Reset">
          <source>Lists the elements to the screen.</source>
          <target state="translated">화면에 요소를 나열 합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Reset">
          <source>Translates the matrix by 50 points in the x-axis and 40 points in the y-axis.</source>
          <target state="translated">X 축에서 및 y 축 40 포인트 50 포인트 행렬으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Reset">
          <source>Lists the elements of the translated matrix to the screen.</source>
          <target state="translated">화면에 번역 된 매트릭스의 요소를 나열합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Reset">
          <source>Draws a rectangle is drawn to the screen prior to applying the matrix transform (the blue rectangle).</source>
          <target state="translated">사각형 (파란색 사각형) 행렬 변환을 적용 하기 전에 화면에 그려지는 그립니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Reset">
          <source>Applies the transform to the rectangle.</source>
          <target state="translated">사각형에 변환을 적용합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Reset">
          <source>Draws the transformed rectangle is drawn to the screen (the red rectangle), using the same coordinates as the previous rectangle.</source>
          <target state="translated">변환된 된 사각형 이전 사각형과 동일한 좌표를 사용 하는 화면 (빨간색 사각형)에 그려지는 그립니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Reset">
          <source>Notice that the red rectangle was not scaled (because of the reset) but was translated in the x-axis and y-axis.</source>
          <target state="translated">빨간색 직사각형 되지 않은 (때문 reset) 크기가 조정 설정 되었지만 x 축과 y 축으로 이동 되었습니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>Applies a clockwise rotation of the specified angle about the origin to this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">원점을 기준으로 지정된 각도만큼 이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>에 시계 방향 회전을 적용합니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Rotate(System.Single)">
          <source>The angle of the rotation, in degrees.</source>
          <target state="translated">회전 각도(단위: 도)입니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Rotate(System.Single)">
          <source>Prepend to this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> a clockwise rotation, around the origin and by the specified angle.</source>
          <target state="translated">원점을 기준으로 지정된 각도만큼 이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> 앞에 시계 방향 회전을 추가합니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Rotate(System.Single)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix.Rotate%28System.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29&gt;</ph>.</source>
          <target state="translated">예제를 보려면 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix.Rotate%28System.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Rotate(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The angle (extent) of the rotation, in degrees.</source>
          <target state="translated">회전 각도(단위: 도)입니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Rotate(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.MatrixOrder" /&gt;</ph> that specifies the order (append or prepend) in which the rotation is applied to this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>에 회전이 적용되는 순서(뒤에 추가 또는 앞에 추가)를 지정하는 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.MatrixOrder" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Rotate(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Applies a clockwise rotation of an amount specified in the <ph id="ph1">&lt;paramref name="angle" /&gt;</ph> parameter, around the origin (zero x and y coordinates) for this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">원점(x-좌표 및 y-좌표가 0임)을 기준으로 <ph id="ph1">&lt;paramref name="angle" /&gt;</ph> 매개 변수에 지정된 각도만큼 이 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>에 시계 방향 회전을 적용합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Rotate(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event object.</source>
          <target state="translated">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> 이벤트 개체입니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Rotate(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The code performs the following actions:</source>
          <target state="translated">이 코드에서는 다음 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Rotate(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Draws a rectangle to the screen prior to applying a rotation transform (the blue rectangle).</source>
          <target state="translated">회전 변환을 (파란색 사각형)를 적용 하기 전에 화면에 사각형을 그립니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Rotate(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Creates a matrix and rotates it 45 degrees.</source>
          <target state="translated">행렬을 만들고 45도 회전 합니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Rotate(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Applies this matrix transform to the rectangle.</source>
          <target state="translated">사각형에이 매트릭스 변환을 적용 합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Rotate(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Draws the transformed rectangle to the screen (the red rectangle).</source>
          <target state="translated">화면 (빨간색 사각형)으로 변환된 된 사각형을 그립니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Rotate(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Notice that the red rectangle has been rotated around the 0, 0 screen coordinates.</source>
          <target state="translated">빨간색 직사각형 회전 된 것을 알 주위 0, 0 화면 좌표입니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>Applies a clockwise rotation about the specified point to this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> by prepending the rotation.</source>
          <target state="translated">회전을 앞에 추가하여 지정된 지점을 기준으로 이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>에 시계 방향 회전을 적용합니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF)">
          <source>The angle (extent) of the rotation, in degrees.</source>
          <target state="translated">회전 각도(단위: 도)입니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> that represents the center of the rotation.</source>
          <target state="translated">회전의 중심을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF)">
          <source>Applies a clockwise rotation to this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> around the point specified in the <ph id="ph2">&lt;paramref name="point" /&gt;</ph> parameter, and by prepending the rotation.</source>
          <target state="translated">회전을 앞에 추가하여 <ph id="ph2">&lt;paramref name="point" /&gt;</ph> 매개 변수에 지정된 지점을 기준으로 이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>에 시계 방향 회전을 적용합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF)">
          <source>The following code example demonstrates using a <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix&gt;</ph> and the <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Transform%2A&gt;</ph> method to rotate a string.</source>
          <target state="translated">다음 코드 예제는 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Transform%2A&gt;</ph> 메서드를 문자열로 회전 합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF)">
          <source>This example is designed to be used with Windows Forms.</source>
          <target state="translated">이 예제는 Windows Forms에서 사용 되는 설계 합니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF)">
          <source>Create a form and paste the following code into it.</source>
          <target state="translated">폼을 만들고 다음 코드를 붙여 넣습니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF)">
          <source>Call the <ph id="ph1">`DrawVerticalStringFromBottomUp`</ph> method in the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler, passing <ph id="ph3">`e`</ph> as <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">호출 된 <ph id="ph1">`DrawVerticalStringFromBottomUp`</ph> 폼의 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> 전달 되는 이벤트 처리기 <ph id="ph3">`e`</ph> 으로 <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The angle of the rotation, in degrees.</source>
          <target state="translated">회전 각도(단위: 도)입니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF,System.Drawing.Drawing2D.MatrixOrder)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> that represents the center of the rotation.</source>
          <target state="translated">회전의 중심을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF,System.Drawing.Drawing2D.MatrixOrder)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.MatrixOrder" /&gt;</ph> that specifies the order (append or prepend) in which the rotation is applied.</source>
          <target state="translated">회전이 적용되는 순서(뒤에 추가 또는 앞에 추가)를 지정하는 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.MatrixOrder" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Applies a clockwise rotation about the specified point to this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> in the specified order.</source>
          <target state="translated">지정된 순서대로 지정된 지점을 기준으로 이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>에 시계 방향 회전을 적용합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event object.</source>
          <target state="translated">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> 이벤트 개체입니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The code performs the following actions:</source>
          <target state="translated">이 코드에서는 다음 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Draws a rectangle to the screen prior to applying a rotation transform (the blue rectangle).</source>
          <target state="translated">회전 변환을 (파란색 사각형)를 적용 하기 전에 화면에 사각형을 그립니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Creates a matrix and rotates it 45 degrees around a specified point.</source>
          <target state="translated">행렬을 만들고 지정된 된 지점 기준으로 45도 회전 합니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Applies this matrix transform is to the rectangle.</source>
          <target state="translated">이 매트릭스를 적용 사각형에는 변환입니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Draws the transformed rectangle to the screen (the red rectangle).</source>
          <target state="translated">화면 (빨간색 사각형)으로 변환된 된 사각형을 그립니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Notice that the red rectangle has been rotated around the upper left-hand corner of the rectangle (the rotation point specified the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix.RotateAt%2A&gt;</ph> method).</source>
          <target state="translated">사각형의 왼쪽 위 모퉁이 주위 빨간색 직사각형을 회전 된 것을 알 (지정 된 회전 지점은 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix.RotateAt%2A&gt;</ph> 메서드).</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>Applies the specified scale vector to this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> by prepending the scale vector.</source>
          <target state="translated">크기 조정 벡터를 앞에 추가하여 지정된 크기 조정 벡터를 이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>에 적용합니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single)">
          <source>The value by which to scale this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> in the x-axis direction.</source>
          <target state="translated">x-축 방향으로 이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>의 크기를 조정할 값입니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single)">
          <source>The value by which to scale this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> in the y-axis direction.</source>
          <target state="translated">y-축 방향으로 이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>의 크기를 조정할 값입니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single)">
          <source>Applies the specified scale vector to this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> by prepending the scale vector.</source>
          <target state="translated">크기 조정 벡터를 앞에 추가하여 지정된 크기 조정 벡터를 이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>에 적용합니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix.Scale%28System.Single%2CSystem.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29&gt;</ph>.</source>
          <target state="translated">예제를 보려면 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix.Scale%28System.Single%2CSystem.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The value by which to scale this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> in the x-axis direction.</source>
          <target state="translated">x-축 방향으로 이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>의 크기를 조정할 값입니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The value by which to scale this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> in the y-axis direction.</source>
          <target state="translated">y-축 방향으로 이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>의 크기를 조정할 값입니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.MatrixOrder" /&gt;</ph> that specifies the order (append or prepend) in which the scale vector is applied to this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>에 크기 조정 벡터가 적용되는 순서(뒤에 추가 또는 앞에 추가)를 지정하는 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.MatrixOrder" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Applies the specified scale vector (<ph id="ph1">&lt;paramref name="scaleX" /&gt;</ph> and <ph id="ph2">&lt;paramref name="scaleY" /&gt;</ph>) to this <ph id="ph3">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> using the specified order.</source>
          <target state="translated">지정된 순서대로 지정된 크기 조정 벡터(<ph id="ph1">&lt;paramref name="scaleX" /&gt;</ph> 및 <ph id="ph2">&lt;paramref name="scaleY" /&gt;</ph>)를 이 <ph id="ph3">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>에 적용합니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event object.</source>
          <target state="translated">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> 이벤트 개체입니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The code performs the following actions:</source>
          <target state="translated">이 코드에서는 다음 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Draws a rectangle to the screen prior to applying a scaling transform (the blue rectangle).</source>
          <target state="translated">크기 조정 변환을 (파란색 사각형) 적용 하기 전에 화면에 사각형을 그립니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Creates a matrix and scales it by 3 in the x-axis and 2 in the y-axis.</source>
          <target state="translated">매트릭스를 만든 다음 x 축 및 y에서 2 여 확장 합니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Applies this matrix transform to the rectangle.</source>
          <target state="translated">사각형에이 매트릭스 변환을 적용 합니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Draws the transformed rectangle to the screen (the red rectangle).</source>
          <target state="translated">화면 (빨간색 사각형)으로 변환된 된 사각형을 그립니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Notice that the red rectangle has been scaled by a factor of 3 in the x-axis and by 2 in the y-axis, including the upper left-hand corner of the rectangle (the beginning point of the rectangle).</source>
          <target state="translated">X 축 축소 및 사각형 (사각형의 시작 지점)의 왼쪽 위 모서리를 포함 하 여 y 2가 빨간색 직사각형 크기가 조정 되었는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>Applies the specified shear vector to this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> by prepending the shear vector.</source>
          <target state="translated">기울이기 벡터를 앞에 추가하여 지정된 기울이기 벡터를 이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>에 적용합니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single)">
          <source>The horizontal shear factor.</source>
          <target state="translated">수평 기울이기 비율입니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single)">
          <source>The vertical shear factor.</source>
          <target state="translated">수직 기울이기 비율입니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single)">
          <source>Applies the specified shear vector to this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> by prepending the shear transformation.</source>
          <target state="translated">기울이기 변환을 앞에 추가하여 지정된 기울이기 벡터를 이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>에 적용합니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single)">
          <source>The transformation applied in this method is a pure shear only if one of the parameters is 0.</source>
          <target state="translated">이 메서드에 적용 되는 변환 매개 변수 중 하나가 0 인 경우에 순수 개체 기울이기 됩니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single)">
          <source>Applied to a rectangle at the origin, when the <ph id="ph1">`shearY`</ph> factor is 0, the transformation moves the bottom edge horizontally by <ph id="ph2">`shearX`</ph> times the height of the rectangle.</source>
          <target state="translated">원점에서 사각형에 적용 때는 <ph id="ph1">`shearY`</ph> 요소가 0 일 변환 아래쪽 가장자리를 가로 방향으로 이동 <ph id="ph2">`shearX`</ph> 시간이 사각형의 높이입니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single)">
          <source>When the <ph id="ph1">`shearX`</ph> factor is 0, it moves the right edge vertically by <ph id="ph2">`shearY`</ph> times the width of the rectangle.</source>
          <target state="translated">경우는 <ph id="ph1">`shearX`</ph> 요소가 0 일 오른쪽 가장자리 세로 방향으로 이동 <ph id="ph2">`shearY`</ph> 시간이 사각형의 너비입니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single)">
          <source>Caution is in order when both parameters are nonzero, because the results are hard to predict.</source>
          <target state="translated">결과 예측 하기 때문에 매개 변수가 모두 0이 아니면이 주의 순서로 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single)">
          <source>For example, if both factors are 1, the transformation is singular (hence noninvertible), squeezing the entire plane to a single line.</source>
          <target state="translated">예를 들어 두 요소 모두 1 이면 이면 변환을 (따라서 배율이)를 한 줄으로 전체 평면이 합니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event object.</source>
          <target state="translated">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> 이벤트 개체입니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single)">
          <source>The code performs the following action:</source>
          <target state="translated">코드에서 다음 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single)">
          <source>Draws a rectangle to the screen, using a green pen, prior to applying a scaling transform.</source>
          <target state="translated">크기 조정 변환을 적용 하기 전에 녹색 펜을 사용 하 여 화면에 사각형을 그립니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single)">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix&gt;</ph> and uses it to set a world-coordinate transform for the <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph>.</source>
          <target state="translated">만듭니다는 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix&gt;</ph> 사용 하 여 변환 하 여 세계 좌표를 설정 하 고는 <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single)">
          <source>Draws another rectangle using a red pen.</source>
          <target state="translated">빨간색 펜을 사용 하 여 다른 사각형을 그립니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single)">
          <source>Draws an ellipse using a blue pen.</source>
          <target state="translated">파란색 펜을 사용 하는 타원을 그립니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single)">
          <source>The result is a green rectangle, a red parallelogram and a transformed, blue ellipse.</source>
          <target state="translated">결과 녹색 사각형, 빨간색 평행 사변형 및 변환 되 고 파란색 타원입니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single)">
          <source>Notice that the green rectangle (drawn prior to setting the transform) directly uses the coordinates supplied in the <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawRectangle%2A&gt;</ph> call.</source>
          <target state="translated">녹색 사각형 (변환 설정 하기 전에 그린) 다음에 유의에서 제공 하는 좌표에서 직접 사용 하는 <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawRectangle%2A&gt;</ph> 호출 합니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single)">
          <source>The other two figures are transformed prior to drawing.</source>
          <target state="translated">다른 두 그림 그리기 전에 변환 됩니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single)">
          <source>The rectangle is transformed to a parallelogram (red), and the ellipse (blue) is transformed to fit into the transformed parallelogram.</source>
          <target state="translated">사각형 평행 사변형 (빨간색)으로 변환 되 및 타원 (파랑)는 변환 된 평행 사변형에 맞게 변환 합니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single)">
          <source>Notice the bottom of the rectangle is moved (sheared) in the x-axis by a factor of two times the height of the rectangle, thus forming the parallelogram.</source>
          <target state="translated">사각형의 아래쪽에 두 번 평행 사변형을 형성 하는 사각형의 높이의 비율에 x 축 (기울이기가 적용 된) 이동 합니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The horizontal shear factor.</source>
          <target state="translated">수평 기울이기 비율입니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The vertical shear factor.</source>
          <target state="translated">수직 기울이기 비율입니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.MatrixOrder" /&gt;</ph> that specifies the order (append or prepend) in which the shear is applied.</source>
          <target state="translated">기울이기가 적용되는 순서(뒤에 추가 또는 앞에 추가)를 지정하는 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.MatrixOrder" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Applies the specified shear vector to this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> in the specified order.</source>
          <target state="translated">지정된 순서대로 지정된 기울이기 벡터를 이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>에 적용합니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The transformation applied in this method is a pure shear only if one of the parameters is 0.</source>
          <target state="translated">이 메서드에 적용 되는 변환 매개 변수 중 하나가 0 인 경우에 순수 개체 기울이기 됩니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Applied to a rectangle at the origin, when the <ph id="ph1">`shearY`</ph> factor is 0, the transformation moves the bottom edge horizontally by <ph id="ph2">`shearX`</ph> times the height of the rectangle.</source>
          <target state="translated">원점에서 사각형에 적용 때는 <ph id="ph1">`shearY`</ph> 요소가 0 일 변환 아래쪽 가장자리를 가로 방향으로 이동 <ph id="ph2">`shearX`</ph> 시간이 사각형의 높이입니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>When the <ph id="ph1">`shearX`</ph> factor is 0, it moves the right edge vertically by <ph id="ph2">`shearY`</ph> times the width of the rectangle.</source>
          <target state="translated">경우는 <ph id="ph1">`shearX`</ph> 요소가 0 일 오른쪽 가장자리 세로 방향으로 이동 <ph id="ph2">`shearY`</ph> 시간이 사각형의 너비입니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Caution is in order when both parameters are nonzero, because the results are hard to predict.</source>
          <target state="translated">결과 예측 하기 때문에 매개 변수가 모두 0이 아니면이 주의 순서로 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>For example, if both factors are 1, the transformation is singular (hence noninvertible), squeezing the entire plane to a single line.</source>
          <target state="translated">예를 들어 두 요소 모두 1 이면 이면 변환을 (따라서 배율이)를 한 줄으로 전체 평면이 합니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix.Shear%28System.Single%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">예제를 보려면 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix.Shear%28System.Single%2CSystem.Single%29&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>Applies the geometric transform this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> represents to an array of points.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>가 나타내는 기하학적 변환을 지점의 배열에 적용합니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.Point[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that represents the points to transform.</source>
          <target state="translated">변환할 지점을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> 구조체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.Point[])">
          <source>Applies the geometric transform represented by this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> to a specified array of points.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>가 나타내는 기하학적 변환을 지정된 지점의 배열에 적용합니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.Point[])">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event object.</source>
          <target state="translated">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> 이벤트 개체입니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.Point[])">
          <source>The code performs the following actions:</source>
          <target state="translated">이 코드에서는 다음 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.Point[])">
          <source>Creates an array of points that form a rectangle.</source>
          <target state="translated">사각형을 형성 하는 요소의 배열을 만듭니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.Point[])">
          <source>Draws this array of points (to the screen prior to applying a scaling transform (the blue rectangle).</source>
          <target state="translated">이 지점 배열 (화면에 그립니다 크기 조정 변환을 (파란색 사각형) 적용 하기 전에.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.Point[])">
          <source>Creates a matrix and scales it by 3 in the x-axis and 2 in the y-axis.</source>
          <target state="translated">매트릭스를 만든 다음 x 축 및 y에서 2 여 확장 합니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.Point[])">
          <source>Applies this matrix transform to the array of points.</source>
          <target state="translated">이 매트릭스 변환을 지점의 배열에 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.Point[])">
          <source>Draws the transformed array to the screen (the red rectangle).</source>
          <target state="translated">변환된 된 배열 (빨간색 사각형) 화면으로 그립니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.Point[])">
          <source>Notice that the red rectangle has been scaled by a factor of 3 in the x-axis and by 2 in the y-axis, including the upper left-hand corner of the rectangle (the beginning point of the rectangle).</source>
          <target state="translated">X 축 축소 및 사각형 (사각형의 시작 지점)의 왼쪽 위 모서리를 포함 하 여 y 2가 빨간색 직사각형 크기가 조정 되었는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.PointF[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that represents the points to transform.</source>
          <target state="translated">변환할 지점을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> 구조체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.PointF[])">
          <source>Applies the geometric transform represented by this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> to a specified array of points.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>가 나타내는 기하학적 변환을 지정된 지점의 배열에 적용합니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.PointF[])">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix.TransformPoints%28System.Drawing.Point%5B%5D%29&gt;</ph>.</source>
          <target state="translated">예제를 보려면 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix.TransformPoints%28System.Drawing.Point%5B%5D%29&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>Multiplies each vector in an array by the matrix.</source>
          <target state="translated">배열의 각 벡터에 매트릭스를 곱합니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>The translation elements of this matrix (third row) are ignored.</source>
          <target state="translated">이 매트릭스의 이동 요소(셋째 행)는 무시됩니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.Point[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that represents the points to transform.</source>
          <target state="translated">변환할 지점을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> 구조체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.Point[])">
          <source>Applies only the scale and rotate components of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> to the specified array of points.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>의 크기 조정 및 회전 구성 요소만 지정된 지점의 배열에 적용합니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.Point[])">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event object.</source>
          <target state="translated">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> 이벤트 개체입니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.Point[])">
          <source>The code performs the following actions:</source>
          <target state="translated">이 코드에서는 다음 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.Point[])">
          <source>Creates an array of points that form a rectangle.</source>
          <target state="translated">사각형을 형성 하는 요소의 배열을 만듭니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.Point[])">
          <source>Draws this array of points to the screen prior to applying a scaling transform (the blue rectangle).</source>
          <target state="translated">이 지점 배열 크기 조정 변환을 (파란색 사각형) 적용 하기 전에 화면으로 그립니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.Point[])">
          <source>Creates a matrix and scales it by 3 in the x-axis and 2 in the y-axis, and translates it by 100 in both axes.</source>
          <target state="translated">행렬을 만듭니다 및 x 축 및 y에서 2 여 확장 하 고 축 방향으로 100으로 변환 합니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.Point[])">
          <source>Lists the matrix elements to the screen.</source>
          <target state="translated">화면에 행렬 요소를 나열 합니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.Point[])">
          <source>Applies this matrix transform to the array of points.</source>
          <target state="translated">이 매트릭스 변환을 지점의 배열에 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.Point[])">
          <source>Draws the transformed array to the screen (the red rectangle).</source>
          <target state="translated">변환된 된 배열 (빨간색 사각형) 화면으로 그립니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.Point[])">
          <source>Notice that the red rectangle has been scaled by a factor of 3 in the x-axis and by 2 in the y-axis, including the upper left-hand corner of the rectangle (the beginning point of the rectangle) but the translation vector (the last two elements of the matrix) is ignored.</source>
          <target state="translated">필름 빨간색 사각형 (사각형의 시작 지점) 사각형의 왼쪽 위 모서리를 포함 하 여 y 축에서 값 2와 x 축의 비율로 크기 조정에 되지만 이동 벡터 (행렬의 마지막 두 개의 요소)은 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.PointF[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that represents the points to transform.</source>
          <target state="translated">변환할 지점을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> 구조체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.PointF[])">
          <source>Multiplies each vector in an array by the matrix.</source>
          <target state="translated">배열의 각 벡터에 매트릭스를 곱합니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.PointF[])">
          <source>The translation elements of this matrix (third row) are ignored.</source>
          <target state="translated">이 매트릭스의 이동 요소(셋째 행)는 무시됩니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.PointF[])">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix.TransformVectors%28System.Drawing.Point%5B%5D%29&gt;</ph>.</source>
          <target state="translated">예제를 보려면 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix.TransformVectors%28System.Drawing.Point%5B%5D%29&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>Applies the specified translation vector to this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> by prepending the translation vector.</source>
          <target state="translated">이동 벡터를 앞에 추가하여 지정된 이동 벡터를 이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>에 적용합니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single)">
          <source>The x value by which to translate this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>를 이동할 x 값입니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single)">
          <source>The y value by which to translate this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>를 이동할 y 값입니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single)">
          <source>Applies the specified translation vector (<ph id="ph1">&lt;paramref name="offsetX" /&gt;</ph> and <ph id="ph2">&lt;paramref name="offsetY" /&gt;</ph>) to this <ph id="ph3">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> by prepending the translation vector.</source>
          <target state="translated">이동 벡터를 앞에 추가하여 지정된 이동 벡터(<ph id="ph1">&lt;paramref name="offsetX" /&gt;</ph> 및 <ph id="ph2">&lt;paramref name="offsetY" /&gt;</ph>)를 이 <ph id="ph3">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>에 적용합니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix.Translate%28System.Single%2CSystem.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29&gt;</ph>.</source>
          <target state="translated">예제를 보려면 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix.Translate%28System.Single%2CSystem.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The x value by which to translate this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>를 이동할 x 값입니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The y value by which to translate this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>를 이동할 y 값입니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.MatrixOrder" /&gt;</ph> that specifies the order (append or prepend) in which the translation is applied to this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>에 이동이 적용되는 순서(뒤에 추가 또는 앞에 추가)를 지정하는 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.MatrixOrder" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Applies the specified translation vector to this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> in the specified order.</source>
          <target state="translated">지정된 순서대로 지정된 이동 벡터를 이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>에 적용합니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event object.</source>
          <target state="translated">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> 이벤트 개체입니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The code performs the following actions:</source>
          <target state="translated">이 코드에서는 다음 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Draws a rectangle to the screen prior to applying a translate transform (the blue rectangle).</source>
          <target state="translated">변환 (파란색 사각형)를 적용 하기 전에 화면에 사각형을 그립니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Creates a matrix and translates it by 100 in both axes.</source>
          <target state="translated">행렬을 만듭니다 및 축 방향으로 100으로 변환 합니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Applies this matrix transform to the rectangle,</source>
          <target state="translated">이 매트릭스 변환을 사각형으로 적용합니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Draws the transformed rectangle to the screen (the red rectangle).</source>
          <target state="translated">화면 (빨간색 사각형)으로 변환된 된 사각형을 그립니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Notice that the beginning of the red rectangle is located 100 points in both axes from the beginning of the blue triangle.</source>
          <target state="translated">빨간색 사각형의 시작 부분 파란색 삼각형의 시작 부분에서 두 축에 있는 100 포인트 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.VectorTransformPoints(System.Drawing.Point[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that represents the points to transform.</source>
          <target state="translated">변환할 지점을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> 구조체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.VectorTransformPoints(System.Drawing.Point[])">
          <source>Multiplies each vector in an array by the matrix.</source>
          <target state="translated">배열의 각 벡터에 매트릭스를 곱합니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.VectorTransformPoints(System.Drawing.Point[])">
          <source>The translation elements of this matrix (third row) are ignored.</source>
          <target state="translated">이 매트릭스의 이동 요소(셋째 행)는 무시됩니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>