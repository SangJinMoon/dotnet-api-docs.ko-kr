<Type Name="Matrix" FullName="System.Drawing.Drawing2D.Matrix">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d7c894d909e48d1bcbd0f4c91190becad156464e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Matrix : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Matrix extends System.MarshalByRefObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Drawing2D.Matrix" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Matrix&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Matrix sealed : MarshalByRefObject, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="faae7-101">기하학적 변환을 나타내는 3 x 3 유사 매트릭스를 캡슐화합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="faae7-101">Encapsulates a 3-by-3 affine matrix that represents a geometric transform.</span>
      </span>
      <span data-ttu-id="faae7-102">이 클래스는 상속될 수 없습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="faae7-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="faae7-103">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] 는 3x3 유사 변형에 저장할 수 있습니다는 <xref:System.Drawing.Drawing2D.Matrix> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-103">In [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] you can store an affine transformation in a <xref:System.Drawing.Drawing2D.Matrix> object.</span></span> <span data-ttu-id="faae7-104">나타내는 3x3 유사 변형 매트릭스의 세 번째 열은 항상 때문에 (0, 0, 1)을 만들 때 처음 두 열에 있는 6 개의 숫자만 지정는 <xref:System.Drawing.Drawing2D.Matrix> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-104">Because the third column of a matrix that represents an affine transformation is always (0, 0, 1), you specify only the six numbers in the first two columns when you construct a <xref:System.Drawing.Drawing2D.Matrix> object.</span></span> <span data-ttu-id="faae7-105">문이 `Matrix myMatrix = new Matrix(0, 1, -1, 0, 3, 4)` 다음 그림에 표시 된 매트릭스를 구성 합니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-105">The statement `Matrix myMatrix = new Matrix(0, 1, -1, 0, 3, 4)` constructs the matrix shown in the following figure.</span></span>  
  
 <span data-ttu-id="faae7-106">![변환](~/add/media/aboutgdip05-art10.gif "변환")</span><span class="sxs-lookup"><span data-stu-id="faae7-106">![Transformations](~/add/media/aboutgdip05-art10.gif "Transformations")</span></span>  
  
## <a name="composite-transformations"></a><span data-ttu-id="faae7-107">합성 변형</span><span class="sxs-lookup"><span data-stu-id="faae7-107">Composite Transformations</span></span>  
 <span data-ttu-id="faae7-108">복합 변환에는 다른 뒤에 오는 단일 변환의 시퀀스입니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-108">A composite transformation is a sequence of transformations, one followed by the other.</span></span> <span data-ttu-id="faae7-109">매트릭스 및 다음 목록에는 변환을 고려 합니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-109">Consider the matrices and transformations in the following list:</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="faae7-110">Matrix A</span><span class="sxs-lookup"><span data-stu-id="faae7-110">Matrix A</span></span>|<span data-ttu-id="faae7-111">90도 회전</span><span class="sxs-lookup"><span data-stu-id="faae7-111">Rotate 90 degrees</span></span>|  
|<span data-ttu-id="faae7-112">Matrix B</span><span class="sxs-lookup"><span data-stu-id="faae7-112">Matrix B</span></span>|<span data-ttu-id="faae7-113">X 방향으로 2의 비율로 크기 조정</span><span class="sxs-lookup"><span data-stu-id="faae7-113">Scale by a factor of 2 in the x direction</span></span>|  
|<span data-ttu-id="faae7-114">C 매트릭스</span><span class="sxs-lookup"><span data-stu-id="faae7-114">Matrix C</span></span>|<span data-ttu-id="faae7-115">Y 방향의 3 단위</span><span class="sxs-lookup"><span data-stu-id="faae7-115">Translate 3 units in the y direction</span></span>|  
  
 <span data-ttu-id="faae7-116">점 (2, 1)으로 시작 하는 경우-행렬 [2 1 1]로 표시-A, B, C, 점 (2, 1)에 나열 된 순서로 세 가지 변환 될 예정 다음 곱하면 합니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-116">If we start with the point (2, 1) — represented by the matrix [2 1 1] — and multiply by A, then B, then C, the point (2, 1) will undergo the three transformations in the order listed.</span></span>  
  
 <span data-ttu-id="faae7-117">[2 1 1]ABC = [-2 5 1]</span><span class="sxs-lookup"><span data-stu-id="faae7-117">[2 1 1]ABC = [-2 5 1]</span></span>  
  
 <span data-ttu-id="faae7-118">대신 세 개의 별도 행렬에 복합 변환의 세 부분을 저장, A, 곱하기 수 B 및 C 함께 전체 복합 변환을 저장 하는 단일 3 × 3 행렬을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-118">Rather than store the three parts of the composite transformation in three separate matrices, you can multiply A, B, and C together to get a single 3×3 matrix that stores the entire composite transformation.</span></span> <span data-ttu-id="faae7-119">ABC 가정 = D D를 곱하면 A, B, C 곱하면와 동일한 결과 제공 하는 다음</span><span class="sxs-lookup"><span data-stu-id="faae7-119">Suppose ABC = D. Then a point multiplied by D gives the same result as a point multiplied by A, then B, then C.</span></span>  
  
 <span data-ttu-id="faae7-120">[2 1 1]D = [-2 5 1]</span><span class="sxs-lookup"><span data-stu-id="faae7-120">[2 1 1]D = [-2 5 1]</span></span>  
  
 <span data-ttu-id="faae7-121">다음 그림 A "," B "," C "및" 4. 매트릭스를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-121">The following illustration shows the matrices A, B, C, and D.</span></span>  
  
 <span data-ttu-id="faae7-122">![변환](~/add/media/aboutgdip05-art12.gif "변환")</span><span class="sxs-lookup"><span data-stu-id="faae7-122">![Transformations](~/add/media/aboutgdip05-art12.gif "Transformations")</span></span>  
  
 <span data-ttu-id="faae7-123">개별 변형 매트릭스를 곱하여 복합 변환 매트릭스를 만들 수 있습니다 팩트 관계 변환 시퀀스는 단일에 저장할 수 있습니다 의미 <xref:System.Drawing.Drawing2D.Matrix> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-123">The fact that the matrix of a composite transformation can be formed by multiplying the individual transformation matrices means that any sequence of affine transformations can be stored in a single <xref:System.Drawing.Drawing2D.Matrix> object.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="faae7-124">복합 변환의 순서가 중요 합니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-124">The order of a composite transformation is important.</span></span> <span data-ttu-id="faae7-125">일반적으로, 다음 크기 조정, 이동을 차례로 동일 하지는 않습니다 눈금으로 한 후를 회전 하 고 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-125">In general, rotate, then scale, then translate is not the same as scale, then rotate, then translate.</span></span> <span data-ttu-id="faae7-126">마찬가지로, 매트릭스 곱의 순서는 중요 합니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-126">Similarly, the order of matrix multiplication is important.</span></span> <span data-ttu-id="faae7-127">일반적으로 ABC는 하지 하기와 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-127">In general, ABC is not the same as BAC.</span></span>  
  
 <span data-ttu-id="faae7-128"><xref:System.Drawing.Drawing2D.Matrix> 클래스 복합 변환을 구성 하는 여러 가지 방법을 제공: <xref:System.Drawing.Drawing2D.Matrix.Multiply%2A>, <xref:System.Drawing.Drawing2D.Matrix.Rotate%2A>, <xref:System.Drawing.Drawing2D.Matrix.RotateAt%2A>, <xref:System.Drawing.Drawing2D.Matrix.Scale%2A>, <xref:System.Drawing.Drawing2D.Matrix.Shear%2A>, 및 <xref:System.Drawing.Drawing2D.Matrix.Translate%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-128">The <xref:System.Drawing.Drawing2D.Matrix> class provides several methods for building a composite transformation: <xref:System.Drawing.Drawing2D.Matrix.Multiply%2A>, <xref:System.Drawing.Drawing2D.Matrix.Rotate%2A>, <xref:System.Drawing.Drawing2D.Matrix.RotateAt%2A>, <xref:System.Drawing.Drawing2D.Matrix.Scale%2A>, <xref:System.Drawing.Drawing2D.Matrix.Shear%2A>, and <xref:System.Drawing.Drawing2D.Matrix.Translate%2A>.</span></span> <span data-ttu-id="faae7-129">다음 예제에서는 30도 회전 다음 y 방향으로 2 배 하 여 확장 한 다음 x 방향의 5 단위를 변환 하는 복합 변환 행렬을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-129">The following example creates the matrix of a composite transformation that first rotates 30 degrees, then scales by a factor of 2 in the y direction, and then translates 5 units in the x direction:</span></span>  
  
 [!code-csharp[System.Drawing.CoordinateSystems#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.CoordinateSystems/CS/Class1.cs#11)]
 [!code-vb[System.Drawing.CoordinateSystems#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.CoordinateSystems/VB/Class1.vb#11)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="faae7-130">
            <see cref="T:System.Drawing.Drawing2D.Matrix" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-130">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Matrix ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Matrix();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="faae7-131">
            <see cref="T:System.Drawing.Drawing2D.Matrix" /> 클래스의 새 인스턴스를 항등 매트릭스로 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-131">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> class as the identity matrix.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Matrix (System.Drawing.Rectangle rect, System.Drawing.Point[] plgpts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Rectangle rect, valuetype System.Drawing.Point[] plgpts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.Rectangle,System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rect As Rectangle, plgpts As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Matrix(System::Drawing::Rectangle rect, cli::array &lt;System::Drawing::Point&gt; ^ plgpts);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="plgpts" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="faae7-132">변환할 사각형을 나타내는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-132">A <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle to be transformed.</span>
          </span>
        </param>
        <param name="plgpts">
          <span data-ttu-id="faae7-133">사각형의 왼쪽 위, 오른쪽 위 및 왼쪽 아래 모퉁이가 변환될 평행 사변형의 지점을 나타내는 세 <see cref="T:System.Drawing.Point" /> 구조체 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-133">An array of three <see cref="T:System.Drawing.Point" /> structures that represents the points of a parallelogram to which the upper-left, upper-right, and lower-left corners of the rectangle is to be transformed.</span>
          </span>
          <span data-ttu-id="faae7-134">처음 세 모퉁이는 평행 사변형의 오른쪽 아래 모퉁이가 됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-134">The lower-right corner of the parallelogram is implied by the first three corners.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="faae7-135">지정된 사각형 및 지점의 배열에 의해 정의된 기하학적 변환으로 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-135">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> class to the geometric transform defined by the specified rectangle and array of points.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="faae7-136">기하학적 변환을 지정 된 영역을 매핑하는 나타낼 수 있도록이 메서드는 새 Matrix를 초기화는 `rect` 에서 3 개의 점으로 정의 된 평행 사변형에 매개 변수는 `plgpts` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-136">This method initializes the new Matrix such that it represents the geometric transform that maps the rectangle specified by the `rect` parameter to the parallelogram defined by the three points in the `plgpts` parameter.</span></span> <span data-ttu-id="faae7-137">사각형의 왼쪽 위 모서리에서 첫 번째 요소와 매핑됩니다는 `plgpts` 배열 오른쪽 위의 두 번째 요소와 매핑됩니다 및 왼쪽 아래 모서리 세 번째 요소와 매핑됩니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-137">The upper-left corner of the rectangle is mapped to the first point in the `plgpts` array, the upper-right corner is mapped to the second point, and the lower-left corner is mapped to the third point.</span></span> <span data-ttu-id="faae7-138">처음 3 개는 평행 사변형의 오른쪽 아래 지점이 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-138">The lower-right point of the parallelogram is implied by the first three.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Matrix (System.Drawing.RectangleF rect, System.Drawing.PointF[] plgpts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.RectangleF rect, valuetype System.Drawing.PointF[] plgpts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.RectangleF,System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rect As RectangleF, plgpts As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Matrix(System::Drawing::RectangleF rect, cli::array &lt;System::Drawing::PointF&gt; ^ plgpts);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
        <Parameter Name="plgpts" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="faae7-139">변환할 사각형을 나타내는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-139">A <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle to be transformed.</span>
          </span>
        </param>
        <param name="plgpts">
          <span data-ttu-id="faae7-140">사각형의 왼쪽 위, 오른쪽 위 및 왼쪽 아래 모퉁이가 변환될 평행 사변형의 지점을 나타내는 세 <see cref="T:System.Drawing.PointF" /> 구조체 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-140">An array of three <see cref="T:System.Drawing.PointF" /> structures that represents the points of a parallelogram to which the upper-left, upper-right, and lower-left corners of the rectangle is to be transformed.</span>
          </span>
          <span data-ttu-id="faae7-141">처음 세 모퉁이는 평행 사변형의 오른쪽 아래 모퉁이가 됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-141">The lower-right corner of the parallelogram is implied by the first three corners.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="faae7-142">지정된 사각형 및 지점의 배열에 의해 정의된 기하학적 변환으로 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-142">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> class to the geometric transform defined by the specified rectangle and array of points.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="faae7-143">이 메서드는 새로운 초기화 <xref:System.Drawing.Drawing2D.Matrix> 기하학적 변환을 지정 된 영역을 매핑하는 나타낼 수 있도록는 `rect` 에서 3 개의 점으로 정의 된 평행 사변형에 매개 변수는 `plgpts` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-143">This method initializes the new <xref:System.Drawing.Drawing2D.Matrix> such that it represents the geometric transform that maps the rectangle specified by the `rect` parameter to the parallelogram defined by the three points in the `plgpts` parameter.</span></span> <span data-ttu-id="faae7-144">사각형의 왼쪽 위 모서리에서 첫 번째 요소와 매핑됩니다는 `plgpts` 배열 오른쪽 위의 두 번째 요소와 매핑됩니다 및 왼쪽 아래 모서리 세 번째 요소와 매핑됩니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-144">The upper-left corner of the rectangle is mapped to the first point in the `plgpts` array, the upper-right corner is mapped to the second point, and the lower-left corner is mapped to the third point.</span></span> <span data-ttu-id="faae7-145">처음 3 개는 평행 사변형의 오른쪽 아래 지점이 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-145">The lower-right point of the parallelogram is implied by the first three.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Matrix (float m11, float m12, float m21, float m22, float dx, float dy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float32 m11, float32 m12, float32 m21, float32 m22, float32 dx, float32 dy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (m11 As Single, m12 As Single, m21 As Single, m22 As Single, dx As Single, dy As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Matrix(float m11, float m12, float m21, float m22, float dx, float dy);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="m11" Type="System.Single" />
        <Parameter Name="m12" Type="System.Single" />
        <Parameter Name="m21" Type="System.Single" />
        <Parameter Name="m22" Type="System.Single" />
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="m11">
          <span data-ttu-id="faae7-146">새 <see cref="T:System.Drawing.Drawing2D.Matrix" />의 첫째 행과 첫째 열 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-146">The value in the first row and first column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </param>
        <param name="m12">
          <span data-ttu-id="faae7-147">새 <see cref="T:System.Drawing.Drawing2D.Matrix" />의 첫째 행과 둘째 열 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-147">The value in the first row and second column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </param>
        <param name="m21">
          <span data-ttu-id="faae7-148">새 <see cref="T:System.Drawing.Drawing2D.Matrix" />의 둘째 행과 첫째 열 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-148">The value in the second row and first column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </param>
        <param name="m22">
          <span data-ttu-id="faae7-149">새 <see cref="T:System.Drawing.Drawing2D.Matrix" />의 둘째 행과 둘째 열 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-149">The value in the second row and second column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </param>
        <param name="dx">
          <span data-ttu-id="faae7-150">새 <see cref="T:System.Drawing.Drawing2D.Matrix" />의 셋째 행과 첫째 열 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-150">The value in the third row and first column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </param>
        <param name="dy">
          <span data-ttu-id="faae7-151">새 <see cref="T:System.Drawing.Drawing2D.Matrix" />의 셋째 행과 둘째 열 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-151">The value in the third row and second column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="faae7-152">지정된 요소를 사용하여 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-152">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> class with the specified elements.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.Matrix Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Drawing2D.Matrix Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Matrix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Drawing2D::Matrix ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.Matrix</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="faae7-153">이 <see cref="T:System.Drawing.Drawing2D.Matrix" />의 정확한 복사본을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-153">Creates an exact copy of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="faae7-154">이 메서드가 만드는 <see cref="T:System.Drawing.Drawing2D.Matrix" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-154">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> that this method creates.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="faae7-155">이 <see cref="T:System.Drawing.Drawing2D.Matrix" />에서 사용하는 리소스를 모두 해제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-155">Releases all resources used by this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="faae7-156">호출 `Dispose` 이 사용 하는 리소스 <xref:System.Drawing.Drawing2D.Matrix> 다른 용도에 다시 할당 될 수 있는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-156">Calling `Dispose` allows the resources used by this <xref:System.Drawing.Drawing2D.Matrix> object to be reallocated for other purposes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Elements">
      <MemberSignature Language="C#" Value="public float[] Elements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32[] Elements" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.Matrix.Elements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Elements As Single()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;float&gt; ^ Elements { cli::array &lt;float&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="faae7-157">이 <see cref="T:System.Drawing.Drawing2D.Matrix" />의 요소를 나타내는 부동 소수점 값의 배열을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-157">Gets an array of floating-point values that represents the elements of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="faae7-158">이 <see cref="T:System.Drawing.Drawing2D.Matrix" />의 요소를 나타내는 부동 소수점 값의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-158">An array of floating-point values that represents the elements of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="faae7-159">요소 m11, m12, m21, m22, dx와 dy는 <xref:System.Drawing.Drawing2D.Matrix> 해당 순서로 배열의 값으로 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-159">The elements m11, m12, m21, m22, dx, and dy of the <xref:System.Drawing.Drawing2D.Matrix> are represented by the values in the array in that order.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="faae7-160">테스트할 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-160">The object to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="faae7-161">지정된 개체가 <see cref="T:System.Drawing.Drawing2D.Matrix" />이고 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />와 동일한지 여부를 테스트합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-161">Tests whether the specified object is a <see cref="T:System.Drawing.Drawing2D.Matrix" /> and is identical to this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="faae7-162">이 메서드는 <paramref name="obj" />가 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />와 동일한 지정된 <see cref="T:System.Drawing.Drawing2D.Matrix" />이면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-162">This method returns <see langword="true" /> if <paramref name="obj" /> is the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> identical to this <see cref="T:System.Drawing.Drawing2D.Matrix" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~Matrix ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!Matrix ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="faae7-163">가비지 컬렉션이 회수하기 전에 개체가 리소스를 해제하고 다른 정리 작업을 수행할 수 있게 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-163">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="faae7-164">해시 코드를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-164">Returns a hash code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="faae7-165">이 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 대한 해시 코드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-165">The hash code for this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invert">
      <MemberSignature Language="C#" Value="public void Invert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Invert" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invert ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invert();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="faae7-166">역변환할 수 있으면 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />를 역변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-166">Inverts this <see cref="T:System.Drawing.Drawing2D.Matrix" />, if it is invertible.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="faae7-167">다음 코드 예제에서는 매트릭스를 만든 다음 것을 반전 합니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-167">The following code example creates a matrix and inverts it:</span></span>  
  
```csharp  
Matrix myMatrix = new Matrix(3, 5, 1, 2, 2, 4);  
 myMatrix.Invert();  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsIdentity">
      <MemberSignature Language="C#" Value="public bool IsIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsIdentity" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.Matrix.IsIdentity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsIdentity As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsIdentity { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="faae7-168">이 <see cref="T:System.Drawing.Drawing2D.Matrix" />가 항등 매트릭스인지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-168">Gets a value indicating whether this <see cref="T:System.Drawing.Drawing2D.Matrix" /> is the identity matrix.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="faae7-169">이 속성은 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />가 항등 매트릭스이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-169">This property is <see langword="true" /> if this <see cref="T:System.Drawing.Drawing2D.Matrix" /> is identity; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInvertible">
      <MemberSignature Language="C#" Value="public bool IsInvertible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInvertible" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.Matrix.IsInvertible" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInvertible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInvertible { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="faae7-170">이 <see cref="T:System.Drawing.Drawing2D.Matrix" />를 역변환할 수 있는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-170">Gets a value indicating whether this <see cref="T:System.Drawing.Drawing2D.Matrix" /> is invertible.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="faae7-171">이 속성은 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />를 역변환할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-171">This property is <see langword="true" /> if this <see cref="T:System.Drawing.Drawing2D.Matrix" /> is invertible; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Multiply">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="faae7-172">지정된 <see cref="T:System.Drawing.Drawing2D.Matrix" />를 앞에 추가하여 지정된 <see cref="T:System.Drawing.Drawing2D.Matrix" />를 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 곱합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-172">Multiplies this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the specified <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public void Multiply (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Multiply(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Multiply(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix">
          <span data-ttu-id="faae7-173">이 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 곱할 <see cref="T:System.Drawing.Drawing2D.Matrix" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-173">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which this <see cref="T:System.Drawing.Drawing2D.Matrix" /> is to be multiplied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="faae7-174">지정된 <see cref="T:System.Drawing.Drawing2D.Matrix" />를 앞에 추가하여 <paramref name="matrix" /> 매개 변수에 지정된 매트릭스를 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 곱합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-174">Multiplies this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by the matrix specified in the <paramref name="matrix" /> parameter, by prepending the specified <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="faae7-175">예제를 보려면 <xref:System.Drawing.Drawing2D.Matrix.Multiply%2A>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="faae7-175">For an example, see <xref:System.Drawing.Drawing2D.Matrix.Multiply%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public void Multiply (System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Multiply(class System.Drawing.Drawing2D.Matrix matrix, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Multiply(System::Drawing::Drawing2D::Matrix ^ matrix, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="matrix">
          <span data-ttu-id="faae7-176">이 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 곱할 <see cref="T:System.Drawing.Drawing2D.Matrix" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-176">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which this <see cref="T:System.Drawing.Drawing2D.Matrix" /> is to be multiplied.</span>
          </span>
        </param>
        <param name="order">
          <span data-ttu-id="faae7-177">곱할 순서를 나타내는 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-177">The <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that represents the order of the multiplication.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="faae7-178">
            <paramref name="order" /> 매개 변수에 지정된 순서대로 <paramref name="matrix" /> 매개 변수에 지정된 매트릭스를 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 곱합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-178">Multiplies this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by the matrix specified in the <paramref name="matrix" /> parameter, and in the order specified in the <paramref name="order" /> parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="faae7-179">지정 된 순서가 경우 <xref:System.Drawing.Drawing2D.MatrixOrder.Prepend>,이 <xref:System.Drawing.Drawing2D.Matrix> 앞에 추가 된 순서 대로 지정된 된 매트릭스를 곱합니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-179">If the specified order is <xref:System.Drawing.Drawing2D.MatrixOrder.Prepend>, this <xref:System.Drawing.Drawing2D.Matrix> is multiplied by the specified matrix in a prepended order.</span></span> <span data-ttu-id="faae7-180">지정 된 순서가 경우 <xref:System.Drawing.Drawing2D.MatrixOrder.Append>,이 <xref:System.Drawing.Drawing2D.Matrix> 추가 된 순서로 지정된 된 매트릭스를 곱합니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-180">If the specified order is <xref:System.Drawing.Drawing2D.MatrixOrder.Append>, this <xref:System.Drawing.Drawing2D.Matrix> is multiplied by the specified matrix in an appended order.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="faae7-181">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Control.Paint> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-181">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="faae7-182">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-182">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="faae7-183">세 가지 행렬을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-183">Creates three matrices.</span></span>  
  
-   <span data-ttu-id="faae7-184">화면에 1 매트릭스의 내용을 나열 합니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-184">Lists the contents of matrix 1 to the screen.</span></span>  
  
-   <span data-ttu-id="faae7-185">매트릭스 1 행렬 2로 곱하고 1 행렬에 결과 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-185">Multiplies matrix 1 by matrix 2 and stores the result in matrix 1.</span></span>  
  
-   <span data-ttu-id="faae7-186">화면에 1 매트릭스의 내용을 나열 합니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-186">Lists the contents of matrix 1 to the screen.</span></span>  
  
-   <span data-ttu-id="faae7-187">매트릭스 1 3, 매트릭스에에서 저장 된 결과 곱하고 다시 1 행렬에 결과 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-187">Multiplies the result stored in matrix 1 by matrix 3, and again stores the result in matrix 1.</span></span>  
  
-   <span data-ttu-id="faae7-188">화면에 1 매트릭스의 내용을 나열 합니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-188">Lists the contents of matrix 1 to the screen.</span></span>  
  
-   <span data-ttu-id="faae7-189">1 매트릭스 변환을 (파란색 사각형)를 적용 하기 전에 화면에 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-189">Draws a rectangle to the screen prior to applying the matrix 1 transform (the blue rectangle).</span></span>  
  
-   <span data-ttu-id="faae7-190">사각형에 변환을 적용합니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-190">Applies the transform to the rectangle.</span></span>  
  
-   <span data-ttu-id="faae7-191">이전 사각형과 동일한 좌표를 사용 하 여 화면 (빨간색 사각형)으로 변환된 된 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-191">Draws the transformed rectangle to the screen (the red rectangle), using the same coordinates as the previous rectangle.</span></span>  
  
 <span data-ttu-id="faae7-192">빨간색 직사각형 가로 방향에 두 대의 비율로 크기 조정에 다음 90도 회전 공지와 다음 (번역된) 250 포인트 x 방향의 50 포인트 y 방향으로 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-192">Notice that the red rectangle has been scaled by a factor of two in the horizontal direction, then rotated 90 degrees, and then moved (translated) 250 points in the x direction and 50 points in the y direction.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#1)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OffsetX">
      <MemberSignature Language="C#" Value="public float OffsetX { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 OffsetX" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.Matrix.OffsetX" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OffsetX As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float OffsetX { float get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="faae7-193">이 <see cref="T:System.Drawing.Drawing2D.Matrix" />의 x 이동 값(dx 값 또는 셋째 행과 첫째 열에 있는 요소)을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-193">Gets the x translation value (the dx value, or the element in the third row and first column) of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="faae7-194">이 <see cref="T:System.Drawing.Drawing2D.Matrix" />의 x 이동 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-194">The x translation value of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OffsetY">
      <MemberSignature Language="C#" Value="public float OffsetY { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 OffsetY" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.Matrix.OffsetY" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OffsetY As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float OffsetY { float get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="faae7-195">이 <see cref="T:System.Drawing.Drawing2D.Matrix" />의 y 이동 값(dy 값 또는 셋째 행과 둘째 열에 있는 요소)을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-195">Gets the y translation value (the dy value, or the element in the third row and second column) of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="faae7-196">이 <see cref="T:System.Drawing.Drawing2D.Matrix" />의 y 이동 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-196">The y translation value of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="faae7-197">항등 매트릭스의 요소를 포함하도록 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />를 다시 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-197">Resets this <see cref="T:System.Drawing.Drawing2D.Matrix" /> to have the elements of the identity matrix.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="faae7-198">요소를 항등 매트릭스의 주요 대각선은 1입니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-198">The elements on the main diagonal of the identity matrix are 1.</span></span> <span data-ttu-id="faae7-199">항등 매트릭스의 다른 모든 요소는 0입니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-199">All other elements of the identity matrix are 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="faae7-200">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Control.Paint> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-200">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="faae7-201">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-201">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="faae7-202">크기 조정 행렬을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-202">Creates a scaling matrix.</span></span>  
  
-   <span data-ttu-id="faae7-203">화면에 행렬 요소를 나열 합니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-203">Lists the matrix elements to the screen.</span></span>  
  
-   <span data-ttu-id="faae7-204">항등 행렬으로 다시 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-204">Resets the matrix to identity.</span></span>  
  
-   <span data-ttu-id="faae7-205">화면에 요소를 나열 합니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-205">Lists the elements to the screen.</span></span>  
  
-   <span data-ttu-id="faae7-206">X 축에서 및 y 축 40 포인트 50 포인트 행렬으로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-206">Translates the matrix by 50 points in the x-axis and 40 points in the y-axis.</span></span>  
  
-   <span data-ttu-id="faae7-207">화면에 번역 된 매트릭스의 요소를 나열합니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-207">Lists the elements of the translated matrix to the screen.</span></span>  
  
-   <span data-ttu-id="faae7-208">사각형 (파란색 사각형) 행렬 변환을 적용 하기 전에 화면에 그려지는 그립니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-208">Draws a rectangle is drawn to the screen prior to applying the matrix transform (the blue rectangle).</span></span>  
  
-   <span data-ttu-id="faae7-209">사각형에 변환을 적용합니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-209">Applies the transform to the rectangle.</span></span>  
  
-   <span data-ttu-id="faae7-210">변환된 된 사각형 이전 사각형과 동일한 좌표를 사용 하는 화면 (빨간색 사각형)에 그려지는 그립니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-210">Draws the transformed rectangle is drawn to the screen (the red rectangle), using the same coordinates as the previous rectangle.</span></span>  
  
 <span data-ttu-id="faae7-211">빨간색 직사각형 되지 않은 (때문 reset) 크기가 조정 설정 되었지만 x 축과 y 축으로 이동 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-211">Notice that the red rectangle was not scaled (because of the reset) but was translated in the x-axis and y-axis.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#2)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Rotate">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="faae7-212">원점을 기준으로 지정된 각도만큼 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 시계 방향 회전을 적용합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-212">Applies a clockwise rotation of the specified angle about the origin to this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Rotate">
      <MemberSignature Language="C#" Value="public void Rotate (float angle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Rotate(float32 angle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Rotate(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Rotate (angle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rotate(float angle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="angle">
          <span data-ttu-id="faae7-213">회전 각도(단위: 도)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-213">The angle of the rotation, in degrees.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="faae7-214">원점을 기준으로 지정된 각도만큼 이 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 앞에 시계 방향 회전을 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-214">Prepend to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> a clockwise rotation, around the origin and by the specified angle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="faae7-215">예제를 보려면 <xref:System.Drawing.Drawing2D.Matrix.Rotate%28System.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="faae7-215">For an example, see <xref:System.Drawing.Drawing2D.Matrix.Rotate%28System.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rotate">
      <MemberSignature Language="C#" Value="public void Rotate (float angle, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Rotate(float32 angle, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Rotate(System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Rotate (angle As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rotate(float angle, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="angle">
          <span data-ttu-id="faae7-216">회전 각도(단위: 도)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-216">The angle (extent) of the rotation, in degrees.</span>
          </span>
        </param>
        <param name="order">
          <span data-ttu-id="faae7-217">이 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 회전이 적용되는 순서(뒤에 추가 또는 앞에 추가)를 지정하는 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-217">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies the order (append or prepend) in which the rotation is applied to this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="faae7-218">원점(x-좌표 및 y-좌표가 0임)을 기준으로 <paramref name="angle" /> 매개 변수에 지정된 각도만큼 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 시계 방향 회전을 적용합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-218">Applies a clockwise rotation of an amount specified in the <paramref name="angle" /> parameter, around the origin (zero x and y coordinates) for this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="faae7-219">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Control.Paint> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-219">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="faae7-220">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-220">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="faae7-221">회전 변환을 (파란색 사각형)를 적용 하기 전에 화면에 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-221">Draws a rectangle to the screen prior to applying a rotation transform (the blue rectangle).</span></span>  
  
-   <span data-ttu-id="faae7-222">행렬을 만들고 45도 회전 합니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-222">Creates a matrix and rotates it 45 degrees.</span></span>  
  
-   <span data-ttu-id="faae7-223">사각형에이 매트릭스 변환을 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-223">Applies this matrix transform to the rectangle.</span></span>  
  
-   <span data-ttu-id="faae7-224">화면 (빨간색 사각형)으로 변환된 된 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-224">Draws the transformed rectangle to the screen (the red rectangle).</span></span>  
  
 <span data-ttu-id="faae7-225">빨간색 직사각형 회전 된 것을 알 주위 0, 0 화면 좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-225">Notice that the red rectangle has been rotated around the 0, 0 screen coordinates.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#3)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RotateAt">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="faae7-226">회전을 앞에 추가하여 지정된 지점을 기준으로 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 시계 방향 회전을 적용합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-226">Applies a clockwise rotation about the specified point to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the rotation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RotateAt">
      <MemberSignature Language="C#" Value="public void RotateAt (float angle, System.Drawing.PointF point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateAt(float32 angle, valuetype System.Drawing.PointF point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotateAt (angle As Single, point As PointF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotateAt(float angle, System::Drawing::PointF point);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
        <Parameter Name="point" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="angle">
          <span data-ttu-id="faae7-227">회전 각도(단위: 도)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-227">The angle (extent) of the rotation, in degrees.</span>
          </span>
        </param>
        <param name="point">
          <span data-ttu-id="faae7-228">회전의 중심을 나타내는 <see cref="T:System.Drawing.PointF" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-228">A <see cref="T:System.Drawing.PointF" /> that represents the center of the rotation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="faae7-229">회전을 앞에 추가하여 <paramref name="point" /> 매개 변수에 지정된 지점을 기준으로 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 시계 방향 회전을 적용합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-229">Applies a clockwise rotation to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> around the point specified in the <paramref name="point" /> parameter, and by prepending the rotation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="faae7-230">다음 코드 예제는 <xref:System.Drawing.Drawing2D.Matrix> 및 <xref:System.Drawing.Drawing2D.GraphicsPath.Transform%2A> 메서드를 문자열로 회전 합니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-230">The following code example demonstrates using a <xref:System.Drawing.Drawing2D.Matrix> and the <xref:System.Drawing.Drawing2D.GraphicsPath.Transform%2A> method to rotate a string.</span></span> <span data-ttu-id="faae7-231">이 예제는 Windows Forms에서 사용 되는 설계 합니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-231">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="faae7-232">폼을 만들고 다음 코드를 붙여 넣습니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-232">Create a form and paste the following code into it.</span></span> <span data-ttu-id="faae7-233">호출 된 `DrawVerticalStringFromBottomUp` 폼의 <xref:System.Windows.Forms.Control.Paint> 전달 되는 이벤트 처리기 `e` 으로 <xref:System.Windows.Forms.PaintEventArgs>합니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-233">Call the `DrawVerticalStringFromBottomUp` method in the form's <xref:System.Windows.Forms.Control.Paint> event handler, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.MiscExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.MiscExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CS/form1.cs#5)]
 [!code-vb[System.Drawing.MiscExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscExamples/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RotateAt">
      <MemberSignature Language="C#" Value="public void RotateAt (float angle, System.Drawing.PointF point, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateAt(float32 angle, valuetype System.Drawing.PointF point, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotateAt (angle As Single, point As PointF, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotateAt(float angle, System::Drawing::PointF point, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
        <Parameter Name="point" Type="System.Drawing.PointF" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="angle">
          <span data-ttu-id="faae7-234">회전 각도(단위: 도)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-234">The angle of the rotation, in degrees.</span>
          </span>
        </param>
        <param name="point">
          <span data-ttu-id="faae7-235">회전의 중심을 나타내는 <see cref="T:System.Drawing.PointF" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-235">A <see cref="T:System.Drawing.PointF" /> that represents the center of the rotation.</span>
          </span>
        </param>
        <param name="order">
          <span data-ttu-id="faae7-236">회전이 적용되는 순서(뒤에 추가 또는 앞에 추가)를 지정하는 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-236">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies the order (append or prepend) in which the rotation is applied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="faae7-237">지정된 순서대로 지정된 지점을 기준으로 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 시계 방향 회전을 적용합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-237">Applies a clockwise rotation about the specified point to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the specified order.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="faae7-238">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Control.Paint> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-238">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="faae7-239">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-239">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="faae7-240">회전 변환을 (파란색 사각형)를 적용 하기 전에 화면에 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-240">Draws a rectangle to the screen prior to applying a rotation transform (the blue rectangle).</span></span>  
  
-   <span data-ttu-id="faae7-241">행렬을 만들고 지정된 된 지점 기준으로 45도 회전 합니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-241">Creates a matrix and rotates it 45 degrees around a specified point.</span></span>  
  
-   <span data-ttu-id="faae7-242">이 매트릭스를 적용 사각형에는 변환입니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-242">Applies this matrix transform is to the rectangle.</span></span>  
  
-   <span data-ttu-id="faae7-243">화면 (빨간색 사각형)으로 변환된 된 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-243">Draws the transformed rectangle to the screen (the red rectangle).</span></span>  
  
 <span data-ttu-id="faae7-244">사각형의 왼쪽 위 모퉁이 주위 빨간색 직사각형을 회전 된 것을 알 (지정 된 회전 지점은 <xref:System.Drawing.Drawing2D.Matrix.RotateAt%2A> 메서드).</span><span class="sxs-lookup"><span data-stu-id="faae7-244">Notice that the red rectangle has been rotated around the upper left-hand corner of the rectangle (the rotation point specified the <xref:System.Drawing.Drawing2D.Matrix.RotateAt%2A> method).</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#4)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Scale">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="faae7-245">크기 조정 벡터를 앞에 추가하여 지정된 크기 조정 벡터를 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 적용합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-245">Applies the specified scale vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the scale vector.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public void Scale (float scaleX, float scaleY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Scale(float32 scaleX, float32 scaleY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Scale (scaleX As Single, scaleY As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Scale(float scaleX, float scaleY);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scaleX" Type="System.Single" />
        <Parameter Name="scaleY" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="scaleX">
          <span data-ttu-id="faae7-246">x-축 방향으로 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />의 크기를 조정할 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-246">The value by which to scale this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the x-axis direction.</span>
          </span>
        </param>
        <param name="scaleY">
          <span data-ttu-id="faae7-247">y-축 방향으로 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />의 크기를 조정할 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-247">The value by which to scale this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the y-axis direction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="faae7-248">크기 조정 벡터를 앞에 추가하여 지정된 크기 조정 벡터를 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 적용합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-248">Applies the specified scale vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the scale vector.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="faae7-249">예제를 보려면 <xref:System.Drawing.Drawing2D.Matrix.Scale%28System.Single%2CSystem.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="faae7-249">For an example, see <xref:System.Drawing.Drawing2D.Matrix.Scale%28System.Single%2CSystem.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public void Scale (float scaleX, float scaleY, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Scale(float32 scaleX, float32 scaleY, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Scale (scaleX As Single, scaleY As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Scale(float scaleX, float scaleY, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scaleX" Type="System.Single" />
        <Parameter Name="scaleY" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="scaleX">
          <span data-ttu-id="faae7-250">x-축 방향으로 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />의 크기를 조정할 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-250">The value by which to scale this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the x-axis direction.</span>
          </span>
        </param>
        <param name="scaleY">
          <span data-ttu-id="faae7-251">y-축 방향으로 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />의 크기를 조정할 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-251">The value by which to scale this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the y-axis direction.</span>
          </span>
        </param>
        <param name="order">
          <span data-ttu-id="faae7-252">이 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 크기 조정 벡터가 적용되는 순서(뒤에 추가 또는 앞에 추가)를 지정하는 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-252">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies the order (append or prepend) in which the scale vector is applied to this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="faae7-253">지정된 순서대로 지정된 크기 조정 벡터(<paramref name="scaleX" /> 및 <paramref name="scaleY" />)를 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 적용합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-253">Applies the specified scale vector (<paramref name="scaleX" /> and <paramref name="scaleY" />) to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> using the specified order.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="faae7-254">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Control.Paint> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-254">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="faae7-255">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-255">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="faae7-256">크기 조정 변환을 (파란색 사각형) 적용 하기 전에 화면에 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-256">Draws a rectangle to the screen prior to applying a scaling transform (the blue rectangle).</span></span>  
  
-   <span data-ttu-id="faae7-257">매트릭스를 만든 다음 x 축 및 y에서 2 여 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-257">Creates a matrix and scales it by 3 in the x-axis and 2 in the y-axis.</span></span>  
  
-   <span data-ttu-id="faae7-258">사각형에이 매트릭스 변환을 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-258">Applies this matrix transform to the rectangle.</span></span>  
  
-   <span data-ttu-id="faae7-259">화면 (빨간색 사각형)으로 변환된 된 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-259">Draws the transformed rectangle to the screen (the red rectangle).</span></span>  
  
 <span data-ttu-id="faae7-260">X 축 축소 및 사각형 (사각형의 시작 지점)의 왼쪽 위 모서리를 포함 하 여 y 2가 빨간색 직사각형 크기가 조정 되었는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-260">Notice that the red rectangle has been scaled by a factor of 3 in the x-axis and by 2 in the y-axis, including the upper left-hand corner of the rectangle (the beginning point of the rectangle).</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#5)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Shear">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="faae7-261">기울이기 벡터를 앞에 추가하여 지정된 기울이기 벡터를 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 적용합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-261">Applies the specified shear vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the shear vector.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Shear">
      <MemberSignature Language="C#" Value="public void Shear (float shearX, float shearY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Shear(float32 shearX, float32 shearY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Shear (shearX As Single, shearY As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Shear(float shearX, float shearY);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shearX" Type="System.Single" />
        <Parameter Name="shearY" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="shearX">
          <span data-ttu-id="faae7-262">수평 기울이기 비율입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-262">The horizontal shear factor.</span>
          </span>
        </param>
        <param name="shearY">
          <span data-ttu-id="faae7-263">수직 기울이기 비율입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-263">The vertical shear factor.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="faae7-264">기울이기 변환을 앞에 추가하여 지정된 기울이기 벡터를 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 적용합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-264">Applies the specified shear vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the shear transformation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="faae7-265">이 메서드에 적용 되는 변환 매개 변수 중 하나가 0 인 경우에 순수 개체 기울이기 됩니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-265">The transformation applied in this method is a pure shear only if one of the parameters is 0.</span></span> <span data-ttu-id="faae7-266">원점에서 사각형에 적용 때는 `shearY` 요소가 0 일 변환 아래쪽 가장자리를 가로 방향으로 이동 `shearX` 시간이 사각형의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-266">Applied to a rectangle at the origin, when the `shearY` factor is 0, the transformation moves the bottom edge horizontally by `shearX` times the height of the rectangle.</span></span> <span data-ttu-id="faae7-267">경우는 `shearX` 요소가 0 일 오른쪽 가장자리 세로 방향으로 이동 `shearY` 시간이 사각형의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-267">When the `shearX` factor is 0, it moves the right edge vertically by `shearY` times the width of the rectangle.</span></span> <span data-ttu-id="faae7-268">결과 예측 하기 때문에 매개 변수가 모두 0이 아니면이 주의 순서로 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-268">Caution is in order when both parameters are nonzero, because the results are hard to predict.</span></span> <span data-ttu-id="faae7-269">예를 들어 두 요소 모두 1 이면 이면 변환을 (따라서 배율이)를 한 줄으로 전체 평면이 합니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-269">For example, if both factors are 1, the transformation is singular (hence noninvertible), squeezing the entire plane to a single line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="faae7-270">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Control.Paint> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-270">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="faae7-271">코드에서 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-271">The code performs the following action:</span></span>  
  
-   <span data-ttu-id="faae7-272">크기 조정 변환을 적용 하기 전에 녹색 펜을 사용 하 여 화면에 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-272">Draws a rectangle to the screen, using a green pen, prior to applying a scaling transform.</span></span>  
  
-   <span data-ttu-id="faae7-273">만듭니다는 <xref:System.Drawing.Drawing2D.Matrix> 사용 하 여 변환 하 여 세계 좌표를 설정 하 고는 <xref:System.Drawing.Graphics>합니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-273">Creates a <xref:System.Drawing.Drawing2D.Matrix> and uses it to set a world-coordinate transform for the <xref:System.Drawing.Graphics>.</span></span>  
  
-   <span data-ttu-id="faae7-274">빨간색 펜을 사용 하 여 다른 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-274">Draws another rectangle using a red pen.</span></span>  
  
-   <span data-ttu-id="faae7-275">파란색 펜을 사용 하는 타원을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-275">Draws an ellipse using a blue pen.</span></span>  
  
 <span data-ttu-id="faae7-276">결과 녹색 사각형, 빨간색 평행 사변형 및 변환 되 고 파란색 타원입니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-276">The result is a green rectangle, a red parallelogram and a transformed, blue ellipse.</span></span> <span data-ttu-id="faae7-277">녹색 사각형 (변환 설정 하기 전에 그린) 다음에 유의에서 제공 하는 좌표에서 직접 사용 하는 <xref:System.Drawing.Graphics.DrawRectangle%2A> 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-277">Notice that the green rectangle (drawn prior to setting the transform) directly uses the coordinates supplied in the <xref:System.Drawing.Graphics.DrawRectangle%2A> call.</span></span> <span data-ttu-id="faae7-278">다른 두 그림 그리기 전에 변환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-278">The other two figures are transformed prior to drawing.</span></span> <span data-ttu-id="faae7-279">사각형 평행 사변형 (빨간색)으로 변환 되 및 타원 (파랑)는 변환 된 평행 사변형에 맞게 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-279">The rectangle is transformed to a parallelogram (red), and the ellipse (blue) is transformed to fit into the transformed parallelogram.</span></span> <span data-ttu-id="faae7-280">사각형의 아래쪽에 두 번 평행 사변형을 형성 하는 사각형의 높이의 비율에 x 축 (기울이기가 적용 된) 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-280">Notice the bottom of the rectangle is moved (sheared) in the x-axis by a factor of two times the height of the rectangle, thus forming the parallelogram.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#6)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shear">
      <MemberSignature Language="C#" Value="public void Shear (float shearX, float shearY, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Shear(float32 shearX, float32 shearY, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Shear (shearX As Single, shearY As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Shear(float shearX, float shearY, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shearX" Type="System.Single" />
        <Parameter Name="shearY" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="shearX">
          <span data-ttu-id="faae7-281">수평 기울이기 비율입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-281">The horizontal shear factor.</span>
          </span>
        </param>
        <param name="shearY">
          <span data-ttu-id="faae7-282">수직 기울이기 비율입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-282">The vertical shear factor.</span>
          </span>
        </param>
        <param name="order">
          <span data-ttu-id="faae7-283">기울이기가 적용되는 순서(뒤에 추가 또는 앞에 추가)를 지정하는 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-283">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies the order (append or prepend) in which the shear is applied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="faae7-284">지정된 순서대로 지정된 기울이기 벡터를 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 적용합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-284">Applies the specified shear vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the specified order.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="faae7-285">이 메서드에 적용 되는 변환 매개 변수 중 하나가 0 인 경우에 순수 개체 기울이기 됩니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-285">The transformation applied in this method is a pure shear only if one of the parameters is 0.</span></span> <span data-ttu-id="faae7-286">원점에서 사각형에 적용 때는 `shearY` 요소가 0 일 변환 아래쪽 가장자리를 가로 방향으로 이동 `shearX` 시간이 사각형의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-286">Applied to a rectangle at the origin, when the `shearY` factor is 0, the transformation moves the bottom edge horizontally by `shearX` times the height of the rectangle.</span></span> <span data-ttu-id="faae7-287">경우는 `shearX` 요소가 0 일 오른쪽 가장자리 세로 방향으로 이동 `shearY` 시간이 사각형의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-287">When the `shearX` factor is 0, it moves the right edge vertically by `shearY` times the width of the rectangle.</span></span> <span data-ttu-id="faae7-288">결과 예측 하기 때문에 매개 변수가 모두 0이 아니면이 주의 순서로 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-288">Caution is in order when both parameters are nonzero, because the results are hard to predict.</span></span> <span data-ttu-id="faae7-289">예를 들어 두 요소 모두 1 이면 이면 변환을 (따라서 배율이)를 한 줄으로 전체 평면이 합니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-289">For example, if both factors are 1, the transformation is singular (hence noninvertible), squeezing the entire plane to a single line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="faae7-290">예제를 보려면 <xref:System.Drawing.Drawing2D.Matrix.Shear%28System.Single%2CSystem.Single%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="faae7-290">For an example, see <xref:System.Drawing.Drawing2D.Matrix.Shear%28System.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TransformPoints">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="faae7-291">이 <see cref="T:System.Drawing.Drawing2D.Matrix" />가 나타내는 기하학적 변환을 지점의 배열에 적용합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-291">Applies the geometric transform this <see cref="T:System.Drawing.Drawing2D.Matrix" /> represents to an array of points.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TransformPoints">
      <MemberSignature Language="C#" Value="public void TransformPoints (System.Drawing.Point[] pts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransformPoints(valuetype System.Drawing.Point[] pts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransformPoints (pts As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransformPoints(cli::array &lt;System::Drawing::Point&gt; ^ pts);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="pts">
          <span data-ttu-id="faae7-292">변환할 지점을 나타내는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-292">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points to transform.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="faae7-293">이 <see cref="T:System.Drawing.Drawing2D.Matrix" />가 나타내는 기하학적 변환을 지정된 지점의 배열에 적용합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-293">Applies the geometric transform represented by this <see cref="T:System.Drawing.Drawing2D.Matrix" /> to a specified array of points.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="faae7-294">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Control.Paint> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-294">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="faae7-295">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-295">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="faae7-296">사각형을 형성 하는 요소의 배열을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-296">Creates an array of points that form a rectangle.</span></span>  
  
-   <span data-ttu-id="faae7-297">이 지점 배열 (화면에 그립니다 크기 조정 변환을 (파란색 사각형) 적용 하기 전에.</span><span class="sxs-lookup"><span data-stu-id="faae7-297">Draws this array of points (to the screen prior to applying a scaling transform (the blue rectangle).</span></span>  
  
-   <span data-ttu-id="faae7-298">매트릭스를 만든 다음 x 축 및 y에서 2 여 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-298">Creates a matrix and scales it by 3 in the x-axis and 2 in the y-axis.</span></span>  
  
-   <span data-ttu-id="faae7-299">이 매트릭스 변환을 지점의 배열에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-299">Applies this matrix transform to the array of points.</span></span>  
  
-   <span data-ttu-id="faae7-300">변환된 된 배열 (빨간색 사각형) 화면으로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-300">Draws the transformed array to the screen (the red rectangle).</span></span>  
  
 <span data-ttu-id="faae7-301">X 축 축소 및 사각형 (사각형의 시작 지점)의 왼쪽 위 모서리를 포함 하 여 y 2가 빨간색 직사각형 크기가 조정 되었는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-301">Notice that the red rectangle has been scaled by a factor of 3 in the x-axis and by 2 in the y-axis, including the upper left-hand corner of the rectangle (the beginning point of the rectangle).</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#7)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformPoints">
      <MemberSignature Language="C#" Value="public void TransformPoints (System.Drawing.PointF[] pts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransformPoints(valuetype System.Drawing.PointF[] pts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransformPoints (pts As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransformPoints(cli::array &lt;System::Drawing::PointF&gt; ^ pts);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="pts">
          <span data-ttu-id="faae7-302">변환할 지점을 나타내는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-302">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points to transform.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="faae7-303">이 <see cref="T:System.Drawing.Drawing2D.Matrix" />가 나타내는 기하학적 변환을 지정된 지점의 배열에 적용합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-303">Applies the geometric transform represented by this <see cref="T:System.Drawing.Drawing2D.Matrix" /> to a specified array of points.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="faae7-304">예제를 보려면 <xref:System.Drawing.Drawing2D.Matrix.TransformPoints%28System.Drawing.Point%5B%5D%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="faae7-304">For an example, see <xref:System.Drawing.Drawing2D.Matrix.TransformPoints%28System.Drawing.Point%5B%5D%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TransformVectors">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="faae7-305">배열의 각 벡터에 매트릭스를 곱합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-305">Multiplies each vector in an array by the matrix.</span>
          </span>
          <span data-ttu-id="faae7-306">이 매트릭스의 이동 요소(셋째 행)는 무시됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-306">The translation elements of this matrix (third row) are ignored.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TransformVectors">
      <MemberSignature Language="C#" Value="public void TransformVectors (System.Drawing.Point[] pts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransformVectors(valuetype System.Drawing.Point[] pts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransformVectors (pts As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransformVectors(cli::array &lt;System::Drawing::Point&gt; ^ pts);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="pts">
          <span data-ttu-id="faae7-307">변환할 지점을 나타내는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-307">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points to transform.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="faae7-308">이 <see cref="T:System.Drawing.Drawing2D.Matrix" />의 크기 조정 및 회전 구성 요소만 지정된 지점의 배열에 적용합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-308">Applies only the scale and rotate components of this <see cref="T:System.Drawing.Drawing2D.Matrix" /> to the specified array of points.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="faae7-309">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Control.Paint> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-309">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="faae7-310">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-310">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="faae7-311">사각형을 형성 하는 요소의 배열을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-311">Creates an array of points that form a rectangle.</span></span>  
  
-   <span data-ttu-id="faae7-312">이 지점 배열 크기 조정 변환을 (파란색 사각형) 적용 하기 전에 화면으로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-312">Draws this array of points to the screen prior to applying a scaling transform (the blue rectangle).</span></span>  
  
-   <span data-ttu-id="faae7-313">행렬을 만듭니다 및 x 축 및 y에서 2 여 확장 하 고 축 방향으로 100으로 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-313">Creates a matrix and scales it by 3 in the x-axis and 2 in the y-axis, and translates it by 100 in both axes.</span></span>  
  
-   <span data-ttu-id="faae7-314">화면에 행렬 요소를 나열 합니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-314">Lists the matrix elements to the screen.</span></span>  
  
-   <span data-ttu-id="faae7-315">이 매트릭스 변환을 지점의 배열에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-315">Applies this matrix transform to the array of points.</span></span>  
  
-   <span data-ttu-id="faae7-316">변환된 된 배열 (빨간색 사각형) 화면으로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-316">Draws the transformed array to the screen (the red rectangle).</span></span>  
  
 <span data-ttu-id="faae7-317">필름 빨간색 사각형 (사각형의 시작 지점) 사각형의 왼쪽 위 모서리를 포함 하 여 y 축에서 값 2와 x 축의 비율로 크기 조정에 되지만 이동 벡터 (행렬의 마지막 두 개의 요소)은 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-317">Notice that the red rectangle has been scaled by a factor of 3 in the x-axis and by 2 in the y-axis, including the upper left-hand corner of the rectangle (the beginning point of the rectangle) but the translation vector (the last two elements of the matrix) is ignored.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#8)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#8)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformVectors">
      <MemberSignature Language="C#" Value="public void TransformVectors (System.Drawing.PointF[] pts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransformVectors(valuetype System.Drawing.PointF[] pts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransformVectors (pts As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransformVectors(cli::array &lt;System::Drawing::PointF&gt; ^ pts);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="pts">
          <span data-ttu-id="faae7-318">변환할 지점을 나타내는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-318">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points to transform.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="faae7-319">배열의 각 벡터에 매트릭스를 곱합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-319">Multiplies each vector in an array by the matrix.</span>
          </span>
          <span data-ttu-id="faae7-320">이 매트릭스의 이동 요소(셋째 행)는 무시됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-320">The translation elements of this matrix (third row) are ignored.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="faae7-321">예제를 보려면 <xref:System.Drawing.Drawing2D.Matrix.TransformVectors%28System.Drawing.Point%5B%5D%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="faae7-321">For an example, see <xref:System.Drawing.Drawing2D.Matrix.TransformVectors%28System.Drawing.Point%5B%5D%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Translate">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="faae7-322">이동 벡터를 앞에 추가하여 지정된 이동 벡터를 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 적용합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-322">Applies the specified translation vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the translation vector.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Translate">
      <MemberSignature Language="C#" Value="public void Translate (float offsetX, float offsetY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Translate(float32 offsetX, float32 offsetY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Translate (offsetX As Single, offsetY As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Translate(float offsetX, float offsetY);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offsetX" Type="System.Single" />
        <Parameter Name="offsetY" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="offsetX">
          <span data-ttu-id="faae7-323">이 <see cref="T:System.Drawing.Drawing2D.Matrix" />를 이동할 x 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-323">The x value by which to translate this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </param>
        <param name="offsetY">
          <span data-ttu-id="faae7-324">이 <see cref="T:System.Drawing.Drawing2D.Matrix" />를 이동할 y 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-324">The y value by which to translate this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="faae7-325">이동 벡터를 앞에 추가하여 지정된 이동 벡터(<paramref name="offsetX" /> 및 <paramref name="offsetY" />)를 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 적용합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-325">Applies the specified translation vector (<paramref name="offsetX" /> and <paramref name="offsetY" />) to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the translation vector.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="faae7-326">예제를 보려면 <xref:System.Drawing.Drawing2D.Matrix.Translate%28System.Single%2CSystem.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="faae7-326">For an example, see <xref:System.Drawing.Drawing2D.Matrix.Translate%28System.Single%2CSystem.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Translate">
      <MemberSignature Language="C#" Value="public void Translate (float offsetX, float offsetY, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Translate(float32 offsetX, float32 offsetY, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Translate (offsetX As Single, offsetY As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Translate(float offsetX, float offsetY, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offsetX" Type="System.Single" />
        <Parameter Name="offsetY" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="offsetX">
          <span data-ttu-id="faae7-327">이 <see cref="T:System.Drawing.Drawing2D.Matrix" />를 이동할 x 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-327">The x value by which to translate this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </param>
        <param name="offsetY">
          <span data-ttu-id="faae7-328">이 <see cref="T:System.Drawing.Drawing2D.Matrix" />를 이동할 y 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-328">The y value by which to translate this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </param>
        <param name="order">
          <span data-ttu-id="faae7-329">이 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 이동이 적용되는 순서(뒤에 추가 또는 앞에 추가)를 지정하는 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-329">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies the order (append or prepend) in which the translation is applied to this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="faae7-330">지정된 순서대로 지정된 이동 벡터를 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 적용합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-330">Applies the specified translation vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the specified order.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="faae7-331">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Control.Paint> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-331">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="faae7-332">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-332">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="faae7-333">변환 (파란색 사각형)를 적용 하기 전에 화면에 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-333">Draws a rectangle to the screen prior to applying a translate transform (the blue rectangle).</span></span>  
  
-   <span data-ttu-id="faae7-334">행렬을 만듭니다 및 축 방향으로 100으로 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-334">Creates a matrix and translates it by 100 in both axes.</span></span>  
  
-   <span data-ttu-id="faae7-335">이 매트릭스 변환을 사각형으로 적용합니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-335">Applies this matrix transform to the rectangle,</span></span>  
  
-   <span data-ttu-id="faae7-336">화면 (빨간색 사각형)으로 변환된 된 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-336">Draws the transformed rectangle to the screen (the red rectangle).</span></span>  
  
 <span data-ttu-id="faae7-337">빨간색 사각형의 시작 부분 파란색 삼각형의 시작 부분에서 두 축에 있는 100 포인트 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="faae7-337">Notice that the beginning of the red rectangle is located 100 points in both axes from the beginning of the blue triangle.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#9)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#9)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VectorTransformPoints">
      <MemberSignature Language="C#" Value="public void VectorTransformPoints (System.Drawing.Point[] pts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void VectorTransformPoints(valuetype System.Drawing.Point[] pts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.VectorTransformPoints(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub VectorTransformPoints (pts As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void VectorTransformPoints(cli::array &lt;System::Drawing::Point&gt; ^ pts);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="pts">
          <span data-ttu-id="faae7-338">변환할 지점을 나타내는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-338">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points to transform.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="faae7-339">배열의 각 벡터에 매트릭스를 곱합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-339">Multiplies each vector in an array by the matrix.</span>
          </span>
          <span data-ttu-id="faae7-340">이 매트릭스의 이동 요소(셋째 행)는 무시됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="faae7-340">The translation elements of this matrix (third row) are ignored.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>