<Type Name="GraphicsPath" FullName="System.Drawing.Drawing2D.GraphicsPath">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5024225fdd7fefb748a47cb1578e2d1091336b29" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36741339" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class GraphicsPath : MarshalByRefObject, ICloneable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit GraphicsPath extends System.MarshalByRefObject implements class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Drawing2D.GraphicsPath" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class GraphicsPath&#xA;Inherits MarshalByRefObject&#xA;Implements ICloneable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class GraphicsPath sealed : MarshalByRefObject, ICloneable, IDisposable" />
  <TypeSignature Language="F#" Value="type GraphicsPath = class&#xA;    inherit MarshalByRefObject&#xA;    interface ICloneable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="aaa4e-101">연결된 일련의 선과 곡선을 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="aaa4e-101">Represents a series of connected lines and curves.</span>
      </span>
      <span data-ttu-id="aaa4e-102">이 클래스는 상속될 수 없습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="aaa4e-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaa4e-103">도형의 윤곽선을 그리고, 도형의 내부를 채우는, 클리핑 영역을 만드는에 경로 사용 하는 응용 프로그램.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-103">Applications use paths to draw outlines of shapes, fill the interiors of shapes, and create clipping regions.</span></span> <span data-ttu-id="aaa4e-104">그래픽 엔진 세계 좌표 공간에서 경로에 기 하 도형의 좌표를 유지 관리합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-104">The graphics engine maintains the coordinates of geometric shapes in a path in world coordinate space.</span></span>  
  
 <span data-ttu-id="aaa4e-105">여러 개의 그림 (하위 경로)의 경로 구성 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-105">A path may be composed of any number of figures (subpaths).</span></span> <span data-ttu-id="aaa4e-106">각 수치는 일련의 연결 된 선 및 곡선 또는 도형 기본 하거나 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-106">Each figure is either composed of a sequence of connected lines and curves or a geometric shape primitive.</span></span> <span data-ttu-id="aaa4e-107">그림의 시작 위치는 연결 된 선 및 곡선 시퀀스의 첫 번째 지점입니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-107">The starting point of a figure is the first point in the sequence of connected lines and curves.</span></span> <span data-ttu-id="aaa4e-108">끝점은 시퀀스에서 마지막 지점입니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-108">The ending point is the last point in the sequence.</span></span> <span data-ttu-id="aaa4e-109">도형 기본의 시작과 끝은 기본 요소 사양에서 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-109">The starting and ending points of a geometric shape primitive are defined by the primitive specification.</span></span>  
  
 <span data-ttu-id="aaa4e-110">일련의 연결 된 선으로 구성 된 및 곡선 (시작 및 끝 포인트가 있는 일치 수 있음)는 열린 그림을 명시적으로 닫지 않으면 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-110">A figure that consists of a sequence of connected lines and curves (whose starting and ending points may be coincident) is an open figure, unless it is closed explicitly.</span></span> <span data-ttu-id="aaa4e-111">도형을 사용 하 여 명시적으로 닫을 수 있습니다는 <xref:System.Drawing.Drawing2D.GraphicsPath.CloseFigure%2A> 메서드를 시작 점으로 선을 끝점에서 연결 하 여 현재 그림을 닫습니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-111">A figure can be closed explicitly, by using the <xref:System.Drawing.Drawing2D.GraphicsPath.CloseFigure%2A> method, which closes the current figure by connecting a line from the ending point to the starting point.</span></span> <span data-ttu-id="aaa4e-112">도형 기본 구성 된 그림은 폐쇄형된 도형은입니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-112">A figure that consists of a geometric shape primitive is a closed figure.</span></span>  
  
 <span data-ttu-id="aaa4e-113">채우기와 클리핑의 목적에 (사용 하 여 경로 렌더링 하는 경우에 예를 들어 <xref:System.Drawing.Graphics.FillPath%2A>) 열려 있는 모든, 마지막 시점으로 그림의 첫 번째 요소에서 줄을 추가 하 여 그림을 닫습니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-113">For purposes of filling and clipping (for example, if a path is rendered using <xref:System.Drawing.Graphics.FillPath%2A>), all open figures are closed by adding a line from the figure's first point to its last point.</span></span>  
  
 <span data-ttu-id="aaa4e-114">새 그림 figure 닫힐 때 또는 경로 만들 때에 암시적으로 시작 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-114">A new figure is implicitly started when a path is created or when a figure is closed.</span></span> <span data-ttu-id="aaa4e-115">새 그림 명시적으로 생성 되는 <xref:System.Drawing.Drawing2D.GraphicsPath.StartFigure%2A> 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-115">A new figure is explicitly created when the <xref:System.Drawing.Drawing2D.GraphicsPath.StartFigure%2A> method is called.</span></span>  
  
 <span data-ttu-id="aaa4e-116">도형 기본 경로에 추가 되 면 기하학 다각형 셰이프를 포함 하는 그림을 추가 하 고 새 그림을 암시적으로 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-116">When a geometric shape primitive is added to a path, it adds a figure containing the geometric shape, and also implicitly starts a new figure.</span></span> <span data-ttu-id="aaa4e-117">따라서에 없는 경우 항상 현재 그림 경로</span><span class="sxs-lookup"><span data-stu-id="aaa4e-117">Consequently, there is always a current figure in a path.</span></span> <span data-ttu-id="aaa4e-118">선 및 곡선 경로에 추가 되 면 현재 그림의 끝 지점을 새 선 및 곡선으로 분할 하는 연결 된 일련의 및 곡선의 시작점에 연결할 필요에 따라 암시적 줄이 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-118">When lines and curves are added to a path, an implicit line is added as needed to connect the ending point of the current figure to the starting point of the new lines and curves to form a sequence of connected lines and curves.</span></span>  
  
 <span data-ttu-id="aaa4e-119">그림에는 시작 지점 및 끝 지점 간의 선과 곡선 세그먼트를 추적 하는 방법을 설명 하는 방향입니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-119">A figure has a direction that describes how line and curve segments are traced between the starting point and the ending point.</span></span> <span data-ttu-id="aaa4e-120">그림에서에 추가 되거나 도형 기본으로 정의 된 선 및 곡선 순서에서 방향 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-120">The direction is defined in the order that lines and curves are added to a figure, or is defined by the geometric shape primitive.</span></span> <span data-ttu-id="aaa4e-121">방향을은 클리핑 및 채우기에 대 한 내부 경로 결정 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-121">The direction is used in determining the path interiors for clipping and fill.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="aaa4e-122">
            <see langword="Alternate" />의 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 열거형을 사용하여 <see cref="T:System.Drawing.Drawing2D.FillMode" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-122">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with a <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration of <see langword="Alternate" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="aaa4e-123">
            <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />의 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.FillMode" /> 값을 사용하여 <see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-123">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with a <see cref="P:System.Drawing.Drawing2D.GraphicsPath.FillMode" /> value of <see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath (System.Drawing.Drawing2D.FillMode fillMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Drawing2D.FillMode fillMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Drawing2D.FillMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath(System::Drawing::Drawing2D::FillMode fillMode);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.GraphicsPath : System.Drawing.Drawing2D.FillMode -&gt; System.Drawing.Drawing2D.GraphicsPath" Usage="new System.Drawing.Drawing2D.GraphicsPath fillMode" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fillMode" Type="System.Drawing.Drawing2D.FillMode" />
      </Parameters>
      <Docs>
        <param name="fillMode">
          <span data-ttu-id="aaa4e-124">이 <see cref="T:System.Drawing.Drawing2D.FillMode" />의 내부를 채우는 방법을 결정하는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 열거형입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-124">The <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the interior of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> is filled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-125">지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 열거형을 사용하여 <see cref="T:System.Drawing.Drawing2D.FillMode" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-125">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with the specified <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath (System.Drawing.Point[] pts, byte[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Point[] pts, unsigned int8[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pts As Point(), types As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath(cli::array &lt;System::Drawing::Point&gt; ^ pts, cli::array &lt;System::Byte&gt; ^ types);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.GraphicsPath : System.Drawing.Point[] * byte[] -&gt; System.Drawing.Drawing2D.GraphicsPath" Usage="new System.Drawing.Drawing2D.GraphicsPath (pts, types)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.Point[]" />
        <Parameter Name="types" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="pts">
          <span data-ttu-id="aaa4e-126">이 <see cref="T:System.Drawing.Point" />를 구성하는 지점의 좌표를 정의하는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 구조체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-126">An array of <see cref="T:System.Drawing.Point" /> structures that defines the coordinates of the points that make up this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </param>
        <param name="types">
          <span data-ttu-id="aaa4e-127">
            <c>pts</c> 배열에 있는 각 해당 지점의 종류를 지정하는 <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 열거형 요소의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-127">An array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumeration elements that specifies the type of each corresponding point in the <c>pts</c> array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-128">지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 및 <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 배열을 사용하여 <see cref="T:System.Drawing.Point" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-128">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with the specified <see cref="T:System.Drawing.Drawing2D.PathPointType" /> and <see cref="T:System.Drawing.Point" /> arrays.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath (System.Drawing.PointF[] pts, byte[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.PointF[] pts, unsigned int8[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pts As PointF(), types As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath(cli::array &lt;System::Drawing::PointF&gt; ^ pts, cli::array &lt;System::Byte&gt; ^ types);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.GraphicsPath : System.Drawing.PointF[] * byte[] -&gt; System.Drawing.Drawing2D.GraphicsPath" Usage="new System.Drawing.Drawing2D.GraphicsPath (pts, types)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.PointF[]" />
        <Parameter Name="types" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="pts">
          <span data-ttu-id="aaa4e-129">이 <see cref="T:System.Drawing.PointF" />를 구성하는 지점의 좌표를 정의하는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 구조체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-129">An array of <see cref="T:System.Drawing.PointF" /> structures that defines the coordinates of the points that make up this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </param>
        <param name="types">
          <span data-ttu-id="aaa4e-130">
            <c>pts</c> 배열에 있는 각 해당 지점의 종류를 지정하는 <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 열거형 요소의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-130">An array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumeration elements that specifies the type of each corresponding point in the <c>pts</c> array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-131">지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 및 <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 배열을 사용하여 <see cref="T:System.Drawing.PointF" /> 배열의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-131">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> array with the specified <see cref="T:System.Drawing.Drawing2D.PathPointType" /> and <see cref="T:System.Drawing.PointF" /> arrays.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath (System.Drawing.Point[] pts, byte[] types, System.Drawing.Drawing2D.FillMode fillMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Point[] pts, unsigned int8[] types, valuetype System.Drawing.Drawing2D.FillMode fillMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[],System.Drawing.Drawing2D.FillMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath(cli::array &lt;System::Drawing::Point&gt; ^ pts, cli::array &lt;System::Byte&gt; ^ types, System::Drawing::Drawing2D::FillMode fillMode);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.GraphicsPath : System.Drawing.Point[] * byte[] * System.Drawing.Drawing2D.FillMode -&gt; System.Drawing.Drawing2D.GraphicsPath" Usage="new System.Drawing.Drawing2D.GraphicsPath (pts, types, fillMode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.Point[]" />
        <Parameter Name="types" Type="System.Byte[]" />
        <Parameter Name="fillMode" Type="System.Drawing.Drawing2D.FillMode" />
      </Parameters>
      <Docs>
        <param name="pts">
          <span data-ttu-id="aaa4e-132">이 <see cref="T:System.Drawing.Point" />를 구성하는 지점의 좌표를 정의하는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 구조체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-132">An array of <see cref="T:System.Drawing.Point" /> structures that defines the coordinates of the points that make up this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </param>
        <param name="types">
          <span data-ttu-id="aaa4e-133">
            <c>pts</c> 배열에 있는 각 해당 지점의 종류를 지정하는 <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 열거형 요소의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-133">An array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumeration elements that specifies the type of each corresponding point in the <c>pts</c> array.</span>
          </span>
        </param>
        <param name="fillMode">
          <span data-ttu-id="aaa4e-134">이 <see cref="T:System.Drawing.Drawing2D.FillMode" />에 있는 모양의 내부를 채우는 방법을 지정하는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 열거형입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-134">A <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that specifies how the interiors of shapes in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> are filled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-135">지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 및 <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 배열과 지정된 <see cref="T:System.Drawing.Point" /> 열거형 요소를 사용하여 <see cref="T:System.Drawing.Drawing2D.FillMode" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-135">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with the specified <see cref="T:System.Drawing.Drawing2D.PathPointType" /> and <see cref="T:System.Drawing.Point" /> arrays and with the specified <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration element.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath (System.Drawing.PointF[] pts, byte[] types, System.Drawing.Drawing2D.FillMode fillMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.PointF[] pts, unsigned int8[] types, valuetype System.Drawing.Drawing2D.FillMode fillMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[],System.Drawing.Drawing2D.FillMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath(cli::array &lt;System::Drawing::PointF&gt; ^ pts, cli::array &lt;System::Byte&gt; ^ types, System::Drawing::Drawing2D::FillMode fillMode);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.GraphicsPath : System.Drawing.PointF[] * byte[] * System.Drawing.Drawing2D.FillMode -&gt; System.Drawing.Drawing2D.GraphicsPath" Usage="new System.Drawing.Drawing2D.GraphicsPath (pts, types, fillMode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.PointF[]" />
        <Parameter Name="types" Type="System.Byte[]" />
        <Parameter Name="fillMode" Type="System.Drawing.Drawing2D.FillMode" />
      </Parameters>
      <Docs>
        <param name="pts">
          <span data-ttu-id="aaa4e-136">이 <see cref="T:System.Drawing.PointF" />를 구성하는 지점의 좌표를 정의하는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 구조체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-136">An array of <see cref="T:System.Drawing.PointF" /> structures that defines the coordinates of the points that make up this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </param>
        <param name="types">
          <span data-ttu-id="aaa4e-137">
            <c>pts</c> 배열에 있는 각 해당 지점의 종류를 지정하는 <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 열거형 요소의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-137">An array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumeration elements that specifies the type of each corresponding point in the <c>pts</c> array.</span>
          </span>
        </param>
        <param name="fillMode">
          <span data-ttu-id="aaa4e-138">이 <see cref="T:System.Drawing.Drawing2D.FillMode" />에 있는 모양의 내부를 채우는 방법을 지정하는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 열거형입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-138">A <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that specifies how the interiors of shapes in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> are filled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-139">지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 및 <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 배열과 지정된 <see cref="T:System.Drawing.PointF" /> 열거형 요소를 사용하여 <see cref="T:System.Drawing.Drawing2D.FillMode" /> 배열의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-139">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> array with the specified <see cref="T:System.Drawing.Drawing2D.PathPointType" /> and <see cref="T:System.Drawing.PointF" /> arrays and with the specified <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration element.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddArc">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="aaa4e-140">타원형 호를 현재 그림에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-140">Appends an elliptical arc to the current figure.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddArc">
      <MemberSignature Language="C#" Value="public void AddArc (System.Drawing.Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArc(valuetype System.Drawing.Rectangle rect, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArc (rect As Rectangle, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArc(System::Drawing::Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddArc : System.Drawing.Rectangle * single * single -&gt; unit" Usage="graphicsPath.AddArc (rect, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="aaa4e-141">호가 그려지는 타원의 사각형 범위를 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-141">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangular bounds of the ellipse from which the arc is taken.</span>
          </span>
        </param>
        <param name="startAngle">
          <span data-ttu-id="aaa4e-142">X축에서 시계 방향으로 측정한 호의 시작 각도입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-142">The starting angle of the arc, measured in degrees clockwise from the x-axis.</span>
          </span>
        </param>
        <param name="sweepAngle">
          <span data-ttu-id="aaa4e-143">
            <c>startAngle</c>과 호의 끝 사이의 각도입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-143">The angle between <c>startAngle</c> and the end of the arc.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-144">타원형 호를 현재 그림에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-144">Appends an elliptical arc to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaa4e-145">이전 줄 또는 그림에는 곡선 없으면 줄 호의 시작 부분에는 이전 세그먼트의 끝점을 연결에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-145">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.</span></span>  
  
 <span data-ttu-id="aaa4e-146">지정된 된 사각형에 의해 제한 되는 타원의 경계를 따라 호 추적 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-146">The arc is traced along the perimeter of the ellipse bounded by the specified rectangle.</span></span> <span data-ttu-id="aaa4e-147">원호의 시작점 수가 시작 각도 (0도 각도로) 타원의 x 축에서 시계 방향으로 측정 하 여 결정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-147">The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle.</span></span> <span data-ttu-id="aaa4e-148">끝점은 마찬가지로 스윕 각도의 개수로 시작 지점에서 시계 방향으로 측정 하 여 있습니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-148">The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle.</span></span> <span data-ttu-id="aaa4e-149">스윕 각도 360도-360도 미만 보다 크면 360도 또는-360도 정확 하 게 호는 각각 이루어집니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-149">If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aaa4e-150">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-150">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="aaa4e-151">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-151">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="aaa4e-152">호를 정의할 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-152">Creates a rectangle, from which the arc is defined.</span></span>  
  
-   <span data-ttu-id="aaa4e-153">경로 만듭니다 `myPath`합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-153">Creates a path, `myPath`.</span></span>  
  
-   <span data-ttu-id="aaa4e-154">0도에서 180도로 비우고 하는 경로에 추가 하는 180도 타원형 호를 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-154">Defines a 180-degree elliptical arc that sweeps from 0 degrees to 180 degrees and appends it to a path.</span></span>  
  
-   <span data-ttu-id="aaa4e-155">화면에 경로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-155">Draws the path to screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#1)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddArc">
      <MemberSignature Language="C#" Value="public void AddArc (System.Drawing.RectangleF rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArc(valuetype System.Drawing.RectangleF rect, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArc (rect As RectangleF, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArc(System::Drawing::RectangleF rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddArc : System.Drawing.RectangleF * single * single -&gt; unit" Usage="graphicsPath.AddArc (rect, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="aaa4e-156">호가 그려지는 타원의 사각형 범위를 나타내는 <see cref="T:System.Drawing.RectangleF" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-156">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangular bounds of the ellipse from which the arc is taken.</span>
          </span>
        </param>
        <param name="startAngle">
          <span data-ttu-id="aaa4e-157">X축에서 시계 방향으로 측정한 호의 시작 각도입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-157">The starting angle of the arc, measured in degrees clockwise from the x-axis.</span>
          </span>
        </param>
        <param name="sweepAngle">
          <span data-ttu-id="aaa4e-158">
            <c>startAngle</c>과 호의 끝 사이의 각도입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-158">The angle between <c>startAngle</c> and the end of the arc.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-159">타원형 호를 현재 그림에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-159">Appends an elliptical arc to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaa4e-160">이전 줄 또는 그림에는 곡선 없으면 줄 호의 시작 부분에는 이전 세그먼트의 끝점을 연결에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-160">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.</span></span>  
  
 <span data-ttu-id="aaa4e-161">지정된 된 사각형에 의해 제한 되는 타원의 경계를 따라 호 추적 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-161">The arc is traced along the perimeter of the ellipse bounded by the specified rectangle.</span></span> <span data-ttu-id="aaa4e-162">원호의 시작점 수가 시작 각도 (0도 각도로) 타원의 x 축에서 시계 방향으로 측정 하 여 결정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-162">The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle.</span></span> <span data-ttu-id="aaa4e-163">끝점은 마찬가지로 스윕 각도의 개수로 시작 지점에서 시계 방향으로 측정 하 여 있습니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-163">The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle.</span></span> <span data-ttu-id="aaa4e-164">스윕 각도 360도-360도 미만 보다 크면 360도 또는-360도 정확 하 게 호는 각각 이루어집니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-164">If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aaa4e-165">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-165">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddArc">
      <MemberSignature Language="C#" Value="public void AddArc (int x, int y, int width, int height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArc(int32 x, int32 y, int32 width, int32 height, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArc (x As Integer, y As Integer, width As Integer, height As Integer, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArc(int x, int y, int width, int height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddArc : int * int * int * int * single * single -&gt; unit" Usage="graphicsPath.AddArc (x, y, width, height, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="aaa4e-166">호가 그려지는 타원을 정의하는 사각형 영역의 왼쪽 위 모퉁이에 대한 X좌표입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-166">The x-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="aaa4e-167">호가 그려지는 타원을 정의하는 사각형 영역의 왼쪽 위 모퉁이에 대한 Y좌표입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-167">The y-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="aaa4e-168">호가 그려지는 타원을 정의하는 사각형 영역의 너비입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-168">The width of the rectangular region that defines the ellipse from which the arc is drawn.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="aaa4e-169">호가 그려지는 타원을 정의하는 사각형 영역의 높이입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-169">The height of the rectangular region that defines the ellipse from which the arc is drawn.</span>
          </span>
        </param>
        <param name="startAngle">
          <span data-ttu-id="aaa4e-170">X축에서 시계 방향으로 측정한 호의 시작 각도입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-170">The starting angle of the arc, measured in degrees clockwise from the x-axis.</span>
          </span>
        </param>
        <param name="sweepAngle">
          <span data-ttu-id="aaa4e-171">
            <c>startAngle</c>과 호의 끝 사이의 각도입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-171">The angle between <c>startAngle</c> and the end of the arc.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-172">타원형 호를 현재 그림에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-172">Appends an elliptical arc to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaa4e-173">이전 줄 또는 그림에는 곡선 없으면 줄 호의 시작 부분에는 이전 세그먼트의 끝점을 연결에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-173">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.</span></span>  
  
 <span data-ttu-id="aaa4e-174">지정된 된 사각형에 의해 제한 되는 타원의 경계를 따라 호 추적 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-174">The arc is traced along the perimeter of the ellipse bounded by the specified rectangle.</span></span> <span data-ttu-id="aaa4e-175">원호의 시작점 수가 시작 각도 (0도 각도로) 타원의 x 축에서 시계 방향으로 측정 하 여 결정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-175">The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle.</span></span> <span data-ttu-id="aaa4e-176">끝점은 마찬가지로 스윕 각도의 개수로 시작 지점에서 시계 방향으로 측정 하 여 있습니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-176">The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle.</span></span> <span data-ttu-id="aaa4e-177">스윕 각도 360도-360도 미만 보다 크면 360도 또는-360도 정확 하 게 호는 각각 이루어집니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-177">If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aaa4e-178">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-178">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddArc">
      <MemberSignature Language="C#" Value="public void AddArc (float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArc(float32 x, float32 y, float32 width, float32 height, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArc (x As Single, y As Single, width As Single, height As Single, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArc(float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddArc : single * single * single * single * single * single -&gt; unit" Usage="graphicsPath.AddArc (x, y, width, height, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="aaa4e-179">호가 그려지는 타원을 정의하는 사각형 영역의 왼쪽 위 모퉁이에 대한 X좌표입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-179">The x-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="aaa4e-180">호가 그려지는 타원을 정의하는 사각형 영역의 왼쪽 위 모퉁이에 대한 Y좌표입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-180">The y-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="aaa4e-181">호가 그려지는 타원을 정의하는 사각형 영역의 너비입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-181">The width of the rectangular region that defines the ellipse from which the arc is drawn.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="aaa4e-182">호가 그려지는 타원을 정의하는 사각형 영역의 높이입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-182">The height of the rectangular region that defines the ellipse from which the arc is drawn.</span>
          </span>
        </param>
        <param name="startAngle">
          <span data-ttu-id="aaa4e-183">X축에서 시계 방향으로 측정한 호의 시작 각도입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-183">The starting angle of the arc, measured in degrees clockwise from the x-axis.</span>
          </span>
        </param>
        <param name="sweepAngle">
          <span data-ttu-id="aaa4e-184">
            <c>startAngle</c>과 호의 끝 사이의 각도입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-184">The angle between <c>startAngle</c> and the end of the arc.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-185">타원형 호를 현재 그림에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-185">Appends an elliptical arc to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaa4e-186">이전 줄 또는 그림에는 곡선 없으면 줄 호의 시작 부분에는 이전 세그먼트의 끝점을 연결에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-186">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.</span></span>  
  
 <span data-ttu-id="aaa4e-187">지정된 된 사각형에 의해 제한 되는 타원의 경계를 따라 호 추적 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-187">The arc is traced along the perimeter of the ellipse bounded by the specified rectangle.</span></span> <span data-ttu-id="aaa4e-188">원호의 시작점 수가 시작 각도 (0도 각도로) 타원의 x 축에서 시계 방향으로 측정 하 여 결정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-188">The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle.</span></span> <span data-ttu-id="aaa4e-189">끝점은 마찬가지로 스윕 각도의 개수로 시작 지점에서 시계 방향으로 측정 하 여 있습니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-189">The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle.</span></span> <span data-ttu-id="aaa4e-190">스윕 각도 360도-360도 미만 보다 크면 360도 또는-360도 정확 하 게 호는 각각 이루어집니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-190">If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aaa4e-191">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-191">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddBezier">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="aaa4e-192">3차원 큐빅 곡선을 현재 그림에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-192">Adds a cubic Bézier curve to the current figure.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddBezier">
      <MemberSignature Language="C#" Value="public void AddBezier (System.Drawing.Point pt1, System.Drawing.Point pt2, System.Drawing.Point pt3, System.Drawing.Point pt4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBezier(valuetype System.Drawing.Point pt1, valuetype System.Drawing.Point pt2, valuetype System.Drawing.Point pt3, valuetype System.Drawing.Point pt4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBezier (pt1 As Point, pt2 As Point, pt3 As Point, pt4 As Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBezier(System::Drawing::Point pt1, System::Drawing::Point pt2, System::Drawing::Point pt3, System::Drawing::Point pt4);" />
      <MemberSignature Language="F#" Value="member this.AddBezier : System.Drawing.Point * System.Drawing.Point * System.Drawing.Point * System.Drawing.Point -&gt; unit" Usage="graphicsPath.AddBezier (pt1, pt2, pt3, pt4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt1" Type="System.Drawing.Point" />
        <Parameter Name="pt2" Type="System.Drawing.Point" />
        <Parameter Name="pt3" Type="System.Drawing.Point" />
        <Parameter Name="pt4" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt1">
          <span data-ttu-id="aaa4e-193">곡선의 시작점을 나타내는 <see cref="T:System.Drawing.Point" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-193">A <see cref="T:System.Drawing.Point" /> that represents the starting point of the curve.</span>
          </span>
        </param>
        <param name="pt2">
          <span data-ttu-id="aaa4e-194">곡선의 첫째 제어점을 나타내는 <see cref="T:System.Drawing.Point" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-194">A <see cref="T:System.Drawing.Point" /> that represents the first control point for the curve.</span>
          </span>
        </param>
        <param name="pt3">
          <span data-ttu-id="aaa4e-195">곡선의 둘째 제어점을 나타내는 <see cref="T:System.Drawing.Point" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-195">A <see cref="T:System.Drawing.Point" /> that represents the second control point for the curve.</span>
          </span>
        </param>
        <param name="pt4">
          <span data-ttu-id="aaa4e-196">곡선의 끝점을 나타내는 <see cref="T:System.Drawing.Point" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-196">A <see cref="T:System.Drawing.Point" /> that represents the endpoint of the curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-197">3차원 큐빅 곡선을 현재 그림에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-197">Adds a cubic Bézier curve to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaa4e-198">입방 형 곡선의 두 번째 및 세 번째 지점을 제어 지점으로 사용 하 여 첫 번째 요소에서 네 번째 지점에 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-198">The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.</span></span>  
  
 <span data-ttu-id="aaa4e-199">이전 줄 또는 곡선 세그먼트 그림에 있는 경우 입방 형 곡선의 시작점에 이전 세그먼트의 끝점을 연결 하는 줄 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-199">If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aaa4e-200">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-200">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBezier">
      <MemberSignature Language="C#" Value="public void AddBezier (System.Drawing.PointF pt1, System.Drawing.PointF pt2, System.Drawing.PointF pt3, System.Drawing.PointF pt4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBezier(valuetype System.Drawing.PointF pt1, valuetype System.Drawing.PointF pt2, valuetype System.Drawing.PointF pt3, valuetype System.Drawing.PointF pt4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBezier (pt1 As PointF, pt2 As PointF, pt3 As PointF, pt4 As PointF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBezier(System::Drawing::PointF pt1, System::Drawing::PointF pt2, System::Drawing::PointF pt3, System::Drawing::PointF pt4);" />
      <MemberSignature Language="F#" Value="member this.AddBezier : System.Drawing.PointF * System.Drawing.PointF * System.Drawing.PointF * System.Drawing.PointF -&gt; unit" Usage="graphicsPath.AddBezier (pt1, pt2, pt3, pt4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt1" Type="System.Drawing.PointF" />
        <Parameter Name="pt2" Type="System.Drawing.PointF" />
        <Parameter Name="pt3" Type="System.Drawing.PointF" />
        <Parameter Name="pt4" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="pt1">
          <span data-ttu-id="aaa4e-201">곡선의 시작점을 나타내는 <see cref="T:System.Drawing.PointF" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-201">A <see cref="T:System.Drawing.PointF" /> that represents the starting point of the curve.</span>
          </span>
        </param>
        <param name="pt2">
          <span data-ttu-id="aaa4e-202">곡선의 첫째 제어점을 나타내는 <see cref="T:System.Drawing.PointF" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-202">A <see cref="T:System.Drawing.PointF" /> that represents the first control point for the curve.</span>
          </span>
        </param>
        <param name="pt3">
          <span data-ttu-id="aaa4e-203">곡선의 둘째 제어점을 나타내는 <see cref="T:System.Drawing.PointF" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-203">A <see cref="T:System.Drawing.PointF" /> that represents the second control point for the curve.</span>
          </span>
        </param>
        <param name="pt4">
          <span data-ttu-id="aaa4e-204">곡선의 끝점을 나타내는 <see cref="T:System.Drawing.PointF" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-204">A <see cref="T:System.Drawing.PointF" /> that represents the endpoint of the curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-205">3차원 큐빅 곡선을 현재 그림에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-205">Adds a cubic Bézier curve to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaa4e-206">입방 형 곡선의 두 번째 및 세 번째 지점을 제어 지점으로 사용 하 여 첫 번째 요소에서 네 번째 지점에 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-206">The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.</span></span>  
  
 <span data-ttu-id="aaa4e-207">이전 줄 또는 곡선 세그먼트 그림에 있는 경우 입방 형 곡선의 시작점에 이전 세그먼트의 끝점을 연결 하는 줄 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-207">If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aaa4e-208">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-208">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBezier">
      <MemberSignature Language="C#" Value="public void AddBezier (int x1, int y1, int x2, int y2, int x3, int y3, int x4, int y4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBezier(int32 x1, int32 y1, int32 x2, int32 y2, int32 x3, int32 y3, int32 x4, int32 y4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBezier (x1 As Integer, y1 As Integer, x2 As Integer, y2 As Integer, x3 As Integer, y3 As Integer, x4 As Integer, y4 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBezier(int x1, int y1, int x2, int y2, int x3, int y3, int x4, int y4);" />
      <MemberSignature Language="F#" Value="member this.AddBezier : int * int * int * int * int * int * int * int -&gt; unit" Usage="graphicsPath.AddBezier (x1, y1, x2, y2, x3, y3, x4, y4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x1" Type="System.Int32" />
        <Parameter Name="y1" Type="System.Int32" />
        <Parameter Name="x2" Type="System.Int32" />
        <Parameter Name="y2" Type="System.Int32" />
        <Parameter Name="x3" Type="System.Int32" />
        <Parameter Name="y3" Type="System.Int32" />
        <Parameter Name="x4" Type="System.Int32" />
        <Parameter Name="y4" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x1">
          <span data-ttu-id="aaa4e-209">곡선의 시작점에 대한 x-좌표입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-209">The x-coordinate of the starting point of the curve.</span>
          </span>
        </param>
        <param name="y1">
          <span data-ttu-id="aaa4e-210">곡선의 시작점에 대한 y-좌표입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-210">The y-coordinate of the starting point of the curve.</span>
          </span>
        </param>
        <param name="x2">
          <span data-ttu-id="aaa4e-211">곡선의 첫째 제어점에 대한 X좌표입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-211">The x-coordinate of the first control point for the curve.</span>
          </span>
        </param>
        <param name="y2">
          <span data-ttu-id="aaa4e-212">곡선의 첫째 제어점에 대한 Y좌표입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-212">The y-coordinate of the first control point for the curve.</span>
          </span>
        </param>
        <param name="x3">
          <span data-ttu-id="aaa4e-213">곡선의 둘째 제어점에 대한 X좌표입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-213">The x-coordinate of the second control point for the curve.</span>
          </span>
        </param>
        <param name="y3">
          <span data-ttu-id="aaa4e-214">곡선의 둘째 제어점에 대한 Y좌표입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-214">The y-coordinate of the second control point for the curve.</span>
          </span>
        </param>
        <param name="x4">
          <span data-ttu-id="aaa4e-215">곡선의 끝점에 대한 X좌표입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-215">The x-coordinate of the endpoint of the curve.</span>
          </span>
        </param>
        <param name="y4">
          <span data-ttu-id="aaa4e-216">곡선의 끝점에 대한 Y좌표입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-216">The y-coordinate of the endpoint of the curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-217">3차원 큐빅 곡선을 현재 그림에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-217">Adds a cubic Bézier curve to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaa4e-218">입방 형 곡선의 두 번째 및 세 번째 지점을 제어 지점으로 사용 하 여 첫 번째 요소에서 네 번째 지점에 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-218">The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.</span></span>  
  
 <span data-ttu-id="aaa4e-219">이전 줄 또는 곡선 세그먼트 그림에 있는 경우 입방 형 곡선의 시작점에 이전 세그먼트의 끝점을 연결 하는 줄 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-219">If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aaa4e-220">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-220">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="aaa4e-221">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-221">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="aaa4e-222">경로 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-222">Creates a path.</span></span>  
  
-   <span data-ttu-id="aaa4e-223">(50, 50) 점으로 정의 입방 형 베 지 어 곡선을 추가 하는 (70, 0) (100, 120) 및 (150, 50) 경로에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-223">Adds a cubic Bézier curve defined by the points (50, 50), (70, 0), (100, 120), and (150, 50) to the path.</span></span>  
  
-   <span data-ttu-id="aaa4e-224">곡선을 닫습니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-224">Closes the curve.</span></span>  
  
-   <span data-ttu-id="aaa4e-225">화면에 경로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-225">Draws the path to screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#2)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBezier">
      <MemberSignature Language="C#" Value="public void AddBezier (float x1, float y1, float x2, float y2, float x3, float y3, float x4, float y4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBezier(float32 x1, float32 y1, float32 x2, float32 y2, float32 x3, float32 y3, float32 x4, float32 y4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBezier (x1 As Single, y1 As Single, x2 As Single, y2 As Single, x3 As Single, y3 As Single, x4 As Single, y4 As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBezier(float x1, float y1, float x2, float y2, float x3, float y3, float x4, float y4);" />
      <MemberSignature Language="F#" Value="member this.AddBezier : single * single * single * single * single * single * single * single -&gt; unit" Usage="graphicsPath.AddBezier (x1, y1, x2, y2, x3, y3, x4, y4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x1" Type="System.Single" />
        <Parameter Name="y1" Type="System.Single" />
        <Parameter Name="x2" Type="System.Single" />
        <Parameter Name="y2" Type="System.Single" />
        <Parameter Name="x3" Type="System.Single" />
        <Parameter Name="y3" Type="System.Single" />
        <Parameter Name="x4" Type="System.Single" />
        <Parameter Name="y4" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x1">
          <span data-ttu-id="aaa4e-226">곡선의 시작점에 대한 x-좌표입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-226">The x-coordinate of the starting point of the curve.</span>
          </span>
        </param>
        <param name="y1">
          <span data-ttu-id="aaa4e-227">곡선의 시작점에 대한 y-좌표입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-227">The y-coordinate of the starting point of the curve.</span>
          </span>
        </param>
        <param name="x2">
          <span data-ttu-id="aaa4e-228">곡선의 첫째 제어점에 대한 X좌표입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-228">The x-coordinate of the first control point for the curve.</span>
          </span>
        </param>
        <param name="y2">
          <span data-ttu-id="aaa4e-229">곡선의 첫째 제어점에 대한 Y좌표입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-229">The y-coordinate of the first control point for the curve.</span>
          </span>
        </param>
        <param name="x3">
          <span data-ttu-id="aaa4e-230">곡선의 둘째 제어점에 대한 X좌표입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-230">The x-coordinate of the second control point for the curve.</span>
          </span>
        </param>
        <param name="y3">
          <span data-ttu-id="aaa4e-231">곡선의 둘째 제어점에 대한 Y좌표입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-231">The y-coordinate of the second control point for the curve.</span>
          </span>
        </param>
        <param name="x4">
          <span data-ttu-id="aaa4e-232">곡선의 끝점에 대한 X좌표입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-232">The x-coordinate of the endpoint of the curve.</span>
          </span>
        </param>
        <param name="y4">
          <span data-ttu-id="aaa4e-233">곡선의 끝점에 대한 Y좌표입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-233">The y-coordinate of the endpoint of the curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-234">3차원 큐빅 곡선을 현재 그림에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-234">Adds a cubic Bézier curve to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaa4e-235">입방 형 곡선의 두 번째 및 세 번째 지점을 제어 지점으로 사용 하 여 첫 번째 요소에서 네 번째 지점에 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-235">The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.</span></span>  
  
 <span data-ttu-id="aaa4e-236">이전 줄 또는 곡선 세그먼트 그림에 있는 경우 입방 형 곡선의 시작점에 이전 세그먼트의 끝점을 연결 하는 줄 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-236">If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aaa4e-237">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-237">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddBeziers">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="aaa4e-238">연결된 일련의 3차원 큐빅 곡선을 현재 그림에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-238">Adds a sequence of connected cubic Bézier curves to the current figure.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddBeziers">
      <MemberSignature Language="C#" Value="public void AddBeziers (params System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBeziers(valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBeziers (ParamArray points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBeziers(... cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddBeziers : System.Drawing.Point[] -&gt; unit" Usage="graphicsPath.AddBeziers points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="aaa4e-239">곡선을 정의하는 지점을 나타내는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-239">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curves.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-240">연결된 일련의 3차원 큐빅 곡선을 현재 그림에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-240">Adds a sequence of connected cubic Bézier curves to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaa4e-241">`points` 끝점의 배열 및 연결 된 곡선의 제어점 매개 변수를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-241">The `points` parameter specifies an array of endpoints and control points of the connected curves.</span></span> <span data-ttu-id="aaa4e-242">첫 번째 곡선은 첫 번째 요소에서 네 번째 요소는 요소는 `points` 제어 점으로 두 번째 및 세 번째 요소를 사용 하 여 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-242">The first curve is constructed from the first point to the fourth point in the `points` array by using the second and third points as control points.</span></span> <span data-ttu-id="aaa4e-243">이전 곡선의 끝점 외에도 이후의 각 곡선 시퀀스에는 정확히 세 개 이상의 점 만들어야: 시퀀스의 다음 두 지점 제어 요소가 있고 세 번째는 추가 된 곡선의 끝점입니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-243">In addition to the endpoint of the previous curve, each subsequent curve in the sequence needs exactly three more points: the next two points in the sequence are control points, and the third is the endpoint for the added curve.</span></span>  
  
 <span data-ttu-id="aaa4e-244">이전 줄 또는 그림에는 곡선 없으면 줄 시퀀스의 첫 번째 입방 형 곡선의 시작점에 이전 세그먼트의 끝점을 연결에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-244">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the first cubic curve in the sequence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aaa4e-245">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-245">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="aaa4e-246">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-246">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="aaa4e-247">7 개의 점이 (두 개의 연결 된 베 지 어 곡선을 나타냄)의 배열을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-247">Creates an array of seven points (representing two connected Bézier curves).</span></span>  
  
-   <span data-ttu-id="aaa4e-248">경로 만들고 경로를 일련의 베 지 어 곡선 요소를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-248">Creates a path and adds the series of Bézier curve points to the path.</span></span>  
  
-   <span data-ttu-id="aaa4e-249">화면에 경로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-249">Draws the path to screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#3)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBeziers">
      <MemberSignature Language="C#" Value="public void AddBeziers (System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBeziers(valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBeziers (points As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBeziers(cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddBeziers : System.Drawing.PointF[] -&gt; unit" Usage="graphicsPath.AddBeziers points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="aaa4e-250">곡선을 정의하는 지점을 나타내는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-250">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curves.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-251">연결된 일련의 3차원 큐빅 곡선을 현재 그림에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-251">Adds a sequence of connected cubic Bézier curves to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaa4e-252">`points` 끝점의 배열 및 연결 된 곡선의 제어점 매개 변수를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-252">The `points` parameter specifies an array of endpoints and control points of the connected curves.</span></span> <span data-ttu-id="aaa4e-253">첫 번째 곡선은 첫 번째 요소에서 네 번째 요소는 요소는 `points` 제어 점으로 두 번째 및 세 번째 요소를 사용 하 여 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-253">The first curve is constructed from the first point to the fourth point in the `points` array by using the second and third points as control points.</span></span> <span data-ttu-id="aaa4e-254">이전 곡선의 끝점 외에도 이후의 각 곡선 시퀀스에는 정확히 세 개 이상의 점 만들어야: 시퀀스의 다음 두 지점 제어 요소가 있고 세 번째는 추가 된 곡선의 끝점입니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-254">In addition to the endpoint of the previous curve, each subsequent curve in the sequence needs exactly three more points: the next two points in the sequence are control points, and the third is the endpoint for the added curve.</span></span>  
  
 <span data-ttu-id="aaa4e-255">이전 줄 또는 그림에는 곡선 없으면 줄 시퀀스의 첫 번째 입방 형 곡선의 시작점에 이전 세그먼트의 끝점을 연결에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-255">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the first cubic curve in the sequence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aaa4e-256">예제에서는 참조 하세요.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-256">For an example see:</span></span>  
  
 <xref:System.Drawing.Drawing2D.GraphicsPath.AddBeziers%28System.Drawing.Point%5B%5D%29>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddClosedCurve">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="aaa4e-257">닫힌 곡선을 이 경로에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-257">Adds a closed curve to this path.</span>
          </span>
          <span data-ttu-id="aaa4e-258">곡선이 배열에 있는 각 지점을 모두 지나므로 카디널 스플라인 곡선이 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-258">A cardinal spline curve is used because the curve travels through each of the points in the array.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddClosedCurve">
      <MemberSignature Language="C#" Value="public void AddClosedCurve (System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddClosedCurve(valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddClosedCurve (points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddClosedCurve(cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddClosedCurve : System.Drawing.Point[] -&gt; unit" Usage="graphicsPath.AddClosedCurve points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="aaa4e-259">곡선을 정의하는 지점을 나타내는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-259">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-260">닫힌 곡선을 이 경로에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-260">Adds a closed curve to this path.</span>
          </span>
          <span data-ttu-id="aaa4e-261">곡선이 배열에 있는 각 지점을 모두 지나므로 카디널 스플라인 곡선이 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-261">A cardinal spline curve is used because the curve travels through each of the points in the array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaa4e-262">사용자는 필요할 경우 원래 포인트를 유지 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-262">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="aaa4e-263">원점은 입방 형 3 차원 곡선 제어점을 내부적으로 변환 됩니다, 그리고 있어서 원점은 메커니즘이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-263">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span> <span data-ttu-id="aaa4e-264">경우는 첫 번째 지점과 마지막에 `points` 배열 동일한 점 없는, 이러한 두 개의 점을 연결 하 여 곡선 닫혀 있습니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-264">If the first point and the last point in the `points` array are not the same point, the curve is closed by connecting these two points.</span></span> <span data-ttu-id="aaa4e-265">이 메서드에 대 한 압력 값을 설정할 수 없습니다 및 0.5에 해당 하는 값을 기본값으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-265">The tension value cannot be set for this method, and defaults to a value equivalent to 0.5.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aaa4e-266">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-266">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddClosedCurve">
      <MemberSignature Language="C#" Value="public void AddClosedCurve (System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddClosedCurve(valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddClosedCurve (points As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddClosedCurve(cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddClosedCurve : System.Drawing.PointF[] -&gt; unit" Usage="graphicsPath.AddClosedCurve points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="aaa4e-267">곡선을 정의하는 지점을 나타내는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-267">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-268">닫힌 곡선을 이 경로에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-268">Adds a closed curve to this path.</span>
          </span>
          <span data-ttu-id="aaa4e-269">곡선이 배열에 있는 각 지점을 모두 지나므로 카디널 스플라인 곡선이 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-269">A cardinal spline curve is used because the curve travels through each of the points in the array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaa4e-270">사용자는 필요할 경우 원래 포인트를 유지 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-270">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="aaa4e-271">원점은 입방 형 3 차원 곡선 제어점을 내부적으로 변환 됩니다, 그리고 있어서 원점은 메커니즘이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-271">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span> <span data-ttu-id="aaa4e-272">경우는 첫 번째 지점과 마지막에 `points` 배열 동일한 점 없는, 이러한 두 개의 점을 연결 하 여 곡선 닫혀 있습니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-272">If the first point and the last point in the `points` array are not the same point, the curve is closed by connecting these two points.</span></span> <span data-ttu-id="aaa4e-273">이 메서드에 대 한 압력 값을 설정할 수 없습니다 및 0.5에 해당 하는 값을 기본값으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-273">The tension value cannot be set for this method, and defaults to a value equivalent to 0.5.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aaa4e-274">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-274">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddClosedCurve">
      <MemberSignature Language="C#" Value="public void AddClosedCurve (System.Drawing.Point[] points, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddClosedCurve(valuetype System.Drawing.Point[] points, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddClosedCurve (points As Point(), tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddClosedCurve(cli::array &lt;System::Drawing::Point&gt; ^ points, float tension);" />
      <MemberSignature Language="F#" Value="member this.AddClosedCurve : System.Drawing.Point[] * single -&gt; unit" Usage="graphicsPath.AddClosedCurve (points, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="aaa4e-275">곡선을 정의하는 지점을 나타내는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-275">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</span>
          </span>
        </param>
        <param name="tension">
          <span data-ttu-id="aaa4e-276">지점들 사이에서 곡률을 지정하는 0에서 1 사이의 값으로, 0 값에 가까울수록 각지고 1에 가까울수록 완만합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-276">A value between from 0 through 1 that specifies the amount that the curve bends between points, with 0 being the smallest curve (sharpest corner) and 1 being the smoothest curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-277">닫힌 곡선을 이 경로에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-277">Adds a closed curve to this path.</span>
          </span>
          <span data-ttu-id="aaa4e-278">곡선이 배열에 있는 각 지점을 모두 지나므로 카디널 스플라인 곡선이 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-278">A cardinal spline curve is used because the curve travels through each of the points in the array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaa4e-279">사용자는 필요할 경우 원래 포인트를 유지 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-279">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="aaa4e-280">원점은 입방 형 3 차원 곡선 제어점을 내부적으로 변환 됩니다, 그리고 있어서 원점은 메커니즘이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-280">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span> <span data-ttu-id="aaa4e-281">경우는 첫 번째 지점과 마지막에 `points` 배열 동일한 점 없는, 이러한 두 개의 점을 연결 하 여 곡선 닫혀 있습니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-281">If the first point and the last point in the `points` array are not the same point, the curve is closed by connecting these two points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aaa4e-282">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-282">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="aaa4e-283">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-283">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="aaa4e-284">6 개의 점 (카디널 스플라인을 나타냄)의 배열을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-284">Creates an array of six points (representing a cardinal spline).</span></span>  
  
-   <span data-ttu-id="aaa4e-285">경로 만들어 (시작 지점으로 끝점에서 닫힘) 경로에 폐쇄형된 카디널 스플라인 곡선을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-285">Creates a path and adds the closed cardinal spline curves to the path (closed from the endpoint to the starting point).</span></span>  
  
-   <span data-ttu-id="aaa4e-286">화면에 경로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-286">Draws the path to screen.</span></span>  
  
 <span data-ttu-id="aaa4e-287">0.5의 장력 사용 됨을 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-287">Notice that a tension of 0.5 is used.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#4)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddClosedCurve">
      <MemberSignature Language="C#" Value="public void AddClosedCurve (System.Drawing.PointF[] points, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddClosedCurve(valuetype System.Drawing.PointF[] points, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[],System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddClosedCurve (points As PointF(), tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddClosedCurve(cli::array &lt;System::Drawing::PointF&gt; ^ points, float tension);" />
      <MemberSignature Language="F#" Value="member this.AddClosedCurve : System.Drawing.PointF[] * single -&gt; unit" Usage="graphicsPath.AddClosedCurve (points, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="aaa4e-288">곡선을 정의하는 지점을 나타내는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-288">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</span>
          </span>
        </param>
        <param name="tension">
          <span data-ttu-id="aaa4e-289">지점들 사이에서 곡률을 지정하는 0에서 1 사이의 값으로, 0 값에 가까울수록 각지고 1에 가까울수록 완만합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-289">A value between from 0 through 1 that specifies the amount that the curve bends between points, with 0 being the smallest curve (sharpest corner) and 1 being the smoothest curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-290">닫힌 곡선을 이 경로에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-290">Adds a closed curve to this path.</span>
          </span>
          <span data-ttu-id="aaa4e-291">곡선이 배열에 있는 각 지점을 모두 지나므로 카디널 스플라인 곡선이 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-291">A cardinal spline curve is used because the curve travels through each of the points in the array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaa4e-292">사용자는 필요할 경우 원래 포인트를 유지 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-292">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="aaa4e-293">원점은 입방 형 3 차원 곡선 제어점을 내부적으로 변환 됩니다, 그리고 있어서 원점은 메커니즘이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-293">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span> <span data-ttu-id="aaa4e-294">경우는 첫 번째 지점과 마지막에 `points` 배열 동일한 점 없는, 이러한 두 개의 점을 연결 하 여 곡선 닫혀 있습니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-294">If the first point and the last point in the `points` array are not the same point, the curve is closed by connecting these two points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aaa4e-295">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-295">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddCurve">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="aaa4e-296">스플라인 곡선을 현재 그림에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-296">Adds a spline curve to the current figure.</span>
          </span>
          <span data-ttu-id="aaa4e-297">곡선이 배열에 있는 각 지점을 모두 지나므로 카디널 스플라인 곡선이 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-297">A cardinal spline curve is used because the curve travels through each of the points in the array.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddCurve : System.Drawing.Point[] -&gt; unit" Usage="graphicsPath.AddCurve points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="aaa4e-298">곡선을 정의하는 지점을 나타내는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-298">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-299">스플라인 곡선을 현재 그림에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-299">Adds a spline curve to the current figure.</span>
          </span>
          <span data-ttu-id="aaa4e-300">곡선이 배열에 있는 각 지점을 모두 지나므로 카디널 스플라인 곡선이 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-300">A cardinal spline curve is used because the curve travels through each of the points in the array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaa4e-301">사용자는 필요할 경우 원래 포인트를 유지 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-301">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="aaa4e-302">원점은 입방 형 3 차원 곡선 제어점을 내부적으로 변환 됩니다, 그리고 있어서 원점은 메커니즘이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-302">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aaa4e-303">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-303">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddCurve : System.Drawing.PointF[] -&gt; unit" Usage="graphicsPath.AddCurve points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="aaa4e-304">곡선을 정의하는 지점을 나타내는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-304">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-305">스플라인 곡선을 현재 그림에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-305">Adds a spline curve to the current figure.</span>
          </span>
          <span data-ttu-id="aaa4e-306">곡선이 배열에 있는 각 지점을 모두 지나므로 카디널 스플라인 곡선이 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-306">A cardinal spline curve is used because the curve travels through each of the points in the array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaa4e-307">사용자는 필요할 경우 원래 포인트를 유지 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-307">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="aaa4e-308">원점은 입방 형 3 차원 곡선 제어점을 내부적으로 변환 됩니다, 그리고 있어서 원점은 메커니즘이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-308">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aaa4e-309">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-309">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.Point[] points, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.Point[] points, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As Point(), tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::Point&gt; ^ points, float tension);" />
      <MemberSignature Language="F#" Value="member this.AddCurve : System.Drawing.Point[] * single -&gt; unit" Usage="graphicsPath.AddCurve (points, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="aaa4e-310">곡선을 정의하는 지점을 나타내는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-310">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</span>
          </span>
        </param>
        <param name="tension">
          <span data-ttu-id="aaa4e-311">제어점 사이의 곡률을 지정하는 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-311">A value that specifies the amount that the curve bends between control points.</span>
          </span>
          <span data-ttu-id="aaa4e-312">1보다 큰 값을 설정하면 예기치 않은 결과가 발생할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-312">Values greater than 1 produce unpredictable results.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-313">스플라인 곡선을 현재 그림에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-313">Adds a spline curve to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaa4e-314">사용자는 필요할 경우 원래 포인트를 유지 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-314">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="aaa4e-315">원점은 입방 형 3 차원 곡선 제어점을 내부적으로 변환 됩니다, 그리고 있어서 원점은 메커니즘이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-315">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aaa4e-316">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-316">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.PointF[] points, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.PointF[] points, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As PointF(), tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::PointF&gt; ^ points, float tension);" />
      <MemberSignature Language="F#" Value="member this.AddCurve : System.Drawing.PointF[] * single -&gt; unit" Usage="graphicsPath.AddCurve (points, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="aaa4e-317">곡선을 정의하는 지점을 나타내는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-317">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</span>
          </span>
        </param>
        <param name="tension">
          <span data-ttu-id="aaa4e-318">제어점 사이의 곡률을 지정하는 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-318">A value that specifies the amount that the curve bends between control points.</span>
          </span>
          <span data-ttu-id="aaa4e-319">1보다 큰 값을 설정하면 예기치 않은 결과가 발생할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-319">Values greater than 1 produce unpredictable results.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-320">스플라인 곡선을 현재 그림에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-320">Adds a spline curve to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaa4e-321">사용자는 필요할 경우 원래 포인트를 유지 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-321">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="aaa4e-322">원점은 입방 형 3 차원 곡선 제어점을 내부적으로 변환 됩니다, 그리고 있어서 원점은 메커니즘이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-322">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aaa4e-323">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-323">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.Point[] points, int offset, int numberOfSegments, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.Point[] points, int32 offset, int32 numberOfSegments, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As Point(), offset As Integer, numberOfSegments As Integer, tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::Point&gt; ^ points, int offset, int numberOfSegments, float tension);" />
      <MemberSignature Language="F#" Value="member this.AddCurve : System.Drawing.Point[] * int * int * single -&gt; unit" Usage="graphicsPath.AddCurve (points, offset, numberOfSegments, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="numberOfSegments" Type="System.Int32" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="aaa4e-324">곡선을 정의하는 지점을 나타내는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-324">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="aaa4e-325">곡선의 첫째 지점으로 사용되는 <c>지점</c> 배열에 있는 요소의 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-325">The index of the element in the <c>points</c> array that is used as the first point in the curve.</span>
          </span>
        </param>
        <param name="numberOfSegments">
          <span data-ttu-id="aaa4e-326">제어점 사이의 곡률을 지정하는 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-326">A value that specifies the amount that the curve bends between control points.</span>
          </span>
          <span data-ttu-id="aaa4e-327">1보다 큰 값을 설정하면 예기치 않은 결과가 발생할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-327">Values greater than 1 produce unpredictable results.</span>
          </span>
        </param>
        <param name="tension">
          <span data-ttu-id="aaa4e-328">제어점 사이의 곡률을 지정하는 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-328">A value that specifies the amount that the curve bends between control points.</span>
          </span>
          <span data-ttu-id="aaa4e-329">1보다 큰 값을 설정하면 예기치 않은 결과가 발생할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-329">Values greater than 1 produce unpredictable results.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-330">스플라인 곡선을 현재 그림에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-330">Adds a spline curve to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaa4e-331">사용자는 필요할 경우 원래 포인트를 유지 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-331">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="aaa4e-332">원점은 입방 형 3 차원 곡선 제어점을 내부적으로 변환 됩니다, 그리고 있어서 원점은 메커니즘이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-332">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
 <span data-ttu-id="aaa4e-333">변수로 지정 된 배열에 대 한 지점에서 시작 하는 곡선은 `offset` 매개 변수에서 지정한 지점 (세그먼트)의 수를 포함 `numberOfSegments`합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-333">The curve begins at the point in the array specified by the `offset` parameter and includes the number of points (segments) specified by `numberOfSegments`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aaa4e-334">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-334">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="aaa4e-335">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-335">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="aaa4e-336">(카디널 스플라인을 나타내는) 4 개 요소의 배열을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-336">Creates an array of four points (representing a cardinal spline).</span></span>  
  
-   <span data-ttu-id="aaa4e-337">경로 만들고 점의 배열을 사용 하 여, 곡선 경로에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-337">Creates a path and using the array of points, adds the curve to the path.</span></span>  
  
-   <span data-ttu-id="aaa4e-338">화면에 경로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-338">Draws the path to the screen.</span></span>  
  
 <span data-ttu-id="aaa4e-339">배열에는 점이 4 개 저장, 동안 되 세그먼트에 대 한 호출의 세 번째 인수에 지정 된 수는 <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-339">Notice that while the array holds four points, there are only three segments, which is the number specified in the third argument of the call to <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%2A>.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#5)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.PointF[] points, int offset, int numberOfSegments, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.PointF[] points, int32 offset, int32 numberOfSegments, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As PointF(), offset As Integer, numberOfSegments As Integer, tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::PointF&gt; ^ points, int offset, int numberOfSegments, float tension);" />
      <MemberSignature Language="F#" Value="member this.AddCurve : System.Drawing.PointF[] * int * int * single -&gt; unit" Usage="graphicsPath.AddCurve (points, offset, numberOfSegments, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="numberOfSegments" Type="System.Int32" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="aaa4e-340">곡선을 정의하는 지점을 나타내는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-340">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="aaa4e-341">곡선의 첫째 지점으로 사용되는 <c>지점</c> 배열에 있는 요소의 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-341">The index of the element in the <c>points</c> array that is used as the first point in the curve.</span>
          </span>
        </param>
        <param name="numberOfSegments">
          <span data-ttu-id="aaa4e-342">곡선을 그리는 데 사용되는 세그먼트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-342">The number of segments used to draw the curve.</span>
          </span>
          <span data-ttu-id="aaa4e-343">세그먼트는 두 지점을 연결하는 선입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-343">A segment can be thought of as a line connecting two points.</span>
          </span>
        </param>
        <param name="tension">
          <span data-ttu-id="aaa4e-344">제어점 사이의 곡률을 지정하는 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-344">A value that specifies the amount that the curve bends between control points.</span>
          </span>
          <span data-ttu-id="aaa4e-345">1보다 큰 값을 설정하면 예기치 않은 결과가 발생할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-345">Values greater than 1 produce unpredictable results.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-346">스플라인 곡선을 현재 그림에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-346">Adds a spline curve to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaa4e-347">사용자는 필요할 경우 원래 포인트를 유지 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-347">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="aaa4e-348">원점은 입방 형 3 차원 곡선 제어점을 내부적으로 변환 됩니다, 그리고 있어서 원점은 메커니즘이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-348">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
 <span data-ttu-id="aaa4e-349">변수로 지정 된 배열에 대 한 지점에서 시작 하는 곡선 `offset`, 점 (세그먼트)로 지정 된 개수를 포함 하 고 `numberOfSegments`합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-349">The curve begins at the point in the array specified by `offset`, and includes the number of points (segments) specified by `numberOfSegments`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aaa4e-350">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-350">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddEllipse">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="aaa4e-351">타원을 현재 경로에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-351">Adds an ellipse to the current path.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddEllipse">
      <MemberSignature Language="C#" Value="public void AddEllipse (System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEllipse(valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEllipse (rect As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEllipse(System::Drawing::Rectangle rect);" />
      <MemberSignature Language="F#" Value="member this.AddEllipse : System.Drawing.Rectangle -&gt; unit" Usage="graphicsPath.AddEllipse rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="aaa4e-352">타원을 정의하는 경계 사각형을 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-352">A <see cref="T:System.Drawing.Rectangle" /> that represents the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-353">타원을 현재 경로에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-353">Adds an ellipse to the current path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aaa4e-354">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-354">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="aaa4e-355">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-355">The code performs the following actions:</span></span>  
  
 <span data-ttu-id="aaa4e-356">타원을 정의 하는 경계 사각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-356">Creates a bounding rectangle that defines an ellipse.</span></span>  
  
 <span data-ttu-id="aaa4e-357">경로 만들고 타원 경로에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-357">Creates a path and adds the ellipse to the path.</span></span>  
  
 <span data-ttu-id="aaa4e-358">화면에 경로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-358">Draws the path to screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#6)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEllipse">
      <MemberSignature Language="C#" Value="public void AddEllipse (System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEllipse(valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEllipse (rect As RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEllipse(System::Drawing::RectangleF rect);" />
      <MemberSignature Language="F#" Value="member this.AddEllipse : System.Drawing.RectangleF -&gt; unit" Usage="graphicsPath.AddEllipse rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="aaa4e-359">타원을 정의하는 경계 사각형을 나타내는 <see cref="T:System.Drawing.RectangleF" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-359">A <see cref="T:System.Drawing.RectangleF" /> that represents the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-360">타원을 현재 경로에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-360">Adds an ellipse to the current path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aaa4e-361">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-361">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEllipse">
      <MemberSignature Language="C#" Value="public void AddEllipse (int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEllipse(int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEllipse (x As Integer, y As Integer, width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEllipse(int x, int y, int width, int height);" />
      <MemberSignature Language="F#" Value="member this.AddEllipse : int * int * int * int -&gt; unit" Usage="graphicsPath.AddEllipse (x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="aaa4e-362">타원을 정의하는 경계 사각형의 왼쪽 위 모퉁이에 대한 x-좌표입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-362">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="aaa4e-363">타원을 정의하는 경계 사각형의 왼쪽 위 모퉁이에 대한 y-좌표입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-363">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="aaa4e-364">타원을 정의하는 경계 사각형의 너비입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-364">The width of the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="aaa4e-365">타원을 정의하는 경계 사각형의 높이입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-365">The height of the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-366">타원을 현재 경로에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-366">Adds an ellipse to the current path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aaa4e-367">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-367">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEllipse">
      <MemberSignature Language="C#" Value="public void AddEllipse (float x, float y, float width, float height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEllipse(float32 x, float32 y, float32 width, float32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEllipse (x As Single, y As Single, width As Single, height As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEllipse(float x, float y, float width, float height);" />
      <MemberSignature Language="F#" Value="member this.AddEllipse : single * single * single * single -&gt; unit" Usage="graphicsPath.AddEllipse (x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="aaa4e-368">타원을 정의하는 경계 사각형의 왼쪽 위 모퉁이에 대한 x-좌표입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-368">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="aaa4e-369">타원을 정의하는 경계 사각형의 왼쪽 위 모퉁이에 대한 Y좌표입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-369">The y-coordinate of the upper left corner of the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="aaa4e-370">타원을 정의하는 경계 사각형의 너비입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-370">The width of the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="aaa4e-371">타원을 정의하는 경계 사각형의 높이입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-371">The height of the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-372">타원을 현재 경로에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-372">Adds an ellipse to the current path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aaa4e-373">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-373">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddLine">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="aaa4e-374">선 세그먼트를 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-374">Appends a line segment to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddLine">
      <MemberSignature Language="C#" Value="public void AddLine (System.Drawing.Point pt1, System.Drawing.Point pt2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLine(valuetype System.Drawing.Point pt1, valuetype System.Drawing.Point pt2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.Point,System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLine (pt1 As Point, pt2 As Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLine(System::Drawing::Point pt1, System::Drawing::Point pt2);" />
      <MemberSignature Language="F#" Value="member this.AddLine : System.Drawing.Point * System.Drawing.Point -&gt; unit" Usage="graphicsPath.AddLine (pt1, pt2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt1" Type="System.Drawing.Point" />
        <Parameter Name="pt2" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt1">
          <span data-ttu-id="aaa4e-375">선의 시작점을 나타내는 <see cref="T:System.Drawing.Point" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-375">A <see cref="T:System.Drawing.Point" /> that represents the starting point of the line.</span>
          </span>
        </param>
        <param name="pt2">
          <span data-ttu-id="aaa4e-376">선의 끝점을 나타내는 <see cref="T:System.Drawing.Point" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-376">A <see cref="T:System.Drawing.Point" /> that represents the endpoint of the line.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-377">선 세그먼트를 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-377">Appends a line segment to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaa4e-378">이 메서드는이 항목의 끝에 지정된 된 요소에 정의 된 선 세그먼트를 추가 <xref:System.Drawing.Drawing2D.GraphicsPath>합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-378">This method adds the line segment defined by the specified points to the end of this <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span> <span data-ttu-id="aaa4e-379">이전 줄 또는 곡선에 있는 경우는 <xref:System.Drawing.Drawing2D.GraphicsPath>, 경로에 마지막 지점 하 고 첫 번째 새 선 세그먼트에 연결 하는 선 세그먼트 그려집니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-379">If there are previous lines or curves in the <xref:System.Drawing.Drawing2D.GraphicsPath>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aaa4e-380">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-380">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLine">
      <MemberSignature Language="C#" Value="public void AddLine (System.Drawing.PointF pt1, System.Drawing.PointF pt2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLine(valuetype System.Drawing.PointF pt1, valuetype System.Drawing.PointF pt2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.PointF,System.Drawing.PointF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLine (pt1 As PointF, pt2 As PointF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLine(System::Drawing::PointF pt1, System::Drawing::PointF pt2);" />
      <MemberSignature Language="F#" Value="member this.AddLine : System.Drawing.PointF * System.Drawing.PointF -&gt; unit" Usage="graphicsPath.AddLine (pt1, pt2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt1" Type="System.Drawing.PointF" />
        <Parameter Name="pt2" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="pt1">
          <span data-ttu-id="aaa4e-381">선의 시작점을 나타내는 <see cref="T:System.Drawing.PointF" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-381">A <see cref="T:System.Drawing.PointF" /> that represents the starting point of the line.</span>
          </span>
        </param>
        <param name="pt2">
          <span data-ttu-id="aaa4e-382">선의 끝점을 나타내는 <see cref="T:System.Drawing.PointF" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-382">A <see cref="T:System.Drawing.PointF" /> that represents the endpoint of the line.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-383">선 세그먼트를 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-383">Appends a line segment to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaa4e-384">이 메서드는이 항목의 끝에 지정된 된 요소에 정의 된 선 세그먼트를 추가 <xref:System.Drawing.Drawing2D.GraphicsPath>합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-384">This method adds the line segment defined by the specified points to the end of this <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span> <span data-ttu-id="aaa4e-385">이전 줄 또는 곡선에 있는 경우는 <xref:System.Drawing.Drawing2D.GraphicsPath>, 경로에 마지막 지점 하 고 첫 번째 새 선 세그먼트에 연결 하는 선 세그먼트 그려집니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-385">If there are previous lines or curves in the <xref:System.Drawing.Drawing2D.GraphicsPath>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aaa4e-386">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-386">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLine">
      <MemberSignature Language="C#" Value="public void AddLine (int x1, int y1, int x2, int y2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLine(int32 x1, int32 y1, int32 x2, int32 y2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLine (x1 As Integer, y1 As Integer, x2 As Integer, y2 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLine(int x1, int y1, int x2, int y2);" />
      <MemberSignature Language="F#" Value="member this.AddLine : int * int * int * int -&gt; unit" Usage="graphicsPath.AddLine (x1, y1, x2, y2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x1" Type="System.Int32" />
        <Parameter Name="y1" Type="System.Int32" />
        <Parameter Name="x2" Type="System.Int32" />
        <Parameter Name="y2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x1">
          <span data-ttu-id="aaa4e-387">선의 시작점에 대한 X좌표입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-387">The x-coordinate of the starting point of the line.</span>
          </span>
        </param>
        <param name="y1">
          <span data-ttu-id="aaa4e-388">선의 시작점에 대한 Y좌표입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-388">The y-coordinate of the starting point of the line.</span>
          </span>
        </param>
        <param name="x2">
          <span data-ttu-id="aaa4e-389">선의 끝점에 대한 X좌표입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-389">The x-coordinate of the endpoint of the line.</span>
          </span>
        </param>
        <param name="y2">
          <span data-ttu-id="aaa4e-390">선의 끝점에 대한 Y좌표입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-390">The y-coordinate of the endpoint of the line.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-391">선 세그먼트를 현재 그림에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-391">Appends a line segment to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaa4e-392">이 메서드는 현재 그림의 끝에 지정된 된 요소에 정의 된 선 세그먼트를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-392">This method adds the line segment defined by the specified points to the end of the current figure.</span></span> <span data-ttu-id="aaa4e-393">이전 줄 또는 곡선에 있는 경우는 <xref:System.Drawing.Drawing2D.GraphicsPath>, 경로에 마지막 지점 하 고 첫 번째 새 선 세그먼트에 연결 하는 선 세그먼트 그려집니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-393">If there are previous lines or curves in the <xref:System.Drawing.Drawing2D.GraphicsPath>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aaa4e-394">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-394">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="aaa4e-395">코드 경로 만든 다음는 삼각형을 형성 하는 세 개의 선을 추가한 다음 화면으로 경로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-395">The code creates a path, adds three lines that form a triangle, and then draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#7)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLine">
      <MemberSignature Language="C#" Value="public void AddLine (float x1, float y1, float x2, float y2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLine(float32 x1, float32 y1, float32 x2, float32 y2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLine (x1 As Single, y1 As Single, x2 As Single, y2 As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLine(float x1, float y1, float x2, float y2);" />
      <MemberSignature Language="F#" Value="member this.AddLine : single * single * single * single -&gt; unit" Usage="graphicsPath.AddLine (x1, y1, x2, y2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x1" Type="System.Single" />
        <Parameter Name="y1" Type="System.Single" />
        <Parameter Name="x2" Type="System.Single" />
        <Parameter Name="y2" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x1">
          <span data-ttu-id="aaa4e-396">선의 시작점에 대한 X좌표입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-396">The x-coordinate of the starting point of the line.</span>
          </span>
        </param>
        <param name="y1">
          <span data-ttu-id="aaa4e-397">선의 시작점에 대한 Y좌표입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-397">The y-coordinate of the starting point of the line.</span>
          </span>
        </param>
        <param name="x2">
          <span data-ttu-id="aaa4e-398">선의 끝점에 대한 X좌표입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-398">The x-coordinate of the endpoint of the line.</span>
          </span>
        </param>
        <param name="y2">
          <span data-ttu-id="aaa4e-399">선의 끝점에 대한 Y좌표입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-399">The y-coordinate of the endpoint of the line.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-400">선 세그먼트를 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-400">Appends a line segment to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaa4e-401">이 메서드는이 항목의 끝에 지정된 된 요소에 정의 된 선 세그먼트를 추가 <xref:System.Drawing.Drawing2D.GraphicsPath>합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-401">This method adds the line segment defined by the specified points to the end of this <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span> <span data-ttu-id="aaa4e-402">이전 줄 또는 곡선에 있는 경우는 <xref:System.Drawing.Drawing2D.GraphicsPath>, 경로에 마지막 지점 하 고 첫 번째 새 선 세그먼트에 연결 하는 선 세그먼트 그려집니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-402">If there are previous lines or curves in the <xref:System.Drawing.Drawing2D.GraphicsPath>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aaa4e-403">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-403">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddLines">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="aaa4e-404">연결된 일련의 선 세그먼트를 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />의 끝에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-404">Appends a series of connected line segments to the end of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddLines">
      <MemberSignature Language="C#" Value="public void AddLines (System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLines(valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLines (points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLines(cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddLines : System.Drawing.Point[] -&gt; unit" Usage="graphicsPath.AddLines points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="aaa4e-405">추가할 선 세그먼트를 정의하는 지점을 나타내는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-405">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the line segments to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-406">연결된 일련의 선 세그먼트를 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />의 끝에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-406">Appends a series of connected line segments to the end of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaa4e-407">이전 줄 또는 그림에는 곡선 없으면 줄 줄의 시작 지점 이전 세그먼트의 끝점에 연결할 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-407">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment the starting point of the line.</span></span> <span data-ttu-id="aaa4e-408">`points` 매개 변수는 끝점의 배열을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-408">The `points` parameter specifies an array of endpoints.</span></span> <span data-ttu-id="aaa4e-409">처음 두 첫 번째 줄을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-409">The first two specify the first line.</span></span> <span data-ttu-id="aaa4e-410">각 추가 지점은 이전 줄의 끝점이 인 선 세그먼트의 끝점을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-410">Each additional point specifies the endpoint of a line segment whose starting point is the endpoint of the previous line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aaa4e-411">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-411">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="aaa4e-412">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-412">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="aaa4e-413">삼각형을 설명 하는 4 개 요소의 배열을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-413">Creates an array of four points that describe a triangle.</span></span>  
  
-   <span data-ttu-id="aaa4e-414">경로 만들고 줄의 배열을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-414">Creates a path and adds the array of lines.</span></span>  
  
-   <span data-ttu-id="aaa4e-415">화면에 경로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-415">Draws the path to screen.</span></span>  
  
 <span data-ttu-id="aaa4e-416">첫 번째 지점 이후의 각 줄에서는 이전 지점 시작 지점 및 새 지점으로 끝점으로 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-416">Notice that each line after the first point uses the previous point as the starting point and the new point as the endpoint.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#8)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#8)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLines">
      <MemberSignature Language="C#" Value="public void AddLines (System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLines(valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLines (points As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLines(cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddLines : System.Drawing.PointF[] -&gt; unit" Usage="graphicsPath.AddLines points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="aaa4e-417">추가할 선 세그먼트를 정의하는 지점을 나타내는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-417">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the line segments to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-418">연결된 일련의 선 세그먼트를 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />의 끝에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-418">Appends a series of connected line segments to the end of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaa4e-419">이전 줄 또는 그림에는 곡선 없으면 줄 줄의 시작 지점 이전 세그먼트의 끝점에 연결할 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-419">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment the starting point of the line.</span></span> <span data-ttu-id="aaa4e-420">`points` 매개 변수는 끝점의 배열을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-420">The `points` parameter specifies an array of endpoints.</span></span> <span data-ttu-id="aaa4e-421">처음 두 첫 번째 줄을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-421">The first two specify the first line.</span></span> <span data-ttu-id="aaa4e-422">각 추가 지점은 이전 줄의 끝점이 인 선 세그먼트의 끝점을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-422">Each additional point specifies the endpoint of a line segment whose starting point is the endpoint of the previous line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aaa4e-423">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.AddLines%28System.Drawing.Point%5B%5D%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-423">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddLines%28System.Drawing.Point%5B%5D%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPath">
      <MemberSignature Language="C#" Value="public void AddPath (System.Drawing.Drawing2D.GraphicsPath addingPath, bool connect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPath(class System.Drawing.Drawing2D.GraphicsPath addingPath, bool connect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPath (addingPath As GraphicsPath, connect As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPath(System::Drawing::Drawing2D::GraphicsPath ^ addingPath, bool connect);" />
      <MemberSignature Language="F#" Value="member this.AddPath : System.Drawing.Drawing2D.GraphicsPath * bool -&gt; unit" Usage="graphicsPath.AddPath (addingPath, connect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addingPath" Type="System.Drawing.Drawing2D.GraphicsPath" />
        <Parameter Name="connect" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="addingPath">
          <span data-ttu-id="aaa4e-424">추가할 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-424">The <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> to add.</span>
          </span>
        </param>
        <param name="connect">
          <span data-ttu-id="aaa4e-425">추가된 경로에 있는 첫째 그림이 이 경로에 있는 마지막 그림의 일부인지 여부를 지정하는 부울 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-425">A Boolean value that specifies whether the first figure in the added path is part of the last figure in this path.</span>
          </span>
          <span data-ttu-id="aaa4e-426">
            <see langword="true" />로 설정하면 추가된 경로에 있는 첫째 그림이 이 경로에 있는 마지막 그림의 일부가 되고,</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-426">A value of <see langword="true" /> specifies that (if possible) the first figure in the added path is part of the last figure in this path.</span>
          </span>
          <span data-ttu-id="aaa4e-427">
            <see langword="false" />로 설정하면 추가된 경로에 있는 첫째 그림이 이 경로에 있는 마지막 그림과 별개가 됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-427">A value of <see langword="false" /> specifies that the first figure in the added path is separate from the last figure in this path.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-428">지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />를 이 경로에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-428">Appends the specified <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aaa4e-429">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-429">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="aaa4e-430">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-430">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="aaa4e-431">오른쪽 쪽 위쪽 삼각형 오류 코드 및 기타 프로그램 위쪽-삼각형 두 개의 경로 하나를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-431">Creates two paths one a right-side-up triangle and the other an up-side-down triangle.</span></span>  
  
-   <span data-ttu-id="aaa4e-432">첫 번째와 두 번째 경로 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-432">Adds the second path to the first.</span></span>  
  
-   <span data-ttu-id="aaa4e-433">결과 경로 화면을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-433">Draws the resultant path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#9)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#9)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddPie">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="aaa4e-434">이 경로에 부채꼴 모양의 윤곽선을 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-434">Adds the outline of a pie shape to this path.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddPie">
      <MemberSignature Language="C#" Value="public void AddPie (System.Drawing.Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPie(valuetype System.Drawing.Rectangle rect, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Drawing.Rectangle,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPie (rect As Rectangle, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPie(System::Drawing::Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddPie : System.Drawing.Rectangle * single * single -&gt; unit" Usage="graphicsPath.AddPie (rect, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="aaa4e-435">부채꼴이 그려지는 타원을 정의하는 경계 사각형을 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-435">A <see cref="T:System.Drawing.Rectangle" /> that represents the bounding rectangle that defines the ellipse from which the pie is drawn.</span>
          </span>
        </param>
        <param name="startAngle">
          <span data-ttu-id="aaa4e-436">X축에서 시계 방향으로 측정한 부채꼴의 시작 각도입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-436">The starting angle for the pie section, measured in degrees clockwise from the x-axis.</span>
          </span>
        </param>
        <param name="sweepAngle">
          <span data-ttu-id="aaa4e-437">
            <c>startAngle</c>과 부채꼴 끝 사이의 각도이며, <c>startAngle</c>에서 시계 방향으로 측정한 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-437">The angle between <c>startAngle</c> and the end of the pie section, measured in degrees clockwise from <c>startAngle</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-438">이 경로에 부채꼴 모양의 윤곽선을 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-438">Adds the outline of a pie shape to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaa4e-439">원형 도형이 일부 윤곽선의 끝점을 교차 하는 두 개의 방사형 선에 타원의 부분 개요에 의해 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-439">The pie shape is defined by a partial outline of an ellipse and the two radial lines that intersect the endpoints of the partial outline.</span></span> <span data-ttu-id="aaa4e-440">시작 하는 일부 윤곽선 `startAngle` (x 축에서 시계 방향으로 측정)에서 끝나고 `startAngle`  +  `sweepAngle`합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-440">The partial outline begins at `startAngle` (measured clockwise from the x-axis) and ends at `startAngle` + `sweepAngle`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aaa4e-441">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-441">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPie">
      <MemberSignature Language="C#" Value="public void AddPie (int x, int y, int width, int height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPie(int32 x, int32 y, int32 width, int32 height, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPie (x As Integer, y As Integer, width As Integer, height As Integer, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPie(int x, int y, int width, int height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddPie : int * int * int * int * single * single -&gt; unit" Usage="graphicsPath.AddPie (x, y, width, height, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="aaa4e-442">부채꼴이 그려지는 타원을 정의하는 경계 사각형의 왼쪽 위 모퉁이에 대한 X좌표입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-442">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="aaa4e-443">부채꼴이 그려지는 타원을 정의하는 경계 사각형의 왼쪽 위 모퉁이에 대한 Y좌표입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-443">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="aaa4e-444">부채꼴이 그려지는 타원을 정의하는 경계 사각형의 너비입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-444">The width of the bounding rectangle that defines the ellipse from which the pie is drawn.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="aaa4e-445">부채꼴이 그려지는 타원을 정의하는 경계 사각형의 높이입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-445">The height of the bounding rectangle that defines the ellipse from which the pie is drawn.</span>
          </span>
        </param>
        <param name="startAngle">
          <span data-ttu-id="aaa4e-446">X축에서 시계 방향으로 측정한 부채꼴의 시작 각도입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-446">The starting angle for the pie section, measured in degrees clockwise from the x-axis.</span>
          </span>
        </param>
        <param name="sweepAngle">
          <span data-ttu-id="aaa4e-447">
            <c>startAngle</c>과 부채꼴 끝 사이의 각도이며, <c>startAngle</c>에서 시계 방향으로 측정한 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-447">The angle between <c>startAngle</c> and the end of the pie section, measured in degrees clockwise from <c>startAngle</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-448">이 경로에 부채꼴 모양의 윤곽선을 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-448">Adds the outline of a pie shape to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaa4e-449">원형 도형이 일부 윤곽선의 끝점을 교차 하는 두 개의 방사형 선에 타원의 부분 개요에 의해 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-449">The pie shape is defined by a partial outline of an ellipse and the two radial lines that intersect the endpoints of the partial outline.</span></span> <span data-ttu-id="aaa4e-450">시작 하는 일부 윤곽선 `startAngle` (x 축에서 시계 방향으로 측정)에서 끝나고 `startAngle`  +  `sweepAngle`합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-450">The partial outline begins at `startAngle` (measured clockwise from the x-axis) and ends at `startAngle` + `sweepAngle`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aaa4e-451">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-451">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="aaa4e-452">코드 그래픽 경로 만든 다음, 원형 셰이프를 추가 하는 다음 화면으로 경로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-452">The code creates a graphics path, adds the pie shape, and then draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#10)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#10)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPie">
      <MemberSignature Language="C#" Value="public void AddPie (float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPie(float32 x, float32 y, float32 width, float32 height, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPie (x As Single, y As Single, width As Single, height As Single, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPie(float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddPie : single * single * single * single * single * single -&gt; unit" Usage="graphicsPath.AddPie (x, y, width, height, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="aaa4e-453">부채꼴이 그려지는 타원을 정의하는 경계 사각형의 왼쪽 위 모퉁이에 대한 X좌표입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-453">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="aaa4e-454">부채꼴이 그려지는 타원을 정의하는 경계 사각형의 왼쪽 위 모퉁이에 대한 Y좌표입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-454">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="aaa4e-455">부채꼴이 그려지는 타원을 정의하는 경계 사각형의 너비입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-455">The width of the bounding rectangle that defines the ellipse from which the pie is drawn.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="aaa4e-456">부채꼴이 그려지는 타원을 정의하는 경계 사각형의 높이입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-456">The height of the bounding rectangle that defines the ellipse from which the pie is drawn.</span>
          </span>
        </param>
        <param name="startAngle">
          <span data-ttu-id="aaa4e-457">X축에서 시계 방향으로 측정한 부채꼴의 시작 각도입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-457">The starting angle for the pie section, measured in degrees clockwise from the x-axis.</span>
          </span>
        </param>
        <param name="sweepAngle">
          <span data-ttu-id="aaa4e-458">
            <c>startAngle</c>과 부채꼴 끝 사이의 각도이며, <c>startAngle</c>에서 시계 방향으로 측정한 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-458">The angle between <c>startAngle</c> and the end of the pie section, measured in degrees clockwise from <c>startAngle</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-459">이 경로에 부채꼴 모양의 윤곽선을 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-459">Adds the outline of a pie shape to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaa4e-460">원형 도형이 일부 윤곽선의 끝점을 교차 하는 두 개의 방사형 선에 타원의 부분 개요에 의해 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-460">The pie shape is defined by a partial outline of an ellipse and the two radial lines that intersect the endpoints of the partial outline.</span></span> <span data-ttu-id="aaa4e-461">시작 하는 일부 윤곽선 `startAngle` (x 축에서 시계 방향으로 측정)에서 끝나고 `startAngle`  +  `sweepAngle`합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-461">The partial outline begins at `startAngle` (measured clockwise from the x-axis) and ends at `startAngle` + `sweepAngle`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aaa4e-462">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-462">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddPolygon">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="aaa4e-463">이 경로에 다각형을 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-463">Adds a polygon to this path.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddPolygon">
      <MemberSignature Language="C#" Value="public void AddPolygon (System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPolygon(valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPolygon (points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPolygon(cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddPolygon : System.Drawing.Point[] -&gt; unit" Usage="graphicsPath.AddPolygon points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="aaa4e-464">추가할 다각형을 정의하는 <see cref="T:System.Drawing.Point" /> 구조체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-464">An array of <see cref="T:System.Drawing.Point" /> structures that defines the polygon to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-465">이 경로에 다각형을 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-465">Adds a polygon to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaa4e-466">에 있는 요소는 `points` 배열 다각형의 꼭 짓 점을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-466">The points in the `points` array specify the vertices of a polygon.</span></span> <span data-ttu-id="aaa4e-467">배열의 첫 번째 지점 마지막 점과 같아야 없는 경우이 두 지점 다각형을 닫으려면 연결 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-467">If the first point in the array is not the same as the last point, those two points are connected to close the polygon.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aaa4e-468">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-468">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="aaa4e-469">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-469">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="aaa4e-470">다각형을 정의 하는 요소의 배열을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-470">Creates an array of points that defines a polygon.</span></span>  
  
-   <span data-ttu-id="aaa4e-471">경로 만들고 다각형 경로에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-471">Creates a path and adds the polygon to the path.</span></span>  
  
-   <span data-ttu-id="aaa4e-472">화면에 경로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-472">Draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#11](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#11)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#11)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPolygon">
      <MemberSignature Language="C#" Value="public void AddPolygon (System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPolygon(valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPolygon (points As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPolygon(cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddPolygon : System.Drawing.PointF[] -&gt; unit" Usage="graphicsPath.AddPolygon points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="aaa4e-473">추가할 다각형을 정의하는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-473">An array of <see cref="T:System.Drawing.PointF" /> structures that defines the polygon to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-474">이 경로에 다각형을 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-474">Adds a polygon to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaa4e-475">에 있는 요소는 `points` 배열 다각형의 꼭 짓 점을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-475">The points in the `points` array specify the vertices of a polygon.</span></span> <span data-ttu-id="aaa4e-476">배열의 첫 번째 지점 마지막 점과 같아야 없는 경우이 두 지점 다각형을 닫으려면 연결 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-476">If the first point in the array is not the same as the last point, those two points are connected to close the polygon.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aaa4e-477">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.AddPolygon%28System.Drawing.Point%5B%5D%29>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-477">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddPolygon%28System.Drawing.Point%5B%5D%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRectangle">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="aaa4e-478">이 경로에 사각형을 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-478">Adds a rectangle to this path.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRectangle">
      <MemberSignature Language="C#" Value="public void AddRectangle (System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRectangle(valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRectangle (rect As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRectangle(System::Drawing::Rectangle rect);" />
      <MemberSignature Language="F#" Value="member this.AddRectangle : System.Drawing.Rectangle -&gt; unit" Usage="graphicsPath.AddRectangle rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="aaa4e-479">추가할 사각형을 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-479">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangle to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-480">이 경로에 사각형을 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-480">Adds a rectangle to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aaa4e-481">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-481">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="aaa4e-482">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-482">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="aaa4e-483">경로 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-483">Creates a path.</span></span>  
  
-   <span data-ttu-id="aaa4e-484">사각형을 만들어 경로에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-484">Creates a rectangle and adds the rectangle to the path.</span></span>  
  
-   <span data-ttu-id="aaa4e-485">화면에 경로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-485">Draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#12](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#12)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#12)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRectangle">
      <MemberSignature Language="C#" Value="public void AddRectangle (System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRectangle(valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRectangle (rect As RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRectangle(System::Drawing::RectangleF rect);" />
      <MemberSignature Language="F#" Value="member this.AddRectangle : System.Drawing.RectangleF -&gt; unit" Usage="graphicsPath.AddRectangle rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="aaa4e-486">추가할 사각형을 나타내는 <see cref="T:System.Drawing.RectangleF" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-486">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-487">이 경로에 사각형을 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-487">Adds a rectangle to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aaa4e-488">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangle%28System.Drawing.Rectangle%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-488">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangle%28System.Drawing.Rectangle%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRectangles">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="aaa4e-489">이 경로에 일련의 사각형을 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-489">Adds a series of rectangles to this path.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRectangles">
      <MemberSignature Language="C#" Value="public void AddRectangles (System.Drawing.Rectangle[] rects);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRectangles(valuetype System.Drawing.Rectangle[] rects) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.Rectangle[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRectangles (rects As Rectangle())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRectangles(cli::array &lt;System::Drawing::Rectangle&gt; ^ rects);" />
      <MemberSignature Language="F#" Value="member this.AddRectangles : System.Drawing.Rectangle[] -&gt; unit" Usage="graphicsPath.AddRectangles rects" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rects" Type="System.Drawing.Rectangle[]" />
      </Parameters>
      <Docs>
        <param name="rects">
          <span data-ttu-id="aaa4e-490">추가할 사각형을 나타내는 <see cref="T:System.Drawing.Rectangle" /> 구조체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-490">An array of <see cref="T:System.Drawing.Rectangle" /> structures that represents the rectangles to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-491">이 경로에 일련의 사각형을 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-491">Adds a series of rectangles to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aaa4e-492">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-492">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="aaa4e-493">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-493">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="aaa4e-494">경로 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-494">Creates a path.</span></span>  
  
-   <span data-ttu-id="aaa4e-495">사각형의 배열을 만들고 경로에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-495">Creates an array of rectangles and adds the rectangles to the path.</span></span>  
  
-   <span data-ttu-id="aaa4e-496">화면에 경로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-496">Draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#13](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#13)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#13](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#13)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#13](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRectangles">
      <MemberSignature Language="C#" Value="public void AddRectangles (System.Drawing.RectangleF[] rects);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRectangles(valuetype System.Drawing.RectangleF[] rects) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.RectangleF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRectangles (rects As RectangleF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRectangles(cli::array &lt;System::Drawing::RectangleF&gt; ^ rects);" />
      <MemberSignature Language="F#" Value="member this.AddRectangles : System.Drawing.RectangleF[] -&gt; unit" Usage="graphicsPath.AddRectangles rects" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rects" Type="System.Drawing.RectangleF[]" />
      </Parameters>
      <Docs>
        <param name="rects">
          <span data-ttu-id="aaa4e-497">추가할 사각형을 나타내는 <see cref="T:System.Drawing.RectangleF" /> 구조체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-497">An array of <see cref="T:System.Drawing.RectangleF" /> structures that represents the rectangles to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-498">이 경로에 일련의 사각형을 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-498">Adds a series of rectangles to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aaa4e-499">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangles%28System.Drawing.Rectangle%5B%5D%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-499">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangles%28System.Drawing.Rectangle%5B%5D%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddString">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="aaa4e-500">이 경로에 텍스트 문자열을 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-500">Adds a text string to this path.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddString">
      <MemberSignature Language="C#" Value="public void AddString (string s, System.Drawing.FontFamily family, int style, float emSize, System.Drawing.Point origin, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddString(string s, class System.Drawing.FontFamily family, int32 style, float32 emSize, valuetype System.Drawing.Point origin, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddString (s As String, family As FontFamily, style As Integer, emSize As Single, origin As Point, format As StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddString(System::String ^ s, System::Drawing::FontFamily ^ family, int style, float emSize, System::Drawing::Point origin, System::Drawing::StringFormat ^ format);" />
      <MemberSignature Language="F#" Value="member this.AddString : string * System.Drawing.FontFamily * int * single * System.Drawing.Point * System.Drawing.StringFormat -&gt; unit" Usage="graphicsPath.AddString (s, family, style, emSize, origin, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="family" Type="System.Drawing.FontFamily" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="origin" Type="System.Drawing.Point" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="aaa4e-501">추가할 <see cref="T:System.String" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-501">The <see cref="T:System.String" /> to add.</span>
          </span>
        </param>
        <param name="family">
          <span data-ttu-id="aaa4e-502">텍스트를 그릴 때 사용하는 글꼴의 이름을 나타내는 <see cref="T:System.Drawing.FontFamily" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-502">A <see cref="T:System.Drawing.FontFamily" /> that represents the name of the font with which the test is drawn.</span>
          </span>
        </param>
        <param name="style">
          <span data-ttu-id="aaa4e-503">텍스트에 대한 스타일 정보(굵게, 기울임꼴 등)를 나타내는 <see cref="T:System.Drawing.FontStyle" /> 열거형입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-503">A <see cref="T:System.Drawing.FontStyle" /> enumeration that represents style information about the text (bold, italic, and so on).</span>
          </span>
          <span data-ttu-id="aaa4e-504">이 열거형은 정수로 캐스팅되어야 합니다. 자세한 내용은 이 단원의 후반부에 있는 예제 코드를 참조하십시오.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-504">This must be cast as an integer (see the example code later in this section).</span>
          </span>
        </param>
        <param name="emSize">
          <span data-ttu-id="aaa4e-505">문자를 제한하는 em 정사각형 상자의 높이입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-505">The height of the em square box that bounds the character.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="aaa4e-506">텍스트가 시작되는 지점을 나타내는 <see cref="T:System.Drawing.Point" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-506">A <see cref="T:System.Drawing.Point" /> that represents the point where the text starts.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="aaa4e-507">줄 간격, 맞춤 등의 텍스트 서식 정보를 지정하는 <see cref="T:System.Drawing.StringFormat" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-507">A <see cref="T:System.Drawing.StringFormat" /> that specifies text formatting information, such as line spacing and alignment.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-508">이 경로에 텍스트 문자열을 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-508">Adds a text string to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aaa4e-509">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-509">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="aaa4e-510">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-510">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="aaa4e-511">경로 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-511">Creates a path.</span></span>  
  
-   <span data-ttu-id="aaa4e-512">글꼴 및 문자열 인수를 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-512">Sets up string and font arguments.</span></span>  
  
-   <span data-ttu-id="aaa4e-513">경로에 문자열을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-513">Adds the string to the path.</span></span>  
  
-   <span data-ttu-id="aaa4e-514">화면에 문자열을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-514">Draws the string to the screen.</span></span>  
  
 <span data-ttu-id="aaa4e-515">두 가지 중요 한 지적 있습니다. 먼저, 다음에 유의 `fontStyle` 인수는 정수로 캐스팅 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-515">There are two important things to be pointed out. First, notice that the `fontStyle` argument is cast as an integer.</span></span> <span data-ttu-id="aaa4e-516"><xref:System.Drawing.Drawing2D.GraphicsPath.AddString%2A> 메서드가 구성이 필요 하므로 둘 이상의 <xref:System.Drawing.FontStyle> 멤버를 조합 하 여 원하는 글꼴 스타일을 만들 수 있습니다 (이 경우 <xref:System.Drawing.FontStyle.Italic> 및 <xref:System.Drawing.FontStyle.Underline>).</span><span class="sxs-lookup"><span data-stu-id="aaa4e-516">The <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%2A> method requires this so that two or more <xref:System.Drawing.FontStyle> members can be combined to create the desired font style (in this case, <xref:System.Drawing.FontStyle.Italic> and <xref:System.Drawing.FontStyle.Underline>).</span></span> <span data-ttu-id="aaa4e-517">둘째는 <xref:System.Drawing.Graphics.FillPath%2A> 메서드를 사용 하지 않고 <xref:System.Drawing.Graphics.DrawPath%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-517">Secondly, notice that the <xref:System.Drawing.Graphics.FillPath%2A> method is used rather than the <xref:System.Drawing.Graphics.DrawPath%2A> method.</span></span> <span data-ttu-id="aaa4e-518">경우 <xref:System.Drawing.Graphics.FillPath%2A> 을 사용 하는 반면 고정 텍스트를 렌더링 하는 경우 <xref:System.Drawing.Graphics.DrawPath%2A> 는 사용 하는 텍스트 됩니다 윤곽선 스타일입니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-518">If <xref:System.Drawing.Graphics.FillPath%2A> is used, solid text is rendered, whereas if <xref:System.Drawing.Graphics.DrawPath%2A> is used, the text will be an outline style.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#14](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#14)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#14](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#14)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#14](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddString">
      <MemberSignature Language="C#" Value="public void AddString (string s, System.Drawing.FontFamily family, int style, float emSize, System.Drawing.PointF origin, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddString(string s, class System.Drawing.FontFamily family, int32 style, float32 emSize, valuetype System.Drawing.PointF origin, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddString (s As String, family As FontFamily, style As Integer, emSize As Single, origin As PointF, format As StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddString(System::String ^ s, System::Drawing::FontFamily ^ family, int style, float emSize, System::Drawing::PointF origin, System::Drawing::StringFormat ^ format);" />
      <MemberSignature Language="F#" Value="member this.AddString : string * System.Drawing.FontFamily * int * single * System.Drawing.PointF * System.Drawing.StringFormat -&gt; unit" Usage="graphicsPath.AddString (s, family, style, emSize, origin, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="family" Type="System.Drawing.FontFamily" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="origin" Type="System.Drawing.PointF" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="aaa4e-519">추가할 <see cref="T:System.String" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-519">The <see cref="T:System.String" /> to add.</span>
          </span>
        </param>
        <param name="family">
          <span data-ttu-id="aaa4e-520">텍스트를 그릴 때 사용하는 글꼴의 이름을 나타내는 <see cref="T:System.Drawing.FontFamily" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-520">A <see cref="T:System.Drawing.FontFamily" /> that represents the name of the font with which the test is drawn.</span>
          </span>
        </param>
        <param name="style">
          <span data-ttu-id="aaa4e-521">텍스트에 대한 스타일 정보(굵게, 기울임꼴 등)를 나타내는 <see cref="T:System.Drawing.FontStyle" /> 열거형입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-521">A <see cref="T:System.Drawing.FontStyle" /> enumeration that represents style information about the text (bold, italic, and so on).</span>
          </span>
          <span data-ttu-id="aaa4e-522">이 열거형은 정수로 캐스팅되어야 합니다. 자세한 내용은 이 단원의 후반부에 있는 예제 코드를 참조하십시오.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-522">This must be cast as an integer (see the example code later in this section).</span>
          </span>
        </param>
        <param name="emSize">
          <span data-ttu-id="aaa4e-523">문자를 제한하는 em 정사각형 상자의 높이입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-523">The height of the em square box that bounds the character.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="aaa4e-524">텍스트가 시작되는 지점을 나타내는 <see cref="T:System.Drawing.PointF" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-524">A <see cref="T:System.Drawing.PointF" /> that represents the point where the text starts.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="aaa4e-525">줄 간격, 맞춤 등의 텍스트 서식 정보를 지정하는 <see cref="T:System.Drawing.StringFormat" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-525">A <see cref="T:System.Drawing.StringFormat" /> that specifies text formatting information, such as line spacing and alignment.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-526">이 경로에 텍스트 문자열을 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-526">Adds a text string to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aaa4e-527">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-527">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddString">
      <MemberSignature Language="C#" Value="public void AddString (string s, System.Drawing.FontFamily family, int style, float emSize, System.Drawing.Rectangle layoutRect, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddString(string s, class System.Drawing.FontFamily family, int32 style, float32 emSize, valuetype System.Drawing.Rectangle layoutRect, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddString (s As String, family As FontFamily, style As Integer, emSize As Single, layoutRect As Rectangle, format As StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddString(System::String ^ s, System::Drawing::FontFamily ^ family, int style, float emSize, System::Drawing::Rectangle layoutRect, System::Drawing::StringFormat ^ format);" />
      <MemberSignature Language="F#" Value="member this.AddString : string * System.Drawing.FontFamily * int * single * System.Drawing.Rectangle * System.Drawing.StringFormat -&gt; unit" Usage="graphicsPath.AddString (s, family, style, emSize, layoutRect, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="family" Type="System.Drawing.FontFamily" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="layoutRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="aaa4e-528">추가할 <see cref="T:System.String" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-528">The <see cref="T:System.String" /> to add.</span>
          </span>
        </param>
        <param name="family">
          <span data-ttu-id="aaa4e-529">텍스트를 그릴 때 사용하는 글꼴의 이름을 나타내는 <see cref="T:System.Drawing.FontFamily" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-529">A <see cref="T:System.Drawing.FontFamily" /> that represents the name of the font with which the test is drawn.</span>
          </span>
        </param>
        <param name="style">
          <span data-ttu-id="aaa4e-530">텍스트에 대한 스타일 정보(굵게, 기울임꼴 등)를 나타내는 <see cref="T:System.Drawing.FontStyle" /> 열거형입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-530">A <see cref="T:System.Drawing.FontStyle" /> enumeration that represents style information about the text (bold, italic, and so on).</span>
          </span>
          <span data-ttu-id="aaa4e-531">이 열거형은 정수로 캐스팅되어야 합니다. 자세한 내용은 이 단원의 후반부에 있는 예제 코드를 참조하십시오.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-531">This must be cast as an integer (see the example code later in this section).</span>
          </span>
        </param>
        <param name="emSize">
          <span data-ttu-id="aaa4e-532">문자를 제한하는 em 정사각형 상자의 높이입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-532">The height of the em square box that bounds the character.</span>
          </span>
        </param>
        <param name="layoutRect">
          <span data-ttu-id="aaa4e-533">텍스트를 제한하는 사각형을 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-533">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangle that bounds the text.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="aaa4e-534">줄 간격, 맞춤 등의 텍스트 서식 정보를 지정하는 <see cref="T:System.Drawing.StringFormat" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-534">A <see cref="T:System.Drawing.StringFormat" /> that specifies text formatting information, such as line spacing and alignment.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-535">이 경로에 텍스트 문자열을 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-535">Adds a text string to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aaa4e-536">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-536">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddString">
      <MemberSignature Language="C#" Value="public void AddString (string s, System.Drawing.FontFamily family, int style, float emSize, System.Drawing.RectangleF layoutRect, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddString(string s, class System.Drawing.FontFamily family, int32 style, float32 emSize, valuetype System.Drawing.RectangleF layoutRect, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddString (s As String, family As FontFamily, style As Integer, emSize As Single, layoutRect As RectangleF, format As StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddString(System::String ^ s, System::Drawing::FontFamily ^ family, int style, float emSize, System::Drawing::RectangleF layoutRect, System::Drawing::StringFormat ^ format);" />
      <MemberSignature Language="F#" Value="member this.AddString : string * System.Drawing.FontFamily * int * single * System.Drawing.RectangleF * System.Drawing.StringFormat -&gt; unit" Usage="graphicsPath.AddString (s, family, style, emSize, layoutRect, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="family" Type="System.Drawing.FontFamily" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="layoutRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="aaa4e-537">추가할 <see cref="T:System.String" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-537">The <see cref="T:System.String" /> to add.</span>
          </span>
        </param>
        <param name="family">
          <span data-ttu-id="aaa4e-538">텍스트를 그릴 때 사용하는 글꼴의 이름을 나타내는 <see cref="T:System.Drawing.FontFamily" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-538">A <see cref="T:System.Drawing.FontFamily" /> that represents the name of the font with which the test is drawn.</span>
          </span>
        </param>
        <param name="style">
          <span data-ttu-id="aaa4e-539">텍스트에 대한 스타일 정보(굵게, 기울임꼴 등)를 나타내는 <see cref="T:System.Drawing.FontStyle" /> 열거형입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-539">A <see cref="T:System.Drawing.FontStyle" /> enumeration that represents style information about the text (bold, italic, and so on).</span>
          </span>
          <span data-ttu-id="aaa4e-540">이 열거형은 정수로 캐스팅되어야 합니다. 자세한 내용은 이 단원의 후반부에 있는 예제 코드를 참조하십시오.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-540">This must be cast as an integer (see the example code later in this section).</span>
          </span>
        </param>
        <param name="emSize">
          <span data-ttu-id="aaa4e-541">문자를 제한하는 em 정사각형 상자의 높이입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-541">The height of the em square box that bounds the character.</span>
          </span>
        </param>
        <param name="layoutRect">
          <span data-ttu-id="aaa4e-542">텍스트를 제한하는 사각형을 나타내는 <see cref="T:System.Drawing.RectangleF" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-542">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that bounds the text.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="aaa4e-543">줄 간격, 맞춤 등의 텍스트 서식 정보를 지정하는 <see cref="T:System.Drawing.StringFormat" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-543">A <see cref="T:System.Drawing.StringFormat" /> that specifies text formatting information, such as line spacing and alignment.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-544">이 경로에 텍스트 문자열을 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-544">Adds a text string to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aaa4e-545">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-545">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearMarkers">
      <MemberSignature Language="C#" Value="public void ClearMarkers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearMarkers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearMarkers ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearMarkers();" />
      <MemberSignature Language="F#" Value="member this.ClearMarkers : unit -&gt; unit" Usage="graphicsPath.ClearMarkers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="aaa4e-546">이 경로에서 모든 마커를 지웁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-546">Clears all markers from this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaa4e-547">사용 하 여는 <xref:System.Drawing.Drawing2D.GraphicsPath.SetMarkers%2A> 의 현재 위치에 표식을 만드는 메서드를 한 <xref:System.Drawing.Drawing2D.GraphicsPath>합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-547">Use the <xref:System.Drawing.Drawing2D.GraphicsPath.SetMarkers%2A> method to create a marker at the current location in a <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span> <span data-ttu-id="aaa4e-548">사용 하 여는 <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> 경로에 있는 기존 마커를 반복 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-548">Use the <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> method to iterate through the existing markers in a path.</span></span>  
  
 <span data-ttu-id="aaa4e-549">마커가 별도 하위 경로 그룹에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-549">Markers are used to separate groups of subpaths.</span></span> <span data-ttu-id="aaa4e-550">두 개의 마커 간에 하나 이상의 하위 경로 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-550">One or more subpaths can be contained between two markers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aaa4e-551">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-551">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="aaa4e-552">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-552">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="aaa4e-553">경로 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-553">Creates a path.</span></span>  
  
-   <span data-ttu-id="aaa4e-554">경로에 여러 개체를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-554">Adds several objects to the path.</span></span>  
  
-   <span data-ttu-id="aaa4e-555">표식 경로에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-555">Adds markers to the path.</span></span>  
  
-   <span data-ttu-id="aaa4e-556">경로에서 모든 마커를 지웁니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-556">Clears all markers from the path.</span></span>  
  
-   <span data-ttu-id="aaa4e-557">화면에 경로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-557">Draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#15](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#15)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#15](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#15)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#15](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="graphicsPath.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="aaa4e-558">이 경로와 정확하게 일치하는 복사본을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-558">Creates an exact copy of this path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aaa4e-559">이 메서드가 개체로 만들어 캐스팅하는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-559">The <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> this method creates, cast as an object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aaa4e-560">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-560">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="aaa4e-561">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-561">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="aaa4e-562">경로 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-562">Creates a path.</span></span>  
  
-   <span data-ttu-id="aaa4e-563">경로에 여러 그림을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-563">Adds several figures to the path.</span></span>  
  
-   <span data-ttu-id="aaa4e-564">화면에 경로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-564">Draws the path to the screen.</span></span>  
  
-   <span data-ttu-id="aaa4e-565">해당 경로의 복사본을 복제 합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-565">Clones a copy of that path.</span></span>  
  
-   <span data-ttu-id="aaa4e-566">화면에 새 경로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-566">Draws the new path to the screen.</span></span>  
  
 <span data-ttu-id="aaa4e-567">호출 된 <xref:System.Drawing.Drawing2D.GraphicsPath.Clone%2A> 메서드도 캐스팅 되어야 합니다는 <xref:System.Drawing.Drawing2D.GraphicsPath>합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-567">Notice that the call the <xref:System.Drawing.Drawing2D.GraphicsPath.Clone%2A> method must be cast as a <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#16](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#16)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#16](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#16)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#16](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseAllFigures">
      <MemberSignature Language="C#" Value="public void CloseAllFigures ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CloseAllFigures() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures" />
      <MemberSignature Language="VB.NET" Value="Public Sub CloseAllFigures ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CloseAllFigures();" />
      <MemberSignature Language="F#" Value="member this.CloseAllFigures : unit -&gt; unit" Usage="graphicsPath.CloseAllFigures " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="aaa4e-568">이 경로에 있는 열린 그림을 모두 닫고 새 그림을 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-568">Closes all open figures in this path and starts a new figure.</span>
          </span>
          <span data-ttu-id="aaa4e-569">열린 각 그림의 끝점에서 시작점으로 선을 연결하면 해당 그림이 닫힙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-569">It closes each open figure by connecting a line from its endpoint to its starting point.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aaa4e-570">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-570">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="aaa4e-571">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-571">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="aaa4e-572">경로 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-572">Creates a path.</span></span>  
  
-   <span data-ttu-id="aaa4e-573">경로에 여러 개의 열린 그림을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-573">Adds several open figures to the path.</span></span>  
  
-   <span data-ttu-id="aaa4e-574">경로에 모든 그림을 닫습니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-574">Closes all figures in the path.</span></span>  
  
-   <span data-ttu-id="aaa4e-575">화면에 경로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-575">Draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#17](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#17)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#17](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#17)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#17](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseFigure">
      <MemberSignature Language="C#" Value="public void CloseFigure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CloseFigure() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.CloseFigure" />
      <MemberSignature Language="VB.NET" Value="Public Sub CloseFigure ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CloseFigure();" />
      <MemberSignature Language="F#" Value="member this.CloseFigure : unit -&gt; unit" Usage="graphicsPath.CloseFigure " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="aaa4e-576">현재 그림을 닫고 새 그림을 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-576">Closes the current figure and starts a new figure.</span>
          </span>
          <span data-ttu-id="aaa4e-577">연결된 일련의 선과 곡선이 현재 그림에 있으면 메서드가 끝점에서 시작점으로 선을 연결하여 루프를 닫습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-577">If the current figure contains a sequence of connected lines and curves, the method closes the loop by connecting a line from the endpoint to the starting point.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aaa4e-578">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-578">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="aaa4e-579">코드는 새 경로 만들어, 그림을 시작 하 고, 그림에서는 두 개의 교차 줄을 추가 하 고 다음 그림을를 닫아 삼각형을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-579">The code creates a triangle by creating a new path, starting a figure, adding two intersecting lines to the figure, and then closing the figure to form a triangle.</span></span> <span data-ttu-id="aaa4e-580">다음 경로 화면에 그려집니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-580">The path is then drawn to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#18](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#18)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#18](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#18)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#18](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="graphicsPath.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="aaa4e-581">이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />에서 사용하는 리소스를 모두 해제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-581">Releases all resources used by this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaa4e-582">호출 <xref:System.Drawing.Drawing2D.GraphicsPath.Dispose%2A> 이 사용 하는 리소스 <xref:System.Drawing.Drawing2D.GraphicsPath> 다른 용도에 다시 할당 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-582">Calling <xref:System.Drawing.Drawing2D.GraphicsPath.Dispose%2A> allows the resources used by this <xref:System.Drawing.Drawing2D.GraphicsPath> to be reallocated for other purposes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillMode">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.FillMode FillMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.FillMode FillMode" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPath.FillMode" />
      <MemberSignature Language="VB.NET" Value="Public Property FillMode As FillMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::FillMode FillMode { System::Drawing::Drawing2D::FillMode get(); void set(System::Drawing::Drawing2D::FillMode value); };" />
      <MemberSignature Language="F#" Value="member this.FillMode : System.Drawing.Drawing2D.FillMode with get, set" Usage="System.Drawing.Drawing2D.GraphicsPath.FillMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.FillMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aaa4e-583">이 <see cref="T:System.Drawing.Drawing2D.FillMode" />에 있는 모양의 내부를 채우는 방법을 결정하는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 열거형을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-583">Gets or sets a <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the interiors of shapes in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> are filled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aaa4e-584">이 <see cref="T:System.Drawing.Drawing2D.FillMode" />에 있는 모양의 내부를 채우는 방법을 지정하는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 열거형입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-584">A <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that specifies how the interiors of shapes in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> are filled.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~GraphicsPath ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!GraphicsPath ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="graphicsPath.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="aaa4e-585">가비지 컬렉션이 회수하기 전에 개체가 리소스를 해제하고 다른 정리 작업을 수행할 수 있게 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-585">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Flatten">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="aaa4e-586">이 경로에 있는 각 곡선을 연결된 일련의 선 세그먼트로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-586">Converts each curve in this path into a sequence of connected line segments.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Flatten">
      <MemberSignature Language="C#" Value="public void Flatten ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flatten() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Flatten" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flatten ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flatten();" />
      <MemberSignature Language="F#" Value="member this.Flatten : unit -&gt; unit" Usage="graphicsPath.Flatten " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="aaa4e-587">이 경로에 있는 각 곡선을 연결된 일련의 선 세그먼트로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-587">Converts each curve in this path into a sequence of connected line segments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aaa4e-588">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-588">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flatten">
      <MemberSignature Language="C#" Value="public void Flatten (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flatten(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flatten(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.Flatten : System.Drawing.Drawing2D.Matrix -&gt; unit" Usage="graphicsPath.Flatten matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix">
          <span data-ttu-id="aaa4e-589">직선으로 만들기 전에 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />를 변환할 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-589">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which to transform this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> before flattening.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-590">지정된 변환을 적용한 다음 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />에 있는 각 곡선을 연결된 일련의 선 세그먼트로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-590">Applies the specified transform and then converts each curve in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> into a sequence of connected line segments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aaa4e-591">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-591">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flatten">
      <MemberSignature Language="C#" Value="public void Flatten (System.Drawing.Drawing2D.Matrix matrix, float flatness);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flatten(class System.Drawing.Drawing2D.Matrix matrix, float32 flatness) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flatten(System::Drawing::Drawing2D::Matrix ^ matrix, float flatness);" />
      <MemberSignature Language="F#" Value="member this.Flatten : System.Drawing.Drawing2D.Matrix * single -&gt; unit" Usage="graphicsPath.Flatten (matrix, flatness)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="flatness" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="matrix">
          <span data-ttu-id="aaa4e-592">직선으로 만들기 전에 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />를 변환할 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-592">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which to transform this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> before flattening.</span>
          </span>
        </param>
        <param name="flatness">
          <span data-ttu-id="aaa4e-593">곡선과 해당 곡선의 직선화 근사값 사이의 최대 허용 오류를 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-593">Specifies the maximum permitted error between the curve and its flattened approximation.</span>
          </span>
          <span data-ttu-id="aaa4e-594">기본값은 0.25입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-594">A value of 0.25 is the default.</span>
          </span>
          <span data-ttu-id="aaa4e-595">이 값을 낮추면 근사값에서 선 세그먼트의 수가 증가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-595">Reducing the flatness value will increase the number of line segments in the approximation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-596">이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />에 있는 각 곡선을 연결된 일련의 선 세그먼트로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-596">Converts each curve in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> into a sequence of connected line segments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aaa4e-597">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-597">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="aaa4e-598">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-598">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="aaa4e-599">그래픽 경로 변환 행렬을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-599">Creates a graphics path and a translation matrix.</span></span>  
  
-   <span data-ttu-id="aaa4e-600">점이 4 개를 사용 하 여 경로에 곡선을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-600">Adds a curve to the path using four points.</span></span>  
  
-   <span data-ttu-id="aaa4e-601">경로 (곡선) 검정 펜을 사용 하 여 화면을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-601">Draws the path (curve) to the screen, using a black pen.</span></span>  
  
-   <span data-ttu-id="aaa4e-602">곡선을 10 픽셀 아래로 이동 하 고 직선으로 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-602">Shifts the curve down 10 pixels and flattens it.</span></span>  
  
-   <span data-ttu-id="aaa4e-603">빨간색 펜을 사용 하는 화면에 곡선을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-603">Draws the curve to the screen using, a red pen.</span></span>  
  
 <span data-ttu-id="aaa4e-604">빨간색 곡선 점을 연결 하는 선을 직선 있는지를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-604">Notice that the red curve has flattened lines connecting the points.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#19](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#19)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#19](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#19)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#19](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBounds">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="aaa4e-605">이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />를 제한하는 사각형을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-605">Returns a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF GetBounds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.RectangleF GetBounds() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBounds () As RectangleF" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::RectangleF GetBounds();" />
      <MemberSignature Language="F#" Value="member this.GetBounds : unit -&gt; System.Drawing.RectangleF" Usage="graphicsPath.GetBounds " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="aaa4e-606">이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />를 제한하는 사각형을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-606">Returns a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aaa4e-607">이 <see cref="T:System.Drawing.RectangleF" />를 제한하는 사각형을 나타내는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-607">A <see cref="T:System.Drawing.RectangleF" /> that represents a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaa4e-608">반환된 된 경계 사각형의 크기는 끝 표식을, 펜 굵기 및 펜 미터 한계 유형의 영향을 받습니다 하 고 따라서 bounded 경로에 "느슨한 맞춤"를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-608">The size of the returned bounding rectangle is influenced by the type of end caps, pen width, and pen miter limit, and therefore produces a "loose fit" to the bounded path.</span></span> <span data-ttu-id="aaa4e-609">대략적인 공식은: 펜 너비 초기 경계 사각형을 확장 하 고이 결과 미터 한계를 더한 끝 모양에 허용 하는 추가 여백을 곱합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-609">The approximate formula is: the initial bounding rectangle is inflated by pen width, and this result is multiplied by the miter limit, plus some additional margin to allow for end caps.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aaa4e-610">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-610">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="aaa4e-611">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-611">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="aaa4e-612">그래픽 경로를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-612">Creates a graphics path.</span></span>  
  
-   <span data-ttu-id="aaa4e-613">타원 (원)를 추가 하 고 화면에 그립니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-613">Adds an ellipse (circle) to it and draws it to the screen.</span></span>  
  
-   <span data-ttu-id="aaa4e-614">호출 하 여 원에 대 한 경계 사각형을 검색 <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds%2A> 를 화면에 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-614">Retrieves the bounding rectangle for the circle with a call to <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds%2A> and draws the rectangle to the screen.</span></span>  
  
-   <span data-ttu-id="aaa4e-615">두 번째 그래픽 경로를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-615">Creates a second graphics path.</span></span>  
  
-   <span data-ttu-id="aaa4e-616">원을 추가 하 고 10의 너비에 대 한 경로 넓힙니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-616">Adds a circle and widens the path to a width of 10.</span></span>  
  
-   <span data-ttu-id="aaa4e-617">화면에 경로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-617">Draws the path to the screen.</span></span>  
  
-   <span data-ttu-id="aaa4e-618">두 번째 원에 대 한 경계 사각형을 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-618">Retrieves the bounding rectangle for the second circle.</span></span>  
  
-   <span data-ttu-id="aaa4e-619">화면에는 경계 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-619">Draws the bounding rectangle to the screen.</span></span>  
  
-   <span data-ttu-id="aaa4e-620">대화 상자에서 사각형 크기를 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-620">Displays the rectangle size in a dialog box.</span></span>  
  
 <span data-ttu-id="aaa4e-621">오른쪽 경계 사각형 (해당 줄의 추가 너비에 대 한 계정)를 더 크게 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-621">Notice that the bounding rectangle on the right is larger (to account for the extra width of the line).</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#20](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#20)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#20)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF GetBounds (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.RectangleF GetBounds(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::RectangleF GetBounds(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.GetBounds : System.Drawing.Drawing2D.Matrix -&gt; System.Drawing.RectangleF" Usage="graphicsPath.GetBounds matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix">
          <span data-ttu-id="aaa4e-622">경계 사각형을 계산하기 전에 이 경로에 적용될 변환을 지정하는 <see cref="T:System.Drawing.Drawing2D.Matrix" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-622">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a transformation to be applied to this path before the bounding rectangle is calculated.</span>
          </span>
          <span data-ttu-id="aaa4e-623">이 경로는 영구적으로 변환되는 것이 아니며, 경계 사각형을 계산하는 동안에만 이 경로에 변환이 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-623">This path is not permanently transformed; the transformation is used only during the process of calculating the bounding rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-624">지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />에 의해 이 경로가 변환되면 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />를 제한하는 사각형을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-624">Returns a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when this path is transformed by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aaa4e-625">이 <see cref="T:System.Drawing.RectangleF" />를 제한하는 사각형을 나타내는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-625">A <see cref="T:System.Drawing.RectangleF" /> that represents a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaa4e-626">반환된 된 경계 사각형의 크기는 끝 표식을, 펜 굵기 및 펜 미터 한계 유형의 영향을 받습니다 하 고 따라서 bounded 경로에 "느슨한 맞춤"를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-626">The size of the returned bounding rectangle is influenced by the type of end caps, pen width, and pen miter limit, and therefore produces a "loose fit" to the bounded path.</span></span> <span data-ttu-id="aaa4e-627">대략적인 공식은: 펜 너비 초기 경계 사각형을 확장 하 고이 결과 미터 한계를 더한 끝 모양에 허용 하는 추가 여백을 곱합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-627">The approximate formula is: the initial bounding rectangle is inflated by pen width, and this result is multiplied by the miter limit, plus some additional margin to allow for end caps.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aaa4e-628">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-628">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF GetBounds (System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.RectangleF GetBounds(class System.Drawing.Drawing2D.Matrix matrix, class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix,System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::RectangleF GetBounds(System::Drawing::Drawing2D::Matrix ^ matrix, System::Drawing::Pen ^ pen);" />
      <MemberSignature Language="F#" Value="member this.GetBounds : System.Drawing.Drawing2D.Matrix * System.Drawing.Pen -&gt; System.Drawing.RectangleF" Usage="graphicsPath.GetBounds (matrix, pen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="matrix">
          <span data-ttu-id="aaa4e-629">경계 사각형을 계산하기 전에 이 경로에 적용될 변환을 지정하는 <see cref="T:System.Drawing.Drawing2D.Matrix" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-629">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a transformation to be applied to this path before the bounding rectangle is calculated.</span>
          </span>
          <span data-ttu-id="aaa4e-630">이 경로는 영구적으로 변환되는 것이 아니며, 경계 사각형을 계산하는 동안에만 이 경로에 변환이 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-630">This path is not permanently transformed; the transformation is used only during the process of calculating the bounding rectangle.</span>
          </span>
        </param>
        <param name="pen">
          <span data-ttu-id="aaa4e-631">
            <see cref="T:System.Drawing.Pen" />를 그릴 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-631">The <see cref="T:System.Drawing.Pen" /> with which to draw the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-632">현재 경로가 지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />에 의해 변환되고 지정된 <see cref="T:System.Drawing.Drawing2D.Matrix" />를 사용하여 그려지는 경우 이 <see cref="T:System.Drawing.Pen" />를 제한하는 사각형을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-632">Returns a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when the current path is transformed by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> and drawn with the specified <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aaa4e-633">이 <see cref="T:System.Drawing.RectangleF" />를 제한하는 사각형을 나타내는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-633">A <see cref="T:System.Drawing.RectangleF" /> that represents a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaa4e-634">반환된 된 경계 사각형의 크기는 끝 표식을, 펜 굵기 및 펜 미터 한계 유형의 영향을 받습니다 하 고 따라서 bounded 경로에 "느슨한 맞춤"를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-634">The size of the returned bounding rectangle is influenced by the type of end caps, pen width, and pen miter limit, and therefore produces a "loose fit" to the bounded path.</span></span> <span data-ttu-id="aaa4e-635">대략적인 공식은: 펜 너비 초기 경계 사각형을 확장 하 고이 결과 미터 한계를 더한 끝 모양에 허용 하는 추가 여백을 곱합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-635">The approximate formula is: the initial bounding rectangle is inflated by pen width, and this result is multiplied by the miter limit, plus some additional margin to allow for end caps.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aaa4e-636">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-636">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLastPoint">
      <MemberSignature Language="C#" Value="public System.Drawing.PointF GetLastPoint ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.PointF GetLastPoint() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.GetLastPoint" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLastPoint () As PointF" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::PointF GetLastPoint();" />
      <MemberSignature Language="F#" Value="member this.GetLastPoint : unit -&gt; System.Drawing.PointF" Usage="graphicsPath.GetLastPoint " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.PointF</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="aaa4e-637">이 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" />의 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 배열에 있는 마지막 지점을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-637">Gets the last point in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> array of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aaa4e-638">이 <see cref="T:System.Drawing.PointF" />에 있는 마지막 지점을 나타내는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-638">A <see cref="T:System.Drawing.PointF" /> that represents the last point in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aaa4e-639">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-639">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="aaa4e-640">코드 경로 만듭니다 하 고 경로에 선을 추가 하 고 경로에 마지막 지점을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-640">The code creates a path, adds a line to the path, and then gets the last point in the path.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#21](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#21)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#21](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#21)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#21](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsOutlineVisible">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="aaa4e-641">지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />을 사용하여 그릴 때 이 <see cref="T:System.Drawing.Pen" />의 윤곽선 내에 지정된 지점이 들어 있는지 여부를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-641">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (System.Drawing.Point point, System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(valuetype System.Drawing.Point point, class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(System::Drawing::Point point, System::Drawing::Pen ^ pen);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : System.Drawing.Point * System.Drawing.Pen -&gt; bool" Usage="graphicsPath.IsOutlineVisible (point, pen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="aaa4e-642">테스트할 위치를 지정하는 <see cref="T:System.Drawing.Point" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-642">A <see cref="T:System.Drawing.Point" /> that specifies the location to test.</span>
          </span>
        </param>
        <param name="pen">
          <span data-ttu-id="aaa4e-643">테스트할 <see cref="T:System.Drawing.Pen" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-643">The <see cref="T:System.Drawing.Pen" /> to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-644">지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />을 사용하여 그릴 때 이 <see cref="T:System.Drawing.Pen" />의 윤곽선 내에 지정된 지점이 들어 있는지 여부를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-644">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aaa4e-645">이 메서드는 지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />을 사용하여 그릴 때 이 <see cref="T:System.Drawing.Pen" />의 윤곽선 내에 지정된 지점이 들어 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-645">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaa4e-646">이 메서드는 특정 경로의 윤곽선 지정된 된 지점에 표시 렌더링 됩니다 확인 하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-646">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aaa4e-647">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-647">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (System.Drawing.PointF point, System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(valuetype System.Drawing.PointF point, class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(System::Drawing::PointF point, System::Drawing::Pen ^ pen);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : System.Drawing.PointF * System.Drawing.Pen -&gt; bool" Usage="graphicsPath.IsOutlineVisible (point, pen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.PointF" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="aaa4e-648">테스트할 위치를 지정하는 <see cref="T:System.Drawing.PointF" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-648">A <see cref="T:System.Drawing.PointF" /> that specifies the location to test.</span>
          </span>
        </param>
        <param name="pen">
          <span data-ttu-id="aaa4e-649">테스트할 <see cref="T:System.Drawing.Pen" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-649">The <see cref="T:System.Drawing.Pen" /> to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-650">지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />을 사용하여 그릴 때 이 <see cref="T:System.Drawing.Pen" />의 윤곽선 내에 지정된 지점이 들어 있는지 여부를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-650">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aaa4e-651">이 메서드는 지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />을 사용하여 그릴 때 이 <see cref="T:System.Drawing.Pen" />의 윤곽선 내에 지정된 지점이 들어 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-651">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaa4e-652">이 메서드는 특정 경로의 윤곽선 지정된 된 지점에 표시 렌더링 됩니다 확인 하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-652">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aaa4e-653">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-653">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (System.Drawing.Point pt, System.Drawing.Pen pen, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(valuetype System.Drawing.Point pt, class System.Drawing.Pen pen, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(System::Drawing::Point pt, System::Drawing::Pen ^ pen, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : System.Drawing.Point * System.Drawing.Pen * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsOutlineVisible (pt, pen, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="pt">
          <span data-ttu-id="aaa4e-654">테스트할 위치를 지정하는 <see cref="T:System.Drawing.Point" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-654">A <see cref="T:System.Drawing.Point" /> that specifies the location to test.</span>
          </span>
        </param>
        <param name="pen">
          <span data-ttu-id="aaa4e-655">테스트할 <see cref="T:System.Drawing.Pen" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-655">The <see cref="T:System.Drawing.Pen" /> to test.</span>
          </span>
        </param>
        <param name="graphics">
          <span data-ttu-id="aaa4e-656">가시성을 테스트할 <see cref="T:System.Drawing.Graphics" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-656">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-657">지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />과 지정된 <see cref="T:System.Drawing.Pen" />를 사용하여 그릴 때 이 <see cref="T:System.Drawing.Graphics" />의 윤곽선 내에 지정된 지점이 들어 있는지 여부를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-657">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" /> and using the specified <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aaa4e-658">이 메서드는 지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />을 사용하여 그릴 때 이 <see cref="T:System.Drawing.Pen" />의 윤곽선 내에 지정된 지점이 들어 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-658">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> as drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaa4e-659">이 메서드는 특정 경로의 윤곽선 지정된 된 지점에 표시 렌더링 됩니다 확인 하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-659">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span> <span data-ttu-id="aaa4e-660">테스트할 점의 좌표는 세계 좌표에서 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-660">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="aaa4e-661">변환 매트릭스는 `graphics` 가시성을 테스트 하기 전에 일시적으로 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-661">The transform matrix of `graphics` is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aaa4e-662">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-662">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (System.Drawing.PointF pt, System.Drawing.Pen pen, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(valuetype System.Drawing.PointF pt, class System.Drawing.Pen pen, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(System::Drawing::PointF pt, System::Drawing::Pen ^ pen, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : System.Drawing.PointF * System.Drawing.Pen * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsOutlineVisible (pt, pen, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.PointF" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="pt">
          <span data-ttu-id="aaa4e-663">테스트할 위치를 지정하는 <see cref="T:System.Drawing.PointF" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-663">A <see cref="T:System.Drawing.PointF" /> that specifies the location to test.</span>
          </span>
        </param>
        <param name="pen">
          <span data-ttu-id="aaa4e-664">테스트할 <see cref="T:System.Drawing.Pen" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-664">The <see cref="T:System.Drawing.Pen" /> to test.</span>
          </span>
        </param>
        <param name="graphics">
          <span data-ttu-id="aaa4e-665">가시성을 테스트할 <see cref="T:System.Drawing.Graphics" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-665">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-666">지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />과 지정된 <see cref="T:System.Drawing.Pen" />를 사용하여 그릴 때 이 <see cref="T:System.Drawing.Graphics" />의 윤곽선 내에 지정된 지점이 들어 있는지 여부를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-666">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" /> and using the specified <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aaa4e-667">이 메서드는 지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />을 사용하여 그릴 때 이 <see cref="T:System.Drawing.Pen" />의 윤곽선 내에 지정된 지점이 들어 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-667">This method returns <see langword="true" /> if the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> as drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaa4e-668">이 메서드는 특정 경로의 윤곽선 지정된 된 지점에 표시 렌더링 됩니다 확인 하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-668">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span> <span data-ttu-id="aaa4e-669">테스트할 점의 좌표는 세계 좌표에서 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-669">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="aaa4e-670">변환 매트릭스는 `graphics` 가시성을 테스트 하기 전에 일시적으로 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-670">The transform matrix of `graphics` is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aaa4e-671">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-671">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (int x, int y, System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(int32 x, int32 y, class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(int x, int y, System::Drawing::Pen ^ pen);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : int * int * System.Drawing.Pen -&gt; bool" Usage="graphicsPath.IsOutlineVisible (x, y, pen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="aaa4e-672">테스트할 점의 x좌표입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-672">The x-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="aaa4e-673">테스트할 점의 y좌표입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-673">The y-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="pen">
          <span data-ttu-id="aaa4e-674">테스트할 <see cref="T:System.Drawing.Pen" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-674">The <see cref="T:System.Drawing.Pen" /> to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-675">지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />을 사용하여 그릴 때 이 <see cref="T:System.Drawing.Pen" />의 윤곽선 내에 지정된 지점이 들어 있는지 여부를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-675">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aaa4e-676">이 메서드는 지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />을 사용하여 그릴 때 이 <see cref="T:System.Drawing.Pen" />의 윤곽선 내에 지정된 지점이 들어 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-676">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaa4e-677">이 메서드는 특정 경로의 윤곽선 지정된 된 지점에 표시 렌더링 됩니다 확인 하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-677">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aaa4e-678">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-678">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (float x, float y, System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(float32 x, float32 y, class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(float x, float y, System::Drawing::Pen ^ pen);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : single * single * System.Drawing.Pen -&gt; bool" Usage="graphicsPath.IsOutlineVisible (x, y, pen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="aaa4e-679">테스트할 점의 x좌표입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-679">The x-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="aaa4e-680">테스트할 점의 y좌표입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-680">The y-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="pen">
          <span data-ttu-id="aaa4e-681">테스트할 <see cref="T:System.Drawing.Pen" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-681">The <see cref="T:System.Drawing.Pen" /> to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-682">지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />을 사용하여 그릴 때 이 <see cref="T:System.Drawing.Pen" />의 윤곽선 내에 지정된 지점이 들어 있는지 여부를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-682">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aaa4e-683">이 메서드는 지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />을 사용하여 그릴 때 이 <see cref="T:System.Drawing.Pen" />의 윤곽선 내에 지정된 지점이 들어 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-683">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaa4e-684">이 메서드는 특정 경로의 윤곽선 지정된 된 지점에 표시 렌더링 됩니다 확인 하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-684">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aaa4e-685">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-685">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (int x, int y, System.Drawing.Pen pen, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(int32 x, int32 y, class System.Drawing.Pen pen, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(int x, int y, System::Drawing::Pen ^ pen, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : int * int * System.Drawing.Pen * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsOutlineVisible (x, y, pen, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="aaa4e-686">테스트할 점의 x좌표입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-686">The x-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="aaa4e-687">테스트할 점의 y좌표입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-687">The y-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="pen">
          <span data-ttu-id="aaa4e-688">테스트할 <see cref="T:System.Drawing.Pen" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-688">The <see cref="T:System.Drawing.Pen" /> to test.</span>
          </span>
        </param>
        <param name="graphics">
          <span data-ttu-id="aaa4e-689">가시성을 테스트할 <see cref="T:System.Drawing.Graphics" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-689">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-690">지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />과 지정된 <see cref="T:System.Drawing.Pen" />를 사용하여 그릴 때 이 <see cref="T:System.Drawing.Graphics" />의 윤곽선 내에 지정된 지점이 들어 있는지 여부를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-690">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" /> and using the specified <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aaa4e-691">이 메서드는 지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />을 사용하여 그릴 때 이 <see cref="T:System.Drawing.Pen" />의 윤곽선 내에 지정된 지점이 들어 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-691">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> as drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaa4e-692">이 메서드는 특정 경로의 윤곽선 지정된 된 지점에 표시 렌더링 됩니다 확인 하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-692">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span> <span data-ttu-id="aaa4e-693">테스트할 점의 좌표는 세계 좌표에서 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-693">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="aaa4e-694">변환 매트릭스는 `graphics` 가시성을 테스트 하기 전에 일시적으로 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-694">The transform matrix of `graphics` is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aaa4e-695">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-695">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event.</span></span> <span data-ttu-id="aaa4e-696">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-696">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="aaa4e-697">경로 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-697">Creates a path.</span></span>  
  
-   <span data-ttu-id="aaa4e-698">경로에 사각형을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-698">Adds a rectangle to the path.</span></span>  
  
-   <span data-ttu-id="aaa4e-699">넓은 펜을 만들고 해당 펜 (더 명확 하 게 예제 있도록),으로 경로 넓힙니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-699">Creates a wide pen and widens the path with that pen (to make the example clearer),</span></span>  
  
-   <span data-ttu-id="aaa4e-700">테스트를 호출 하 여 사각형의 모서리 중 하나 (아래)에 배치 하는 경우 점 (100, 50) <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-700">Tests a point (100, 50) to see if it lies within (under) one of the edges of the rectangle by calling <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%2A>.</span></span>  
  
 <span data-ttu-id="aaa4e-701">결과 (이 경우, true) 메시지 상자에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-701">The result is shown in the message box (in this case, true).</span></span> <span data-ttu-id="aaa4e-702">즉 가장자리 해당 지점 위에 렌더링 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-702">In other words the edge is rendered over that point.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#22](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#22)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#22](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#22)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#22](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (float x, float y, System.Drawing.Pen pen, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(float32 x, float32 y, class System.Drawing.Pen pen, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(float x, float y, System::Drawing::Pen ^ pen, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : single * single * System.Drawing.Pen * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsOutlineVisible (x, y, pen, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="aaa4e-703">테스트할 점의 x좌표입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-703">The x-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="aaa4e-704">테스트할 점의 y좌표입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-704">The y-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="pen">
          <span data-ttu-id="aaa4e-705">테스트할 <see cref="T:System.Drawing.Pen" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-705">The <see cref="T:System.Drawing.Pen" /> to test.</span>
          </span>
        </param>
        <param name="graphics">
          <span data-ttu-id="aaa4e-706">가시성을 테스트할 <see cref="T:System.Drawing.Graphics" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-706">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-707">지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />과 지정된 <see cref="T:System.Drawing.Pen" />를 사용하여 그릴 때 이 <see cref="T:System.Drawing.Graphics" />의 윤곽선 내에 지정된 지점이 들어 있는지 여부를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-707">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" /> and using the specified <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aaa4e-708">이 메서드는 지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />을 사용하여 그릴 때 이 <see cref="T:System.Drawing.Pen" />의 윤곽선 내에 지정된 지점이 들어 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-708">This method returns <see langword="true" /> if the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> as drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaa4e-709">이 메서드는 특정 경로의 윤곽선 지정된 된 지점에 표시 렌더링 됩니다 확인 하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-709">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span> <span data-ttu-id="aaa4e-710">테스트할 점의 좌표는 세계 좌표에서 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-710">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="aaa4e-711">변환 매트릭스는 `graphics` 매개 변수 표시 여부를 테스트 하기 전에 일시적으로 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-711">The transform matrix of the `graphics` parameter is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aaa4e-712">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-712">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsVisible">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="aaa4e-713">지정된 지점이 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 내에 들어 있는지 여부를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-713">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::Point point);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : System.Drawing.Point -&gt; bool" Usage="graphicsPath.IsVisible point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="aaa4e-714">테스트할 지점을 나타내는 <see cref="T:System.Drawing.Point" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-714">A <see cref="T:System.Drawing.Point" /> that represents the point to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-715">지정된 지점이 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 내에 들어 있는지 여부를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-715">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aaa4e-716">이 메서드는 지정된 지점이 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 내에 들어 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-716">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aaa4e-717">예제를 보려면 `GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-717">For an example, see `GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.PointF point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.PointF point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (point As PointF) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::PointF point);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : System.Drawing.PointF -&gt; bool" Usage="graphicsPath.IsVisible point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="aaa4e-718">테스트할 지점을 나타내는 <see cref="T:System.Drawing.PointF" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-718">A <see cref="T:System.Drawing.PointF" /> that represents the point to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-719">지정된 지점이 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 내에 들어 있는지 여부를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-719">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aaa4e-720">이 메서드는 지정된 지점이 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 내에 들어 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-720">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aaa4e-721">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-721">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.Point pt, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.Point pt, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::Point pt, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : System.Drawing.Point * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsVisible (pt, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="pt">
          <span data-ttu-id="aaa4e-722">테스트할 지점을 나타내는 <see cref="T:System.Drawing.Point" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-722">A <see cref="T:System.Drawing.Point" /> that represents the point to test.</span>
          </span>
        </param>
        <param name="graphics">
          <span data-ttu-id="aaa4e-723">가시성을 테스트할 <see cref="T:System.Drawing.Graphics" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-723">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-724">지정된 지점이 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 내에 들어 있는지 여부를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-724">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aaa4e-725">이 메서드는 지정된 지점이 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 내에 들어 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-725">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaa4e-726">테스트할 점의 좌표는 세계 좌표에서 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-726">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="aaa4e-727">변환 매트릭스는 `graphics` 매개 변수 표시 여부를 테스트 하기 전에 일시적으로 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-727">The transform matrix of the `graphics` parameter is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aaa4e-728">예제를 보려면 `GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-728">For an example, see `GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.PointF pt, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.PointF pt, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::PointF pt, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : System.Drawing.PointF * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsVisible (pt, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.PointF" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="pt">
          <span data-ttu-id="aaa4e-729">테스트할 지점을 나타내는 <see cref="T:System.Drawing.PointF" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-729">A <see cref="T:System.Drawing.PointF" /> that represents the point to test.</span>
          </span>
        </param>
        <param name="graphics">
          <span data-ttu-id="aaa4e-730">가시성을 테스트할 <see cref="T:System.Drawing.Graphics" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-730">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-731">지정된 지점이 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 내에 들어 있는지 여부를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-731">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aaa4e-732">지정된 지점이 이 개체 내에 들어 있으면 이 메서드가 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-732">This method returns <see langword="true" /> if the specified point is contained within this; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaa4e-733">테스트할 점의 좌표는 세계 좌표에서 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-733">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="aaa4e-734">변환 매트릭스는 `graphics` 매개 변수 표시 여부를 테스트 하기 전에 일시적으로 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-734">The transform matrix of the `graphics` parameter is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aaa4e-735">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-735">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (x As Integer, y As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(int x, int y);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : int * int -&gt; bool" Usage="graphicsPath.IsVisible (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="aaa4e-736">테스트할 점의 x좌표입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-736">The x-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="aaa4e-737">테스트할 점의 y좌표입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-737">The y-coordinate of the point to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-738">지정된 지점이 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 내에 들어 있는지 여부를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-738">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aaa4e-739">이 메서드는 지정된 지점이 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 내에 들어 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-739">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aaa4e-740">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-740">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (x As Single, y As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(float x, float y);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : single * single -&gt; bool" Usage="graphicsPath.IsVisible (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="aaa4e-741">테스트할 점의 x좌표입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-741">The x-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="aaa4e-742">테스트할 점의 y좌표입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-742">The y-coordinate of the point to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-743">지정된 지점이 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 내에 들어 있는지 여부를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-743">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aaa4e-744">이 메서드는 지정된 지점이 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 내에 들어 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-744">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aaa4e-745">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-745">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (int x, int y, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(int32 x, int32 y, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(int x, int y, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : int * int * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsVisible (x, y, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="aaa4e-746">테스트할 점의 x좌표입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-746">The x-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="aaa4e-747">테스트할 점의 y좌표입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-747">The y-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="graphics">
          <span data-ttu-id="aaa4e-748">가시성을 테스트할 <see cref="T:System.Drawing.Graphics" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-748">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-749">지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />를 사용하여 지정된 지점이 이 <see cref="T:System.Drawing.Graphics" /> 내에 들어 있는지 여부를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-749">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />, using the specified <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aaa4e-750">이 메서드는 지정된 지점이 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 내에 들어 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-750">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaa4e-751">테스트할 점의 좌표는 세계 좌표에서 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-751">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="aaa4e-752">변환 매트릭스는 `graphics` 가시성을 테스트 하기 전에 일시적으로 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-752">The transform matrix of `graphics` is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aaa4e-753">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-753">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="aaa4e-754">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-754">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="aaa4e-755">경로 만들고 타원을 경로에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-755">Creates a path and adds an ellipse to the path.</span></span>  
  
-   <span data-ttu-id="aaa4e-756">경로 내에서 지정된 된 지점이 포함 되어 있는지 테스트 합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-756">Tests whether the specified point is contained within the path.</span></span>  
  
-   <span data-ttu-id="aaa4e-757">대화 상자에서 결과 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-757">Displays the result in a dialog box.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#23](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#23)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#23](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#23)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#23](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (float x, float y, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(float32 x, float32 y, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(float x, float y, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : single * single * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsVisible (x, y, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="aaa4e-758">테스트할 점의 x좌표입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-758">The x-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="aaa4e-759">테스트할 점의 y좌표입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-759">The y-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="graphics">
          <span data-ttu-id="aaa4e-760">가시성을 테스트할 <see cref="T:System.Drawing.Graphics" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-760">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-761">지정된 지점이 지정된 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />의 가시 클리핑 영역에 있는 이 <see cref="T:System.Drawing.Graphics" /> 내에 들어 있는지 여부를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-761">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> in the visible clip region of the specified <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aaa4e-762">이 메서드는 지정된 지점이 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 내에 들어 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-762">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaa4e-763">테스트할 점의 좌표는 세계 좌표에서 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-763">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="aaa4e-764">변환 매트릭스는 `graphics` 매개 변수 표시 여부를 테스트 하기 전에 일시적으로 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-764">The transform matrix of the `graphics` parameter is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aaa4e-765">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-765">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PathData">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.PathData PathData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Drawing2D.PathData PathData" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPath.PathData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathData As PathData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::PathData ^ PathData { System::Drawing::Drawing2D::PathData ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PathData : System.Drawing.Drawing2D.PathData" Usage="System.Drawing.Drawing2D.GraphicsPath.PathData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.PathData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aaa4e-766">이 <see cref="T:System.Drawing.Drawing2D.PathData" />의 지점(<paramref name="points" />) 및 형식(<paramref name="types" />)의 배열을 캡슐화하는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-766">Gets a <see cref="T:System.Drawing.Drawing2D.PathData" /> that encapsulates arrays of points (<paramref name="points" />) and types (<paramref name="types" />) for this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aaa4e-767">이 <see cref="T:System.Drawing.Drawing2D.PathData" />의 지점 및 형식에 대한 배열을 캡슐화하는 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-767">A <see cref="T:System.Drawing.Drawing2D.PathData" /> that encapsulates arrays for both the points and types for this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PathPoints">
      <MemberSignature Language="C#" Value="public System.Drawing.PointF[] PathPoints { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.PointF[] PathPoints" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathPoints As PointF()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Drawing::PointF&gt; ^ PathPoints { cli::array &lt;System::Drawing::PointF&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PathPoints : System.Drawing.PointF[]" Usage="System.Drawing.Drawing2D.GraphicsPath.PathPoints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.PointF[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aaa4e-768">경로의 지점을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-768">Gets the points in the path.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aaa4e-769">경로를 나타내는 <see cref="T:System.Drawing.PointF" /> 개체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-769">An array of <see cref="T:System.Drawing.PointF" /> objects that represent the path.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PathTypes">
      <MemberSignature Language="C#" Value="public byte[] PathTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] PathTypes" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathTypes As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ PathTypes { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PathTypes : byte[]" Usage="System.Drawing.Drawing2D.GraphicsPath.PathTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aaa4e-770">
            <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> 배열의 해당 지점 종류를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-770">Gets the types of the corresponding points in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> array.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aaa4e-771">경로에서 해당 지점 종류를 나타내는 바이트의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-771">An array of bytes that specifies the types of the corresponding points in the path.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaa4e-772">반환 된 바이트 배열에서 <xref:System.Drawing.Drawing2D.GraphicsPath.PathTypes%2A> 속성 경로에서 지점 유형 및 데이터 요소에 대 한 플래그를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-772">The array of bytes returned by the <xref:System.Drawing.Drawing2D.GraphicsPath.PathTypes%2A> property specifies point types and flags for the data points in a path.</span></span> <span data-ttu-id="aaa4e-773">각 지점에 대 한 비트 0-2는 지점의 유형을 나타내며 지점의 특성을 지정 하는 플래그 집합을 보유 하는 3 ~ 7 비트.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-773">For each point, bits 0 through 2 indicate the type of a point, and bits 3 through 7 hold a set of flags that specify the attributes of a point.</span></span> <span data-ttu-id="aaa4e-774">다음 표에서 가능한 값과 그 의미를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-774">The following table shows possible values and their meanings.</span></span>  
  
|<span data-ttu-id="aaa4e-775">값</span><span class="sxs-lookup"><span data-stu-id="aaa4e-775">Value</span></span>|<span data-ttu-id="aaa4e-776">의미</span><span class="sxs-lookup"><span data-stu-id="aaa4e-776">Meaning</span></span>|  
|-----------|-------------|  
|<span data-ttu-id="aaa4e-777">0</span><span class="sxs-lookup"><span data-stu-id="aaa4e-777">0</span></span>|<span data-ttu-id="aaa4e-778">그림의 시작 지점 임을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-778">Indicates that the point is the start of a figure.</span></span>|  
|<span data-ttu-id="aaa4e-779">1</span><span class="sxs-lookup"><span data-stu-id="aaa4e-779">1</span></span>|<span data-ttu-id="aaa4e-780">지점 줄의 두 끝점 중 하나 임을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-780">Indicates that the point is one of the two endpoints of a line.</span></span>|  
|<span data-ttu-id="aaa4e-781">3</span><span class="sxs-lookup"><span data-stu-id="aaa4e-781">3</span></span>|<span data-ttu-id="aaa4e-782">지점에는 끝점 또는 제어 지점의 입방 형 3 차원 곡선 스플라인 임을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-782">Indicates that the point is an endpoint or control point of a cubic Bézier spline.</span></span>|  
|<span data-ttu-id="aaa4e-783">0x7</span><span class="sxs-lookup"><span data-stu-id="aaa4e-783">0x7</span></span>|<span data-ttu-id="aaa4e-784">지점 종류를 나타내는 세 가지 낮은 순서 비트를 제외 하 고 모든 비트를 마스크 합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-784">Masks all bits except for the three low-order bits, which indicate the point type.</span></span>|  
|<span data-ttu-id="aaa4e-785">0x20</span><span class="sxs-lookup"><span data-stu-id="aaa4e-785">0x20</span></span>|<span data-ttu-id="aaa4e-786">지점 표식의 임을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-786">Specifies that the point is a marker.</span></span>|  
|<span data-ttu-id="aaa4e-787">0x80</span><span class="sxs-lookup"><span data-stu-id="aaa4e-787">0x80</span></span>|<span data-ttu-id="aaa4e-788">지점 닫힌된 (그림 참조) 하위 경로에서 마지막 점 임을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-788">Specifies that the point is the last point in a closed subpath (figure).</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PointCount">
      <MemberSignature Language="C#" Value="public int PointCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PointCount" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPath.PointCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PointCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PointCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PointCount : int" Usage="System.Drawing.Drawing2D.GraphicsPath.PointCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aaa4e-789">
            <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> 또는 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> 배열의 요소 수를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-789">Gets the number of elements in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> or the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> array.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aaa4e-790">
            <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> 또는 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> 배열의 요소 수를 지정하는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-790">An integer that specifies the number of elements in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> or the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> array.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="graphicsPath.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="aaa4e-791">
            <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> 및 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> 배열을 비우고 <see cref="T:System.Drawing.Drawing2D.FillMode" />를 <see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" />로 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-791">Empties the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> and <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> arrays and sets the <see cref="T:System.Drawing.Drawing2D.FillMode" /> to <see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aaa4e-792">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-792">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="aaa4e-793">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-793">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="aaa4e-794">경로 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-794">Creates a path.</span></span>  
  
-   <span data-ttu-id="aaa4e-795">여러 기본 요소를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-795">Adds several primitives to it.</span></span>  
  
-   <span data-ttu-id="aaa4e-796">패스의 점 배열을 화면으로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-796">Draws the path's points array to the screen.</span></span>  
  
-   <span data-ttu-id="aaa4e-797">경로를 빈 상태로 다시 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-797">Resets the path to an empty state.</span></span>  
  
-   <span data-ttu-id="aaa4e-798">다시 (있는 경우)에 points 배열을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-798">Re-acquires the points array (if it exists).</span></span>  
  
-   <span data-ttu-id="aaa4e-799">화면에 배열을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-799">Draws the array to the screen.</span></span>  
  
 <span data-ttu-id="aaa4e-800">호출 다음에 재설정 배열 없음 찾으면를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-800">Notice that it finds no array following the reset call.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#24](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#24)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#24](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#24)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#24](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public void Reverse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reverse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Reverse" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reverse ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reverse();" />
      <MemberSignature Language="F#" Value="member this.Reverse : unit -&gt; unit" Usage="graphicsPath.Reverse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="aaa4e-801">이 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" />의 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 배열에 있는 지점의 순서를 반대로 바꿉니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-801">Reverses the order of points in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> array of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aaa4e-802">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-802">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="aaa4e-803">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-803">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="aaa4e-804">경로 만들고 여러 기본 요소 경로에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-804">Creates a path and adds several primitives to the path.</span></span>  
  
-   <span data-ttu-id="aaa4e-805">패스의 점 배열을 화면으로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-805">Draws the path's points array to the screen.</span></span>  
  
-   <span data-ttu-id="aaa4e-806">화면에 역방향된 points 배열을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-806">Draws the reversed points array to the screen.</span></span>  
  
 <span data-ttu-id="aaa4e-807">표시 지점에서 두 번째 목록을 반대 순서로 첫 번째에서 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-807">Notice that the second listing of points is in reverse order from the first.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#25](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#25)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#25](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#25)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#25](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMarkers">
      <MemberSignature Language="C#" Value="public void SetMarkers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetMarkers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.SetMarkers" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetMarkers ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetMarkers();" />
      <MemberSignature Language="F#" Value="member this.SetMarkers : unit -&gt; unit" Usage="graphicsPath.SetMarkers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="aaa4e-808">이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />에 마커를 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-808">Sets a marker on this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaa4e-809">이 메서드는 표식을 경로 섹션을 구분 하는 데 사용할 수 있는 경로에 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-809">This method creates a marker on the path that can be used to separate sections of the path.</span></span> <span data-ttu-id="aaa4e-810">사용할 수 있습니다는 <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> 경로에 있는 마커를 반복 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-810">You can then use the <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> methods to iterate through the markers in the path.</span></span>  
  
 <span data-ttu-id="aaa4e-811">마커가 별도 하위 경로 그룹에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-811">Markers are used to separate groups of subpaths.</span></span> <span data-ttu-id="aaa4e-812">경로에 두 개의 마커 간에 하나 이상의 하위 경로 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-812">One or more subpaths can be contained between two markers in the path.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aaa4e-813">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-813">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="aaa4e-814">코드 표식으로 구분 된 경로에 여러 기본 요소를 추가 하며 화면에 경로 그리는 경로 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-814">The code creates a path and adds several primitives to the path separated by markers, and draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#26](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#26)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#26](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#26)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#26](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#26)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartFigure">
      <MemberSignature Language="C#" Value="public void StartFigure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartFigure() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartFigure ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartFigure();" />
      <MemberSignature Language="F#" Value="member this.StartFigure : unit -&gt; unit" Usage="graphicsPath.StartFigure " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="aaa4e-815">현재 그림을 닫지 않고 새 그림을 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-815">Starts a new figure without closing the current figure.</span>
          </span>
          <span data-ttu-id="aaa4e-816">경로에 추가된 모든 후속 지점이 이 새 그림에 추가됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-816">All subsequent points added to the path are added to this new figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaa4e-817">사용자는 필요할 경우 원래 포인트를 유지 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-817">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="aaa4e-818">원점은 입방 형 3 차원 곡선 제어점을 내부적으로 변환 됩니다, 그리고 있어서 원점은 메커니즘이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-818">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
 <span data-ttu-id="aaa4e-819">이 메서드는 경로에 새 하위 경로 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-819">This method starts a new subpath in the path.</span></span> <span data-ttu-id="aaa4e-820">하위 경로 허용 하는 경로 섹션으로 구분 하 여 사용할는 <xref:System.Drawing.Drawing2D.GraphicsPathIterator> 하위 경로 확인을 반복 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-820">Subpaths allow you to separate a path into sections and use the <xref:System.Drawing.Drawing2D.GraphicsPathIterator> class to iterate through the subpaths.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aaa4e-821">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-821">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="aaa4e-822">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-822">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="aaa4e-823">경로 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-823">Creates a path.</span></span>  
  
-   <span data-ttu-id="aaa4e-824">두 그림 집합을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-824">Adds two sets of figures.</span></span> <span data-ttu-id="aaa4e-825">숫자 값의 첫 번째 집합 두 그림으로 네 명의 기본 요소를 결합합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-825">The first set of figures combines four primitives into two figures.</span></span> <span data-ttu-id="aaa4e-826">지 수의 두 번째 집합 결합 같은 4 명의 기본 형식 (제외 하 고 오프셋 인 경우 y 축) 세 개의 지 합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-826">The second set of figures combines the same four primitives (except that they are offset in the y-axis) into three figures.</span></span>  
  
-   <span data-ttu-id="aaa4e-827">화면에 모든 데이터를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-827">Draws all the figures to the screen.</span></span>  
  
 <span data-ttu-id="aaa4e-828">모양 지 수의 두 집합 간의 차이 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-828">Notice the difference in the appearance between the two sets of figures.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#27](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#27)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#27](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#27)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#27](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Drawing.Drawing2D.Matrix -&gt; unit" Usage="graphicsPath.Transform matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix">
          <span data-ttu-id="aaa4e-829">적용할 변환을 나타내는 <see cref="T:System.Drawing.Drawing2D.Matrix" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-829">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that represents the transformation to apply.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-830">이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />에 변환 매트릭스를 적용합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-830">Applies a transform matrix to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaa4e-831">변환 수 크기 조정, 변환, 회전 하거나는 <xref:System.Drawing.Drawing2D.GraphicsPath>합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-831">The transformation can scale, translate, rotate, or skew the <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aaa4e-832">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-832">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="aaa4e-833">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-833">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="aaa4e-834">경로 만들고 타원을 경로에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-834">Creates a path and adds an ellipse to the path.</span></span>  
  
-   <span data-ttu-id="aaa4e-835">화면에 경로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-835">Draws path to the screen.</span></span>  
  
-   <span data-ttu-id="aaa4e-836">X-축 방향으로 경로 100 단위 변환 하는 변환 행렬을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-836">Creates a transform matrix to translate the path 100 units in the x-axis direction.</span></span>  
  
-   <span data-ttu-id="aaa4e-837">화면에 변환된 된 경로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-837">Draws the transformed path to the screen.</span></span>  
  
 <span data-ttu-id="aaa4e-838">원래 타원 검은색으로 그려집니다 빨간색으로 변형 된 타원 그려집니다에 유의 하십시오.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-838">Notice that the original ellipse is drawn in black and the transformed ellipse is drawn in red.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#28](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#28)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#28](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#28)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#28](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Warp">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="aaa4e-839">이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />에 사각형과 평행 사변형에 의해 정의된 휘기 변환을 적용합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-839">Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Warp">
      <MemberSignature Language="C#" Value="public void Warp (System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Warp(valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Warp (destPoints As PointF(), srcRect As RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Warp(cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect);" />
      <MemberSignature Language="F#" Value="member this.Warp : System.Drawing.PointF[] * System.Drawing.RectangleF -&gt; unit" Usage="graphicsPath.Warp (destPoints, srcRect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="destPoints">
          <span data-ttu-id="aaa4e-840">
            <c>srcRect</c>에 의해 정의된 사각형이 변환되는 평행 사변형을 정의하는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-840">An array of <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram to which the rectangle defined by <c>srcRect</c> is transformed.</span>
          </span>
          <span data-ttu-id="aaa4e-841">이 배열에 세 개 또는 네 개의 요소를 포함할 수 있는데,</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-841">The array can contain either three or four elements.</span>
          </span>
          <span data-ttu-id="aaa4e-842">세 개의 요소를 포함하는 경우 처음 세 지점이 평행 사변형의 오른쪽 아래 모퉁이가 됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-842">If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</span>
          </span>
        </param>
        <param name="srcRect">
          <span data-ttu-id="aaa4e-843">
            <c>destPoints</c>에서 정의된 평행 사변형으로 변환되는 사각형을 나타내는 <see cref="T:System.Drawing.RectangleF" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-843">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that is transformed to the parallelogram defined by <c>destPoints</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-844">이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />에 사각형과 평행 사변형에 의해 정의된 휘기 변환을 적용합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-844">Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aaa4e-845">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-845">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Warp">
      <MemberSignature Language="C#" Value="public void Warp (System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Warp(valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect, class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Warp(cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect, System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.Warp : System.Drawing.PointF[] * System.Drawing.RectangleF * System.Drawing.Drawing2D.Matrix -&gt; unit" Usage="graphicsPath.Warp (destPoints, srcRect, matrix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="destPoints">
          <span data-ttu-id="aaa4e-846">
            <c>srcRect</c>에 의해 정의된 사각형이 변환되는 평행 사변형을 정의하는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-846">An array of <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram to which the rectangle defined by <c>srcRect</c> is transformed.</span>
          </span>
          <span data-ttu-id="aaa4e-847">이 배열에 세 개 또는 네 개의 요소를 포함할 수 있는데,</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-847">The array can contain either three or four elements.</span>
          </span>
          <span data-ttu-id="aaa4e-848">세 개의 요소를 포함하는 경우 처음 세 지점이 평행 사변형의 오른쪽 아래 모퉁이가 됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-848">If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</span>
          </span>
        </param>
        <param name="srcRect">
          <span data-ttu-id="aaa4e-849">
            <c>destPoints</c>에서 정의된 평행 사변형으로 변환되는 사각형을 나타내는 <see cref="T:System.Drawing.RectangleF" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-849">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that is transformed to the parallelogram defined by <c>destPoints</c>.</span>
          </span>
        </param>
        <param name="matrix">
          <span data-ttu-id="aaa4e-850">경로에 적용할 기하학적 변환을 지정하는 <see cref="T:System.Drawing.Drawing2D.Matrix" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-850">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a geometric transform to apply to the path.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-851">이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />에 사각형과 평행 사변형에 의해 정의된 휘기 변환을 적용합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-851">Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aaa4e-852">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-852">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Warp">
      <MemberSignature Language="C#" Value="public void Warp (System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.WarpMode warpMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Warp(valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect, class System.Drawing.Drawing2D.Matrix matrix, valuetype System.Drawing.Drawing2D.WarpMode warpMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Warp(cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect, System::Drawing::Drawing2D::Matrix ^ matrix, System::Drawing::Drawing2D::WarpMode warpMode);" />
      <MemberSignature Language="F#" Value="member this.Warp : System.Drawing.PointF[] * System.Drawing.RectangleF * System.Drawing.Drawing2D.Matrix * System.Drawing.Drawing2D.WarpMode -&gt; unit" Usage="graphicsPath.Warp (destPoints, srcRect, matrix, warpMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="warpMode" Type="System.Drawing.Drawing2D.WarpMode" />
      </Parameters>
      <Docs>
        <param name="destPoints">
          <span data-ttu-id="aaa4e-853">
            <c>srcRect</c>에 의해 정의된 사각형이 변환되는 평행 사변형을 정의하는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-853">An array of <see cref="T:System.Drawing.PointF" /> structures that defines a parallelogram to which the rectangle defined by <c>srcRect</c> is transformed.</span>
          </span>
          <span data-ttu-id="aaa4e-854">이 배열에 세 개 또는 네 개의 요소를 포함할 수 있는데,</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-854">The array can contain either three or four elements.</span>
          </span>
          <span data-ttu-id="aaa4e-855">세 개의 요소를 포함하는 경우 처음 세 지점이 평행 사변형의 오른쪽 아래 모퉁이가 됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-855">If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</span>
          </span>
        </param>
        <param name="srcRect">
          <span data-ttu-id="aaa4e-856">
            <c>destPoints</c>에서 정의된 평행 사변형으로 변환되는 사각형을 나타내는 <see cref="T:System.Drawing.RectangleF" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-856">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that is transformed to the parallelogram defined by <c>destPoints</c>.</span>
          </span>
        </param>
        <param name="matrix">
          <span data-ttu-id="aaa4e-857">경로에 적용할 기하학적 변환을 지정하는 <see cref="T:System.Drawing.Drawing2D.Matrix" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-857">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a geometric transform to apply to the path.</span>
          </span>
        </param>
        <param name="warpMode">
          <span data-ttu-id="aaa4e-858">이 휘기 작업에 원근 모드와 이중 선형 모드 중 어느 모드를 사용할지를 지정하는 <see cref="T:System.Drawing.Drawing2D.WarpMode" /> 열거형입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-858">A <see cref="T:System.Drawing.Drawing2D.WarpMode" /> enumeration that specifies whether this warp operation uses perspective or bilinear mode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-859">이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />에 사각형과 평행 사변형에 의해 정의된 휘기 변환을 적용합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-859">Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aaa4e-860">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-860">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Warp">
      <MemberSignature Language="C#" Value="public void Warp (System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.WarpMode warpMode, float flatness);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Warp(valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect, class System.Drawing.Drawing2D.Matrix matrix, valuetype System.Drawing.Drawing2D.WarpMode warpMode, float32 flatness) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Warp(cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect, System::Drawing::Drawing2D::Matrix ^ matrix, System::Drawing::Drawing2D::WarpMode warpMode, float flatness);" />
      <MemberSignature Language="F#" Value="member this.Warp : System.Drawing.PointF[] * System.Drawing.RectangleF * System.Drawing.Drawing2D.Matrix * System.Drawing.Drawing2D.WarpMode * single -&gt; unit" Usage="graphicsPath.Warp (destPoints, srcRect, matrix, warpMode, flatness)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="warpMode" Type="System.Drawing.Drawing2D.WarpMode" />
        <Parameter Name="flatness" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="destPoints">
          <span data-ttu-id="aaa4e-861">
            <c>srcRect</c>에 의해 정의된 사각형이 변환되는 평행 사변형을 정의하는 <see cref="T:System.Drawing.PointF" /> 구조체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-861">An array of <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram to which the rectangle defined by <c>srcRect</c> is transformed.</span>
          </span>
          <span data-ttu-id="aaa4e-862">이 배열에 세 개 또는 네 개의 요소를 포함할 수 있는데,</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-862">The array can contain either three or four elements.</span>
          </span>
          <span data-ttu-id="aaa4e-863">세 개의 요소를 포함하는 경우 처음 세 지점이 평행 사변형의 오른쪽 아래 모퉁이가 됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-863">If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</span>
          </span>
        </param>
        <param name="srcRect">
          <span data-ttu-id="aaa4e-864">
            <c>destPoints</c>에서 정의된 평행 사변형으로 변환되는 사각형을 나타내는 <see cref="T:System.Drawing.RectangleF" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-864">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that is transformed to the parallelogram defined by <c>destPoints</c>.</span>
          </span>
        </param>
        <param name="matrix">
          <span data-ttu-id="aaa4e-865">경로에 적용할 기하학적 변환을 지정하는 <see cref="T:System.Drawing.Drawing2D.Matrix" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-865">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a geometric transform to apply to the path.</span>
          </span>
        </param>
        <param name="warpMode">
          <span data-ttu-id="aaa4e-866">이 휘기 작업에 원근 모드와 이중 선형 모드 중 어느 모드를 사용할지를 지정하는 <see cref="T:System.Drawing.Drawing2D.WarpMode" /> 열거형입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-866">A <see cref="T:System.Drawing.Drawing2D.WarpMode" /> enumeration that specifies whether this warp operation uses perspective or bilinear mode.</span>
          </span>
        </param>
        <param name="flatness">
          <span data-ttu-id="aaa4e-867">결과로 만들어지는 경로의 직선화 정도를 지정하는 0에서 1 사이의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-867">A value from 0 through 1 that specifies how flat the resulting path is.</span>
          </span>
          <span data-ttu-id="aaa4e-868">자세한 내용은 <see cref="M:System.Drawing.Drawing2D.GraphicsPath.Flatten" /> 메서드를 참조하십시오.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-868">For more information, see the <see cref="M:System.Drawing.Drawing2D.GraphicsPath.Flatten" /> methods.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-869">이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />에 사각형과 평행 사변형에 의해 정의된 휘기 변환을 적용합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-869">Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aaa4e-870">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-870">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="aaa4e-871">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-871">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="aaa4e-872">경로 만들어 경로에 사각형을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-872">Creates a path and adds a rectangle to the path.</span></span>  
  
-   <span data-ttu-id="aaa4e-873">검은색으로 화면에 해당 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-873">Draws that rectangle to the screen in black.</span></span>  
  
-   <span data-ttu-id="aaa4e-874">큐브 뷰 warp를 [경로]을 비틉니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-874">Warps the path with a perspective warp.</span></span>  
  
-   <span data-ttu-id="aaa4e-875">화면에에서에 (경로) 휜된 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-875">Draws the warped rectangle (path) to the screen in red.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#29](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#29)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#29](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#29)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#29](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#29)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Widen">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="aaa4e-876">이 경로를 지정된 펜으로 그릴 때 채워지는 영역을 둘러싸는 곡선으로 이 경로를 바꿉니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-876">Replaces this path with curves that enclose the area that is filled when this path is drawn by the specified pen.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Widen">
      <MemberSignature Language="C#" Value="public void Widen (System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Widen(class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Widen(System::Drawing::Pen ^ pen);" />
      <MemberSignature Language="F#" Value="member this.Widen : System.Drawing.Pen -&gt; unit" Usage="graphicsPath.Widen pen" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="pen">
          <span data-ttu-id="aaa4e-877">경로의 원래 윤곽선과 이 메서드가 만든 새 윤곽선 사이의 너비를 지정하는 <see cref="T:System.Drawing.Pen" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-877">A <see cref="T:System.Drawing.Pen" /> that specifies the width between the original outline of the path and the new outline this method creates.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-878">경로에 윤곽선을 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-878">Adds an additional outline to the path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaa4e-879">이 메서드는이 원래 줄 주위에 윤곽선을 만듭니다 <xref:System.Drawing.Drawing2D.GraphicsPath>, 기존 명령줄와 새 개요 사이의 거리와와 같게 하의 너비는 <xref:System.Drawing.Pen> 호출에 사용 되는 <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-879">This method creates an outline around the original lines in this <xref:System.Drawing.Drawing2D.GraphicsPath>, with a distance between the existing lines and the new outline equal to that of the width of the <xref:System.Drawing.Pen> used in the call to <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>.</span></span> <span data-ttu-id="aaa4e-880">줄 간격을 채울 경우 사용 해야는 <xref:System.Drawing.Graphics.FillPath%2A> 대신는 <xref:System.Drawing.Graphics.DrawPath%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-880">If you want to fill the space between the lines you must use the <xref:System.Drawing.Graphics.FillPath%2A> rather then the <xref:System.Drawing.Graphics.DrawPath%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aaa4e-881">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-881">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Widen">
      <MemberSignature Language="C#" Value="public void Widen (System.Drawing.Pen pen, System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Widen(class System.Drawing.Pen pen, class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Widen(System::Drawing::Pen ^ pen, System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.Widen : System.Drawing.Pen * System.Drawing.Drawing2D.Matrix -&gt; unit" Usage="graphicsPath.Widen (pen, matrix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="pen">
          <span data-ttu-id="aaa4e-882">경로의 원래 윤곽선과 이 메서드가 만든 새 윤곽선 사이의 너비를 지정하는 <see cref="T:System.Drawing.Pen" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-882">A <see cref="T:System.Drawing.Pen" /> that specifies the width between the original outline of the path and the new outline this method creates.</span>
          </span>
        </param>
        <param name="matrix">
          <span data-ttu-id="aaa4e-883">너비를 넓히기 전에 경로에 적용할 변환을 지정하는 <see cref="T:System.Drawing.Drawing2D.Matrix" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-883">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a transform to apply to the path before widening.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-884">
            <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />에 윤곽선을 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-884">Adds an additional outline to the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaa4e-885">이 메서드는이 원래 줄 주위에 윤곽선을 만듭니다 <xref:System.Drawing.Drawing2D.GraphicsPath>, 기존 명령줄와 새 개요 사이의 거리와와 같게 하의 너비는 <xref:System.Drawing.Pen> 호출에 사용 되는 <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-885">This method creates an outline around the original lines in this <xref:System.Drawing.Drawing2D.GraphicsPath>, with a distance between the existing lines and the new outline equal to that of the width of the <xref:System.Drawing.Pen> used in the call to <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>.</span></span> <span data-ttu-id="aaa4e-886">줄 간격을 채울 경우 사용 해야는 <xref:System.Drawing.Graphics.FillPath%2A> 대신는 <xref:System.Drawing.Graphics.DrawPath%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-886">If you want to fill the space between the lines you must use the <xref:System.Drawing.Graphics.FillPath%2A> rather then the <xref:System.Drawing.Graphics.DrawPath%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aaa4e-887">예제를 보려면 <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-887">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Widen">
      <MemberSignature Language="C#" Value="public void Widen (System.Drawing.Pen pen, System.Drawing.Drawing2D.Matrix matrix, float flatness);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Widen(class System.Drawing.Pen pen, class System.Drawing.Drawing2D.Matrix matrix, float32 flatness) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Widen(System::Drawing::Pen ^ pen, System::Drawing::Drawing2D::Matrix ^ matrix, float flatness);" />
      <MemberSignature Language="F#" Value="member this.Widen : System.Drawing.Pen * System.Drawing.Drawing2D.Matrix * single -&gt; unit" Usage="graphicsPath.Widen (pen, matrix, flatness)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="flatness" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="pen">
          <span data-ttu-id="aaa4e-888">경로의 원래 윤곽선과 이 메서드가 만든 새 윤곽선 사이의 너비를 지정하는 <see cref="T:System.Drawing.Pen" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-888">A <see cref="T:System.Drawing.Pen" /> that specifies the width between the original outline of the path and the new outline this method creates.</span>
          </span>
        </param>
        <param name="matrix">
          <span data-ttu-id="aaa4e-889">너비를 넓히기 전에 경로에 적용할 변환을 지정하는 <see cref="T:System.Drawing.Drawing2D.Matrix" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-889">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a transform to apply to the path before widening.</span>
          </span>
        </param>
        <param name="flatness">
          <span data-ttu-id="aaa4e-890">곡선에 대한 직선화 정도를 지정하는 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-890">A value that specifies the flatness for curves.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aaa4e-891">이 경로를 지정된 펜으로 그릴 때 채워지는 영역을 둘러싸는 곡선으로 이 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />를 바꿉니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aaa4e-891">Replaces this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> with curves that enclose the area that is filled when this path is drawn by the specified pen.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aaa4e-892">이 메서드는이 원래 줄 주위에 윤곽선을 만듭니다 <xref:System.Drawing.Drawing2D.GraphicsPath>, 기존 명령줄와 새 개요 사이의 거리와와 같게 하의 너비는 <xref:System.Drawing.Pen> 호출에 사용 되는 <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-892">This method creates an outline around the original lines in this <xref:System.Drawing.Drawing2D.GraphicsPath>, with a distance between the existing lines and the new outline equal to that of the width of the <xref:System.Drawing.Pen> used in the call to <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>.</span></span> <span data-ttu-id="aaa4e-893">줄 간격을 채울 경우 사용 해야는 <xref:System.Drawing.Graphics.FillPath%2A> 대신는 <xref:System.Drawing.Graphics.DrawPath%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-893">If you want to fill the space between the lines you must use the <xref:System.Drawing.Graphics.FillPath%2A> rather then the <xref:System.Drawing.Graphics.DrawPath%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aaa4e-894">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-894">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="aaa4e-895">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-895">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="aaa4e-896">경로 만들고 두 타원 경로에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-896">Creates a path and adds two ellipses to the path.</span></span>  
  
-   <span data-ttu-id="aaa4e-897">검은색으로 경로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-897">Draws the path in black.</span></span>  
  
-   <span data-ttu-id="aaa4e-898">경로 넓힙니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-898">Widens the path.</span></span>  
  
-   <span data-ttu-id="aaa4e-899">빨간색으로 경로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-899">Draws the path in red.</span></span>  
  
 <span data-ttu-id="aaa4e-900">두 번째 렌더링을 사용 하는 <xref:System.Drawing.Graphics.FillPath%2A> 대신 <xref:System.Drawing.Graphics.DrawPath%2A>, 따라서 렌더링 된 그림에 채워진 개요입니다.</span><span class="sxs-lookup"><span data-stu-id="aaa4e-900">Notice that the second rendering uses <xref:System.Drawing.Graphics.FillPath%2A> instead of <xref:System.Drawing.Graphics.DrawPath%2A>, and hence the rendered figure has the outline filled.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#30](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#30)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#30)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#30)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>