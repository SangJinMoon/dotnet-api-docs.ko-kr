<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="GraphicsPath.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5010b867d0c50e186006fea90cdbc67fefd8cfd61.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">010b867d0c50e186006fea90cdbc67fefd8cfd61</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Represents a series of connected lines and curves.</source>
          <target state="translated">연결된 일련의 선과 곡선을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Applications use paths to draw outlines of shapes, fill the interiors of shapes, and create clipping regions.</source>
          <target state="translated">도형의 윤곽선을 그리고, 도형의 내부를 채우는, 클리핑 영역을 만드는에 경로 사용 하는 응용 프로그램.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>The graphics engine maintains the coordinates of geometric shapes in a path in world coordinate space.</source>
          <target state="translated">그래픽 엔진 세계 좌표 공간에서 경로에 기 하 도형의 좌표를 유지 관리합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>A path may be composed of any number of figures (subpaths).</source>
          <target state="translated">여러 개의 그림 (하위 경로)의 경로 구성 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Each figure is either composed of a sequence of connected lines and curves or a geometric shape primitive.</source>
          <target state="translated">각 수치는 일련의 연결 된 선 및 곡선 또는 도형 기본 하거나 구성 됩니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>The starting point of a figure is the first point in the sequence of connected lines and curves.</source>
          <target state="translated">그림의 시작 위치는 연결 된 선 및 곡선 시퀀스의 첫 번째 지점입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>The ending point is the last point in the sequence.</source>
          <target state="translated">끝점은 시퀀스에서 마지막 지점입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>The starting and ending points of a geometric shape primitive are defined by the primitive specification.</source>
          <target state="translated">도형 기본의 시작과 끝은 기본 요소 사양에서 정의 됩니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>A figure that consists of a sequence of connected lines and curves (whose starting and ending points may be coincident) is an open figure, unless it is closed explicitly.</source>
          <target state="translated">일련의 연결 된 선으로 구성 된 및 곡선 (시작 및 끝 포인트가 있는 일치 수 있음)는 열린 그림을 명시적으로 닫지 않으면 됩니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>A figure can be closed explicitly, by using the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.CloseFigure%2A&gt;</ph> method, which closes the current figure by connecting a line from the ending point to the starting point.</source>
          <target state="translated">도형을 사용 하 여 명시적으로 닫을 수 있습니다는 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.CloseFigure%2A&gt;</ph> 메서드를 시작 점으로 선을 끝점에서 연결 하 여 현재 그림을 닫습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>A figure that consists of a geometric shape primitive is a closed figure.</source>
          <target state="translated">도형 기본 구성 된 그림은 폐쇄형된 도형은입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>For purposes of filling and clipping (for example, if a path is rendered using <ph id="ph1">&lt;xref:System.Drawing.Graphics.FillPath%2A&gt;</ph>), all open figures are closed by adding a line from the figure's first point to its last point.</source>
          <target state="translated">채우기와 클리핑의 목적에 (사용 하 여 경로 렌더링 하는 경우에 예를 들어 <ph id="ph1">&lt;xref:System.Drawing.Graphics.FillPath%2A&gt;</ph>) 열려 있는 모든, 마지막 시점으로 그림의 첫 번째 요소에서 줄을 추가 하 여 그림을 닫습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>A new figure is implicitly started when a path is created or when a figure is closed.</source>
          <target state="translated">새 그림 figure 닫힐 때 또는 경로 만들 때에 암시적으로 시작 됩니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>A new figure is explicitly created when the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.StartFigure%2A&gt;</ph> method is called.</source>
          <target state="translated">새 그림 명시적으로 생성 되는 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.StartFigure%2A&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>When a geometric shape primitive is added to a path, it adds a figure containing the geometric shape, and also implicitly starts a new figure.</source>
          <target state="translated">도형 기본 경로에 추가 되 면 기하학 다각형 셰이프를 포함 하는 그림을 추가 하 고 새 그림을 암시적으로 시작 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Consequently, there is always a current figure in a path.</source>
          <target state="translated">따라서에 없는 경우 항상 현재 그림 경로</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>When lines and curves are added to a path, an implicit line is added as needed to connect the ending point of the current figure to the starting point of the new lines and curves to form a sequence of connected lines and curves.</source>
          <target state="translated">선 및 곡선 경로에 추가 되 면 현재 그림의 끝 지점을 새 선 및 곡선으로 분할 하는 연결 된 일련의 및 곡선의 시작점에 연결할 필요에 따라 암시적 줄이 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>A figure has a direction that describes how line and curve segments are traced between the starting point and the ending point.</source>
          <target state="translated">그림에는 시작 지점 및 끝 지점 간의 선과 곡선 세그먼트를 추적 하는 방법을 설명 하는 방향입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>The direction is defined in the order that lines and curves are added to a figure, or is defined by the geometric shape primitive.</source>
          <target state="translated">그림에서에 추가 되거나 도형 기본으로 정의 된 선 및 곡선 순서에서 방향 정의 됩니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>The direction is used in determining the path interiors for clipping and fill.</source>
          <target state="translated">방향을은 클리핑 및 채우기에 대 한 내부 경로 결정 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> class with a <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> enumeration of <ph id="ph3">&lt;see langword="Alternate" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph3">&lt;see langword="Alternate" /&gt;</ph>의 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> 열거형을 사용하여 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> class with a <ph id="ph2">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.FillMode" /&gt;</ph> value of <ph id="ph3">&lt;see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>의 <ph id="ph2">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.FillMode" /&gt;</ph> 값을 사용하여 <ph id="ph3">&lt;see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Drawing2D.FillMode)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> enumeration that determines how the interior of this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> is filled.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph>의 내부를 채우는 방법을 결정하는 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> 열거형입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Drawing2D.FillMode)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> enumeration.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> 열거형을 사용하여 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that defines the coordinates of the points that make up this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>를 구성하는 지점의 좌표를 정의하는 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> 구조체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> enumeration elements that specifies the type of each corresponding point in the <bpt id="p1">&lt;c&gt;</bpt>pts<ept id="p1">&lt;/c&gt;</ept> array.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>pts<ept id="p1">&lt;/c&gt;</ept> 배열에 있는 각 해당 지점의 종류를 지정하는 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> 열거형 요소의 배열입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> arrays.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> 배열을 사용하여 <ph id="ph3">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that defines the coordinates of the points that make up this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph>를 구성하는 지점의 좌표를 정의하는 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> 구조체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> enumeration elements that specifies the type of each corresponding point in the <bpt id="p1">&lt;c&gt;</bpt>pts<ept id="p1">&lt;/c&gt;</ept> array.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>pts<ept id="p1">&lt;/c&gt;</ept> 배열에 있는 각 해당 지점의 종류를 지정하는 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> 열거형 요소의 배열입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> array with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> arrays.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> 배열을 사용하여 <ph id="ph3">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> 배열의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[],System.Drawing.Drawing2D.FillMode)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that defines the coordinates of the points that make up this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>를 구성하는 지점의 좌표를 정의하는 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> 구조체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[],System.Drawing.Drawing2D.FillMode)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> enumeration elements that specifies the type of each corresponding point in the <bpt id="p1">&lt;c&gt;</bpt>pts<ept id="p1">&lt;/c&gt;</ept> array.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>pts<ept id="p1">&lt;/c&gt;</ept> 배열에 있는 각 해당 지점의 종류를 지정하는 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> 열거형 요소의 배열입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[],System.Drawing.Drawing2D.FillMode)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> enumeration that specifies how the interiors of shapes in this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> are filled.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph>에 있는 모양의 내부를 채우는 방법을 지정하는 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> 열거형입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[],System.Drawing.Drawing2D.FillMode)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> arrays and with the specified <ph id="ph4">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> enumeration element.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> 배열과 지정된 <ph id="ph3">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> 열거형 요소를 사용하여 <ph id="ph4">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[],System.Drawing.Drawing2D.FillMode)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that defines the coordinates of the points that make up this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph>를 구성하는 지점의 좌표를 정의하는 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> 구조체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[],System.Drawing.Drawing2D.FillMode)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> enumeration elements that specifies the type of each corresponding point in the <bpt id="p1">&lt;c&gt;</bpt>pts<ept id="p1">&lt;/c&gt;</ept> array.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>pts<ept id="p1">&lt;/c&gt;</ept> 배열에 있는 각 해당 지점의 종류를 지정하는 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> 열거형 요소의 배열입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[],System.Drawing.Drawing2D.FillMode)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> enumeration that specifies how the interiors of shapes in this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> are filled.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph>에 있는 모양의 내부를 채우는 방법을 지정하는 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> 열거형입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[],System.Drawing.Drawing2D.FillMode)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> array with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> arrays and with the specified <ph id="ph4">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> enumeration element.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> 배열과 지정된 <ph id="ph3">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> 열거형 요소를 사용하여 <ph id="ph4">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> 배열의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Appends an elliptical arc to the current figure.</source>
          <target state="translated">타원형 호를 현재 그림에 추가합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that represents the rectangular bounds of the ellipse from which the arc is taken.</source>
          <target state="translated">호가 그려지는 타원의 사각형 범위를 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>The starting angle of the arc, measured in degrees clockwise from the x-axis.</source>
          <target state="translated">X축에서 시계 방향으로 측정한 호의 시작 각도입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>The angle between <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> and the end of the arc.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept>과 호의 끝 사이의 각도입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>Appends an elliptical arc to the current figure.</source>
          <target state="translated">타원형 호를 현재 그림에 추가합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.</source>
          <target state="translated">이전 줄 또는 그림에는 곡선 없으면 줄 호의 시작 부분에는 이전 세그먼트의 끝점을 연결에 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>The arc is traced along the perimeter of the ellipse bounded by the specified rectangle.</source>
          <target state="translated">지정된 된 사각형에 의해 제한 되는 타원의 경계를 따라 호 추적 됩니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle.</source>
          <target state="translated">원호의 시작점 수가 시작 각도 (0도 각도로) 타원의 x 축에서 시계 방향으로 측정 하 여 결정 됩니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle.</source>
          <target state="translated">끝점은 마찬가지로 스윕 각도의 개수로 시작 지점에서 시계 방향으로 측정 하 여 있습니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</source>
          <target state="translated">스윕 각도 360도-360도 미만 보다 크면 360도 또는-360도 정확 하 게 호는 각각 이루어집니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> 이벤트 개체입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>The code performs the following actions:</source>
          <target state="translated">이 코드에서는 다음 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>Creates a rectangle, from which the arc is defined.</source>
          <target state="translated">호를 정의할 사각형을 만듭니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>Creates a path, <ph id="ph1">`myPath`</ph>.</source>
          <target state="translated">경로 만듭니다 <ph id="ph1">`myPath`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>Defines a 180-degree elliptical arc that sweeps from 0 degrees to 180 degrees and appends it to a path.</source>
          <target state="translated">0도에서 180도로 비우고 하는 경로에 추가 하는 180도 타원형 호를 정의 합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>Draws the path to screen.</source>
          <target state="translated">화면에 경로 그립니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> that represents the rectangular bounds of the ellipse from which the arc is taken.</source>
          <target state="translated">호가 그려지는 타원의 사각형 범위를 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)">
          <source>The starting angle of the arc, measured in degrees clockwise from the x-axis.</source>
          <target state="translated">X축에서 시계 방향으로 측정한 호의 시작 각도입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)">
          <source>The angle between <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> and the end of the arc.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept>과 호의 끝 사이의 각도입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)">
          <source>Appends an elliptical arc to the current figure.</source>
          <target state="translated">타원형 호를 현재 그림에 추가합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)">
          <source>If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.</source>
          <target state="translated">이전 줄 또는 그림에는 곡선 없으면 줄 호의 시작 부분에는 이전 세그먼트의 끝점을 연결에 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)">
          <source>The arc is traced along the perimeter of the ellipse bounded by the specified rectangle.</source>
          <target state="translated">지정된 된 사각형에 의해 제한 되는 타원의 경계를 따라 호 추적 됩니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)">
          <source>The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle.</source>
          <target state="translated">원호의 시작점 수가 시작 각도 (0도 각도로) 타원의 x 축에서 시계 방향으로 측정 하 여 결정 됩니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)">
          <source>The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle.</source>
          <target state="translated">끝점은 마찬가지로 스윕 각도의 개수로 시작 지점에서 시계 방향으로 측정 하 여 있습니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)">
          <source>If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</source>
          <target state="translated">스윕 각도 360도-360도 미만 보다 크면 360도 또는-360도 정확 하 게 호는 각각 이루어집니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">예제를 보려면 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The x-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</source>
          <target state="translated">호가 그려지는 타원을 정의하는 사각형 영역의 왼쪽 위 모퉁이에 대한 X좌표입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The y-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</source>
          <target state="translated">호가 그려지는 타원을 정의하는 사각형 영역의 왼쪽 위 모퉁이에 대한 Y좌표입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The width of the rectangular region that defines the ellipse from which the arc is drawn.</source>
          <target state="translated">호가 그려지는 타원을 정의하는 사각형 영역의 너비입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The height of the rectangular region that defines the ellipse from which the arc is drawn.</source>
          <target state="translated">호가 그려지는 타원을 정의하는 사각형 영역의 높이입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The starting angle of the arc, measured in degrees clockwise from the x-axis.</source>
          <target state="translated">X축에서 시계 방향으로 측정한 호의 시작 각도입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The angle between <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> and the end of the arc.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept>과 호의 끝 사이의 각도입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>Appends an elliptical arc to the current figure.</source>
          <target state="translated">타원형 호를 현재 그림에 추가합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.</source>
          <target state="translated">이전 줄 또는 그림에는 곡선 없으면 줄 호의 시작 부분에는 이전 세그먼트의 끝점을 연결에 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The arc is traced along the perimeter of the ellipse bounded by the specified rectangle.</source>
          <target state="translated">지정된 된 사각형에 의해 제한 되는 타원의 경계를 따라 호 추적 됩니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle.</source>
          <target state="translated">원호의 시작점 수가 시작 각도 (0도 각도로) 타원의 x 축에서 시계 방향으로 측정 하 여 결정 됩니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle.</source>
          <target state="translated">끝점은 마찬가지로 스윕 각도의 개수로 시작 지점에서 시계 방향으로 측정 하 여 있습니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</source>
          <target state="translated">스윕 각도 360도-360도 미만 보다 크면 360도 또는-360도 정확 하 게 호는 각각 이루어집니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">예제를 보려면 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The x-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</source>
          <target state="translated">호가 그려지는 타원을 정의하는 사각형 영역의 왼쪽 위 모퉁이에 대한 X좌표입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The y-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</source>
          <target state="translated">호가 그려지는 타원을 정의하는 사각형 영역의 왼쪽 위 모퉁이에 대한 Y좌표입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The width of the rectangular region that defines the ellipse from which the arc is drawn.</source>
          <target state="translated">호가 그려지는 타원을 정의하는 사각형 영역의 너비입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The height of the rectangular region that defines the ellipse from which the arc is drawn.</source>
          <target state="translated">호가 그려지는 타원을 정의하는 사각형 영역의 높이입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The starting angle of the arc, measured in degrees clockwise from the x-axis.</source>
          <target state="translated">X축에서 시계 방향으로 측정한 호의 시작 각도입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The angle between <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> and the end of the arc.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept>과 호의 끝 사이의 각도입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>Appends an elliptical arc to the current figure.</source>
          <target state="translated">타원형 호를 현재 그림에 추가합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.</source>
          <target state="translated">이전 줄 또는 그림에는 곡선 없으면 줄 호의 시작 부분에는 이전 세그먼트의 끝점을 연결에 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The arc is traced along the perimeter of the ellipse bounded by the specified rectangle.</source>
          <target state="translated">지정된 된 사각형에 의해 제한 되는 타원의 경계를 따라 호 추적 됩니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle.</source>
          <target state="translated">원호의 시작점 수가 시작 각도 (0도 각도로) 타원의 x 축에서 시계 방향으로 측정 하 여 결정 됩니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle.</source>
          <target state="translated">끝점은 마찬가지로 스윕 각도의 개수로 시작 지점에서 시계 방향으로 측정 하 여 있습니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</source>
          <target state="translated">스윕 각도 360도-360도 미만 보다 크면 360도 또는-360도 정확 하 게 호는 각각 이루어집니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">예제를 보려면 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Adds a cubic Bézier curve to the current figure.</source>
          <target state="translated">3차원 큐빅 곡선을 현재 그림에 추가합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that represents the starting point of the curve.</source>
          <target state="translated">곡선의 시작점을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that represents the first control point for the curve.</source>
          <target state="translated">곡선의 첫째 제어점을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that represents the second control point for the curve.</source>
          <target state="translated">곡선의 둘째 제어점을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that represents the endpoint of the curve.</source>
          <target state="translated">곡선의 끝점을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
          <source>Adds a cubic Bézier curve to the current figure.</source>
          <target state="translated">3차원 큐빅 곡선을 현재 그림에 추가합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
          <source>The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.</source>
          <target state="translated">입방 형 곡선의 두 번째 및 세 번째 지점을 제어 지점으로 사용 하 여 첫 번째 요소에서 네 번째 지점에 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
          <source>If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</source>
          <target state="translated">이전 줄 또는 곡선 세그먼트 그림에 있는 경우 입방 형 곡선의 시작점에 이전 세그먼트의 끝점을 연결 하는 줄 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29&gt;</ph>.</source>
          <target state="translated">예제를 보려면 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> that represents the starting point of the curve.</source>
          <target state="translated">곡선의 시작점을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> that represents the first control point for the curve.</source>
          <target state="translated">곡선의 첫째 제어점을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> that represents the second control point for the curve.</source>
          <target state="translated">곡선의 둘째 제어점을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> that represents the endpoint of the curve.</source>
          <target state="translated">곡선의 끝점을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
          <source>Adds a cubic Bézier curve to the current figure.</source>
          <target state="translated">3차원 큐빅 곡선을 현재 그림에 추가합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
          <source>The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.</source>
          <target state="translated">입방 형 곡선의 두 번째 및 세 번째 지점을 제어 지점으로 사용 하 여 첫 번째 요소에서 네 번째 지점에 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
          <source>If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</source>
          <target state="translated">이전 줄 또는 곡선 세그먼트 그림에 있는 경우 입방 형 곡선의 시작점에 이전 세그먼트의 끝점을 연결 하는 줄 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29&gt;</ph>.</source>
          <target state="translated">예제를 보려면 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The x-coordinate of the starting point of the curve.</source>
          <target state="translated">곡선의 시작점에 대한 x-좌표입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The y-coordinate of the starting point of the curve.</source>
          <target state="translated">곡선의 시작점에 대한 y-좌표입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The x-coordinate of the first control point for the curve.</source>
          <target state="translated">곡선의 첫째 제어점에 대한 X좌표입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The y-coordinate of the first control point for the curve.</source>
          <target state="translated">곡선의 첫째 제어점에 대한 Y좌표입니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The x-coordinate of the second control point for the curve.</source>
          <target state="translated">곡선의 둘째 제어점에 대한 X좌표입니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The y-coordinate of the second control point for the curve.</source>
          <target state="translated">곡선의 둘째 제어점에 대한 Y좌표입니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The x-coordinate of the endpoint of the curve.</source>
          <target state="translated">곡선의 끝점에 대한 X좌표입니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The y-coordinate of the endpoint of the curve.</source>
          <target state="translated">곡선의 끝점에 대한 Y좌표입니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Adds a cubic Bézier curve to the current figure.</source>
          <target state="translated">3차원 큐빅 곡선을 현재 그림에 추가합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.</source>
          <target state="translated">입방 형 곡선의 두 번째 및 세 번째 지점을 제어 지점으로 사용 하 여 첫 번째 요소에서 네 번째 지점에 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</source>
          <target state="translated">이전 줄 또는 곡선 세그먼트 그림에 있는 경우 입방 형 곡선의 시작점에 이전 세그먼트의 끝점을 연결 하는 줄 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> 이벤트 개체입니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The code performs the following actions:</source>
          <target state="translated">이 코드에서는 다음 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Creates a path.</source>
          <target state="translated">경로 만듭니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Adds a cubic Bézier curve defined by the points (50, 50), (70, 0), (100, 120), and (150, 50) to the path.</source>
          <target state="translated">(50, 50) 점으로 정의 입방 형 베 지 어 곡선을 추가 하는 (70, 0) (100, 120) 및 (150, 50) 경로에 있습니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Closes the curve.</source>
          <target state="translated">곡선을 닫습니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Draws the path to screen.</source>
          <target state="translated">화면에 경로 그립니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The x-coordinate of the starting point of the curve.</source>
          <target state="translated">곡선의 시작점에 대한 x-좌표입니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The y-coordinate of the starting point of the curve.</source>
          <target state="translated">곡선의 시작점에 대한 y-좌표입니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The x-coordinate of the first control point for the curve.</source>
          <target state="translated">곡선의 첫째 제어점에 대한 X좌표입니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The y-coordinate of the first control point for the curve.</source>
          <target state="translated">곡선의 첫째 제어점에 대한 Y좌표입니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The x-coordinate of the second control point for the curve.</source>
          <target state="translated">곡선의 둘째 제어점에 대한 X좌표입니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The y-coordinate of the second control point for the curve.</source>
          <target state="translated">곡선의 둘째 제어점에 대한 Y좌표입니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The x-coordinate of the endpoint of the curve.</source>
          <target state="translated">곡선의 끝점에 대한 X좌표입니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The y-coordinate of the endpoint of the curve.</source>
          <target state="translated">곡선의 끝점에 대한 Y좌표입니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>Adds a cubic Bézier curve to the current figure.</source>
          <target state="translated">3차원 큐빅 곡선을 현재 그림에 추가합니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.</source>
          <target state="translated">입방 형 곡선의 두 번째 및 세 번째 지점을 제어 지점으로 사용 하 여 첫 번째 요소에서 네 번째 지점에 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</source>
          <target state="translated">이전 줄 또는 곡선 세그먼트 그림에 있는 경우 입방 형 곡선의 시작점에 이전 세그먼트의 끝점을 연결 하는 줄 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29&gt;</ph>.</source>
          <target state="translated">예제를 보려면 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Adds a sequence of connected cubic Bézier curves to the current figure.</source>
          <target state="translated">연결된 일련의 3차원 큐빅 곡선을 현재 그림에 추가합니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that represents the points that define the curves.</source>
          <target state="translated">곡선을 정의하는 지점을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> 구조체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])">
          <source>Adds a sequence of connected cubic Bézier curves to the current figure.</source>
          <target state="translated">연결된 일련의 3차원 큐빅 곡선을 현재 그림에 추가합니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])">
          <source>The <ph id="ph1">`points`</ph> parameter specifies an array of endpoints and control points of the connected curves.</source>
          <target state="translated"><ph id="ph1">`points`</ph> 끝점의 배열 및 연결 된 곡선의 제어점 매개 변수를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])">
          <source>The first curve is constructed from the first point to the fourth point in the <ph id="ph1">`points`</ph> array by using the second and third points as control points.</source>
          <target state="translated">첫 번째 곡선은 첫 번째 요소에서 네 번째 요소는 요소는 <ph id="ph1">`points`</ph> 제어 점으로 두 번째 및 세 번째 요소를 사용 하 여 배열입니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])">
          <source>In addition to the endpoint of the previous curve, each subsequent curve in the sequence needs exactly three more points: the next two points in the sequence are control points, and the third is the endpoint for the added curve.</source>
          <target state="translated">이전 곡선의 끝점 외에도 이후의 각 곡선 시퀀스에는 정확히 세 개 이상의 점 만들어야: 시퀀스의 다음 두 지점 제어 요소가 있고 세 번째는 추가 된 곡선의 끝점입니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])">
          <source>If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the first cubic curve in the sequence.</source>
          <target state="translated">이전 줄 또는 그림에는 곡선 없으면 줄 시퀀스의 첫 번째 입방 형 곡선의 시작점에 이전 세그먼트의 끝점을 연결에 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> 이벤트 개체입니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])">
          <source>The code performs the following actions:</source>
          <target state="translated">이 코드에서는 다음 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])">
          <source>Creates an array of seven points (representing two connected Bézier curves).</source>
          <target state="translated">7 개의 점이 (두 개의 연결 된 베 지 어 곡선을 나타냄)의 배열을 만듭니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])">
          <source>Creates a path and adds the series of Bézier curve points to the path.</source>
          <target state="translated">경로 만들고 경로를 일련의 베 지 어 곡선 요소를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])">
          <source>Draws the path to screen.</source>
          <target state="translated">화면에 경로 그립니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.PointF[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that represents the points that define the curves.</source>
          <target state="translated">곡선을 정의하는 지점을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> 구조체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.PointF[])">
          <source>Adds a sequence of connected cubic Bézier curves to the current figure.</source>
          <target state="translated">연결된 일련의 3차원 큐빅 곡선을 현재 그림에 추가합니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.PointF[])">
          <source>The <ph id="ph1">`points`</ph> parameter specifies an array of endpoints and control points of the connected curves.</source>
          <target state="translated"><ph id="ph1">`points`</ph> 끝점의 배열 및 연결 된 곡선의 제어점 매개 변수를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.PointF[])">
          <source>The first curve is constructed from the first point to the fourth point in the <ph id="ph1">`points`</ph> array by using the second and third points as control points.</source>
          <target state="translated">첫 번째 곡선은 첫 번째 요소에서 네 번째 요소는 요소는 <ph id="ph1">`points`</ph> 제어 점으로 두 번째 및 세 번째 요소를 사용 하 여 배열입니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.PointF[])">
          <source>In addition to the endpoint of the previous curve, each subsequent curve in the sequence needs exactly three more points: the next two points in the sequence are control points, and the third is the endpoint for the added curve.</source>
          <target state="translated">이전 곡선의 끝점 외에도 이후의 각 곡선 시퀀스에는 정확히 세 개 이상의 점 만들어야: 시퀀스의 다음 두 지점 제어 요소가 있고 세 번째는 추가 된 곡선의 끝점입니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.PointF[])">
          <source>If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the first cubic curve in the sequence.</source>
          <target state="translated">이전 줄 또는 그림에는 곡선 없으면 줄 시퀀스의 첫 번째 입방 형 곡선의 시작점에 이전 세그먼트의 끝점을 연결에 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.PointF[])">
          <source>For an example see:</source>
          <target state="translated">예제에서는 참조 하세요.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Adds a closed curve to this path.</source>
          <target state="translated">닫힌 곡선을 이 경로에 추가합니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>A cardinal spline curve is used because the curve travels through each of the points in the array.</source>
          <target state="translated">곡선이 배열에 있는 각 지점을 모두 지나므로 카디널 스플라인 곡선이 사용됩니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that represents the points that define the curve.</source>
          <target state="translated">곡선을 정의하는 지점을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> 구조체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[])">
          <source>Adds a closed curve to this path.</source>
          <target state="translated">닫힌 곡선을 이 경로에 추가합니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[])">
          <source>A cardinal spline curve is used because the curve travels through each of the points in the array.</source>
          <target state="translated">곡선이 배열에 있는 각 지점을 모두 지나므로 카디널 스플라인 곡선이 사용됩니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[])">
          <source>The user must keep the original points if they are needed.</source>
          <target state="translated">사용자는 필요할 경우 원래 포인트를 유지 해야 합니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[])">
          <source>The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</source>
          <target state="translated">원점은 입방 형 3 차원 곡선 제어점을 내부적으로 변환 됩니다, 그리고 있어서 원점은 메커니즘이 없습니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[])">
          <source>If the first point and the last point in the <ph id="ph1">`points`</ph> array are not the same point, the curve is closed by connecting these two points.</source>
          <target state="translated">경우는 첫 번째 지점과 마지막에 <ph id="ph1">`points`</ph> 배열 동일한 점 없는, 이러한 두 개의 점을 연결 하 여 곡선 닫혀 있습니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[])">
          <source>The tension value cannot be set for this method, and defaults to a value equivalent to 0.5.</source>
          <target state="translated">이 메서드에 대 한 압력 값을 설정할 수 없습니다 및 0.5에 해당 하는 값을 기본값으로 설정 합니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[])">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">예제를 보려면 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that represents the points that define the curve.</source>
          <target state="translated">곡선을 정의하는 지점을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> 구조체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[])">
          <source>Adds a closed curve to this path.</source>
          <target state="translated">닫힌 곡선을 이 경로에 추가합니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[])">
          <source>A cardinal spline curve is used because the curve travels through each of the points in the array.</source>
          <target state="translated">곡선이 배열에 있는 각 지점을 모두 지나므로 카디널 스플라인 곡선이 사용됩니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[])">
          <source>The user must keep the original points if they are needed.</source>
          <target state="translated">사용자는 필요할 경우 원래 포인트를 유지 해야 합니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[])">
          <source>The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</source>
          <target state="translated">원점은 입방 형 3 차원 곡선 제어점을 내부적으로 변환 됩니다, 그리고 있어서 원점은 메커니즘이 없습니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[])">
          <source>If the first point and the last point in the <ph id="ph1">`points`</ph> array are not the same point, the curve is closed by connecting these two points.</source>
          <target state="translated">경우는 첫 번째 지점과 마지막에 <ph id="ph1">`points`</ph> 배열 동일한 점 없는, 이러한 두 개의 점을 연결 하 여 곡선 닫혀 있습니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[])">
          <source>The tension value cannot be set for this method, and defaults to a value equivalent to 0.5.</source>
          <target state="translated">이 메서드에 대 한 압력 값을 설정할 수 없습니다 및 0.5에 해당 하는 값을 기본값으로 설정 합니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[])">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">예제를 보려면 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that represents the points that define the curve.</source>
          <target state="translated">곡선을 정의하는 지점을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> 구조체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)">
          <source>A value between from 0 through 1 that specifies the amount that the curve bends between points, with 0 being the smallest curve (sharpest corner) and 1 being the smoothest curve.</source>
          <target state="translated">지점들 사이에서 곡률을 지정하는 0에서 1 사이의 값으로, 0 값에 가까울수록 각지고 1에 가까울수록 완만합니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)">
          <source>Adds a closed curve to this path.</source>
          <target state="translated">닫힌 곡선을 이 경로에 추가합니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)">
          <source>A cardinal spline curve is used because the curve travels through each of the points in the array.</source>
          <target state="translated">곡선이 배열에 있는 각 지점을 모두 지나므로 카디널 스플라인 곡선이 사용됩니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)">
          <source>The user must keep the original points if they are needed.</source>
          <target state="translated">사용자는 필요할 경우 원래 포인트를 유지 해야 합니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)">
          <source>The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</source>
          <target state="translated">원점은 입방 형 3 차원 곡선 제어점을 내부적으로 변환 됩니다, 그리고 있어서 원점은 메커니즘이 없습니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)">
          <source>If the first point and the last point in the <ph id="ph1">`points`</ph> array are not the same point, the curve is closed by connecting these two points.</source>
          <target state="translated">경우는 첫 번째 지점과 마지막에 <ph id="ph1">`points`</ph> 배열 동일한 점 없는, 이러한 두 개의 점을 연결 하 여 곡선 닫혀 있습니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> 이벤트 개체입니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)">
          <source>The code performs the following actions:</source>
          <target state="translated">이 코드에서는 다음 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)">
          <source>Creates an array of six points (representing a cardinal spline).</source>
          <target state="translated">6 개의 점 (카디널 스플라인을 나타냄)의 배열을 만듭니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)">
          <source>Creates a path and adds the closed cardinal spline curves to the path (closed from the endpoint to the starting point).</source>
          <target state="translated">경로 만들어 (시작 지점으로 끝점에서 닫힘) 경로에 폐쇄형된 카디널 스플라인 곡선을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)">
          <source>Draws the path to screen.</source>
          <target state="translated">화면에 경로 그립니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)">
          <source>Notice that a tension of 0.5 is used.</source>
          <target state="translated">0.5의 장력 사용 됨을 확인 합니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[],System.Single)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that represents the points that define the curve.</source>
          <target state="translated">곡선을 정의하는 지점을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> 구조체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[],System.Single)">
          <source>A value between from 0 through 1 that specifies the amount that the curve bends between points, with 0 being the smallest curve (sharpest corner) and 1 being the smoothest curve.</source>
          <target state="translated">지점들 사이에서 곡률을 지정하는 0에서 1 사이의 값으로, 0 값에 가까울수록 각지고 1에 가까울수록 완만합니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[],System.Single)">
          <source>Adds a closed curve to this path.</source>
          <target state="translated">닫힌 곡선을 이 경로에 추가합니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[],System.Single)">
          <source>A cardinal spline curve is used because the curve travels through each of the points in the array.</source>
          <target state="translated">곡선이 배열에 있는 각 지점을 모두 지나므로 카디널 스플라인 곡선이 사용됩니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[],System.Single)">
          <source>The user must keep the original points if they are needed.</source>
          <target state="translated">사용자는 필요할 경우 원래 포인트를 유지 해야 합니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[],System.Single)">
          <source>The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</source>
          <target state="translated">원점은 입방 형 3 차원 곡선 제어점을 내부적으로 변환 됩니다, 그리고 있어서 원점은 메커니즘이 없습니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[],System.Single)">
          <source>If the first point and the last point in the <ph id="ph1">`points`</ph> array are not the same point, the curve is closed by connecting these two points.</source>
          <target state="translated">경우는 첫 번째 지점과 마지막에 <ph id="ph1">`points`</ph> 배열 동일한 점 없는, 이러한 두 개의 점을 연결 하 여 곡선 닫혀 있습니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[],System.Single)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">예제를 보려면 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Adds a spline curve to the current figure.</source>
          <target state="translated">스플라인 곡선을 현재 그림에 추가합니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>A cardinal spline curve is used because the curve travels through each of the points in the array.</source>
          <target state="translated">곡선이 배열에 있는 각 지점을 모두 지나므로 카디널 스플라인 곡선이 사용됩니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that represents the points that define the curve.</source>
          <target state="translated">곡선을 정의하는 지점을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> 구조체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[])">
          <source>Adds a spline curve to the current figure.</source>
          <target state="translated">스플라인 곡선을 현재 그림에 추가합니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[])">
          <source>A cardinal spline curve is used because the curve travels through each of the points in the array.</source>
          <target state="translated">곡선이 배열에 있는 각 지점을 모두 지나므로 카디널 스플라인 곡선이 사용됩니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[])">
          <source>The user must keep the original points if they are needed.</source>
          <target state="translated">사용자는 필요할 경우 원래 포인트를 유지 해야 합니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[])">
          <source>The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</source>
          <target state="translated">원점은 입방 형 3 차원 곡선 제어점을 내부적으로 변환 됩니다, 그리고 있어서 원점은 메커니즘이 없습니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[])">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">예제를 보려면 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that represents the points that define the curve.</source>
          <target state="translated">곡선을 정의하는 지점을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> 구조체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[])">
          <source>Adds a spline curve to the current figure.</source>
          <target state="translated">스플라인 곡선을 현재 그림에 추가합니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[])">
          <source>A cardinal spline curve is used because the curve travels through each of the points in the array.</source>
          <target state="translated">곡선이 배열에 있는 각 지점을 모두 지나므로 카디널 스플라인 곡선이 사용됩니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[])">
          <source>The user must keep the original points if they are needed.</source>
          <target state="translated">사용자는 필요할 경우 원래 포인트를 유지 해야 합니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[])">
          <source>The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</source>
          <target state="translated">원점은 입방 형 3 차원 곡선 제어점을 내부적으로 변환 됩니다, 그리고 있어서 원점은 메커니즘이 없습니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[])">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">예제를 보려면 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Single)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that represents the points that define the curve.</source>
          <target state="translated">곡선을 정의하는 지점을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> 구조체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Single)">
          <source>A value that specifies the amount that the curve bends between control points.</source>
          <target state="translated">제어점 사이의 곡률을 지정하는 값입니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Single)">
          <source>Values greater than 1 produce unpredictable results.</source>
          <target state="translated">1보다 큰 값을 설정하면 예기치 않은 결과가 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Single)">
          <source>Adds a spline curve to the current figure.</source>
          <target state="translated">스플라인 곡선을 현재 그림에 추가합니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Single)">
          <source>The user must keep the original points if they are needed.</source>
          <target state="translated">사용자는 필요할 경우 원래 포인트를 유지 해야 합니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Single)">
          <source>The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</source>
          <target state="translated">원점은 입방 형 3 차원 곡선 제어점을 내부적으로 변환 됩니다, 그리고 있어서 원점은 메커니즘이 없습니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Single)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">예제를 보려면 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Single)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that represents the points that define the curve.</source>
          <target state="translated">곡선을 정의하는 지점을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> 구조체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Single)">
          <source>A value that specifies the amount that the curve bends between control points.</source>
          <target state="translated">제어점 사이의 곡률을 지정하는 값입니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Single)">
          <source>Values greater than 1 produce unpredictable results.</source>
          <target state="translated">1보다 큰 값을 설정하면 예기치 않은 결과가 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Single)">
          <source>Adds a spline curve to the current figure.</source>
          <target state="translated">스플라인 곡선을 현재 그림에 추가합니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Single)">
          <source>The user must keep the original points if they are needed.</source>
          <target state="translated">사용자는 필요할 경우 원래 포인트를 유지 해야 합니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Single)">
          <source>The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</source>
          <target state="translated">원점은 입방 형 3 차원 곡선 제어점을 내부적으로 변환 됩니다, 그리고 있어서 원점은 메커니즘이 없습니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Single)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">예제를 보려면 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that represents the points that define the curve.</source>
          <target state="translated">곡선을 정의하는 지점을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> 구조체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>The index of the element in the <bpt id="p1">&lt;c&gt;</bpt>points<ept id="p1">&lt;/c&gt;</ept> array that is used as the first point in the curve.</source>
          <target state="translated">곡선의 첫째 지점으로 사용되는 <bpt id="p1">&lt;c&gt;</bpt>지점<ept id="p1">&lt;/c&gt;</ept> 배열에 있는 요소의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>A value that specifies the amount that the curve bends between control points.</source>
          <target state="translated">제어점 사이의 곡률을 지정하는 값입니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>Values greater than 1 produce unpredictable results.</source>
          <target state="translated">1보다 큰 값을 설정하면 예기치 않은 결과가 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>A value that specifies the amount that the curve bends between control points.</source>
          <target state="translated">제어점 사이의 곡률을 지정하는 값입니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>Values greater than 1 produce unpredictable results.</source>
          <target state="translated">1보다 큰 값을 설정하면 예기치 않은 결과가 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>Adds a spline curve to the current figure.</source>
          <target state="translated">스플라인 곡선을 현재 그림에 추가합니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>The user must keep the original points if they are needed.</source>
          <target state="translated">사용자는 필요할 경우 원래 포인트를 유지 해야 합니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</source>
          <target state="translated">원점은 입방 형 3 차원 곡선 제어점을 내부적으로 변환 됩니다, 그리고 있어서 원점은 메커니즘이 없습니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>The curve begins at the point in the array specified by the <ph id="ph1">`offset`</ph> parameter and includes the number of points (segments) specified by <ph id="ph2">`numberOfSegments`</ph>.</source>
          <target state="translated">변수로 지정 된 배열에 대 한 지점에서 시작 하는 곡선은 <ph id="ph1">`offset`</ph> 매개 변수에서 지정한 지점 (세그먼트)의 수를 포함 <ph id="ph2">`numberOfSegments`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> 이벤트 개체입니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>The code performs the following actions:</source>
          <target state="translated">이 코드에서는 다음 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>Creates an array of four points (representing a cardinal spline).</source>
          <target state="translated">(카디널 스플라인을 나타내는) 4 개 요소의 배열을 만듭니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>Creates a path and using the array of points, adds the curve to the path.</source>
          <target state="translated">경로 만들고 점의 배열을 사용 하 여, 곡선 경로에 추가 합니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>Draws the path to the screen.</source>
          <target state="translated">화면에 경로 그립니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>Notice that while the array holds four points, there are only three segments, which is the number specified in the third argument of the call to <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%2A&gt;</ph>.</source>
          <target state="translated">배열에는 점이 4 개 저장, 동안 되 세그먼트에 대 한 호출의 세 번째 인수에 지정 된 수는 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that represents the points that define the curve.</source>
          <target state="translated">곡선을 정의하는 지점을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> 구조체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>The index of the element in the <bpt id="p1">&lt;c&gt;</bpt>points<ept id="p1">&lt;/c&gt;</ept> array that is used as the first point in the curve.</source>
          <target state="translated">곡선의 첫째 지점으로 사용되는 <bpt id="p1">&lt;c&gt;</bpt>지점<ept id="p1">&lt;/c&gt;</ept> 배열에 있는 요소의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>The number of segments used to draw the curve.</source>
          <target state="translated">곡선을 그리는 데 사용되는 세그먼트 수입니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>A segment can be thought of as a line connecting two points.</source>
          <target state="translated">세그먼트는 두 지점을 연결하는 선입니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>A value that specifies the amount that the curve bends between control points.</source>
          <target state="translated">제어점 사이의 곡률을 지정하는 값입니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>Values greater than 1 produce unpredictable results.</source>
          <target state="translated">1보다 큰 값을 설정하면 예기치 않은 결과가 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>Adds a spline curve to the current figure.</source>
          <target state="translated">스플라인 곡선을 현재 그림에 추가합니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>The user must keep the original points if they are needed.</source>
          <target state="translated">사용자는 필요할 경우 원래 포인트를 유지 해야 합니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</source>
          <target state="translated">원점은 입방 형 3 차원 곡선 제어점을 내부적으로 변환 됩니다, 그리고 있어서 원점은 메커니즘이 없습니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>The curve begins at the point in the array specified by <ph id="ph1">`offset`</ph>, and includes the number of points (segments) specified by <ph id="ph2">`numberOfSegments`</ph>.</source>
          <target state="translated">변수로 지정 된 배열에 대 한 지점에서 시작 하는 곡선 <ph id="ph1">`offset`</ph>, 점 (세그먼트)로 지정 된 개수를 포함 하 고 <ph id="ph2">`numberOfSegments`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">예제를 보려면 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Adds an ellipse to the current path.</source>
          <target state="translated">타원을 현재 경로에 추가합니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.Rectangle)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that represents the bounding rectangle that defines the ellipse.</source>
          <target state="translated">타원을 정의하는 경계 사각형을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.Rectangle)">
          <source>Adds an ellipse to the current path.</source>
          <target state="translated">타원을 현재 경로에 추가합니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.Rectangle)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> 이벤트 개체입니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.Rectangle)">
          <source>The code performs the following actions:</source>
          <target state="translated">이 코드에서는 다음 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.Rectangle)">
          <source>Creates a bounding rectangle that defines an ellipse.</source>
          <target state="translated">타원을 정의 하는 경계 사각형을 만듭니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.Rectangle)">
          <source>Creates a path and adds the ellipse to the path.</source>
          <target state="translated">경로 만들고 타원 경로에 추가 합니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.Rectangle)">
          <source>Draws the path to screen.</source>
          <target state="translated">화면에 경로 그립니다.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.RectangleF)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> that represents the bounding rectangle that defines the ellipse.</source>
          <target state="translated">타원을 정의하는 경계 사각형을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.RectangleF)">
          <source>Adds an ellipse to the current path.</source>
          <target state="translated">타원을 현재 경로에 추가합니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.RectangleF)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29&gt;</ph>.</source>
          <target state="translated">예제를 보려면 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</source>
          <target state="translated">타원을 정의하는 경계 사각형의 왼쪽 위 모퉁이에 대한 x-좌표입니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</source>
          <target state="translated">타원을 정의하는 경계 사각형의 왼쪽 위 모퉁이에 대한 y-좌표입니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The width of the bounding rectangle that defines the ellipse.</source>
          <target state="translated">타원을 정의하는 경계 사각형의 너비입니다.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The height of the bounding rectangle that defines the ellipse.</source>
          <target state="translated">타원을 정의하는 경계 사각형의 높이입니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Adds an ellipse to the current path.</source>
          <target state="translated">타원을 현재 경로에 추가합니다.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29&gt;</ph>.</source>
          <target state="translated">예제를 보려면 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Single,System.Single,System.Single,System.Single)">
          <source>The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</source>
          <target state="translated">타원을 정의하는 경계 사각형의 왼쪽 위 모퉁이에 대한 x-좌표입니다.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Single,System.Single,System.Single,System.Single)">
          <source>The y-coordinate of the upper left corner of the bounding rectangle that defines the ellipse.</source>
          <target state="translated">타원을 정의하는 경계 사각형의 왼쪽 위 모퉁이에 대한 Y좌표입니다.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Single,System.Single,System.Single,System.Single)">
          <source>The width of the bounding rectangle that defines the ellipse.</source>
          <target state="translated">타원을 정의하는 경계 사각형의 너비입니다.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Single,System.Single,System.Single,System.Single)">
          <source>The height of the bounding rectangle that defines the ellipse.</source>
          <target state="translated">타원을 정의하는 경계 사각형의 높이입니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Single,System.Single,System.Single,System.Single)">
          <source>Adds an ellipse to the current path.</source>
          <target state="translated">타원을 현재 경로에 추가합니다.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Single,System.Single,System.Single,System.Single)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29&gt;</ph>.</source>
          <target state="translated">예제를 보려면 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Appends a line segment to this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">선 세그먼트를 이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>에 추가합니다.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.Point,System.Drawing.Point)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that represents the starting point of the line.</source>
          <target state="translated">선의 시작점을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.Point,System.Drawing.Point)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that represents the endpoint of the line.</source>
          <target state="translated">선의 끝점을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.Point,System.Drawing.Point)">
          <source>Appends a line segment to this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">선 세그먼트를 이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>에 추가합니다.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.Point,System.Drawing.Point)">
          <source>This method adds the line segment defined by the specified points to the end of this <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>.</source>
          <target state="translated">이 메서드는이 항목의 끝에 지정된 된 요소에 정의 된 선 세그먼트를 추가 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.Point,System.Drawing.Point)">
          <source>If there are previous lines or curves in the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</source>
          <target state="translated">이전 줄 또는 곡선에 있는 경우는 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>, 경로에 마지막 지점 하 고 첫 번째 새 선 세그먼트에 연결 하는 선 세그먼트 그려집니다.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.Point,System.Drawing.Point)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29&gt;</ph>.</source>
          <target state="translated">예제를 보려면 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.PointF,System.Drawing.PointF)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> that represents the starting point of the line.</source>
          <target state="translated">선의 시작점을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.PointF,System.Drawing.PointF)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> that represents the endpoint of the line.</source>
          <target state="translated">선의 끝점을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.PointF,System.Drawing.PointF)">
          <source>Appends a line segment to this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">선 세그먼트를 이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>에 추가합니다.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.PointF,System.Drawing.PointF)">
          <source>This method adds the line segment defined by the specified points to the end of this <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>.</source>
          <target state="translated">이 메서드는이 항목의 끝에 지정된 된 요소에 정의 된 선 세그먼트를 추가 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.PointF,System.Drawing.PointF)">
          <source>If there are previous lines or curves in the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</source>
          <target state="translated">이전 줄 또는 곡선에 있는 경우는 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>, 경로에 마지막 지점 하 고 첫 번째 새 선 세그먼트에 연결 하는 선 세그먼트 그려집니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.PointF,System.Drawing.PointF)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29&gt;</ph>.</source>
          <target state="translated">예제를 보려면 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The x-coordinate of the starting point of the line.</source>
          <target state="translated">선의 시작점에 대한 X좌표입니다.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The y-coordinate of the starting point of the line.</source>
          <target state="translated">선의 시작점에 대한 Y좌표입니다.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The x-coordinate of the endpoint of the line.</source>
          <target state="translated">선의 끝점에 대한 X좌표입니다.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The y-coordinate of the endpoint of the line.</source>
          <target state="translated">선의 끝점에 대한 Y좌표입니다.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Appends a line segment to the current figure.</source>
          <target state="translated">선 세그먼트를 현재 그림에 추가합니다.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>This method adds the line segment defined by the specified points to the end of the current figure.</source>
          <target state="translated">이 메서드는 현재 그림의 끝에 지정된 된 요소에 정의 된 선 세그먼트를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>If there are previous lines or curves in the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</source>
          <target state="translated">이전 줄 또는 곡선에 있는 경우는 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>, 경로에 마지막 지점 하 고 첫 번째 새 선 세그먼트에 연결 하는 선 세그먼트 그려집니다.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> 이벤트 개체입니다.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The code creates a path, adds three lines that form a triangle, and then draws the path to the screen.</source>
          <target state="translated">코드 경로 만든 다음는 삼각형을 형성 하는 세 개의 선을 추가한 다음 화면으로 경로 그립니다.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Single,System.Single,System.Single,System.Single)">
          <source>The x-coordinate of the starting point of the line.</source>
          <target state="translated">선의 시작점에 대한 X좌표입니다.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Single,System.Single,System.Single,System.Single)">
          <source>The y-coordinate of the starting point of the line.</source>
          <target state="translated">선의 시작점에 대한 Y좌표입니다.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Single,System.Single,System.Single,System.Single)">
          <source>The x-coordinate of the endpoint of the line.</source>
          <target state="translated">선의 끝점에 대한 X좌표입니다.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Single,System.Single,System.Single,System.Single)">
          <source>The y-coordinate of the endpoint of the line.</source>
          <target state="translated">선의 끝점에 대한 Y좌표입니다.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Single,System.Single,System.Single,System.Single)">
          <source>Appends a line segment to this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">선 세그먼트를 이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>에 추가합니다.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Single,System.Single,System.Single,System.Single)">
          <source>This method adds the line segment defined by the specified points to the end of this <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>.</source>
          <target state="translated">이 메서드는이 항목의 끝에 지정된 된 요소에 정의 된 선 세그먼트를 추가 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Single,System.Single,System.Single,System.Single)">
          <source>If there are previous lines or curves in the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</source>
          <target state="translated">이전 줄 또는 곡선에 있는 경우는 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>, 경로에 마지막 지점 하 고 첫 번째 새 선 세그먼트에 연결 하는 선 세그먼트 그려집니다.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Single,System.Single,System.Single,System.Single)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29&gt;</ph>.</source>
          <target state="translated">예제를 보려면 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Appends a series of connected line segments to the end of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">연결된 일련의 선 세그먼트를 이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>의 끝에 추가합니다.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that represents the points that define the line segments to add.</source>
          <target state="translated">추가할 선 세그먼트를 정의하는 지점을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> 구조체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])">
          <source>Appends a series of connected line segments to the end of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">연결된 일련의 선 세그먼트를 이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>의 끝에 추가합니다.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])">
          <source>If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment the starting point of the line.</source>
          <target state="translated">이전 줄 또는 그림에는 곡선 없으면 줄 줄의 시작 지점 이전 세그먼트의 끝점에 연결할 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])">
          <source>The <ph id="ph1">`points`</ph> parameter specifies an array of endpoints.</source>
          <target state="translated"><ph id="ph1">`points`</ph> 매개 변수는 끝점의 배열을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])">
          <source>The first two specify the first line.</source>
          <target state="translated">처음 두 첫 번째 줄을 지정합니다.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])">
          <source>Each additional point specifies the endpoint of a line segment whose starting point is the endpoint of the previous line.</source>
          <target state="translated">각 추가 지점은 이전 줄의 끝점이 인 선 세그먼트의 끝점을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> 이벤트 개체입니다.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])">
          <source>The code performs the following actions:</source>
          <target state="translated">이 코드에서는 다음 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])">
          <source>Creates an array of four points that describe a triangle.</source>
          <target state="translated">삼각형을 설명 하는 4 개 요소의 배열을 만듭니다.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])">
          <source>Creates a path and adds the array of lines.</source>
          <target state="translated">경로 만들고 줄의 배열을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])">
          <source>Draws the path to screen.</source>
          <target state="translated">화면에 경로 그립니다.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])">
          <source>Notice that each line after the first point uses the previous point as the starting point and the new point as the endpoint.</source>
          <target state="translated">첫 번째 지점 이후의 각 줄에서는 이전 지점 시작 지점 및 새 지점으로 끝점으로 확인 합니다.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.PointF[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that represents the points that define the line segments to add.</source>
          <target state="translated">추가할 선 세그먼트를 정의하는 지점을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> 구조체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.PointF[])">
          <source>Appends a series of connected line segments to the end of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">연결된 일련의 선 세그먼트를 이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>의 끝에 추가합니다.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.PointF[])">
          <source>If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment the starting point of the line.</source>
          <target state="translated">이전 줄 또는 그림에는 곡선 없으면 줄 줄의 시작 지점 이전 세그먼트의 끝점에 연결할 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.PointF[])">
          <source>The <ph id="ph1">`points`</ph> parameter specifies an array of endpoints.</source>
          <target state="translated"><ph id="ph1">`points`</ph> 매개 변수는 끝점의 배열을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.PointF[])">
          <source>The first two specify the first line.</source>
          <target state="translated">처음 두 첫 번째 줄을 지정합니다.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.PointF[])">
          <source>Each additional point specifies the endpoint of a line segment whose starting point is the endpoint of the previous line.</source>
          <target state="translated">각 추가 지점은 이전 줄의 끝점이 인 선 세그먼트의 끝점을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.PointF[])">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddLines%28System.Drawing.Point%5B%5D%29&gt;</ph>.</source>
          <target state="translated">예제를 보려면 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddLines%28System.Drawing.Point%5B%5D%29&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> to add.</source>
          <target state="translated">추가할 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)">
          <source>A Boolean value that specifies whether the first figure in the added path is part of the last figure in this path.</source>
          <target state="translated">추가된 경로에 있는 첫째 그림이 이 경로에 있는 마지막 그림의 일부인지 여부를 지정하는 부울 값입니다.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)">
          <source>A value of <ph id="ph1">&lt;see langword="true" /&gt;</ph> specifies that (if possible) the first figure in the added path is part of the last figure in this path.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>로 설정하면 추가된 경로에 있는 첫째 그림이 이 경로에 있는 마지막 그림의 일부가 되고,</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)">
          <source>A value of <ph id="ph1">&lt;see langword="false" /&gt;</ph> specifies that the first figure in the added path is separate from the last figure in this path.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="false" /&gt;</ph>로 설정하면 추가된 경로에 있는 첫째 그림이 이 경로에 있는 마지막 그림과 별개가 됩니다.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)">
          <source>Appends the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> to this path.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>를 이 경로에 추가합니다.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> 이벤트 개체입니다.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)">
          <source>The code performs the following actions:</source>
          <target state="translated">이 코드에서는 다음 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)">
          <source>Creates two paths one a right-side-up triangle and the other an up-side-down triangle.</source>
          <target state="translated">오른쪽 쪽 위쪽 삼각형 오류 코드 및 기타 프로그램 위쪽-삼각형 두 개의 경로 하나를 만듭니다.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)">
          <source>Adds the second path to the first.</source>
          <target state="translated">첫 번째와 두 번째 경로 추가합니다.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)">
          <source>Draws the resultant path to the screen.</source>
          <target state="translated">결과 경로 화면을 그립니다.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Adds the outline of a pie shape to this path.</source>
          <target state="translated">이 경로에 부채꼴 모양의 윤곽선을 추가합니다.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that represents the bounding rectangle that defines the ellipse from which the pie is drawn.</source>
          <target state="translated">부채꼴이 그려지는 타원을 정의하는 경계 사각형을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>The starting angle for the pie section, measured in degrees clockwise from the x-axis.</source>
          <target state="translated">X축에서 시계 방향으로 측정한 부채꼴의 시작 각도입니다.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>The angle between <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> and the end of the pie section, measured in degrees clockwise from <bpt id="p2">&lt;c&gt;</bpt>startAngle<ept id="p2">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept>과 부채꼴 끝 사이의 각도이며, <bpt id="p2">&lt;c&gt;</bpt>startAngle<ept id="p2">&lt;/c&gt;</ept>에서 시계 방향으로 측정한 값입니다.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>Adds the outline of a pie shape to this path.</source>
          <target state="translated">이 경로에 부채꼴 모양의 윤곽선을 추가합니다.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>The pie shape is defined by a partial outline of an ellipse and the two radial lines that intersect the endpoints of the partial outline.</source>
          <target state="translated">원형 도형이 일부 윤곽선의 끝점을 교차 하는 두 개의 방사형 선에 타원의 부분 개요에 의해 정의 됩니다.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>The partial outline begins at <ph id="ph1">`startAngle`</ph> (measured clockwise from the x-axis) and ends at <ph id="ph2">`startAngle`</ph><ph id="ph3"> + </ph><ph id="ph4">`sweepAngle`</ph>.</source>
          <target state="translated">시작 하는 일부 윤곽선 <ph id="ph1">`startAngle`</ph> (x 축에서 시계 방향으로 측정)에서 끝나고 <ph id="ph2">`startAngle`</ph> <ph id="ph3"> + </ph> <ph id="ph4">`sweepAngle`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">예제를 보려면 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</source>
          <target state="translated">부채꼴이 그려지는 타원을 정의하는 경계 사각형의 왼쪽 위 모퉁이에 대한 X좌표입니다.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</source>
          <target state="translated">부채꼴이 그려지는 타원을 정의하는 경계 사각형의 왼쪽 위 모퉁이에 대한 Y좌표입니다.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The width of the bounding rectangle that defines the ellipse from which the pie is drawn.</source>
          <target state="translated">부채꼴이 그려지는 타원을 정의하는 경계 사각형의 너비입니다.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The height of the bounding rectangle that defines the ellipse from which the pie is drawn.</source>
          <target state="translated">부채꼴이 그려지는 타원을 정의하는 경계 사각형의 높이입니다.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The starting angle for the pie section, measured in degrees clockwise from the x-axis.</source>
          <target state="translated">X축에서 시계 방향으로 측정한 부채꼴의 시작 각도입니다.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The angle between <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> and the end of the pie section, measured in degrees clockwise from <bpt id="p2">&lt;c&gt;</bpt>startAngle<ept id="p2">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept>과 부채꼴 끝 사이의 각도이며, <bpt id="p2">&lt;c&gt;</bpt>startAngle<ept id="p2">&lt;/c&gt;</ept>에서 시계 방향으로 측정한 값입니다.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>Adds the outline of a pie shape to this path.</source>
          <target state="translated">이 경로에 부채꼴 모양의 윤곽선을 추가합니다.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The pie shape is defined by a partial outline of an ellipse and the two radial lines that intersect the endpoints of the partial outline.</source>
          <target state="translated">원형 도형이 일부 윤곽선의 끝점을 교차 하는 두 개의 방사형 선에 타원의 부분 개요에 의해 정의 됩니다.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The partial outline begins at <ph id="ph1">`startAngle`</ph> (measured clockwise from the x-axis) and ends at <ph id="ph2">`startAngle`</ph><ph id="ph3"> + </ph><ph id="ph4">`sweepAngle`</ph>.</source>
          <target state="translated">시작 하는 일부 윤곽선 <ph id="ph1">`startAngle`</ph> (x 축에서 시계 방향으로 측정)에서 끝나고 <ph id="ph2">`startAngle`</ph> <ph id="ph3"> + </ph> <ph id="ph4">`sweepAngle`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> 이벤트 개체입니다.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The code creates a graphics path, adds the pie shape, and then draws the path to the screen.</source>
          <target state="translated">코드 그래픽 경로 만든 다음, 원형 셰이프를 추가 하는 다음 화면으로 경로 그립니다.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</source>
          <target state="translated">부채꼴이 그려지는 타원을 정의하는 경계 사각형의 왼쪽 위 모퉁이에 대한 X좌표입니다.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</source>
          <target state="translated">부채꼴이 그려지는 타원을 정의하는 경계 사각형의 왼쪽 위 모퉁이에 대한 Y좌표입니다.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The width of the bounding rectangle that defines the ellipse from which the pie is drawn.</source>
          <target state="translated">부채꼴이 그려지는 타원을 정의하는 경계 사각형의 너비입니다.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The height of the bounding rectangle that defines the ellipse from which the pie is drawn.</source>
          <target state="translated">부채꼴이 그려지는 타원을 정의하는 경계 사각형의 높이입니다.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The starting angle for the pie section, measured in degrees clockwise from the x-axis.</source>
          <target state="translated">X축에서 시계 방향으로 측정한 부채꼴의 시작 각도입니다.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The angle between <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> and the end of the pie section, measured in degrees clockwise from <bpt id="p2">&lt;c&gt;</bpt>startAngle<ept id="p2">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept>과 부채꼴 끝 사이의 각도이며, <bpt id="p2">&lt;c&gt;</bpt>startAngle<ept id="p2">&lt;/c&gt;</ept>에서 시계 방향으로 측정한 값입니다.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>Adds the outline of a pie shape to this path.</source>
          <target state="translated">이 경로에 부채꼴 모양의 윤곽선을 추가합니다.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The pie shape is defined by a partial outline of an ellipse and the two radial lines that intersect the endpoints of the partial outline.</source>
          <target state="translated">원형 도형이 일부 윤곽선의 끝점을 교차 하는 두 개의 방사형 선에 타원의 부분 개요에 의해 정의 됩니다.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The partial outline begins at <ph id="ph1">`startAngle`</ph> (measured clockwise from the x-axis) and ends at <ph id="ph2">`startAngle`</ph><ph id="ph3"> + </ph><ph id="ph4">`sweepAngle`</ph>.</source>
          <target state="translated">시작 하는 일부 윤곽선 <ph id="ph1">`startAngle`</ph> (x 축에서 시계 방향으로 측정)에서 끝나고 <ph id="ph2">`startAngle`</ph> <ph id="ph3"> + </ph> <ph id="ph4">`sweepAngle`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">예제를 보려면 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Adds a polygon to this path.</source>
          <target state="translated">이 경로에 다각형을 추가합니다.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that defines the polygon to add.</source>
          <target state="translated">추가할 다각형을 정의하는 <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> 구조체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])">
          <source>Adds a polygon to this path.</source>
          <target state="translated">이 경로에 다각형을 추가합니다.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])">
          <source>The points in the <ph id="ph1">`points`</ph> array specify the vertices of a polygon.</source>
          <target state="translated">에 있는 요소는 <ph id="ph1">`points`</ph> 배열 다각형의 꼭 짓 점을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])">
          <source>If the first point in the array is not the same as the last point, those two points are connected to close the polygon.</source>
          <target state="translated">배열의 첫 번째 지점 마지막 점과 같아야 없는 경우이 두 지점 다각형을 닫으려면 연결 됩니다.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> 이벤트 개체입니다.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])">
          <source>The code performs the following actions:</source>
          <target state="translated">이 코드에서는 다음 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])">
          <source>Creates an array of points that defines a polygon.</source>
          <target state="translated">다각형을 정의 하는 요소의 배열을 만듭니다.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])">
          <source>Creates a path and adds the polygon to the path.</source>
          <target state="translated">경로 만들고 다각형 경로에 추가 합니다.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])">
          <source>Draws the path to the screen.</source>
          <target state="translated">화면에 경로 그립니다.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.PointF[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that defines the polygon to add.</source>
          <target state="translated">추가할 다각형을 정의하는 <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> 구조체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.PointF[])">
          <source>Adds a polygon to this path.</source>
          <target state="translated">이 경로에 다각형을 추가합니다.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.PointF[])">
          <source>The points in the <ph id="ph1">`points`</ph> array specify the vertices of a polygon.</source>
          <target state="translated">에 있는 요소는 <ph id="ph1">`points`</ph> 배열 다각형의 꼭 짓 점을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.PointF[])">
          <source>If the first point in the array is not the same as the last point, those two points are connected to close the polygon.</source>
          <target state="translated">배열의 첫 번째 지점 마지막 점과 같아야 없는 경우이 두 지점 다각형을 닫으려면 연결 됩니다.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.PointF[])">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddPolygon%28System.Drawing.Point%5B%5D%29&gt;</ph>.</source>
          <target state="translated">예제를 보려면 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddPolygon%28System.Drawing.Point%5B%5D%29&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Adds a rectangle to this path.</source>
          <target state="translated">이 경로에 사각형을 추가합니다.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.Rectangle)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that represents the rectangle to add.</source>
          <target state="translated">추가할 사각형을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.Rectangle)">
          <source>Adds a rectangle to this path.</source>
          <target state="translated">이 경로에 사각형을 추가합니다.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.Rectangle)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> 이벤트 개체입니다.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.Rectangle)">
          <source>The code performs the following actions:</source>
          <target state="translated">이 코드에서는 다음 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.Rectangle)">
          <source>Creates a path.</source>
          <target state="translated">경로 만듭니다.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.Rectangle)">
          <source>Creates a rectangle and adds the rectangle to the path.</source>
          <target state="translated">사각형을 만들어 경로에 추가 합니다.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.Rectangle)">
          <source>Draws the path to the screen.</source>
          <target state="translated">화면에 경로 그립니다.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.RectangleF)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> that represents the rectangle to add.</source>
          <target state="translated">추가할 사각형을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.RectangleF)">
          <source>Adds a rectangle to this path.</source>
          <target state="translated">이 경로에 사각형을 추가합니다.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.RectangleF)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangle%28System.Drawing.Rectangle%29&gt;</ph>.</source>
          <target state="translated">예제를 보려면 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangle%28System.Drawing.Rectangle%29&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Adds a series of rectangles to this path.</source>
          <target state="translated">이 경로에 일련의 사각형을 추가합니다.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.Rectangle[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structures that represents the rectangles to add.</source>
          <target state="translated">추가할 사각형을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> 구조체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.Rectangle[])">
          <source>Adds a series of rectangles to this path.</source>
          <target state="translated">이 경로에 일련의 사각형을 추가합니다.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.Rectangle[])">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> 이벤트 개체입니다.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.Rectangle[])">
          <source>The code performs the following actions:</source>
          <target state="translated">이 코드에서는 다음 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.Rectangle[])">
          <source>Creates a path.</source>
          <target state="translated">경로 만듭니다.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.Rectangle[])">
          <source>Creates an array of rectangles and adds the rectangles to the path.</source>
          <target state="translated">사각형의 배열을 만들고 경로에 추가 합니다.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.Rectangle[])">
          <source>Draws the path to the screen.</source>
          <target state="translated">화면에 경로 그립니다.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.RectangleF[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> structures that represents the rectangles to add.</source>
          <target state="translated">추가할 사각형을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> 구조체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.RectangleF[])">
          <source>Adds a series of rectangles to this path.</source>
          <target state="translated">이 경로에 일련의 사각형을 추가합니다.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.RectangleF[])">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangles%28System.Drawing.Rectangle%5B%5D%29&gt;</ph>.</source>
          <target state="translated">예제를 보려면 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangles%28System.Drawing.Rectangle%5B%5D%29&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Adds a text string to this path.</source>
          <target state="translated">이 경로에 텍스트 문자열을 추가합니다.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> to add.</source>
          <target state="translated">추가할 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.FontFamily" /&gt;</ph> that represents the name of the font with which the test is drawn.</source>
          <target state="translated">텍스트를 그릴 때 사용하는 글꼴의 이름을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.FontFamily" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.FontStyle" /&gt;</ph> enumeration that represents style information about the text (bold, italic, and so on).</source>
          <target state="translated">텍스트에 대한 스타일 정보(굵게, 기울임꼴 등)를 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.FontStyle" /&gt;</ph> 열거형입니다.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>This must be cast as an integer (see the example code later in this section).</source>
          <target state="translated">이 열거형은 정수로 캐스팅되어야 합니다. 자세한 내용은 이 단원의 후반부에 있는 예제 코드를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>The height of the em square box that bounds the character.</source>
          <target state="translated">문자를 제한하는 em 정사각형 상자의 높이입니다.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that represents the point where the text starts.</source>
          <target state="translated">텍스트가 시작되는 지점을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.StringFormat" /&gt;</ph> that specifies text formatting information, such as line spacing and alignment.</source>
          <target state="translated">줄 간격, 맞춤 등의 텍스트 서식 정보를 지정하는 <ph id="ph1">&lt;see cref="T:System.Drawing.StringFormat" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>Adds a text string to this path.</source>
          <target state="translated">이 경로에 텍스트 문자열을 추가합니다.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> 이벤트 개체입니다.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>The code performs the following actions:</source>
          <target state="translated">이 코드에서는 다음 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>Creates a path.</source>
          <target state="translated">경로 만듭니다.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>Sets up string and font arguments.</source>
          <target state="translated">글꼴 및 문자열 인수를 설정합니다.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>Adds the string to the path.</source>
          <target state="translated">경로에 문자열을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>Draws the string to the screen.</source>
          <target state="translated">화면에 문자열을 그립니다.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>There are two important things to be pointed out. First, notice that the <ph id="ph1">`fontStyle`</ph> argument is cast as an integer.</source>
          <target state="translated">두 가지 중요 한 지적 있습니다. 먼저, 다음에 유의 <ph id="ph1">`fontStyle`</ph> 인수는 정수로 캐스팅 됩니다.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddString%2A&gt;</ph> method requires this so that two or more <ph id="ph2">&lt;xref:System.Drawing.FontStyle&gt;</ph> members can be combined to create the desired font style (in this case, <ph id="ph3">&lt;xref:System.Drawing.FontStyle.Italic&gt;</ph> and <ph id="ph4">&lt;xref:System.Drawing.FontStyle.Underline&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddString%2A&gt;</ph> 메서드가 구성이 필요 하므로 둘 이상의 <ph id="ph2">&lt;xref:System.Drawing.FontStyle&gt;</ph> 멤버를 조합 하 여 원하는 글꼴 스타일을 만들 수 있습니다 (이 경우 <ph id="ph3">&lt;xref:System.Drawing.FontStyle.Italic&gt;</ph> 및 <ph id="ph4">&lt;xref:System.Drawing.FontStyle.Underline&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>Secondly, notice that the <ph id="ph1">&lt;xref:System.Drawing.Graphics.FillPath%2A&gt;</ph> method is used rather than the <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawPath%2A&gt;</ph> method.</source>
          <target state="translated">둘째는 <ph id="ph1">&lt;xref:System.Drawing.Graphics.FillPath%2A&gt;</ph> 메서드를 사용 하지 않고 <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawPath%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>If <ph id="ph1">&lt;xref:System.Drawing.Graphics.FillPath%2A&gt;</ph> is used, solid text is rendered, whereas if <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawPath%2A&gt;</ph> is used, the text will be an outline style.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Drawing.Graphics.FillPath%2A&gt;</ph> 을 사용 하는 반면 고정 텍스트를 렌더링 하는 경우 <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawPath%2A&gt;</ph> 는 사용 하는 텍스트 됩니다 윤곽선 스타일입니다.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> to add.</source>
          <target state="translated">추가할 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.FontFamily" /&gt;</ph> that represents the name of the font with which the test is drawn.</source>
          <target state="translated">텍스트를 그릴 때 사용하는 글꼴의 이름을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.FontFamily" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.FontStyle" /&gt;</ph> enumeration that represents style information about the text (bold, italic, and so on).</source>
          <target state="translated">텍스트에 대한 스타일 정보(굵게, 기울임꼴 등)를 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.FontStyle" /&gt;</ph> 열거형입니다.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source>This must be cast as an integer (see the example code later in this section).</source>
          <target state="translated">이 열거형은 정수로 캐스팅되어야 합니다. 자세한 내용은 이 단원의 후반부에 있는 예제 코드를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source>The height of the em square box that bounds the character.</source>
          <target state="translated">문자를 제한하는 em 정사각형 상자의 높이입니다.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> that represents the point where the text starts.</source>
          <target state="translated">텍스트가 시작되는 지점을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.StringFormat" /&gt;</ph> that specifies text formatting information, such as line spacing and alignment.</source>
          <target state="translated">줄 간격, 맞춤 등의 텍스트 서식 정보를 지정하는 <ph id="ph1">&lt;see cref="T:System.Drawing.StringFormat" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source>Adds a text string to this path.</source>
          <target state="translated">이 경로에 텍스트 문자열을 추가합니다.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29&gt;</ph>.</source>
          <target state="translated">예제를 보려면 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> to add.</source>
          <target state="translated">추가할 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.FontFamily" /&gt;</ph> that represents the name of the font with which the test is drawn.</source>
          <target state="translated">텍스트를 그릴 때 사용하는 글꼴의 이름을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.FontFamily" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.FontStyle" /&gt;</ph> enumeration that represents style information about the text (bold, italic, and so on).</source>
          <target state="translated">텍스트에 대한 스타일 정보(굵게, 기울임꼴 등)를 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.FontStyle" /&gt;</ph> 열거형입니다.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)">
          <source>This must be cast as an integer (see the example code later in this section).</source>
          <target state="translated">이 열거형은 정수로 캐스팅되어야 합니다. 자세한 내용은 이 단원의 후반부에 있는 예제 코드를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)">
          <source>The height of the em square box that bounds the character.</source>
          <target state="translated">문자를 제한하는 em 정사각형 상자의 높이입니다.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that represents the rectangle that bounds the text.</source>
          <target state="translated">텍스트를 제한하는 사각형을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.StringFormat" /&gt;</ph> that specifies text formatting information, such as line spacing and alignment.</source>
          <target state="translated">줄 간격, 맞춤 등의 텍스트 서식 정보를 지정하는 <ph id="ph1">&lt;see cref="T:System.Drawing.StringFormat" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)">
          <source>Adds a text string to this path.</source>
          <target state="translated">이 경로에 텍스트 문자열을 추가합니다.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29&gt;</ph>.</source>
          <target state="translated">예제를 보려면 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> to add.</source>
          <target state="translated">추가할 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.FontFamily" /&gt;</ph> that represents the name of the font with which the test is drawn.</source>
          <target state="translated">텍스트를 그릴 때 사용하는 글꼴의 이름을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.FontFamily" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.FontStyle" /&gt;</ph> enumeration that represents style information about the text (bold, italic, and so on).</source>
          <target state="translated">텍스트에 대한 스타일 정보(굵게, 기울임꼴 등)를 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.FontStyle" /&gt;</ph> 열거형입니다.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source>This must be cast as an integer (see the example code later in this section).</source>
          <target state="translated">이 열거형은 정수로 캐스팅되어야 합니다. 자세한 내용은 이 단원의 후반부에 있는 예제 코드를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source>The height of the em square box that bounds the character.</source>
          <target state="translated">문자를 제한하는 em 정사각형 상자의 높이입니다.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> that represents the rectangle that bounds the text.</source>
          <target state="translated">텍스트를 제한하는 사각형을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.StringFormat" /&gt;</ph> that specifies text formatting information, such as line spacing and alignment.</source>
          <target state="translated">줄 간격, 맞춤 등의 텍스트 서식 정보를 지정하는 <ph id="ph1">&lt;see cref="T:System.Drawing.StringFormat" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source>Adds a text string to this path.</source>
          <target state="translated">이 경로에 텍스트 문자열을 추가합니다.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29&gt;</ph>.</source>
          <target state="translated">예제를 보려면 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers">
          <source>Clears all markers from this path.</source>
          <target state="translated">이 경로에서 모든 마커를 지웁니다.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers">
          <source>Use the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.SetMarkers%2A&gt;</ph> method to create a marker at the current location in a <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.SetMarkers%2A&gt;</ph> 의 현재 위치에 표식을 만드는 메서드를 한 <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers">
          <source>Use the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A&gt;</ph> method to iterate through the existing markers in a path.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A&gt;</ph> 경로에 있는 기존 마커를 반복 하는 메서드.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers">
          <source>Markers are used to separate groups of subpaths.</source>
          <target state="translated">마커가 별도 하위 경로 그룹에 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers">
          <source>One or more subpaths can be contained between two markers.</source>
          <target state="translated">두 개의 마커 간에 하나 이상의 하위 경로 포함할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> 이벤트 개체입니다.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers">
          <source>The code performs the following actions:</source>
          <target state="translated">이 코드에서는 다음 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers">
          <source>Creates a path.</source>
          <target state="translated">경로 만듭니다.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers">
          <source>Adds several objects to the path.</source>
          <target state="translated">경로에 여러 개체를 추가합니다.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers">
          <source>Adds markers to the path.</source>
          <target state="translated">표식 경로에 추가합니다.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers">
          <source>Clears all markers from the path.</source>
          <target state="translated">경로에서 모든 마커를 지웁니다.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers">
          <source>Draws the path to the screen.</source>
          <target state="translated">화면에 경로 그립니다.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Clone">
          <source>Creates an exact copy of this path.</source>
          <target state="translated">이 경로와 정확하게 일치하는 복사본을 만듭니다.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Clone">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> this method creates, cast as an object.</source>
          <target state="translated">이 메서드가 개체로 만들어 캐스팅하는 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Clone">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> 이벤트 개체입니다.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Clone">
          <source>The code performs the following actions:</source>
          <target state="translated">이 코드에서는 다음 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Clone">
          <source>Creates a path.</source>
          <target state="translated">경로 만듭니다.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Clone">
          <source>Adds several figures to the path.</source>
          <target state="translated">경로에 여러 그림을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Clone">
          <source>Draws the path to the screen.</source>
          <target state="translated">화면에 경로 그립니다.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Clone">
          <source>Clones a copy of that path.</source>
          <target state="translated">해당 경로의 복사본을 복제 합니다.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Clone">
          <source>Draws the new path to the screen.</source>
          <target state="translated">화면에 새 경로 그립니다.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Clone">
          <source>Notice that the call the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Clone%2A&gt;</ph> method must be cast as a <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>.</source>
          <target state="translated">호출 된 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Clone%2A&gt;</ph> 메서드도 캐스팅 되어야 합니다는 <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures">
          <source>Closes all open figures in this path and starts a new figure.</source>
          <target state="translated">이 경로에 있는 열린 그림을 모두 닫고 새 그림을 시작합니다.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures">
          <source>It closes each open figure by connecting a line from its endpoint to its starting point.</source>
          <target state="translated">열린 각 그림의 끝점에서 시작점으로 선을 연결하면 해당 그림이 닫힙니다.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> 이벤트 개체입니다.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures">
          <source>The code performs the following actions:</source>
          <target state="translated">이 코드에서는 다음 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures">
          <source>Creates a path.</source>
          <target state="translated">경로 만듭니다.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures">
          <source>Adds several open figures to the path.</source>
          <target state="translated">경로에 여러 개의 열린 그림을 추가합니다.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures">
          <source>Closes all figures in the path.</source>
          <target state="translated">경로에 모든 그림을 닫습니다.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures">
          <source>Draws the path to the screen.</source>
          <target state="translated">화면에 경로 그립니다.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.CloseFigure">
          <source>Closes the current figure and starts a new figure.</source>
          <target state="translated">현재 그림을 닫고 새 그림을 시작합니다.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.CloseFigure">
          <source>If the current figure contains a sequence of connected lines and curves, the method closes the loop by connecting a line from the endpoint to the starting point.</source>
          <target state="translated">연결된 일련의 선과 곡선이 현재 그림에 있으면 메서드가 끝점에서 시작점으로 선을 연결하여 루프를 닫습니다.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.CloseFigure">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> 이벤트 개체입니다.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.CloseFigure">
          <source>The code creates a triangle by creating a new path, starting a figure, adding two intersecting lines to the figure, and then closing the figure to form a triangle.</source>
          <target state="translated">코드는 새 경로 만들어, 그림을 시작 하 고, 그림에서는 두 개의 교차 줄을 추가 하 고 다음 그림을를 닫아 삼각형을 만듭니다.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.CloseFigure">
          <source>The path is then drawn to the screen.</source>
          <target state="translated">다음 경로 화면에 그려집니다.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Dispose">
          <source>Releases all resources used by this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>에서 사용하는 리소스를 모두 해제합니다.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Dispose">
          <source>Calling <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Dispose%2A&gt;</ph> allows the resources used by this <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> to be reallocated for other purposes.</source>
          <target state="translated">호출 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Dispose%2A&gt;</ph> 이 사용 하는 리소스 <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> 다른 용도에 다시 할당 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" uid="P:System.Drawing.Drawing2D.GraphicsPath.FillMode">
          <source>Gets or sets a <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> enumeration that determines how the interiors of shapes in this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> are filled.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph>에 있는 모양의 내부를 채우는 방법을 결정하는 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> 열거형을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.FillMode">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> enumeration that specifies how the interiors of shapes in this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> are filled.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph>에 있는 모양의 내부를 채우는 방법을 지정하는 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> 열거형입니다.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Finalize">
          <source>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</source>
          <target state="translated">가비지 컬렉션이 회수하기 전에 개체가 리소스를 해제하고 다른 정리 작업을 수행할 수 있게 합니다.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Converts each curve in this path into a sequence of connected line segments.</source>
          <target state="translated">이 경로에 있는 각 곡선을 연결된 일련의 선 세그먼트로 변환합니다.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten">
          <source>Converts each curve in this path into a sequence of connected line segments.</source>
          <target state="translated">이 경로에 있는 각 곡선을 연결된 일련의 선 세그먼트로 변환합니다.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">예제를 보려면 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> by which to transform this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> before flattening.</source>
          <target state="translated">직선으로 만들기 전에 이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>를 변환할 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix)">
          <source>Applies the specified transform and then converts each curve in this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> into a sequence of connected line segments.</source>
          <target state="translated">지정된 변환을 적용한 다음 이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>에 있는 각 곡선을 연결된 일련의 선 세그먼트로 변환합니다.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">예제를 보려면 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> by which to transform this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> before flattening.</source>
          <target state="translated">직선으로 만들기 전에 이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>를 변환할 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>Specifies the maximum permitted error between the curve and its flattened approximation.</source>
          <target state="translated">곡선과 해당 곡선의 직선화 근사값 사이의 최대 허용 오류를 지정합니다.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>A value of 0.25 is the default.</source>
          <target state="translated">기본값은 0.25입니다.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>Reducing the flatness value will increase the number of line segments in the approximation.</source>
          <target state="translated">이 값을 낮추면 근사값에서 선 세그먼트의 수가 증가합니다.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>Converts each curve in this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> into a sequence of connected line segments.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>에 있는 각 곡선을 연결된 일련의 선 세그먼트로 변환합니다.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> 이벤트 개체입니다.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>The code performs the following actions:</source>
          <target state="translated">이 코드에서는 다음 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>Creates a graphics path and a translation matrix.</source>
          <target state="translated">그래픽 경로 변환 행렬을 만듭니다.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>Adds a curve to the path using four points.</source>
          <target state="translated">점이 4 개를 사용 하 여 경로에 곡선을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>Draws the path (curve) to the screen, using a black pen.</source>
          <target state="translated">경로 (곡선) 검정 펜을 사용 하 여 화면을 그립니다.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>Shifts the curve down 10 pixels and flattens it.</source>
          <target state="translated">곡선을 10 픽셀 아래로 이동 하 고 직선으로 만듭니다.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>Draws the curve to the screen using, a red pen.</source>
          <target state="translated">빨간색 펜을 사용 하는 화면에 곡선을 그립니다.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>Notice that the red curve has flattened lines connecting the points.</source>
          <target state="translated">빨간색 곡선 점을 연결 하는 선을 직선 있는지를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Returns a rectangle that bounds this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>를 제한하는 사각형을 반환합니다.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
          <source>Returns a rectangle that bounds this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>를 제한하는 사각형을 반환합니다.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> that represents a rectangle that bounds this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph>를 제한하는 사각형을 나타내는 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
          <source>The size of the returned bounding rectangle is influenced by the type of end caps, pen width, and pen miter limit, and therefore produces a "loose fit" to the bounded path.</source>
          <target state="translated">반환된 된 경계 사각형의 크기는 끝 표식을, 펜 굵기 및 펜 미터 한계 유형의 영향을 받습니다 하 고 따라서 bounded 경로에 "느슨한 맞춤"를 생성 합니다.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
          <source>The approximate formula is: the initial bounding rectangle is inflated by pen width, and this result is multiplied by the miter limit, plus some additional margin to allow for end caps.</source>
          <target state="translated">대략적인 공식은: 펜 너비 초기 경계 사각형을 확장 하 고이 결과 미터 한계를 더한 끝 모양에 허용 하는 추가 여백을 곱합니다.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> 이벤트 개체입니다.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
          <source>The code performs the following actions:</source>
          <target state="translated">이 코드에서는 다음 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
          <source>Creates a graphics path.</source>
          <target state="translated">그래픽 경로를 만듭니다.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
          <source>Adds an ellipse (circle) to it and draws it to the screen.</source>
          <target state="translated">타원 (원)를 추가 하 고 화면에 그립니다.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
          <source>Retrieves the bounding rectangle for the circle with a call to <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds%2A&gt;</ph> and draws the rectangle to the screen.</source>
          <target state="translated">호출 하 여 원에 대 한 경계 사각형을 검색 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds%2A&gt;</ph> 를 화면에 사각형을 그립니다.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
          <source>Creates a second graphics path.</source>
          <target state="translated">두 번째 그래픽 경로를 만듭니다.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
          <source>Adds a circle and widens the path to a width of 10.</source>
          <target state="translated">원을 추가 하 고 10의 너비에 대 한 경로 넓힙니다.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
          <source>Draws the path to the screen.</source>
          <target state="translated">화면에 경로 그립니다.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
          <source>Retrieves the bounding rectangle for the second circle.</source>
          <target state="translated">두 번째 원에 대 한 경계 사각형을 검색 합니다.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
          <source>Draws the bounding rectangle to the screen.</source>
          <target state="translated">화면에는 경계 사각형을 그립니다.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
          <source>Displays the rectangle size in a dialog box.</source>
          <target state="translated">대화 상자에서 사각형 크기를 표시합니다.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
          <source>Notice that the bounding rectangle on the right is larger (to account for the extra width of the line).</source>
          <target state="translated">오른쪽 경계 사각형 (해당 줄의 추가 너비에 대 한 계정)를 더 크게 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> that specifies a transformation to be applied to this path before the bounding rectangle is calculated.</source>
          <target state="translated">경계 사각형을 계산하기 전에 이 경로에 적용될 변환을 지정하는 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix)">
          <source>This path is not permanently transformed; the transformation is used only during the process of calculating the bounding rectangle.</source>
          <target state="translated">이 경로는 영구적으로 변환되는 것이 아니며, 경계 사각형을 계산하는 동안에만 이 경로에 변환이 사용됩니다.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix)">
          <source>Returns a rectangle that bounds this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> when this path is transformed by the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>에 의해 이 경로가 변환되면 이 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>를 제한하는 사각형을 반환합니다.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> that represents a rectangle that bounds this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph>를 제한하는 사각형을 나타내는 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix)">
          <source>The size of the returned bounding rectangle is influenced by the type of end caps, pen width, and pen miter limit, and therefore produces a "loose fit" to the bounded path.</source>
          <target state="translated">반환된 된 경계 사각형의 크기는 끝 표식을, 펜 굵기 및 펜 미터 한계 유형의 영향을 받습니다 하 고 따라서 bounded 경로에 "느슨한 맞춤"를 생성 합니다.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix)">
          <source>The approximate formula is: the initial bounding rectangle is inflated by pen width, and this result is multiplied by the miter limit, plus some additional margin to allow for end caps.</source>
          <target state="translated">대략적인 공식은: 펜 너비 초기 경계 사각형을 확장 하 고이 결과 미터 한계를 더한 끝 모양에 허용 하는 추가 여백을 곱합니다.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds&gt;</ph>.</source>
          <target state="translated">예제를 보려면 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix,System.Drawing.Pen)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> that specifies a transformation to be applied to this path before the bounding rectangle is calculated.</source>
          <target state="translated">경계 사각형을 계산하기 전에 이 경로에 적용될 변환을 지정하는 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix,System.Drawing.Pen)">
          <source>This path is not permanently transformed; the transformation is used only during the process of calculating the bounding rectangle.</source>
          <target state="translated">이 경로는 영구적으로 변환되는 것이 아니며, 경계 사각형을 계산하는 동안에만 이 경로에 변환이 사용됩니다.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix,System.Drawing.Pen)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> with which to draw the <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>를 그릴 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix,System.Drawing.Pen)">
          <source>Returns a rectangle that bounds this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> when the current path is transformed by the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> and drawn with the specified <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">현재 경로가 지정된 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>에 의해 변환되고 지정된 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>를 사용하여 그려지는 경우 이 <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>를 제한하는 사각형을 반환합니다.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix,System.Drawing.Pen)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> that represents a rectangle that bounds this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph>를 제한하는 사각형을 나타내는 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix,System.Drawing.Pen)">
          <source>The size of the returned bounding rectangle is influenced by the type of end caps, pen width, and pen miter limit, and therefore produces a "loose fit" to the bounded path.</source>
          <target state="translated">반환된 된 경계 사각형의 크기는 끝 표식을, 펜 굵기 및 펜 미터 한계 유형의 영향을 받습니다 하 고 따라서 bounded 경로에 "느슨한 맞춤"를 생성 합니다.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix,System.Drawing.Pen)">
          <source>The approximate formula is: the initial bounding rectangle is inflated by pen width, and this result is multiplied by the miter limit, plus some additional margin to allow for end caps.</source>
          <target state="translated">대략적인 공식은: 펜 너비 초기 경계 사각형을 확장 하 고이 결과 미터 한계를 더한 끝 모양에 허용 하는 추가 여백을 곱합니다.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix,System.Drawing.Pen)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds&gt;</ph>.</source>
          <target state="translated">예제를 보려면 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetLastPoint">
          <source>Gets the last point in the <ph id="ph1">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /&gt;</ph> array of this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /&gt;</ph>의 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> 배열에 있는 마지막 지점을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetLastPoint">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> that represents the last point in this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph>에 있는 마지막 지점을 나타내는 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetLastPoint">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> 이벤트 개체입니다.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetLastPoint">
          <source>The code creates a path, adds a line to the path, and then gets the last point in the path.</source>
          <target state="translated">코드 경로 만듭니다 하 고 경로에 선을 추가 하 고 경로에 마지막 지점을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Indicates whether the specified point is contained within (under) the outline of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> when drawn with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>을 사용하여 그릴 때 이 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>의 윤곽선 내에 지정된 지점이 들어 있는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that specifies the location to test.</source>
          <target state="translated">테스트할 위치를 지정하는 <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> to test.</source>
          <target state="translated">테스트할 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen)">
          <source>Indicates whether the specified point is contained within (under) the outline of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> when drawn with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>을 사용하여 그릴 때 이 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>의 윤곽선 내에 지정된 지점이 들어 있는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified point is contained within the outline of this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> when drawn with the specified <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이 메서드는 지정된 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>을 사용하여 그릴 때 이 <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>의 윤곽선 내에 지정된 지점이 들어 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>를 반환하고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen)">
          <source>This method tests to see if the outline of a given path is rendered visible at the specified point.</source>
          <target state="translated">이 메서드는 특정 경로의 윤곽선 지정된 된 지점에 표시 렌더링 됩니다 확인 하는 것입니다.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29&gt;</ph>.</source>
          <target state="translated">예제를 보려면 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> that specifies the location to test.</source>
          <target state="translated">테스트할 위치를 지정하는 <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> to test.</source>
          <target state="translated">테스트할 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen)">
          <source>Indicates whether the specified point is contained within (under) the outline of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> when drawn with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>을 사용하여 그릴 때 이 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>의 윤곽선 내에 지정된 지점이 들어 있는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified point is contained within the outline of this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> when drawn with the specified <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이 메서드는 지정된 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>을 사용하여 그릴 때 이 <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>의 윤곽선 내에 지정된 지점이 들어 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>를 반환하고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen)">
          <source>This method tests to see if the outline of a given path is rendered visible at the specified point.</source>
          <target state="translated">이 메서드는 특정 경로의 윤곽선 지정된 된 지점에 표시 렌더링 됩니다 확인 하는 것입니다.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29&gt;</ph>.</source>
          <target state="translated">예제를 보려면 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that specifies the location to test.</source>
          <target state="translated">테스트할 위치를 지정하는 <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> to test.</source>
          <target state="translated">테스트할 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> for which to test visibility.</source>
          <target state="translated">가시성을 테스트할 <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>Indicates whether the specified point is contained within (under) the outline of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> when drawn with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> and using the specified <ph id="ph3">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>과 지정된 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>를 사용하여 그릴 때 이 <ph id="ph3">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>의 윤곽선 내에 지정된 지점이 들어 있는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified point is contained within the outline of this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> as drawn with the specified <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이 메서드는 지정된 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>을 사용하여 그릴 때 이 <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>의 윤곽선 내에 지정된 지점이 들어 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>를 반환하고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>This method tests to see if the outline of a given path is rendered visible at the specified point.</source>
          <target state="translated">이 메서드는 특정 경로의 윤곽선 지정된 된 지점에 표시 렌더링 됩니다 확인 하는 것입니다.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The coordinates of the point to be tested are given in world coordinates.</source>
          <target state="translated">테스트할 점의 좌표는 세계 좌표에서 제공 됩니다.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The transform matrix of <ph id="ph1">`graphics`</ph> is temporarily applied before testing for visibility.</source>
          <target state="translated">변환 매트릭스는 <ph id="ph1">`graphics`</ph> 가시성을 테스트 하기 전에 일시적으로 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29&gt;</ph>.</source>
          <target state="translated">예제를 보려면 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> that specifies the location to test.</source>
          <target state="translated">테스트할 위치를 지정하는 <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> to test.</source>
          <target state="translated">테스트할 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> for which to test visibility.</source>
          <target state="translated">가시성을 테스트할 <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>Indicates whether the specified point is contained within (under) the outline of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> when drawn with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> and using the specified <ph id="ph3">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>과 지정된 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>를 사용하여 그릴 때 이 <ph id="ph3">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>의 윤곽선 내에 지정된 지점이 들어 있는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified point is contained within (under) the outline of this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> as drawn with the specified <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이 메서드는 지정된 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>을 사용하여 그릴 때 이 <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>의 윤곽선 내에 지정된 지점이 들어 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>를 반환하고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>This method tests to see if the outline of a given path is rendered visible at the specified point.</source>
          <target state="translated">이 메서드는 특정 경로의 윤곽선 지정된 된 지점에 표시 렌더링 됩니다 확인 하는 것입니다.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The coordinates of the point to be tested are given in world coordinates.</source>
          <target state="translated">테스트할 점의 좌표는 세계 좌표에서 제공 됩니다.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The transform matrix of <ph id="ph1">`graphics`</ph> is temporarily applied before testing for visibility.</source>
          <target state="translated">변환 매트릭스는 <ph id="ph1">`graphics`</ph> 가시성을 테스트 하기 전에 일시적으로 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29&gt;</ph>.</source>
          <target state="translated">예제를 보려면 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen)">
          <source>The x-coordinate of the point to test.</source>
          <target state="translated">테스트할 점의 x좌표입니다.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen)">
          <source>The y-coordinate of the point to test.</source>
          <target state="translated">테스트할 점의 y좌표입니다.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> to test.</source>
          <target state="translated">테스트할 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen)">
          <source>Indicates whether the specified point is contained within (under) the outline of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> when drawn with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>을 사용하여 그릴 때 이 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>의 윤곽선 내에 지정된 지점이 들어 있는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified point is contained within the outline of this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> when drawn with the specified <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이 메서드는 지정된 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>을 사용하여 그릴 때 이 <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>의 윤곽선 내에 지정된 지점이 들어 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>를 반환하고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen)">
          <source>This method tests to see if the outline of a given path is rendered visible at the specified point.</source>
          <target state="translated">이 메서드는 특정 경로의 윤곽선 지정된 된 지점에 표시 렌더링 됩니다 확인 하는 것입니다.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29&gt;</ph>.</source>
          <target state="translated">예제를 보려면 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen)">
          <source>The x-coordinate of the point to test.</source>
          <target state="translated">테스트할 점의 x좌표입니다.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen)">
          <source>The y-coordinate of the point to test.</source>
          <target state="translated">테스트할 점의 y좌표입니다.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> to test.</source>
          <target state="translated">테스트할 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen)">
          <source>Indicates whether the specified point is contained within (under) the outline of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> when drawn with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>을 사용하여 그릴 때 이 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>의 윤곽선 내에 지정된 지점이 들어 있는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified point is contained within the outline of this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> when drawn with the specified <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이 메서드는 지정된 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>을 사용하여 그릴 때 이 <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>의 윤곽선 내에 지정된 지점이 들어 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>를 반환하고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen)">
          <source>This method tests to see if the outline of a given path is rendered visible at the specified point.</source>
          <target state="translated">이 메서드는 특정 경로의 윤곽선 지정된 된 지점에 표시 렌더링 됩니다 확인 하는 것입니다.</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29&gt;</ph>.</source>
          <target state="translated">예제를 보려면 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The x-coordinate of the point to test.</source>
          <target state="translated">테스트할 점의 x좌표입니다.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The y-coordinate of the point to test.</source>
          <target state="translated">테스트할 점의 y좌표입니다.</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> to test.</source>
          <target state="translated">테스트할 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> for which to test visibility.</source>
          <target state="translated">가시성을 테스트할 <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>Indicates whether the specified point is contained within (under) the outline of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> when drawn with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> and using the specified <ph id="ph3">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>과 지정된 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>를 사용하여 그릴 때 이 <ph id="ph3">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>의 윤곽선 내에 지정된 지점이 들어 있는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified point is contained within the outline of this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> as drawn with the specified <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이 메서드는 지정된 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>을 사용하여 그릴 때 이 <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>의 윤곽선 내에 지정된 지점이 들어 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>를 반환하고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>This method tests to see if the outline of a given path is rendered visible at the specified point.</source>
          <target state="translated">이 메서드는 특정 경로의 윤곽선 지정된 된 지점에 표시 렌더링 됩니다 확인 하는 것입니다.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The coordinates of the point to be tested are given in world coordinates.</source>
          <target state="translated">테스트할 점의 좌표는 세계 좌표에서 제공 됩니다.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The transform matrix of <ph id="ph1">`graphics`</ph> is temporarily applied before testing for visibility.</source>
          <target state="translated">변환 매트릭스는 <ph id="ph1">`graphics`</ph> 가시성을 테스트 하기 전에 일시적으로 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event.</source>
          <target state="translated">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The code performs the following actions:</source>
          <target state="translated">이 코드에서는 다음 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>Creates a path.</source>
          <target state="translated">경로 만듭니다.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>Adds a rectangle to the path.</source>
          <target state="translated">경로에 사각형을 추가합니다.</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>Creates a wide pen and widens the path with that pen (to make the example clearer),</source>
          <target state="translated">넓은 펜을 만들고 해당 펜 (더 명확 하 게 예제 있도록),으로 경로 넓힙니다.</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>Tests a point (100, 50) to see if it lies within (under) one of the edges of the rectangle by calling <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%2A&gt;</ph>.</source>
          <target state="translated">테스트를 호출 하 여 사각형의 모서리 중 하나 (아래)에 배치 하는 경우 점 (100, 50) <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The result is shown in the message box (in this case, true).</source>
          <target state="translated">결과 (이 경우, true) 메시지 상자에 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>In other words the edge is rendered over that point.</source>
          <target state="translated">즉 가장자리 해당 지점 위에 렌더링 됩니다.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The x-coordinate of the point to test.</source>
          <target state="translated">테스트할 점의 x좌표입니다.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The y-coordinate of the point to test.</source>
          <target state="translated">테스트할 점의 y좌표입니다.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> to test.</source>
          <target state="translated">테스트할 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> for which to test visibility.</source>
          <target state="translated">가시성을 테스트할 <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>Indicates whether the specified point is contained within (under) the outline of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> when drawn with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> and using the specified <ph id="ph3">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>과 지정된 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>를 사용하여 그릴 때 이 <ph id="ph3">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>의 윤곽선 내에 지정된 지점이 들어 있는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified point is contained within (under) the outline of this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> as drawn with the specified <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이 메서드는 지정된 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>을 사용하여 그릴 때 이 <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>의 윤곽선 내에 지정된 지점이 들어 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>를 반환하고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>This method tests to see if the outline of a given path is rendered visible at the specified point.</source>
          <target state="translated">이 메서드는 특정 경로의 윤곽선 지정된 된 지점에 표시 렌더링 됩니다 확인 하는 것입니다.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The coordinates of the point to be tested are given in world coordinates.</source>
          <target state="translated">테스트할 점의 좌표는 세계 좌표에서 제공 됩니다.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The transform matrix of the <ph id="ph1">`graphics`</ph> parameter is temporarily applied before testing for visibility.</source>
          <target state="translated">변환 매트릭스는 <ph id="ph1">`graphics`</ph> 매개 변수 표시 여부를 테스트 하기 전에 일시적으로 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29&gt;</ph>.</source>
          <target state="translated">예제를 보려면 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Indicates whether the specified point is contained within this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">지정된 지점이 이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> 내에 들어 있는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that represents the point to test.</source>
          <target state="translated">테스트할 지점을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point)">
          <source>Indicates whether the specified point is contained within this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">지정된 지점이 이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> 내에 들어 있는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified point is contained within this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이 메서드는 지정된 지점이 이 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> 내에 들어 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>를 반환하고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point)">
          <source>For an example, see <ph id="ph1">`GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`</ph>.</source>
          <target state="translated">예제를 보려면 <ph id="ph1">`GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> that represents the point to test.</source>
          <target state="translated">테스트할 지점을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF)">
          <source>Indicates whether the specified point is contained within this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">지정된 지점이 이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> 내에 들어 있는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified point is contained within this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이 메서드는 지정된 지점이 이 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> 내에 들어 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>를 반환하고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29&gt;</ph>.</source>
          <target state="translated">예제를 보려면 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point,System.Drawing.Graphics)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that represents the point to test.</source>
          <target state="translated">테스트할 지점을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point,System.Drawing.Graphics)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> for which to test visibility.</source>
          <target state="translated">가시성을 테스트할 <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point,System.Drawing.Graphics)">
          <source>Indicates whether the specified point is contained within this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">지정된 지점이 이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> 내에 들어 있는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point,System.Drawing.Graphics)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified point is contained within this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이 메서드는 지정된 지점이 이 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> 내에 들어 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>를 반환하고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point,System.Drawing.Graphics)">
          <source>The coordinates of the point to be tested are given in world coordinates.</source>
          <target state="translated">테스트할 점의 좌표는 세계 좌표에서 제공 됩니다.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point,System.Drawing.Graphics)">
          <source>The transform matrix of the <ph id="ph1">`graphics`</ph> parameter is temporarily applied before testing for visibility.</source>
          <target state="translated">변환 매트릭스는 <ph id="ph1">`graphics`</ph> 매개 변수 표시 여부를 테스트 하기 전에 일시적으로 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point,System.Drawing.Graphics)">
          <source>For an example, see <ph id="ph1">`GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`</ph>.</source>
          <target state="translated">예제를 보려면 <ph id="ph1">`GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> that represents the point to test.</source>
          <target state="translated">테스트할 지점을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> for which to test visibility.</source>
          <target state="translated">가시성을 테스트할 <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)">
          <source>Indicates whether the specified point is contained within this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">지정된 지점이 이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> 내에 들어 있는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified point is contained within this; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">지정된 지점이 이 개체 내에 들어 있으면 이 메서드가 <ph id="ph1">&lt;see langword="true" /&gt;</ph>를 반환하고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)">
          <source>The coordinates of the point to be tested are given in world coordinates.</source>
          <target state="translated">테스트할 점의 좌표는 세계 좌표에서 제공 됩니다.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)">
          <source>The transform matrix of the <ph id="ph1">`graphics`</ph> parameter is temporarily applied before testing for visibility.</source>
          <target state="translated">변환 매트릭스는 <ph id="ph1">`graphics`</ph> 매개 변수 표시 여부를 테스트 하기 전에 일시적으로 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29&gt;</ph>.</source>
          <target state="translated">예제를 보려면 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32)">
          <source>The x-coordinate of the point to test.</source>
          <target state="translated">테스트할 점의 x좌표입니다.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32)">
          <source>The y-coordinate of the point to test.</source>
          <target state="translated">테스트할 점의 y좌표입니다.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32)">
          <source>Indicates whether the specified point is contained within this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">지정된 지점이 이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> 내에 들어 있는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified point is contained within this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이 메서드는 지정된 지점이 이 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> 내에 들어 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>를 반환하고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29&gt;</ph>.</source>
          <target state="translated">예제를 보려면 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single)">
          <source>The x-coordinate of the point to test.</source>
          <target state="translated">테스트할 점의 x좌표입니다.</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single)">
          <source>The y-coordinate of the point to test.</source>
          <target state="translated">테스트할 점의 y좌표입니다.</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single)">
          <source>Indicates whether the specified point is contained within this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">지정된 지점이 이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> 내에 들어 있는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified point is contained within this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이 메서드는 지정된 지점이 이 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> 내에 들어 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>를 반환하고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29&gt;</ph>.</source>
          <target state="translated">예제를 보려면 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
          <source>The x-coordinate of the point to test.</source>
          <target state="translated">테스트할 점의 x좌표입니다.</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
          <source>The y-coordinate of the point to test.</source>
          <target state="translated">테스트할 점의 y좌표입니다.</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> for which to test visibility.</source>
          <target state="translated">가시성을 테스트할 <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
          <source>Indicates whether the specified point is contained within this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>, using the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>를 사용하여 지정된 지점이 이 <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> 내에 들어 있는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified point is contained within this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이 메서드는 지정된 지점이 이 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> 내에 들어 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>를 반환하고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
          <source>The coordinates of the point to be tested are given in world coordinates.</source>
          <target state="translated">테스트할 점의 좌표는 세계 좌표에서 제공 됩니다.</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
          <source>The transform matrix of <ph id="ph1">`graphics`</ph> is temporarily applied before testing for visibility.</source>
          <target state="translated">변환 매트릭스는 <ph id="ph1">`graphics`</ph> 가시성을 테스트 하기 전에 일시적으로 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> 이벤트 개체입니다.</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
          <source>The code performs the following actions:</source>
          <target state="translated">이 코드에서는 다음 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
          <source>Creates a path and adds an ellipse to the path.</source>
          <target state="translated">경로 만들고 타원을 경로에 추가 합니다.</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
          <source>Tests whether the specified point is contained within the path.</source>
          <target state="translated">경로 내에서 지정된 된 지점이 포함 되어 있는지 테스트 합니다.</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
          <source>Displays the result in a dialog box.</source>
          <target state="translated">대화 상자에서 결과 표시합니다.</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single,System.Drawing.Graphics)">
          <source>The x-coordinate of the point to test.</source>
          <target state="translated">테스트할 점의 x좌표입니다.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single,System.Drawing.Graphics)">
          <source>The y-coordinate of the point to test.</source>
          <target state="translated">테스트할 점의 y좌표입니다.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single,System.Drawing.Graphics)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> for which to test visibility.</source>
          <target state="translated">가시성을 테스트할 <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single,System.Drawing.Graphics)">
          <source>Indicates whether the specified point is contained within this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> in the visible clip region of the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">지정된 지점이 지정된 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>의 가시 클리핑 영역에 있는 이 <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> 내에 들어 있는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single,System.Drawing.Graphics)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified point is contained within this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이 메서드는 지정된 지점이 이 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> 내에 들어 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>를 반환하고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single,System.Drawing.Graphics)">
          <source>The coordinates of the point to be tested are given in world coordinates.</source>
          <target state="translated">테스트할 점의 좌표는 세계 좌표에서 제공 됩니다.</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single,System.Drawing.Graphics)">
          <source>The transform matrix of the <ph id="ph1">`graphics`</ph> parameter is temporarily applied before testing for visibility.</source>
          <target state="translated">변환 매트릭스는 <ph id="ph1">`graphics`</ph> 매개 변수 표시 여부를 테스트 하기 전에 일시적으로 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single,System.Drawing.Graphics)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29&gt;</ph>.</source>
          <target state="translated">예제를 보려면 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathData">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PathData" /&gt;</ph> that encapsulates arrays of points (<ph id="ph2">&lt;paramref name="points" /&gt;</ph>) and types (<ph id="ph3">&lt;paramref name="types" /&gt;</ph>) for this <ph id="ph4">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PathData" /&gt;</ph>의 지점(<ph id="ph2">&lt;paramref name="points" /&gt;</ph>) 및 형식(<ph id="ph3">&lt;paramref name="types" /&gt;</ph>)의 배열을 캡슐화하는 <ph id="ph4">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathData">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PathData" /&gt;</ph> that encapsulates arrays for both the points and types for this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PathData" /&gt;</ph>의 지점 및 형식에 대한 배열을 캡슐화하는 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints">
          <source>Gets the points in the path.</source>
          <target state="translated">경로의 지점을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> objects that represent the path.</source>
          <target state="translated">경로를 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> 개체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>Gets the types of the corresponding points in the <ph id="ph1">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /&gt;</ph> array.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /&gt;</ph> 배열의 해당 지점 종류를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>An array of bytes that specifies the types of the corresponding points in the path.</source>
          <target state="translated">경로에서 해당 지점 종류를 나타내는 바이트의 배열입니다.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>The array of bytes returned by the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.PathTypes%2A&gt;</ph> property specifies point types and flags for the data points in a path.</source>
          <target state="translated">반환 된 바이트 배열에서 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.PathTypes%2A&gt;</ph> 속성 경로에서 지점 유형 및 데이터 요소에 대 한 플래그를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>For each point, bits 0 through 2 indicate the type of a point, and bits 3 through 7 hold a set of flags that specify the attributes of a point.</source>
          <target state="translated">각 지점에 대 한 비트 0-2는 지점의 유형을 나타내며 지점의 특성을 지정 하는 플래그 집합을 보유 하는 3 ~ 7 비트.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>The following table shows possible values and their meanings.</source>
          <target state="translated">다음 표에서 가능한 값과 그 의미를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>Value</source>
          <target state="translated">값</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>Meaning</source>
          <target state="translated">의미</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>Indicates that the point is the start of a figure.</source>
          <target state="translated">그림의 시작 지점 임을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>Indicates that the point is one of the two endpoints of a line.</source>
          <target state="translated">지점 줄의 두 끝점 중 하나 임을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>3</source>
          <target state="translated">3</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>Indicates that the point is an endpoint or control point of a cubic Bézier spline.</source>
          <target state="translated">지점에는 끝점 또는 제어 지점의 입방 형 3 차원 곡선 스플라인 임을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>0x7</source>
          <target state="translated">0x7</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>Masks all bits except for the three low-order bits, which indicate the point type.</source>
          <target state="translated">지점 종류를 나타내는 세 가지 낮은 순서 비트를 제외 하 고 모든 비트를 마스크 합니다.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>0x20</source>
          <target state="translated">0x20</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>Specifies that the point is a marker.</source>
          <target state="translated">지점 표식의 임을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>0x80</source>
          <target state="translated">0x80</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>Specifies that the point is the last point in a closed subpath (figure).</source>
          <target state="translated">지점 닫힌된 (그림 참조) 하위 경로에서 마지막 점 임을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" uid="P:System.Drawing.Drawing2D.GraphicsPath.PointCount">
          <source>Gets the number of elements in the <ph id="ph1">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /&gt;</ph> or the <ph id="ph2">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /&gt;</ph> array.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /&gt;</ph> 배열의 요소 수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PointCount">
          <source>An integer that specifies the number of elements in the <ph id="ph1">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /&gt;</ph> or the <ph id="ph2">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /&gt;</ph> array.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /&gt;</ph> 배열의 요소 수를 지정하는 정수입니다.</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reset">
          <source>Empties the <ph id="ph1">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /&gt;</ph> arrays and sets the <ph id="ph3">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> to <ph id="ph4">&lt;see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /&gt;</ph> 배열을 비우고 <ph id="ph3">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph>를 <ph id="ph4">&lt;see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" /&gt;</ph>로 설정합니다.</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reset">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> 이벤트 개체입니다.</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reset">
          <source>The code performs the following actions:</source>
          <target state="translated">이 코드에서는 다음 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reset">
          <source>Creates a path.</source>
          <target state="translated">경로 만듭니다.</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reset">
          <source>Adds several primitives to it.</source>
          <target state="translated">여러 기본 요소를 추가합니다.</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reset">
          <source>Draws the path's points array to the screen.</source>
          <target state="translated">패스의 점 배열을 화면으로 그립니다.</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reset">
          <source>Resets the path to an empty state.</source>
          <target state="translated">경로를 빈 상태로 다시 설정합니다.</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reset">
          <source>Re-acquires the points array (if it exists).</source>
          <target state="translated">다시 (있는 경우)에 points 배열을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reset">
          <source>Draws the array to the screen.</source>
          <target state="translated">화면에 배열을 그립니다.</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reset">
          <source>Notice that it finds no array following the reset call.</source>
          <target state="translated">호출 다음에 재설정 배열 없음 찾으면를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reverse">
          <source>Reverses the order of points in the <ph id="ph1">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /&gt;</ph> array of this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /&gt;</ph>의 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> 배열에 있는 지점의 순서를 반대로 바꿉니다.</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reverse">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> 이벤트 개체입니다.</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reverse">
          <source>The code performs the following actions:</source>
          <target state="translated">이 코드에서는 다음 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reverse">
          <source>Creates a path and adds several primitives to the path.</source>
          <target state="translated">경로 만들고 여러 기본 요소 경로에 추가 합니다.</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reverse">
          <source>Draws the path's points array to the screen.</source>
          <target state="translated">패스의 점 배열을 화면으로 그립니다.</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reverse">
          <source>Draws the reversed points array to the screen.</source>
          <target state="translated">화면에 역방향된 points 배열을 그립니다.</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reverse">
          <source>Notice that the second listing of points is in reverse order from the first.</source>
          <target state="translated">표시 지점에서 두 번째 목록을 반대 순서로 첫 번째에서 됩니다.</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.SetMarkers">
          <source>Sets a marker on this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>에 마커를 설정합니다.</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.SetMarkers">
          <source>This method creates a marker on the path that can be used to separate sections of the path.</source>
          <target state="translated">이 메서드는 표식을 경로 섹션을 구분 하는 데 사용할 수 있는 경로에 만듭니다.</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.SetMarkers">
          <source>You can then use the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A&gt;</ph> methods to iterate through the markers in the path.</source>
          <target state="translated">사용할 수 있습니다는 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A&gt;</ph> 경로에 있는 마커를 반복 하는 방법입니다.</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.SetMarkers">
          <source>Markers are used to separate groups of subpaths.</source>
          <target state="translated">마커가 별도 하위 경로 그룹에 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.SetMarkers">
          <source>One or more subpaths can be contained between two markers in the path.</source>
          <target state="translated">경로에 두 개의 마커 간에 하나 이상의 하위 경로 포함할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.SetMarkers">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> 이벤트 개체입니다.</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.SetMarkers">
          <source>The code creates a path and adds several primitives to the path separated by markers, and draws the path to the screen.</source>
          <target state="translated">코드 표식으로 구분 된 경로에 여러 기본 요소를 추가 하며 화면에 경로 그리는 경로 만듭니다.</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
          <source>Starts a new figure without closing the current figure.</source>
          <target state="translated">현재 그림을 닫지 않고 새 그림을 시작합니다.</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
          <source>All subsequent points added to the path are added to this new figure.</source>
          <target state="translated">경로에 추가된 모든 후속 지점이 이 새 그림에 추가됩니다.</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
          <source>The user must keep the original points if they are needed.</source>
          <target state="translated">사용자는 필요할 경우 원래 포인트를 유지 해야 합니다.</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
          <source>The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</source>
          <target state="translated">원점은 입방 형 3 차원 곡선 제어점을 내부적으로 변환 됩니다, 그리고 있어서 원점은 메커니즘이 없습니다.</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
          <source>This method starts a new subpath in the path.</source>
          <target state="translated">이 메서드는 경로에 새 하위 경로 시작합니다.</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
          <source>Subpaths allow you to separate a path into sections and use the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator&gt;</ph> class to iterate through the subpaths.</source>
          <target state="translated">하위 경로 허용 하는 경로 섹션으로 구분 하 여 사용할는 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator&gt;</ph> 하위 경로 확인을 반복 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> 이벤트 개체입니다.</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
          <source>The code performs the following actions:</source>
          <target state="translated">이 코드에서는 다음 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
          <source>Creates a path.</source>
          <target state="translated">경로 만듭니다.</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
          <source>Adds two sets of figures.</source>
          <target state="translated">두 그림 집합을 추가합니다.</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
          <source>The first set of figures combines four primitives into two figures.</source>
          <target state="translated">숫자 값의 첫 번째 집합 두 그림으로 네 명의 기본 요소를 결합합니다.</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
          <source>The second set of figures combines the same four primitives (except that they are offset in the y-axis) into three figures.</source>
          <target state="translated">지 수의 두 번째 집합 결합 같은 4 명의 기본 형식 (제외 하 고 오프셋 인 경우 y 축) 세 개의 지 합니다.</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
          <source>Draws all the figures to the screen.</source>
          <target state="translated">화면에 모든 데이터를 그립니다.</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
          <source>Notice the difference in the appearance between the two sets of figures.</source>
          <target state="translated">모양 지 수의 두 집합 간의 차이 확인 합니다.</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> that represents the transformation to apply.</source>
          <target state="translated">적용할 변환을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)">
          <source>Applies a transform matrix to this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>에 변환 매트릭스를 적용합니다.</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)">
          <source>The transformation can scale, translate, rotate, or skew the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>.</source>
          <target state="translated">변환 수 크기 조정, 변환, 회전 하거나는 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> 이벤트 개체입니다.</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)">
          <source>The code performs the following actions:</source>
          <target state="translated">이 코드에서는 다음 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)">
          <source>Creates a path and adds an ellipse to the path.</source>
          <target state="translated">경로 만들고 타원을 경로에 추가 합니다.</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)">
          <source>Draws path to the screen.</source>
          <target state="translated">화면에 경로 그립니다.</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)">
          <source>Creates a transform matrix to translate the path 100 units in the x-axis direction.</source>
          <target state="translated">X-축 방향으로 경로 100 단위 변환 하는 변환 행렬을 만듭니다.</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)">
          <source>Draws the transformed path to the screen.</source>
          <target state="translated">화면에 변환된 된 경로 그립니다.</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)">
          <source>Notice that the original ellipse is drawn in black and the transformed ellipse is drawn in red.</source>
          <target state="translated">원래 타원 검은색으로 그려집니다 빨간색으로 변형 된 타원 그려집니다에 유의 하십시오.</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Applies a warp transform, defined by a rectangle and a parallelogram, to this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>에 사각형과 평행 사변형에 의해 정의된 휘기 변환을 적용합니다.</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that define a parallelogram to which the rectangle defined by <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept> is transformed.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept>에 의해 정의된 사각형이 변환되는 평행 사변형을 정의하는 <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> 구조체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF)">
          <source>The array can contain either three or four elements.</source>
          <target state="translated">이 배열에 세 개 또는 네 개의 요소를 포함할 수 있는데,</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF)">
          <source>If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</source>
          <target state="translated">세 개의 요소를 포함하는 경우 처음 세 지점이 평행 사변형의 오른쪽 아래 모퉁이가 됩니다.</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> that represents the rectangle that is transformed to the parallelogram defined by <bpt id="p1">&lt;c&gt;</bpt>destPoints<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>destPoints<ept id="p1">&lt;/c&gt;</ept>에서 정의된 평행 사변형으로 변환되는 사각형을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF)">
          <source>Applies a warp transform, defined by a rectangle and a parallelogram, to this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>에 사각형과 평행 사변형에 의해 정의된 휘기 변환을 적용합니다.</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">예제를 보려면 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that define a parallelogram to which the rectangle defined by <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept> is transformed.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept>에 의해 정의된 사각형이 변환되는 평행 사변형을 정의하는 <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> 구조체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix)">
          <source>The array can contain either three or four elements.</source>
          <target state="translated">이 배열에 세 개 또는 네 개의 요소를 포함할 수 있는데,</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix)">
          <source>If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</source>
          <target state="translated">세 개의 요소를 포함하는 경우 처음 세 지점이 평행 사변형의 오른쪽 아래 모퉁이가 됩니다.</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> that represents the rectangle that is transformed to the parallelogram defined by <bpt id="p1">&lt;c&gt;</bpt>destPoints<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>destPoints<ept id="p1">&lt;/c&gt;</ept>에서 정의된 평행 사변형으로 변환되는 사각형을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> that specifies a geometric transform to apply to the path.</source>
          <target state="translated">경로에 적용할 기하학적 변환을 지정하는 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix)">
          <source>Applies a warp transform, defined by a rectangle and a parallelogram, to this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>에 사각형과 평행 사변형에 의해 정의된 휘기 변환을 적용합니다.</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">예제를 보려면 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that defines a parallelogram to which the rectangle defined by <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept> is transformed.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept>에 의해 정의된 사각형이 변환되는 평행 사변형을 정의하는 <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> 구조체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode)">
          <source>The array can contain either three or four elements.</source>
          <target state="translated">이 배열에 세 개 또는 네 개의 요소를 포함할 수 있는데,</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode)">
          <source>If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</source>
          <target state="translated">세 개의 요소를 포함하는 경우 처음 세 지점이 평행 사변형의 오른쪽 아래 모퉁이가 됩니다.</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> that represents the rectangle that is transformed to the parallelogram defined by <bpt id="p1">&lt;c&gt;</bpt>destPoints<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>destPoints<ept id="p1">&lt;/c&gt;</ept>에서 정의된 평행 사변형으로 변환되는 사각형을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> that specifies a geometric transform to apply to the path.</source>
          <target state="translated">경로에 적용할 기하학적 변환을 지정하는 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.WarpMode" /&gt;</ph> enumeration that specifies whether this warp operation uses perspective or bilinear mode.</source>
          <target state="translated">이 휘기 작업에 원근 모드와 이중 선형 모드 중 어느 모드를 사용할지를 지정하는 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.WarpMode" /&gt;</ph> 열거형입니다.</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode)">
          <source>Applies a warp transform, defined by a rectangle and a parallelogram, to this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>에 사각형과 평행 사변형에 의해 정의된 휘기 변환을 적용합니다.</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">예제를 보려면 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that define a parallelogram to which the rectangle defined by <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept> is transformed.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept>에 의해 정의된 사각형이 변환되는 평행 사변형을 정의하는 <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> 구조체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
          <source>The array can contain either three or four elements.</source>
          <target state="translated">이 배열에 세 개 또는 네 개의 요소를 포함할 수 있는데,</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
          <source>If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</source>
          <target state="translated">세 개의 요소를 포함하는 경우 처음 세 지점이 평행 사변형의 오른쪽 아래 모퉁이가 됩니다.</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> that represents the rectangle that is transformed to the parallelogram defined by <bpt id="p1">&lt;c&gt;</bpt>destPoints<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>destPoints<ept id="p1">&lt;/c&gt;</ept>에서 정의된 평행 사변형으로 변환되는 사각형을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> that specifies a geometric transform to apply to the path.</source>
          <target state="translated">경로에 적용할 기하학적 변환을 지정하는 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.WarpMode" /&gt;</ph> enumeration that specifies whether this warp operation uses perspective or bilinear mode.</source>
          <target state="translated">이 휘기 작업에 원근 모드와 이중 선형 모드 중 어느 모드를 사용할지를 지정하는 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.WarpMode" /&gt;</ph> 열거형입니다.</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
          <source>A value from 0 through 1 that specifies how flat the resulting path is.</source>
          <target state="translated">결과로 만들어지는 경로의 직선화 정도를 지정하는 0에서 1 사이의 값입니다.</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
          <source>For more information, see the <ph id="ph1">&lt;see cref="M:System.Drawing.Drawing2D.GraphicsPath.Flatten" /&gt;</ph> methods.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;see cref="M:System.Drawing.Drawing2D.GraphicsPath.Flatten" /&gt;</ph> 메서드를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
          <source>Applies a warp transform, defined by a rectangle and a parallelogram, to this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>에 사각형과 평행 사변형에 의해 정의된 휘기 변환을 적용합니다.</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> 이벤트 개체입니다.</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
          <source>The code performs the following actions:</source>
          <target state="translated">이 코드에서는 다음 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
          <source>Creates a path and adds a rectangle to the path.</source>
          <target state="translated">경로 만들어 경로에 사각형을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
          <source>Draws that rectangle to the screen in black.</source>
          <target state="translated">검은색으로 화면에 해당 사각형을 그립니다.</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
          <source>Warps the path with a perspective warp.</source>
          <target state="translated">큐브 뷰 warp를 [경로]을 비틉니다.</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
          <source>Draws the warped rectangle (path) to the screen in red.</source>
          <target state="translated">화면에에서에 (경로) 휜된 사각형을 그립니다.</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Replaces this path with curves that enclose the area that is filled when this path is drawn by the specified pen.</source>
          <target state="translated">이 경로를 지정된 펜으로 그릴 때 채워지는 영역을 둘러싸는 곡선으로 이 경로를 바꿉니다.</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> that specifies the width between the original outline of the path and the new outline this method creates.</source>
          <target state="translated">경로의 원래 윤곽선과 이 메서드가 만든 새 윤곽선 사이의 너비를 지정하는 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen)">
          <source>Adds an additional outline to the path.</source>
          <target state="translated">경로에 윤곽선을 추가합니다.</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen)">
          <source>This method creates an outline around the original lines in this <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>, with a distance between the existing lines and the new outline equal to that of the width of the <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> used in the call to <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A&gt;</ph>.</source>
          <target state="translated">이 메서드는이 원래 줄 주위에 윤곽선을 만듭니다 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>, 기존 명령줄와 새 개요 사이의 거리와와 같게 하의 너비는 <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> 호출에 사용 되는 <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen)">
          <source>If you want to fill the space between the lines you must use the <ph id="ph1">&lt;xref:System.Drawing.Graphics.FillPath%2A&gt;</ph> rather then the <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawPath%2A&gt;</ph>.</source>
          <target state="translated">줄 간격을 채울 경우 사용 해야는 <ph id="ph1">&lt;xref:System.Drawing.Graphics.FillPath%2A&gt;</ph> 대신는 <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawPath%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">예제를 보려면 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> that specifies the width between the original outline of the path and the new outline this method creates.</source>
          <target state="translated">경로의 원래 윤곽선과 이 메서드가 만든 새 윤곽선 사이의 너비를 지정하는 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> that specifies a transform to apply to the path before widening.</source>
          <target state="translated">너비를 넓히기 전에 경로에 적용할 변환을 지정하는 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix)">
          <source>Adds an additional outline to the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>에 윤곽선을 추가합니다.</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix)">
          <source>This method creates an outline around the original lines in this <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>, with a distance between the existing lines and the new outline equal to that of the width of the <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> used in the call to <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A&gt;</ph>.</source>
          <target state="translated">이 메서드는이 원래 줄 주위에 윤곽선을 만듭니다 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>, 기존 명령줄와 새 개요 사이의 거리와와 같게 하의 너비는 <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> 호출에 사용 되는 <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix)">
          <source>If you want to fill the space between the lines you must use the <ph id="ph1">&lt;xref:System.Drawing.Graphics.FillPath%2A&gt;</ph> rather then the <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawPath%2A&gt;</ph>.</source>
          <target state="translated">줄 간격을 채울 경우 사용 해야는 <ph id="ph1">&lt;xref:System.Drawing.Graphics.FillPath%2A&gt;</ph> 대신는 <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawPath%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">예제를 보려면 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> that specifies the width between the original outline of the path and the new outline this method creates.</source>
          <target state="translated">경로의 원래 윤곽선과 이 메서드가 만든 새 윤곽선 사이의 너비를 지정하는 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> that specifies a transform to apply to the path before widening.</source>
          <target state="translated">너비를 넓히기 전에 경로에 적용할 변환을 지정하는 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>A value that specifies the flatness for curves.</source>
          <target state="translated">곡선에 대한 직선화 정도를 지정하는 값입니다.</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>Replaces this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> with curves that enclose the area that is filled when this path is drawn by the specified pen.</source>
          <target state="translated">이 경로를 지정된 펜으로 그릴 때 채워지는 영역을 둘러싸는 곡선으로 이 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>를 바꿉니다.</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>This method creates an outline around the original lines in this <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>, with a distance between the existing lines and the new outline equal to that of the width of the <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> used in the call to <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A&gt;</ph>.</source>
          <target state="translated">이 메서드는이 원래 줄 주위에 윤곽선을 만듭니다 <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>, 기존 명령줄와 새 개요 사이의 거리와와 같게 하의 너비는 <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> 호출에 사용 되는 <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>If you want to fill the space between the lines you must use the <ph id="ph1">&lt;xref:System.Drawing.Graphics.FillPath%2A&gt;</ph> rather then the <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawPath%2A&gt;</ph>.</source>
          <target state="translated">줄 간격을 채울 경우 사용 해야는 <ph id="ph1">&lt;xref:System.Drawing.Graphics.FillPath%2A&gt;</ph> 대신는 <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawPath%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> 이벤트 개체입니다.</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>The code performs the following actions:</source>
          <target state="translated">이 코드에서는 다음 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>Creates a path and adds two ellipses to the path.</source>
          <target state="translated">경로 만들고 두 타원 경로에 추가 합니다.</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>Draws the path in black.</source>
          <target state="translated">검은색으로 경로 그립니다.</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>Widens the path.</source>
          <target state="translated">경로 넓힙니다.</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>Draws the path in red.</source>
          <target state="translated">빨간색으로 경로 그립니다.</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>Notice that the second rendering uses <ph id="ph1">&lt;xref:System.Drawing.Graphics.FillPath%2A&gt;</ph> instead of <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawPath%2A&gt;</ph>, and hence the rendered figure has the outline filled.</source>
          <target state="translated">두 번째 렌더링을 사용 하는 <ph id="ph1">&lt;xref:System.Drawing.Graphics.FillPath%2A&gt;</ph> 대신 <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawPath%2A&gt;</ph>, 따라서 렌더링 된 그림에 채워진 개요입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>