<Type Name="LinearGradientBrush" FullName="System.Drawing.Drawing2D.LinearGradientBrush">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f02c59326f582455b0a4457e232d1d6bb5216cdd" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36340682" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class LinearGradientBrush : System.Drawing.Brush" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LinearGradientBrush extends System.Drawing.Brush" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Drawing2D.LinearGradientBrush" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LinearGradientBrush&#xA;Inherits Brush" />
  <TypeSignature Language="C++ CLI" Value="public ref class LinearGradientBrush sealed : System::Drawing::Brush" />
  <TypeSignature Language="F#" Value="type LinearGradientBrush = class&#xA;    inherit Brush" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Drawing.Brush</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="16d8f-101">선형 그라데이션을 사용하여 <see cref="T:System.Drawing.Brush" />를 캡슐화합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="16d8f-101">Encapsulates a <see cref="T:System.Drawing.Brush" /> with a linear gradient.</span>
      </span>
      <span data-ttu-id="16d8f-102">이 클래스는 상속될 수 없습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="16d8f-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16d8f-103">이 클래스는 두 가지 색 그라데이션을 여러 가지 색 사용자 지정 그라데이션은 모두 캡슐화합니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-103">This class encapsulates both two-color gradients and custom multicolor gradients.</span></span>  
  
 <span data-ttu-id="16d8f-104">모든 선형 그라데이션 사각형의 너비 또는 두 개의 지정 된 선을 따라 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-104">All linear gradients are defined along a line specified either by the width of a rectangle or by two points.</span></span>  
  
 <span data-ttu-id="16d8f-105">기본적으로 두 가지 색 선형 그라데이션은 과정에서 지정 된 끝 색으로 시작 색에서는 균일 한 가로 선형 blend입니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-105">By default, a two-color linear gradient is an even horizontal linear blend from the starting color to the ending color along the specified line.</span></span> <span data-ttu-id="16d8f-106">혼합 패턴 사용한 사용자 지정의 <xref:System.Drawing.Drawing2D.Blend> 클래스는 <xref:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape%2A> 메서드 또는 <xref:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="16d8f-106">Customize the blend pattern using the <xref:System.Drawing.Drawing2D.Blend> class, the <xref:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape%2A> methods, or the <xref:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape%2A> methods.</span></span> <span data-ttu-id="16d8f-107">그라데이션 방향을 지정 하 여 사용자 지정의 <xref:System.Drawing.Drawing2D.LinearGradientMode> 열거형 또는 생성자에서 각도입니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-107">Customize the direction of the gradient by specifying the <xref:System.Drawing.Drawing2D.LinearGradientMode> enumeration or the angle in the constructor.</span></span>  
  
 <span data-ttu-id="16d8f-108">사용 하 여는 <xref:System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors%2A> 속성을 여러 가지 색 그라데이션을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-108">Use the <xref:System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors%2A> property to create a multicolor gradient.</span></span>  
  
 <span data-ttu-id="16d8f-109"><xref:System.Drawing.Drawing2D.LinearGradientBrush.Transform%2A> 속성 그라데이션의 적용할 로컬 기하학적 변환을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-109">The <xref:System.Drawing.Drawing2D.LinearGradientBrush.Transform%2A> property specifies a local geometric transform applied to the gradient.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="16d8f-110">다음 예제에서는 가로 <xref:System.Drawing.Drawing2D.LinearGradientBrush>; 색상 구성 선형적으로 변경 가로 좌표는 0에서 가로 좌표 200로 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-110">The following example creates a horizontal <xref:System.Drawing.Drawing2D.LinearGradientBrush>; the color components change linearly as you move from a horizontal coordinate of 0 to a horizontal coordinate of 200.</span></span> <span data-ttu-id="16d8f-111">예를 들어 첫 번째 좌표가 0과 200 사이의 중간 지점 0에서 255 사이의 중간에 있는 파란색 구성 요소를 갖습니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-111">For example, a point whose first coordinate is halfway between 0 and 200 will have a blue component that is halfway between 0 and 255.</span></span> <span data-ttu-id="16d8f-112">이 예제는 Windows Forms 사용 하도록 설계 됩니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-112">This example is designed for use with Windows Forms.</span></span> <span data-ttu-id="16d8f-113">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요는 <xref:System.Windows.Forms.PaintEventArgs> `e`의 매개 변수인 <xref:System.Windows.Forms.PaintEventHandler>합니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-113">The following code example is designed for use with Windows Forms, and it requires the <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of <xref:System.Windows.Forms.PaintEventHandler>.</span></span>  
  
 [!code-csharp[System.Drawing.UsingaGradientBrush#21](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.UsingaGradientBrush/CS/Class1.cs#21)]
 [!code-vb[System.Drawing.UsingaGradientBrush#21](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.UsingaGradientBrush/VB/Class1.vb#21)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="16d8f-114">지정된 점과 색을 사용하여 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-114">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> class with the specified points and colors.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinearGradientBrush (System.Drawing.Point point1, System.Drawing.Point point2, System.Drawing.Color color1, System.Drawing.Color color2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Point point1, valuetype System.Drawing.Point point2, valuetype System.Drawing.Color color1, valuetype System.Drawing.Color color2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Point,System.Drawing.Point,System.Drawing.Color,System.Drawing.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (point1 As Point, point2 As Point, color1 As Color, color2 As Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinearGradientBrush(System::Drawing::Point point1, System::Drawing::Point point2, System::Drawing::Color color1, System::Drawing::Color color2);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.LinearGradientBrush : System.Drawing.Point * System.Drawing.Point * System.Drawing.Color * System.Drawing.Color -&gt; System.Drawing.Drawing2D.LinearGradientBrush" Usage="new System.Drawing.Drawing2D.LinearGradientBrush (point1, point2, color1, color2)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="point1" Type="System.Drawing.Point" />
        <Parameter Name="point2" Type="System.Drawing.Point" />
        <Parameter Name="color1" Type="System.Drawing.Color" />
        <Parameter Name="color2" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="point1">
          <span data-ttu-id="16d8f-115">선형 그라데이션의 시작점을 나타내는 <see cref="T:System.Drawing.Point" /> 구조체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-115">A <see cref="T:System.Drawing.Point" /> structure that represents the starting point of the linear gradient.</span>
          </span>
        </param>
        <param name="point2">
          <span data-ttu-id="16d8f-116">선형 그라데이션의 끝점을 나타내는 <see cref="T:System.Drawing.Point" /> 구조체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-116">A <see cref="T:System.Drawing.Point" /> structure that represents the endpoint of the linear gradient.</span>
          </span>
        </param>
        <param name="color1">
          <span data-ttu-id="16d8f-117">선형 그라데이션의 시작 색을 나타내는 <see cref="T:System.Drawing.Color" /> 구조체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-117">A <see cref="T:System.Drawing.Color" /> structure that represents the starting color of the linear gradient.</span>
          </span>
        </param>
        <param name="color2">
          <span data-ttu-id="16d8f-118">선형 그라데이션의 끝 색을 나타내는 <see cref="T:System.Drawing.Color" /> 구조체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-118">A <see cref="T:System.Drawing.Color" /> structure that represents the ending color of the linear gradient.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16d8f-119">지정된 점과 색을 사용하여 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-119">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> class with the specified points and colors.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinearGradientBrush (System.Drawing.PointF point1, System.Drawing.PointF point2, System.Drawing.Color color1, System.Drawing.Color color2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.PointF point1, valuetype System.Drawing.PointF point2, valuetype System.Drawing.Color color1, valuetype System.Drawing.Color color2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.Color,System.Drawing.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (point1 As PointF, point2 As PointF, color1 As Color, color2 As Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinearGradientBrush(System::Drawing::PointF point1, System::Drawing::PointF point2, System::Drawing::Color color1, System::Drawing::Color color2);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.LinearGradientBrush : System.Drawing.PointF * System.Drawing.PointF * System.Drawing.Color * System.Drawing.Color -&gt; System.Drawing.Drawing2D.LinearGradientBrush" Usage="new System.Drawing.Drawing2D.LinearGradientBrush (point1, point2, color1, color2)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="point1" Type="System.Drawing.PointF" />
        <Parameter Name="point2" Type="System.Drawing.PointF" />
        <Parameter Name="color1" Type="System.Drawing.Color" />
        <Parameter Name="color2" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="point1">
          <span data-ttu-id="16d8f-120">선형 그라데이션의 시작점을 나타내는 <see cref="T:System.Drawing.PointF" /> 구조체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-120">A <see cref="T:System.Drawing.PointF" /> structure that represents the starting point of the linear gradient.</span>
          </span>
        </param>
        <param name="point2">
          <span data-ttu-id="16d8f-121">선형 그라데이션의 끝점을 나타내는 <see cref="T:System.Drawing.PointF" /> 구조체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-121">A <see cref="T:System.Drawing.PointF" /> structure that represents the endpoint of the linear gradient.</span>
          </span>
        </param>
        <param name="color1">
          <span data-ttu-id="16d8f-122">선형 그라데이션의 시작 색을 나타내는 <see cref="T:System.Drawing.Color" /> 구조체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-122">A <see cref="T:System.Drawing.Color" /> structure that represents the starting color of the linear gradient.</span>
          </span>
        </param>
        <param name="color2">
          <span data-ttu-id="16d8f-123">선형 그라데이션의 끝 색을 나타내는 <see cref="T:System.Drawing.Color" /> 구조체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-123">A <see cref="T:System.Drawing.Color" /> structure that represents the ending color of the linear gradient.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16d8f-124">지정된 점과 색을 사용하여 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-124">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> class with the specified points and colors.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinearGradientBrush (System.Drawing.Rectangle rect, System.Drawing.Color color1, System.Drawing.Color color2, System.Drawing.Drawing2D.LinearGradientMode linearGradientMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Rectangle rect, valuetype System.Drawing.Color color1, valuetype System.Drawing.Color color2, valuetype System.Drawing.Drawing2D.LinearGradientMode linearGradientMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinearGradientBrush(System::Drawing::Rectangle rect, System::Drawing::Color color1, System::Drawing::Color color2, System::Drawing::Drawing2D::LinearGradientMode linearGradientMode);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.LinearGradientBrush : System.Drawing.Rectangle * System.Drawing.Color * System.Drawing.Color * System.Drawing.Drawing2D.LinearGradientMode -&gt; System.Drawing.Drawing2D.LinearGradientBrush" Usage="new System.Drawing.Drawing2D.LinearGradientBrush (rect, color1, color2, linearGradientMode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="color1" Type="System.Drawing.Color" />
        <Parameter Name="color2" Type="System.Drawing.Color" />
        <Parameter Name="linearGradientMode" Type="System.Drawing.Drawing2D.LinearGradientMode" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="16d8f-125">선형 그라데이션의 경계를 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-125">A <see cref="T:System.Drawing.Rectangle" /> structure that specifies the bounds of the linear gradient.</span>
          </span>
        </param>
        <param name="color1">
          <span data-ttu-id="16d8f-126">그라데이션의 시작 색을 나타내는 <see cref="T:System.Drawing.Color" /> 구조체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-126">A <see cref="T:System.Drawing.Color" /> structure that represents the starting color for the gradient.</span>
          </span>
        </param>
        <param name="color2">
          <span data-ttu-id="16d8f-127">그라데이션의 끝 색을 나타내는 <see cref="T:System.Drawing.Color" /> 구조체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-127">A <see cref="T:System.Drawing.Color" /> structure that represents the ending color for the gradient.</span>
          </span>
        </param>
        <param name="linearGradientMode">
          <span data-ttu-id="16d8f-128">그라데이션의 방향을 지정하는 <see cref="T:System.Drawing.Drawing2D.LinearGradientMode" /> 열거형입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-128">A <see cref="T:System.Drawing.Drawing2D.LinearGradientMode" /> enumeration element that specifies the orientation of the gradient.</span>
          </span>
          <span data-ttu-id="16d8f-129">방향은 그라데이션의 시작점과 끝점을 결정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-129">The orientation determines the starting and ending points of the gradient.</span>
          </span>
          <span data-ttu-id="16d8f-130">예를 들어, <see langword="LinearGradientMode.ForwardDiagonal" />은 시작점을 사각형의 왼쪽 위 모퉁이로, 끝점을 사각형의 오른쪽 아래 모퉁이로 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-130">For example, <see langword="LinearGradientMode.ForwardDiagonal" /> specifies that the starting point is the upper-left corner of the rectangle and the ending point is the lower-right corner of the rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16d8f-131">사각형, 시작 및 끝 색, 방향을 기반으로 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 클래스의 새 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-131">Creates a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> class based on a rectangle, starting and ending colors, and orientation.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinearGradientBrush (System.Drawing.Rectangle rect, System.Drawing.Color color1, System.Drawing.Color color2, float angle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Rectangle rect, valuetype System.Drawing.Color color1, valuetype System.Drawing.Color color2, float32 angle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rect As Rectangle, color1 As Color, color2 As Color, angle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinearGradientBrush(System::Drawing::Rectangle rect, System::Drawing::Color color1, System::Drawing::Color color2, float angle);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.LinearGradientBrush : System.Drawing.Rectangle * System.Drawing.Color * System.Drawing.Color * single -&gt; System.Drawing.Drawing2D.LinearGradientBrush" Usage="new System.Drawing.Drawing2D.LinearGradientBrush (rect, color1, color2, angle)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="color1" Type="System.Drawing.Color" />
        <Parameter Name="color2" Type="System.Drawing.Color" />
        <Parameter Name="angle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="16d8f-132">선형 그라데이션의 경계를 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-132">A <see cref="T:System.Drawing.Rectangle" /> structure that specifies the bounds of the linear gradient.</span>
          </span>
        </param>
        <param name="color1">
          <span data-ttu-id="16d8f-133">그라데이션의 시작 색을 나타내는 <see cref="T:System.Drawing.Color" /> 구조체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-133">A <see cref="T:System.Drawing.Color" /> structure that represents the starting color for the gradient.</span>
          </span>
        </param>
        <param name="color2">
          <span data-ttu-id="16d8f-134">그라데이션의 끝 색을 나타내는 <see cref="T:System.Drawing.Color" /> 구조체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-134">A <see cref="T:System.Drawing.Color" /> structure that represents the ending color for the gradient.</span>
          </span>
        </param>
        <param name="angle">
          <span data-ttu-id="16d8f-135">그라데이션의 방향 선 각도로, X 축에서 시계 방향의 각도로 측정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-135">The angle, measured in degrees clockwise from the x-axis, of the gradient's orientation line.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16d8f-136">사각형, 시작 및 끝 색, 방향 각도를 기반으로 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 클래스의 새 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-136">Creates a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> class based on a rectangle, starting and ending colors, and an orientation angle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16d8f-137">모든 지점 방향 줄과 수직인 줄은 동일한 색입니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-137">All points along any line perpendicular to the orientation line are the same color.</span></span>  
  
 <span data-ttu-id="16d8f-138">시작 줄 수직 방향 줄 고 사각형의 모서리 중 하나를 통해 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-138">The starting line is perpendicular to the orientation line and passes through one of the corners of the rectangle.</span></span> <span data-ttu-id="16d8f-139">시작 줄의 모든 점에 시작 색입니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-139">All points on the starting line are the starting color.</span></span> <span data-ttu-id="16d8f-140">끝 줄 수직 방향 줄 고 사각형의 모서리 중 하나를 통해 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-140">Then ending line is perpendicular to the orientation line and passes through one of the corners of the rectangle.</span></span> <span data-ttu-id="16d8f-141">줄 끝에 모든 지점은 끝 색입니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-141">All points on the ending line are the ending color.</span></span>  
  
 <span data-ttu-id="16d8f-142">각도 방향 줄의 시작 및 종료 줄입니다 통과 하는 모퉁이가 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-142">The angle of the orientation line determines which corners the starting and ending lines pass through.</span></span> <span data-ttu-id="16d8f-143">예를 들어 각도 0에서 90도 사이,에 시작 줄 왼쪽 위 모퉁이 통해 전달 하 고 줄 끝 오른쪽 아래 모서리를 통해 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-143">For example, if the angle is between 0 and 90 degrees, the starting line passes through the upper-left corner, and the ending line passes through the lower-right corner.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinearGradientBrush (System.Drawing.RectangleF rect, System.Drawing.Color color1, System.Drawing.Color color2, System.Drawing.Drawing2D.LinearGradientMode linearGradientMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.RectangleF rect, valuetype System.Drawing.Color color1, valuetype System.Drawing.Color color2, valuetype System.Drawing.Drawing2D.LinearGradientMode linearGradientMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinearGradientBrush(System::Drawing::RectangleF rect, System::Drawing::Color color1, System::Drawing::Color color2, System::Drawing::Drawing2D::LinearGradientMode linearGradientMode);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.LinearGradientBrush : System.Drawing.RectangleF * System.Drawing.Color * System.Drawing.Color * System.Drawing.Drawing2D.LinearGradientMode -&gt; System.Drawing.Drawing2D.LinearGradientBrush" Usage="new System.Drawing.Drawing2D.LinearGradientBrush (rect, color1, color2, linearGradientMode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
        <Parameter Name="color1" Type="System.Drawing.Color" />
        <Parameter Name="color2" Type="System.Drawing.Color" />
        <Parameter Name="linearGradientMode" Type="System.Drawing.Drawing2D.LinearGradientMode" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="16d8f-144">선형 그라데이션의 경계를 지정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-144">A <see cref="T:System.Drawing.RectangleF" /> structure that specifies the bounds of the linear gradient.</span>
          </span>
        </param>
        <param name="color1">
          <span data-ttu-id="16d8f-145">그라데이션의 시작 색을 나타내는 <see cref="T:System.Drawing.Color" /> 구조체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-145">A <see cref="T:System.Drawing.Color" /> structure that represents the starting color for the gradient.</span>
          </span>
        </param>
        <param name="color2">
          <span data-ttu-id="16d8f-146">그라데이션의 끝 색을 나타내는 <see cref="T:System.Drawing.Color" /> 구조체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-146">A <see cref="T:System.Drawing.Color" /> structure that represents the ending color for the gradient.</span>
          </span>
        </param>
        <param name="linearGradientMode">
          <span data-ttu-id="16d8f-147">그라데이션의 방향을 지정하는 <see cref="T:System.Drawing.Drawing2D.LinearGradientMode" /> 열거형입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-147">A <see cref="T:System.Drawing.Drawing2D.LinearGradientMode" /> enumeration element that specifies the orientation of the gradient.</span>
          </span>
          <span data-ttu-id="16d8f-148">방향은 그라데이션의 시작점과 끝점을 결정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-148">The orientation determines the starting and ending points of the gradient.</span>
          </span>
          <span data-ttu-id="16d8f-149">예를 들어, <see langword="LinearGradientMode.ForwardDiagonal" />은 시작점을 사각형의 왼쪽 위 모퉁이로, 끝점을 사각형의 오른쪽 아래 모퉁이로 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-149">For example, <see langword="LinearGradientMode.ForwardDiagonal" /> specifies that the starting point is the upper-left corner of the rectangle and the ending point is the lower-right corner of the rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16d8f-150">사각형, 시작 및 끝 색, 방향 모드를 기반으로 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 클래스의 새 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-150">Creates a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> based on a rectangle, starting and ending colors, and an orientation mode.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinearGradientBrush (System.Drawing.RectangleF rect, System.Drawing.Color color1, System.Drawing.Color color2, float angle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.RectangleF rect, valuetype System.Drawing.Color color1, valuetype System.Drawing.Color color2, float32 angle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rect As RectangleF, color1 As Color, color2 As Color, angle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinearGradientBrush(System::Drawing::RectangleF rect, System::Drawing::Color color1, System::Drawing::Color color2, float angle);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.LinearGradientBrush : System.Drawing.RectangleF * System.Drawing.Color * System.Drawing.Color * single -&gt; System.Drawing.Drawing2D.LinearGradientBrush" Usage="new System.Drawing.Drawing2D.LinearGradientBrush (rect, color1, color2, angle)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
        <Parameter Name="color1" Type="System.Drawing.Color" />
        <Parameter Name="color2" Type="System.Drawing.Color" />
        <Parameter Name="angle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="16d8f-151">선형 그라데이션의 경계를 지정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-151">A <see cref="T:System.Drawing.RectangleF" /> structure that specifies the bounds of the linear gradient.</span>
          </span>
        </param>
        <param name="color1">
          <span data-ttu-id="16d8f-152">그라데이션의 시작 색을 나타내는 <see cref="T:System.Drawing.Color" /> 구조체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-152">A <see cref="T:System.Drawing.Color" /> structure that represents the starting color for the gradient.</span>
          </span>
        </param>
        <param name="color2">
          <span data-ttu-id="16d8f-153">그라데이션의 끝 색을 나타내는 <see cref="T:System.Drawing.Color" /> 구조체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-153">A <see cref="T:System.Drawing.Color" /> structure that represents the ending color for the gradient.</span>
          </span>
        </param>
        <param name="angle">
          <span data-ttu-id="16d8f-154">그라데이션의 방향 선 각도로, X 축에서 시계 방향의 각도로 측정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-154">The angle, measured in degrees clockwise from the x-axis, of the gradient's orientation line.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16d8f-155">사각형, 시작 및 끝 색, 방향 각도를 기반으로 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 클래스의 새 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-155">Creates a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> class based on a rectangle, starting and ending colors, and an orientation angle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16d8f-156">모든 지점 방향 줄과 수직인 줄은 동일한 색입니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-156">All points along any line perpendicular to the orientation line are the same color.</span></span>  
  
 <span data-ttu-id="16d8f-157">시작 줄 수직 방향 줄 고 사각형의 모서리 중 하나를 통해 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-157">The starting line is perpendicular to the orientation line and passes through one of the corners of the rectangle.</span></span> <span data-ttu-id="16d8f-158">시작 줄의 모든 점에 시작 색입니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-158">All points on the starting line are the starting color.</span></span> <span data-ttu-id="16d8f-159">끝 줄 수직 방향 줄 고 사각형의 모서리 중 하나를 통해 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-159">Then ending line is perpendicular to the orientation line and passes through one of the corners of the rectangle.</span></span> <span data-ttu-id="16d8f-160">줄 끝에 모든 지점은 끝 색입니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-160">All points on the ending line are the ending color.</span></span>  
  
 <span data-ttu-id="16d8f-161">각도 방향 줄의 시작 및 종료 줄입니다 통과 하는 모퉁이가 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-161">The angle of the orientation line determines which corners the starting and ending lines pass through.</span></span> <span data-ttu-id="16d8f-162">예를 들어 각도 0에서 90도 사이,에 시작 줄 왼쪽 위 모퉁이 통해 전달 하 고 줄 끝 오른쪽 아래 모서리를 통해 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-162">For example, if the angle is between 0 and 90 degrees, the starting line passes through the upper-left corner, and the ending line passes through the lower-right corner.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinearGradientBrush (System.Drawing.Rectangle rect, System.Drawing.Color color1, System.Drawing.Color color2, float angle, bool isAngleScaleable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Rectangle rect, valuetype System.Drawing.Color color1, valuetype System.Drawing.Color color2, float32 angle, bool isAngleScaleable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rect As Rectangle, color1 As Color, color2 As Color, angle As Single, isAngleScaleable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinearGradientBrush(System::Drawing::Rectangle rect, System::Drawing::Color color1, System::Drawing::Color color2, float angle, bool isAngleScaleable);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.LinearGradientBrush : System.Drawing.Rectangle * System.Drawing.Color * System.Drawing.Color * single * bool -&gt; System.Drawing.Drawing2D.LinearGradientBrush" Usage="new System.Drawing.Drawing2D.LinearGradientBrush (rect, color1, color2, angle, isAngleScaleable)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="color1" Type="System.Drawing.Color" />
        <Parameter Name="color2" Type="System.Drawing.Color" />
        <Parameter Name="angle" Type="System.Single" />
        <Parameter Name="isAngleScaleable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="16d8f-163">선형 그라데이션의 경계를 지정하는 <see cref="T:System.Drawing.Rectangle" /> 구조체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-163">A <see cref="T:System.Drawing.Rectangle" /> structure that specifies the bounds of the linear gradient.</span>
          </span>
        </param>
        <param name="color1">
          <span data-ttu-id="16d8f-164">그라데이션의 시작 색을 나타내는 <see cref="T:System.Drawing.Color" /> 구조체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-164">A <see cref="T:System.Drawing.Color" /> structure that represents the starting color for the gradient.</span>
          </span>
        </param>
        <param name="color2">
          <span data-ttu-id="16d8f-165">그라데이션의 끝 색을 나타내는 <see cref="T:System.Drawing.Color" /> 구조체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-165">A <see cref="T:System.Drawing.Color" /> structure that represents the ending color for the gradient.</span>
          </span>
        </param>
        <param name="angle">
          <span data-ttu-id="16d8f-166">그라데이션의 방향 선 각도로, X 축에서 시계 방향의 각도로 측정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-166">The angle, measured in degrees clockwise from the x-axis, of the gradient's orientation line.</span>
          </span>
        </param>
        <param name="isAngleScaleable">
          <span data-ttu-id="16d8f-167">각도가 이 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />와 연결된 변환의 영향을 받도록 지정하려면 <see langword="true" />로 설정하고, 그렇지 않으면 <see langword="false" />로 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-167">Set to <see langword="true" /> to specify that the angle is affected by the transform associated with this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16d8f-168">사각형, 시작 및 끝 색, 방향 각도를 기반으로 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 클래스의 새 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-168">Creates a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> class based on a rectangle, starting and ending colors, and an orientation angle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16d8f-169">모든 지점 방향 줄과 수직인 줄은 동일한 색입니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-169">All points along any line perpendicular to the orientation line are the same color.</span></span>  
  
 <span data-ttu-id="16d8f-170">시작 줄 수직 방향 줄 고 사각형의 모서리 중 하나를 통해 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-170">The starting line is perpendicular to the orientation line and passes through one of the corners of the rectangle.</span></span> <span data-ttu-id="16d8f-171">시작 줄의 모든 점에 시작 색입니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-171">All points on the starting line are the starting color.</span></span> <span data-ttu-id="16d8f-172">끝 줄 수직 방향 줄 고 사각형의 모서리 중 하나를 통해 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-172">Then ending line is perpendicular to the orientation line and passes through one of the corners of the rectangle.</span></span> <span data-ttu-id="16d8f-173">줄 끝에 모든 지점은 끝 색입니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-173">All points on the ending line are the ending color.</span></span>  
  
 <span data-ttu-id="16d8f-174">각도 방향 줄의 시작 및 종료 줄입니다 통과 하는 모퉁이가 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-174">The angle of the orientation line determines which corners the starting and ending lines pass through.</span></span> <span data-ttu-id="16d8f-175">예를 들어 각도 0에서 90도 사이,에 시작 줄 왼쪽 위 모퉁이 통해 전달 하 고 줄 끝 오른쪽 아래 모서리를 통해 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-175">For example, if the angle is between 0 and 90 degrees, the starting line passes through the upper-left corner, and the ending line passes through the lower-right corner.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinearGradientBrush (System.Drawing.RectangleF rect, System.Drawing.Color color1, System.Drawing.Color color2, float angle, bool isAngleScaleable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.RectangleF rect, valuetype System.Drawing.Color color1, valuetype System.Drawing.Color color2, float32 angle, bool isAngleScaleable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rect As RectangleF, color1 As Color, color2 As Color, angle As Single, isAngleScaleable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinearGradientBrush(System::Drawing::RectangleF rect, System::Drawing::Color color1, System::Drawing::Color color2, float angle, bool isAngleScaleable);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.LinearGradientBrush : System.Drawing.RectangleF * System.Drawing.Color * System.Drawing.Color * single * bool -&gt; System.Drawing.Drawing2D.LinearGradientBrush" Usage="new System.Drawing.Drawing2D.LinearGradientBrush (rect, color1, color2, angle, isAngleScaleable)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
        <Parameter Name="color1" Type="System.Drawing.Color" />
        <Parameter Name="color2" Type="System.Drawing.Color" />
        <Parameter Name="angle" Type="System.Single" />
        <Parameter Name="isAngleScaleable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="16d8f-176">선형 그라데이션의 경계를 지정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-176">A <see cref="T:System.Drawing.RectangleF" /> structure that specifies the bounds of the linear gradient.</span>
          </span>
        </param>
        <param name="color1">
          <span data-ttu-id="16d8f-177">그라데이션의 시작 색을 나타내는 <see cref="T:System.Drawing.Color" /> 구조체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-177">A <see cref="T:System.Drawing.Color" /> structure that represents the starting color for the gradient.</span>
          </span>
        </param>
        <param name="color2">
          <span data-ttu-id="16d8f-178">그라데이션의 끝 색을 나타내는 <see cref="T:System.Drawing.Color" /> 구조체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-178">A <see cref="T:System.Drawing.Color" /> structure that represents the ending color for the gradient.</span>
          </span>
        </param>
        <param name="angle">
          <span data-ttu-id="16d8f-179">그라데이션의 방향 선 각도로, X 축에서 시계 방향의 각도로 측정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-179">The angle, measured in degrees clockwise from the x-axis, of the gradient's orientation line.</span>
          </span>
        </param>
        <param name="isAngleScaleable">
          <span data-ttu-id="16d8f-180">각도가 이 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />와 연결된 변환의 영향을 받도록 지정하려면 <see langword="true" />로 설정하고, 그렇지 않으면 <see langword="false" />로 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-180">Set to <see langword="true" /> to specify that the angle is affected by the transform associated with this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16d8f-181">사각형, 시작 및 끝 색, 방향 각도를 기반으로 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 클래스의 새 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-181">Creates a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> class based on a rectangle, starting and ending colors, and an orientation angle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16d8f-182">모든 지점 방향 줄과 수직인 줄은 동일한 색입니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-182">All points along any line perpendicular to the orientation line are the same color.</span></span>  
  
 <span data-ttu-id="16d8f-183">시작 줄 수직 방향 줄 고 사각형의 모서리 중 하나를 통해 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-183">The starting line is perpendicular to the orientation line and passes through one of the corners of the rectangle.</span></span> <span data-ttu-id="16d8f-184">시작 줄의 모든 점에 시작 색입니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-184">All points on the starting line are the starting color.</span></span> <span data-ttu-id="16d8f-185">끝 줄 수직 방향 줄 고 사각형의 모서리 중 하나를 통해 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-185">Then ending line is perpendicular to the orientation line and passes through one of the corners of the rectangle.</span></span> <span data-ttu-id="16d8f-186">줄 끝에 모든 지점은 끝 색입니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-186">All points on the ending line are the ending color.</span></span>  
  
 <span data-ttu-id="16d8f-187">각도 방향 줄의 시작 및 종료 줄입니다 통과 하는 모퉁이가 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-187">The angle of the orientation line determines which corners the starting and ending lines pass through.</span></span> <span data-ttu-id="16d8f-188">예를 들어 각도 0에서 90도 사이,에 시작 줄 왼쪽 위 모퉁이 통해 전달 하 고 줄 끝 오른쪽 아래 모서리를 통해 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-188">For example, if the angle is between 0 and 90 degrees, the starting line passes through the upper-left corner, and the ending line passes through the lower-right corner.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Blend">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.Blend Blend { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Drawing2D.Blend Blend" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.LinearGradientBrush.Blend" />
      <MemberSignature Language="VB.NET" Value="Public Property Blend As Blend" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::Blend ^ Blend { System::Drawing::Drawing2D::Blend ^ get(); void set(System::Drawing::Drawing2D::Blend ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Blend : System.Drawing.Drawing2D.Blend with get, set" Usage="System.Drawing.Drawing2D.LinearGradientBrush.Blend" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.Blend</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="16d8f-189">그라데이션에 대한 사용자 지정 대칭을 정의하는 위치와 비율을 지정하는 <see cref="T:System.Drawing.Drawing2D.Blend" />를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-189">Gets or sets a <see cref="T:System.Drawing.Drawing2D.Blend" /> that specifies positions and factors that define a custom falloff for the gradient.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="16d8f-190">그라데이션에 대한 사용자 지정 대칭을 나타내는 <see cref="T:System.Drawing.Drawing2D.Blend" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-190">A <see cref="T:System.Drawing.Drawing2D.Blend" /> that represents a custom falloff for the gradient.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16d8f-191">A <xref:System.Drawing.Drawing2D.Blend> blend 비율과 위치의 해당 배열이 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-191">A <xref:System.Drawing.Drawing2D.Blend> contains corresponding arrays of blend factors and positions.</span></span> <span data-ttu-id="16d8f-192">혼합 비율 시작 색 및 끝의 해당 위치에서 사용 하는 색의 비율을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-192">The blend factors specify the percentages of the starting color and ending color to use at the corresponding position.</span></span> <span data-ttu-id="16d8f-193">위치는 그라데이션 선 따라 거리에 대 한 백분율로 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-193">The positions are given as a percentage of distance along the gradient line.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; obj" Usage="linearGradientBrush.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="16d8f-194">이 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />의 정확한 복사본을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-194">Creates an exact copy of this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16d8f-195">이 메서드가 개체로 만들어 캐스팅하는 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-195">The <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> this method creates, cast as an object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="16d8f-196">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-196">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="16d8f-197">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-197">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="16d8f-198">새 <xref:System.Drawing.Drawing2D.LinearGradientBrush>를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-198">Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.</span></span>  
  
-   <span data-ttu-id="16d8f-199">이 브러시를 사용 하 여 화면에는 타원을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-199">Draws an ellipse to the screen using this brush.</span></span>  
  
-   <span data-ttu-id="16d8f-200">복제는 <xref:System.Drawing.Drawing2D.LinearGradientBrush> (`clonedLGBrush`).</span><span class="sxs-lookup"><span data-stu-id="16d8f-200">Clones the <xref:System.Drawing.Drawing2D.LinearGradientBrush> (`clonedLGBrush`).</span></span>  
  
-   <span data-ttu-id="16d8f-201">복제 된 브러시를 사용 하 여 첫 번째 타원 바로 아래 화면으로는 타원을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-201">Draws an ellipse to the screen directly below the first ellipse, using the cloned brush.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CS/form1.cs#1)]
 [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GammaCorrection">
      <MemberSignature Language="C#" Value="public bool GammaCorrection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GammaCorrection" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.LinearGradientBrush.GammaCorrection" />
      <MemberSignature Language="VB.NET" Value="Public Property GammaCorrection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool GammaCorrection { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.GammaCorrection : bool with get, set" Usage="System.Drawing.Drawing2D.LinearGradientBrush.GammaCorrection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="16d8f-202">이 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />에 감마 보정을 사용할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-202">Gets or sets a value indicating whether gamma correction is enabled for this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="16d8f-203">이 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />에 감마 보정을 사용할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-203">The value is <see langword="true" /> if gamma correction is enabled for this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InterpolationColors">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.ColorBlend InterpolationColors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Drawing2D.ColorBlend InterpolationColors" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors" />
      <MemberSignature Language="VB.NET" Value="Public Property InterpolationColors As ColorBlend" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::ColorBlend ^ InterpolationColors { System::Drawing::Drawing2D::ColorBlend ^ get(); void set(System::Drawing::Drawing2D::ColorBlend ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InterpolationColors : System.Drawing.Drawing2D.ColorBlend with get, set" Usage="System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.ColorBlend</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="16d8f-204">다중 색 선형 그라데이션을 정의하는 <see cref="T:System.Drawing.Drawing2D.ColorBlend" />를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-204">Gets or sets a <see cref="T:System.Drawing.Drawing2D.ColorBlend" /> that defines a multicolor linear gradient.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="16d8f-205">다중 색 선형 그라데이션을 정의하는 <see cref="T:System.Drawing.Drawing2D.ColorBlend" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-205">A <see cref="T:System.Drawing.Drawing2D.ColorBlend" /> that defines a multicolor linear gradient.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16d8f-206">A <xref:System.Drawing.Drawing2D.ColorBlend> 색과 위치의 해당 배열이 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-206">A <xref:System.Drawing.Drawing2D.ColorBlend> contains corresponding arrays of colors and positions.</span></span> <span data-ttu-id="16d8f-207">위치는 0에서 1 사이의 그라데이션 선 따라는 해당 색이 있는 거리의 백분율을 지정 하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-207">The positions are values from 0 through 1 that specify the percentage of the distance along the gradient line where the corresponding color is located.</span></span>  
  
 <span data-ttu-id="16d8f-208">이 속성을 설정 그라데이션 선 따라 각 위치에 하나의 색이 있는 여러 가지 색 그라데이션을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-208">Setting this property creates a multicolor gradient with one color at each position along the gradient line.</span></span> <span data-ttu-id="16d8f-209">이 대 한 모든 이전 색, 위치 및 대칭 설정을 무효화이 속성을 설정할 <xref:System.Drawing.Drawing2D.LinearGradientBrush>합니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-209">Setting this property nullifies all previous color, position, and falloff settings for this <xref:System.Drawing.Drawing2D.LinearGradientBrush>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LinearColors">
      <MemberSignature Language="C#" Value="public System.Drawing.Color[] LinearColors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color[] LinearColors" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.LinearGradientBrush.LinearColors" />
      <MemberSignature Language="VB.NET" Value="Public Property LinearColors As Color()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Drawing::Color&gt; ^ LinearColors { cli::array &lt;System::Drawing::Color&gt; ^ get(); void set(cli::array &lt;System::Drawing::Color&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LinearColors : System.Drawing.Color[] with get, set" Usage="System.Drawing.Drawing2D.LinearGradientBrush.LinearColors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="16d8f-210">그라데이션의 시작 색과 끝 색을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-210">Gets or sets the starting and ending colors of the gradient.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="16d8f-211">그라데이션의 시작 색과 끝 색을 나타내는 두 <see cref="T:System.Drawing.Color" /> 구조체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-211">An array of two <see cref="T:System.Drawing.Color" /> structures that represents the starting and ending colors of the gradient.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="MultiplyTransform">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="16d8f-212">지정된 <see cref="T:System.Drawing.Drawing2D.Matrix" />를 앞에 추가하여 지정된 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />를 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />의 로컬 기하학적 변환을 나타내는 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 곱합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-212">Multiplies the <see cref="T:System.Drawing.Drawing2D.Matrix" /> that represents the local geometric transform of this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the specified <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MultiplyTransform">
      <MemberSignature Language="C#" Value="public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MultiplyTransform(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MultiplyTransform(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.MultiplyTransform : System.Drawing.Drawing2D.Matrix -&gt; unit" Usage="linearGradientBrush.MultiplyTransform matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix">
          <span data-ttu-id="16d8f-213">기하학적 변환을 곱할 <see cref="T:System.Drawing.Drawing2D.Matrix" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-213">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which to multiply the geometric transform.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16d8f-214">지정된 <see cref="T:System.Drawing.Drawing2D.Matrix" />를 앞에 추가하여 지정된 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />를 이 <see cref="T:System.Drawing.Drawing2D.Matrix" />의 로컬 기하학적 변환을 나타내는 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 곱합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-214">Multiplies the <see cref="T:System.Drawing.Drawing2D.Matrix" /> that represents the local geometric transform of this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the specified <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="16d8f-215">예제를 보려면 <xref:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform%2A>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="16d8f-215">For an example, see <xref:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiplyTransform">
      <MemberSignature Language="C#" Value="public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MultiplyTransform(class System.Drawing.Drawing2D.Matrix matrix, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MultiplyTransform(System::Drawing::Drawing2D::Matrix ^ matrix, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.MultiplyTransform : System.Drawing.Drawing2D.Matrix * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="linearGradientBrush.MultiplyTransform (matrix, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="matrix">
          <span data-ttu-id="16d8f-216">기하학적 변환을 곱할 <see cref="T:System.Drawing.Drawing2D.Matrix" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-216">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which to multiply the geometric transform.</span>
          </span>
        </param>
        <param name="order">
          <span data-ttu-id="16d8f-217">두 매트릭스를 곱할 순서를 지정하는 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-217">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies in which order to multiply the two matrices.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16d8f-218">지정된 순서에 따라 지정된 <see cref="T:System.Drawing.Drawing2D.Matrix" />를 이 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />의 로컬 기하학적 변환을 나타내는 <see cref="T:System.Drawing.Drawing2D.Matrix" />에 곱합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-218">Multiplies the <see cref="T:System.Drawing.Drawing2D.Matrix" /> that represents the local geometric transform of this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the specified order.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="16d8f-219">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-219">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="16d8f-220">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-220">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="16d8f-221">새 <xref:System.Drawing.Drawing2D.LinearGradientBrush>를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-221">Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.</span></span>  
  
-   <span data-ttu-id="16d8f-222">이 브러시를 사용 하 여 화면에는 타원을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-222">Draws an ellipse to the screen using this brush.</span></span>  
  
-   <span data-ttu-id="16d8f-223">호출 된 <xref:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform%2A> 메서드를 변환의 <xref:System.Drawing.Drawing2D.LinearGradientBrush>합니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-223">Calls the <xref:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform%2A> method, to transform the <xref:System.Drawing.Drawing2D.LinearGradientBrush>.</span></span>  
  
-   <span data-ttu-id="16d8f-224">변환된 된 브러시를 사용 하 여 첫 번째 타원 바로 아래 화면으로는 타원을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-224">Draws an ellipse to the screen directly below the first ellipse, using the transformed brush.</span></span>  
  
 <span data-ttu-id="16d8f-225">가로 방향의 아래쪽 타원 늘어남을 새 셰이프를 일치 하도록 하는 그라데이션의 늘어남을 살펴보세요.</span><span class="sxs-lookup"><span data-stu-id="16d8f-225">Notice that the lower ellipse is stretched in the horizontal direction, and that the gradient is stretched to match the new shape.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CS/form1.cs#2)]
 [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rectangle">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF Rectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.RectangleF Rectangle" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.LinearGradientBrush.Rectangle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rectangle As RectangleF" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::RectangleF Rectangle { System::Drawing::RectangleF get(); };" />
      <MemberSignature Language="F#" Value="member this.Rectangle : System.Drawing.RectangleF" Usage="System.Drawing.Drawing2D.LinearGradientBrush.Rectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="16d8f-226">그라데이션의 시작점과 끝점을 정의하는 사각형 영역을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-226">Gets a rectangular region that defines the starting and ending points of the gradient.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="16d8f-227">그라데이션의 시작점과 끝점을 지정하는 <see cref="T:System.Drawing.RectangleF" /> 구조체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-227">A <see cref="T:System.Drawing.RectangleF" /> structure that specifies the starting and ending points of the gradient.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16d8f-228">선형 그라데이션의 시작 위치를 지정 하는 사각형의 왼쪽 및 오른쪽의 사각형의 끝점을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-228">The left side of the rectangle specifies the starting point of the linear gradient, and the right side of the rectangle specifies the endpoint.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetTransform">
      <MemberSignature Language="C#" Value="public void ResetTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetTransform() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.ResetTransform" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetTransform ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetTransform();" />
      <MemberSignature Language="F#" Value="member this.ResetTransform : unit -&gt; unit" Usage="linearGradientBrush.ResetTransform " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="16d8f-229">
            <see cref="P:System.Drawing.Drawing2D.LinearGradientBrush.Transform" /> 속성을 동일하게 다시 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-229">Resets the <see cref="P:System.Drawing.Drawing2D.LinearGradientBrush.Transform" /> property to identity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="16d8f-230">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-230">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="16d8f-231">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-231">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="16d8f-232">새 <xref:System.Drawing.Drawing2D.LinearGradientBrush>를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-232">Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.</span></span>  
  
-   <span data-ttu-id="16d8f-233">이 브러시를 사용 하 여 화면에는 타원을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-233">Draws an ellipse to the screen using this brush.</span></span>  
  
-   <span data-ttu-id="16d8f-234">호출 된 <xref:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform%2A> 변환 하는 메서드는 <xref:System.Drawing.Drawing2D.LinearGradientBrush>합니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-234">Calls the <xref:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform%2A> method to transform the <xref:System.Drawing.Drawing2D.LinearGradientBrush>.</span></span>  
  
-   <span data-ttu-id="16d8f-235">변환된 된 브러시를 사용 하 여 첫 번째 타원 바로 아래 화면으로는 타원을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-235">Draws an ellipse to the screen directly below the first ellipse, using the transformed brush.</span></span>  
  
-   <span data-ttu-id="16d8f-236">변환을 다시 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-236">Resets the transform.</span></span>  
  
-   <span data-ttu-id="16d8f-237">처음 두 아래 화면 세 번째 타원을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-237">Draws a third ellipse to the screen below the first two.</span></span>  
  
 <span data-ttu-id="16d8f-238">가장 낮은 타원 그려짐을 확인과 동일한 크기의 첫 번째, 하며, 때문에 대 한 호출으로는 <xref:System.Drawing.Drawing2D.LinearGradientBrush.ResetTransform%2A> 메서드를 그라데이션에 맞게 축소 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-238">Notice that the lowest ellipse is drawn the same size as the first, and that, due to the call to the <xref:System.Drawing.Drawing2D.LinearGradientBrush.ResetTransform%2A> method, the gradient has been reduced to match.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CS/form1.cs#3)]
 [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RotateTransform">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="16d8f-239">지정된 각도만큼 로컬 기하학적 변환을 회전합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-239">Rotates the local geometric transform by the specified amount.</span>
          </span>
          <span data-ttu-id="16d8f-240">이 메서드는 변환에 회전을 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-240">This method prepends the rotation to the transform.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RotateTransform">
      <MemberSignature Language="C#" Value="public void RotateTransform (float angle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateTransform(float32 angle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotateTransform (angle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotateTransform(float angle);" />
      <MemberSignature Language="F#" Value="member this.RotateTransform : single -&gt; unit" Usage="linearGradientBrush.RotateTransform angle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="angle">
          <span data-ttu-id="16d8f-241">회전 각도입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-241">The angle of rotation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16d8f-242">지정된 각도만큼 로컬 기하학적 변환을 회전합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-242">Rotates the local geometric transform by the specified amount.</span>
          </span>
          <span data-ttu-id="16d8f-243">이 메서드는 변환에 회전을 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-243">This method prepends the rotation to the transform.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="16d8f-244">예제를 보려면 <xref:System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform%2A>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="16d8f-244">For an example, see <xref:System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RotateTransform">
      <MemberSignature Language="C#" Value="public void RotateTransform (float angle, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateTransform(float32 angle, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotateTransform (angle As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotateTransform(float angle, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.RotateTransform : single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="linearGradientBrush.RotateTransform (angle, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="angle">
          <span data-ttu-id="16d8f-245">회전 각도입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-245">The angle of rotation.</span>
          </span>
        </param>
        <param name="order">
          <span data-ttu-id="16d8f-246">회전 매트릭스를 앞에 추가할 것인지 아니면 뒤에 추가할 것인지를 지정하는 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-246">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies whether to append or prepend the rotation matrix.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16d8f-247">특정 순서대로 지정된 각도만큼 로컬 기하학적 변환을 회전합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-247">Rotates the local geometric transform by the specified amount in the specified order.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="16d8f-248">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-248">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="16d8f-249">코드</span><span class="sxs-lookup"><span data-stu-id="16d8f-249">The code</span></span>  
  
-   <span data-ttu-id="16d8f-250">새 <xref:System.Drawing.Drawing2D.LinearGradientBrush>를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-250">Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.</span></span>  
  
-   <span data-ttu-id="16d8f-251">이 브러시를 사용 하 여 화면에는 타원을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-251">Draws an ellipse to the screen using this brush.</span></span>  
  
-   <span data-ttu-id="16d8f-252">회전 하는 <xref:System.Drawing.Drawing2D.LinearGradientBrush> 호출 하 여 45도 <xref:System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="16d8f-252">Rotates the <xref:System.Drawing.Drawing2D.LinearGradientBrush> 45 degrees by calling the <xref:System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform%2A> method.</span></span>  
  
-   <span data-ttu-id="16d8f-253">화면 회전 된 브러시를 사용 하 여 첫 번째 타원 바로 아래에 타원을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-253">Draws an ellipse to the screen directly below the first ellipse, using the rotated brush.</span></span>  
  
 <span data-ttu-id="16d8f-254">그라데이션 아래쪽 타원의 맨 위 타원의 x 축으로 45도 각도에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-254">Notice that the gradient of the lower ellipse is at a 45 degree angle to the x-axis of the top ellipse.</span></span> <span data-ttu-id="16d8f-255">또한에 대 한 호출에서 <xref:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform%2A> 그라데이션 채우기 아래쪽 타원의 왼쪽된 가장자리의 왼쪽된 가장자리를 정당화 하기 메서드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-255">Also notice that a call to the <xref:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform%2A> method is used to justify the left edge of the gradient fill with the left edge of the lower ellipse.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CS/form1.cs#4)]
 [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ScaleTransform">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="16d8f-256">지정된 배율만큼 로컬 기하학적 변환의 배율을 조정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-256">Scales the local geometric transform by the specified amounts.</span>
          </span>
          <span data-ttu-id="16d8f-257">이 메서드는 변환 앞에 배율 조정 매트릭스를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-257">This method prepends the scaling matrix to the transform.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ScaleTransform">
      <MemberSignature Language="C#" Value="public void ScaleTransform (float sx, float sy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScaleTransform(float32 sx, float32 sy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScaleTransform (sx As Single, sy As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScaleTransform(float sx, float sy);" />
      <MemberSignature Language="F#" Value="member this.ScaleTransform : single * single -&gt; unit" Usage="linearGradientBrush.ScaleTransform (sx, sy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sx" Type="System.Single" />
        <Parameter Name="sy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="sx">
          <span data-ttu-id="16d8f-258">X축 방향으로 변환의 배율을 조정할 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-258">The amount by which to scale the transform in the x-axis direction.</span>
          </span>
        </param>
        <param name="sy">
          <span data-ttu-id="16d8f-259">Y-축 방향으로 변환의 배율을 조정할 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-259">The amount by which to scale the transform in the y-axis direction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16d8f-260">지정된 배율만큼 로컬 기하학적 변환의 배율을 조정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-260">Scales the local geometric transform by the specified amounts.</span>
          </span>
          <span data-ttu-id="16d8f-261">이 메서드는 변환 앞에 배율 조정 매트릭스를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-261">This method prepends the scaling matrix to the transform.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="16d8f-262">예제를 보려면 <xref:System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform%2A>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="16d8f-262">For an example, see <xref:System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleTransform">
      <MemberSignature Language="C#" Value="public void ScaleTransform (float sx, float sy, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScaleTransform(float32 sx, float32 sy, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScaleTransform (sx As Single, sy As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScaleTransform(float sx, float sy, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.ScaleTransform : single * single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="linearGradientBrush.ScaleTransform (sx, sy, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sx" Type="System.Single" />
        <Parameter Name="sy" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="sx">
          <span data-ttu-id="16d8f-263">X축 방향으로 변환의 배율을 조정할 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-263">The amount by which to scale the transform in the x-axis direction.</span>
          </span>
        </param>
        <param name="sy">
          <span data-ttu-id="16d8f-264">Y-축 방향으로 변환의 배율을 조정할 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-264">The amount by which to scale the transform in the y-axis direction.</span>
          </span>
        </param>
        <param name="order">
          <span data-ttu-id="16d8f-265">크기 조정 매트릭스를 앞에 추가할 것인지 아니면 뒤에 추가할 것인지를 지정하는 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-265">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies whether to append or prepend the scaling matrix.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16d8f-266">특정 순서로 지정된 배율만큼 로컬 기하학적 변환의 배율을 조정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-266">Scales the local geometric transform by the specified amounts in the specified order.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="16d8f-267">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-267">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="16d8f-268">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-268">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="16d8f-269">새 <xref:System.Drawing.Drawing2D.LinearGradientBrush>를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-269">Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.</span></span>  
  
-   <span data-ttu-id="16d8f-270">이 브러시를 사용 하 여 화면에는 타원을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-270">Draw an ellipse to the screen using this brush.</span></span>  
  
-   <span data-ttu-id="16d8f-271">눈금의 <xref:System.Drawing.Drawing2D.LinearGradientBrush> x 축에 두 배입니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-271">Scales the <xref:System.Drawing.Drawing2D.LinearGradientBrush> by a factor of two in the x-axis.</span></span>  
  
-   <span data-ttu-id="16d8f-272">화면 크기 조정 된 브러시를 사용 하 여 첫 번째 타원 바로 아래에 타원을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-272">Draws an ellipse to the screen directly below the first ellipse, using the scaled brush.</span></span>  
  
 <span data-ttu-id="16d8f-273">그라데이션 아래쪽 타원의 두 배 늘어남을 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-273">Notice that the gradient of the lower ellipse is stretched by a factor of two.</span></span> <span data-ttu-id="16d8f-274">또한에 대 한 호출에서 <xref:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform%2A> 그라데이션 채우기 타원의 왼쪽된 가장자리의 왼쪽된 가장자리를 정당화 하기 메서드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-274">Also notice that a call to the <xref:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform%2A> method is used to justify the left edge of the gradient fill with the left edge of ellipse.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CS/form1.cs#5)]
 [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetBlendTriangularShape">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="16d8f-275">가운데에 특정 색이 있으며, 양쪽 끝에서 단일 색으로 선형 대칭을 이루는 선형 그라데이션을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-275">Creates a linear gradient with a center color and a linear falloff to a single color on both ends.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetBlendTriangularShape">
      <MemberSignature Language="C#" Value="public void SetBlendTriangularShape (float focus);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBlendTriangularShape(float32 focus) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBlendTriangularShape (focus As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBlendTriangularShape(float focus);" />
      <MemberSignature Language="F#" Value="member this.SetBlendTriangularShape : single -&gt; unit" Usage="linearGradientBrush.SetBlendTriangularShape focus" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="focus" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="focus">
          <span data-ttu-id="16d8f-276">그라데이션이 끝 색으로만 구성된 지점인 그라데이션 가운데를 지정하는 0에서 100 사이의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-276">A value from 0 through 1 that specifies the center of the gradient (the point where the gradient is composed of only the ending color).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16d8f-277">가운데에 특정 색이 있으며, 양쪽 끝에서 단일 색으로 선형 대칭을 이루는 선형 그라데이션을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-277">Creates a linear gradient with a center color and a linear falloff to a single color on both ends.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16d8f-278">이 메서드는 지정 된 `focus`는 하는 구성 된 위치 에서만 끝 색입니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-278">This method specifies a `focus`, which is the point where the gradient is composed only of the ending color.</span></span> <span data-ttu-id="16d8f-279">`focus` 매개 변수 위치 그라데이션 선 따라 거리의 비율로 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-279">The `focus` parameter represents a location as a proportion of the distance along the gradient line.</span></span> <span data-ttu-id="16d8f-280">그라데이션은 어느 쪽을 선형으로 시작 색입니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-280">The gradient falls off to the starting color linearly to either side.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="16d8f-281">예제를 보려면 <xref:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape%2A>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="16d8f-281">For an example, see <xref:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBlendTriangularShape">
      <MemberSignature Language="C#" Value="public void SetBlendTriangularShape (float focus, float scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBlendTriangularShape(float32 focus, float32 scale) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBlendTriangularShape (focus As Single, scale As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBlendTriangularShape(float focus, float scale);" />
      <MemberSignature Language="F#" Value="member this.SetBlendTriangularShape : single * single -&gt; unit" Usage="linearGradientBrush.SetBlendTriangularShape (focus, scale)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="focus" Type="System.Single" />
        <Parameter Name="scale" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="focus">
          <span data-ttu-id="16d8f-282">그라데이션이 끝 색으로만 구성된 지점인 그라데이션 가운데를 지정하는 0에서 100 사이의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-282">A value from 0 through 1 that specifies the center of the gradient (the point where the gradient is composed of only the ending color).</span>
          </span>
        </param>
        <param name="scale">
          <span data-ttu-id="16d8f-283">시작 색에서 <c>포커스</c>(끝 색)까지 색이 대칭을 이루는 속도를 지정하는 0에서 1 사이의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-283">A value from 0 through1 that specifies how fast the colors falloff from the starting color to <c>focus</c> (ending color)</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16d8f-284">가운데에 특정 색이 있으며, 양쪽 끝에서 단일 색으로 선형 대칭을 이루는 선형 그라데이션을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-284">Creates a linear gradient with a center color and a linear falloff to a single color on both ends.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16d8f-285">이 메서드는 지정 된 `focus`는 하는 구성 된 위치 에서만 끝 색입니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-285">This method specifies a `focus`, which is the point where the gradient is composed only of the ending color.</span></span> <span data-ttu-id="16d8f-286">`focus` 매개 변수 위치 그라데이션 선 따라 거리의 비율로 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-286">The `focus` parameter represents a location as a proportion of the distance along the gradient line.</span></span> <span data-ttu-id="16d8f-287">그라데이션은 어느 쪽을 선형으로 시작 색입니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-287">The gradient falls off to the starting color linearly to either side.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="16d8f-288">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-288">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="16d8f-289">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-289">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="16d8f-290">새 <xref:System.Drawing.Drawing2D.LinearGradientBrush>를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-290">Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.</span></span>  
  
-   <span data-ttu-id="16d8f-291">이 브러시를 사용 하 여 화면에 선형, 왼쪽에서 오른쪽 전환 하는 색을 타원을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-291">Uses this brush to draw an ellipse to the screen that has a linear, left-to-right transition of colors.</span></span>  
  
-   <span data-ttu-id="16d8f-292">변환 된 <xref:System.Drawing.Drawing2D.LinearGradientBrush> 센터의 최고점이 삼각형 모양으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-292">Transforms the <xref:System.Drawing.Drawing2D.LinearGradientBrush> into a triangular shape with its peak in the center.</span></span>  
  
-   <span data-ttu-id="16d8f-293">변환된 된 브러시를 사용 하 여 화면에 두 번째 타원을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-293">Draws a second ellipse to the screen using the transformed brush.</span></span>  
  
 <span data-ttu-id="16d8f-294">아래쪽 타원의 그라데이션 파랑 빨강으로 다시 파랑이 전환 있는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-294">Notice that the gradient of the lower ellipse transitions from blue to red and then back to blue.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CS/form1.cs#6)]
 [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetSigmaBellShape">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="16d8f-295">종 모양의 곡선을 기반으로 그라데이션 대칭을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-295">Creates a gradient falloff based on a bell-shaped curve.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetSigmaBellShape">
      <MemberSignature Language="C#" Value="public void SetSigmaBellShape (float focus);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSigmaBellShape(float32 focus) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSigmaBellShape (focus As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSigmaBellShape(float focus);" />
      <MemberSignature Language="F#" Value="member this.SetSigmaBellShape : single -&gt; unit" Usage="linearGradientBrush.SetSigmaBellShape focus" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="focus" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="focus">
          <span data-ttu-id="16d8f-296">시작 색과 끝 색이 똑같이 혼합되어 있는 지점인 그라데이션 가운데를 지정하는 0에서 1 사이의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-296">A value from 0 through 1 that specifies the center of the gradient (the point where the starting color and ending color are blended equally).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16d8f-297">종 모양의 곡선을 기반으로 그라데이션 대칭을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-297">Creates a gradient falloff based on a bell-shaped curve.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16d8f-298">이 메서드는 지정 된 `focus`는 하는 구성 된 위치 에서만 끝 색입니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-298">This method specifies a `focus`, which is the point where the gradient is composed only of the ending color.</span></span> <span data-ttu-id="16d8f-299">`focus` 매개 변수 위치 그라데이션 선 따라 거리의 비율로 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-299">The `focus` parameter represents a location as a proportion of the distance along the gradient line.</span></span> <span data-ttu-id="16d8f-300">그라데이션은 어느 쪽을 벨 곡선 도형을 (정규 분포)에 따라 시작 색입니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-300">The gradient falls off to the starting color based on a bell curve shape (normal distribution) to either side.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="16d8f-301">예제를 참조 하세요. <xref:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape%2A>`.`</span><span class="sxs-lookup"><span data-stu-id="16d8f-301">For an example, see <xref:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape%2A>`.`</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSigmaBellShape">
      <MemberSignature Language="C#" Value="public void SetSigmaBellShape (float focus, float scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSigmaBellShape(float32 focus, float32 scale) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSigmaBellShape (focus As Single, scale As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSigmaBellShape(float focus, float scale);" />
      <MemberSignature Language="F#" Value="member this.SetSigmaBellShape : single * single -&gt; unit" Usage="linearGradientBrush.SetSigmaBellShape (focus, scale)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="focus" Type="System.Single" />
        <Parameter Name="scale" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="focus">
          <span data-ttu-id="16d8f-302">그라데이션이 끝 색으로만 구성된 지점인 그라데이션 가운데를 지정하는 0에서 100 사이의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-302">A value from 0 through 1 that specifies the center of the gradient (the point where the gradient is composed of only the ending color).</span>
          </span>
        </param>
        <param name="scale">
          <span data-ttu-id="16d8f-303">
            <c>포커스</c>에서 색이 대칭을 이루는 속도를 지정하는 0에서 1 사이의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-303">A value from 0 through 1 that specifies how fast the colors falloff from the <c>focus</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16d8f-304">종 모양의 곡선을 기반으로 그라데이션 대칭을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-304">Creates a gradient falloff based on a bell-shaped curve.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16d8f-305">이 메서드는 지정 된 `focus`는 하는 구성 된 위치 에서만 끝 색입니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-305">This method specifies a `focus`, which is the point where the gradient is composed only of the ending color.</span></span> <span data-ttu-id="16d8f-306">`focus` 매개 변수 위치 그라데이션 선 따라 거리의 비율로 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-306">The `focus` parameter represents a location as a proportion of the distance along the gradient line.</span></span> <span data-ttu-id="16d8f-307">그라데이션은 어느 쪽을 벨 곡선 도형을 (정규 분포)에 따라 시작 색입니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-307">The gradient falls off to the starting color based on a bell curve shape (normal distribution) to either side.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="16d8f-308">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-308">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="16d8f-309">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-309">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="16d8f-310">새 <xref:System.Drawing.Drawing2D.LinearGradientBrush>를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-310">Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.</span></span>  
  
-   <span data-ttu-id="16d8f-311">이 브러시를 사용 하 여 화면에 선형, 왼쪽에서 오른쪽 전환 하는 색을 타원을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-311">Uses this brush to draw an ellipse to the screen that has a linear, left-to-right transition of colors.</span></span>  
  
-   <span data-ttu-id="16d8f-312">변환 된 <xref:System.Drawing.Drawing2D.LinearGradientBrush> 중심의 최고점이 종 모양의 곡선이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-312">Transforms the <xref:System.Drawing.Drawing2D.LinearGradientBrush> to have a bell shaped curve with its peak in the center.</span></span>  
  
-   <span data-ttu-id="16d8f-313">종 모양 브러시를 사용 하 여 화면에 두 번째 타원을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-313">Draws a second ellipse to the screen using the bell-shaped brush.</span></span>  
  
 <span data-ttu-id="16d8f-314">아래쪽 타원의 그라데이션 파랑 빨강으로 다시 파랑이 전환 있는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-314">Notice that the gradient of the lower ellipse transitions from blue to red and then back to blue.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CS/form1.cs#7)]
 [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.Matrix Transform { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Drawing2D.Matrix Transform" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.LinearGradientBrush.Transform" />
      <MemberSignature Language="VB.NET" Value="Public Property Transform As Matrix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::Matrix ^ Transform { System::Drawing::Drawing2D::Matrix ^ get(); void set(System::Drawing::Drawing2D::Matrix ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Drawing.Drawing2D.Matrix with get, set" Usage="System.Drawing.Drawing2D.LinearGradientBrush.Transform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.Matrix</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="16d8f-315">이 <see cref="T:System.Drawing.Drawing2D.Matrix" />의 로컬 기하학적 변환을 정의하는 복사본 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-315">Gets or sets a copy <see cref="T:System.Drawing.Drawing2D.Matrix" /> that defines a local geometric transform for this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="16d8f-316">이 <see cref="T:System.Drawing.Drawing2D.Matrix" />로 그린 채우기에만 적용되는 기하학적 변환을 정의하는 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />의 복사본입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-316">A copy of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> that defines a geometric transform that applies only to fills drawn with this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16d8f-317">기하학적 변환은 변환, 크기 조정, 회전 하거나 그라데이션 채우기 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-317">A geometric transform can be used to translate, scale, rotate, or skew the gradient fill.</span></span> <span data-ttu-id="16d8f-318">반환 하는 매트릭스 및 여는 <xref:System.Drawing.Drawing2D.LinearGradientBrush.Transform%2A> 속성 브러시의 기하학적 변환의 복사본은, 더 이상 필요 행렬은 삭제 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-318">Because the matrix returned and by the <xref:System.Drawing.Drawing2D.LinearGradientBrush.Transform%2A> property is a copy of the brush's geometric transform, you should dispose of the matrix when you no longer need it.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TranslateTransform">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="16d8f-319">지정된 크기만큼 로컬 기하학적 변환을 이동합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-319">Translates the local geometric transform by the specified dimensions.</span>
          </span>
          <span data-ttu-id="16d8f-320">이 메서드는 변환 앞에 이동을 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-320">This method prepends the translation to the transform.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TranslateTransform">
      <MemberSignature Language="C#" Value="public void TranslateTransform (float dx, float dy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TranslateTransform(float32 dx, float32 dy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TranslateTransform (dx As Single, dy As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TranslateTransform(float dx, float dy);" />
      <MemberSignature Language="F#" Value="member this.TranslateTransform : single * single -&gt; unit" Usage="linearGradientBrush.TranslateTransform (dx, dy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="dx">
          <span data-ttu-id="16d8f-321">x-축으로의 이동 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-321">The value of the translation in x.</span>
          </span>
        </param>
        <param name="dy">
          <span data-ttu-id="16d8f-322">y-축으로의 이동 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-322">The value of the translation in y.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16d8f-323">지정된 크기만큼 로컬 기하학적 변환을 이동합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-323">Translates the local geometric transform by the specified dimensions.</span>
          </span>
          <span data-ttu-id="16d8f-324">이 메서드는 변환 앞에 이동을 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-324">This method prepends the translation to the transform.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="16d8f-325">예제를 보려면 <xref:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform%2A>를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="16d8f-325">For an example, see <xref:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslateTransform">
      <MemberSignature Language="C#" Value="public void TranslateTransform (float dx, float dy, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TranslateTransform(float32 dx, float32 dy, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TranslateTransform (dx As Single, dy As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TranslateTransform(float dx, float dy, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.TranslateTransform : single * single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="linearGradientBrush.TranslateTransform (dx, dy, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="dx">
          <span data-ttu-id="16d8f-326">x-축으로의 이동 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-326">The value of the translation in x.</span>
          </span>
        </param>
        <param name="dy">
          <span data-ttu-id="16d8f-327">y-축으로의 이동 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-327">The value of the translation in y.</span>
          </span>
        </param>
        <param name="order">
          <span data-ttu-id="16d8f-328">이동을 적용할 순서(앞에 추가 또는 뒤에 추가)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-328">The order (prepend or append) in which to apply the translation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16d8f-329">특정 순서로 지정된 크기만큼 로컬 기하학적 변환을 이동합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-329">Translates the local geometric transform by the specified dimensions in the specified order.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="16d8f-330">다음 코드 예제는 Windows Forms에서 사용 하도록 설계 되었으며 필요한 <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> 이벤트 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-330">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="16d8f-331">이 코드에서는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-331">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="16d8f-332">새 <xref:System.Drawing.Drawing2D.LinearGradientBrush>를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-332">Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.</span></span>  
  
-   <span data-ttu-id="16d8f-333">이 브러시를 사용 하 여 화면에 선형, 왼쪽에서 오른쪽 전환 하는 색에 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-333">Uses this brush to draw a rectangle to the screen that has a linear, left-to-right transition of colors.</span></span>  
  
-   <span data-ttu-id="16d8f-334">회전 하는 <xref:System.Drawing.Drawing2D.LinearGradientBrush> 으로 90도 고 그라데이션의 배율을 조정 합니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-334">Rotates the <xref:System.Drawing.Drawing2D.LinearGradientBrush> by 90 degrees and scales the gradient.</span></span>  
  
-   <span data-ttu-id="16d8f-335">화면 회전 및 크기 조정 된 그라데이션 사용 하 여 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-335">Draws the rectangle, with the rotated and scaled gradient, to the screen.</span></span>  
  
-   <span data-ttu-id="16d8f-336">선형 그라데이션 위쪽에서 아래쪽으로 실행 되도록 사각형을 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-336">Translates the rectangle so that it has a linear gradient running from top to bottom.</span></span>  
  
-   <span data-ttu-id="16d8f-337">화면으로 이동 된 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="16d8f-337">Draws the translated rectangle to the screen.</span></span>  
  
 <span data-ttu-id="16d8f-338">세 개의 사각형이 된다고 표시 중 맨 위를 보여 주는 왼쪽에서 오른쪽 그라데이션, 회전 및 크기 조정 된 그라데이션 및 최종, 번역 된 그라데이션 맨 아래를 보여 주는 중간 하나.</span><span class="sxs-lookup"><span data-stu-id="16d8f-338">Notice that there are three rectangles displayed the top one showing the left-to-right gradient, the middle one showing the rotated and scaled gradient, and the bottom one showing the final, translated gradient.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CPP/form1.cpp#8)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CS/form1.cs#8)]
 [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WrapMode">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.WrapMode WrapMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.WrapMode WrapMode" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.LinearGradientBrush.WrapMode" />
      <MemberSignature Language="VB.NET" Value="Public Property WrapMode As WrapMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::WrapMode WrapMode { System::Drawing::Drawing2D::WrapMode get(); void set(System::Drawing::Drawing2D::WrapMode value); };" />
      <MemberSignature Language="F#" Value="member this.WrapMode : System.Drawing.Drawing2D.WrapMode with get, set" Usage="System.Drawing.Drawing2D.LinearGradientBrush.WrapMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.WrapMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="16d8f-339">이 <see cref="T:System.Drawing.Drawing2D.WrapMode" />의 랩 모드를 나타내는 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 열거형을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-339">Gets or sets a <see cref="T:System.Drawing.Drawing2D.WrapMode" /> enumeration that indicates the wrap mode for this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="16d8f-340">이 <see cref="T:System.Drawing.Drawing2D.WrapMode" />로 그린 채우기를 바둑판식으로 배열하는 방법을 지정하는 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16d8f-340">A <see cref="T:System.Drawing.Drawing2D.WrapMode" /> that specifies how fills drawn with this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> are tiled.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>