<Type Name="AspNetWebSocket" FullName="System.Web.WebSockets.AspNetWebSocket">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ce786eeab65f79e5a02d0423e3a411f553228941" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="36375479" /></Metadata><TypeSignature Language="C#" Value="public sealed class AspNetWebSocket : System.Net.WebSockets.WebSocket" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AspNetWebSocket extends System.Net.WebSockets.WebSocket" />
  <TypeSignature Language="DocId" Value="T:System.Web.WebSockets.AspNetWebSocket" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AspNetWebSocket&#xA;Inherits WebSocket" />
  <TypeSignature Language="C++ CLI" Value="public ref class AspNetWebSocket sealed : System::Net::WebSockets::WebSocket" />
  <TypeSignature Language="F#" Value="type AspNetWebSocket = class&#xA;    inherit WebSocket" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.WebSockets.WebSocket</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="ebd84-101">ASP.NET 응용 프로그램에서 웹 서버와 클라이언트 간 실시간 전이중 연결을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="ebd84-101">Represents a real-time full-duplex connection between a web server and a client in an ASP.NET application.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public override void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebSockets.AspNetWebSocket.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Abort();" />
      <MemberSignature Language="F#" Value="abstract member Abort : unit -&gt; unit&#xA;override this.Abort : unit -&gt; unit" Usage="aspNetWebSocket.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ebd84-102"><see cref="T:System.Web.WebSockets.AspNetWebSocket" /> 개체에 대한 보류 중인 모든 I/O 작업을 취소하고 추가 I/O 작업을 시작하는 데 사용할 수 없도록 개체의 상태를 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="ebd84-102">Cancels any pending I/O operations on the <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object and sets the state of the object so that it cannot be used to start additional I/O operations.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebd84-103">이후에 <xref:System.Web.WebSockets.AspNetWebSocket.Abort%2A> 메서드를 호출한, 속성 및 I/O 작업을 포함 하지 않는 메서드를 계속 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ebd84-103">After the <xref:System.Web.WebSockets.AspNetWebSocket.Abort%2A> method has been called, you can still access properties and methods that do not involve I/O operations.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ebd84-104">이전에 삭제된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ebd84-104">The object was previously disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CloseAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task CloseAsync (System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task CloseAsync(valuetype System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebSockets.AspNetWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ CloseAsync(System::Net::WebSockets::WebSocketCloseStatus closeStatus, System::String ^ statusDescription, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="abstract member CloseAsync : System.Net.WebSockets.WebSocketCloseStatus * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.CloseAsync : System.Net.WebSockets.WebSocketCloseStatus * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="aspNetWebSocket.CloseAsync (closeStatus, statusDescription, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="closeStatus" Type="System.Net.WebSockets.WebSocketCloseStatus" />
        <Parameter Name="statusDescription" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="closeStatus"><span data-ttu-id="ebd84-105">닫기 작업의 상태 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="ebd84-105">The status code of the close operation.</span></span></param>
        <param name="statusDescription"><span data-ttu-id="ebd84-106">닫기 작업의 상태 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="ebd84-106">The status message of the close operation.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="ebd84-107">보류 중인 작업을 취소하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ebd84-107">The object that cancels a pending operation.</span></span></param>
        <summary><span data-ttu-id="ebd84-108">연결을 닫기 위해 비동기 메시지를 클라이언트로 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="ebd84-108">Sends an asynchronous message to a client to close the connection.</span></span> <span data-ttu-id="ebd84-109">서버에서 연결을 끊기 위한 요청을 시작하면 클라이언트에서 요청을 확인하기 위해 메서드가 반환되기 전에 이를 기다립니다.</span><span class="sxs-lookup"><span data-stu-id="ebd84-109">If the server initiates the request to close the connection, the method waits for the client to acknowledge the request before it returns.</span></span></summary>
        <returns><span data-ttu-id="ebd84-110">작업에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="ebd84-110">A reference to the operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebd84-111">사용할 수는 <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> 및 <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> 닫으려면 클라이언트에서 시작 된 서버에서 시작 및 요청에 대 한 메서드는 <xref:System.Web.WebSockets.AspNetWebSocket> 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="ebd84-111">You can use the <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> and <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> methods for both client-initiated and server-initiated requests to close an <xref:System.Web.WebSockets.AspNetWebSocket> connection.</span></span> <span data-ttu-id="ebd84-112">동일한 방식으로 클라이언트에서 시작 된 요청을 처리 하는 두 가지 방법: 클라이언트 연결을 닫을 서버로 메시지를 보냅니다을 서버는 다음이 방법 중 하나를 호출 하 고 클라이언트에 승인 메시지를 전송 하 고 나면 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="ebd84-112">The two methods handle client-initiated requests in the same way: After the client sends a message to the server to close the connection, the server calls one of these methods and sends an acknowledgment to the client, and then the method returns.</span></span>  
  
 <span data-ttu-id="ebd84-113">서버에서 시작 하는 요청에 대 한 두 메서드는 다르게 작동합니다.</span><span class="sxs-lookup"><span data-stu-id="ebd84-113">For server-initiated requests, the two methods work differently.</span></span> <span data-ttu-id="ebd84-114"><xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> 메서드 연결을 종료 하려면 클라이언트에 메시지를 보냅니다, 응답을 기다리는 및 다음을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="ebd84-114">The <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> method sends a message to the client to close the connection, waits for a response, and then returns.</span></span> <span data-ttu-id="ebd84-115">서버는 클라이언트에서 보낸 모든 추가 데이터를 기다리지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="ebd84-115">The server does not wait for any additional data sent by the client.</span></span> <span data-ttu-id="ebd84-116">반면,는 <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> 메서드 연결을 종료 하려면 클라이언트에 메시지를 보내고 응답을 기다리지 않고 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="ebd84-116">In contrast, the <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> method sends a message to the client to close the connection and returns without waiting for a response.</span></span> <span data-ttu-id="ebd84-117">메서드가 반환 후 호출할 수 있습니다는 <xref:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync%2A> 메서드 및 추가 데이터 또는 클라이언트에서 보낸 승인을 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="ebd84-117">After the method returns, you can call the <xref:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync%2A> method and handle either additional data or the acknowledgment that the client sends.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ebd84-118">이전에 삭제된 <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ebd84-118">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object was previously disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ebd84-119"><see cref="T:System.Web.WebSockets.AspNetWebSocket" /> 개체가 중단된 상태인 경우</span><span class="sxs-lookup"><span data-stu-id="ebd84-119">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object is in an aborted state.</span></span>  
  
<span data-ttu-id="ebd84-120">또는</span><span class="sxs-lookup"><span data-stu-id="ebd84-120">-or-</span></span> 
<span data-ttu-id="ebd84-121">보내기 작업을 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="ebd84-121">Sending operations are unavailable.</span></span>  
  
<span data-ttu-id="ebd84-122">또는</span><span class="sxs-lookup"><span data-stu-id="ebd84-122">-or-</span></span> 
<span data-ttu-id="ebd84-123">수신 작업을 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="ebd84-123">Receiving operations are unavailable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CloseOutputAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task CloseOutputAsync (System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task CloseOutputAsync(valuetype System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ CloseOutputAsync(System::Net::WebSockets::WebSocketCloseStatus closeStatus, System::String ^ statusDescription, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="abstract member CloseOutputAsync : System.Net.WebSockets.WebSocketCloseStatus * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.CloseOutputAsync : System.Net.WebSockets.WebSocketCloseStatus * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="aspNetWebSocket.CloseOutputAsync (closeStatus, statusDescription, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="closeStatus" Type="System.Net.WebSockets.WebSocketCloseStatus" />
        <Parameter Name="statusDescription" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="closeStatus"><span data-ttu-id="ebd84-124">닫기 작업의 상태 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="ebd84-124">The status code of the close operation.</span></span></param>
        <param name="statusDescription"><span data-ttu-id="ebd84-125">닫기 작업의 상태 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="ebd84-125">The status message of the close operation.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="ebd84-126">보류 중인 작업을 취소하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ebd84-126">The object that cancels a pending operation.</span></span></param>
        <summary><span data-ttu-id="ebd84-127">연결을 닫기 위해 비동기 메시지를 클라이언트로 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="ebd84-127">Sends an asynchronous message to a client to close the connection.</span></span> <span data-ttu-id="ebd84-128">서버에서 연결을 끊기 위한 요청을 시작하면 메서드는 응답을 기다리지 않고 바로 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="ebd84-128">If the server initiates the request to close the connection, the method returns without waiting for a response.</span></span></summary>
        <returns><span data-ttu-id="ebd84-129">작업에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="ebd84-129">A reference to the operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebd84-130">사용할 수는 <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> 및 <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> 닫으려면 클라이언트에서 시작 된 서버에서 시작 및 요청에 대 한 메서드는 <xref:System.Web.WebSockets.AspNetWebSocket> 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="ebd84-130">You can use the <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> and <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> methods for both client-initiated and server-initiated requests to close an <xref:System.Web.WebSockets.AspNetWebSocket> connection.</span></span> <span data-ttu-id="ebd84-131">동일한 방식으로 클라이언트에서 시작 된 요청을 처리 하는 두 가지 방법: 클라이언트 연결을 닫을 서버로 메시지를 보냅니다을 서버는 다음이 방법 중 하나를 호출 하 고 클라이언트에 승인 메시지를 전송 하 고 나면 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="ebd84-131">The two methods handle client-initiated requests in the same way: After the client sends a message to the server to close the connection, the server calls one of these methods and sends an acknowledgment to the client, and then the method returns.</span></span>  
  
 <span data-ttu-id="ebd84-132">서버에서 시작 하는 요청에 대 한 두 메서드는 다르게 작동합니다.</span><span class="sxs-lookup"><span data-stu-id="ebd84-132">For server-initiated requests, the two methods work differently.</span></span> <span data-ttu-id="ebd84-133"><xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> 메서드 연결을 종료 하려면 클라이언트에 메시지를 보냅니다, 응답을 기다리는 및 다음을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="ebd84-133">The <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> method sends a message to the client to close the connection, waits for a response, and then returns.</span></span> <span data-ttu-id="ebd84-134">서버는 클라이언트에서 보낸 모든 추가 데이터를 기다리지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="ebd84-134">The server does not wait for any additional data sent by the client.</span></span> <span data-ttu-id="ebd84-135">반면,는 <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> 메서드 연결을 종료 하려면 클라이언트에 메시지를 보내고 응답을 기다리지 않고 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="ebd84-135">In contrast, the <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> method sends a message to the client to close the connection and returns without waiting for a response.</span></span> <span data-ttu-id="ebd84-136">메서드가 반환 후 호출할 수 있습니다는 <xref:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync%2A> 메서드 및 추가 데이터 또는 클라이언트에서 보낸 승인을 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="ebd84-136">After the method returns, you can call the <xref:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync%2A> method and handle either additional data or the acknowledgment that the client sends.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ebd84-137">이전에 삭제된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ebd84-137">The object was previously disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ebd84-138"><see cref="T:System.Web.WebSockets.AspNetWebSocket" /> 개체가 중단된 상태인 경우</span><span class="sxs-lookup"><span data-stu-id="ebd84-138">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object is in an aborted state.</span></span>  
  
<span data-ttu-id="ebd84-139">또는</span><span class="sxs-lookup"><span data-stu-id="ebd84-139">-or-</span></span> 
<span data-ttu-id="ebd84-140">보내기 작업을 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="ebd84-140">Sending operations are unavailable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CloseStatus">
      <MemberSignature Language="C#" Value="public override Nullable&lt;System.Net.WebSockets.WebSocketCloseStatus&gt; CloseStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.Net.WebSockets.WebSocketCloseStatus&gt; CloseStatus" />
      <MemberSignature Language="DocId" Value="P:System.Web.WebSockets.AspNetWebSocket.CloseStatus" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CloseStatus As Nullable(Of WebSocketCloseStatus)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Nullable&lt;System::Net::WebSockets::WebSocketCloseStatus&gt; CloseStatus { Nullable&lt;System::Net::WebSockets::WebSocketCloseStatus&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.CloseStatus : Nullable&lt;System.Net.WebSockets.WebSocketCloseStatus&gt;" Usage="System.Web.WebSockets.AspNetWebSocket.CloseStatus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Net.WebSockets.WebSocketCloseStatus&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ebd84-141"><see cref="T:System.Web.WebSockets.AspNetWebSocket" /> 개체를 닫아야 하는 이유를 나타내는 상태 코드를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="ebd84-141">Gets a status code that indicates why an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object was closed.</span></span></summary>
        <value><span data-ttu-id="ebd84-142">상태 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="ebd84-142">The status code.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ebd84-143">이전에 삭제된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ebd84-143">The object was previously disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CloseStatusDescription">
      <MemberSignature Language="C#" Value="public override string CloseStatusDescription { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CloseStatusDescription" />
      <MemberSignature Language="DocId" Value="P:System.Web.WebSockets.AspNetWebSocket.CloseStatusDescription" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CloseStatusDescription As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CloseStatusDescription { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CloseStatusDescription : string" Usage="System.Web.WebSockets.AspNetWebSocket.CloseStatusDescription" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ebd84-144"><see cref="T:System.Web.WebSockets.AspNetWebSocket" /> 개체를 닫아야 하는 이유를 설명하는 상태 메시지를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="ebd84-144">Gets a status message that explains why an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object was closed.</span></span></summary>
        <value><span data-ttu-id="ebd84-145">상태 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="ebd84-145">The status message.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ebd84-146">이전에 삭제된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ebd84-146">The object was previously disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebSockets.AspNetWebSocket.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="aspNetWebSocket.Dispose " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ebd84-147"><see cref="T:System.Web.WebSockets.AspNetWebSocket" /> 개체에 사용되는 리소스를 모두 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="ebd84-147">Releases all resources used by an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebd84-148">ASP.NET에서 자동으로 호출 하는 <xref:System.Web.WebSockets.AspNetWebSocket.Dispose%2A> 메서드를를 <xref:System.Web.WebSockets.AspNetWebSocket> 실행 코드 완료 된 후에 남아 있는 모든 리소스를 해제 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ebd84-148">ASP.NET automatically calls the <xref:System.Web.WebSockets.AspNetWebSocket.Dispose%2A> method on a <xref:System.Web.WebSockets.AspNetWebSocket> object to release any resources that remain after your code has finished executing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;System.Net.WebSockets.WebSocketReceiveResult&gt; ReceiveAsync (ArraySegment&lt;byte&gt; buffer, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.WebSockets.WebSocketReceiveResult&gt; ReceiveAsync(valuetype System.ArraySegment`1&lt;unsigned int8&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;System::Net::WebSockets::WebSocketReceiveResult ^&gt; ^ ReceiveAsync(ArraySegment&lt;System::Byte&gt; buffer, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="abstract member ReceiveAsync : ArraySegment&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.WebSockets.WebSocketReceiveResult&gt;&#xA;override this.ReceiveAsync : ArraySegment&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.WebSockets.WebSocketReceiveResult&gt;" Usage="aspNetWebSocket.ReceiveAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.WebSockets.WebSocketReceiveResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="ebd84-149">메시지 데이터를 포함하는 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="ebd84-149">The array that contains the message data.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="ebd84-150">보류 중인 작업을 취소하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ebd84-150">The object that cancels a pending operation.</span></span></param>
        <summary><span data-ttu-id="ebd84-151">원격 클라이언트에서 단일 메시지 조각을 수신합니다.</span><span class="sxs-lookup"><span data-stu-id="ebd84-151">Receives a single message fragment from a remote client.</span></span></summary>
        <returns><span data-ttu-id="ebd84-152">메시지를 받는 작업에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="ebd84-152">A reference to the task of receiving a message.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ebd84-153">이전에 삭제된 <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ebd84-153">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object was previously disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ebd84-154"><see cref="T:System.Web.WebSockets.AspNetWebSocket" /> 개체가 중단된 상태인 경우</span><span class="sxs-lookup"><span data-stu-id="ebd84-154">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object is in an aborted state.</span></span>  
  
<span data-ttu-id="ebd84-155">또는</span><span class="sxs-lookup"><span data-stu-id="ebd84-155">-or-</span></span> 
<span data-ttu-id="ebd84-156">수신 작업을 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="ebd84-156">Receiving operations are unavailable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task SendAsync (ArraySegment&lt;byte&gt; buffer, System.Net.WebSockets.WebSocketMessageType messageType, bool endOfMessage, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task SendAsync(valuetype System.ArraySegment`1&lt;unsigned int8&gt; buffer, valuetype System.Net.WebSockets.WebSocketMessageType messageType, bool endOfMessage, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebSockets.AspNetWebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ SendAsync(ArraySegment&lt;System::Byte&gt; buffer, System::Net::WebSockets::WebSocketMessageType messageType, bool endOfMessage, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="abstract member SendAsync : ArraySegment&lt;byte&gt; * System.Net.WebSockets.WebSocketMessageType * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.SendAsync : ArraySegment&lt;byte&gt; * System.Net.WebSockets.WebSocketMessageType * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="aspNetWebSocket.SendAsync (buffer, messageType, endOfMessage, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="messageType" Type="System.Net.WebSockets.WebSocketMessageType" />
        <Parameter Name="endOfMessage" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="ebd84-157">메시지 데이터를 포함하는 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="ebd84-157">The array that contains the message data.</span></span></param>
        <param name="messageType"><span data-ttu-id="ebd84-158">메시지 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="ebd84-158">The message type.</span></span></param>
        <param name="endOfMessage"><span data-ttu-id="ebd84-159">조각이 전체 메시지의 끝임을 나타내려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ebd84-159"><see langword="true" /> to indicate that a fragment is the end of a complete message; otherwise, <see langword="false" />.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="ebd84-160">보류 중인 작업을 취소하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ebd84-160">The object that cancels a pending operation.</span></span></param>
        <summary><span data-ttu-id="ebd84-161">단일 메시지 조각을 원격 클라이언트로 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="ebd84-161">Sends a single message fragment to a remote client.</span></span></summary>
        <returns><span data-ttu-id="ebd84-162">메시지를 보내는 작업에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="ebd84-162">A reference to the task of sending a message.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ebd84-163"><see cref="T:System.Web.WebSockets.AspNetWebSocket" /> 개체가 삭제된 경우</span><span class="sxs-lookup"><span data-stu-id="ebd84-163">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ebd84-164"><see cref="T:System.Web.WebSockets.AspNetWebSocket" /> 개체가 중단된 상태인 경우</span><span class="sxs-lookup"><span data-stu-id="ebd84-164">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object is in an aborted state.</span></span>  
  
<span data-ttu-id="ebd84-165">또는</span><span class="sxs-lookup"><span data-stu-id="ebd84-165">-or-</span></span> 
<span data-ttu-id="ebd84-166">보내기 작업을 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="ebd84-166">Sending operations are unavailable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public override System.Net.WebSockets.WebSocketState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.WebSockets.WebSocketState State" />
      <MemberSignature Language="DocId" Value="P:System.Web.WebSockets.AspNetWebSocket.State" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property State As WebSocketState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::WebSockets::WebSocketState State { System::Net::WebSockets::WebSocketState get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Net.WebSockets.WebSocketState" Usage="System.Web.WebSockets.AspNetWebSocket.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebSockets.WebSocketState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ebd84-167"><see cref="T:System.Web.WebSockets.AspNetWebSocket" /> 개체의 열림 또는 닫힘 상태를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="ebd84-167">Gets a value that indicates the open or closed state of an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object.</span></span></summary>
        <value><span data-ttu-id="ebd84-168">현재 상태입니다.</span><span class="sxs-lookup"><span data-stu-id="ebd84-168">The current state.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ebd84-169">이전에 삭제된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ebd84-169">The object was previously disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SubProtocol">
      <MemberSignature Language="C#" Value="public override string SubProtocol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SubProtocol" />
      <MemberSignature Language="DocId" Value="P:System.Web.WebSockets.AspNetWebSocket.SubProtocol" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SubProtocol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SubProtocol { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SubProtocol : string" Usage="System.Web.WebSockets.AspNetWebSocket.SubProtocol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ebd84-170">원격 클라이언트 및 서버에서 <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> 연결을 통해 데이터를 교환하는 데 사용할 수 있는 응용 프로그램별 프로토콜의 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="ebd84-170">Gets the name of an application-specific protocol that a remote client and a server can use to exchange data over an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> connection.</span></span></summary>
        <value><span data-ttu-id="ebd84-171">프로토콜의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="ebd84-171">The name of the protocol.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ebd84-172">이전에 삭제된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ebd84-172">The object was previously disposed.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>