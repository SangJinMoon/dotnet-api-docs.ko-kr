<Type Name="EntityConnectionStringBuilder" FullName="System.Data.EntityClient.EntityConnectionStringBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="511b9178da597285c230aa9314a084b3d9d2508c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class EntityConnectionStringBuilder : System.Data.Common.DbConnectionStringBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EntityConnectionStringBuilder extends System.Data.Common.DbConnectionStringBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Data.EntityClient.EntityConnectionStringBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EntityConnectionStringBuilder&#xA;Inherits DbConnectionStringBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class EntityConnectionStringBuilder sealed : System::Data::Common::DbConnectionStringBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbConnectionStringBuilder</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="bca51-101">EntityClient에서 사용하는 연결 문자열의 내용을 손쉽게 만들고 관리할 수 있는 방법을 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bca51-101">Provides a simple way to create and manage the contents of connection strings used by the EntityClient.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bca51-102">개발자는 연결 문자열 작성기를 사용하여 프로그래밍 방식으로 올바른 구문의 연결 문자열을 만들고 이 클래스의 속성과 메서드를 사용하여 기존 연결 문자열의 구문을 분석한 다음 다시 빌드할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bca51-102">The connection string builder lets developers programmatically create syntactically correct connection strings, and parse and rebuild existing connection strings, by using properties and methods of the class.</span></span> <span data-ttu-id="bca51-103">연결 문자열 작성기는 알려진 키워드/값 쌍에 해당하는 강력한 형식의 속성을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="bca51-103">The connection string builder provides strongly typed properties corresponding to the known keyword/value pairs.</span></span> <span data-ttu-id="bca51-104">응용 프로그램에서 연결 문자열을 만들어야 할 경우 개발자는 <xref:System.Data.EntityClient.EntityConnectionStringBuilder> 클래스를 사용하여 연결 문자열을 빌드하고 수정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bca51-104">Developers who must create connection strings as part of applications can use the <xref:System.Data.EntityClient.EntityConnectionStringBuilder> class to build and modify connection strings.</span></span>  
  
 <span data-ttu-id="bca51-105"><xref:System.Data.EntityClient.EntityConnectionStringBuilder>는 각각이 <xref:System.Data.EntityClient.EntityConnectionStringBuilder> 속성 값으로 노출되는 키워드/값 쌍에 대해 유효성 검사를 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="bca51-105">The <xref:System.Data.EntityClient.EntityConnectionStringBuilder> performs checks for valid keyword/value pairs, each of which is exposed as a <xref:System.Data.EntityClient.EntityConnectionStringBuilder> property value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bca51-106">기본 데이터 원본에 대한 연결 문자열은 <xref:System.Data.EntityClient.EntityConnectionStringBuilder.ProviderConnectionString%2A> 속성을 통해 제공되며</span><span class="sxs-lookup"><span data-stu-id="bca51-106">The connection string for the underlying data source is supplied by the <xref:System.Data.EntityClient.EntityConnectionStringBuilder.ProviderConnectionString%2A> property.</span></span> <span data-ttu-id="bca51-107">이 공급자 연결 문자열에 대해서는 키워드/값 쌍에 대한 유효성 검사가 수행되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="bca51-107">The supplied provider connection string is not checked for valid keyword/value pairs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bca51-108">다음 예제에서는 <xref:System.Data.EntityClient.EntityConnectionStringBuilder>와 <xref:System.Data.SqlClient.SqlConnectionStringBuilder>를 함께 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="bca51-108">The following example demonstrates how to use the <xref:System.Data.EntityClient.EntityConnectionStringBuilder> in conjunction with a <xref:System.Data.SqlClient.SqlConnectionStringBuilder>.</span></span>  
  
 [!code-csharp[eSQLBasicExamples#BuildingConnectionStringWithEntityCommand](~/samples/snippets/csharp/VS_Snippets_Data/eSQLBasicExamples/CS/Program.cs#buildingconnectionstringwithentitycommand)]
 [!code-vb[eSQLBasicExamples#BuildingConnectionStringWithEntityCommand](~/samples/snippets/visualbasic/VS_Snippets_Data/eSQLBasicExamples/VB/Program.vb#buildingconnectionstringwithentitycommand)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Data.EntityClient.EntityConnection" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bca51-109">
            <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bca51-109">Initializes a new instance of the <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityConnectionStringBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnectionStringBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityConnectionStringBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bca51-110">
            <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bca51-110">Initializes a new instance of the <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bca51-111">다음 예제에서는 <xref:System.Data.EntityClient.EntityConnectionStringBuilder>와 <xref:System.Data.SqlClient.SqlConnectionStringBuilder>를 함께 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="bca51-111">The following example demonstrates how to use the <xref:System.Data.EntityClient.EntityConnectionStringBuilder> in conjunction with a <xref:System.Data.SqlClient.SqlConnectionStringBuilder>.</span></span> <span data-ttu-id="bca51-112">속성을 설정 하는 코드는 `SqlConnectionStringBuilder` 만들려는 <xref:System.Data.SqlClient.SqlConnection> 기본 공급자 연결 문자열의 일부를 제공 하는 연결 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="bca51-112">The code sets properties of a `SqlConnectionStringBuilder` to create a <xref:System.Data.SqlClient.SqlConnection> connection string that supplies part of the underlying provider connection string.</span></span> <span data-ttu-id="bca51-113">공급자 이름을 사용 하 여 설정할 수 없는 참고는 `SqlConnectionStringBuilder` 잘못 되어 `SqlConnection` 연결 문자열 구문입니다.</span><span class="sxs-lookup"><span data-stu-id="bca51-113">Note that the Provider name cannot be set using the `SqlConnectionStringBuilder` because it is not valid `SqlConnection` connection string syntax.</span></span> <span data-ttu-id="bca51-114">코드는 만듭니다는 <xref:System.Data.EntityClient.EntityConnection> 연결 문자열을 설정 하 여 `EntityConnectionStringBuilder` 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="bca51-114">The code creates the <xref:System.Data.EntityClient.EntityConnection> connection string by setting `EntityConnectionStringBuilder` properties.</span></span>  
  
 [!code-csharp[eSQLBasicExamples#BuildingConnectionStringWithEntityCommand](~/samples/snippets/csharp/VS_Snippets_Data/eSQLBasicExamples/CS/Program.cs#buildingconnectionstringwithentitycommand)]
 [!code-vb[eSQLBasicExamples#BuildingConnectionStringWithEntityCommand](~/samples/snippets/visualbasic/VS_Snippets_Data/eSQLBasicExamples/VB/Program.vb#buildingconnectionstringwithentitycommand)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityConnectionStringBuilder (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnectionStringBuilder.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityConnectionStringBuilder(System::String ^ connectionString);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">
          <span data-ttu-id="bca51-115">기본 데이터 원본에 대한 공급자별 연결 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bca51-115">A provider-specific connection string to the underlying data source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bca51-116">제공된 연결 문자열을 사용하여 <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bca51-116">Initializes a new instance of the <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> class using the supplied connection string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bca51-117">제공 된 `connectionString` 은 유효한 키워드/값 쌍에 대 한 확인 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="bca51-117">The supplied `connectionString` is not checked for valid keyword/value pairs.</span></span> <span data-ttu-id="bca51-118">유효한 키워드/값 구문을 보려면 <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="bca51-118">For valid keyword/value syntax, see <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>.</span></span>  
  
 <span data-ttu-id="bca51-119">공급자 고정 이름에 지정 해야 합니다는 `connectionString` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="bca51-119">The invariant Provider name must be specified in the `connectionString` parameter.</span></span> <span data-ttu-id="bca51-120">지원되는 공급자에는 다음이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="bca51-120">Supported providers include the following:</span></span>  
  
-   `System.Data.Odbc`  
  
-   `System.Data.OleDb`  
  
-   `System.Data.OracleClient`  
  
-   `System.Data.SqlClient`  
  
-   `Microsoft.SqlServerCe.Client`  
  
   
  
## Examples  
 <span data-ttu-id="bca51-121">다음 예제에서는 <xref:System.Data.EntityClient.EntityConnectionStringBuilder>와 <xref:System.Data.SqlClient.SqlConnectionStringBuilder>를 함께 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="bca51-121">The following example demonstrates how to use the <xref:System.Data.EntityClient.EntityConnectionStringBuilder> in conjunction with a <xref:System.Data.SqlClient.SqlConnectionStringBuilder>.</span></span> <span data-ttu-id="bca51-122">속성을 설정 하는 코드는 `SqlConnectionStringBuilder` 만들려는 <xref:System.Data.SqlClient.SqlConnection> 기본 공급자 연결 문자열의 일부를 제공 하는 연결 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="bca51-122">The code sets properties of a `SqlConnectionStringBuilder` to create a <xref:System.Data.SqlClient.SqlConnection> connection string that supplies part of the underlying provider connection string.</span></span> <span data-ttu-id="bca51-123">공급자 이름을 사용 하 여 설정할 수 없는 참고는 `SqlConnectionStringBuilder` 잘못 되어 `SqlConnection` 연결 문자열 구문입니다.</span><span class="sxs-lookup"><span data-stu-id="bca51-123">Note that the Provider name cannot be set using the `SqlConnectionStringBuilder` because it is not valid `SqlConnection` connection string syntax.</span></span> <span data-ttu-id="bca51-124">코드는 만듭니다는 <xref:System.Data.EntityClient.EntityConnection> 연결 문자열을 설정 하 여 `EntityConnectionStringBuilder` 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="bca51-124">The code creates the <xref:System.Data.EntityClient.EntityConnection> connection string by setting `EntityConnectionStringBuilder` properties.</span></span> <span data-ttu-id="bca51-125">사용 하지 않습니다는 `connectionString` 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="bca51-125">It does not use the `connectionString` overload.</span></span>  
  
 [!code-csharp[eSQLBasicExamples#BuildingConnectionStringWithEntityCommand](~/samples/snippets/csharp/VS_Snippets_Data/eSQLBasicExamples/CS/Program.cs#buildingconnectionstringwithentitycommand)]
 [!code-vb[eSQLBasicExamples#BuildingConnectionStringWithEntityCommand](~/samples/snippets/visualbasic/VS_Snippets_Data/eSQLBasicExamples/VB/Program.vb#buildingconnectionstringwithentitycommand)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public override void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnectionStringBuilder.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bca51-126">
            <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> 인스턴스의 콘텐츠를 지웁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bca51-126">Clears the contents of the <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bca51-127"><xref:System.Data.EntityClient.EntityConnectionStringBuilder.Clear%2A> 모든 키워드/값 쌍을 제거 하는 메서드는 <xref:System.Data.EntityClient.EntityConnectionStringBuilder> 하 고 모든 해당 속성을 null로 다시 설정 (`Nothing` 에 [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]).</span><span class="sxs-lookup"><span data-stu-id="bca51-127">The <xref:System.Data.EntityClient.EntityConnectionStringBuilder.Clear%2A> method removes all keyword/value pairs from the <xref:System.Data.EntityClient.EntityConnectionStringBuilder> and resets all corresponding properties to null (`Nothing` in [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public override bool ContainsKey (string keyword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ContainsKey(string keyword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnectionStringBuilder.ContainsKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ContainsKey (keyword As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ContainsKey(System::String ^ keyword);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keyword">
          <span data-ttu-id="bca51-128">
            <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" />에서 찾을 수 있는 키입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bca51-128">The key to locate in the <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bca51-129">
            <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" />에 특정 키가 들어 있는지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bca51-129">Determines whether the <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> contains a specific key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bca51-130">
            <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" />에 지정된 키가 있는 요소가 들어 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bca51-130">Returns <see langword="true" /> if the <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> contains an element that has the specified key; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFixedSize">
      <MemberSignature Language="C#" Value="public override bool IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnectionStringBuilder.IsFixedSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsFixedSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bca51-131">
            <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" />의 크기가 고정되어 있는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bca51-131">Gets a value that indicates whether the <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> has a fixed size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bca51-132">
            <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" />에서는 크기가 고정된 키/값 쌍 컬렉션을 제공하므로 항상 <see langword="true" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bca51-132">Returns <see langword="true" /> in every case, because the <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> supplies a fixed-size collection of keyword/value pairs.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[string keyword] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnectionStringBuilder.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides Property Item(keyword As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ keyword); void set(System::String ^ keyword, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keyword">
          <span data-ttu-id="bca51-133">가져오거나 설정할 항목의 키입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bca51-133">The key of the item to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bca51-134">지정된 키에 연결된 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bca51-134">Gets or sets the value associated with the specified key.</span>
          </span>
          <span data-ttu-id="bca51-135">C#에서는 이 속성이 인덱서입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bca51-135">In C#, this property is the indexer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bca51-136">지정한 키와 연결된 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bca51-136">The value associated with the specified key.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bca51-137"><xref:System.Data.EntityClient.EntityConnectionStringBuilder>에는 고정 크기의 사전이 포함되어 있기 때문에 사전에 없는 키를 추가하려고 하면 <xref:System.Collections.Generic.KeyNotFoundException>이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="bca51-137">Because the <xref:System.Data.EntityClient.EntityConnectionStringBuilder> contains a fixed-size dictionary, trying to add a key that does not exist in the dictionary throws a <xref:System.Collections.Generic.KeyNotFoundException>.</span></span>  
  
 <span data-ttu-id="bca51-138">유효한 키워드/값 구문을 보려면 <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="bca51-138">For valid keyword/value syntax, see <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bca51-139">
            <paramref name="keyword" />가 null 참조([!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]의 경우 <see langword="Nothing" />)인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="bca51-139">
              <paramref name="keyword" /> is a null reference (<see langword="Nothing" /> in [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]).</span>
          </span>
        </exception>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException">
          <span data-ttu-id="bca51-140">사용 가능한 키가 아닌 키를 추가하려고 한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="bca51-140">Tried to add a key that does not exist in the available keys.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="bca51-141">연결 문자열에 잘못된 값이 포함된 경우(예: Boolean 또는 숫자 값이 필요하지만 해당 값을 제공하지 않은 경우)</span>
          <span class="sxs-lookup">
            <span data-stu-id="bca51-141">Invalid value in the connection string (specifically, a Boolean or numeric value was expected but not supplied).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public override System.Collections.ICollection Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Keys" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnectionStringBuilder.Keys" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Keys As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ Keys { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bca51-142">
            <see cref="T:System.Collections.ICollection" />의 키를 포함하는 <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" />을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bca51-142">Gets an <see cref="T:System.Collections.ICollection" /> that contains the keys in the <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bca51-143">
            <see cref="T:System.Collections.ICollection" />의 키를 포함하는 <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bca51-143">An <see cref="T:System.Collections.ICollection" /> that contains the keys in the <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bca51-144">유효한 키워드/값 구문을 보려면 <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="bca51-144">For valid keyword/value syntax, see <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Metadata">
      <MemberSignature Language="C#" Value="public string Metadata { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Metadata" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnectionStringBuilder.Metadata" />
      <MemberSignature Language="VB.NET" Value="Public Property Metadata As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Metadata { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DisplayName("Metadata")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bca51-145">연결 문자열의 메타데이터 위치를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bca51-145">Gets or sets the metadata locations in the connection string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bca51-146">연결 문자열의 메타데이터 위치를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bca51-146">Gets or sets the metadata locations in the connection string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bca51-147">유효한 키워드/값 구문을 보려면 <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="bca51-147">For valid keyword/value syntax, see <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnectionStringBuilder.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DisplayName("Name")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bca51-148">구성 파일에 정의되어 있는 섹션의 이름을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bca51-148">Gets or sets the name of a section as defined in a configuration file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bca51-149">구성 파일의 섹션 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bca51-149">The name of a section in a configuration file.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bca51-150">유효한 키워드/값 구문을 보려면 <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="bca51-150">For valid keyword/value syntax, see <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public string Provider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Provider" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnectionStringBuilder.Provider" />
      <MemberSignature Language="VB.NET" Value="Public Property Provider As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Provider { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DisplayName("Provider")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bca51-151">연결 문자열의 기본 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 데이터 공급자의 이름을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bca51-151">Gets or sets the name of the underlying [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] data provider in the connection string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bca51-152">기본 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 데이터 공급자의 고정 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bca51-152">The invariant name of the underlying [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] data provider.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bca51-153">고정 Provider 이름은 기본 공급자의 <xref:System.Data.Common.DbProviderFactory> 개체를 검색하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="bca51-153">The invariant provider name is used retrieve the <xref:System.Data.Common.DbProviderFactory> object for the underlying provider.</span></span>  
  
 <span data-ttu-id="bca51-154">유효한 키워드/값 구문을 보려면 <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="bca51-154">For valid keyword/value syntax, see <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderConnectionString">
      <MemberSignature Language="C#" Value="public string ProviderConnectionString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProviderConnectionString" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnectionStringBuilder.ProviderConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public Property ProviderConnectionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProviderConnectionString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DisplayName("Provider Connection String")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bca51-155">공급자별 내부 연결 문자열을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bca51-155">Gets or sets the inner, provider-specific connection string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bca51-156">공급자별 내부 연결 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bca51-156">The inner, provider-specific connection string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bca51-157">공급자별 연결 문자열을 설정하기 전에는 키워드/값 쌍에 대한 유효성 검사가 수행되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="bca51-157">The provider-specific connection string is not checked for valid keyword/value pairs before it is set.</span></span> <span data-ttu-id="bca51-158">개발자는 강력한 형식의 연결 문자열 작성기 클래스를 사용하여 연결 문자열을 만들거나, <xref:System.Data.Common.DbConnectionStringBuilder> 클래스를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bca51-158">Developers can create connection strings by using either a strongly typed connection string builder class, or they can use the <xref:System.Data.Common.DbConnectionStringBuilder> class.</span></span> <span data-ttu-id="bca51-159"><xref:System.Data.Common.DbConnectionStringBuilder>는 키워드/값 쌍에 대해 유효성을 검사하지 않기 때문에</span><span class="sxs-lookup"><span data-stu-id="bca51-159">The <xref:System.Data.Common.DbConnectionStringBuilder> performs no checks for valid keyword/value pairs.</span></span> <span data-ttu-id="bca51-160">이 클래스를 사용할 경우 올바르지 않은 연결 문자열을 만들 가능성이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bca51-160">Therefore, it is possible using this class to create invalid connection strings.</span></span>  
  
 <span data-ttu-id="bca51-161">유효한 키워드/값 구문을 보려면 <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="bca51-161">For valid keyword/value syntax, see <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public override bool Remove (string keyword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Remove(string keyword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnectionStringBuilder.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Remove (keyword As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Remove(System::String ^ keyword);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keyword">
          <span data-ttu-id="bca51-162">이 <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" />의 연결 문자열에서 제거할 키워드/값 쌍의 키입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bca51-162">The key of the keyword/value pair to be removed from the connection string in this <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bca51-163">지정된 키를 가진 항목을 <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> 인스턴스에서 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bca51-163">Removes the entry with the specified key from the <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bca51-164">키가 연결 문자열에 있었으며 해당 키가 제거되었으면 <see langword="true" />를 반환하고, 키가 원래 없었으면 <see langword="false" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bca51-164">Returns <see langword="true" /> if the key existed in the connection string and was removed; <see langword="false" /> if the key did not exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bca51-165">때문에 `Remove` 는 성공을 나타내는 값을 반환 하는 메서드, 키워드/값 쌍을 제거 하려고 하기 전에 키를 찾을 하지 않아도 됩니다는 <xref:System.Data.EntityClient.EntityConnectionStringBuilder> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="bca51-165">Because the `Remove` method returns a value that indicates its success, it is not required to look for a key before trying to remove the keyword/value pair from the <xref:System.Data.EntityClient.EntityConnectionStringBuilder> instance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bca51-166">
            <paramref name="keyword" />가 null ([!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]의 경우 <see langword="Nothing" />)인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="bca51-166">
              <paramref name="keyword" /> is null (<see langword="Nothing" /> in [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)])</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public override bool TryGetValue (string keyword, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool TryGetValue(string keyword, [out] object&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnectionStringBuilder.TryGetValue(System.String,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function TryGetValue (keyword As String, ByRef value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool TryGetValue(System::String ^ keyword, [Runtime::InteropServices::Out] System::Object ^ % value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyword" Type="System.String" />
        <Parameter Name="value" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyword">
          <span data-ttu-id="bca51-167">검색할 항목의 키입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bca51-167">The key of the item to retrieve.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="bca51-168">
            <c>keyword</c>에 해당하는 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bca51-168">The value corresponding to <c>keyword.</c></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bca51-169">이 <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" />에서 제공된 키에 해당하는 값을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bca51-169">Retrieves a value corresponding to the supplied key from this <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bca51-170">
            <paramref name="keyword" />가 연결 문자열에 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bca51-170">Returns <see langword="true" /> if <paramref name="keyword" /> was found in the connection string; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bca51-171"><xref:System.Data.EntityClient.EntityConnectionStringBuilder.TryGetValue%2A> 메서드를 사용하면 제공된 키 이름이 올바른 키 이름인지 확인하지 않고도 <xref:System.Data.EntityClient.EntityConnectionStringBuilder>에서 값을 안전하게 검색할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bca51-171">The <xref:System.Data.EntityClient.EntityConnectionStringBuilder.TryGetValue%2A> method lets developers safely retrieve a value from a <xref:System.Data.EntityClient.EntityConnectionStringBuilder> without having to verify that the supplied key name is a valid key name.</span></span> <span data-ttu-id="bca51-172">`TryGetValue` 존재 하지 않는 키 전달 될 때 예외가 발생 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="bca51-172">`TryGetValue` does not raise an exception when it is passed a nonexistent key.</span></span> <span data-ttu-id="bca51-173">호출 `TryGetValue` 존재 하지 않는 키와 값이 null을 넣습니다 (`Nothing` Visual basic에서)에 `value` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="bca51-173">Calling `TryGetValue` with a nonexistent key puts the value null (`Nothing` in Visual Basic) in the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bca51-174">
            <paramref name="keyword" />에 null 값(Visual Basic에서는 <see langword="Nothing" />)이 포함된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="bca51-174">
              <paramref name="keyword" /> contains a null value (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>