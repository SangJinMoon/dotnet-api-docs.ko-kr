<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="EntityConnection.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-81070f4" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9d63614a-fd48-4a83-9dc4-ea1e401b6c15e2d81b6702490a46db7e98ac3d090173aeb6ed73.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e2d81b6702490a46db7e98ac3d090173aeb6ed73</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4b4804968da1dfdf71c501075a5b66957b54f2e8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/27/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.EntityClient.EntityConnection">
          <source>Contains a reference to a conceptual model and a data source connection.</source>
          <target state="translated">개념적 모델 및 데이터 소스 연결에 대한 참조를 포함합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Data.EntityClient.EntityConnection">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.EntityClient.EntityConnection">
          <source>To avoid inadvertently putting objects such as <ph id="ph1">&lt;xref:System.Data.Common.CommandTrees&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.Objects.ObjectContext&gt;</ph> out of sync with their metadata, <ph id="ph3">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> must lock its metadata.</source>
          <target state="translated">실수로 <ph id="ph1">&lt;xref:System.Data.Common.CommandTrees&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Data.Objects.ObjectContext&gt;</ph> 같은 개체가 해당 메타데이터와 비동기화되지 않도록 방지하려면 <ph id="ph3">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph>에서 메타데이터를 잠가야 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.EntityClient.EntityConnection">
          <source>No changes to the connection string are allowed after the metadata is locked.</source>
          <target state="translated">메타데이터가 잠긴 후에는 연결 문자열을 변경할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.EntityClient.EntityConnection">
          <source>The following are two scenarios in which metadata is locked:</source>
          <target state="translated">메타데이터가 잠기는 두 가지 시나리오는 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.EntityClient.EntityConnection">
          <source>The <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> instance is constructed through the default constructor, or through the <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29&gt;</ph> constructor, which accepts a connection string.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> 인스턴스가 기본 생성자를 통해 생성되거나 연결 문자열을 허용하는 <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29&gt;</ph> 생성자를 통해 생성됩니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.EntityClient.EntityConnection">
          <source>In either case the connection string might be changed multiple times before the connection is opened.</source>
          <target state="translated">어느 경우든 연결이 열리기 이전에 연결 문자열이 여러 번 변경될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.EntityClient.EntityConnection">
          <source>Calling <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection.Open%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A&gt;</ph> locks the metadata.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection.Open%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A&gt;</ph>를 호출하면 메타데이터가 잠깁니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.EntityClient.EntityConnection">
          <source>The <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> instance is constructed through the <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29&gt;</ph> constructor, which accepts a <ph id="ph3">&lt;xref:System.Data.Metadata.Edm.MetadataWorkspace&gt;</ph> and a <ph id="ph4">&lt;xref:System.Data.Common.DbConnection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Data.Metadata.Edm.MetadataWorkspace&gt;</ph>을 허용하는 <ph id="ph4">&lt;xref:System.Data.Common.DbConnection&gt;</ph> 생성자를 통해 생성됩니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.EntityClient.EntityConnection">
          <source>In this case, the metadata is locked at construction time.</source>
          <target state="translated">이 경우 메타데이터는 생성 시에 잠기므로</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.EntityClient.EntityConnection">
          <source>No changes to the connection string are ever allowed.</source>
          <target state="translated">연결 문자열을 절대 변경할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.EntityClient.EntityConnection">
          <source>When metadata is loaded, the <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> verifies that the conceptual model, the storage model, and the mapping file are all present.</source>
          <target state="translated">메타데이터가 로드되면 <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph>은 개념적 모델, 저장소 모델 및 매핑 파일이 모두 있는지 확인합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.EntityClient.EntityConnection">
          <source>For code examples, see <bpt id="p1">[</bpt>Working with EntityClient<ept id="p1">](http://msdn.microsoft.com/library/dec4728c-8dff-4e30-abe0-0f78fb5d5af5)</ept>.</source>
          <target state="translated">코드 예제를 보려면 참조 <bpt id="p1">[</bpt>EntityClient 작업<ept id="p1">](http://msdn.microsoft.com/library/dec4728c-8dff-4e30-abe0-0f78fb5d5af5)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="T:System.Data.EntityClient.EntityConnection">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.EntityClient.EntityConnection" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.EntityClient.EntityConnection" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.EntityClient.EntityConnection">
          <source>To avoid inadvertently putting objects such as <ph id="ph1">&lt;xref:System.Data.Common.CommandTrees&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.Objects.ObjectContext&gt;</ph> out of sync with their metadata, <ph id="ph3">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> must lock its metadata.</source>
          <target state="translated">실수로 <ph id="ph1">&lt;xref:System.Data.Common.CommandTrees&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Data.Objects.ObjectContext&gt;</ph> 같은 개체가 해당 메타데이터와 비동기화되지 않도록 방지하려면 <ph id="ph3">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph>에서 메타데이터를 잠가야 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.EntityClient.EntityConnection">
          <source>No changes to the connection string are allowed after the metadata is locked.</source>
          <target state="translated">메타데이터가 잠긴 후에는 연결 문자열을 변경할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.EntityClient.EntityConnection">
          <source>The following are two scenarios in which metadata is locked:</source>
          <target state="translated">메타데이터가 잠기는 두 가지 시나리오는 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.EntityClient.EntityConnection">
          <source>The <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> instance is constructed through the default constructor, or through the <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29&gt;</ph> constructor, which accepts a connection string.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> 인스턴스가 기본 생성자를 통해 생성되거나 연결 문자열을 허용하는 <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29&gt;</ph> 생성자를 통해 생성됩니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.EntityClient.EntityConnection">
          <source>In either case the connection string might be changed multiple times before the connection is opened.</source>
          <target state="translated">어느 경우든 연결이 열리기 이전에 연결 문자열이 여러 번 변경될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.EntityClient.EntityConnection">
          <source>Calling <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection.Open%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A&gt;</ph> locks the metadata.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection.Open%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A&gt;</ph>를 호출하면 메타데이터가 잠깁니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.EntityClient.EntityConnection">
          <source>The <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> instance is constructed through the <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29&gt;</ph> constructor, which accepts a <ph id="ph3">&lt;xref:System.Data.Metadata.Edm.MetadataWorkspace&gt;</ph> and a <ph id="ph4">&lt;xref:System.Data.Common.DbConnection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Data.Metadata.Edm.MetadataWorkspace&gt;</ph>을 허용하는 <ph id="ph4">&lt;xref:System.Data.Common.DbConnection&gt;</ph> 생성자를 통해 생성됩니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.EntityClient.EntityConnection">
          <source>In this case the metadata is locked at construction time.</source>
          <target state="translated">이 경우 메타데이터는 생성 시에 잠기므로</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.EntityClient.EntityConnection">
          <source>No changes to the connection string are ever allowed.</source>
          <target state="translated">연결 문자열을 절대 변경할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.EntityClient.EntityConnection">
          <source>When metadata is loaded, the <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> verifies that the conceptual model, the storage model, and the mapping file are all present.</source>
          <target state="translated">메타데이터가 로드되면 <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph>은 개념적 모델, 저장소 모델 및 매핑 파일이 모두 있는지 확인합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.EntityClient.EntityConnection">
          <source>For code examples, see <bpt id="p1">[</bpt>Working with EntityClient<ept id="p1">](http://msdn.microsoft.com/library/dec4728c-8dff-4e30-abe0-0f78fb5d5af5)</ept>.</source>
          <target state="translated">코드 예제를 보려면 참조 <bpt id="p1">[</bpt>EntityClient 작업<ept id="p1">](http://msdn.microsoft.com/library/dec4728c-8dff-4e30-abe0-0f78fb5d5af5)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Data.EntityClient.EntityConnection.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.EntityClient.EntityConnection" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.EntityClient.EntityConnection" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.#ctor">
          <source>To avoid inadvertently putting objects such as <ph id="ph1">&lt;xref:System.Data.Common.CommandTrees&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.Objects.ObjectContext&gt;</ph> out of sync with their metadata, <ph id="ph3">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> must lock its metadata.</source>
          <target state="translated">실수로 <ph id="ph1">&lt;xref:System.Data.Common.CommandTrees&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Data.Objects.ObjectContext&gt;</ph> 같은 개체가 해당 메타데이터와 비동기화되지 않도록 방지하려면 <ph id="ph3">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph>에서 메타데이터를 잠가야 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.#ctor">
          <source>No changes to the connection string are allowed after the metadata is locked.</source>
          <target state="translated">메타데이터가 잠긴 후에는 연결 문자열을 변경할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.#ctor">
          <source>The following are two scenarios in which metadata is locked:</source>
          <target state="translated">메타데이터가 잠기는 두 가지 시나리오는 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> instance is constructed through the default constructor, or through the <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29&gt;</ph> constructor, which accepts a connection string.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> 인스턴스가 기본 생성자를 통해 생성되거나 연결 문자열을 허용하는 <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29&gt;</ph> 생성자를 통해 생성됩니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.#ctor">
          <source>In either case the connection string might be changed multiple times before the connection is opened.</source>
          <target state="translated">어느 경우든 연결이 열리기 이전에 연결 문자열이 여러 번 변경될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.#ctor">
          <source>Calling <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection.Open%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A&gt;</ph> locks the metadata.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection.Open%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A&gt;</ph>를 호출하면 메타데이터가 잠깁니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> instance is constructed through the <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29&gt;</ph> constructor, which accepts a <ph id="ph3">&lt;xref:System.Data.Metadata.Edm.MetadataWorkspace&gt;</ph> and a <ph id="ph4">&lt;xref:System.Data.Common.DbConnection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Data.Metadata.Edm.MetadataWorkspace&gt;</ph>을 허용하는 <ph id="ph4">&lt;xref:System.Data.Common.DbConnection&gt;</ph> 생성자를 통해 생성됩니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.#ctor">
          <source>In this case the metadata is locked at construction time.</source>
          <target state="translated">이 경우 메타데이터는 생성 시에 잠기므로</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.#ctor">
          <source>No changes to the connection string are ever allowed.</source>
          <target state="translated">연결 문자열을 절대 변경할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.#ctor">
          <source>When metadata is loaded, the <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> verifies that the conceptual model, the storage model, and the mapping file are all present.</source>
          <target state="translated">메타데이터가 로드되면 <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph>은 개념적 모델, 저장소 모델 및 매핑 파일이 모두 있는지 확인합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.#ctor">
          <source>For code examples, see <bpt id="p1">[</bpt>Working with EntityClient<ept id="p1">](http://msdn.microsoft.com/library/dec4728c-8dff-4e30-abe0-0f78fb5d5af5)</ept>.</source>
          <target state="translated">코드 예제를 보려면 참조 <bpt id="p1">[</bpt>EntityClient 작업<ept id="p1">](http://msdn.microsoft.com/library/dec4728c-8dff-4e30-abe0-0f78fb5d5af5)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Data.EntityClient.EntityConnection.#ctor(System.String)">
          <source>The provider-specific connection string.</source>
          <target state="translated">공급자별 연결 문자열입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Data.EntityClient.EntityConnection.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.EntityClient.EntityConnection" /&gt;</ph> class, based on the connection string.</source>
          <target state="translated">연결 문자열을 기반으로 <ph id="ph1">&lt;see cref="T:System.Data.EntityClient.EntityConnection" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.#ctor(System.String)">
          <source>The  generate a named connection string that is stored in the application's configuration file.</source>
          <target state="translated">응용 프로그램의 구성 파일에 저장 되어 있는 명명 된 연결 문자열에 생성 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.#ctor(System.String)">
          <source>This named connection string can be supplied in place of the <ph id="ph1">`connectionString`</ph> parameter when you instantiate the <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> class.</source>
          <target state="translated">이 명명 된 연결 문자열을 대신 제공 될 수 있습니다는 <ph id="ph1">`connectionString`</ph> 인스턴스화할 때 매개 변수는 <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.#ctor(System.String)">
          <source>To avoid inadvertently putting objects <ph id="ph1">&lt;xref:System.Data.Common.CommandTrees&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.Objects.ObjectContext&gt;</ph> out of sync with their metadata, <ph id="ph3">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> must lock its metadata.</source>
          <target state="translated">실수로 <ph id="ph1">&lt;xref:System.Data.Common.CommandTrees&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Data.Objects.ObjectContext&gt;</ph> 같은 개체가 해당 메타데이터와 비동기화되지 않도록 방지하려면 <ph id="ph3">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph>에서 메타데이터를 잠가야 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.#ctor(System.String)">
          <source>No changes to the connection string are allowed after the metadata is locked.</source>
          <target state="translated">메타데이터가 잠긴 후에는 연결 문자열을 변경할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.#ctor(System.String)">
          <source>The following are two scenarios in which metadata is locked:</source>
          <target state="translated">메타데이터가 잠기는 두 가지 시나리오는 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.#ctor(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> instance is constructed through the default constructor, or through this constructor (<ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29&gt;</ph>), which accepts a connection string.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> 인스턴스가 기본 생성자를 통해 생성되거나 연결 문자열을 허용하는 이 생성자(<ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29&gt;</ph>)를 통해 생성됩니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.#ctor(System.String)">
          <source>In either case the connection string might be changed multiple times before the connection is opened.</source>
          <target state="translated">어느 경우든 연결이 열리기 이전에 연결 문자열이 여러 번 변경될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.#ctor(System.String)">
          <source>Calling <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection.Open%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A&gt;</ph> locks the metadata.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection.Open%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A&gt;</ph>를 호출하면 메타데이터가 잠깁니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.#ctor(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> instance is constructed through the <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29&gt;</ph> constructor, which accepts a <ph id="ph3">&lt;xref:System.Data.Metadata.Edm.MetadataWorkspace&gt;</ph> and a <ph id="ph4">&lt;xref:System.Data.Common.DbConnection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Data.Metadata.Edm.MetadataWorkspace&gt;</ph>을 허용하는 <ph id="ph4">&lt;xref:System.Data.Common.DbConnection&gt;</ph> 생성자를 통해 생성됩니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.#ctor(System.String)">
          <source>In this case the metadata is locked at construction time.</source>
          <target state="translated">이 경우 메타데이터는 생성 시에 잠기므로</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.#ctor(System.String)">
          <source>No changes to the connection string are ever allowed.</source>
          <target state="translated">연결 문자열을 절대 변경할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.#ctor(System.String)">
          <source>When metadata is loaded, the <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> verifies that the conceptual model, the storage model, and the mapping file are all present.</source>
          <target state="translated">메타데이터가 로드되면 <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph>은 개념적 모델, 저장소 모델 및 매핑 파일이 모두 있는지 확인합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.#ctor(System.String)">
          <source>For code examples, see <bpt id="p1">[</bpt>Working with EntityClient<ept id="p1">](http://msdn.microsoft.com/library/dec4728c-8dff-4e30-abe0-0f78fb5d5af5)</ept>.</source>
          <target state="translated">코드 예제를 보려면 참조 <bpt id="p1">[</bpt>EntityClient 작업<ept id="p1">](http://msdn.microsoft.com/library/dec4728c-8dff-4e30-abe0-0f78fb5d5af5)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Data.EntityClient.EntityConnection.#ctor(System.String)">
          <source>An invalid connection string keyword has been provided, or a required connection string keyword has not been provided.</source>
          <target state="translated">잘못된 연결 문자열 키워드를 제공했거나 필요한 연결 문자열 키워드를 제공하지 않은 경우</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Data.EntityClient.EntityConnection.#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Common.DbConnection)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /&gt;</ph> to be associated with this <ph id="ph2">&lt;see cref="T:System.Data.EntityClient.EntityConnection" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /&gt;</ph>과 연결할 <ph id="ph2">&lt;see cref="T:System.Data.EntityClient.EntityConnection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Data.EntityClient.EntityConnection.#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Common.DbConnection)">
          <source>The underlying data source connection for this <ph id="ph1">&lt;see cref="T:System.Data.EntityClient.EntityConnection" /&gt;</ph> object.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.EntityClient.EntityConnection" /&gt;</ph> 개체에 대한 기본 데이터 원본 연결입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Data.EntityClient.EntityConnection.#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Common.DbConnection)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.EntityClient.EntityConnection" /&gt;</ph> class with a specified <ph id="ph2">&lt;see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Data.Common.DbConnection" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Data.EntityClient.EntityConnection" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /&gt;</ph>을 사용하여 <ph id="ph3">&lt;see cref="T:System.Data.Common.DbConnection" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Common.DbConnection)">
          <source>This constructor enables you to create an <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> from metadata that is not from a file on a disk or from an embedded resource in an assembly.</source>
          <target state="translated">이 생성자를 사용하면 디스크에 저장된 파일 또는 어셈블리의 포함 리소스가 아닌 다른 메타데이터에서 <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph>을 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Common.DbConnection)">
          <source>To avoid inadvertently putting objects such as <ph id="ph1">&lt;xref:System.Data.Common.CommandTrees&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.Objects.ObjectContext&gt;</ph> out of sync with their metadata, the <ph id="ph3">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> must lock its metadata.</source>
          <target state="translated">실수로 <ph id="ph1">&lt;xref:System.Data.Common.CommandTrees&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Data.Objects.ObjectContext&gt;</ph> 같은 개체가 해당 메타데이터와 비동기화되지 않도록 방지하려면 <ph id="ph3">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph>에서 메타데이터를 잠가야 합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Common.DbConnection)">
          <source>No changes to the connection string are allowed after the metadata is locked.</source>
          <target state="translated">메타데이터가 잠긴 후에는 연결 문자열을 변경할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Common.DbConnection)">
          <source>The following are two scenarios in which metadata is locked:</source>
          <target state="translated">메타데이터가 잠기는 두 가지 시나리오는 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Common.DbConnection)">
          <source>The <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> instance is constructed through the default constructor, or through the <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29&gt;</ph> constructor, which accepts a connection string.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> 인스턴스가 기본 생성자를 통해 생성되거나 연결 문자열을 허용하는 <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29&gt;</ph> 생성자를 통해 생성됩니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Common.DbConnection)">
          <source>In either case the connection string might be changed multiple times before the connection is opened.</source>
          <target state="translated">어느 경우든 연결이 열리기 이전에 연결 문자열이 여러 번 변경될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Common.DbConnection)">
          <source>Calling <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection.Open%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A&gt;</ph> locks the metadata.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection.Open%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A&gt;</ph>를 호출하면 메타데이터가 잠깁니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Common.DbConnection)">
          <source>The <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> instance is constructed through this constructor (<ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29&gt;</ph>), which accepts a <ph id="ph3">&lt;xref:System.Data.Metadata.Edm.MetadataWorkspace&gt;</ph> and a <ph id="ph4">&lt;xref:System.Data.Common.DbConnection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Data.Metadata.Edm.MetadataWorkspace&gt;</ph>을 허용하는 이 생성자(<ph id="ph4">&lt;xref:System.Data.Common.DbConnection&gt;</ph>)를 통해 생성됩니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Common.DbConnection)">
          <source>In this case the metadata is locked at construction time.</source>
          <target state="translated">이 경우 메타데이터는 생성 시에 잠기므로</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Common.DbConnection)">
          <source>No changes to the connection string are ever allowed.</source>
          <target state="translated">연결 문자열을 절대 변경할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Common.DbConnection)">
          <source>When metadata is loaded, the <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> verifies that the conceptual model, the storage model, and the mapping file are all present.</source>
          <target state="translated">메타데이터가 로드되면 <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph>은 개념적 모델, 저장소 모델 및 매핑 파일이 모두 있는지 확인합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Data.EntityClient.EntityConnection.#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Common.DbConnection)">
          <source>The <ph id="ph1">&lt;paramref name="workspace" /&gt;</ph> or <ph id="ph2">&lt;paramref name="connection" /&gt;</ph> parameter is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="workspace" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="connection" /&gt;</ph> 매개 변수가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Data.EntityClient.EntityConnection.#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Common.DbConnection)">
          <source>The conceptual model is missing from the workspace.</source>
          <target state="translated">workspace                 </target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Data.EntityClient.EntityConnection.#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Common.DbConnection)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Data.EntityClient.EntityConnection.#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Common.DbConnection)">
          <source>The mapping file is missing from the workspace.</source>
          <target state="translated">workspace                </target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Data.EntityClient.EntityConnection.#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Common.DbConnection)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Data.EntityClient.EntityConnection.#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Common.DbConnection)">
          <source>The storage model is missing from the workspace.</source>
          <target state="translated">workspace                 </target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Data.EntityClient.EntityConnection.#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Common.DbConnection)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Data.EntityClient.EntityConnection.#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Common.DbConnection)">
          <source>The <ph id="ph1">&lt;paramref name="connection" /&gt;</ph> is not in a closed state.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="connection" /&gt;</ph>은 닫힌 상태에 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Data.EntityClient.EntityConnection.#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Common.DbConnection)">
          <source>The <ph id="ph1">&lt;paramref name="connection" /&gt;</ph> is not from an ADO.NET Entity Framework-compatible provider.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="connection" /&gt;</ph>을 ADO.NET Entity Framework 호환 공급자가 제공하지 않은 경우</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="T:System.Data.EntityClient.EntityConnection">
          <source>Begins a database transaction.</source>
          <target state="translated">데이터베이스 트랜잭션을 시작합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Data.EntityClient.EntityConnection.BeginTransaction">
          <source>Begins a transaction by using the underlying provider.</source>
          <target state="translated">기본 공급자를 사용하여 트랜잭션을 시작합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Data.EntityClient.EntityConnection.BeginTransaction">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.EntityClient.EntityTransaction" /&gt;</ph>.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Data.EntityClient.EntityTransaction" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Data.EntityClient.EntityConnection.BeginTransaction">
          <source>The returned <ph id="ph1">&lt;see cref="T:System.Data.EntityClient.EntityTransaction" /&gt;</ph> instance can later be associated with the <ph id="ph2">&lt;see cref="T:System.Data.EntityClient.EntityCommand" /&gt;</ph> to execute the command under that transaction.</source>
          <target state="translated">반환된 <ph id="ph1">&lt;see cref="T:System.Data.EntityClient.EntityTransaction" /&gt;</ph> 인스턴스는 나중에 <ph id="ph2">&lt;see cref="T:System.Data.EntityClient.EntityCommand" /&gt;</ph>와 연결되어 해당 트랜잭션에서 명령을 실행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.BeginTransaction">
          <source>The <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A&gt;</ph> method uses the <ph id="ph2">&lt;xref:System.Data.IsolationLevel.Unspecified&gt;</ph> transaction isolation level.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A&gt;</ph> 메서드는 <ph id="ph2">&lt;xref:System.Data.IsolationLevel.Unspecified&gt;</ph> 트랜잭션 격리 수준을 사용합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.BeginTransaction">
          <source>To specify a different isolation level, call <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A&gt;</ph>.</source>
          <target state="translated">다른 격리 수준을 지정하려면 <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A&gt;</ph>을 호출하십시오.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.BeginTransaction">
          <source>This value might be interpreted differently by different underlying providers.</source>
          <target state="translated">이 값은 기본 공급자에 따라 다르게 해석될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.BeginTransaction">
          <source>If you want your application to be portable across multiple providers, it should explicitly specify the transaction isolation level by calling <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A&gt;</ph>.</source>
          <target state="translated">사용 중인 응용 프로그램이 여러 공급자들 간에 이동 가능하도록 하려는 경우 <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A&gt;</ph>을 호출하여 트랜잭션 격리 수준을 명시적으로 지정해야 합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.BeginTransaction">
          <source>At any particular moment there can be no more than one active transaction that was created through <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A&gt;</ph>.</source>
          <target state="translated">특정 순간에 <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A&gt;</ph>을 통해 만들어진 활성 트랜잭션이 한 개뿐일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.BeginTransaction">
          <source>An attempt to call any of the <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A&gt;</ph> overloads on an <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> that already has a current transaction results in an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A&gt;</ph>을 호출하면 현재 트랜잭션이 이미 있는 <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph>이 오버로드되고 <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>이 발생합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Data.EntityClient.EntityConnection.BeginTransaction">
          <source>The underlying provider is not known.</source>
          <target state="translated">기본 공급자를 알 수 없는 경우</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Data.EntityClient.EntityConnection.BeginTransaction">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Data.EntityClient.EntityConnection.BeginTransaction">
          <source>The call to <ph id="ph1">&lt;see cref="M:System.Data.EntityClient.EntityConnection.BeginTransaction" /&gt;</ph> was made on an <ph id="ph2">&lt;see cref="T:System.Data.EntityClient.EntityConnection" /&gt;</ph> that already has a current transaction.</source>
          <target state="translated">현재 트랜잭션이 이미 있는 <ph id="ph1">&lt;see cref="M:System.Data.EntityClient.EntityConnection.BeginTransaction" /&gt;</ph>에 대해 <ph id="ph2">&lt;see cref="T:System.Data.EntityClient.EntityConnection" /&gt;</ph>을 호출한 경우</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Data.EntityClient.EntityConnection.BeginTransaction">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Data.EntityClient.EntityConnection.BeginTransaction">
          <source>The state of the <ph id="ph1">&lt;see cref="T:System.Data.EntityClient.EntityConnection" /&gt;</ph> is not <ph id="ph2">&lt;see cref="F:System.Data.ConnectionState.Open" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.EntityClient.EntityConnection" /&gt;</ph>의 상태가 <ph id="ph2">&lt;see cref="F:System.Data.ConnectionState.Open" /&gt;</ph>이 아닌 경우</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Data.EntityClient.EntityConnection.BeginTransaction(System.Data.IsolationLevel)">
          <source>The isolation level of the transaction.</source>
          <target state="translated">트랜잭션의 격리 수준입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Data.EntityClient.EntityConnection.BeginTransaction(System.Data.IsolationLevel)">
          <source>Begins a transaction with the specified isolation level by using the underlying provider.</source>
          <target state="translated">기본 공급자를 사용하여 지정된 격리 수준의 트랜잭션을 시작합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Data.EntityClient.EntityConnection.BeginTransaction(System.Data.IsolationLevel)">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.EntityClient.EntityTransaction" /&gt;</ph>.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Data.EntityClient.EntityTransaction" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Data.EntityClient.EntityConnection.BeginTransaction(System.Data.IsolationLevel)">
          <source>The returned <ph id="ph1">&lt;see cref="T:System.Data.EntityClient.EntityTransaction" /&gt;</ph> instance can later be associated with the <ph id="ph2">&lt;see cref="T:System.Data.EntityClient.EntityCommand" /&gt;</ph> to execute the command under that transaction.</source>
          <target state="translated">반환된 <ph id="ph1">&lt;see cref="T:System.Data.EntityClient.EntityTransaction" /&gt;</ph> 인스턴스는 나중에 <ph id="ph2">&lt;see cref="T:System.Data.EntityClient.EntityCommand" /&gt;</ph>와 연결되어 해당 트랜잭션에서 명령을 실행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.BeginTransaction(System.Data.IsolationLevel)">
          <source>At any particular moment there can be no more than one active transaction that was created through <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A&gt;</ph>.</source>
          <target state="translated">특정 순간에 <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A&gt;</ph>을 통해 만들어진 활성 트랜잭션이 한 개뿐일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.BeginTransaction(System.Data.IsolationLevel)">
          <source>An attempt to call any of the <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A&gt;</ph> overloads on an <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> that already has a current transaction results in an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A&gt;</ph>을 호출하면 현재 트랜잭션이 이미 있는 <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph>이 오버로드되고 <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>이 발생합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Data.EntityClient.EntityConnection.BeginTransaction(System.Data.IsolationLevel)">
          <source>The underlying provider is not known.</source>
          <target state="translated">기본 공급자를 알 수 없는 경우</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Data.EntityClient.EntityConnection.BeginTransaction(System.Data.IsolationLevel)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Data.EntityClient.EntityConnection.BeginTransaction(System.Data.IsolationLevel)">
          <source>The call to <ph id="ph1">&lt;see cref="M:System.Data.EntityClient.EntityConnection.BeginTransaction" /&gt;</ph> was made on an <ph id="ph2">&lt;see cref="T:System.Data.EntityClient.EntityConnection" /&gt;</ph> that already has a current transaction.</source>
          <target state="translated">현재 트랜잭션이 이미 있는 <ph id="ph1">&lt;see cref="M:System.Data.EntityClient.EntityConnection.BeginTransaction" /&gt;</ph>에 대해 <ph id="ph2">&lt;see cref="T:System.Data.EntityClient.EntityConnection" /&gt;</ph>을 호출한 경우</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Data.EntityClient.EntityConnection.BeginTransaction(System.Data.IsolationLevel)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Data.EntityClient.EntityConnection.BeginTransaction(System.Data.IsolationLevel)">
          <source>The state of the <ph id="ph1">&lt;see cref="T:System.Data.EntityClient.EntityConnection" /&gt;</ph> is not <ph id="ph2">&lt;see cref="F:System.Data.ConnectionState.Open" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.EntityClient.EntityConnection" /&gt;</ph>의 상태가 <ph id="ph2">&lt;see cref="F:System.Data.ConnectionState.Open" /&gt;</ph>이 아닌 경우</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Data.EntityClient.EntityConnection.ChangeDatabase(System.String)">
          <source>Not supported.</source>
          <target state="translated">지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Data.EntityClient.EntityConnection.ChangeDatabase(System.String)">
          <source>Not supported.</source>
          <target state="translated">지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.ChangeDatabase(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection.ChangeDatabase%2A&gt;</ph> method is required when deriving from <ph id="ph2">&lt;xref:System.Data.Common.DbConnection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection.ChangeDatabase%2A&gt;</ph> 에서 파생 된 경우 메서드는 필요 <ph id="ph2">&lt;xref:System.Data.Common.DbConnection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.ChangeDatabase(System.String)">
          <source>This method is not supported and will raise a <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph>.</source>
          <target state="translated">이 메서드는 지원 되지 않으며에서 발생 한 <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Data.EntityClient.EntityConnection.ChangeDatabase(System.String)">
          <source>When the method is called.</source>
          <target state="translated">이 메서드가 호출된 경우</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Data.EntityClient.EntityConnection.Close">
          <source>Closes the connection to the database.</source>
          <target state="translated">데이터베이스에 대한 연결을 닫습니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.Close">
          <source>If the underlying data provider is not known, the call to <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection.Close%2A&gt;</ph> does nothing.</source>
          <target state="translated">기본 데이터 공급자를 알 수 없는 경우 <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection.Close%2A&gt;</ph>를 호출해도 아무 동작도 수행되지 않습니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Data.EntityClient.EntityConnection.Close">
          <source>An error occurred when closing the connection.</source>
          <target state="translated">연결을 닫을 때 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="P:System.Data.EntityClient.EntityConnection.ConnectionString">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Data.EntityClient.EntityConnection" /&gt;</ph> connection string.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.EntityClient.EntityConnection" /&gt;</ph> 연결 문자열을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.ConnectionString">
          <source>The connection string required to establish the initial connection to a data source.</source>
          <target state="translated">데이터 원본에 대한 초기 연결을 설정하는 데 필요한 연결 문자열입니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.ConnectionString">
          <source>The default value is an empty string.</source>
          <target state="translated">기본값은 빈 문자열입니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.ConnectionString">
          <source>On a closed connection, the currently set value is returned.</source>
          <target state="translated">연결이 닫힌 경우에는 현재 설정된 값이 반환되고,</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.ConnectionString">
          <source>If no value has been set, an empty string is returned.</source>
          <target state="translated">값을 지정하지 않은 경우에는 빈 문자열이 반환됩니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.ConnectionString">
          <source>An <ph id="ph1">`EntityClient`</ph> connection string consists of a sequence of keyword/value parameter pairs separated by semicolons.</source>
          <target state="translated"><ph id="ph1">`EntityClient`</ph> 연결 문자열 세미콜론으로 구분 하는 키워드/값 매개 변수 쌍의 시퀀스를 구성 합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.ConnectionString">
          <source>The equals sign (=) connects each keyword and its value.</source>
          <target state="translated">각 키워드와 해당 값은 등호(=)로 연결됩니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.ConnectionString">
          <source>The following table lists the valid names for keyword values in the <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A&gt;</ph>.</source>
          <target state="translated">다음 표에는 <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A&gt;</ph>에 포함되는 키워드 값의 올바른 이름이 정리되어 있습니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.ConnectionString">
          <source>Keyword</source>
          <target state="translated">키워드</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.ConnectionString">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.ConnectionString">
          <source>Required if the <ph id="ph1">`Name`</ph> keyword is not specified.</source>
          <target state="translated"><ph id="ph1">`Name`</ph> 키워드를 지정하지 않은 경우에 필요합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.ConnectionString">
          <source>The provider name, which is used to retrieve the <ph id="ph1">&lt;xref:System.Data.Common.DbProviderFactory&gt;</ph> object for the underlying provider.</source>
          <target state="translated">기본 공급자의 <ph id="ph1">&lt;xref:System.Data.Common.DbProviderFactory&gt;</ph> 개체를 검색하는 데 사용되는 공급자 이름입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.ConnectionString">
          <source>This value is constant.</source>
          <target state="translated">이 값은 상수입니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.ConnectionString">
          <source>When the <ph id="ph1">`Name`</ph> keyword is not included in the connection string, a non-empty value for the <ph id="ph2">`Provider`</ph> keyword is required.</source>
          <target state="translated">경우는 <ph id="ph1">`Name`</ph> 키워드는 비어 있지 않은 값에 대 한 연결 문자열에 포함 되지 않습니다는 <ph id="ph2">`Provider`</ph> 키워드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.ConnectionString">
          <source>This keyword is mutually exclusive with the <ph id="ph1">`Name`</ph> keyword.</source>
          <target state="translated">이 키워드는 <ph id="ph1">`Name`</ph> 키워드와 함께 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.ConnectionString">
          <source>Optional.</source>
          <target state="translated">선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.ConnectionString">
          <source>Specifies the provider-specific connection string that is passed to the underlying data source.</source>
          <target state="translated">기본 데이터 소스에 전달되는 공급자별 연결 문자열을 지정합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.ConnectionString">
          <source>This connection string is expressed by using valid keyword/value pairs for the data provider.</source>
          <target state="translated">이 연결 문자열은 데이터 공급자의 유효한 키워드/값 쌍을 사용하여 표현됩니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.ConnectionString">
          <source>An invalid <ph id="ph1">`Provider Connection String`</ph> will cause a run-time error when it is evaluated by the data source.</source>
          <target state="translated"><ph id="ph1">`Provider Connection String`</ph>이 올바르지 않으면 데이터 소스에서 해당 문자열을 평가할 때 런타임 오류가 발생합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.ConnectionString">
          <source>This keyword is mutually exclusive with the <ph id="ph1">`Name`</ph> keyword.</source>
          <target state="translated">이 키워드는 <ph id="ph1">`Name`</ph> 키워드와 함께 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.ConnectionString">
          <source>The value of the <ph id="ph1">`Provider Connection String`</ph> must be surrounded by quotes.</source>
          <target state="translated"><ph id="ph1">`Provider Connection String`</ph>의 값은 따옴표로 묶어야 합니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.ConnectionString">
          <source>The following is an example:</source>
          <target state="translated">예를 들면 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.ConnectionString">
          <source>The following example is not going to work:</source>
          <target state="translated">다음은 잘못된 예입니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.ConnectionString">
          <source>Required if the <ph id="ph1">`Name`</ph> keyword is not specified.</source>
          <target state="translated"><ph id="ph1">`Name`</ph> 키워드를 지정하지 않은 경우에 필요합니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.ConnectionString">
          <source>A pipe-delimited list of directories, files, and resource locations in which to look for model and mapping information.</source>
          <target state="translated">파이프로 구분 된 목록이 디렉터리, 파일 및 리소스 위치를 한 모델 및 매핑 정보를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.ConnectionString">
          <source>The following is an example:</source>
          <target state="translated">예를 들면 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.ConnectionString">
          <source>Blank spaces on each side of the pipe separator are ignored.</source>
          <target state="translated">파이프 구분 기호 양쪽의 공백은 무시됩니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.ConnectionString">
          <source>This keyword is mutually exclusive with the <ph id="ph1">`Name`</ph> keyword.</source>
          <target state="translated">이 키워드는 <ph id="ph1">`Name`</ph> 키워드와 함께 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.ConnectionString">
          <source>The application can optionally specify the connection name in an application configuration file that provides the required keyword/value connection string values.</source>
          <target state="translated">응용 프로그램에서는 필수 키워드/값 연결 문자열 값을 제공하는 응용 프로그램 구성 파일에 연결 이름을 선택적으로 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.ConnectionString">
          <source>In this case, you cannot supply them directly in the connection string.</source>
          <target state="translated">이 경우에는 연결 문자열에 이름을 직접 지정할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.ConnectionString">
          <source>The <ph id="ph1">`Name`</ph> keyword is not allowed in a configuration file.</source>
          <target state="translated"><ph id="ph1">`Name`</ph> 키워드는 구성 파일에 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.ConnectionString">
          <source>When the <ph id="ph1">`Name`</ph> keyword is not included in the connection string, a non-empty values for Provider keyword is required.</source>
          <target state="translated"><ph id="ph1">`Name`</ph> 키워드가 엔터티 연결 문자열에 포함되어 있지 않은 경우 Provider 키워드에 대해 비어 있지 않은 값이 필요합니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.ConnectionString">
          <source>This keyword is mutually exclusive with all the other connection string keywords.</source>
          <target state="translated">이 키워드는 다른 모든 연결 문자열 키워드와 함께 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.ConnectionString">
          <source>The application can supply the keyword/values directly in the <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A&gt;</ph> property, or it can specify a value for the <ph id="ph2">`Name`</ph> keyword.</source>
          <target state="translated">응용 프로그램에는 키워드/값에서 직접 제공할 수는 <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A&gt;</ph> 속성 또는 것에 대 한 값을 지정할 수는 <ph id="ph2">`Name`</ph> 키워드입니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.ConnectionString">
          <source>If the <ph id="ph1">`Name`</ph> keyword is specified, the connection string keyword/values are retrieved from an application configuration file, as follows:</source>
          <target state="translated">경우는 <ph id="ph1">`Name`</ph> 키워드가 지정 되어, 연결 문자열 키워드/값은 다음과 같이 응용 프로그램 구성 파일에서 검색 됩니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.ConnectionString">
          <source>If the <ph id="ph1">`Name`</ph> keyword is used in the <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A&gt;</ph> property, other keywords are not allowed.</source>
          <target state="translated">경우는 <ph id="ph1">`Name`</ph> 키워드가 사용 되는 <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A&gt;</ph> 속성을 다른 키워드 허용 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.ConnectionString">
          <source>The <ph id="ph1">`Name`</ph> keyword refers to a named connection string that is stored in the <ph id="ph2">`connectionStrings`</ph> section in an application configuration file, as shown in the following example.</source>
          <target state="translated"><ph id="ph1">`Name`</ph> 키워드 명명된 된 연결 문자열에 저장 된 참조는 <ph id="ph2">`connectionStrings`</ph> 다음 예제와 같이 응용 프로그램 구성 파일 섹션.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.ConnectionString">
          <source>The <ph id="ph1">`Provider`</ph>, <ph id="ph2">`Metadata`</ph>, and <ph id="ph3">`Provider Connection String`</ph> values are retrieved from the configuration file at run time.</source>
          <target state="translated"><ph id="ph1">`Provider`</ph>, <ph id="ph2">`Metadata`</ph>, 및 <ph id="ph3">`Provider Connection String`</ph> 값 런타임 시 구성 파일에서 검색 됩니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.ConnectionString">
          <source>The keyword/value pairs can also be supplied directly in the <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A&gt;</ph> property, as shown in the following example.</source>
          <target state="translated">다음 예제와 같이 키워드/값 쌍을 <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A&gt;</ph> 속성에 직접 지정할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.ConnectionString">
          <source>In this case, the <ph id="ph1">`Name`</ph> keyword is not used.</source>
          <target state="translated">이 경우에 <ph id="ph1">`Name`</ph> 키워드가 사용 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.ConnectionString">
          <source>To avoid inadvertently putting objects such as <ph id="ph1">&lt;xref:System.Data.Common.CommandTrees&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.Objects.ObjectContext&gt;</ph> out of sync with their metadata, <ph id="ph3">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> must lock its metadata.</source>
          <target state="translated">실수로 <ph id="ph1">&lt;xref:System.Data.Common.CommandTrees&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Data.Objects.ObjectContext&gt;</ph> 같은 개체가 해당 메타데이터와 비동기화되지 않도록 방지하려면 <ph id="ph3">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph>에서 메타데이터를 잠가야 합니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.ConnectionString">
          <source>No changes to the connection string are allowed after the metadata is locked.</source>
          <target state="translated">메타데이터가 잠긴 후에는 연결 문자열을 변경할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.ConnectionString">
          <source>The following are two scenarios in which metadata is locked:</source>
          <target state="translated">메타데이터가 잠기는 두 가지 시나리오는 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.ConnectionString">
          <source>The <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> instance is constructed through the default constructor, or through the <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29&gt;</ph> constructor, which accepts a connection string.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> 인스턴스가 기본 생성자를 통해 생성되거나 연결 문자열을 허용하는 <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29&gt;</ph> 생성자를 통해 생성됩니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.ConnectionString">
          <source>In either case the connection string might be changed multiple times before the connection is opened.</source>
          <target state="translated">어느 경우든 연결이 열리기 이전에 연결 문자열이 여러 번 변경될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.ConnectionString">
          <source>Calling <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection.Open%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A&gt;</ph> locks the metadata.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection.Open%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A&gt;</ph>를 호출하면 메타데이터가 잠깁니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.ConnectionString">
          <source>The <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> instance is constructed through the <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29&gt;</ph> constructor, which accepts a <ph id="ph3">&lt;xref:System.Data.Metadata.Edm.MetadataWorkspace&gt;</ph> and a <ph id="ph4">&lt;xref:System.Data.Common.DbConnection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Data.Metadata.Edm.MetadataWorkspace&gt;</ph>을 허용하는 <ph id="ph4">&lt;xref:System.Data.Common.DbConnection&gt;</ph> 생성자를 통해 생성됩니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.ConnectionString">
          <source>In this case the metadata is locked at construction time.</source>
          <target state="translated">이 경우 메타데이터는 생성 시에 잠기므로</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.ConnectionString">
          <source>No changes to the connection string are ever allowed.</source>
          <target state="translated">연결 문자열을 절대 변경할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.ConnectionString">
          <source>When metadata is loaded, the <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> verifies that the conceptual model, the storage model, and the mapping file are all present.</source>
          <target state="translated">메타데이터가 로드되면 <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph>은 개념적 모델, 저장소 모델 및 매핑 파일이 모두 있는지 확인합니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.ConnectionString">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnectionStringBuilder&gt;</ph> in conjunction with a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnectionStringBuilder&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnectionStringBuilder&gt;</ph>와 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnectionStringBuilder&gt;</ph>를 함께 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.ConnectionString">
          <source>The code sets properties of a <ph id="ph1">`SqlConnectionStringBuilder`</ph> to create a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> string that supplies part of the underlying provider connection string.</source>
          <target state="translated">속성을 설정 하는 코드는 <ph id="ph1">`SqlConnectionStringBuilder`</ph> 만들려는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> 기본 공급자 연결 문자열의 일부를 제공 하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.ConnectionString">
          <source>Note that the <ph id="ph1">`Provider`</ph> name cannot be set by using the <ph id="ph2">`SqlConnectionStringBuilder`</ph>, because it does not use valid <ph id="ph3">`SqlConnection`</ph> syntax.</source>
          <target state="translated"><ph id="ph1">`Provider`</ph> 이름을 사용 하 여 설정할 수 없습니다는 <ph id="ph2">`SqlConnectionStringBuilder`</ph>유효한 사용 하지 않기 때문에, <ph id="ph3">`SqlConnection`</ph> 구문입니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.ConnectionString">
          <source>The code creates the <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> string by setting <ph id="ph2">`EntityConnectionStringBuilder`</ph> properties.</source>
          <target state="translated">코드는 만듭니다는 <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> 설정 하 여 문자열 <ph id="ph2">`EntityConnectionStringBuilder`</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="P:System.Data.EntityClient.EntityConnection.ConnectionString">
          <source>An attempt was made to set the <ph id="ph1">&lt;see cref="P:System.Data.EntityClient.EntityConnection.ConnectionString" /&gt;</ph> property after the <ph id="ph2">&lt;see cref="EntityConnection" /&gt;</ph>’s <ph id="ph3">&lt;see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /&gt;</ph> was initialized.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Data.EntityClient.EntityConnection.ConnectionString" /&gt;</ph>의  <ph id="ph2">&lt;see cref="EntityConnection" /&gt;</ph>가 초기화된 후 <ph id="ph3">&lt;see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /&gt;</ph> 속성을 설정하려고 한 경우.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="P:System.Data.EntityClient.EntityConnection.ConnectionString">
          <source>The <ph id="ph1">&lt;see cref="MetadataWorkspace" /&gt;</ph> is initialized either when the <ph id="ph2">&lt;see cref="EntityConnection" /&gt;</ph> instance is constructed through the overload that takes a <ph id="ph3">&lt;see cref="MetadataWorkspace" /&gt;</ph> as a parameter, or when the <ph id="ph4">&lt;see cref="T:System.Data.EntityClient.EntityConnection" /&gt;</ph> instance has been opened.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="MetadataWorkspace" /&gt;</ph>는 <ph id="ph2">&lt;see cref="EntityConnection" /&gt;</ph> 인스턴스가 <ph id="ph3">&lt;see cref="MetadataWorkspace" /&gt;</ph>를 매개 변수로 사용하는 오버로드를 통해 생성되거나 <ph id="ph4">&lt;see cref="T:System.Data.EntityClient.EntityConnection" /&gt;</ph> 인스턴스가 열렸을 때 초기화됩니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="P:System.Data.EntityClient.EntityConnection.ConnectionString">
          <source>An invalid connection string keyword has been provided or a required connection string keyword has not been provided.</source>
          <target state="translated">잘못된 연결 문자열 키워드를 제공했거나 필요한 연결 문자열 키워드를 제공하지 않은 경우</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="P:System.Data.EntityClient.EntityConnection.ConnectionTimeout">
          <source>Gets the number of seconds to wait when attempting to establish a connection before ending the attempt and generating an error.</source>
          <target state="translated">연결을 설정할 때 연결 시도를 끝내고 오류를 생성하기 전까지 대기할 시간(초)을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.ConnectionTimeout">
          <source>The time (in seconds) to wait for a connection to open.</source>
          <target state="translated">연결이 열리기 전까지 대기할 시간(초)입니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.ConnectionTimeout">
          <source>The default value is the underlying data provider's default time-out.</source>
          <target state="translated">기본값은 기본 데이터 공급자의 기본 제한 시간입니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.ConnectionTimeout">
          <source>Returns zero if the underlying data provider is not known.</source>
          <target state="translated">기본 데이터 공급자를 알 수 없으면 0이 반환됩니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="P:System.Data.EntityClient.EntityConnection.ConnectionTimeout">
          <source>The value set is less than 0.</source>
          <target state="translated">설정한 값이 0보다 작은 경우</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Data.EntityClient.EntityConnection.CreateCommand">
          <source>Creates a new instance of an <ph id="ph1">&lt;see cref="T:System.Data.EntityClient.EntityCommand" /&gt;</ph>, with the <ph id="ph2">&lt;see cref="P:System.Data.EntityClient.EntityCommand.Connection" /&gt;</ph> set to this <ph id="ph3">&lt;see cref="T:System.Data.EntityClient.EntityConnection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.EntityClient.EntityCommand" /&gt;</ph>의 새 인스턴스를 만들고 <ph id="ph2">&lt;see cref="P:System.Data.EntityClient.EntityCommand.Connection" /&gt;</ph>을 이 <ph id="ph3">&lt;see cref="T:System.Data.EntityClient.EntityConnection" /&gt;</ph>으로 설정합니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Data.EntityClient.EntityConnection.CreateCommand">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.EntityClient.EntityCommand" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.EntityClient.EntityCommand" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Data.EntityClient.EntityConnection.CreateCommand">
          <source>The name of the underlying data provider is not known.</source>
          <target state="translated">기본 데이터 공급자의 이름을 알 수 없는 경우</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="P:System.Data.EntityClient.EntityConnection.Database">
          <source>Gets the name of the current database, or the database that will be used after a connection is opened.</source>
          <target state="translated">현재 데이터베이스의 이름 또는 연결이 열린 후에 사용될 데이터베이스의 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.Database">
          <source>The value of the <ph id="ph1">&lt;see langword="Database" /&gt;</ph> property of the underlying data provider.</source>
          <target state="translated">내부 데이터 공급자의 <ph id="ph1">&lt;see langword="Database" /&gt;</ph> 속성 값입니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.Database">
          <source>For the specific keyword value, such as <ph id="ph1">`Database`</ph>, that maps to the <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnection.Database%2A&gt;</ph> property, see the documentation for the underlying data provider.</source>
          <target state="translated">특정 키워드 값에 대 한 같은 <ph id="ph1">`Database`</ph>에 매핑되는 <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnection.Database%2A&gt;</ph> 속성을 기본 데이터 공급자에 대 한 설명서를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.Database">
          <source>For SQL Server equivalent keywords, see the documentation for the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">SQL Server 해당 키워드에 대 한 설명서를 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="P:System.Data.EntityClient.EntityConnection.Database">
          <source>The underlying data provider is not known.</source>
          <target state="translated">기본 데이터 공급자를 알 수 없는 경우</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="P:System.Data.EntityClient.EntityConnection.DataSource">
          <source>Gets the name or network address of the data source to connect to.</source>
          <target state="translated">연결할 데이터 소스의 이름이나 네트워크 주소를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.DataSource">
          <source>The name of the data source.</source>
          <target state="translated">데이터 원본의 이름입니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.DataSource">
          <source>The default value is an empty string.</source>
          <target state="translated">기본값은 빈 문자열입니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.DataSource">
          <source>For the specific keyword value, such as <ph id="ph1">`DataSource`</ph>, that maps to the <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnection.DataSource%2A&gt;</ph> property, see the documentation for the underlying data provider.</source>
          <target state="translated">특정 키워드 값에 대 한 같은 <ph id="ph1">`DataSource`</ph>에 매핑되는 <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnection.DataSource%2A&gt;</ph> 속성을 기본 데이터 공급자에 대 한 설명서를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.DataSource">
          <source>For SQL Server equivalent keywords, see the documentation for the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">SQL Server 해당 키워드에 대 한 설명서를 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="P:System.Data.EntityClient.EntityConnection.DataSource">
          <source>The underlying data provider is not known.</source>
          <target state="translated">기본 데이터 공급자를 알 수 없는 경우</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Data.EntityClient.EntityConnection.EnlistTransaction(System.Transactions.Transaction)">
          <source>The transaction object to enlist into.</source>
          <target state="translated">연결을 인리스트먼트할 트랜잭션 개체입니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Data.EntityClient.EntityConnection.EnlistTransaction(System.Transactions.Transaction)">
          <source>Enlists this <ph id="ph1">&lt;see cref="T:System.Data.EntityClient.EntityConnection" /&gt;</ph> in the specified transaction.</source>
          <target state="translated">지정된 트랜잭션에 이 <ph id="ph1">&lt;see cref="T:System.Data.EntityClient.EntityConnection" /&gt;</ph>을 인리스트먼트합니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.EnlistTransaction(System.Transactions.Transaction)">
          <source>This method forwards the call to the data source connection to explicitly enlist in the passed <ph id="ph1">&lt;xref:System.Transactions.Transaction&gt;</ph>.</source>
          <target state="translated">이 메서드는 데이터 원본 연결에 대한 호출을 전달하여 전달된 <ph id="ph1">&lt;xref:System.Transactions.Transaction&gt;</ph>에 명시적으로 인리스트먼트합니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Data.EntityClient.EntityConnection.EnlistTransaction(System.Transactions.Transaction)">
          <source>The state of the <ph id="ph1">&lt;see cref="T:System.Data.EntityClient.EntityConnection" /&gt;</ph> is not <ph id="ph2">&lt;see cref="F:System.Data.ConnectionState.Open" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.EntityClient.EntityConnection" /&gt;</ph>의 상태가 <ph id="ph2">&lt;see cref="F:System.Data.ConnectionState.Open" /&gt;</ph>이 아닌 경우</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /&gt;</ph> associated with this <ph id="ph2">&lt;see cref="T:System.Data.EntityClient.EntityConnection" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /&gt;</ph>과 연결된 <ph id="ph2">&lt;see cref="T:System.Data.EntityClient.EntityConnection" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /&gt;</ph> associated with this <ph id="ph2">&lt;see cref="T:System.Data.EntityClient.EntityConnection" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /&gt;</ph>와 연결된 <ph id="ph2">&lt;see cref="T:System.Data.EntityClient.EntityConnection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace">
          <source>A <ph id="ph1">&lt;xref:System.Data.Metadata.Edm.MetadataWorkspace&gt;</ph> is automatically created when the <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> class is created.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Metadata.Edm.MetadataWorkspace&gt;</ph> 클래스가 생성되면 <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph>가 자동으로 만들어집니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace">
          <source>The creation process might throw metadata-specific exceptions.</source>
          <target state="translated">만드는 도중에 메타데이터 관련 예외가 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace">
          <source>Metadata is loaded into memory and an Entity Data Model (EDM) application uses that metadata to access information about the underlying data source.</source>
          <target state="translated">메타데이터는 메모리에 로드되며 EDM(엔터티 데이터 모델) 응용 프로그램에서는 해당 메타데이터를 사용하여 기본 데이터 원본에 대한 정보에 액세스합니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace">
          <source>For more information, see <bpt id="p1">[</bpt>ADO.NET Metadata<ept id="p1">](http://msdn.microsoft.com/library/196097a5-a791-4ac4-9e6a-805685d481d5)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>ADO.NET 메타 데이터<ept id="p1">](http://msdn.microsoft.com/library/196097a5-a791-4ac4-9e6a-805685d481d5)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace">
          <source>To avoid inadvertently putting objects such as <ph id="ph1">&lt;xref:System.Data.Common.CommandTrees&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.Objects.ObjectContext&gt;</ph> out of sync with their metadata, <ph id="ph3">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> must lock its metadata.</source>
          <target state="translated">실수로 <ph id="ph1">&lt;xref:System.Data.Common.CommandTrees&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Data.Objects.ObjectContext&gt;</ph> 같은 개체가 해당 메타데이터와 비동기화되지 않도록 방지하려면 <ph id="ph3">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph>에서 메타데이터를 잠가야 합니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace">
          <source>No changes to the connection string are allowed after the metadata is locked.</source>
          <target state="translated">메타데이터가 잠긴 후에는 연결 문자열을 변경할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace">
          <source>The following are two scenarios in which metadata is locked:</source>
          <target state="translated">메타데이터가 잠기는 두 가지 시나리오는 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace">
          <source>The <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> instance is constructed through the default constructor, or through the <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29&gt;</ph> constructor, which accepts a connection string.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> 인스턴스가 기본 생성자를 통해 생성되거나 연결 문자열을 허용하는 <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29&gt;</ph> 생성자를 통해 생성됩니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace">
          <source>In either case the connection string may be changed multiple times before the connection is opened.</source>
          <target state="translated">두 경우 모두 연결을 열기 전에 연결 문자열이 여러 번 변경할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace">
          <source><ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection.Open%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A&gt;</ph> locks the metadata.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection.Open%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A&gt;</ph> 하면 메타 데이터가 잠깁니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace">
          <source>The <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> instance is constructed through the <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29&gt;</ph> constructor, which accepts a <ph id="ph3">&lt;xref:System.Data.Metadata.Edm.MetadataWorkspace&gt;</ph> and a <ph id="ph4">&lt;xref:System.Data.Common.DbConnection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Data.Metadata.Edm.MetadataWorkspace&gt;</ph>을 허용하는 <ph id="ph4">&lt;xref:System.Data.Common.DbConnection&gt;</ph> 생성자를 통해 생성됩니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace">
          <source>In this case the metadata is locked at construction time.</source>
          <target state="translated">이 경우 메타데이터는 생성 시에 잠기므로</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace">
          <source>No changes to the connection string are ever allowed.</source>
          <target state="translated">연결 문자열을 절대 변경할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace">
          <source>When metadata is loaded, the <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> verifies that the conceptual model, the storage model, and the mapping file are all present.</source>
          <target state="translated">메타데이터가 로드되면 <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph>은 개념적 모델, 저장소 모델 및 매핑 파일이 모두 있는지 확인합니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace">
          <source>The inline connection string contains an invalid <ph id="ph1">&lt;see langword="Metadata" /&gt;</ph> keyword value.</source>
          <target state="translated">인라인 연결 문자열에 잘못된 <ph id="ph1">&lt;see langword="Metadata" /&gt;</ph> 키워드 값이 포함된 경우</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Data.EntityClient.EntityConnection.Open">
          <source>Establishes a connection to the data source by calling the underlying data provider's <ph id="ph1">&lt;see langword="Open" /&gt;</ph> method.</source>
          <target state="translated">기본 데이터 공급자의 <ph id="ph1">&lt;see langword="Open" /&gt;</ph> 메서드를 호출하여 데이터 원본에 대한 연결을 설정합니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.Open">
          <source>To avoid inadvertently putting objects such as <ph id="ph1">&lt;xref:System.Data.Common.CommandTrees&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.Objects.ObjectContext&gt;</ph> out of sync with their metadata, <ph id="ph3">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> must lock its metadata.</source>
          <target state="translated">실수로 <ph id="ph1">&lt;xref:System.Data.Common.CommandTrees&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Data.Objects.ObjectContext&gt;</ph> 같은 개체가 해당 메타데이터와 비동기화되지 않도록 방지하려면 <ph id="ph3">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph>에서 메타데이터를 잠가야 합니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.Open">
          <source>No changes to the connection string are allowed after the metadata is locked.</source>
          <target state="translated">메타데이터가 잠긴 후에는 연결 문자열을 변경할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.Open">
          <source>The following are two scenarios in which metadata is locked:</source>
          <target state="translated">메타데이터가 잠기는 두 가지 시나리오는 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.Open">
          <source>The <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> instance is constructed through the default constructor, or through the <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29&gt;</ph> constructor, which accepts a connection string.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> 인스턴스가 기본 생성자를 통해 생성되거나 연결 문자열을 허용하는 <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29&gt;</ph> 생성자를 통해 생성됩니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.Open">
          <source>In either case the connection string might be changed multiple times before the connection is opened.</source>
          <target state="translated">어느 경우든 연결이 열리기 이전에 연결 문자열이 여러 번 변경될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.Open">
          <source>Calling <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection.Open%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A&gt;</ph> locks the metadata.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection.Open%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A&gt;</ph>를 호출하면 메타데이터가 잠깁니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.Open">
          <source>The <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> instance is constructed through the <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29&gt;</ph> constructor, which that accepts a <ph id="ph3">&lt;xref:System.Data.Metadata.Edm.MetadataWorkspace&gt;</ph> and a <ph id="ph4">&lt;xref:System.Data.Common.DbConnection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Data.Metadata.Edm.MetadataWorkspace&gt;</ph>을 허용하는 <ph id="ph4">&lt;xref:System.Data.Common.DbConnection&gt;</ph> 생성자를 통해 생성됩니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.Open">
          <source>In this case the metadata is locked at construction time.</source>
          <target state="translated">이 경우 메타데이터는 생성 시에 잠기므로</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.Open">
          <source>No changes to the connection string are ever allowed.</source>
          <target state="translated">연결 문자열을 절대 변경할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityClient.EntityConnection.Open">
          <source>When metadata is loaded, the <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> verifies that the conceptual model, the storage model, and the mapping file are all present.</source>
          <target state="translated">메타데이터가 로드되면 <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph>은 개념적 모델, 저장소 모델 및 매핑 파일이 모두 있는지 확인합니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Data.EntityClient.EntityConnection.Open">
          <source>An error occurs when you open the connection, or the name of the underlying data provider is not known.</source>
          <target state="translated">연결을 열 때 오류가 발생하거나 기본 데이터 공급자의 이름을 알 수 없는 경우</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Data.EntityClient.EntityConnection.Open">
          <source>The inline connection string contains an invalid <ph id="ph1">&lt;see langword="Metadata" /&gt;</ph> keyword value.</source>
          <target state="translated">인라인 연결 문자열에 잘못된 <ph id="ph1">&lt;see langword="Metadata" /&gt;</ph> 키워드 값이 포함된 경우</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="P:System.Data.EntityClient.EntityConnection.ServerVersion">
          <source>Gets a string that contains the version of the data source to which the client is connected.</source>
          <target state="translated">클라이언트가 연결된 데이터 원본의 버전이 포함된 문자열을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.ServerVersion">
          <source>The version of the data source that is contained in the provider connection string.</source>
          <target state="translated">공급자 연결 문자열에 포함된 데이터 원본의 버전입니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="P:System.Data.EntityClient.EntityConnection.ServerVersion">
          <source>The connection is closed.</source>
          <target state="translated">연결이 닫힌 경우</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="P:System.Data.EntityClient.EntityConnection.State">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Data.ConnectionState" /&gt;</ph> property of the underlying provider if the <ph id="ph2">&lt;see cref="T:System.Data.EntityClient.EntityConnection" /&gt;</ph> is open.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.ConnectionState" /&gt;</ph>이 열려 있으면 기본 공급자의 <ph id="ph2">&lt;see cref="T:System.Data.EntityClient.EntityConnection" /&gt;</ph> 속성을 가져오고,</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="P:System.Data.EntityClient.EntityConnection.State">
          <source>Otherwise, returns <ph id="ph1">&lt;see cref="F:System.Data.ConnectionState.Closed" /&gt;</ph>.</source>
          <target state="translated">그렇지 않으면 <ph id="ph1">&lt;see cref="F:System.Data.ConnectionState.Closed" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.State">
          <source><ph id="ph1">&lt;see cref="F:System.Data.ConnectionState.Open" /&gt;</ph>, if and only if both the <ph id="ph2">&lt;see cref="T:System.Data.EntityClient.EntityConnection" /&gt;</ph>’s internal state and the underlying provider's <ph id="ph3">&lt;see cref="T:System.Data.ConnectionState" /&gt;</ph> are open.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Data.ConnectionState.Open" /&gt;</ph>의 내부 상태와 내부 공급자의 <ph id="ph2">&lt;see cref="T:System.Data.EntityClient.EntityConnection" /&gt;</ph>가 모두 open일 경우에만 <ph id="ph3">&lt;see cref="T:System.Data.ConnectionState" /&gt;</ph>을 반환하고,</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.State">
          <source>If the <ph id="ph1">&lt;see cref="T:System.Data.EntityClient.EntityConnection" /&gt;</ph>’s state is open but the provider's <ph id="ph2">&lt;see cref="T:System.Data.ConnectionState" /&gt;</ph> is closed, this property returns <ph id="ph3">&lt;see cref="F:System.Data.ConnectionState.Broken" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.EntityClient.EntityConnection" /&gt;</ph>의 상태는 open이지만 공급자의 <ph id="ph2">&lt;see cref="T:System.Data.ConnectionState" /&gt;</ph>가 closed일 경우 <ph id="ph3">&lt;see cref="F:System.Data.ConnectionState.Broken" /&gt;</ph>을 반환합니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.State">
          <source>Otherwise, it returns <ph id="ph1">&lt;see cref="F:System.Data.ConnectionState.Closed" /&gt;</ph>.</source>
          <target state="translated">그 외의 경우 <ph id="ph1">&lt;see cref="F:System.Data.ConnectionState.Closed" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="P:System.Data.EntityClient.EntityConnection.StoreConnection">
          <source>Provides access to the underlying data source connection that is used by the <ph id="ph1">&lt;see cref="T:System.Data.EntityClient.EntityConnection" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.EntityClient.EntityConnection" /&gt;</ph>개체에서 사용하는 기본 데이터 원본 연결에 액세스할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.StoreConnection">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.Common.DbConnection" /&gt;</ph> for the data source connection.</source>
          <target state="translated">데이터 원본 연결의 경우 <ph id="ph1">&lt;see cref="T:System.Data.Common.DbConnection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.StoreConnection">
          <source>If the <ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> object is closed, the returned data source connection will be closed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph>개체가 닫혔으면 반환된 데이터 원본 연결이 닫히고,</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.StoreConnection">
          <source>If it is open, an open data source connection will be returned.</source>
          <target state="translated">열려 있으면 열린 데이터 원본 연결이 반환됩니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.StoreConnection">
          <source>If the data source connection information was set, the returned value is always non-null.</source>
          <target state="translated">데이터 원본 정보가 설정된 경우 항상 null이 아닌 값이 반환됩니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.StoreConnection">
          <source>If there is no data source connection information (for example, if the default constructor was used and no connection string was set afterwards), then a null reference is returned.</source>
          <target state="translated">데이터 원본 연결 정보가 없는 경우(예: 기본 생성자가 사용되었으며 이후에 연결 문자열이 설정되지 않은 경우) null 참조가 반환됩니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.StoreConnection">
          <source>The same data source connection used by the Entity Framework can be shared with other parts of an application.</source>
          <target state="translated">Entity Framework에서 사용 되는 데이터 원본 연결 응용 프로그램의 다른 부분과 공유할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityClient.EntityConnection.StoreConnection">
          <source>The data source connection is returned as a <ph id="ph1">&lt;xref:System.Data.Common.DbConnection&gt;</ph> object from the <ph id="ph2">&lt;xref:System.Data.Objects.ObjectContext.Connection%2A&gt;</ph> property of <ph id="ph3">&lt;xref:System.Data.Objects.ObjectContext&gt;</ph>, or from the <ph id="ph4">&lt;xref:System.Data.EntityClient.EntityConnection.StoreConnection%2A&gt;</ph> property of <ph id="ph5">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph>.</source>
          <target state="translated">데이터 원본 연결은 <ph id="ph1">&lt;xref:System.Data.Common.DbConnection&gt;</ph>의 <ph id="ph2">&lt;xref:System.Data.Objects.ObjectContext.Connection%2A&gt;</ph> 속성에서 또는 <ph id="ph3">&lt;xref:System.Data.Objects.ObjectContext&gt;</ph>의 <ph id="ph4">&lt;xref:System.Data.EntityClient.EntityConnection.StoreConnection%2A&gt;</ph> 속성에서 <ph id="ph5">&lt;xref:System.Data.EntityClient.EntityConnection&gt;</ph> 개체로 반환됩니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>