<Type Name="EntityConnection" FullName="System.Data.EntityClient.EntityConnection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="384a4e9b8077be465ec13086c481928809fbf963" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39833039" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class EntityConnection : System.Data.Common.DbConnection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EntityConnection extends System.Data.Common.DbConnection" />
  <TypeSignature Language="DocId" Value="T:System.Data.EntityClient.EntityConnection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EntityConnection&#xA;Inherits DbConnection" />
  <TypeSignature Language="C++ CLI" Value="public ref class EntityConnection sealed : System::Data::Common::DbConnection" />
  <TypeSignature Language="F#" Value="type EntityConnection = class&#xA;    inherit DbConnection" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbConnection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="0166b-101">개념적 모델 및 데이터 소스 연결에 대한 참조를 포함합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0166b-101">Contains a reference to a conceptual model and a data source connection.</span>
      </span>
      <span data-ttu-id="0166b-102">이 클래스는 상속될 수 없습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0166b-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0166b-103">실수로 <xref:System.Data.Common.CommandTrees> 및 <xref:System.Data.Objects.ObjectContext> 같은 개체가 해당 메타데이터와 비동기화되지 않도록 방지하려면 <xref:System.Data.EntityClient.EntityConnection>에서 메타데이터를 잠가야 합니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-103">To avoid inadvertently putting objects such as <xref:System.Data.Common.CommandTrees> and <xref:System.Data.Objects.ObjectContext> out of sync with their metadata, <xref:System.Data.EntityClient.EntityConnection> must lock its metadata.</span></span> <span data-ttu-id="0166b-104">메타데이터가 잠긴 후에는 연결 문자열을 변경할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-104">No changes to the connection string are allowed after the metadata is locked.</span></span> <span data-ttu-id="0166b-105">메타데이터가 잠기는 두 가지 시나리오는 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-105">The following are two scenarios in which metadata is locked:</span></span>  
  
-   <span data-ttu-id="0166b-106"><xref:System.Data.EntityClient.EntityConnection> 인스턴스가 기본 생성자를 통해 생성되거나 연결 문자열을 허용하는 <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> 생성자를 통해 생성됩니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-106">The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the default constructor, or through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> constructor, which accepts a connection string.</span></span> <span data-ttu-id="0166b-107">어느 경우든 연결이 열리기 이전에 연결 문자열이 여러 번 변경될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-107">In either case the connection string might be changed multiple times before the connection is opened.</span></span> <span data-ttu-id="0166b-108"><xref:System.Data.EntityClient.EntityConnection.Open%2A> 또는 <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A>를 호출하면 메타데이터가 잠깁니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-108">Calling <xref:System.Data.EntityClient.EntityConnection.Open%2A> or <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> locks the metadata.</span></span>  
  
-   <span data-ttu-id="0166b-109"><xref:System.Data.EntityClient.EntityConnection> 인스턴스가 <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> 및 <xref:System.Data.Metadata.Edm.MetadataWorkspace>을 허용하는 <xref:System.Data.Common.DbConnection> 생성자를 통해 생성됩니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-109">The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> constructor, which accepts a <xref:System.Data.Metadata.Edm.MetadataWorkspace> and a <xref:System.Data.Common.DbConnection>.</span></span> <span data-ttu-id="0166b-110">이 경우 메타데이터는 생성 시에 잠기므로</span><span class="sxs-lookup"><span data-stu-id="0166b-110">In this case, the metadata is locked at construction time.</span></span> <span data-ttu-id="0166b-111">연결 문자열을 절대 변경할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-111">No changes to the connection string are ever allowed.</span></span>  
  
 <span data-ttu-id="0166b-112">메타데이터가 로드되면 <xref:System.Data.EntityClient.EntityConnection>은 개념적 모델, 저장소 모델 및 매핑 파일이 모두 있는지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-112">When metadata is loaded, the <xref:System.Data.EntityClient.EntityConnection> verifies that the conceptual model, the storage model, and the mapping file are all present.</span></span>  
  
 <span data-ttu-id="0166b-113">코드 예제를 보려면 [EntityClient 작업](http://msdn.microsoft.com/library/dec4728c-8dff-4e30-abe0-0f78fb5d5af5)합니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-113">For code examples, see [Working with EntityClient](http://msdn.microsoft.com/library/dec4728c-8dff-4e30-abe0-0f78fb5d5af5).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0166b-114">
            <see cref="T:System.Data.EntityClient.EntityConnection" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-114">Initializes a new instance of the <see cref="T:System.Data.EntityClient.EntityConnection" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0166b-115">실수로 <xref:System.Data.Common.CommandTrees> 및 <xref:System.Data.Objects.ObjectContext> 같은 개체가 해당 메타데이터와 비동기화되지 않도록 방지하려면 <xref:System.Data.EntityClient.EntityConnection>에서 메타데이터를 잠가야 합니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-115">To avoid inadvertently putting objects such as <xref:System.Data.Common.CommandTrees> and <xref:System.Data.Objects.ObjectContext> out of sync with their metadata, <xref:System.Data.EntityClient.EntityConnection> must lock its metadata.</span></span> <span data-ttu-id="0166b-116">메타데이터가 잠긴 후에는 연결 문자열을 변경할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-116">No changes to the connection string are allowed after the metadata is locked.</span></span> <span data-ttu-id="0166b-117">메타데이터가 잠기는 두 가지 시나리오는 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-117">The following are two scenarios in which metadata is locked:</span></span>  
  
-   <span data-ttu-id="0166b-118"><xref:System.Data.EntityClient.EntityConnection> 인스턴스가 기본 생성자를 통해 생성되거나 연결 문자열을 허용하는 <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> 생성자를 통해 생성됩니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-118">The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the default constructor, or through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> constructor, which accepts a connection string.</span></span> <span data-ttu-id="0166b-119">어느 경우든 연결이 열리기 이전에 연결 문자열이 여러 번 변경될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-119">In either case the connection string might be changed multiple times before the connection is opened.</span></span> <span data-ttu-id="0166b-120"><xref:System.Data.EntityClient.EntityConnection.Open%2A> 또는 <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A>를 호출하면 메타데이터가 잠깁니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-120">Calling <xref:System.Data.EntityClient.EntityConnection.Open%2A> or <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> locks the metadata.</span></span>  
  
-   <span data-ttu-id="0166b-121"><xref:System.Data.EntityClient.EntityConnection> 인스턴스가 <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> 및 <xref:System.Data.Metadata.Edm.MetadataWorkspace>을 허용하는 <xref:System.Data.Common.DbConnection> 생성자를 통해 생성됩니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-121">The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> constructor, which accepts a <xref:System.Data.Metadata.Edm.MetadataWorkspace> and a <xref:System.Data.Common.DbConnection>.</span></span> <span data-ttu-id="0166b-122">이 경우 메타데이터는 생성 시에 잠기므로</span><span class="sxs-lookup"><span data-stu-id="0166b-122">In this case the metadata is locked at construction time.</span></span> <span data-ttu-id="0166b-123">연결 문자열을 절대 변경할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-123">No changes to the connection string are ever allowed.</span></span>  
  
 <span data-ttu-id="0166b-124">메타데이터가 로드되면 <xref:System.Data.EntityClient.EntityConnection>은 개념적 모델, 저장소 모델 및 매핑 파일이 모두 있는지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-124">When metadata is loaded, the <xref:System.Data.EntityClient.EntityConnection> verifies that the conceptual model, the storage model, and the mapping file are all present.</span></span>  
  
 <span data-ttu-id="0166b-125">코드 예제를 보려면 [EntityClient 작업](http://msdn.microsoft.com/library/dec4728c-8dff-4e30-abe0-0f78fb5d5af5)합니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-125">For code examples, see [Working with EntityClient](http://msdn.microsoft.com/library/dec4728c-8dff-4e30-abe0-0f78fb5d5af5).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityConnection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0166b-126">
            <see cref="T:System.Data.EntityClient.EntityConnection" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-126">Initializes a new instance of the <see cref="T:System.Data.EntityClient.EntityConnection" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0166b-127">실수로 <xref:System.Data.Common.CommandTrees> 및 <xref:System.Data.Objects.ObjectContext> 같은 개체가 해당 메타데이터와 비동기화되지 않도록 방지하려면 <xref:System.Data.EntityClient.EntityConnection>에서 메타데이터를 잠가야 합니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-127">To avoid inadvertently putting objects such as <xref:System.Data.Common.CommandTrees> and <xref:System.Data.Objects.ObjectContext> out of sync with their metadata, <xref:System.Data.EntityClient.EntityConnection> must lock its metadata.</span></span> <span data-ttu-id="0166b-128">메타데이터가 잠긴 후에는 연결 문자열을 변경할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-128">No changes to the connection string are allowed after the metadata is locked.</span></span> <span data-ttu-id="0166b-129">메타데이터가 잠기는 두 가지 시나리오는 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-129">The following are two scenarios in which metadata is locked:</span></span>  
  
-   <span data-ttu-id="0166b-130"><xref:System.Data.EntityClient.EntityConnection> 인스턴스가 기본 생성자를 통해 생성되거나 연결 문자열을 허용하는 <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> 생성자를 통해 생성됩니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-130">The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the default constructor, or through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> constructor, which accepts a connection string.</span></span> <span data-ttu-id="0166b-131">어느 경우든 연결이 열리기 이전에 연결 문자열이 여러 번 변경될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-131">In either case the connection string might be changed multiple times before the connection is opened.</span></span> <span data-ttu-id="0166b-132"><xref:System.Data.EntityClient.EntityConnection.Open%2A> 또는 <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A>를 호출하면 메타데이터가 잠깁니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-132">Calling <xref:System.Data.EntityClient.EntityConnection.Open%2A> or <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> locks the metadata.</span></span>  
  
-   <span data-ttu-id="0166b-133"><xref:System.Data.EntityClient.EntityConnection> 인스턴스가 <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> 및 <xref:System.Data.Metadata.Edm.MetadataWorkspace>을 허용하는 <xref:System.Data.Common.DbConnection> 생성자를 통해 생성됩니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-133">The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> constructor, which accepts a <xref:System.Data.Metadata.Edm.MetadataWorkspace> and a <xref:System.Data.Common.DbConnection>.</span></span> <span data-ttu-id="0166b-134">이 경우 메타데이터는 생성 시에 잠기므로</span><span class="sxs-lookup"><span data-stu-id="0166b-134">In this case the metadata is locked at construction time.</span></span> <span data-ttu-id="0166b-135">연결 문자열을 절대 변경할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-135">No changes to the connection string are ever allowed.</span></span>  
  
 <span data-ttu-id="0166b-136">메타데이터가 로드되면 <xref:System.Data.EntityClient.EntityConnection>은 개념적 모델, 저장소 모델 및 매핑 파일이 모두 있는지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-136">When metadata is loaded, the <xref:System.Data.EntityClient.EntityConnection> verifies that the conceptual model, the storage model, and the mapping file are all present.</span></span>  
  
 <span data-ttu-id="0166b-137">코드 예제를 보려면 [EntityClient 작업](http://msdn.microsoft.com/library/dec4728c-8dff-4e30-abe0-0f78fb5d5af5)합니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-137">For code examples, see [Working with EntityClient](http://msdn.microsoft.com/library/dec4728c-8dff-4e30-abe0-0f78fb5d5af5).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityConnection (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnection.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityConnection(System::String ^ connectionString);" />
      <MemberSignature Language="F#" Value="new System.Data.EntityClient.EntityConnection : string -&gt; System.Data.EntityClient.EntityConnection" Usage="new System.Data.EntityClient.EntityConnection connectionString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">
          <span data-ttu-id="0166b-138">공급자별 연결 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-138">The provider-specific connection string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0166b-139">연결 문자열을 기반으로 <see cref="T:System.Data.EntityClient.EntityConnection" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-139">Initializes a new instance of the <see cref="T:System.Data.EntityClient.EntityConnection" /> class, based on the connection string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0166b-140">응용 프로그램의 구성 파일에 저장 되어 있는 명명 된 연결 문자열을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-140">The  generate a named connection string that is stored in the application's configuration file.</span></span> <span data-ttu-id="0166b-141">대신이 명명 된 연결 문자열을 제공할 수 있습니다 합니다 `connectionString` 인스턴스화할 때 매개 변수는 <xref:System.Data.EntityClient.EntityConnection> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-141">This named connection string can be supplied in place of the `connectionString` parameter when you instantiate the <xref:System.Data.EntityClient.EntityConnection> class.</span></span>  
  
 <span data-ttu-id="0166b-142">실수로 <xref:System.Data.Common.CommandTrees> 및 <xref:System.Data.Objects.ObjectContext> 같은 개체가 해당 메타데이터와 비동기화되지 않도록 방지하려면 <xref:System.Data.EntityClient.EntityConnection>에서 메타데이터를 잠가야 합니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-142">To avoid inadvertently putting objects <xref:System.Data.Common.CommandTrees> and <xref:System.Data.Objects.ObjectContext> out of sync with their metadata, <xref:System.Data.EntityClient.EntityConnection> must lock its metadata.</span></span> <span data-ttu-id="0166b-143">메타데이터가 잠긴 후에는 연결 문자열을 변경할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-143">No changes to the connection string are allowed after the metadata is locked.</span></span> <span data-ttu-id="0166b-144">메타데이터가 잠기는 두 가지 시나리오는 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-144">The following are two scenarios in which metadata is locked:</span></span>  
  
-   <span data-ttu-id="0166b-145"><xref:System.Data.EntityClient.EntityConnection> 인스턴스가 기본 생성자를 통해 생성되거나 연결 문자열을 허용하는 이 생성자(<xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29>)를 통해 생성됩니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-145">The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the default constructor, or through this constructor (<xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29>), which accepts a connection string.</span></span> <span data-ttu-id="0166b-146">어느 경우든 연결이 열리기 이전에 연결 문자열이 여러 번 변경될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-146">In either case the connection string might be changed multiple times before the connection is opened.</span></span> <span data-ttu-id="0166b-147"><xref:System.Data.EntityClient.EntityConnection.Open%2A> 또는 <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A>를 호출하면 메타데이터가 잠깁니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-147">Calling <xref:System.Data.EntityClient.EntityConnection.Open%2A> or <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> locks the metadata.</span></span>  
  
-   <span data-ttu-id="0166b-148"><xref:System.Data.EntityClient.EntityConnection> 인스턴스가 <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> 및 <xref:System.Data.Metadata.Edm.MetadataWorkspace>을 허용하는 <xref:System.Data.Common.DbConnection> 생성자를 통해 생성됩니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-148">The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> constructor, which accepts a <xref:System.Data.Metadata.Edm.MetadataWorkspace> and a <xref:System.Data.Common.DbConnection>.</span></span> <span data-ttu-id="0166b-149">이 경우 메타데이터는 생성 시에 잠기므로</span><span class="sxs-lookup"><span data-stu-id="0166b-149">In this case the metadata is locked at construction time.</span></span> <span data-ttu-id="0166b-150">연결 문자열을 절대 변경할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-150">No changes to the connection string are ever allowed.</span></span>  
  
 <span data-ttu-id="0166b-151">메타데이터가 로드되면 <xref:System.Data.EntityClient.EntityConnection>은 개념적 모델, 저장소 모델 및 매핑 파일이 모두 있는지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-151">When metadata is loaded, the <xref:System.Data.EntityClient.EntityConnection> verifies that the conceptual model, the storage model, and the mapping file are all present.</span></span>  
  
 <span data-ttu-id="0166b-152">코드 예제를 보려면 [EntityClient 작업](http://msdn.microsoft.com/library/dec4728c-8dff-4e30-abe0-0f78fb5d5af5)합니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-152">For code examples, see [Working with EntityClient](http://msdn.microsoft.com/library/dec4728c-8dff-4e30-abe0-0f78fb5d5af5).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0166b-153">잘못된 연결 문자열 키워드를 제공했거나 필요한 연결 문자열 키워드를 제공하지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-153">An invalid connection string keyword has been provided, or a required connection string keyword has not been provided.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityConnection (System.Data.Metadata.Edm.MetadataWorkspace workspace, System.Data.Common.DbConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Metadata.Edm.MetadataWorkspace workspace, class System.Data.Common.DbConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnection.#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Common.DbConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workspace As MetadataWorkspace, connection As DbConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityConnection(System::Data::Metadata::Edm::MetadataWorkspace ^ workspace, System::Data::Common::DbConnection ^ connection);" />
      <MemberSignature Language="F#" Value="new System.Data.EntityClient.EntityConnection : System.Data.Metadata.Edm.MetadataWorkspace * System.Data.Common.DbConnection -&gt; System.Data.EntityClient.EntityConnection" Usage="new System.Data.EntityClient.EntityConnection (workspace, connection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workspace" Type="System.Data.Metadata.Edm.MetadataWorkspace" />
        <Parameter Name="connection" Type="System.Data.Common.DbConnection" />
      </Parameters>
      <Docs>
        <param name="workspace">
          <span data-ttu-id="0166b-154">이 <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" />과 연결할 <see cref="T:System.Data.EntityClient.EntityConnection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-154">A <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> to be associated with this <see cref="T:System.Data.EntityClient.EntityConnection" />.</span>
          </span>
        </param>
        <param name="connection">
          <span data-ttu-id="0166b-155">이 <see cref="T:System.Data.EntityClient.EntityConnection" /> 개체에 대한 기본 데이터 원본 연결입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-155">The underlying data source connection for this <see cref="T:System.Data.EntityClient.EntityConnection" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0166b-156">지정된 <see cref="T:System.Data.EntityClient.EntityConnection" /> 및 <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" />을 사용하여 <see cref="T:System.Data.Common.DbConnection" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-156">Initializes a new instance of the <see cref="T:System.Data.EntityClient.EntityConnection" /> class with a specified <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> and <see cref="T:System.Data.Common.DbConnection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0166b-157">이 생성자를 사용하면 디스크에 저장된 파일 또는 어셈블리의 포함 리소스가 아닌 다른 메타데이터에서 <xref:System.Data.EntityClient.EntityConnection>을 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-157">This constructor enables you to create an <xref:System.Data.EntityClient.EntityConnection> from metadata that is not from a file on a disk or from an embedded resource in an assembly.</span></span>  
  
 <span data-ttu-id="0166b-158">실수로 <xref:System.Data.Common.CommandTrees> 및 <xref:System.Data.Objects.ObjectContext> 같은 개체가 해당 메타데이터와 비동기화되지 않도록 방지하려면 <xref:System.Data.EntityClient.EntityConnection>에서 메타데이터를 잠가야 합니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-158">To avoid inadvertently putting objects such as <xref:System.Data.Common.CommandTrees> and <xref:System.Data.Objects.ObjectContext> out of sync with their metadata, the <xref:System.Data.EntityClient.EntityConnection> must lock its metadata.</span></span> <span data-ttu-id="0166b-159">메타데이터가 잠긴 후에는 연결 문자열을 변경할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-159">No changes to the connection string are allowed after the metadata is locked.</span></span> <span data-ttu-id="0166b-160">메타데이터가 잠기는 두 가지 시나리오는 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-160">The following are two scenarios in which metadata is locked:</span></span>  
  
-   <span data-ttu-id="0166b-161"><xref:System.Data.EntityClient.EntityConnection> 인스턴스가 기본 생성자를 통해 생성되거나 연결 문자열을 허용하는 <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> 생성자를 통해 생성됩니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-161">The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the default constructor, or through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> constructor, which accepts a connection string.</span></span> <span data-ttu-id="0166b-162">어느 경우든 연결이 열리기 이전에 연결 문자열이 여러 번 변경될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-162">In either case the connection string might be changed multiple times before the connection is opened.</span></span> <span data-ttu-id="0166b-163"><xref:System.Data.EntityClient.EntityConnection.Open%2A> 또는 <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A>를 호출하면 메타데이터가 잠깁니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-163">Calling <xref:System.Data.EntityClient.EntityConnection.Open%2A> or <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> locks the metadata.</span></span>  
  
-   <span data-ttu-id="0166b-164"><xref:System.Data.EntityClient.EntityConnection> 인스턴스가 <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> 및 <xref:System.Data.Metadata.Edm.MetadataWorkspace>을 허용하는 이 생성자(<xref:System.Data.Common.DbConnection>)를 통해 생성됩니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-164">The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through this constructor (<xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29>), which accepts a <xref:System.Data.Metadata.Edm.MetadataWorkspace> and a <xref:System.Data.Common.DbConnection>.</span></span> <span data-ttu-id="0166b-165">이 경우 메타데이터는 생성 시에 잠기므로</span><span class="sxs-lookup"><span data-stu-id="0166b-165">In this case the metadata is locked at construction time.</span></span> <span data-ttu-id="0166b-166">연결 문자열을 절대 변경할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-166">No changes to the connection string are ever allowed.</span></span>  
  
 <span data-ttu-id="0166b-167">메타데이터가 로드되면 <xref:System.Data.EntityClient.EntityConnection>은 개념적 모델, 저장소 모델 및 매핑 파일이 모두 있는지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-167">When metadata is loaded, the <xref:System.Data.EntityClient.EntityConnection> verifies that the conceptual model, the storage model, and the mapping file are all present.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0166b-168">
            <paramref name="workspace" /> 또는 <paramref name="connection" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-168">The <paramref name="workspace" /> or <paramref name="connection" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0166b-169">workspace                 </span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-169">The conceptual model is missing from the workspace.</span>
          </span>
          <span data-ttu-id="0166b-170">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-170">-or-</span>
          </span>
          <span data-ttu-id="0166b-171">workspace                </span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-171">The mapping file is missing from the workspace.</span>
          </span>
          <span data-ttu-id="0166b-172">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-172">-or-</span>
          </span>
          <span data-ttu-id="0166b-173">workspace                 </span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-173">The storage model is missing from the workspace.</span>
          </span>
          <span data-ttu-id="0166b-174">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-174">-or-</span>
          </span>
          <span data-ttu-id="0166b-175">
            <paramref name="connection" />은 닫힌 상태에 있지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-175">The <paramref name="connection" /> is not in a closed state.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.ProviderIncompatibleException">
          <span data-ttu-id="0166b-176">
            <paramref name="connection" />을 ADO.NET Entity Framework 호환 공급자가 제공하지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-176">The <paramref name="connection" /> is not from an ADO.NET Entity Framework-compatible provider.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginDbTransaction">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbTransaction BeginDbTransaction (System.Data.IsolationLevel isolationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbTransaction BeginDbTransaction(valuetype System.Data.IsolationLevel isolationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnection.BeginDbTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbTransaction ^ BeginDbTransaction(System::Data::IsolationLevel isolationLevel);" />
      <MemberSignature Language="F#" Value="override this.BeginDbTransaction : System.Data.IsolationLevel -&gt; System.Data.Common.DbTransaction" Usage="entityConnection.BeginDbTransaction isolationLevel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isolationLevel" Type="System.Data.IsolationLevel" />
      </Parameters>
      <Docs>
        <param name="isolationLevel">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginTransaction">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0166b-177">데이터베이스 트랜잭션을 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-177">Begins a database transaction.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.EntityClient.EntityTransaction BeginTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.EntityClient.EntityTransaction BeginTransaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnection.BeginTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction () As EntityTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::EntityClient::EntityTransaction ^ BeginTransaction();" />
      <MemberSignature Language="F#" Value="override this.BeginTransaction : unit -&gt; System.Data.EntityClient.EntityTransaction" Usage="entityConnection.BeginTransaction " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EntityClient.EntityTransaction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0166b-178">기본 공급자를 사용하여 트랜잭션을 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-178">Begins a transaction by using the underlying provider.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0166b-179">새 <see cref="T:System.Data.EntityClient.EntityTransaction" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-179">A new <see cref="T:System.Data.EntityClient.EntityTransaction" />.</span>
          </span>
          <span data-ttu-id="0166b-180">반환된 <see cref="T:System.Data.EntityClient.EntityTransaction" /> 인스턴스는 나중에 <see cref="T:System.Data.EntityClient.EntityCommand" />와 연결되어 해당 트랜잭션에서 명령을 실행할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-180">The returned <see cref="T:System.Data.EntityClient.EntityTransaction" /> instance can later be associated with the <see cref="T:System.Data.EntityClient.EntityCommand" /> to execute the command under that transaction.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0166b-181"><xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A> 메서드는 <xref:System.Data.IsolationLevel.Unspecified> 트랜잭션 격리 수준을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-181">The <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A> method uses the <xref:System.Data.IsolationLevel.Unspecified> transaction isolation level.</span></span> <span data-ttu-id="0166b-182">다른 격리 수준을 지정하려면 <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A>을 호출하십시오.</span><span class="sxs-lookup"><span data-stu-id="0166b-182">To specify a different isolation level, call <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A>.</span></span> <span data-ttu-id="0166b-183">이 값은 기본 공급자에 따라 다르게 해석될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-183">This value might be interpreted differently by different underlying providers.</span></span> <span data-ttu-id="0166b-184">사용 중인 응용 프로그램이 여러 공급자들 간에 이동 가능하도록 하려는 경우 <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A>을 호출하여 트랜잭션 격리 수준을 명시적으로 지정해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-184">If you want your application to be portable across multiple providers, it should explicitly specify the transaction isolation level by calling <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A>.</span></span>  
  
 <span data-ttu-id="0166b-185">특정 순간에 <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A>을 통해 만들어진 활성 트랜잭션이 한 개뿐일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-185">At any particular moment there can be no more than one active transaction that was created through <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A>.</span></span> <span data-ttu-id="0166b-186"><xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A>을 호출하면 현재 트랜잭션이 이미 있는 <xref:System.Data.EntityClient.EntityConnection>이 오버로드되고 <xref:System.InvalidOperationException>이 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-186">An attempt to call any of the <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A> overloads on an <xref:System.Data.EntityClient.EntityConnection> that already has a current transaction results in an <xref:System.InvalidOperationException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0166b-187">기본 공급자를 알 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-187">The underlying provider is not known.</span>
          </span>
          <span data-ttu-id="0166b-188">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-188">-or-</span>
          </span>
          <span data-ttu-id="0166b-189">현재 트랜잭션이 이미 있는 <see cref="M:System.Data.EntityClient.EntityConnection.BeginTransaction" />에 대해 <see cref="T:System.Data.EntityClient.EntityConnection" />을 호출한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-189">The call to <see cref="M:System.Data.EntityClient.EntityConnection.BeginTransaction" /> was made on an <see cref="T:System.Data.EntityClient.EntityConnection" /> that already has a current transaction.</span>
          </span>
          <span data-ttu-id="0166b-190">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-190">-or-</span>
          </span>
          <span data-ttu-id="0166b-191">
            <see cref="T:System.Data.EntityClient.EntityConnection" />의 상태가 <see cref="F:System.Data.ConnectionState.Open" />이 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-191">The state of the <see cref="T:System.Data.EntityClient.EntityConnection" /> is not <see cref="F:System.Data.ConnectionState.Open" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.EntityClient.EntityTransaction BeginTransaction (System.Data.IsolationLevel isolationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.EntityClient.EntityTransaction BeginTransaction(valuetype System.Data.IsolationLevel isolationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnection.BeginTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::EntityClient::EntityTransaction ^ BeginTransaction(System::Data::IsolationLevel isolationLevel);" />
      <MemberSignature Language="F#" Value="override this.BeginTransaction : System.Data.IsolationLevel -&gt; System.Data.EntityClient.EntityTransaction" Usage="entityConnection.BeginTransaction isolationLevel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EntityClient.EntityTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isolationLevel" Type="System.Data.IsolationLevel" />
      </Parameters>
      <Docs>
        <param name="isolationLevel">
          <span data-ttu-id="0166b-192">트랜잭션의 격리 수준입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-192">The isolation level of the transaction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0166b-193">기본 공급자를 사용하여 지정된 격리 수준의 트랜잭션을 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-193">Begins a transaction with the specified isolation level by using the underlying provider.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0166b-194">새 <see cref="T:System.Data.EntityClient.EntityTransaction" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-194">A new <see cref="T:System.Data.EntityClient.EntityTransaction" />.</span>
          </span>
          <span data-ttu-id="0166b-195">반환된 <see cref="T:System.Data.EntityClient.EntityTransaction" /> 인스턴스는 나중에 <see cref="T:System.Data.EntityClient.EntityCommand" />와 연결되어 해당 트랜잭션에서 명령을 실행할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-195">The returned <see cref="T:System.Data.EntityClient.EntityTransaction" /> instance can later be associated with the <see cref="T:System.Data.EntityClient.EntityCommand" /> to execute the command under that transaction.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0166b-196">특정 순간에 <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A>을 통해 만들어진 활성 트랜잭션이 한 개뿐일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-196">At any particular moment there can be no more than one active transaction that was created through <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A>.</span></span> <span data-ttu-id="0166b-197"><xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A>을 호출하면 현재 트랜잭션이 이미 있는 <xref:System.Data.EntityClient.EntityConnection>이 오버로드되고 <xref:System.InvalidOperationException>이 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-197">An attempt to call any of the <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A> overloads on an <xref:System.Data.EntityClient.EntityConnection> that already has a current transaction results in an <xref:System.InvalidOperationException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0166b-198">기본 공급자를 알 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-198">The underlying provider is not known.</span>
          </span>
          <span data-ttu-id="0166b-199">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-199">-or-</span>
          </span>
          <span data-ttu-id="0166b-200">현재 트랜잭션이 이미 있는 <see cref="M:System.Data.EntityClient.EntityConnection.BeginTransaction" />에 대해 <see cref="T:System.Data.EntityClient.EntityConnection" />을 호출한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-200">The call to <see cref="M:System.Data.EntityClient.EntityConnection.BeginTransaction" /> was made on an <see cref="T:System.Data.EntityClient.EntityConnection" /> that already has a current transaction.</span>
          </span>
          <span data-ttu-id="0166b-201">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-201">-or-</span>
          </span>
          <span data-ttu-id="0166b-202">
            <see cref="T:System.Data.EntityClient.EntityConnection" />의 상태가 <see cref="F:System.Data.ConnectionState.Open" />이 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-202">The state of the <see cref="T:System.Data.EntityClient.EntityConnection" /> is not <see cref="F:System.Data.ConnectionState.Open" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ChangeDatabase">
      <MemberSignature Language="C#" Value="public override void ChangeDatabase (string databaseName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ChangeDatabase(string databaseName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnection.ChangeDatabase(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ChangeDatabase (databaseName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ChangeDatabase(System::String ^ databaseName);" />
      <MemberSignature Language="F#" Value="override this.ChangeDatabase : string -&gt; unit" Usage="entityConnection.ChangeDatabase databaseName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="databaseName">
          <span data-ttu-id="0166b-203">지원되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-203">Not supported.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0166b-204">지원되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-204">Not supported.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0166b-205">합니다 <xref:System.Data.EntityClient.EntityConnection.ChangeDatabase%2A> 에서 파생 하는 경우 메서드는 필요 <xref:System.Data.Common.DbConnection>합니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-205">The <xref:System.Data.EntityClient.EntityConnection.ChangeDatabase%2A> method is required when deriving from <xref:System.Data.Common.DbConnection>.</span></span> <span data-ttu-id="0166b-206">이 메서드는 지원 되지 않으며 발생을 <xref:System.NotSupportedException>입니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-206">This method is not supported and will raise a <xref:System.NotSupportedException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0166b-207">이 메서드가 호출된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-207">When the method is called.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnection.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="entityConnection.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0166b-208">데이터베이스에 대한 연결을 닫습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-208">Closes the connection to the database.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0166b-209">기본 데이터 공급자를 알 수 없는 경우 <xref:System.Data.EntityClient.EntityConnection.Close%2A>를 호출해도 아무 동작도 수행되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-209">If the underlying data provider is not known, the call to <xref:System.Data.EntityClient.EntityConnection.Close%2A> does nothing.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0166b-210">연결을 닫을 때 오류가 발생한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-210">An error occurred when closing the connection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConnectionString">
      <MemberSignature Language="C#" Value="public override string ConnectionString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionString" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnection.ConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ConnectionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectionString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionString : string with get, set" Usage="System.Data.EntityClient.EntityConnection.ConnectionString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0166b-211">
            <see cref="T:System.Data.EntityClient.EntityConnection" /> 연결 문자열을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-211">Gets or sets the <see cref="T:System.Data.EntityClient.EntityConnection" /> connection string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0166b-212">데이터 원본에 대한 초기 연결을 설정하는 데 필요한 연결 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-212">The connection string required to establish the initial connection to a data source.</span>
          </span>
          <span data-ttu-id="0166b-213">기본값은 빈 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-213">The default value is an empty string.</span>
          </span>
          <span data-ttu-id="0166b-214">연결이 닫힌 경우에는 현재 설정된 값이 반환되고,</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-214">On a closed connection, the currently set value is returned.</span>
          </span>
          <span data-ttu-id="0166b-215">값을 지정하지 않은 경우에는 빈 문자열이 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-215">If no value has been set, an empty string is returned.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0166b-216">`EntityClient` 문자열 세미콜론으로 구분 된 키워드/값 매개 변수 쌍의 시퀀스를 구성 합니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-216">An `EntityClient` connection string consists of a sequence of keyword/value parameter pairs separated by semicolons.</span></span> <span data-ttu-id="0166b-217">각 키워드와 해당 값은 등호(=)로 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-217">The equals sign (=) connects each keyword and its value.</span></span> <span data-ttu-id="0166b-218">다음 표에는 <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>에 포함되는 키워드 값의 올바른 이름이 정리되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-218">The following table lists the valid names for keyword values in the <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>.</span></span>  
  
|<span data-ttu-id="0166b-219">키워드</span><span class="sxs-lookup"><span data-stu-id="0166b-219">Keyword</span></span>|<span data-ttu-id="0166b-220">설명</span><span class="sxs-lookup"><span data-stu-id="0166b-220">Description</span></span>|  
|-------------|-----------------|  
|`Provider`|<span data-ttu-id="0166b-221">`Name` 키워드를 지정하지 않은 경우에 필요합니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-221">Required if the `Name` keyword is not specified.</span></span> <span data-ttu-id="0166b-222">기본 공급자의 <xref:System.Data.Common.DbProviderFactory> 개체를 검색하는 데 사용되는 공급자 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-222">The provider name, which is used to retrieve the <xref:System.Data.Common.DbProviderFactory> object for the underlying provider.</span></span> <span data-ttu-id="0166b-223">이 값은 상수입니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-223">This value is constant.</span></span><br /><br /> <span data-ttu-id="0166b-224">경우는 `Name` 키워드는 비어 있지 않은 값에 대 한 연결 문자열에 포함 되지 않습니다는 `Provider` 키워드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-224">When the `Name` keyword is not included in the connection string, a non-empty value for the `Provider` keyword is required.</span></span> <span data-ttu-id="0166b-225">이 키워드는 `Name` 키워드와 함께 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-225">This keyword is mutually exclusive with the `Name` keyword.</span></span>|  
|`Provider Connection String`|<span data-ttu-id="0166b-226">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-226">Optional.</span></span> <span data-ttu-id="0166b-227">기본 데이터 소스에 전달되는 공급자별 연결 문자열을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-227">Specifies the provider-specific connection string that is passed to the underlying data source.</span></span> <span data-ttu-id="0166b-228">이 연결 문자열은 데이터 공급자의 유효한 키워드/값 쌍을 사용하여 표현됩니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-228">This connection string is expressed by using valid keyword/value pairs for the data provider.</span></span> <span data-ttu-id="0166b-229">`Provider Connection String`이 올바르지 않으면 데이터 소스에서 해당 문자열을 평가할 때 런타임 오류가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-229">An invalid `Provider Connection String` will cause a run-time error when it is evaluated by the data source.</span></span><br /><br /> <span data-ttu-id="0166b-230">이 키워드는 `Name` 키워드와 함께 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-230">This keyword is mutually exclusive with the `Name` keyword.</span></span><br /><br /> <span data-ttu-id="0166b-231">`Provider Connection String`의 값은 따옴표로 묶어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-231">The value of the `Provider Connection String` must be surrounded by quotes.</span></span> <span data-ttu-id="0166b-232">예를 들면 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-232">The following is an example:</span></span><br /><br /> `Provider Connection String ="Server=serverName; User ID = userID";`<br /><br /> <span data-ttu-id="0166b-233">다음은 잘못된 예입니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-233">The following example is not going to work:</span></span><br /><br /> `Provider Connection String =Server=serverName; User ID = userID`|  
|`Metadata`|<span data-ttu-id="0166b-234">`Name` 키워드를 지정하지 않은 경우에 필요합니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-234">Required if the `Name` keyword is not specified.</span></span> <span data-ttu-id="0166b-235">디렉터리, 파일 및 리소스 위치를 모델 및 매핑 정보를 검색할에 파이프로 구분 된 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-235">A pipe-delimited list of directories, files, and resource locations in which to look for model and mapping information.</span></span> <span data-ttu-id="0166b-236">예를 들면 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-236">The following is an example:</span></span><br /><br /> `Metadata=`<br /><br /> `c:\model &#124; c:\model\sql\mapping.msl;`<br /><br /> <span data-ttu-id="0166b-237">파이프 구분 기호 양쪽의 공백은 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-237">Blank spaces on each side of the pipe separator are ignored.</span></span><br /><br /> <span data-ttu-id="0166b-238">이 키워드는 `Name` 키워드와 함께 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-238">This keyword is mutually exclusive with the `Name` keyword.</span></span>|  
|`Name`|<span data-ttu-id="0166b-239">응용 프로그램에서는 필수 키워드/값 연결 문자열 값을 제공하는 응용 프로그램 구성 파일에 연결 이름을 선택적으로 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-239">The application can optionally specify the connection name in an application configuration file that provides the required keyword/value connection string values.</span></span> <span data-ttu-id="0166b-240">이 경우에는 연결 문자열에 이름을 직접 지정할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-240">In this case, you cannot supply them directly in the connection string.</span></span> <span data-ttu-id="0166b-241">`Name` 키워드는 구성 파일에 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-241">The `Name` keyword is not allowed in a configuration file.</span></span><br /><br /> <span data-ttu-id="0166b-242">`Name` 키워드가 엔터티 연결 문자열에 포함되어 있지 않은 경우 Provider 키워드에 대해 비어 있지 않은 값이 필요합니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-242">When the `Name` keyword is not included in the connection string, a non-empty values for Provider keyword is required.</span></span><br /><br /> <span data-ttu-id="0166b-243">이 키워드는 다른 모든 연결 문자열 키워드와 함께 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-243">This keyword is mutually exclusive with all the other connection string keywords.</span></span>|  
  
 <span data-ttu-id="0166b-244">응용 프로그램에 키워드/값에 직접 제공할 수는 <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A> 속성 또는에 대 한 값을 지정할 수는 `Name` 키워드입니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-244">The application can supply the keyword/values directly in the <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A> property, or it can specify a value for the `Name` keyword.</span></span> <span data-ttu-id="0166b-245">경우는 `Name` 키워드를 지정한 경우 연결 문자열 키워드/값은 다음과 같이 응용 프로그램 구성 파일에서 검색 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-245">If the `Name` keyword is specified, the connection string keyword/values are retrieved from an application configuration file, as follows:</span></span>  
  
 `Name=AdventureWorksEntities;`  
  
 <span data-ttu-id="0166b-246">경우는 `Name` 키워드가 사용 되는 <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A> 속성을 다른 키워드 허용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-246">If the `Name` keyword is used in the <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A> property, other keywords are not allowed.</span></span> <span data-ttu-id="0166b-247">`Name` 키워드를 명명된 된 연결 문자열에 저장 된 참조는 `connectionStrings` 다음 예와에서 같이 응용 프로그램 구성 파일 섹션.</span><span class="sxs-lookup"><span data-stu-id="0166b-247">The `Name` keyword refers to a named connection string that is stored in the `connectionStrings` section in an application configuration file, as shown in the following example.</span></span> <span data-ttu-id="0166b-248">합니다 `Provider`, `Metadata`, 및 `Provider Connection String` 값은 런타임에 구성 파일에서 검색 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-248">The `Provider`, `Metadata`, and `Provider Connection String` values are retrieved from the configuration file at run time.</span></span>  
  
  
  
 <span data-ttu-id="0166b-249">다음 예제와 같이 키워드/값 쌍을 <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A> 속성에 직접 지정할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-249">The keyword/value pairs can also be supplied directly in the <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A> property, as shown in the following example.</span></span> <span data-ttu-id="0166b-250">이 경우에 `Name` 키워드가 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-250">In this case, the `Name` keyword is not used.</span></span>  
  
```  
"Provider=System.Data.SqlClient;  
Metadata=c:\metadata|c:\Metadata\Sql;  
Provider Connection String= 'Data Source=localhost;  
    Initial Catalog=AdventureWorks;Integrated Security=True;Connection Timeout=60' "  
```  
  
 <span data-ttu-id="0166b-251">실수로 <xref:System.Data.Common.CommandTrees> 및 <xref:System.Data.Objects.ObjectContext> 같은 개체가 해당 메타데이터와 비동기화되지 않도록 방지하려면 <xref:System.Data.EntityClient.EntityConnection>에서 메타데이터를 잠가야 합니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-251">To avoid inadvertently putting objects such as <xref:System.Data.Common.CommandTrees> and <xref:System.Data.Objects.ObjectContext> out of sync with their metadata, <xref:System.Data.EntityClient.EntityConnection> must lock its metadata.</span></span> <span data-ttu-id="0166b-252">메타데이터가 잠긴 후에는 연결 문자열을 변경할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-252">No changes to the connection string are allowed after the metadata is locked.</span></span> <span data-ttu-id="0166b-253">메타데이터가 잠기는 두 가지 시나리오는 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-253">The following are two scenarios in which metadata is locked:</span></span>  
  
-   <span data-ttu-id="0166b-254"><xref:System.Data.EntityClient.EntityConnection> 인스턴스가 기본 생성자를 통해 생성되거나 연결 문자열을 허용하는 <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> 생성자를 통해 생성됩니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-254">The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the default constructor, or through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> constructor, which accepts a connection string.</span></span> <span data-ttu-id="0166b-255">어느 경우든 연결이 열리기 이전에 연결 문자열이 여러 번 변경될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-255">In either case the connection string might be changed multiple times before the connection is opened.</span></span> <span data-ttu-id="0166b-256"><xref:System.Data.EntityClient.EntityConnection.Open%2A> 또는 <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A>를 호출하면 메타데이터가 잠깁니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-256">Calling <xref:System.Data.EntityClient.EntityConnection.Open%2A> or <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> locks the metadata.</span></span>  
  
-   <span data-ttu-id="0166b-257"><xref:System.Data.EntityClient.EntityConnection> 인스턴스가 <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> 및 <xref:System.Data.Metadata.Edm.MetadataWorkspace>을 허용하는 <xref:System.Data.Common.DbConnection> 생성자를 통해 생성됩니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-257">The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> constructor, which accepts a <xref:System.Data.Metadata.Edm.MetadataWorkspace> and a <xref:System.Data.Common.DbConnection>.</span></span> <span data-ttu-id="0166b-258">이 경우 메타데이터는 생성 시에 잠기므로</span><span class="sxs-lookup"><span data-stu-id="0166b-258">In this case the metadata is locked at construction time.</span></span> <span data-ttu-id="0166b-259">연결 문자열을 절대 변경할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-259">No changes to the connection string are ever allowed.</span></span>  
  
 <span data-ttu-id="0166b-260">메타데이터가 로드되면 <xref:System.Data.EntityClient.EntityConnection>은 개념적 모델, 저장소 모델 및 매핑 파일이 모두 있는지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-260">When metadata is loaded, the <xref:System.Data.EntityClient.EntityConnection> verifies that the conceptual model, the storage model, and the mapping file are all present.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0166b-261">다음 예제에서는 <xref:System.Data.EntityClient.EntityConnectionStringBuilder>와 <xref:System.Data.SqlClient.SqlConnectionStringBuilder>를 함께 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-261">The following example demonstrates how to use the <xref:System.Data.EntityClient.EntityConnectionStringBuilder> in conjunction with a <xref:System.Data.SqlClient.SqlConnectionStringBuilder>.</span></span> <span data-ttu-id="0166b-262">속성을 설정 하는 코드를 `SqlConnectionStringBuilder` 만들려면는 <xref:System.Data.SqlClient.SqlConnection> 기본 공급자 연결 문자열의 일부를 제공 하는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-262">The code sets properties of a `SqlConnectionStringBuilder` to create a <xref:System.Data.SqlClient.SqlConnection> string that supplies part of the underlying provider connection string.</span></span> <span data-ttu-id="0166b-263">합니다 `Provider` 이름을 사용 하 여 설정할 수 없습니다 합니다 `SqlConnectionStringBuilder`잘못 사용 되지 않으므로, `SqlConnection` 구문입니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-263">Note that the `Provider` name cannot be set by using the `SqlConnectionStringBuilder`, because it does not use valid `SqlConnection` syntax.</span></span> <span data-ttu-id="0166b-264">코드는 만듭니다는 <xref:System.Data.EntityClient.EntityConnection> 문자열을 설정 하 여 `EntityConnectionStringBuilder` 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-264">The code creates the <xref:System.Data.EntityClient.EntityConnection> string by setting `EntityConnectionStringBuilder` properties.</span></span>  
  
 [!code-csharp[eSQLBasicExamples#BuildingConnectionStringWithEntityCommand](~/samples/snippets/csharp/VS_Snippets_Data/eSQLBasicExamples/CS/Program.cs#buildingconnectionstringwithentitycommand)]
 [!code-vb[eSQLBasicExamples#BuildingConnectionStringWithEntityCommand](~/samples/snippets/visualbasic/VS_Snippets_Data/eSQLBasicExamples/VB/Program.vb#buildingconnectionstringwithentitycommand)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0166b-265">
            <see cref="P:System.Data.EntityClient.EntityConnection.ConnectionString" />의  <see cref="T:System.Data.EntityClient.EntityConnection" />가 초기화된 후 <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> 속성을 설정하려고 한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-265">An attempt was made to set the <see cref="P:System.Data.EntityClient.EntityConnection.ConnectionString" /> property after the <see cref="T:System.Data.EntityClient.EntityConnection" />’s <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> was initialized.</span>
          </span>
          <span data-ttu-id="0166b-266">
            <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" />는 <see cref="T:System.Data.EntityClient.EntityConnection" /> 인스턴스가 <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" />를 매개 변수로 사용하는 오버로드를 통해 생성되거나 <see cref="T:System.Data.EntityClient.EntityConnection" /> 인스턴스가 열렸을 때 초기화됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-266">The <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> is initialized either when the <see cref="T:System.Data.EntityClient.EntityConnection" /> instance is constructed through the overload that takes a <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> as a parameter, or when the <see cref="T:System.Data.EntityClient.EntityConnection" /> instance has been opened.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0166b-267">잘못된 연결 문자열 키워드를 제공했거나 필요한 연결 문자열 키워드를 제공하지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-267">An invalid connection string keyword has been provided or a required connection string keyword has not been provided.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConnectionTimeout">
      <MemberSignature Language="C#" Value="public override int ConnectionTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ConnectionTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnection.ConnectionTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ConnectionTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ConnectionTimeout { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionTimeout : int" Usage="System.Data.EntityClient.EntityConnection.ConnectionTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0166b-268">연결을 설정할 때 연결 시도를 끝내고 오류를 생성하기 전까지 대기할 시간(초)을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-268">Gets the number of seconds to wait when attempting to establish a connection before ending the attempt and generating an error.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0166b-269">연결이 열리기 전까지 대기할 시간(초)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-269">The time (in seconds) to wait for a connection to open.</span>
          </span>
          <span data-ttu-id="0166b-270">기본값은 기본 데이터 공급자의 기본 제한 시간입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-270">The default value is the underlying data provider's default time-out.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0166b-271">기본 데이터 공급자를 알 수 없으면 0이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-271">Returns zero if the underlying data provider is not known.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0166b-272">설정한 값이 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-272">The value set is less than 0.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateCommand">
      <MemberSignature Language="C#" Value="public System.Data.EntityClient.EntityCommand CreateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.EntityClient.EntityCommand CreateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnection.CreateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCommand () As EntityCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::EntityClient::EntityCommand ^ CreateCommand();" />
      <MemberSignature Language="F#" Value="override this.CreateCommand : unit -&gt; System.Data.EntityClient.EntityCommand" Usage="entityConnection.CreateCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EntityClient.EntityCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0166b-273">
            <see cref="T:System.Data.EntityClient.EntityCommand" />의 새 인스턴스를 만들고 <see cref="P:System.Data.EntityClient.EntityCommand.Connection" />을 이 <see cref="T:System.Data.EntityClient.EntityConnection" />으로 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-273">Creates a new instance of an <see cref="T:System.Data.EntityClient.EntityCommand" />, with the <see cref="P:System.Data.EntityClient.EntityCommand.Connection" /> set to this <see cref="T:System.Data.EntityClient.EntityConnection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0166b-274">
            <see cref="T:System.Data.EntityClient.EntityCommand" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-274">An <see cref="T:System.Data.EntityClient.EntityCommand" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0166b-275">기본 데이터 공급자의 이름을 알 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-275">The name of the underlying data provider is not known.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDbCommand">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbCommand CreateDbCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbCommand CreateDbCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnection.CreateDbCommand" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDbCommand () As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbCommand ^ CreateDbCommand();" />
      <MemberSignature Language="F#" Value="override this.CreateDbCommand : unit -&gt; System.Data.Common.DbCommand" Usage="entityConnection.CreateDbCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Database">
      <MemberSignature Language="C#" Value="public override string Database { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Database" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnection.Database" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Database As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Database { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Database : string" Usage="System.Data.EntityClient.EntityConnection.Database" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0166b-276">현재 데이터베이스의 이름 또는 연결이 열린 후에 사용될 데이터베이스의 이름을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-276">Gets the name of the current database, or the database that will be used after a connection is opened.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0166b-277">내부 데이터 공급자의 <see langword="Database" /> 속성 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-277">The value of the <see langword="Database" /> property of the underlying data provider.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0166b-278">특정 키워드 값에 대 한와 같은 `Database`에 매핑되는 <xref:System.Data.EntityClient.EntityConnection.Database%2A> 속성을 기본 데이터 공급자에 대 한 설명서를 참조 하세요.</span><span class="sxs-lookup"><span data-stu-id="0166b-278">For the specific keyword value, such as `Database`, that maps to the <xref:System.Data.EntityClient.EntityConnection.Database%2A> property, see the documentation for the underlying data provider.</span></span> <span data-ttu-id="0166b-279">SQL Server는 동급 키워드에 대 한 설명서를 참조 하십시오.는 <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-279">For SQL Server equivalent keywords, see the documentation for the <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0166b-280">기본 데이터 공급자를 알 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-280">The underlying data provider is not known.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public override string DataSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnection.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DataSource As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataSource { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataSource : string" Usage="System.Data.EntityClient.EntityConnection.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0166b-281">연결할 데이터 소스의 이름이나 네트워크 주소를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-281">Gets the name or network address of the data source to connect to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0166b-282">데이터 원본의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-282">The name of the data source.</span>
          </span>
          <span data-ttu-id="0166b-283">기본값은 빈 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-283">The default value is an empty string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0166b-284">특정 키워드 값에 대 한와 같은 `DataSource`에 매핑되는 <xref:System.Data.EntityClient.EntityConnection.DataSource%2A> 속성을 기본 데이터 공급자에 대 한 설명서를 참조 하세요.</span><span class="sxs-lookup"><span data-stu-id="0166b-284">For the specific keyword value, such as `DataSource`, that maps to the <xref:System.Data.EntityClient.EntityConnection.DataSource%2A> property, see the documentation for the underlying data provider.</span></span> <span data-ttu-id="0166b-285">SQL Server는 동급 키워드에 대 한 설명서를 참조 하십시오.는 <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-285">For SQL Server equivalent keywords, see the documentation for the <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0166b-286">기본 데이터 공급자를 알 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-286">The underlying data provider is not known.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DbProviderFactory">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbProviderFactory DbProviderFactory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbProviderFactory DbProviderFactory" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnection.DbProviderFactory" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DbProviderFactory As DbProviderFactory" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbProviderFactory ^ DbProviderFactory { System::Data::Common::DbProviderFactory ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DbProviderFactory : System.Data.Common.DbProviderFactory" Usage="System.Data.EntityClient.EntityConnection.DbProviderFactory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbProviderFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnection.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="entityConnection.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnlistTransaction">
      <MemberSignature Language="C#" Value="public override void EnlistTransaction (System.Transactions.Transaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EnlistTransaction(class System.Transactions.Transaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnection.EnlistTransaction(System.Transactions.Transaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EnlistTransaction(System::Transactions::Transaction ^ transaction);" />
      <MemberSignature Language="F#" Value="override this.EnlistTransaction : System.Transactions.Transaction -&gt; unit" Usage="entityConnection.EnlistTransaction transaction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.Transactions.Transaction" />
      </Parameters>
      <Docs>
        <param name="transaction">
          <span data-ttu-id="0166b-287">연결을 인리스트먼트할 트랜잭션 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-287">The transaction object to enlist into.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0166b-288">지정된 트랜잭션에 이 <see cref="T:System.Data.EntityClient.EntityConnection" />을 인리스트먼트합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-288">Enlists this <see cref="T:System.Data.EntityClient.EntityConnection" /> in the specified transaction.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0166b-289">이 메서드는 데이터 원본 연결에 대한 호출을 전달하여 전달된 <xref:System.Transactions.Transaction>에 명시적으로 인리스트먼트합니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-289">This method forwards the call to the data source connection to explicitly enlist in the passed <xref:System.Transactions.Transaction>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0166b-290">
            <see cref="T:System.Data.EntityClient.EntityConnection" />의 상태가 <see cref="F:System.Data.ConnectionState.Open" />이 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-290">The state of the <see cref="T:System.Data.EntityClient.EntityConnection" /> is not <see cref="F:System.Data.ConnectionState.Open" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataWorkspace">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.MetadataWorkspace GetMetadataWorkspace ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.MetadataWorkspace GetMetadataWorkspace() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMetadataWorkspace () As MetadataWorkspace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::MetadataWorkspace ^ GetMetadataWorkspace();" />
      <MemberSignature Language="F#" Value="member this.GetMetadataWorkspace : unit -&gt; System.Data.Metadata.Edm.MetadataWorkspace" Usage="entityConnection.GetMetadataWorkspace " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.MetadataWorkspace</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0166b-291">이 <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" />과 연결된 <see cref="T:System.Data.EntityClient.EntityConnection" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-291">Returns the <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> associated with this <see cref="T:System.Data.EntityClient.EntityConnection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0166b-292">이 <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" />와 연결된 <see cref="T:System.Data.EntityClient.EntityConnection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-292">The <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> associated with this <see cref="T:System.Data.EntityClient.EntityConnection" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0166b-293"><xref:System.Data.Metadata.Edm.MetadataWorkspace> 클래스가 생성되면 <xref:System.Data.EntityClient.EntityConnection>가 자동으로 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-293">A <xref:System.Data.Metadata.Edm.MetadataWorkspace> is automatically created when the <xref:System.Data.EntityClient.EntityConnection> class is created.</span></span> <span data-ttu-id="0166b-294">만드는 도중에 메타데이터 관련 예외가 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-294">The creation process might throw metadata-specific exceptions.</span></span> <span data-ttu-id="0166b-295">메타데이터는 메모리에 로드되며 EDM(엔터티 데이터 모델) 응용 프로그램에서는 해당 메타데이터를 사용하여 기본 데이터 원본에 대한 정보에 액세스합니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-295">Metadata is loaded into memory and an Entity Data Model (EDM) application uses that metadata to access information about the underlying data source.</span></span> <span data-ttu-id="0166b-296">자세한 내용은 [ADO.NET 메타 데이터](http://msdn.microsoft.com/library/196097a5-a791-4ac4-9e6a-805685d481d5)입니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-296">For more information, see [ADO.NET Metadata](http://msdn.microsoft.com/library/196097a5-a791-4ac4-9e6a-805685d481d5).</span></span>  
  
 <span data-ttu-id="0166b-297">실수로 <xref:System.Data.Common.CommandTrees> 및 <xref:System.Data.Objects.ObjectContext> 같은 개체가 해당 메타데이터와 비동기화되지 않도록 방지하려면 <xref:System.Data.EntityClient.EntityConnection>에서 메타데이터를 잠가야 합니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-297">To avoid inadvertently putting objects such as <xref:System.Data.Common.CommandTrees> and <xref:System.Data.Objects.ObjectContext> out of sync with their metadata, <xref:System.Data.EntityClient.EntityConnection> must lock its metadata.</span></span> <span data-ttu-id="0166b-298">메타데이터가 잠긴 후에는 연결 문자열을 변경할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-298">No changes to the connection string are allowed after the metadata is locked.</span></span> <span data-ttu-id="0166b-299">메타데이터가 잠기는 두 가지 시나리오는 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-299">The following are two scenarios in which metadata is locked:</span></span>  
  
-   <span data-ttu-id="0166b-300"><xref:System.Data.EntityClient.EntityConnection> 인스턴스가 기본 생성자를 통해 생성되거나 연결 문자열을 허용하는 <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> 생성자를 통해 생성됩니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-300">The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the default constructor, or through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> constructor, which accepts a connection string.</span></span> <span data-ttu-id="0166b-301">든 연결이 열리기 전에 연결 문자열을 여러 번 변경할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-301">In either case the connection string may be changed multiple times before the connection is opened.</span></span> <span data-ttu-id="0166b-302"><xref:System.Data.EntityClient.EntityConnection.Open%2A> 또는 <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> 메타 데이터를 잠급니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-302"><xref:System.Data.EntityClient.EntityConnection.Open%2A> or <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> locks the metadata.</span></span>  
  
-   <span data-ttu-id="0166b-303"><xref:System.Data.EntityClient.EntityConnection> 인스턴스가 <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> 및 <xref:System.Data.Metadata.Edm.MetadataWorkspace>을 허용하는 <xref:System.Data.Common.DbConnection> 생성자를 통해 생성됩니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-303">The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> constructor, which accepts a <xref:System.Data.Metadata.Edm.MetadataWorkspace> and a <xref:System.Data.Common.DbConnection>.</span></span> <span data-ttu-id="0166b-304">이 경우 메타데이터는 생성 시에 잠기므로</span><span class="sxs-lookup"><span data-stu-id="0166b-304">In this case the metadata is locked at construction time.</span></span> <span data-ttu-id="0166b-305">연결 문자열을 절대 변경할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-305">No changes to the connection string are ever allowed.</span></span>  
  
 <span data-ttu-id="0166b-306">메타데이터가 로드되면 <xref:System.Data.EntityClient.EntityConnection>은 개념적 모델, 저장소 모델 및 매핑 파일이 모두 있는지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-306">When metadata is loaded, the <xref:System.Data.EntityClient.EntityConnection> verifies that the conceptual model, the storage model, and the mapping file are all present.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.MetadataException">
          <span data-ttu-id="0166b-307">인라인 연결 문자열에 잘못된 <see langword="Metadata" /> 키워드 값이 포함된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-307">The inline connection string contains an invalid <see langword="Metadata" /> keyword value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public override void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnection.Open" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Open ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Open();" />
      <MemberSignature Language="F#" Value="override this.Open : unit -&gt; unit" Usage="entityConnection.Open " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0166b-308">기본 데이터 공급자의 <see langword="Open" /> 메서드를 호출하여 데이터 원본에 대한 연결을 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-308">Establishes a connection to the data source by calling the underlying data provider's <see langword="Open" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0166b-309">실수로 <xref:System.Data.Common.CommandTrees> 및 <xref:System.Data.Objects.ObjectContext> 같은 개체가 해당 메타데이터와 비동기화되지 않도록 방지하려면 <xref:System.Data.EntityClient.EntityConnection>에서 메타데이터를 잠가야 합니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-309">To avoid inadvertently putting objects such as <xref:System.Data.Common.CommandTrees> and <xref:System.Data.Objects.ObjectContext> out of sync with their metadata, <xref:System.Data.EntityClient.EntityConnection> must lock its metadata.</span></span> <span data-ttu-id="0166b-310">메타데이터가 잠긴 후에는 연결 문자열을 변경할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-310">No changes to the connection string are allowed after the metadata is locked.</span></span> <span data-ttu-id="0166b-311">메타데이터가 잠기는 두 가지 시나리오는 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-311">The following are two scenarios in which metadata is locked:</span></span>  
  
-   <span data-ttu-id="0166b-312"><xref:System.Data.EntityClient.EntityConnection> 인스턴스가 기본 생성자를 통해 생성되거나 연결 문자열을 허용하는 <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> 생성자를 통해 생성됩니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-312">The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the default constructor, or through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> constructor, which accepts a connection string.</span></span> <span data-ttu-id="0166b-313">어느 경우든 연결이 열리기 이전에 연결 문자열이 여러 번 변경될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-313">In either case the connection string might be changed multiple times before the connection is opened.</span></span> <span data-ttu-id="0166b-314"><xref:System.Data.EntityClient.EntityConnection.Open%2A> 또는 <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A>를 호출하면 메타데이터가 잠깁니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-314">Calling <xref:System.Data.EntityClient.EntityConnection.Open%2A> or <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> locks the metadata.</span></span>  
  
-   <span data-ttu-id="0166b-315"><xref:System.Data.EntityClient.EntityConnection> 인스턴스가 <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> 및 <xref:System.Data.Metadata.Edm.MetadataWorkspace>을 허용하는 <xref:System.Data.Common.DbConnection> 생성자를 통해 생성됩니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-315">The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> constructor, which that accepts a <xref:System.Data.Metadata.Edm.MetadataWorkspace> and a <xref:System.Data.Common.DbConnection>.</span></span> <span data-ttu-id="0166b-316">이 경우 메타데이터는 생성 시에 잠기므로</span><span class="sxs-lookup"><span data-stu-id="0166b-316">In this case the metadata is locked at construction time.</span></span> <span data-ttu-id="0166b-317">연결 문자열을 절대 변경할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-317">No changes to the connection string are ever allowed.</span></span>  
  
 <span data-ttu-id="0166b-318">메타데이터가 로드되면 <xref:System.Data.EntityClient.EntityConnection>은 개념적 모델, 저장소 모델 및 매핑 파일이 모두 있는지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-318">When metadata is loaded, the <xref:System.Data.EntityClient.EntityConnection> verifies that the conceptual model, the storage model, and the mapping file are all present.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0166b-319">연결을 열 때 오류가 발생하거나 기본 데이터 공급자의 이름을 알 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-319">An error occurs when you open the connection, or the name of the underlying data provider is not known.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.MetadataException">
          <span data-ttu-id="0166b-320">인라인 연결 문자열에 잘못된 <see langword="Metadata" /> 키워드 값이 포함된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-320">The inline connection string contains an invalid <see langword="Metadata" /> keyword value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ServerVersion">
      <MemberSignature Language="C#" Value="public override string ServerVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServerVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnection.ServerVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ServerVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ServerVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServerVersion : string" Usage="System.Data.EntityClient.EntityConnection.ServerVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0166b-321">클라이언트가 연결된 데이터 원본의 버전이 포함된 문자열을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-321">Gets a string that contains the version of the data source to which the client is connected.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0166b-322">공급자 연결 문자열에 포함된 데이터 원본의 버전입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-322">The version of the data source that is contained in the provider connection string.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0166b-323">연결이 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-323">The connection is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public override System.Data.ConnectionState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ConnectionState State" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnection.State" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property State As ConnectionState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::ConnectionState State { System::Data::ConnectionState get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Data.ConnectionState" Usage="System.Data.EntityClient.EntityConnection.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.ConnectionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0166b-324">
            <see cref="T:System.Data.ConnectionState" />이 열려 있으면 기본 공급자의 <see cref="T:System.Data.EntityClient.EntityConnection" /> 속성을 가져오고,</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-324">Gets the <see cref="T:System.Data.ConnectionState" /> property of the underlying provider if the <see cref="T:System.Data.EntityClient.EntityConnection" /> is open.</span>
          </span>
          <span data-ttu-id="0166b-325">그렇지 않으면 <see cref="F:System.Data.ConnectionState.Closed" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-325">Otherwise, returns <see cref="F:System.Data.ConnectionState.Closed" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0166b-326">
            <see cref="F:System.Data.ConnectionState.Open" />의 내부 상태와 내부 공급자의 <see cref="T:System.Data.EntityClient.EntityConnection" />가 모두 open일 경우에만 <see cref="T:System.Data.ConnectionState" />을 반환하고,</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-326">
              <see cref="F:System.Data.ConnectionState.Open" />, if and only if both the <see cref="T:System.Data.EntityClient.EntityConnection" />’s internal state and the underlying provider's <see cref="T:System.Data.ConnectionState" /> are open.</span>
          </span>
          <span data-ttu-id="0166b-327">
            <see cref="T:System.Data.EntityClient.EntityConnection" />의 상태는 open이지만 공급자의 <see cref="T:System.Data.ConnectionState" />가 closed일 경우 <see cref="F:System.Data.ConnectionState.Broken" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-327">If the <see cref="T:System.Data.EntityClient.EntityConnection" />’s state is open but the provider's <see cref="T:System.Data.ConnectionState" /> is closed, this property returns <see cref="F:System.Data.ConnectionState.Broken" />.</span>
          </span>
          <span data-ttu-id="0166b-328">그 외의 경우 <see cref="F:System.Data.ConnectionState.Closed" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-328">Otherwise, it returns <see cref="F:System.Data.ConnectionState.Closed" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreConnection">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbConnection StoreConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbConnection StoreConnection" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnection.StoreConnection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StoreConnection As DbConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbConnection ^ StoreConnection { System::Data::Common::DbConnection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StoreConnection : System.Data.Common.DbConnection" Usage="System.Data.EntityClient.EntityConnection.StoreConnection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0166b-329">
            <see cref="T:System.Data.EntityClient.EntityConnection" />개체에서 사용하는 기본 데이터 원본 연결에 액세스할 수 있도록 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-329">Provides access to the underlying data source connection that is used by the <see cref="T:System.Data.EntityClient.EntityConnection" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0166b-330">데이터 원본 연결의 경우 <see cref="T:System.Data.Common.DbConnection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0166b-330">The <see cref="T:System.Data.Common.DbConnection" /> for the data source connection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0166b-331"><xref:System.Data.EntityClient.EntityConnection>개체가 닫혔으면 반환된 데이터 원본 연결이 닫히고,</span><span class="sxs-lookup"><span data-stu-id="0166b-331">If the <xref:System.Data.EntityClient.EntityConnection> object is closed, the returned data source connection will be closed.</span></span> <span data-ttu-id="0166b-332">열려 있으면 열린 데이터 원본 연결이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-332">If it is open, an open data source connection will be returned.</span></span> <span data-ttu-id="0166b-333">데이터 원본 정보가 설정된 경우 항상 null이 아닌 값이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-333">If the data source connection information was set, the returned value is always non-null.</span></span> <span data-ttu-id="0166b-334">데이터 원본 연결 정보가 없는 경우(예: 기본 생성자가 사용되었으며 이후에 연결 문자열이 설정되지 않은 경우) null 참조가 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-334">If there is no data source connection information (for example, if the default constructor was used and no connection string was set afterwards), then a null reference is returned.</span></span>  
  
 <span data-ttu-id="0166b-335">Entity Framework에서 사용 하는 동일한 데이터 원본 연결 응용 프로그램의 다른 부분과 공유할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-335">The same data source connection used by the Entity Framework can be shared with other parts of an application.</span></span> <span data-ttu-id="0166b-336">데이터 원본 연결은 <xref:System.Data.Common.DbConnection>의 <xref:System.Data.Objects.ObjectContext.Connection%2A> 속성에서 또는 <xref:System.Data.Objects.ObjectContext>의 <xref:System.Data.EntityClient.EntityConnection.StoreConnection%2A> 속성에서 <xref:System.Data.EntityClient.EntityConnection> 개체로 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="0166b-336">The data source connection is returned as a <xref:System.Data.Common.DbConnection> object from the <xref:System.Data.Objects.ObjectContext.Connection%2A> property of <xref:System.Data.Objects.ObjectContext>, or from the <xref:System.Data.EntityClient.EntityConnection.StoreConnection%2A> property of <xref:System.Data.EntityClient.EntityConnection>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>