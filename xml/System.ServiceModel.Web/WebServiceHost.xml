<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="WebServiceHost.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5cf5c4e6be77e551fd7231173c734e6deb64c7250.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cf5c4e6be77e551fd7231173c734e6deb64c7250</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Web.WebServiceHost">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHost" /&gt;</ph> derived class that compliments the Windows Communication Foundation (WCF) REST programming model.</source>
          <target state="translated">WCF(Windows Communication Foundation) REST 프로그래밍 모델을 보완하는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHost" /&gt;</ph> 파생된 클래스입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Web.WebServiceHost">
          <source>If <ph id="ph1">&lt;xref:System.ServiceModel.Web.WebServiceHost&gt;</ph> finds no endpoints in the service description, it automatically creates a default endpoint at the service's base address for HTTP and HTTPS base addresses.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Web.WebServiceHost&gt;</ph>는 서비스 설명에서 끝점을 찾지 못하면 서비스의 기본 주소에 HTTP 및 HTTPS 기본 주소를 위한 기본 끝점을 자동으로 만듭니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Web.WebServiceHost">
          <source>It does not create an endpoint automatically if the user has configured an endpoint explicitly at the base address.</source>
          <target state="translated">사용자가 기본 주소에서 명시적으로 끝점을 구성한 경우 끝점을 자동으로 만들지 않습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Web.WebServiceHost">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Web.WebServiceHost&gt;</ph> automatically configures the endpoint's binding to work with the associated Internet Information Services (IIS) security settings when used in a secure virtual directory.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Web.WebServiceHost&gt;</ph>는 보안 가상 디렉터리에서 사용될 때 연결된 IIS(인터넷 정보 서비스) 보안 설정으로 작동하도록 끝점의 바인딩을 자동으로 구성합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Web.WebServiceHost">
          <source>When creating a default HTTP endpoint, the <ph id="ph1">&lt;xref:System.ServiceModel.Web.WebServiceHost&gt;</ph> also disables the HTTP Help page and the Web Services Description Language (WSDL) GET functionality so the metadata endpoint does not interfere with the default HTTP endpoint.</source>
          <target state="translated">기본 HTTP 끝점을 만들 때 <ph id="ph1">&lt;xref:System.ServiceModel.Web.WebServiceHost&gt;</ph>는 메타데이터 끝점이 기본 HTTP 끝점과 간섭하지 않도록 HTTP 도움말 페이지 및 WSDL(웹 서비스 기술 언어) GET 기능을 비활성화합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Web.WebServiceHost">
          <source>In addition, the <ph id="ph1">&lt;xref:System.ServiceModel.Web.WebServiceHost&gt;</ph> class adds the <ph id="ph2">&lt;xref:System.ServiceModel.Description.WebHttpBehavior&gt;</ph> to all endpoints that do not already have the behavior and that have a <ph id="ph3">&lt;xref:System.ServiceModel.Configuration.WebMessageEncodingElement&gt;</ph>.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.ServiceModel.Web.WebServiceHost&gt;</ph> 클래스는 <ph id="ph2">&lt;xref:System.ServiceModel.Description.WebHttpBehavior&gt;</ph>가 있고 <ph id="ph3">&lt;xref:System.ServiceModel.Configuration.WebMessageEncodingElement&gt;</ph> 동작이 기존에 존재하지 않는 모든 끝점에 이 동작을 추가합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Web.WebServiceHost">
          <source>If all the operations on the service have either empty HTTP request bodies or deal with the HTTP request body as a stream, then the <ph id="ph1">&lt;xref:System.ServiceModel.Web.WebServiceHost&gt;</ph> automatically configures the appropriate content type mapper for the binding.</source>
          <target state="translated">서비스의 모든 작업이 빈 HTTP 요청 본문을 가지거나 HTTP 요청 본문을 스트림으로 처리할 경우 <ph id="ph1">&lt;xref:System.ServiceModel.Web.WebServiceHost&gt;</ph>에서는 바인딩에 알맞은 콘텐츠 형식 매퍼를 자동으로 구성합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Web.WebServiceHost">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.ServiceModel.Web.WebServiceHost&gt;</ph> class to host a service that makes use of the <ph id="ph2">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> REST programming model.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Web.WebServiceHost&gt;</ph> 클래스를 사용하여 <ph id="ph2">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> REST 프로그래밍 모델을 활용하는 서비스를 호스팅하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Web.WebServiceHost">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Web.WebServiceHost" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Web.WebServiceHost" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Web.WebServiceHost.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Web.WebServiceHost" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Web.WebServiceHost" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Web.WebServiceHost.#ctor(System.Object,System.Uri[])">
          <source>A service instance to be used as the singleton instance.</source>
          <target state="translated">singleton 인스턴스로 사용할 서비스 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Web.WebServiceHost.#ctor(System.Object,System.Uri[])">
          <source>The base address of the service.</source>
          <target state="translated">서비스의 기본 주소입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Web.WebServiceHost.#ctor(System.Object,System.Uri[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Web.WebServiceHost" /&gt;</ph> class with the specified singleton server instance and base address.</source>
          <target state="translated">지정된 singleton 서버 인스턴스와 기본 주소를 사용하여 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Web.WebServiceHost" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Web.WebServiceHost.#ctor(System.Object,System.Uri[])">
          <source>The <ph id="ph1">`baseAddresses`</ph> parameter can consist of one or more base addresses.</source>
          <target state="translated"><ph id="ph1">`baseAddresses`</ph> 매개 변수는 하나 이상의 기본 주소로 구성될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Web.WebServiceHost.#ctor(System.Object,System.Uri[])">
          <source>The following example shows how to call this constructor.</source>
          <target state="translated">다음 예제에서는 이 생성자를 호출하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Web.WebServiceHost.#ctor(System.Type,System.Uri[])">
          <source>The service type.</source>
          <target state="translated">서비스 유형입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Web.WebServiceHost.#ctor(System.Type,System.Uri[])">
          <source>The base address of the service.</source>
          <target state="translated">서비스의 기본 주소입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Web.WebServiceHost.#ctor(System.Type,System.Uri[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Web.WebServiceHost" /&gt;</ph> class with the specified service type and base address.</source>
          <target state="translated">지정된 서비스 형식 및 기본 주소를 사용하여 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Web.WebServiceHost" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Web.WebServiceHost.#ctor(System.Type,System.Uri[])">
          <source>The <ph id="ph1">`baseAddresses`</ph> parameter can consist of one or more base addresses.</source>
          <target state="translated"><ph id="ph1">`baseAddresses`</ph> 매개 변수는 하나 이상의 기본 주소로 구성될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Web.WebServiceHost.#ctor(System.Type,System.Uri[])">
          <source>The following example shows how to call this constructor.</source>
          <target state="translated">다음 예제에서는 이 생성자를 호출하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Web.WebServiceHost.OnOpening">
          <source>Called when the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Web.WebServiceHost" /&gt;</ph> instance opens.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Web.WebServiceHost" /&gt;</ph> 인스턴스가 열릴 때 호출됩니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Web.WebServiceHost.OnOpening">
          <source>The following occurs when this method is called:</source>
          <target state="translated">이 메서드가 호출되면 다음과 같은 결과가 발생합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Web.WebServiceHost.OnOpening">
          <source>If <ph id="ph1">&lt;xref:System.ServiceModel.Web.WebServiceHost&gt;</ph> finds no endpoints in the service description, it creates a default endpoint at the service's base address.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Web.WebServiceHost&gt;</ph>는 서비스 설명에서 끝점을 찾지 못하는 경우 서비스의 기본 주소에 기본 끝점을 만듭니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Web.WebServiceHost.OnOpening">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Web.WebServiceHost&gt;</ph> automatically disables the HTTP Help page and the WSDL GET functionality so that the metadata endpoint does not interfere with the default HTTP endpoint.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Web.WebServiceHost&gt;</ph>는 메타데이터 끝점이 기본 HTTP 끝점과 간섭하지 않도록 HTTP 도움말 페이지 및 WSDL GET 기능을 자동으로 비활성화합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Web.WebServiceHost.OnOpening">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Web.WebServiceHost&gt;</ph> checks all endpoints that use the <ph id="ph2">&lt;xref:System.ServiceModel.WebHttpBinding&gt;</ph> to see if they have the required <ph id="ph3">&lt;xref:System.ServiceModel.Description.WebHttpBehavior&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Web.WebServiceHost&gt;</ph>는 <ph id="ph2">&lt;xref:System.ServiceModel.WebHttpBinding&gt;</ph>을 사용하는 모든 끝점을 검사하여 필요한 <ph id="ph3">&lt;xref:System.ServiceModel.Description.WebHttpBehavior&gt;</ph>가 있는지 확인합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Web.WebServiceHost.OnOpening">
          <source>If not present, <ph id="ph1">&lt;xref:System.ServiceModel.Web.WebServiceHost&gt;</ph> adds the <ph id="ph2">&lt;xref:System.ServiceModel.Description.WebHttpBehavior&gt;</ph> for the endpoint.</source>
          <target state="translated">없는 경우 <ph id="ph1">&lt;xref:System.ServiceModel.Web.WebServiceHost&gt;</ph>는 끝점에 <ph id="ph2">&lt;xref:System.ServiceModel.Description.WebHttpBehavior&gt;</ph>를 추가합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Web.WebServiceHost.OnOpening">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Web.WebServiceHost&gt;</ph> configures the endpoint's binding to work with the associated IIS security settings when used in a secure virtual directory.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Web.WebServiceHost&gt;</ph>는 보안 가상 디렉터리에서 사용될 때 연결된 IIS 보안 설정으로 작동하도록 끝점의 바인딩을 구성합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>