<Type Name="WebServiceHost" FullName="System.ServiceModel.Web.WebServiceHost">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cf5c4e6be77e551fd7231173c734e6deb64c7250" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WebServiceHost : System.ServiceModel.ServiceHost" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebServiceHost extends System.ServiceModel.ServiceHost" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Web.WebServiceHost" />
  <TypeSignature Language="VB.NET" Value="Public Class WebServiceHost&#xA;Inherits ServiceHost" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebServiceHost : System::ServiceModel::ServiceHost" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.ServiceHost</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="fc017-101">WCF(Windows Communication Foundation) REST 프로그래밍 모델을 보완하는 <see cref="T:System.ServiceModel.ServiceHost" /> 파생된 클래스입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fc017-101">A <see cref="T:System.ServiceModel.ServiceHost" /> derived class that compliments the Windows Communication Foundation (WCF) REST programming model.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc017-102"><xref:System.ServiceModel.Web.WebServiceHost>는 서비스 설명에서 끝점을 찾지 못하면 서비스의 기본 주소에 HTTP 및 HTTPS 기본 주소를 위한 기본 끝점을 자동으로 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="fc017-102">If <xref:System.ServiceModel.Web.WebServiceHost> finds no endpoints in the service description, it automatically creates a default endpoint at the service's base address for HTTP and HTTPS base addresses.</span></span> <span data-ttu-id="fc017-103">사용자가 기본 주소에서 명시적으로 끝점을 구성한 경우 끝점을 자동으로 만들지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fc017-103">It does not create an endpoint automatically if the user has configured an endpoint explicitly at the base address.</span></span> <span data-ttu-id="fc017-104"><xref:System.ServiceModel.Web.WebServiceHost>는 보안 가상 디렉터리에서 사용될 때 연결된 IIS(인터넷 정보 서비스) 보안 설정으로 작동하도록 끝점의 바인딩을 자동으로 구성합니다.</span><span class="sxs-lookup"><span data-stu-id="fc017-104"><xref:System.ServiceModel.Web.WebServiceHost> automatically configures the endpoint's binding to work with the associated Internet Information Services (IIS) security settings when used in a secure virtual directory.</span></span>  
  
 <span data-ttu-id="fc017-105">기본 HTTP 끝점을 만들 때 <xref:System.ServiceModel.Web.WebServiceHost>는 메타데이터 끝점이 기본 HTTP 끝점과 간섭하지 않도록 HTTP 도움말 페이지 및 WSDL(웹 서비스 기술 언어) GET 기능을 비활성화합니다.</span><span class="sxs-lookup"><span data-stu-id="fc017-105">When creating a default HTTP endpoint, the <xref:System.ServiceModel.Web.WebServiceHost> also disables the HTTP Help page and the Web Services Description Language (WSDL) GET functionality so the metadata endpoint does not interfere with the default HTTP endpoint.</span></span>  
  
 <span data-ttu-id="fc017-106">또한 <xref:System.ServiceModel.Web.WebServiceHost> 클래스는 <xref:System.ServiceModel.Description.WebHttpBehavior>가 있고 <xref:System.ServiceModel.Configuration.WebMessageEncodingElement> 동작이 기존에 존재하지 않는 모든 끝점에 이 동작을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="fc017-106">In addition, the <xref:System.ServiceModel.Web.WebServiceHost> class adds the <xref:System.ServiceModel.Description.WebHttpBehavior> to all endpoints that do not already have the behavior and that have a <xref:System.ServiceModel.Configuration.WebMessageEncodingElement>.</span></span> <span data-ttu-id="fc017-107">서비스의 모든 작업이 빈 HTTP 요청 본문을 가지거나 HTTP 요청 본문을 스트림으로 처리할 경우 <xref:System.ServiceModel.Web.WebServiceHost>에서는 바인딩에 알맞은 콘텐츠 형식 매퍼를 자동으로 구성합니다.</span><span class="sxs-lookup"><span data-stu-id="fc017-107">If all the operations on the service have either empty HTTP request bodies or deal with the HTTP request body as a stream, then the <xref:System.ServiceModel.Web.WebServiceHost> automatically configures the appropriate content type mapper for the binding.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc017-108">다음 예제에서는 <xref:System.ServiceModel.Web.WebServiceHost> 클래스를 사용하여 [!INCLUDE[indigo2](~/includes/indigo2-md.md)] REST 프로그래밍 모델을 활용하는 서비스를 호스팅하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="fc017-108">The following example shows how to use the <xref:System.ServiceModel.Web.WebServiceHost> class to host a service that makes use of the [!INCLUDE[indigo2](~/includes/indigo2-md.md)] REST programming model.</span></span>  
  
 [!code-csharp[WebServiceHost#0](~/samples/snippets/csharp/VS_Snippets_CFX/webservicehost/cs/program.cs#0)]
 [!code-vb[WebServiceHost#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/webservicehost/vb/program.vb#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fc017-109">
            <see cref="T:System.ServiceModel.Web.WebServiceHost" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc017-109">Initializes a new instance of the <see cref="T:System.ServiceModel.Web.WebServiceHost" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebServiceHost ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Web.WebServiceHost.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebServiceHost();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fc017-110">
            <see cref="T:System.ServiceModel.Web.WebServiceHost" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc017-110">Initializes a new instance of the <see cref="T:System.ServiceModel.Web.WebServiceHost" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebServiceHost (object singletonInstance, params Uri[] baseAddresses);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object singletonInstance, class System.Uri[] baseAddresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Web.WebServiceHost.#ctor(System.Object,System.Uri[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (singletonInstance As Object, ParamArray baseAddresses As Uri())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebServiceHost(System::Object ^ singletonInstance, ... cli::array &lt;Uri ^&gt; ^ baseAddresses);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="singletonInstance" Type="System.Object" />
        <Parameter Name="baseAddresses" Type="System.Uri[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="singletonInstance">
          <span data-ttu-id="fc017-111">singleton 인스턴스로 사용할 서비스 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc017-111">A service instance to be used as the singleton instance.</span>
          </span>
        </param>
        <param name="baseAddresses">
          <span data-ttu-id="fc017-112">서비스의 기본 주소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc017-112">The base address of the service.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fc017-113">지정된 singleton 서버 인스턴스와 기본 주소를 사용하여 <see cref="T:System.ServiceModel.Web.WebServiceHost" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc017-113">Initializes a new instance of the <see cref="T:System.ServiceModel.Web.WebServiceHost" /> class with the specified singleton server instance and base address.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc017-114">`baseAddresses` 매개 변수는 하나 이상의 기본 주소로 구성될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fc017-114">The `baseAddresses` parameter can consist of one or more base addresses.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc017-115">다음 예제에서는 이 생성자를 호출하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="fc017-115">The following example shows how to call this constructor.</span></span>  
  
 [!code-csharp[WebServiceHost#1](~/samples/snippets/csharp/VS_Snippets_CFX/webservicehost/cs/snippets.cs#1)]
 [!code-vb[WebServiceHost#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/webservicehost/vb/snippets.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebServiceHost (Type serviceType, params Uri[] baseAddresses);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type serviceType, class System.Uri[] baseAddresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Web.WebServiceHost.#ctor(System.Type,System.Uri[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serviceType As Type, ParamArray baseAddresses As Uri())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebServiceHost(Type ^ serviceType, ... cli::array &lt;Uri ^&gt; ^ baseAddresses);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="baseAddresses" Type="System.Uri[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="serviceType">
          <span data-ttu-id="fc017-116">서비스 유형입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc017-116">The service type.</span>
          </span>
        </param>
        <param name="baseAddresses">
          <span data-ttu-id="fc017-117">서비스의 기본 주소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc017-117">The base address of the service.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fc017-118">지정된 서비스 형식 및 기본 주소를 사용하여 <see cref="T:System.ServiceModel.Web.WebServiceHost" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc017-118">Initializes a new instance of the <see cref="T:System.ServiceModel.Web.WebServiceHost" /> class with the specified service type and base address.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc017-119">`baseAddresses` 매개 변수는 하나 이상의 기본 주소로 구성될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fc017-119">The `baseAddresses` parameter can consist of one or more base addresses.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc017-120">다음 예제에서는 이 생성자를 호출하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="fc017-120">The following example shows how to call this constructor.</span></span>  
  
 [!code-csharp[WebServiceHost#2](~/samples/snippets/csharp/VS_Snippets_CFX/webservicehost/cs/snippets.cs#2)]
 [!code-vb[WebServiceHost#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/webservicehost/vb/snippets.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnOpening">
      <MemberSignature Language="C#" Value="protected override void OnOpening ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnOpening() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Web.WebServiceHost.OnOpening" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnOpening ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnOpening();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fc017-121">
            <see cref="T:System.ServiceModel.Web.WebServiceHost" /> 인스턴스가 열릴 때 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc017-121">Called when the <see cref="T:System.ServiceModel.Web.WebServiceHost" /> instance opens.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc017-122">이 메서드가 호출되면 다음과 같은 결과가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="fc017-122">The following occurs when this method is called:</span></span>  
  
1.  <span data-ttu-id="fc017-123"><xref:System.ServiceModel.Web.WebServiceHost>는 서비스 설명에서 끝점을 찾지 못하는 경우 서비스의 기본 주소에 기본 끝점을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="fc017-123">If <xref:System.ServiceModel.Web.WebServiceHost> finds no endpoints in the service description, it creates a default endpoint at the service's base address.</span></span> <span data-ttu-id="fc017-124"><xref:System.ServiceModel.Web.WebServiceHost>는 메타데이터 끝점이 기본 HTTP 끝점과 간섭하지 않도록 HTTP 도움말 페이지 및 WSDL GET 기능을 자동으로 비활성화합니다.</span><span class="sxs-lookup"><span data-stu-id="fc017-124"><xref:System.ServiceModel.Web.WebServiceHost> automatically disables the HTTP Help page and the WSDL GET functionality so that the metadata endpoint does not interfere with the default HTTP endpoint.</span></span>  
  
2.  <span data-ttu-id="fc017-125"><xref:System.ServiceModel.Web.WebServiceHost>는 <xref:System.ServiceModel.WebHttpBinding>을 사용하는 모든 끝점을 검사하여 필요한 <xref:System.ServiceModel.Description.WebHttpBehavior>가 있는지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="fc017-125"><xref:System.ServiceModel.Web.WebServiceHost> checks all endpoints that use the <xref:System.ServiceModel.WebHttpBinding> to see if they have the required <xref:System.ServiceModel.Description.WebHttpBehavior>.</span></span> <span data-ttu-id="fc017-126">없는 경우 <xref:System.ServiceModel.Web.WebServiceHost>는 끝점에 <xref:System.ServiceModel.Description.WebHttpBehavior>를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="fc017-126">If not present, <xref:System.ServiceModel.Web.WebServiceHost> adds the <xref:System.ServiceModel.Description.WebHttpBehavior> for the endpoint.</span></span>  
  
3.  <span data-ttu-id="fc017-127"><xref:System.ServiceModel.Web.WebServiceHost>는 보안 가상 디렉터리에서 사용될 때 연결된 IIS 보안 설정으로 작동하도록 끝점의 바인딩을 구성합니다.</span><span class="sxs-lookup"><span data-stu-id="fc017-127"><xref:System.ServiceModel.Web.WebServiceHost> configures the endpoint's binding to work with the associated IIS security settings when used in a secure virtual directory.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>