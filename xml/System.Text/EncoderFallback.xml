<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="EncoderFallback.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5441a9abdda3baaf6b1b6bd11d140c5d87eee9364.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">441a9abdda3baaf6b1b6bd11d140c5d87eee9364</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Text.EncoderFallback">
          <source>Provides a failure-handling mechanism, called a fallback, for an input character that cannot be converted to an encoded output byte sequence.</source>
          <target state="translated">인코딩된 출력 바이트 시퀀스로 변환할 수 없는 입력 문자에 대해 대체(fallback)라는 실패 처리 메커니즘을 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallback">
          <source>An encoding maps a Unicode character to an encoded sequence of bytes.</source>
          <target state="translated">인코딩을 유니코드 문자 인코딩된 바이트 시퀀스로 매핑됩니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallback">
          <source>A particular encoding is represented by a type that is derived from the <ph id="ph1">&lt;xref:System.Text.Encoding&gt;</ph> class.</source>
          <target state="translated">파생 된 형식으로 나타내는 특정 인코딩의 <ph id="ph1">&lt;xref:System.Text.Encoding&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallback">
          <source>Specifically, a character is encoded to a byte sequence by calling the encoding type's <ph id="ph1">&lt;xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType&gt;</ph> method, and the byte sequence is decoded to a character array or a string by calling the <ph id="ph2">&lt;xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph3">&lt;xref:System.Text.Encoding.GetString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">인코딩 형식의 호출 하 여 문자는 바이트 시퀀스를 인코딩된 특히 <ph id="ph1">&lt;xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType&gt;</ph> 메서드와 바이트 시퀀스를 디코딩하는 문자 배열 또는 문자열 호출 하 여는 <ph id="ph2">&lt;xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Text.Encoding.GetString%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallback">
          <source>An encoding operation can fail if the input character cannot be represented by the encoding.</source>
          <target state="translated">인코딩 작업에 의해 입력된 문자를 표현할 수 없는 경우 실패할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallback">
          <source>For example, an <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> object cannot encode a character whose Unicode code point value is outside the range U+0000 to U+007F.</source>
          <target state="translated">예를 들어 한 <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> 개체 U + 0000 ~ U + 007F 범위 밖에 있는 경우 유니코드 코드 포인트 값이 문자를 인코딩할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallback">
          <source>When an encoding conversion cannot be performed, the .NET Framework provides a failure-handling mechanism called a fallback.</source>
          <target state="translated">인코딩 변환을 수행할 수 없으면,.NET Framework는 대체 (fallback) 라고 하는 오류 처리 메커니즘을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallback">
          <source>Your application can use predefined .NET Framework encoder fallbacks, or it can create a custom encoder fallback derived from the <ph id="ph1">&lt;xref:System.Text.EncoderFallback&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.EncoderFallbackBuffer&gt;</ph> classes.</source>
          <target state="translated">응용 프로그램이 미리 정의 된.NET Framework 인코더 대체를 사용할 수 또는에서 파생 된 사용자 지정 인코더 대체 (fallback)를 만들 수는 <ph id="ph1">&lt;xref:System.Text.EncoderFallback&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Text.EncoderFallbackBuffer&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallback">
          <source><ph id="ph1">&lt;xref:System.Text.EncoderFallback&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.EncoderFallbackBuffer&gt;</ph> are the base classes for all encoding fallback handlers in the .NET Framework.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.EncoderFallback&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Text.EncoderFallbackBuffer&gt;</ph> 모든 기본 클래스 인코딩하는.NET Framework의 대체 (fallback) 처리기입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallback">
          <source>They support the following three kinds of fallback handling mechanisms:</source>
          <target state="translated">지 원하는 다음과 같은 세 가지 메커니즘을 처리 하는 대체 (fallback):</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallback">
          <source>Best-fit fallback, which maps valid Unicode characters that cannot be encoded to an approximate equivalent.</source>
          <target state="translated">대략적인 해당 하는 인코딩할 수 없는 유효한 유니코드 문자를 매핑하는 최적 맞춤된 대체 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallback">
          <source>For example, a best-fit fallback handler for the <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> class might map Æ (U+00C6) to AE (U+0041 + U+0045).</source>
          <target state="translated">예를 들어 최적 맞춤 대체 (fallback)에 대 한 처리기는 <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> 클래스 AE (U + 0041 + U + 0045) Æ (U + 6) 매핑할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallback">
          <source>A best-fit fallback handler might also be implemented to transliterate one alphabet (such as Cyrillic) to another (such as Latin or Roman).</source>
          <target state="translated">최적된 대체 (fallback) 처리기 수도 구현 하 여 (예: 키릴 자모) 하나의 알파벳 다른 (예: 라틴 또는 로마).</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallback">
          <source>The .NET Framework does not provide any public best-fit fallback implementations.</source>
          <target state="translated">.NET Framework는 모든 공용 최적 맞춤된 대체 (fallback) 구현을 제공 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallback">
          <source>Replacement fallback, which replaces each character that cannot be encoded with a predefined string.</source>
          <target state="translated">미리 정의 된 문자열로 교체 대체 (fallback), 어떤 대체 문자를 인코딩할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallback">
          <source>The .NET Framework provides a predefined replacement fallback handler.</source>
          <target state="translated">.NET Framework는 미리 정의 된 대체 하는 대체 (fallback) 처리기를 제공합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallback">
          <source>The <ph id="ph1">&lt;xref:System.Text.EncoderReplacementFallback&gt;</ph> class replaces each byte sequence that cannot be decoded with a question mark character ("?", or U+003F) or a REPLACEMENT CHARACTER (U+FFFD).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.EncoderReplacementFallback&gt;</ph> 클래스는 물음표 문자 각 바이트 시퀀스를 디코딩할 수 없는 바꿉니다 ("?", 또는 U + 003F) 또는 REPLACEMENT CHARACTER (U + FFFD).</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallback">
          <source>You can customize the replacement string by specifying a substitute in the call to the <ph id="ph1">&lt;xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType&gt;</ph> constructor.</source>
          <target state="translated">에 대 한 호출에서 대체를 지정 하 여 대체 문자열을 사용자 지정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallback">
          <source>After the substitute string is emitted, the encoding operation continues converting the remainder of the input.</source>
          <target state="translated">대체 문자열을 내보낸 후 변환 입력의 나머지 부분에서는 인코딩 작업을 계속 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallback">
          <source>Exception fallback, which throws an exception when a character cannot be encoded.</source>
          <target state="translated">예외 대체 (fallback), 문자를 인코딩할 수 없는 경우 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallback">
          <source>The .NET Framework provides a predefined exception fallback handler.</source>
          <target state="translated">.NET Framework는 미리 정의 된 예외 대체 (fallback) 처리기가 제공 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallback">
          <source>The <ph id="ph1">&lt;xref:System.Text.EncoderExceptionFallback&gt;</ph> class throws an <ph id="ph2">&lt;xref:System.Text.EncoderFallbackException&gt;</ph> when an invalid character is encountered, and the encoding operation terminates.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.EncoderExceptionFallback&gt;</ph> throw 클래스는 <ph id="ph2">&lt;xref:System.Text.EncoderFallbackException&gt;</ph> 잘못 된 문자가 시점과 인코딩 작업을 종료 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallback">
          <source>If you choose to implement a custom solution, you must override the following abstract members of the <ph id="ph1">&lt;xref:System.Text.EncoderFallback&gt;</ph> class:</source>
          <target state="translated">추상 멤버를 재정의 해야 합니다는 사용자 지정 솔루션을 구현 하려는 경우는 <ph id="ph1">&lt;xref:System.Text.EncoderFallback&gt;</ph> 클래스:</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallback">
          <source>The <ph id="ph1">&lt;xref:System.Text.EncoderFallback.CreateFallbackBuffer%2A&gt;</ph> method, which returns a class instance derived from <ph id="ph2">&lt;xref:System.Text.EncoderFallbackBuffer&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.EncoderFallback.CreateFallbackBuffer%2A&gt;</ph> 에서 파생 된 클래스 인스턴스를 반환 하는 메서드 <ph id="ph2">&lt;xref:System.Text.EncoderFallbackBuffer&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallback">
          <source>Depending on the type of fallback handler that you are developing, the <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer&gt;</ph> implementation is responsible for performing the mapping or replacement, or for throwing the exception.</source>
          <target state="translated">을 개발 하는 대체 (fallback) 처리기의 유형에 따라는 <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer&gt;</ph> 구현은 매핑 또는 교체를 수행 하거나 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallback">
          <source>The <ph id="ph1">&lt;xref:System.Text.EncoderFallback.MaxCharCount%2A&gt;</ph> property, which returns the maximum number of characters that the fallback implementation can return.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.EncoderFallback.MaxCharCount%2A&gt;</ph> 속성 문자 대체 (fallback) 구현을 반환할 수 있는 최대 수를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallback">
          <source>For an exception fallback handler, its value should be zero.</source>
          <target state="translated">예외 대체 (fallback) 처리기에 대 한 해당 값은 0 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallback">
          <source>For more information about encoding, decoding, and fallback strategies, see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>.</source>
          <target state="translated">인코딩, 디코딩, 및 대체 (fallback) 전략에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>.NET Framework의 문자 인코딩<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderFallback.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.EncoderFallback" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Text.EncoderFallback" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderFallback.CreateFallbackBuffer">
          <source>When overridden in a derived class, initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.EncoderFallbackBuffer" /&gt;</ph> class.</source>
          <target state="translated">파생 클래스에서 재정의된 경우 <ph id="ph1">&lt;see cref="T:System.Text.EncoderFallbackBuffer" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderFallback.CreateFallbackBuffer">
          <source>An object that provides a fallback buffer for an encoder.</source>
          <target state="translated">인코더에 대해 fallback 버퍼를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncoderFallback.CreateFallbackBuffer">
          <source>This method returns an object derived from <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer&gt;</ph> that is responsible for performing the fallback operation.</source>
          <target state="translated">이 메서드는 개체에서 파생 된 반환 <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer&gt;</ph> 하는 대체 작업을 수행 하는 일을 담당 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncoderFallback.CreateFallbackBuffer">
          <source>For example, of the predefined <ph id="ph1">&lt;xref:System.Text.EncoderFallback&gt;</ph> implementations in the .NET Framework, the <ph id="ph2">&lt;xref:System.Text.EncoderReplacementFallback.CreateFallbackBuffer%2A?displayProperty=nameWithType&gt;</ph> method returns an <ph id="ph3">&lt;xref:System.Text.EncoderReplacementFallbackBuffer&gt;</ph> object, and the <ph id="ph4">&lt;xref:System.Text.EncoderExceptionFallback.CreateFallbackBuffer%2A?displayProperty=nameWithType&gt;</ph> method returns an <ph id="ph5">&lt;xref:System.Text.EncoderExceptionFallbackBuffer&gt;</ph> object.</source>
          <target state="translated">예를 들어 미리 정의 된의 <ph id="ph1">&lt;xref:System.Text.EncoderFallback&gt;</ph> .NET Framework에서 구현은 <ph id="ph2">&lt;xref:System.Text.EncoderReplacementFallback.CreateFallbackBuffer%2A?displayProperty=nameWithType&gt;</ph> 메서드가 반환 되는 <ph id="ph3">&lt;xref:System.Text.EncoderReplacementFallbackBuffer&gt;</ph> 개체 및 <ph id="ph4">&lt;xref:System.Text.EncoderExceptionFallback.CreateFallbackBuffer%2A?displayProperty=nameWithType&gt;</ph> 메서드가 반환 되는 <ph id="ph5">&lt;xref:System.Text.EncoderExceptionFallbackBuffer&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncoderFallback.CreateFallbackBuffer">
          <source>The <ph id="ph1">&lt;xref:System.Text.EncoderFallback.CreateFallbackBuffer%2A&gt;</ph> method is called by an encoder when it encounters the first character that it is unable to encode.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.EncoderFallback.CreateFallbackBuffer%2A&gt;</ph> 메서드는 인코딩할 수 없는 첫 번째 문자에 도달할 때 인코더에서 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncoderFallback.CreateFallbackBuffer">
          <source>The <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer&gt;</ph> object returned by this method provides the fallback implementation and is responsible for returning the byte array that replaces the character or characters that could not be encoded.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer&gt;</ph> 이 메서드에서 반환 된 개체의 대체 (fallback) 구현을 제공 하 고 인코딩할 수 없는 문자 (들)를 대체 하는 바이트 배열을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.Text.EncoderFallback.ExceptionFallback">
          <source>Gets an object that throws an exception when an input character cannot be encoded.</source>
          <target state="translated">입력 문자를 인코딩할 수 없는 경우 예외를 throw하는 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.EncoderFallback.ExceptionFallback">
          <source>A type derived from the <ph id="ph1">&lt;see cref="T:System.Text.EncoderFallback" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Text.EncoderFallback" /&gt;</ph> 클래스에서 파생된 형식입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.EncoderFallback.ExceptionFallback">
          <source>The default value is a <ph id="ph1">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph> object.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.Text.EncoderFallback.MaxCharCount">
          <source>When overridden in a derived class, gets the maximum number of characters the current <ph id="ph1">&lt;see cref="T:System.Text.EncoderFallback" /&gt;</ph> object can return.</source>
          <target state="translated">파생 클래스에서 재정의될 때 현재 <ph id="ph1">&lt;see cref="T:System.Text.EncoderFallback" /&gt;</ph> 개체가 반환할 수 있는 최대 문자 수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.EncoderFallback.MaxCharCount">
          <source>The maximum number of characters the current <ph id="ph1">&lt;see cref="T:System.Text.EncoderFallback" /&gt;</ph> object can return.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Text.EncoderFallback" /&gt;</ph> 개체가 반환할 수 있는 최대 문자 수입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.EncoderFallback.MaxCharCount">
          <source>For an exception fallback handler, this property should return zero.</source>
          <target state="translated">예외 대체 (fallback) 처리기에 대 한이 속성은 0을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="P:System.Text.EncoderFallback.ReplacementFallback">
          <source>Gets an object that outputs a substitute string in place of an input character that cannot be encoded.</source>
          <target state="translated">인코딩할 수 없는 입력 문자 대신 대체 문자열을 출력하는 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.EncoderFallback.ReplacementFallback">
          <source>A type derived from the <ph id="ph1">&lt;see cref="T:System.Text.EncoderFallback" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Text.EncoderFallback" /&gt;</ph> 클래스에서 파생된 형식입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.EncoderFallback.ReplacementFallback">
          <source>The default value is a <ph id="ph1">&lt;see cref="T:System.Text.EncoderReplacementFallback" /&gt;</ph> object that replaces unknown input characters with the QUESTION MARK character ("?", U+003F).</source>
          <target state="translated">기본값은 알 수 없는 입력 문자를 물음표 문자("?", U+003F)로 대체하는 <ph id="ph1">&lt;see cref="T:System.Text.EncoderReplacementFallback" /&gt;</ph> 개체입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>