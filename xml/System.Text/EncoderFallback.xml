<Type Name="EncoderFallback" FullName="System.Text.EncoderFallback">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="441a9abdda3baaf6b1b6bd11d140c5d87eee9364" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30528357" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class EncoderFallback" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit EncoderFallback extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.EncoderFallback" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EncoderFallback" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncoderFallback abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="e20c6-101">인코딩된 출력 바이트 시퀀스로 변환할 수 없는 입력 문자에 대해 대체(fallback)라는 실패 처리 메커니즘을 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e20c6-101">Provides a failure-handling mechanism, called a fallback, for an input character that cannot be converted to an encoded output byte sequence.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e20c6-102">인코딩을 유니코드 문자 인코딩된 바이트 시퀀스로 매핑됩니다.</span><span class="sxs-lookup"><span data-stu-id="e20c6-102">An encoding maps a Unicode character to an encoded sequence of bytes.</span></span> <span data-ttu-id="e20c6-103">파생 된 형식으로 나타내는 특정 인코딩의 <xref:System.Text.Encoding> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="e20c6-103">A particular encoding is represented by a type that is derived from the <xref:System.Text.Encoding> class.</span></span> <span data-ttu-id="e20c6-104">인코딩 형식의 호출 하 여 문자는 바이트 시퀀스를 인코딩된 특히 <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> 메서드와 바이트 시퀀스를 디코딩하는 문자 배열 또는 문자열 호출 하 여는 <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> 또는 <xref:System.Text.Encoding.GetString%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e20c6-104">Specifically, a character is encoded to a byte sequence by calling the encoding type's <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> method, and the byte sequence is decoded to a character array or a string by calling the <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> or <xref:System.Text.Encoding.GetString%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="e20c6-105">인코딩 작업에 의해 입력된 문자를 표현할 수 없는 경우 실패할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e20c6-105">An encoding operation can fail if the input character cannot be represented by the encoding.</span></span> <span data-ttu-id="e20c6-106">예를 들어 한 <xref:System.Text.ASCIIEncoding> 개체 U + 0000 ~ U + 007F 범위 밖에 있는 경우 유니코드 코드 포인트 값이 문자를 인코딩할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e20c6-106">For example, an <xref:System.Text.ASCIIEncoding> object cannot encode a character whose Unicode code point value is outside the range U+0000 to U+007F.</span></span>  
  
 <span data-ttu-id="e20c6-107">인코딩 변환을 수행할 수 없으면,.NET Framework는 대체 (fallback) 라고 하는 오류 처리 메커니즘을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="e20c6-107">When an encoding conversion cannot be performed, the .NET Framework provides a failure-handling mechanism called a fallback.</span></span> <span data-ttu-id="e20c6-108">응용 프로그램이 미리 정의 된.NET Framework 인코더 대체를 사용할 수 또는에서 파생 된 사용자 지정 인코더 대체 (fallback)를 만들 수는 <xref:System.Text.EncoderFallback> 및 <xref:System.Text.EncoderFallbackBuffer> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="e20c6-108">Your application can use predefined .NET Framework encoder fallbacks, or it can create a custom encoder fallback derived from the <xref:System.Text.EncoderFallback> and <xref:System.Text.EncoderFallbackBuffer> classes.</span></span>  
  
 <span data-ttu-id="e20c6-109"><xref:System.Text.EncoderFallback> 및 <xref:System.Text.EncoderFallbackBuffer> 모든 기본 클래스 인코딩하는.NET Framework의 대체 (fallback) 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="e20c6-109"><xref:System.Text.EncoderFallback> and <xref:System.Text.EncoderFallbackBuffer> are the base classes for all encoding fallback handlers in the .NET Framework.</span></span> <span data-ttu-id="e20c6-110">지 원하는 다음과 같은 세 가지 메커니즘을 처리 하는 대체 (fallback):</span><span class="sxs-lookup"><span data-stu-id="e20c6-110">They support the following three kinds of fallback handling mechanisms:</span></span>  
  
-   <span data-ttu-id="e20c6-111">대략적인 해당 하는 인코딩할 수 없는 유효한 유니코드 문자를 매핑하는 최적 맞춤된 대체 합니다.</span><span class="sxs-lookup"><span data-stu-id="e20c6-111">Best-fit fallback, which maps valid Unicode characters that cannot be encoded to an approximate equivalent.</span></span> <span data-ttu-id="e20c6-112">예를 들어 최적 맞춤 대체 (fallback)에 대 한 처리기는 <xref:System.Text.ASCIIEncoding> 클래스 AE (U + 0041 + U + 0045) Æ (U + 6) 매핑할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e20c6-112">For example, a best-fit fallback handler for the <xref:System.Text.ASCIIEncoding> class might map Æ (U+00C6) to AE (U+0041 + U+0045).</span></span> <span data-ttu-id="e20c6-113">최적된 대체 (fallback) 처리기 수도 구현 하 여 (예: 키릴 자모) 하나의 알파벳 다른 (예: 라틴 또는 로마).</span><span class="sxs-lookup"><span data-stu-id="e20c6-113">A best-fit fallback handler might also be implemented to transliterate one alphabet (such as Cyrillic) to another (such as Latin or Roman).</span></span> <span data-ttu-id="e20c6-114">.NET Framework는 모든 공용 최적 맞춤된 대체 (fallback) 구현을 제공 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e20c6-114">The .NET Framework does not provide any public best-fit fallback implementations.</span></span>  
  
-   <span data-ttu-id="e20c6-115">미리 정의 된 문자열로 교체 대체 (fallback), 어떤 대체 문자를 인코딩할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e20c6-115">Replacement fallback, which replaces each character that cannot be encoded with a predefined string.</span></span> <span data-ttu-id="e20c6-116">.NET Framework는 미리 정의 된 대체 하는 대체 (fallback) 처리기를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="e20c6-116">The .NET Framework provides a predefined replacement fallback handler.</span></span> <span data-ttu-id="e20c6-117"><xref:System.Text.EncoderReplacementFallback> 클래스는 물음표 문자 각 바이트 시퀀스를 디코딩할 수 없는 바꿉니다 ("?", 또는 U + 003F) 또는 REPLACEMENT CHARACTER (U + FFFD).</span><span class="sxs-lookup"><span data-stu-id="e20c6-117">The <xref:System.Text.EncoderReplacementFallback> class replaces each byte sequence that cannot be decoded with a question mark character ("?", or U+003F) or a REPLACEMENT CHARACTER (U+FFFD).</span></span> <span data-ttu-id="e20c6-118">에 대 한 호출에서 대체를 지정 하 여 대체 문자열을 사용자 지정할 수 있습니다는 <xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="e20c6-118">You can customize the replacement string by specifying a substitute in the call to the <xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="e20c6-119">대체 문자열을 내보낸 후 변환 입력의 나머지 부분에서는 인코딩 작업을 계속 합니다.</span><span class="sxs-lookup"><span data-stu-id="e20c6-119">After the substitute string is emitted, the encoding operation continues converting the remainder of the input.</span></span>  
  
-   <span data-ttu-id="e20c6-120">예외 대체 (fallback), 문자를 인코딩할 수 없는 경우 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="e20c6-120">Exception fallback, which throws an exception when a character cannot be encoded.</span></span> <span data-ttu-id="e20c6-121">.NET Framework는 미리 정의 된 예외 대체 (fallback) 처리기가 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="e20c6-121">The .NET Framework provides a predefined exception fallback handler.</span></span> <span data-ttu-id="e20c6-122"><xref:System.Text.EncoderExceptionFallback> throw 클래스는 <xref:System.Text.EncoderFallbackException> 잘못 된 문자가 시점과 인코딩 작업을 종료 합니다.</span><span class="sxs-lookup"><span data-stu-id="e20c6-122">The <xref:System.Text.EncoderExceptionFallback> class throws an <xref:System.Text.EncoderFallbackException> when an invalid character is encountered, and the encoding operation terminates.</span></span>  
  
 <span data-ttu-id="e20c6-123">추상 멤버를 재정의 해야 합니다는 사용자 지정 솔루션을 구현 하려는 경우는 <xref:System.Text.EncoderFallback> 클래스:</span><span class="sxs-lookup"><span data-stu-id="e20c6-123">If you choose to implement a custom solution, you must override the following abstract members of the <xref:System.Text.EncoderFallback> class:</span></span>  
  
-   <span data-ttu-id="e20c6-124"><xref:System.Text.EncoderFallback.CreateFallbackBuffer%2A> 에서 파생 된 클래스 인스턴스를 반환 하는 메서드 <xref:System.Text.EncoderFallbackBuffer>합니다.</span><span class="sxs-lookup"><span data-stu-id="e20c6-124">The <xref:System.Text.EncoderFallback.CreateFallbackBuffer%2A> method, which returns a class instance derived from <xref:System.Text.EncoderFallbackBuffer>.</span></span> <span data-ttu-id="e20c6-125">을 개발 하는 대체 (fallback) 처리기의 유형에 따라는 <xref:System.Text.EncoderFallbackBuffer> 구현은 매핑 또는 교체를 수행 하거나 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="e20c6-125">Depending on the type of fallback handler that you are developing, the <xref:System.Text.EncoderFallbackBuffer> implementation is responsible for performing the mapping or replacement, or for throwing the exception.</span></span>  
  
-   <span data-ttu-id="e20c6-126"><xref:System.Text.EncoderFallback.MaxCharCount%2A> 속성 문자 대체 (fallback) 구현을 반환할 수 있는 최대 수를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="e20c6-126">The <xref:System.Text.EncoderFallback.MaxCharCount%2A> property, which returns the maximum number of characters that the fallback implementation can return.</span></span> <span data-ttu-id="e20c6-127">예외 대체 (fallback) 처리기에 대 한 해당 값은 0 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e20c6-127">For an exception fallback handler, its value should be zero.</span></span>  
  
 <span data-ttu-id="e20c6-128">인코딩, 디코딩, 및 대체 (fallback) 전략에 대 한 자세한 내용은 참조 [.NET Framework의 문자 인코딩](~/docs/standard/base-types/character-encoding.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e20c6-128">For more information about encoding, decoding, and fallback strategies, see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.EncoderFallbackBuffer" />
    <altmember cref="T:System.Text.EncoderReplacementFallback" />
    <altmember cref="T:System.Text.EncoderExceptionFallback" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EncoderFallback ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallback.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EncoderFallback();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e20c6-129">
            <see cref="T:System.Text.EncoderFallback" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e20c6-129">Initializes a new instance of the <see cref="T:System.Text.EncoderFallback" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFallbackBuffer">
      <MemberSignature Language="C#" Value="public abstract System.Text.EncoderFallbackBuffer CreateFallbackBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.EncoderFallbackBuffer CreateFallbackBuffer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallback.CreateFallbackBuffer" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateFallbackBuffer () As EncoderFallbackBuffer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Text::EncoderFallbackBuffer ^ CreateFallbackBuffer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.EncoderFallbackBuffer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e20c6-130">파생 클래스에서 재정의된 경우 <see cref="T:System.Text.EncoderFallbackBuffer" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e20c6-130">When overridden in a derived class, initializes a new instance of the <see cref="T:System.Text.EncoderFallbackBuffer" /> class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e20c6-131">인코더에 대해 fallback 버퍼를 제공하는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e20c6-131">An object that provides a fallback buffer for an encoder.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e20c6-132">이 메서드는 개체에서 파생 된 반환 <xref:System.Text.EncoderFallbackBuffer> 하는 대체 작업을 수행 하는 일을 담당 합니다.</span><span class="sxs-lookup"><span data-stu-id="e20c6-132">This method returns an object derived from <xref:System.Text.EncoderFallbackBuffer> that is responsible for performing the fallback operation.</span></span> <span data-ttu-id="e20c6-133">예를 들어 미리 정의 된의 <xref:System.Text.EncoderFallback> .NET Framework에서 구현은 <xref:System.Text.EncoderReplacementFallback.CreateFallbackBuffer%2A?displayProperty=nameWithType> 메서드가 반환 되는 <xref:System.Text.EncoderReplacementFallbackBuffer> 개체 및 <xref:System.Text.EncoderExceptionFallback.CreateFallbackBuffer%2A?displayProperty=nameWithType> 메서드가 반환 되는 <xref:System.Text.EncoderExceptionFallbackBuffer> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e20c6-133">For example, of the predefined <xref:System.Text.EncoderFallback> implementations in the .NET Framework, the <xref:System.Text.EncoderReplacementFallback.CreateFallbackBuffer%2A?displayProperty=nameWithType> method returns an <xref:System.Text.EncoderReplacementFallbackBuffer> object, and the <xref:System.Text.EncoderExceptionFallback.CreateFallbackBuffer%2A?displayProperty=nameWithType> method returns an <xref:System.Text.EncoderExceptionFallbackBuffer> object.</span></span>  
  
 <span data-ttu-id="e20c6-134"><xref:System.Text.EncoderFallback.CreateFallbackBuffer%2A> 메서드는 인코딩할 수 없는 첫 번째 문자에 도달할 때 인코더에서 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e20c6-134">The <xref:System.Text.EncoderFallback.CreateFallbackBuffer%2A> method is called by an encoder when it encounters the first character that it is unable to encode.</span></span> <span data-ttu-id="e20c6-135"><xref:System.Text.EncoderFallbackBuffer> 이 메서드에서 반환 된 개체의 대체 (fallback) 구현을 제공 하 고 인코딩할 수 없는 문자 (들)를 대체 하는 바이트 배열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="e20c6-135">The <xref:System.Text.EncoderFallbackBuffer> object returned by this method provides the fallback implementation and is responsible for returning the byte array that replaces the character or characters that could not be encoded.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.DecoderFallbackBuffer" />
      </Docs>
    </Member>
    <Member MemberName="ExceptionFallback">
      <MemberSignature Language="C#" Value="public static System.Text.EncoderFallback ExceptionFallback { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.EncoderFallback ExceptionFallback" />
      <MemberSignature Language="DocId" Value="P:System.Text.EncoderFallback.ExceptionFallback" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ExceptionFallback As EncoderFallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::EncoderFallback ^ ExceptionFallback { System::Text::EncoderFallback ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.EncoderFallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e20c6-136">입력 문자를 인코딩할 수 없는 경우 예외를 throw하는 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e20c6-136">Gets an object that throws an exception when an input character cannot be encoded.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e20c6-137">
            <see cref="T:System.Text.EncoderFallback" /> 클래스에서 파생된 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e20c6-137">A type derived from the <see cref="T:System.Text.EncoderFallback" /> class.</span>
          </span>
          <span data-ttu-id="e20c6-138">기본값은 <see cref="T:System.Text.EncoderExceptionFallback" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e20c6-138">The default value is a <see cref="T:System.Text.EncoderExceptionFallback" /> object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxCharCount">
      <MemberSignature Language="C#" Value="public abstract int MaxCharCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxCharCount" />
      <MemberSignature Language="DocId" Value="P:System.Text.EncoderFallback.MaxCharCount" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property MaxCharCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int MaxCharCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e20c6-139">파생 클래스에서 재정의될 때 현재 <see cref="T:System.Text.EncoderFallback" /> 개체가 반환할 수 있는 최대 문자 수를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e20c6-139">When overridden in a derived class, gets the maximum number of characters the current <see cref="T:System.Text.EncoderFallback" /> object can return.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e20c6-140">현재 <see cref="T:System.Text.EncoderFallback" /> 개체가 반환할 수 있는 최대 문자 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e20c6-140">The maximum number of characters the current <see cref="T:System.Text.EncoderFallback" /> object can return.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e20c6-141">예외 대체 (fallback) 처리기에 대 한이 속성은 0을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="e20c6-141">For an exception fallback handler, this property should return zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplacementFallback">
      <MemberSignature Language="C#" Value="public static System.Text.EncoderFallback ReplacementFallback { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.EncoderFallback ReplacementFallback" />
      <MemberSignature Language="DocId" Value="P:System.Text.EncoderFallback.ReplacementFallback" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ReplacementFallback As EncoderFallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::EncoderFallback ^ ReplacementFallback { System::Text::EncoderFallback ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.EncoderFallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e20c6-142">인코딩할 수 없는 입력 문자 대신 대체 문자열을 출력하는 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e20c6-142">Gets an object that outputs a substitute string in place of an input character that cannot be encoded.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e20c6-143">
            <see cref="T:System.Text.EncoderFallback" /> 클래스에서 파생된 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e20c6-143">A type derived from the <see cref="T:System.Text.EncoderFallback" /> class.</span>
          </span>
          <span data-ttu-id="e20c6-144">기본값은 알 수 없는 입력 문자를 물음표 문자("?", U+003F)로 대체하는 <see cref="T:System.Text.EncoderReplacementFallback" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e20c6-144">The default value is a <see cref="T:System.Text.EncoderReplacementFallback" /> object that replaces unknown input characters with the QUESTION MARK character ("?", U+003F).</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>