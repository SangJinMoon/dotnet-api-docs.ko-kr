<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="EncodingProvider.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5213b813ec5e5a38a3816aedc55e2d6e2e5a7636c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">213b813ec5e5a38a3816aedc55e2d6e2e5a7636c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Text.EncodingProvider">
          <source>Provides the base class for an encoding provider, which supplies encodings that are unavailable on a particular platform.</source>
          <target state="translated">인코딩 공급자에 대한 기본 클래스를 제공하며, 이는 특정 플랫폼에서 사용할 수 없는 인코딩을 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>An encoding provider supplies encodings that are not otherwise available on a particular target platform.</source>
          <target state="translated">인코딩 공급자에는 특정 대상 플랫폼에서 사용할 수 없는 인코딩을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>The .NET Framework on the Windows desktop supports a large number of character encodings and code pages.</source>
          <target state="translated">Windows 바탕 화면에서.NET Framework는 많은 수의 문자 인코딩 및 코드 페이지를 지원합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>You can get a complete list of encodings available in the .NET Framework on the Windows desktop by calling the <ph id="ph1">&lt;xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">호출 하 여 Windows 바탕 화면에서.NET Framework에서 사용할 수 있는 인코딩의 전체 목록을 가져올 수 있습니다는 <ph id="ph1">&lt;xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>.NET Core, on the other hand, by default supports only the following encodings:</source>
          <target state="translated">.NET core 반면에 기본적으로만 다음 인코딩을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>ASCII (code page 20127), which is returned by the <ph id="ph1">&lt;xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">ASCII (코드 페이지 20127)에서 반환 되는 <ph id="ph1">&lt;xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>ISO-8859-1 (code page 28591).</source>
          <target state="translated">Iso-8859-1 (코드 페이지 28591).</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>UTF-7 (code page 65000), which is returned by the <ph id="ph1">&lt;xref:System.Text.Encoding.UTF7%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">U t F-7 (코드 페이지 65000)에서 반환 되는 <ph id="ph1">&lt;xref:System.Text.Encoding.UTF7%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>UTF-8 (code page 65001), which is returned by the <ph id="ph1">&lt;xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">U t F-8 (코드 페이지 65001)에서 반환 되는 <ph id="ph1">&lt;xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>UTF-16 and UTF-16LE (code page 1200), which is returned by the <ph id="ph1">&lt;xref:System.Text.Encoding.Unicode%2A&gt;</ph> property.</source>
          <target state="translated">U t F-16과 u t F-16LE (코드 페이지 1200)에서 반환 되는 <ph id="ph1">&lt;xref:System.Text.Encoding.Unicode%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>UTF-16BE (code page 1201), which is instantiated by calling the <ph id="ph1">&lt;xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType&gt;</ph> constructor with a <ph id="ph3">`bigEndian`</ph> value of <ph id="ph4">`true`</ph>.</source>
          <target state="translated">U t F-16BE (코드 페이지 1201)를 호출 하 여 인스턴스화된는 <ph id="ph1">&lt;xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType&gt;</ph> 생성자는 <ph id="ph3">`bigEndian`</ph> 값 <ph id="ph4">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>UTF-32 and UTF-32LE (code page 12000), which is returned by the <ph id="ph1">&lt;xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">U t F-32와 u t F-32LE (코드 페이지 12000)에서 반환 되는 <ph id="ph1">&lt;xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>UTF-32BE (code page 12001), which is instantiated by calling an <ph id="ph1">&lt;xref:System.Text.UTF32Encoding&gt;</ph> constructor that has a <ph id="ph2">`bigEndian`</ph> parameter and providing a value of <ph id="ph3">`true`</ph> in the method call.</source>
          <target state="translated">U t F-32BE (코드 페이지 12001)를 호출 하 여 인스턴스화된는 <ph id="ph1">&lt;xref:System.Text.UTF32Encoding&gt;</ph> 변수가 있는 생성자는 <ph id="ph2">`bigEndian`</ph> 의 값을 제공 하 고 매개 변수 <ph id="ph3">`true`</ph> 메서드 호출에서 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>Starting with the .NET Framework 4.6, <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> is the base class that makes otherwise unavailable encodings available to the .NET Framework.</source>
          <target state="translated">.NET Framework 4.6부터 <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> 사용할 수 없는 그렇지 않은 경우 호출 하는 기본 클래스는.NET Framework에 사용할 수 있는 인코딩.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>This involves the following steps:</source>
          <target state="translated">이 단계는 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>Define a subclass of <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> that overrides the two abstract <ph id="ph2">&lt;xref:System.Text.EncodingProvider.GetEncoding%2A&gt;</ph> overloads, <ph id="ph3">&lt;xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%29&gt;</ph> and <ph id="ph4">&lt;xref:System.Text.EncodingProvider.GetEncoding%28System.String%29&gt;</ph>.</source>
          <target state="translated">서브 클래스를 정의 <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> 두 추상을 재정의 하는 <ph id="ph2">&lt;xref:System.Text.EncodingProvider.GetEncoding%2A&gt;</ph> 오버 로드를 <ph id="ph3">&lt;xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%29&gt;</ph> 및 <ph id="ph4">&lt;xref:System.Text.EncodingProvider.GetEncoding%28System.String%29&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>These overloads return the otherwise unsupported encoding by code page identifier and by name.</source>
          <target state="translated">이러한 오버 로드는 그렇지 않으면 지원 되지 않는 인코딩 코드 페이지 식별자와 이름을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>Note that you can also choose to return a default encoding if the <ph id="ph1">&lt;xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%29&gt;</ph> method is called with an argument of 0.</source>
          <target state="translated">경우 인코딩을 하는 기본값을 반환할 수도 있습니다는 <ph id="ph1">&lt;xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%29&gt;</ph> 인수가 0 여 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>Optionally, you can override the virtual <ph id="ph1">&lt;xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.EncodingProvider.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29&gt;</ph> methods.</source>
          <target state="translated">선택적으로 재정의할 수 있습니다 가상 <ph id="ph1">&lt;xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Text.EncodingProvider.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>In most cases, this is not necessary, since the base class provides a default implementation.</source>
          <target state="translated">대부분의 경우에서이 하지 않으므로 필요에 따라 기본 클래스는 기본 구현을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>Pass the <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> instance to the <ph id="ph2">&lt;xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType&gt;</ph> method to make the encodings supplied by the <ph id="ph3">&lt;xref:System.Text.EncodingProvider&gt;</ph> object available to the common language runtime.</source>
          <target state="translated">전달 된 <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> 인스턴스를 <ph id="ph2">&lt;xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType&gt;</ph> 제공한 인코딩은 만드는 메서드와 알림이 <ph id="ph3">&lt;xref:System.Text.EncodingProvider&gt;</ph> 공용 언어 런타임에 사용할 수 있는 개체입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>Call an <ph id="ph1">&lt;xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType&gt;</ph> overload to retrieve the encoding.</source>
          <target state="translated">호출 프로그램 <ph id="ph1">&lt;xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType&gt;</ph> 인코딩을 검색 하는 오버 로드 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>The <ph id="ph1">&lt;xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType&gt;</ph> method will call the corresponding <ph id="ph2">&lt;xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType&gt;</ph> to determine whether it can supply the requested encoding.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType&gt;</ph> 해당 메서드를 호출 합니다 <ph id="ph2">&lt;xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType&gt;</ph> 요청한 인코딩의 제공할 수 있는지 여부를 확인 하려면.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>The .NET Framework Class Library provides one static property, <ph id="ph1">&lt;xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType&gt;</ph>, that returns an <ph id="ph2">&lt;xref:System.Text.EncodingProvider&gt;</ph> object that makes the full set of encodings available on the desktop .NET Framework Class Library available to <ph id="ph3">[!INCLUDE[net_core](~/includes/net-core-md.md)]</ph> applications.</source>
          <target state="translated">하나의 정적 속성을 제공 하는.NET Framework 클래스 라이브러리 <ph id="ph1">&lt;xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType&gt;</ph>를 반환 하는 <ph id="ph2">&lt;xref:System.Text.EncodingProvider&gt;</ph> 인코딩 중 일부만 사용할 수 있는 데스크톱.NET Framework 클래스 라이브러리에서를 사용할 수 있도록 개체 <ph id="ph3">[!INCLUDE[net_core](~/includes/net-core-md.md)]</ph> 응용 프로그램입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>In addition, you can derive from the <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> class to make your own encodings available.</source>
          <target state="translated">파생 될 수 또한는 <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> 클래스 직접 인코딩을 사용할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="T:System.Text.EncodingProvider">
          <source>Returns an encoding.</source>
          <target state="translated">인코딩을 반환합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>The code page identifier of the requested encoding.</source>
          <target state="translated">요청한 인코딩의 코드 페이지 식별자입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>Returns the encoding associated with the specified code page identifier.</source>
          <target state="translated">지정한 코드 페이지 식별자와 관련된 인코딩을 반환합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>The encoding that is associated with the specified code page, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph> cannot return a valid encoding that corresponds to <ph id="ph3">&lt;paramref name="codepage" /&gt;</ph>.</source>
          <target state="translated">지정된 코드 페이지와 연결된 인코딩이거나 이 <ph id="ph2">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph>가 <ph id="ph3">&lt;paramref name="codepage" /&gt;</ph>에 해당하는 올바른 인코딩을 반환할 수 없는 경우 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>Notes to inheritors</source>
          <target state="translated">상속자 참고 사항</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>You override the <bpt id="p1">[</bpt>GetEncoding(Int32)<ept id="p1">](&lt;xref:System.Text.EncodingProvider.GetEncoding(System.Int32)&gt;)</ept> method to return the encoding or encodings supported by your <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> subclass.</source>
          <target state="translated">재정의 <bpt id="p1">[</bpt>GetEncoding(Int32)<ept id="p1">](&lt;xref:System.Text.EncodingProvider.GetEncoding(System.Int32)&gt;)</ept> 인코딩을 반환 하는 메서드 또는 인코딩에서 지 원하는 프로그램 <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> 하위 클래스입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>When user code attempts to retrieve an encoding by calling the <bpt id="p1">[</bpt>GetEncoding(Int32)<ept id="p1">](&lt;xref:System.Text.EncodingProvider.GetEncoding(System.Int32)&gt;)</ept> method, the method passes the <ph id="ph1">`codepage`</ph> identifier to every registered encoding provider until one returns a valid encoding.</source>
          <target state="translated">사용자 코드를 호출 하 여 인코딩을 검색 하려고 할 때의 <bpt id="p1">[</bpt>GetEncoding(Int32)<ept id="p1">](&lt;xref:System.Text.EncodingProvider.GetEncoding(System.Int32)&gt;)</ept> 메서드, 메서드에 전달는 <ph id="ph1">`codepage`</ph> 식별자는 올바른 인코딩을 하나 반환 될 때까지 모든 등록 된 인코딩 공급자입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>If none returns a valid encoding, the <bpt id="p1">[</bpt>GetEncoding(Int32)<ept id="p1">](&lt;xref:System.Text.EncodingProvider.GetEncoding(System.Int32)&gt;)</ept> method attempts to retrieve a cached encoding whose code page identifier is <ph id="ph1">`codepage`</ph>.</source>
          <target state="translated">올바른 인코딩을 none을 반환 하는 경우는 <bpt id="p1">[</bpt>GetEncoding(Int32)<ept id="p1">](&lt;xref:System.Text.EncodingProvider.GetEncoding(System.Int32)&gt;)</ept> 메서드는 코드 페이지 식별자가 캐시 된 인코딩이 검색 하려고 <ph id="ph1">`codepage`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>Because of this, if <ph id="ph1">`codepage`</ph> is not the code page identifier of an encoding that you support, the method should return <ph id="ph2">`null`</ph>; it should never throw an exception.</source>
          <target state="translated">이 인해 경우 <ph id="ph1">`codepage`</ph> 을 지 원하는 메서드를 반환 해야 하는 인코딩 코드 페이지 식별자가 아닙니다 <ph id="ph2">`null`</ph>; 예외를 throw 하지 해야 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>Note that you can also choose to return a default code page if the value of the <ph id="ph1">`codepage`</ph> argument is 0.</source>
          <target state="translated">경우에 기본 코드 페이지를 반환할 수도 있습니다는의 값은 <ph id="ph1">`codepage`</ph> 인수는 0입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>Notes to callers</source>
          <target state="translated">호출자 참고 사항</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>This method is called by the <bpt id="p1">[</bpt>Encoding.GetEncoding(Int32)<ept id="p1">](&lt;xref:System.Text.Encoding.GetEncoding(System.Int32)&gt;)</ept> method.</source>
          <target state="translated">이 메서드는 <bpt id="p1">[</bpt>Encoding.GetEncoding(Int32)<ept id="p1">](&lt;xref:System.Text.Encoding.GetEncoding(System.Int32)&gt;)</ept> 메서드.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>You should not call it directly from user code.</source>
          <target state="translated">하지 사용자 코드에서 직접 호출 해야 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>You override the <ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32)" /&gt;</ph> method to return the encoding or encodings supported by your <ph id="ph2">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph> subclass.</source>
          <target state="translated">재정의 <ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32)" /&gt;</ph> 인코딩을 반환 하는 메서드 또는 인코딩에서 지 원하는 프로그램 <ph id="ph2">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph> 하위 클래스입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>When user code attempts to retrieve an encoding by calling the <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /&gt;</ph> method, the method passes the <ph id="ph2">&lt;paramref name="codepage" /&gt;</ph> identifier to every registered encoding provider until one returns a valid encoding.</source>
          <target state="translated">사용자 코드를 호출 하 여 인코딩을 검색 하려고 할 때의 <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /&gt;</ph> 메서드, 메서드에 전달는 <ph id="ph2">&lt;paramref name="codepage" /&gt;</ph> 식별자는 올바른 인코딩을 하나 반환 될 때까지 모든 등록 된 인코딩 공급자입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>If none returns a valid encoding, the <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /&gt;</ph> method attempts to retrieve a cached encoding whose code page identifier is <ph id="ph2">&lt;paramref name="codepage" /&gt;</ph>.</source>
          <target state="translated">올바른 인코딩을 none을 반환 하는 경우는 <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /&gt;</ph> 메서드는 코드 페이지 식별자가 캐시 된 인코딩이 검색 하려고 <ph id="ph2">&lt;paramref name="codepage" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>Because of this, if <ph id="ph1">&lt;paramref name="codepage" /&gt;</ph> is not the code page identifier of an encoding that you support, the method should return <ph id="ph2">&lt;see langword="null" /&gt;</ph>; it should never throw an exception.</source>
          <target state="translated">이 인해 경우 <ph id="ph1">&lt;paramref name="codepage" /&gt;</ph> 을 지 원하는 메서드를 반환 해야 하는 인코딩 코드 페이지 식별자가 아닙니다 <ph id="ph2">&lt;see langword="null" /&gt;</ph>; 예외를 throw 하지 해야 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>This method is called by the <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /&gt;</ph> method.</source>
          <target state="translated">이 메서드는 <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>You should not call it directly from user code.</source>
          <target state="translated">하지 사용자 코드에서 직접 호출 해야 합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>The name of the requested encoding.</source>
          <target state="translated">요청한 인코딩의 이름입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>Returns the encoding with the specified name.</source>
          <target state="translated">지정된 이름의 인코딩을 반환합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>The encoding that is associated with the specified name, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph> cannot return a valid encoding that corresponds to <ph id="ph3">&lt;paramref name="name" /&gt;</ph>.</source>
          <target state="translated">지정된 이름과 연결된 인코딩이거나 이 <ph id="ph2">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph>가 <ph id="ph3">&lt;paramref name="name" /&gt;</ph>에 해당하는 올바른 인코딩을 반환할 수 없는 경우 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>Notes to inheritors</source>
          <target state="translated">상속자 참고 사항</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>You override the <bpt id="p1">[</bpt>GetEncoding(String)<ept id="p1">](&lt;xref:System.Text.EncodingProvider.GetEncoding(System.String)&gt;)</ept> method to return the encoding or encodings supported by your <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> subclass.</source>
          <target state="translated">재정의 <bpt id="p1">[</bpt>GetEncoding(String)<ept id="p1">](&lt;xref:System.Text.EncodingProvider.GetEncoding(System.String)&gt;)</ept> 인코딩을 반환 하는 메서드 또는 인코딩에서 지 원하는 프로그램 <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> 하위 클래스입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>When user code attempts to retrieve an encoding by calling the <bpt id="p1">[</bpt>GetEncoding(String)<ept id="p1">](&lt;xref:System.Text.EncodingProvider.GetEncoding(System.String)&gt;)</ept> method, the method passes the <ph id="ph1">`name`</ph> argument to every registered encoding provider until one returns a valid encoding.</source>
          <target state="translated">사용자 코드를 호출 하 여 인코딩을 검색 하려고 할 때의 <bpt id="p1">[</bpt>GetEncoding(String)<ept id="p1">](&lt;xref:System.Text.EncodingProvider.GetEncoding(System.String)&gt;)</ept> 메서드, 메서드에 전달는 <ph id="ph1">`name`</ph> 인수는 올바른 인코딩을 하나 반환 될 때까지 모든 등록 된 인코딩 공급자입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>If none returns a valid encoding, the <bpt id="p1">[</bpt>GetEncoding(String)<ept id="p1">](&lt;xref:System.Text.EncodingProvider.GetEncoding(System.String)&gt;)</ept> method attempts to retrieve a cached encoding whose name is <ph id="ph1">`name`</ph>.</source>
          <target state="translated">올바른 인코딩을 none을 반환 하는 경우는 <bpt id="p1">[</bpt>GetEncoding(String)<ept id="p1">](&lt;xref:System.Text.EncodingProvider.GetEncoding(System.String)&gt;)</ept> 메서드 이름이 캐시 된 인코딩이 검색 하려고 <ph id="ph1">`name`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>Because of this, if <ph id="ph1">`name`</ph> is not the name of an encoding that you support, the method should return <ph id="ph2">`null`</ph>.</source>
          <target state="translated">이 인해 경우 <ph id="ph1">`name`</ph> 을 지 원하는 메서드를 반환 해야 하는 인코딩 이름이 아닙니다 <ph id="ph2">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>The only case in which the method should throw an exception is if <ph id="ph1">`name`</ph> is <ph id="ph2">`null`</ph>.</source>
          <target state="translated">메서드는 예외를 throw 해야 하는 유일한 경우는 경우 <ph id="ph1">`name`</ph> 은 <ph id="ph2">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>Notes to callers</source>
          <target state="translated">호출자 참고 사항</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>This method is called by the <bpt id="p1">[</bpt>Encoding.GetEncoding(String)<ept id="p1">](&lt;xref:System.Text.Encoding.GetEncoding(System.String)&gt;)</ept> method.</source>
          <target state="translated">이 메서드는 <bpt id="p1">[</bpt>Encoding.GetEncoding(String)<ept id="p1">](&lt;xref:System.Text.Encoding.GetEncoding(System.String)&gt;)</ept> 메서드.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>You should not call it directly from user code.</source>
          <target state="translated">하지 사용자 코드에서 직접 호출 해야 합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>You override the <ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.String)" /&gt;</ph> method to return the encoding or encodings supported by your <ph id="ph2">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph> subclass.</source>
          <target state="translated">재정의 <ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.String)" /&gt;</ph> 인코딩을 반환 하는 메서드 또는 인코딩에서 지 원하는 프로그램 <ph id="ph2">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph> 하위 클래스입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>When user code attempts to retrieve an encoding by calling the <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.String)" /&gt;</ph> method, the method passes the <ph id="ph2">&lt;paramref name="name" /&gt;</ph> argument to every registered encoding provider until one returns a valid encoding.</source>
          <target state="translated">사용자 코드를 호출 하 여 인코딩을 검색 하려고 할 때의 <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.String)" /&gt;</ph> 메서드, 메서드에 전달는 <ph id="ph2">&lt;paramref name="name" /&gt;</ph> 인수는 올바른 인코딩을 하나 반환 될 때까지 모든 등록 된 인코딩 공급자입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>If none returns a valid encoding, the <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.String)" /&gt;</ph> method attempts to retrieve a cached encoding whose name is <ph id="ph2">&lt;paramref name="name" /&gt;</ph>.</source>
          <target state="translated">올바른 인코딩을 none을 반환 하는 경우는 <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.String)" /&gt;</ph> 메서드 이름이 캐시 된 인코딩이 검색 하려고 <ph id="ph2">&lt;paramref name="name" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>Because of this, if <ph id="ph1">&lt;paramref name="name" /&gt;</ph> is not the name of an encoding that you support, the method should return <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">이 인해 경우 <ph id="ph1">&lt;paramref name="name" /&gt;</ph> 을 지 원하는 메서드를 반환 해야 하는 인코딩 이름이 아닙니다 <ph id="ph2">&lt;see langword="null" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>The only case in which the method should throw an exception is if <ph id="ph1">&lt;paramref name="name" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">메서드는 예외를 throw 해야 하는 유일한 경우는 경우 <ph id="ph1">&lt;paramref name="name" /&gt;</ph> 은 <ph id="ph2">&lt;see langword="null" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>This method is called by the <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.String)" /&gt;</ph> method.</source>
          <target state="translated">이 메서드는 <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.String)" /&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>You should not call it directly from user code.</source>
          <target state="translated">하지 사용자 코드에서 직접 호출 해야 합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>The code page identifier of the requested encoding.</source>
          <target state="translated">요청한 인코딩의 코드 페이지 식별자입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>An object that provides an error-handling procedure when a character cannot be encoded with this encoding.</source>
          <target state="translated">이 인코딩으로 문자를 인코딩할 수 없는 경우 오류 처리 프로시저를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>An object that provides an error-handling procedure when a byte sequence cannot be decoded with this encoding.</source>
          <target state="translated">이 인코딩으로 바이트 시퀀스를 디코딩할 수 없는 경우 오류 처리 프로시저를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Returns the encoding associated with the specified code page identifier.</source>
          <target state="translated">지정한 코드 페이지 식별자와 관련된 인코딩을 반환합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Parameters specify an error handler for characters that cannot be encoded and byte sequences that cannot be decoded.</source>
          <target state="translated">매개 변수는 인코딩할 수 없는 문자 및 디코딩할 수 없는 바이트 시퀀스에 대한 오류 처리기를 지정합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>The encoding that is associated with the specified code page, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph> cannot return a valid encoding that corresponds to <ph id="ph3">&lt;paramref name="codepage" /&gt;</ph>.</source>
          <target state="translated">지정된 코드 페이지와 연결된 인코딩이거나 이 <ph id="ph2">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph>가 <ph id="ph3">&lt;paramref name="codepage" /&gt;</ph>에 해당하는 올바른 인코딩을 반환할 수 없는 경우 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>The <ph id="ph1">`encoderFallback`</ph> and <ph id="ph2">`decoderFallback`</ph> parameters are objects that define the fallback strategy used in the event that an encoder cannot convert a character to a sequence of bytes or a decoder cannot convert a sequence of bytes to a character.</source>
          <target state="translated"><ph id="ph1">`encoderFallback`</ph> 및 <ph id="ph2">`decoderFallback`</ph> 매개 변수는 인코더를 바이트 시퀀스로 문자를 변환할 수 없습니다 또는 디코더는 문자를 바이트 시퀀스로 변환할 수 없습니다는 사용 하는 대체 (fallback) 전략을 정의 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>The .NET Framework provides the following fallback mechanisms:</source>
          <target state="translated">.NET Framework는 다음과 같은 대체 메커니즘을 제공합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Exception fallback.</source>
          <target state="translated">예외 대체 (fallback)입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>If the <ph id="ph1">`encoderFallback`</ph> argument is an instance of <ph id="ph2">&lt;xref:System.Text.EncoderExceptionFallback&gt;</ph>, or the <ph id="ph3">`decoderExceptionFallback`</ph> argument is an instance of <ph id="ph4">&lt;xref:System.Text.DecoderExceptionFallback&gt;</ph>, the encoding method throws an exception if characters cannot be encoded, and the decoding method throws an exception if a byte sequence cannot be decoded.</source>
          <target state="translated">경우는 <ph id="ph1">`encoderFallback`</ph> 인수의 인스턴스가 <ph id="ph2">&lt;xref:System.Text.EncoderExceptionFallback&gt;</ph>, 또는 <ph id="ph3">`decoderExceptionFallback`</ph> 인수의 인스턴스가 <ph id="ph4">&lt;xref:System.Text.DecoderExceptionFallback&gt;</ph>, 인코딩 방법 문자를 인코딩할 수 없는 경우 바이트 디코딩 메서드가 예외를 throw 하는 경우 예외를 throw 시퀀스를 디코딩할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Replacement fallback.</source>
          <target state="translated">교체 대체 (fallback)입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>If the <ph id="ph1">`encoderFallback`</ph> argument is an instance of <ph id="ph2">&lt;xref:System.Text.EncoderReplacementFallback&gt;</ph>, or the <ph id="ph3">`decoderExceptionFallback`</ph> argument is an instance of <ph id="ph4">&lt;xref:System.Text.DecoderReplacementFallback&gt;</ph>, the encoding and decoding methods substitute a replacement string for characters that cannot be encoded and byte sequences cannot be decoded.</source>
          <target state="translated">경우는 <ph id="ph1">`encoderFallback`</ph> 인수의 인스턴스가 <ph id="ph2">&lt;xref:System.Text.EncoderReplacementFallback&gt;</ph>, 또는 <ph id="ph3">`decoderExceptionFallback`</ph> 인수의 인스턴스가 <ph id="ph4">&lt;xref:System.Text.DecoderReplacementFallback&gt;</ph>, 인코딩 및 디코딩 메서드 인코딩할 수 없는 문자에 대 한 대체 문자열로 바꾸는 및 바이트 시퀀스 수 없습니다 디코딩됩니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>If you instantiated the replacement fallback object by calling the default constructor, the replacement character is a "?".</source>
          <target state="translated">대체 문자는 기본 생성자를 호출 하 여 교체 대체 (fallback) 개체를 인스턴스화할 경우는 "?"입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>If you call the <ph id="ph1">&lt;xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Text.DecoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType&gt;</ph> constructor, you can specify the replacement string.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">&lt;xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Text.DecoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType&gt;</ph> 생성자, 대체 문자열을 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Best-fit fallback.</source>
          <target state="translated">최적된 대체 (fallback)입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>You can derive from the <ph id="ph1">&lt;xref:System.Text.EncoderFallback&gt;</ph> or <ph id="ph2">&lt;xref:System.Text.DecoderFallback&gt;</ph> class to implement a best-fit replacement mechanism.</source>
          <target state="translated">파생 될 수는 <ph id="ph1">&lt;xref:System.Text.EncoderFallback&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Text.DecoderFallback&gt;</ph> 최적 맞춤된 대체 메커니즘을 구현 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Because calls to this method use your implementation of the <ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32)" /&gt;</ph> method, you do not have to override it.</source>
          <target state="translated">이 메서드를 호출 구현을 사용 하기 때문에 <ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32)" /&gt;</ph> 메서드를 않아도를 재정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>When user code attempts to retrieve an encoding by calling the <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /&gt;</ph> method, the method passes the <ph id="ph2">&lt;paramref name="codepage" /&gt;</ph> identifier to every registered encoding provider until one returns a valid encoding.</source>
          <target state="translated">사용자 코드를 호출 하 여 인코딩을 검색 하려고 할 때의 <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /&gt;</ph> 메서드, 메서드에 전달는 <ph id="ph2">&lt;paramref name="codepage" /&gt;</ph> 식별자는 올바른 인코딩을 하나 반환 될 때까지 모든 등록 된 인코딩 공급자입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>If none returns a valid encoding, the <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /&gt;</ph> method attempts to retrieve a cached encoding whose code page identifier is <ph id="ph2">&lt;paramref name="codepage" /&gt;</ph>.</source>
          <target state="translated">올바른 인코딩을 none을 반환 하는 경우는 <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /&gt;</ph> 메서드는 코드 페이지 식별자가 캐시 된 인코딩이 검색 하려고 <ph id="ph2">&lt;paramref name="codepage" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Because of this, if you do choose to override the <ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /&gt;</ph> method, your override should return <ph id="ph2">&lt;see langword="null" /&gt;</ph> if <ph id="ph3">&lt;paramref name="codepage" /&gt;</ph> is not the code page identifier of an encoding that you support; it should never throw an exception.</source>
          <target state="translated">이 인해 재정의 하도록 선택 하는 경우는 <ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /&gt;</ph> 메서드를 재정의 반환 하도록 <ph id="ph2">&lt;see langword="null" /&gt;</ph> 경우 <ph id="ph3">&lt;paramref name="codepage" /&gt;</ph> 인코딩을의 코드 페이지 식별자가 아닙니다 지 원하는 않으면 예외를 throw 하지 해야 합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>This method is called by the <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /&gt;</ph> method.</source>
          <target state="translated">이 메서드는 <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>You should not call it directly from user code.</source>
          <target state="translated">하지 사용자 코드에서 직접 호출 해야 합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>The name of the preferred encoding.</source>
          <target state="translated">기본 설정 인코딩의 이름입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>An object that provides an error-handling procedure when a character cannot be encoded with this encoding.</source>
          <target state="translated">이 인코딩으로 문자를 인코딩할 수 없는 경우 오류 처리 프로시저를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>An object that provides an error-handling procedure when a byte sequence cannot be decoded with the current encoding.</source>
          <target state="translated">현재 인코딩으로 바이트 시퀀스를 디코딩할 수 없는 경우 오류 처리 프로시저를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Returns the encoding associated with the specified name.</source>
          <target state="translated">지정한 이름과 연결된 인코딩을 반환합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Parameters specify an error handler for characters that cannot be encoded and byte sequences that cannot be decoded.</source>
          <target state="translated">매개 변수는 인코딩할 수 없는 문자 및 디코딩할 수 없는 바이트 시퀀스에 대한 오류 처리기를 지정합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>The encoding that is associated with the specified name, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph> cannot return a valid encoding that corresponds to <ph id="ph3">&lt;paramref name="name" /&gt;</ph>.</source>
          <target state="translated">지정된 이름과 연결된 인코딩이거나 이 <ph id="ph2">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph>가 <ph id="ph3">&lt;paramref name="name" /&gt;</ph>에 해당하는 올바른 인코딩을 반환할 수 없는 경우 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>The <ph id="ph1">`encoderFallback`</ph> and <ph id="ph2">`decoderFallback`</ph> parameters are objects that define the fallback strategy used in the event that an encoder cannot convert a character to a sequence of bytes or a decoder cannot convert a sequence of bytes to a character.</source>
          <target state="translated"><ph id="ph1">`encoderFallback`</ph> 및 <ph id="ph2">`decoderFallback`</ph> 매개 변수는 인코더를 바이트 시퀀스로 문자를 변환할 수 없습니다 또는 디코더는 문자를 바이트 시퀀스로 변환할 수 없습니다는 사용 하는 대체 (fallback) 전략을 정의 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>The .NET Framework provides the following fallback mechanisms:</source>
          <target state="translated">.NET Framework는 다음과 같은 대체 메커니즘을 제공합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Exception fallback.</source>
          <target state="translated">예외 대체 (fallback)입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>If the <ph id="ph1">`encoderFallback`</ph> argument is an instance of <ph id="ph2">&lt;xref:System.Text.EncoderExceptionFallback&gt;</ph>, or the <ph id="ph3">`decoderExceptionFallback`</ph> argument is an instance of <ph id="ph4">&lt;xref:System.Text.DecoderExceptionFallback&gt;</ph>, the encoding method throws an exception if characters cannot be encoded, and the decoding method throws an exception if a byte sequence cannot be decoded.</source>
          <target state="translated">경우는 <ph id="ph1">`encoderFallback`</ph> 인수의 인스턴스가 <ph id="ph2">&lt;xref:System.Text.EncoderExceptionFallback&gt;</ph>, 또는 <ph id="ph3">`decoderExceptionFallback`</ph> 인수의 인스턴스가 <ph id="ph4">&lt;xref:System.Text.DecoderExceptionFallback&gt;</ph>, 인코딩 방법 문자를 인코딩할 수 없는 경우 바이트 디코딩 메서드가 예외를 throw 하는 경우 예외를 throw 시퀀스를 디코딩할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Replacement fallback.</source>
          <target state="translated">교체 대체 (fallback)입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>If the <ph id="ph1">`encoderFallback`</ph> argument is an instance of <ph id="ph2">&lt;xref:System.Text.EncoderReplacementFallback&gt;</ph>, or the <ph id="ph3">`decoderExceptionFallback`</ph> argument is an instance of <ph id="ph4">&lt;xref:System.Text.DecoderReplacementFallback&gt;</ph>, the encoding and decoding methods substitute a replacement string for characters that cannot be encoded and byte sequences cannot be decoded.</source>
          <target state="translated">경우는 <ph id="ph1">`encoderFallback`</ph> 인수의 인스턴스가 <ph id="ph2">&lt;xref:System.Text.EncoderReplacementFallback&gt;</ph>, 또는 <ph id="ph3">`decoderExceptionFallback`</ph> 인수의 인스턴스가 <ph id="ph4">&lt;xref:System.Text.DecoderReplacementFallback&gt;</ph>, 인코딩 및 디코딩 메서드 인코딩할 수 없는 문자에 대 한 대체 문자열로 바꾸는 및 바이트 시퀀스 수 없습니다 디코딩됩니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>If you instantiated the replacement fallback object by calling the default constructor, the replacement character is a "?".</source>
          <target state="translated">대체 문자는 기본 생성자를 호출 하 여 교체 대체 (fallback) 개체를 인스턴스화할 경우는 "?"입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>If you call the <ph id="ph1">&lt;xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Text.DecoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType&gt;</ph> constructor, you can specify the replacement string.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">&lt;xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Text.DecoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType&gt;</ph> 생성자, 대체 문자열을 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Best-fit fallback.</source>
          <target state="translated">최적된 대체 (fallback)입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>You can derive from the <ph id="ph1">&lt;xref:System.Text.EncoderFallback&gt;</ph> or <ph id="ph2">&lt;xref:System.Text.DecoderFallback&gt;</ph> class to implement a best-fit replacement mechanism.</source>
          <target state="translated">파생 될 수는 <ph id="ph1">&lt;xref:System.Text.EncoderFallback&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Text.DecoderFallback&gt;</ph> 최적 맞춤된 대체 메커니즘을 구현 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Because calls to this method use your implementation of the <ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.String)" /&gt;</ph> method, you do not have to override it.</source>
          <target state="translated">이 메서드를 호출 구현을 사용 하기 때문에 <ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.String)" /&gt;</ph> 메서드를 않아도를 재정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>When user code attempts to retrieve an encoding by calling the <ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" /&gt;</ph> method, the method passes the <ph id="ph2">&lt;paramref name="codepage" /&gt;</ph> identifier to every registered encoding provider until one returns a valid encoding.</source>
          <target state="translated">사용자 코드를 호출 하 여 인코딩을 검색 하려고 할 때의 <ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" /&gt;</ph> 메서드, 메서드에 전달는 <ph id="ph2">&lt;paramref name="codepage" /&gt;</ph> 식별자는 올바른 인코딩을 하나 반환 될 때까지 모든 등록 된 인코딩 공급자입니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>If none returns a valid encoding, the <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /&gt;</ph> method attempts to retrieve a cached encoding whose code page identifier is <ph id="ph2">&lt;paramref name="codepage" /&gt;</ph>.</source>
          <target state="translated">올바른 인코딩을 none을 반환 하는 경우는 <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /&gt;</ph> 메서드는 코드 페이지 식별자가 캐시 된 인코딩이 검색 하려고 <ph id="ph2">&lt;paramref name="codepage" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Because of this, if you do choose to override the <ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /&gt;</ph> method, your override should return <ph id="ph2">&lt;see langword="null" /&gt;</ph> if <ph id="ph3">&lt;paramref name="codepage" /&gt;</ph> is not the code page identifier of an encoding that you support; it should never throw an exception.</source>
          <target state="translated">이 인해 재정의 하도록 선택 하는 경우는 <ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /&gt;</ph> 메서드를 재정의 반환 하도록 <ph id="ph2">&lt;see langword="null" /&gt;</ph> 경우 <ph id="ph3">&lt;paramref name="codepage" /&gt;</ph> 인코딩을의 코드 페이지 식별자가 아닙니다 지 원하는 않으면 예외를 throw 하지 해야 합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>This method is called by the <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" /&gt;</ph> method.</source>
          <target state="translated">이 메서드는 <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" /&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>You should not call it directly from user code.</source>
          <target state="translated">하지 사용자 코드에서 직접 호출 해야 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>