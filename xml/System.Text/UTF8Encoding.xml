<Type Name="UTF8Encoding" FullName="System.Text.UTF8Encoding">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c200a67bc75e1bfe3c6bbe71ec68fec34b1455fc" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30531447" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class UTF8Encoding : System.Text.Encoding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit UTF8Encoding extends System.Text.Encoding" />
  <TypeSignature Language="DocId" Value="T:System.Text.UTF8Encoding" />
  <TypeSignature Language="VB.NET" Value="Public Class UTF8Encoding&#xA;Inherits Encoding" />
  <TypeSignature Language="C++ CLI" Value="public ref class UTF8Encoding : System::Text::Encoding" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.Encoding</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="6f059-101">유니코드 문자의 UTF-8 인코딩을 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6f059-101">Represents a UTF-8 encoding of Unicode characters.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f059-102">인코딩은 유니코드 문자 집합을 바이트 시퀀스로 변환하는 프로세스입니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-102">Encoding is the process of transforming a set of Unicode characters into a sequence of bytes.</span></span> <span data-ttu-id="6f059-103">디코딩은 유니코드 문자 집합으로 인코딩된 바이트 시퀀스로 변형 프로세스입니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-103">Decoding is the process of transforming a sequence of encoded bytes into a set of Unicode characters.</span></span>  
  
 <span data-ttu-id="6f059-104">U t F-8은 유니코드 인코딩인는 1-4 바이트의 시퀀스로 각 코드 포인트를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-104">UTF-8 is a Unicode encoding that represents each code point as a sequence of one to four bytes.</span></span> <span data-ttu-id="6f059-105">달리 utf-16 및 utf-32 인코딩을 u t F-8 인코딩 필요 하지 않습니다 "엔디안 (endianness)"; 인코딩 체계를는 프로세서 big endian 또는 little endian 인지에 관계 없이 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-105">Unlike the UTF-16 and UTF-32 encodings, the UTF-8 encoding does not require "endianness"; the encoding scheme is the same regardless of whether the processor is big-endian or little-endian.</span></span> <span data-ttu-id="6f059-106"><xref:System.Text.UTF8Encoding> Windows 코드 페이지 65001에 해당합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-106"><xref:System.Text.UTF8Encoding> corresponds to the Windows code page 65001.</span></span> <span data-ttu-id="6f059-107">Utf 및에서 지 원하는 다른 인코딩에 대 한 자세한 내용은 <xref:System.Text>, 참조 [.NET Framework의 문자 인코딩](~/docs/standard/base-types/character-encoding.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-107">For more information about the UTFs and other encodings supported by <xref:System.Text>, see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md).</span></span>  
  
 <span data-ttu-id="6f059-108">인스턴스화할 수 있습니다는 <xref:System.Text.UTF8Encoding> 에서 다양 한 방법으로 하는지 여부를 제공 하려는 바이트 순서 표시 (BOM) 및 오류 검색을 사용 하도록 설정 하려는 여부에 따라 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-108">You can instantiate a <xref:System.Text.UTF8Encoding> object in a number of ways, depending on whether you want to it to provide a byte order mark (BOM) and whether you want to enable error detection.</span></span> <span data-ttu-id="6f059-109">다음 표에서 생성자를 나열 및 <xref:System.Text.Encoding> 속성을 반환 하는 한 <xref:System.Text.UTF8Encoding> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-109">The following table lists the constructors and the <xref:System.Text.Encoding> property that return a <xref:System.Text.UTF8Encoding> object.</span></span>  
  
|<span data-ttu-id="6f059-110">멤버</span><span class="sxs-lookup"><span data-stu-id="6f059-110">Member</span></span>|<span data-ttu-id="6f059-111">BOM</span><span class="sxs-lookup"><span data-stu-id="6f059-111">BOM</span></span>|<span data-ttu-id="6f059-112">오류 검색</span><span class="sxs-lookup"><span data-stu-id="6f059-112">Error detection</span></span>|  
|------------|---------|---------------------|  
|<xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType>|<span data-ttu-id="6f059-113">예</span><span class="sxs-lookup"><span data-stu-id="6f059-113">Yes</span></span>|<span data-ttu-id="6f059-114">없음 (교체 대체)</span><span class="sxs-lookup"><span data-stu-id="6f059-114">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UTF8Encoding.%23ctor?displayProperty=nameWithType>|<span data-ttu-id="6f059-115">아니요</span><span class="sxs-lookup"><span data-stu-id="6f059-115">No</span></span>|<span data-ttu-id="6f059-116">없음 (교체 대체)</span><span class="sxs-lookup"><span data-stu-id="6f059-116">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%29?displayProperty=nameWithType>|<span data-ttu-id="6f059-117">구성 가능 여부</span><span class="sxs-lookup"><span data-stu-id="6f059-117">Configurable</span></span>|<span data-ttu-id="6f059-118">없음 (교체 대체)</span><span class="sxs-lookup"><span data-stu-id="6f059-118">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType>|<span data-ttu-id="6f059-119">구성 가능 여부</span><span class="sxs-lookup"><span data-stu-id="6f059-119">Configurable</span></span>|<span data-ttu-id="6f059-120">구성 가능 여부</span><span class="sxs-lookup"><span data-stu-id="6f059-120">Configurable</span></span>|  
  
 <span data-ttu-id="6f059-121"><xref:System.Text.UTF8Encoding.GetByteCount%2A> 메서드는 유니코드 문자 집합을 인코딩할 될 바이트 수를 확인 및 <xref:System.Text.UTF8Encoding.GetBytes%2A> 메서드에서는 실제 인코딩을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-121">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.UTF8Encoding.GetBytes%2A> method performs the actual encoding.</span></span>  
  
 <span data-ttu-id="6f059-122">마찬가지로,는 <xref:System.Text.UTF8Encoding.GetCharCount%2A> 메서드 디코딩될, 바이트의 시퀀스의 문자 수를 확인 및 <xref:System.Text.UTF8Encoding.GetChars%2A> 및 <xref:System.Text.UTF8Encoding.GetString%2A> 메서드는 실제 디코딩을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-122">Likewise, the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.UTF8Encoding.GetChars%2A> and <xref:System.Text.UTF8Encoding.GetString%2A> methods perform the actual decoding.</span></span>  
  
 <span data-ttu-id="6f059-123">인코더 또는 디코더에 인코딩 또는 디코딩 데이터 (예: 1 백만 문자의 인코딩된 문자열로 100, 000 문자 세그먼트에) 여러 개의 블록에 걸쳐 있는 경우에 상태 정보 저장을 사용 하 여 수에 대 한는 <xref:System.Text.UTF8Encoding.GetEncoder%2A> 및 <xref:System.Text.UTF8Encoding.GetDecoder%2A> 속성 각각.</span><span class="sxs-lookup"><span data-stu-id="6f059-123">For an encoder or decoder that is able to save state information when encoding or decoding data that spans multiple blocks (such as string of 1 million characters that is encoded in 100,000-character segments), use the <xref:System.Text.UTF8Encoding.GetEncoder%2A> and <xref:System.Text.UTF8Encoding.GetDecoder%2A> properties, respectively.</span></span>  
  
 <span data-ttu-id="6f059-124">필요에 따라는 <xref:System.Text.UTF8Encoding> 개체 수 맨 앞의 인코딩 프로세스의 결과로 생성 되는 바이트 스트림 시작 부분에 있는 바이트 배열이 바이트 순서 표시 (BOM)를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-124">Optionally, the <xref:System.Text.UTF8Encoding> object provides a byte order mark (BOM), which is an array of bytes that can be prefixed to the beginning of the byte stream that results from the encoding process.</span></span> <span data-ttu-id="6f059-125">바이트 순서 표시 (BOM)를 u t F-8로 인코딩된 바이트 스트림으로 앞, 디코더에서 바이트 순서 및 변환 형식 또는 u t F를 결정 하는 데 도움이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-125">If a UTF-8 encoded byte stream is prefaced with a byte order mark (BOM), it helps the decoder determine the byte order and the transformation format or UTF.</span></span> <span data-ttu-id="6f059-126">그러나 유니코드 표준도 필요 하거나 권장 u t F-8에서 BOM 인코딩된 스트림을 note 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-126">Note, however, that the Unicode Standard neither requires nor recommends a BOM in UTF-8 encoded streams.</span></span> <span data-ttu-id="6f059-127">바이트 순서 및 바이트 순서 표시에 대 한 자세한 내용은 유니코드 표준을 참조는 [유니코드 홈페이지](http://go.microsoft.com/fwlink/?LinkId=37123)합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-127">For more information on byte order and the byte order mark, see The Unicode Standard at the [Unicode home page](http://go.microsoft.com/fwlink/?LinkId=37123).</span></span>  
  
 <span data-ttu-id="6f059-128">인코더는 BOM을 제공 하도록 구성 된, 하는 경우 호출 하 여 검색할 수 있습니다는 <xref:System.Text.UTF8Encoding.GetPreamble%2A> 메서드가 메서드는 빈 배열을 반환 하는 그렇지 않은 경우.</span><span class="sxs-lookup"><span data-stu-id="6f059-128">If the encoder is configured to provide a BOM, you can retrieve it by calling the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method; otherwise, the method returns an empty array.</span></span> <span data-ttu-id="6f059-129">인 경우에는 <xref:System.Text.UTF8Encoding> 개체가 BOM 지원에 대해 구성 된, 적절 한;로 인코딩된 바이트 스트림의 시작 부분에 BOM을 포함 해야의 인코딩 메서드는 <xref:System.Text.UTF8Encoding> 클래스 이렇게 하지 않으면 자동으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-129">Note that, even if a <xref:System.Text.UTF8Encoding> object is configured for BOM support, you must include the BOM at the beginning of the encoded byte stream as appropriate; the encoding methods of the <xref:System.Text.UTF8Encoding> class do not do this automatically.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6f059-130">오류 검색을 활성화 하 고 클래스 인스턴스를 더욱 안전 하 게 호출 해야는 <xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%29> 집합과, 생성자는 `throwOnInvalidBytes` 매개 변수를 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-130">To enable error detection and to make the class instance more secure, you should call the <xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%29> constructor and set the `throwOnInvalidBytes` parameter to `true`.</span></span> <span data-ttu-id="6f059-131">오류 검색 기능을 사용 하도록 설정, 문자 또는 바이트에 잘못 된 시퀀스를 검색 하는 메서드가 throw는 <xref:System.ArgumentException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-131">With error detection enabled, a method that detects an invalid sequence of characters or bytes throws an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="6f059-132">오류 검색 없이 예외가 throw 되지 하 고 잘못 된 시퀀스는 일반적으로 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-132">Without error detection, no exception is thrown, and the invalid sequence is generally ignored.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6f059-133">개체가 직렬화 되 고 서로 다른.NET Framework 버전을 사용 하 여 역직렬화 하는 경우에 u t F-8로 인코딩된 개체의 상태 유지 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-133">The state of a UTF-8 encoded object is not preserved if the object is serialized and deserialized using different .NET Framework versions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6f059-134">다음 예제에서는 <xref:System.Text.UTF8Encoding> 를 유니코드 문자의 문자열을 인코딩하고 바이트 배열에 저장할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-134">The following example uses a <xref:System.Text.UTF8Encoding> object to encode a string of Unicode characters and store them in a byte array.</span></span> <span data-ttu-id="6f059-135">유니코드 문자열에는 Pi (U + 03A0) 및 시그마 (U + 03A3), ASCII 문자 범위 외부에 있는 두 개의 문자를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-135">The Unicode string includes two characters, Pi (U+03A0) and Sigma (U+03A3), that are outside the ASCII character range.</span></span> <span data-ttu-id="6f059-136">인코딩된 바이트 배열을 문자열로 다시을 디코딩할 때에 Pi / 시그마 문자는 여전히 존재 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-136">When the encoded byte array is decoded back to a string, the Pi and Sigma characters are still present.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding Example/CPP/snippet.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding Example/CS/snippet.cs#1)]
 [!code-vb[System.Text.UTF8Encoding Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding Example/VB/snippet.vb#1)]  
  
 <span data-ttu-id="6f059-137">다음 예제에서는 인코딩된 바이트를 파일에 기록 하 고 바이트 순서 표시 (BOM)를 사용 하 여 바이트 스트림을 앞에 추가 된다는 앞의 예제와 같은 문자열을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-137">The following example uses the same string as the previous example, except that it writes the encoded bytes to a file and prefixes the byte stream with a byte order mark (BOM).</span></span> <span data-ttu-id="6f059-138">그런 다음 두 가지 방법으로 파일을 읽어:를 사용 하 여 텍스트 파일로 <xref:System.IO.StreamReader> 개체 및 이진 파일로 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-138">It then reads the file in two different ways: as a text file by using a <xref:System.IO.StreamReader> object; and as a binary file.</span></span> <span data-ttu-id="6f059-139">와 마찬가지로, 두 경우 모두 BOM ´ â 새로 읽기 문자열 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-139">As you would expect, in neither case is the BOM included in the newly read string.</span></span>  
  
 [!code-csharp[System.Text.UTF8Encoding Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding Example/CS/bom1.cs#2)]
 [!code-vb[System.Text.UTF8Encoding Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding Example/VB/bom1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.Decoder" />
    <altmember cref="T:System.Text.Encoder" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6f059-140">
            <see cref="T:System.Text.UTF8Encoding" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-140">Initializes a new instance of the <see cref="T:System.Text.UTF8Encoding" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UTF8Encoding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UTF8Encoding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6f059-141">
            <see cref="T:System.Text.UTF8Encoding" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-141">Initializes a new instance of the <see cref="T:System.Text.UTF8Encoding" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f059-142">이 생성자는 유니코드 바이트 순서 표시를 제공 하지 않으며 잘못 된 인코딩이 검색 되었을 때 예외를 throw 하지 않는 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-142">This constructor creates an instance that does not provide a Unicode byte order mark and does not throw an exception when an invalid encoding is detected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6f059-143">보안상의 이유로 사용 하는 생성자를 호출 하 여 오류 검색을 사용 하는 권장는 `throwOnInvalidBytes` 매개 변수 및 해당 값을 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-143">For security reasons, we recommend that you enable error detection by calling a constructor with a `throwOnInvalidBytes` parameter and setting its value to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6f059-144">다음 예제에서는 새 <xref:System.Text.UTF8Encoding> 인스턴스 및 해당 이름이 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-144">The following example creates a new <xref:System.Text.UTF8Encoding> instance and displays its name.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.ctor1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor1 Example/CPP/ctor.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.ctor1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor1 Example/CS/ctor.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.ctor1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor1 Example/VB/ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UTF8Encoding.GetPreamble" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UTF8Encoding (bool encoderShouldEmitUTF8Identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool encoderShouldEmitUTF8Identifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (encoderShouldEmitUTF8Identifier As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UTF8Encoding(bool encoderShouldEmitUTF8Identifier);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoderShouldEmitUTF8Identifier" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="encoderShouldEmitUTF8Identifier">
          <span data-ttu-id="6f059-145">
            <see cref="M:System.Text.UTF8Encoding.GetPreamble" /> 메서드를 통해 유니코드 바이트 순서 표시를 반환하도록 지정하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-145">
              <see langword="true" /> to specify that the <see cref="M:System.Text.UTF8Encoding.GetPreamble" /> method returns a Unicode byte order mark; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6f059-146">
            <see cref="T:System.Text.UTF8Encoding" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-146">Initializes a new instance of the <see cref="T:System.Text.UTF8Encoding" /> class.</span>
          </span>
          <span data-ttu-id="6f059-147">매개 변수는 유니코드 바이트 순서 표시를 제공할지 여부를 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-147">A parameter specifies whether to provide a Unicode byte order mark.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f059-148">이 생성자는 잘못 된 인코딩이 검색 되었을 때 예외를 throw 하지 않는 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-148">This constructor creates an instance that does not throw an exception when an invalid encoding is detected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6f059-149">포함 하는 생성자를 호출 하 여 오류 검색 사용 해야 하는 보안상의 이유로 `throwOnInvalidBytes` 매개 변수 및 해당 값을 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-149">For security reasons, you should enable error detection by calling a constructor that includes a `throwOnInvalidBytes` parameter and setting its value to `true`.</span></span>  
  
 <span data-ttu-id="6f059-150">`encoderShouldEmitUTF8Identifier` 의 작동을 제어 하는 매개 변수는 <xref:System.Text.UTF8Encoding.GetPreamble%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6f059-150">The `encoderShouldEmitUTF8Identifier` parameter controls the operation of the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method.</span></span> <span data-ttu-id="6f059-151">경우 `true`, 메서드 u t F-8 형식으로 유니코드 바이트 순서 표시 (BOM)를 포함 하는 바이트 배열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-151">If `true`, the method returns a byte array containing the Unicode byte order mark (BOM) in UTF-8 format.</span></span>  <span data-ttu-id="6f059-152">경우 `false`, 길이가 0 인 바이트 배열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-152">If `false`, it returns a zero-length byte array.</span></span> <span data-ttu-id="6f059-153">그러나 설정 `encoderShouldEmitUTF8Identifier` 를 `true` 발생 하지 않습니다는 <xref:System.Text.UTF8Encoding.GetBytes%2A> 바이트 배열의 시작 부분에 BOM을 접두사를 지정 하는 메서드도 않습니다는 <xref:System.Text.UTF8Encoding.GetByteCount%2A> 메서드 바이트 수에 BOM에 바이트 수를 포함 하도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-153">However, setting `encoderShouldEmitUTF8Identifier` to `true` does not cause the <xref:System.Text.UTF8Encoding.GetBytes%2A> method to prefix the BOM at the beginning of the byte array, nor does it cause the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method to include the number of bytes in the BOM in the byte count.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6f059-154">다음 예제에서는 새 <xref:System.Text.UTF8Encoding> 인스턴스를 지정 하 여 유니코드 바이트 순서 표시 접두사를 내보내도록는 <xref:System.Text.UTF8Encoding.GetPreamble%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6f059-154">The following example creates a new <xref:System.Text.UTF8Encoding> instance and specifies that a Unicode byte order mark prefix should be emitted by the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method.</span></span> <span data-ttu-id="6f059-155"><xref:System.Text.UTF8Encoding.GetPreamble%2A> 메서드 다음 유니코드 바이트 순서 표시 접두사를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-155">The <xref:System.Text.UTF8Encoding.GetPreamble%2A> method then returns the Unicode byte order mark prefix.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.ctor2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor2 Example/CPP/ctor-boolean.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.ctor2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor2 Example/CS/ctor-boolean.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.ctor2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor2 Example/VB/ctor-boolean.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UTF8Encoding.GetPreamble" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UTF8Encoding (bool encoderShouldEmitUTF8Identifier, bool throwOnInvalidBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool encoderShouldEmitUTF8Identifier, bool throwOnInvalidBytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.#ctor(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (encoderShouldEmitUTF8Identifier As Boolean, throwOnInvalidBytes As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UTF8Encoding(bool encoderShouldEmitUTF8Identifier, bool throwOnInvalidBytes);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoderShouldEmitUTF8Identifier" Type="System.Boolean" />
        <Parameter Name="throwOnInvalidBytes" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="encoderShouldEmitUTF8Identifier">
          <span data-ttu-id="6f059-156">
            <see cref="M:System.Text.UTF8Encoding.GetPreamble" /> 메서드를 통해 유니코드 바이트 순서 표시를 반환하도록 지정하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-156">
              <see langword="true" /> to specify that the <see cref="M:System.Text.UTF8Encoding.GetPreamble" /> method should return a Unicode byte order mark; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="throwOnInvalidBytes">
          <span data-ttu-id="6f059-157">잘못된 인코딩이 검색되었을 때 예외를 발생시키려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-157">
              <see langword="true" /> to throw an exception when an invalid encoding is detected; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6f059-158">
            <see cref="T:System.Text.UTF8Encoding" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-158">Initializes a new instance of the <see cref="T:System.Text.UTF8Encoding" /> class.</span>
          </span>
          <span data-ttu-id="6f059-159">매개 변수를 사용하여 유니코드 바이트 순서 표시를 제공할지 여부와 잘못된 인코딩이 검색되었을 때 예외를 발생시킬지 여부를 지정할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-159">Parameters specify whether to provide a Unicode byte order mark and whether to throw an exception when an invalid encoding is detected.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f059-160">`encoderShouldEmitUTF8Identifier` 의 작동을 제어 하는 매개 변수는 <xref:System.Text.UTF8Encoding.GetPreamble%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6f059-160">The `encoderShouldEmitUTF8Identifier` parameter controls the operation of the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method.</span></span> <span data-ttu-id="6f059-161">경우 `true`, 메서드 u t F-8 형식으로 유니코드 바이트 순서 표시 (BOM)를 포함 하는 바이트 배열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-161">If `true`, the method returns a byte array containing the Unicode byte order mark (BOM) in UTF-8 format.</span></span>  <span data-ttu-id="6f059-162">경우 `false`, 길이가 0 인 바이트 배열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-162">If `false`, it returns a zero-length byte array.</span></span> <span data-ttu-id="6f059-163">그러나 설정 `encoderShouldEmitUTF8Identifier` 를 `true` 발생 하지 않습니다는 <xref:System.Text.UTF8Encoding.GetBytes%2A> 바이트 배열의 시작 부분에 BOM을 접두사를 지정 하는 메서드도 않습니다는 <xref:System.Text.UTF8Encoding.GetByteCount%2A> 메서드 바이트 수에 BOM에 바이트 수를 포함 하도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-163">However, setting `encoderShouldEmitUTF8Identifier` to `true` does not cause the <xref:System.Text.UTF8Encoding.GetBytes%2A> method to prefix the BOM at the beginning of the byte array, nor does it cause the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method to include the number of bytes in the BOM in the byte count.</span></span>  
  
 <span data-ttu-id="6f059-164">경우 `throwOnInvalidBytes` 은 `true`, 잘못 된 바이트 시퀀스를 검색 하는 메서드가 throw는 <xref:System.ArgumentException?displayProperty=nameWithType> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-164">If `throwOnInvalidBytes` is `true`, a method that detects an invalid byte sequence throws an <xref:System.ArgumentException?displayProperty=nameWithType> exception.</span></span> <span data-ttu-id="6f059-165">그렇지 않으면 메서드는 예외를 throw 하지 않는 하 고 잘못 된 시퀀스가 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-165">Otherwise, the method does not throw an exception, and the invalid sequence is ignored.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6f059-166">포함 하는 생성자를 호출 하 여 오류 검색 사용 해야 하는 보안상의 이유로 `throwOnInvalidBytes` 매개 변수 및 해당 매개 변수를 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-166">For security reasons, you should enable error detection by calling a constructor that includes a `throwOnInvalidBytes` parameter and setting that parameter to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6f059-167">다음 예제에서는 새 <xref:System.Text.UTF8Encoding> 인스턴스를 지정 하는 <xref:System.Text.UTF8Encoding.GetPreamble%2A> 메서드는 유니코드 바이트 순서 표시 접두사를 생성 하지 않도록 잘못 된 인코딩이 검색 되었을 때 예외를 throw 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-167">The following example creates a new <xref:System.Text.UTF8Encoding> instance, specifying that the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method should not emit a Unicode byte order mark prefix, and an exception should be thrown when an invalid encoding is detected.</span></span> <span data-ttu-id="6f059-168">이 생성자의 동작은 기본 비교할 <xref:System.Text.UTF8Encoding.%23ctor> 생성자를 잘못 된 인코딩이 검색 되었을 때 예외를 throw 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-168">The behavior of this constructor is compared to the default <xref:System.Text.UTF8Encoding.%23ctor> constructor, which does not throw an exception when an invalid encoding is detected.</span></span> <span data-ttu-id="6f059-169">두 <xref:System.Text.UTF8Encoding> 인스턴스 잘못 된 문자 시퀀스는 행에 두 명의 높은 서로게이트가 (U + D801 및 U + D802)를 포함 하는 문자 배열을 인코딩할; 상위 서로게이트 항상 뒤에 야 하위 서로게이트입니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-169">The two <xref:System.Text.UTF8Encoding> instances encode a character array that contains two high surrogates (U+D801 and U+D802) in a row, which is an invalid character sequence; a high surrogate should always be followed by a low surrogate.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.ctor3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor3 Example/CPP/ctor-boolean-boolean.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.ctor3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor3 Example/CS/ctor-boolean-boolean.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.ctor3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor3 Example/VB/ctor-boolean-boolean.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UTF8Encoding.GetPreamble" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="6f059-170">현재 인스턴스와 비교할 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-170">The object to compare with the current instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6f059-171">지정한 개체와 현재 <see cref="T:System.Text.UTF8Encoding" /> 개체가 같은지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-171">Determines whether the specified object is equal to the current <see cref="T:System.Text.UTF8Encoding" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6f059-172">
            <paramref name="value" />가 <see cref="T:System.Text.UTF8Encoding" /> 인스턴스이고 현재 개체와 같으면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-172">
              <see langword="true" /> if <paramref name="value" /> is an instance of <see cref="T:System.Text.UTF8Encoding" /> and is equal to the current object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f059-173">두 개의 <xref:System.Text.UTF8Encoding> 개체가 다음 조건을 모두 만족 하면 같은 개체로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-173">Two <xref:System.Text.UTF8Encoding> objects are considered equal if all of the following conditions are true:</span></span>  
  
-   <span data-ttu-id="6f059-174">두 개체, 바이트 순서 표시를 제공 하거나 둘 다는 그렇지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-174">Both objects provide the byte order mark, or both do not.</span></span>  
  
-   <span data-ttu-id="6f059-175">두 개체가 동일한 인코더 대체 (fallback)를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-175">Both objects use the same encoder fallback.</span></span>  
  
-   <span data-ttu-id="6f059-176">두 개체가 동일한 디코더 대체 (fallback)를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-176">Both objects use the same decoder fallback.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6f059-177">다음 예제에서는 <xref:System.Text.UTF8Encoding.Equals%2A> 메서드를 테스트 하는지 여부를 현재 <xref:System.Text.UTF8Encoding> 다른 개체가 같은지 <xref:System.Text.UTF8Encoding> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-177">The following example uses the <xref:System.Text.UTF8Encoding.Equals%2A> method to test whether the current <xref:System.Text.UTF8Encoding> object is equal to a different <xref:System.Text.UTF8Encoding> object.</span></span> <span data-ttu-id="6f059-178">4 개의 <xref:System.Text.UTF8Encoding> 개체가 생성 되 고 비교 하 고 비교 결과 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-178">Four <xref:System.Text.UTF8Encoding> objects are created and compared and the results of the comparisons are displayed.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.Equals Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.Equals Example/CPP/equals-object.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.Equals Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.Equals Example/CS/equals-object.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.Equals Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.Equals Example/VB/equals-object.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UTF8Encoding.#ctor" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetByteCount">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6f059-179">문자 집합을 인코딩할 경우 생성되는 바이트 수를 계산합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-179">Calculates the number of bytes produced by encoding a set of characters.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (string chars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(string chars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetByteCount(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByteCount (chars As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(System::String ^ chars);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="6f059-180">인코딩할 문자 집합이 포함된 <see cref="T:System.String" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-180">The <see cref="T:System.String" /> containing the set of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6f059-181">지정된 <see cref="T:System.String" />의 문자를 인코딩하여 생성된 바이트 수를 계산합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-181">Calculates the number of bytes produced by encoding the characters in the specified <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6f059-182">지정한 문자를 인코딩할 경우 생성되는 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-182">The number of bytes produced by encoding the specified characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f059-183">필요한 정확한 배열 크기를 계산 하려면 <xref:System.Text.UTF8Encoding.GetBytes%2A> 호출 결과 바이트를 저장 하기 위해는 <xref:System.Text.UTF8Encoding.GetByteCount%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6f059-183">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="6f059-184">최대 배열 크기를 계산 하려면 호출는 <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6f059-184">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="6f059-185"><xref:System.Text.UTF8Encoding.GetByteCount%2A> 메서드는 일반적으로 적은 메모리를 할당 하는 동안는 <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> 메서드는 일반적으로 더 빠르게 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-185">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="6f059-186">오류 검색 기능을 잘못 된 시퀀스가이 메서드가 throw 하는 <xref:System.ArgumentException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-186">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="6f059-187">오류 검색 없이 잘못 된 시퀀스는 무시 되 고 예외가 throw 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-187">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="6f059-188">스트림 또는 파일로 저장 되 면 인코딩된 바이트는 제대로 디코딩을 보장 하려면 프리앰블을 사용 하 여 인코딩된 바이트 스트림을 접두사로 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-188">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="6f059-189">바이트 스트림으로 맨 앞에 프리앰블 삽입 (같은 일련의 파일에 쓸 바이트의 시작 부분에) 개발자의 책임 이며 머리말의 바이트 수에서 반환 된 값에 반영 되지는 <xref:System.Text.UTF8Encoding.GetByteCount%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6f059-189">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble is not reflected in the value returned by the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6f059-190">다음 예제에서는 <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> 및 <xref:System.Text.UTF8Encoding.GetByteCount%28System.String%29> 최대값 및 실제 문자열 인코딩하는 데 필요한 바이트 수를 계산 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="6f059-190">The following example calls the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> and <xref:System.Text.UTF8Encoding.GetByteCount%28System.String%29> methods to calculate the maximum and actual number of bytes required to encode a string.</span></span> <span data-ttu-id="6f059-191">또한 실제 바이트 순서 표시가 포함 된 바이트 스트림을 저장 하는 데 필요한 바이트 수가 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-191">It also displays the actual number of bytes required to store a byte stream with a byte order mark.</span></span>  
  
 [!code-csharp[System.Text.UTF8Encoding.GetByteCount#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf8encoding.getbytecount/cs/getbytecount1.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetByteCount#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf8encoding.getbytecount/vb/getbytecount1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6f059-192">
            <paramref name="chars" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-192">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6f059-193">결과 바이트 수가 정수로 반환될 수 있는 최대 수보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-193">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6f059-194">오류 검색이 사용되고 <paramref name="chars" />에 잘못된 문자 시퀀스를 포함합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-194">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="6f059-195">대체가 발생했습니다(전체 설명은 [.NET Framework의 문자 인코딩](~/docs/standard/base-types/character-encoding.md) 참조).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-195">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="6f059-196">및</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-196">-and-</span>
          </span>
          <span data-ttu-id="6f059-197">
            <see cref="P:System.Text.Encoding.EncoderFallback" />이 <see cref="T:System.Text.EncoderExceptionFallback" />로 설정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-197">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (char* chars, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(char* chars, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetByteCount(System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(char* chars, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="6f059-198">인코딩할 첫 번째 문자를 가리키는 포인터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-198">A pointer to the first character to encode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="6f059-199">인코딩할 문자 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-199">The number of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6f059-200">지정한 문자 포인터에서 시작되는 문자 집합을 인코딩할 경우 생성되는 바이트 수를 계산합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-200">Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6f059-201">지정한 문자를 인코딩할 경우 생성되는 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-201">The number of bytes produced by encoding the specified characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f059-202">필요한 정확한 배열 크기를 계산 하는 <xref:System.Text.UTF8Encoding.GetBytes%2A> 메서드 결과 바이트를 호출 하 여 <xref:System.Text.UTF8Encoding.GetByteCount%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6f059-202">To calculate the exact array size required by the <xref:System.Text.UTF8Encoding.GetBytes%2A> method to store the resulting bytes, you call the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="6f059-203">최대 배열 크기를 계산 하려면 호출는 <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6f059-203">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="6f059-204"><xref:System.Text.UTF8Encoding.GetByteCount%2A> 메서드는 일반적으로 적은 메모리를 할당 하는 동안는 <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> 메서드는 일반적으로 더 빠르게 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-204">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="6f059-205">오류 검색 기능을 잘못 된 시퀀스가이 메서드가 throw 하는 <xref:System.ArgumentException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-205">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="6f059-206">오류 검색 없이 잘못 된 시퀀스는 무시 되 고 예외가 throw 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-206">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="6f059-207">스트림 또는 파일로 저장 되 면 인코딩된 바이트는 제대로 디코딩을 보장 하려면 프리앰블을 사용 하 여 인코딩된 바이트 스트림을 접두사로 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-207">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="6f059-208">바이트 스트림으로 맨 앞에 프리앰블 삽입 (같은 일련의 파일에 쓸 바이트의 시작 부분에) 개발자의 책임 이며 머리말의 바이트 수에서 반환 된 값에 반영 되지는 <xref:System.Text.UTF8Encoding.GetByteCount%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6f059-208">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble is not reflected in the value returned by the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6f059-209">
            <paramref name="chars" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-209">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6f059-210">
            <paramref name="count" />가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-210">
              <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="6f059-211">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-211">-or-</span>
          </span>
          <span data-ttu-id="6f059-212">결과 바이트 수가 정수로 반환될 수 있는 최대 수보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-212">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6f059-213">오류 검색이 사용되고 <paramref name="chars" />에 잘못된 문자 시퀀스를 포함합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-213">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="6f059-214">대체가 발생했습니다(전체 설명은 [.NET Framework의 문자 인코딩](~/docs/standard/base-types/character-encoding.md) 참조).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-214">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for a complete explanation)</span>
          </span>
          <span data-ttu-id="6f059-215">및</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-215">-and-</span>
          </span>
          <span data-ttu-id="6f059-216">
            <see cref="P:System.Text.Encoding.EncoderFallback" />이 <see cref="T:System.Text.EncoderExceptionFallback" />로 설정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-216">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="6f059-217">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-217">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="6f059-218">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-218">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (char[] chars, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(char[] chars, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByteCount (chars As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(cli::array &lt;char&gt; ^ chars, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="6f059-219">인코딩할 문자 집합이 포함된 문자 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-219">The character array containing the set of characters to encode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="6f059-220">인코딩할 첫 번째 문자의 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-220">The index of the first character to encode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="6f059-221">인코딩할 문자 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-221">The number of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6f059-222">지정한 문자 배열의 문자 집합을 인코딩할 경우 생성되는 바이트 수를 계산합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-222">Calculates the number of bytes produced by encoding a set of characters from the specified character array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6f059-223">지정한 문자를 인코딩할 경우 생성되는 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-223">The number of bytes produced by encoding the specified characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f059-224">필요한 정확한 배열 크기를 계산 하려면 <xref:System.Text.UTF8Encoding.GetBytes%2A> 결과 바이트를 저장 하기 위해 사용 하 여 호출 하면 <xref:System.Text.UTF8Encoding.GetByteCount%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6f059-224">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetBytes%2A> to store the resulting bytes, you call the uses <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="6f059-225">최대 배열 크기를 계산 하려면 호출는 <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6f059-225">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="6f059-226"><xref:System.Text.UTF8Encoding.GetByteCount%2A> 메서드는 일반적으로 적은 메모리를 할당 하는 동안는 <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> 메서드는 일반적으로 더 빠르게 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-226">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="6f059-227">오류 검색 기능을 잘못 된 시퀀스가이 메서드가 throw 하는 <xref:System.ArgumentException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-227">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="6f059-228">오류 검색 없이 잘못 된 시퀀스는 무시 되 고 예외가 throw 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-228">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="6f059-229">스트림 또는 파일로 저장 되 면 인코딩된 바이트는 제대로 디코딩을 보장 하려면 프리앰블을 사용 하 여 인코딩된 바이트 스트림을 접두사로 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-229">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="6f059-230">바이트 스트림으로 맨 앞에 프리앰블 삽입 (같은 일련의 파일에 쓸 바이트의 시작 부분에) 개발자의 책임 이며 머리말의 바이트 수에서 반환 된 값에 반영 되지는 <xref:System.Text.UTF8Encoding.GetByteCount%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6f059-230">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble is not reflected in the value returned by the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6f059-231">다음 예제에서는 배열을 대문자는 라틴으로 및 소문자 및 호출은 <xref:System.Text.UTF8Encoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> 메서드 라틴어 소문자 인코딩하는 데 필요한 바이트 수를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-231">The following example populates an array with a Latin uppercase and lowercase characters and calls the <xref:System.Text.UTF8Encoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method to determine the number of bytes needed to encode the Latin lowercase characters.</span></span> <span data-ttu-id="6f059-232">바이트 순서 표시를 추가한 경우 필요한 바이트의 총 수와 함께이 정보를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-232">It then displays this information along with the total number of bytes needed if a byte order mark is added.</span></span> <span data-ttu-id="6f059-233">반환 된 값이 숫자를 비교 하는 <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> 메서드 라틴어 소문자 인코딩하는 데 필요한 바이트의 최대 수를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-233">It compares this number with the value returned by the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method, which indicates maximum number of bytes needed to encode the Latin lowercase characters.</span></span>  
  
 [!code-csharp[System.Text.UTF8Encoding.GetByteCount#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf8encoding.getbytecount/cs/getbytecount2.cs#2)]
 [!code-vb[System.Text.UTF8Encoding.GetByteCount#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf8encoding.getbytecount/vb/getbytecount2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6f059-234">
            <paramref name="chars" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-234">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6f059-235">
            <paramref name="index" /> 또는 <paramref name="count" />가 0보다 작습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-235">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="6f059-236">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-236">-or-</span>
          </span>
          <span data-ttu-id="6f059-237">
            <paramref name="index" /> 및 <paramref name="count" />가 <paramref name="chars" />에서 올바른 범위를 나타내지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-237">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="chars" />.</span>
          </span>
          <span data-ttu-id="6f059-238">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-238">-or-</span>
          </span>
          <span data-ttu-id="6f059-239">결과 바이트 수가 정수로 반환될 수 있는 최대 수보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-239">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6f059-240">오류 검색이 사용되고 <paramref name="chars" />에 잘못된 문자 시퀀스를 포함합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-240">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="6f059-241">대체가 발생했습니다(전체 설명은 [.NET Framework의 문자 인코딩](~/docs/standard/base-types/character-encoding.md) 참조).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-241">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="6f059-242">및</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-242">-and-</span>
          </span>
          <span data-ttu-id="6f059-243">
            <see cref="P:System.Text.Encoding.EncoderFallback" /> 속성은 <see cref="T:System.Text.EncoderExceptionFallback" />로 설정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-243">The <see cref="P:System.Text.Encoding.EncoderFallback" /> property is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBytes">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6f059-244">문자 집합을 바이트 시퀀스로 인코딩합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-244">Encodes a set of characters into a sequence of bytes.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (char* chars, int charCount, byte* bytes, int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(char* chars, int32 charCount, unsigned int8* bytes, int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(char* chars, int charCount, System::Byte* bytes, int byteCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="6f059-245">인코딩할 첫 번째 문자를 가리키는 포인터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-245">A pointer to the first character to encode.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="6f059-246">인코딩할 문자 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-246">The number of characters to encode.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="6f059-247">결과 바이트 시퀀스를 쓰기 시작할 위치를 가리키는 포인터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-247">A pointer to the location at which to start writing the resulting sequence of bytes.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="6f059-248">쓸 최대 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-248">The maximum number of bytes to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6f059-249">지정한 문자 포인터에서 시작하는 문자 집합을 지정한 바이트 포인터에서 시작하여 저장되는 바이트 시퀀스로 인코딩합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-249">Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6f059-250">
            <paramref name="bytes" />가 가리키는 위치에 써지는 실제 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-250">The actual number of bytes written at the location indicated by <paramref name="bytes" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f059-251">필요한 정확한 배열 크기를 계산 하려면 <xref:System.Text.UTF8Encoding.GetBytes%2A> 호출 결과 바이트를 저장 하기 위해는 <xref:System.Text.UTF8Encoding.GetByteCount%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6f059-251">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="6f059-252">최대 배열 크기를 계산 하려면 호출는 <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6f059-252">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="6f059-253"><xref:System.Text.UTF8Encoding.GetByteCount%2A> 메서드는 일반적으로 적은 메모리를 할당 하는 동안는 <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> 메서드는 일반적으로 더 빠르게 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-253">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="6f059-254">오류 검색 기능을 잘못 된 시퀀스가이 메서드가 throw 하는 <xref:System.ArgumentException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-254">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="6f059-255">오류 검색 없이 잘못 된 시퀀스는 무시 되 고 예외가 throw 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-255">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="6f059-256">데이터를 변환할 수는 예: 스트림에서 읽은 데이터 순차 블록 에서만에서 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-256">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="6f059-257">이 경우, 또는 사용 하 여 데이터의 양이 너무 많아 작은 블록으로 나눌 경우는 <xref:System.Text.Decoder> 또는 <xref:System.Text.Encoder> 에서 반환 되는 <xref:System.Text.UTF8Encoding.GetDecoder%2A> 메서드 또는 <xref:System.Text.UTF8Encoding.GetEncoder%2A> 메서드를 각각.</span><span class="sxs-lookup"><span data-stu-id="6f059-257">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> returned by the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
 <span data-ttu-id="6f059-258">스트림 또는 파일로 저장 되 면 인코딩된 바이트는 제대로 디코딩을 보장 하려면 프리앰블을 사용 하 여 인코딩된 바이트 스트림을 접두사로 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-258">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="6f059-259">바이트 스트림으로 맨 앞에 프리앰블 삽입 (같은 일련의 파일에 쓸 바이트의 시작 부분에)은 개발자의 책임입니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-259">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="6f059-260"><xref:System.Text.UTF8Encoding.GetBytes%2A> 메서드 인코딩된 바이트 시퀀스의 시작 부분에 프리앰블 앞에 추가 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-260">The <xref:System.Text.UTF8Encoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6f059-261">
            <paramref name="chars" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-261">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="6f059-262">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-262">-or-</span>
          </span>
          <span data-ttu-id="6f059-263">
            <paramref name="bytes" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-263">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6f059-264">
            <paramref name="charCount" /> 또는 <paramref name="byteCount" />가 0보다 작습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-264">
              <paramref name="charCount" /> or <paramref name="byteCount" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6f059-265">오류 검색이 사용되고 <paramref name="chars" />에 잘못된 문자 시퀀스를 포함합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-265">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          </span>
          <span data-ttu-id="6f059-266">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-266">-or-</span>
          </span>
          <span data-ttu-id="6f059-267">
            <paramref name="byteCount" />가 결과 바이트 수보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-267">
              <paramref name="byteCount" /> is less than the resulting number of bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="6f059-268">대체가 발생했습니다(전체 설명은 [.NET Framework의 문자 인코딩](~/docs/standard/base-types/character-encoding.md) 참조).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-268">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="6f059-269">및</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-269">-and-</span>
          </span>
          <span data-ttu-id="6f059-270">
            <see cref="P:System.Text.Encoding.EncoderFallback" />이 <see cref="T:System.Text.EncoderExceptionFallback" />로 설정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-270">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="6f059-271">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-271">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="6f059-272">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-272">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (char[] chars, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(char[] chars, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (chars As Char(), charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(cli::array &lt;char&gt; ^ chars, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="6f059-273">인코딩할 문자 집합이 포함된 문자 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-273">The character array containing the set of characters to encode.</span>
          </span>
        </param>
        <param name="charIndex">
          <span data-ttu-id="6f059-274">인코딩할 첫 번째 문자의 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-274">The index of the first character to encode.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="6f059-275">인코딩할 문자 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-275">The number of characters to encode.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="6f059-276">결과 바이트 시퀀스를 포함할 바이트 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-276">The byte array to contain the resulting sequence of bytes.</span>
          </span>
        </param>
        <param name="byteIndex">
          <span data-ttu-id="6f059-277">결과 바이트 시퀀스를 쓰기 시작할 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-277">The index at which to start writing the resulting sequence of bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6f059-278">지정한 문자 배열의 문자 집합을 지정한 바이트 배열로 인코딩합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-278">Encodes a set of characters from the specified character array into the specified byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6f059-279">
            <paramref name="bytes" />에 쓴 실제 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-279">The actual number of bytes written into <paramref name="bytes" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f059-280">필요한 정확한 배열 크기를 계산 하려면 <xref:System.Text.UTF8Encoding.GetBytes%2A> 호출 결과 바이트를 저장 하기 위해는 <xref:System.Text.UTF8Encoding.GetByteCount%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6f059-280">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="6f059-281">최대 배열 크기를 계산 하려면 호출는 <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6f059-281">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="6f059-282"><xref:System.Text.UTF8Encoding.GetByteCount%2A> 메서드는 일반적으로 적은 메모리를 할당 하는 동안는 <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> 메서드는 일반적으로 더 빠르게 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-282">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="6f059-283">오류 검색 기능을 잘못 된 시퀀스가이 메서드가 throw 하는 <xref:System.ArgumentException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-283">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="6f059-284">오류 검색 없이 잘못 된 시퀀스는 무시 되 고 예외가 throw 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-284">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="6f059-285">데이터를 변환할 수는 예: 스트림에서 읽은 데이터 순차 블록 에서만에서 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-285">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="6f059-286">이 경우, 또는 사용 하 여 데이터의 양이 너무 많아 작은 블록으로 나눌 경우는 <xref:System.Text.Decoder> 또는 <xref:System.Text.Encoder> 에서 제공 되는 <xref:System.Text.UTF8Encoding.GetDecoder%2A> 메서드 또는 <xref:System.Text.UTF8Encoding.GetEncoder%2A> 메서드를 각각.</span><span class="sxs-lookup"><span data-stu-id="6f059-286">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
 <span data-ttu-id="6f059-287">스트림 또는 파일로 저장 되 면 인코딩된 바이트는 제대로 디코딩을 보장 하려면 프리앰블을 사용 하 여 인코딩된 바이트 스트림을 접두사로 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-287">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="6f059-288">바이트 스트림으로 맨 앞에 프리앰블 삽입 (같은 일련의 파일에 쓸 바이트의 시작 부분에)은 개발자의 책임입니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-288">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="6f059-289"><xref:System.Text.UTF8Encoding.GetBytes%2A> 메서드 인코딩된 바이트 시퀀스의 시작 부분에 프리앰블 앞에 추가 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-289">The <xref:System.Text.UTF8Encoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6f059-290">다음 예제에서는 <xref:System.Text.UTF8Encoding.GetBytes%2A> 문자열 및 저장 된 바이트 배열에 있는 요소의 범위에 인코딩된 바이트에서 문자 범위를 인코딩하는 데 메서드.</span><span class="sxs-lookup"><span data-stu-id="6f059-290">The following example uses the <xref:System.Text.UTF8Encoding.GetBytes%2A> method to encode a range of characters from a string and stores the encoded bytes in a range of elements in a byte array.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetBytes3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetBytes3 Example/CPP/getbytes-string-int32-int32-byte[]-int32.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetBytes3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetBytes3 Example/CS/getbytes-string-int32-int32-byte[]-int32.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetBytes3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetBytes3 Example/VB/getbytes-string-int32-int32-byte[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6f059-291">
            <paramref name="chars" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-291">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="6f059-292">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-292">-or-</span>
          </span>
          <span data-ttu-id="6f059-293">
            <paramref name="bytes" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-293">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6f059-294">
            <paramref name="charIndex" />, <paramref name="charCount" /> 또는 <paramref name="byteIndex" />가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-294">
              <paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span>
          </span>
          <span data-ttu-id="6f059-295">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-295">-or-</span>
          </span>
          <span data-ttu-id="6f059-296">
            <paramref name="charIndex" /> 및 <paramref name="charCount" />가 <paramref name="chars" />에서 올바른 범위를 나타내지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-296">
              <paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span>
          </span>
          <span data-ttu-id="6f059-297">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-297">-or-</span>
          </span>
          <span data-ttu-id="6f059-298">
            <paramref name="byteIndex" />가 <paramref name="bytes" />의 유효한 인덱스가 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-298">
              <paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6f059-299">오류 검색이 사용되고 <paramref name="chars" />에 잘못된 문자 시퀀스를 포함합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-299">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          </span>
          <span data-ttu-id="6f059-300">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-300">-or-</span>
          </span>
          <span data-ttu-id="6f059-301">
            <paramref name="bytes" />의 용량(<paramref name="byteIndex" /> ~ 배열 끝)이 부족해서 결과 바이트를 수용할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-301">
              <paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="6f059-302">대체가 발생했습니다(전체 설명은 [.NET Framework의 문자 인코딩](~/docs/standard/base-types/character-encoding.md) 참조).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-302">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="6f059-303">및</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-303">-and-</span>
          </span>
          <span data-ttu-id="6f059-304">
            <see cref="P:System.Text.Encoding.EncoderFallback" />이 <see cref="T:System.Text.EncoderExceptionFallback" />로 설정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-304">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (string s, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(string s, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (s As String, charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(System::String ^ s, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="6f059-305">인코딩할 문자 집합이 포함된 <see cref="T:System.String" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-305">The <see cref="T:System.String" /> containing the set of characters to encode.</span>
          </span>
        </param>
        <param name="charIndex">
          <span data-ttu-id="6f059-306">인코딩할 첫 번째 문자의 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-306">The index of the first character to encode.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="6f059-307">인코딩할 문자 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-307">The number of characters to encode.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="6f059-308">결과 바이트 시퀀스를 포함할 바이트 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-308">The byte array to contain the resulting sequence of bytes.</span>
          </span>
        </param>
        <param name="byteIndex">
          <span data-ttu-id="6f059-309">결과 바이트 시퀀스를 쓰기 시작할 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-309">The index at which to start writing the resulting sequence of bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6f059-310">지정된 <see cref="T:System.String" />의 문자 집합을 지정된 바이트 배열로 인코딩합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-310">Encodes a set of characters from the specified <see cref="T:System.String" /> into the specified byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6f059-311">
            <paramref name="bytes" />에 쓴 실제 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-311">The actual number of bytes written into <paramref name="bytes" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f059-312">필요한 정확한 배열 크기를 계산 하려면 <xref:System.Text.UTF8Encoding.GetBytes%2A> 호출 결과 바이트를 저장 하기 위해는 <xref:System.Text.UTF8Encoding.GetByteCount%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6f059-312">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="6f059-313">최대 배열 크기를 계산 하려면 호출는 <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6f059-313">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="6f059-314"><xref:System.Text.UTF8Encoding.GetByteCount%2A> 메서드는 일반적으로 적은 메모리를 할당 하는 동안는 <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> 메서드는 일반적으로 더 빠르게 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-314">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="6f059-315">오류 검색 기능을 잘못 된 시퀀스가이 메서드가 throw 하는 <xref:System.ArgumentException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-315">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="6f059-316">오류 검색 없이 잘못 된 시퀀스는 무시 되 고 예외가 throw 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-316">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="6f059-317">데이터를 변환할 수는 예: 스트림에서 읽은 데이터 순차 블록 에서만에서 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-317">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="6f059-318">이 경우, 또는 사용 하 여 데이터의 양이 너무 많아 작은 블록으로 나눌 경우는 <xref:System.Text.Decoder> 또는 <xref:System.Text.Encoder> 에서 제공 되는 <xref:System.Text.UTF8Encoding.GetDecoder%2A> 메서드 또는 <xref:System.Text.UTF8Encoding.GetEncoder%2A> 메서드를 각각.</span><span class="sxs-lookup"><span data-stu-id="6f059-318">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
 <span data-ttu-id="6f059-319">스트림 또는 파일로 저장 되 면 인코딩된 바이트는 제대로 디코딩을 보장 하려면 프리앰블을 사용 하 여 인코딩된 바이트 스트림을 접두사로 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-319">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="6f059-320">바이트 스트림으로 맨 앞에 프리앰블 삽입 (같은 일련의 파일에 쓸 바이트의 시작 부분에)은 개발자의 책임입니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-320">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="6f059-321"><xref:System.Text.UTF8Encoding.GetBytes%2A> 메서드 인코딩된 바이트 시퀀스의 시작 부분에 프리앰블 앞에 추가 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-321">The <xref:System.Text.UTF8Encoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6f059-322">다음 예제에서는 <xref:System.Text.UTF8Encoding.GetBytes%2A> 메서드를 유니코드 문자 배열에서 요소의 범위를 인코딩하고 인코딩된 바이트를 바이트 배열의 요소 범위에 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-322">The following example uses the <xref:System.Text.UTF8Encoding.GetBytes%2A> method to encode a range of elements from a Unicode character array and store the encoded bytes in a range of elements in a byte array.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetBytes1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetBytes1 Example/CPP/getbytes-char[]-int32-int32-byte[]-int32.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetBytes1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetBytes1 Example/CS/getbytes-char[]-int32-int32-byte[]-int32.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetBytes1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetBytes1 Example/VB/getbytes-char[]-int32-int32-byte[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6f059-323">
            <paramref name="s" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-323">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="6f059-324">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-324">-or-</span>
          </span>
          <span data-ttu-id="6f059-325">
            <paramref name="bytes" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-325">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6f059-326">
            <paramref name="charIndex" />, <paramref name="charCount" /> 또는 <paramref name="byteIndex" />가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-326">
              <paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span>
          </span>
          <span data-ttu-id="6f059-327">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-327">-or-</span>
          </span>
          <span data-ttu-id="6f059-328">
            <paramref name="charIndex" /> 및 <paramref name="charCount" />가 <paramref name="chars" />에서 올바른 범위를 나타내지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-328">
              <paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span>
          </span>
          <span data-ttu-id="6f059-329">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-329">-or-</span>
          </span>
          <span data-ttu-id="6f059-330">
            <paramref name="byteIndex" />가 <paramref name="bytes" />의 유효한 인덱스가 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-330">
              <paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6f059-331">오류 검색이 사용되고 <paramref name="s" />에 잘못된 문자 시퀀스를 포함합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-331">Error detection is enabled, and <paramref name="s" /> contains an invalid sequence of characters.</span>
          </span>
          <span data-ttu-id="6f059-332">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-332">-or-</span>
          </span>
          <span data-ttu-id="6f059-333">
            <paramref name="bytes" />의 용량(<paramref name="byteIndex" /> ~ 배열 끝)이 부족해서 결과 바이트를 수용할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-333">
              <paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="6f059-334">대체가 발생했습니다(전체 설명은 [.NET Framework의 문자 인코딩](~/docs/standard/base-types/character-encoding.md) 참조).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-334">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="6f059-335">및</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-335">-and-</span>
          </span>
          <span data-ttu-id="6f059-336">
            <see cref="P:System.Text.Encoding.EncoderFallback" />이 <see cref="T:System.Text.EncoderExceptionFallback" />로 설정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-336">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCharCount">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6f059-337">바이트 시퀀스를 디코딩할 경우 생성되는 문자 수를 계산합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-337">Calculates the number of characters produced by decoding a sequence of bytes.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public override int GetCharCount (byte* bytes, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharCount(unsigned int8* bytes, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetCharCount(System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharCount(System::Byte* bytes, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="6f059-338">디코딩할 첫 번째 바이트를 가리키는 포인터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-338">A pointer to the first byte to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="6f059-339">디코딩할 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-339">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6f059-340">지정한 바이트 포인터에서 시작되는 바이트 시퀀스를 디코딩할 경우 생성되는 문자 수를 계산합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-340">Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6f059-341">지정한 바이트 시퀀스를 디코딩할 경우 생성되는 문자 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-341">The number of characters produced by decoding the specified sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f059-342">필요한 정확한 배열 크기를 계산 하려면 <xref:System.Text.UTF8Encoding.GetChars%2A> 결과 문자를 저장 하기 위해 호출 된 <xref:System.Text.UTF8Encoding.GetCharCount%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6f059-342">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetChars%2A> to store the resulting characters, call the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="6f059-343">최대 배열 크기를 계산 하려면 호출 된 <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6f059-343">To calculate the maximum array size, call the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="6f059-344"><xref:System.Text.UTF8Encoding.GetCharCount%2A> 메서드는 일반적으로 적은 메모리를 할당 하는 동안는 <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> 메서드는 일반적으로 더 빠르게 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-344">The <xref:System.Text.UTF8Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="6f059-345">오류 검색 기능을 잘못 된 시퀀스가이 메서드가 throw 하는 <xref:System.ArgumentException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-345">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="6f059-346">오류 검색 없이 잘못 된 시퀀스는 무시 되 고 예외가 throw 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-346">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6f059-347">
            <paramref name="bytes" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-347">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6f059-348">
            <paramref name="count" />가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-348">
              <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="6f059-349">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-349">-or-</span>
          </span>
          <span data-ttu-id="6f059-350">결과 바이트 수가 정수로 반환될 수 있는 최대 수보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-350">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6f059-351">오류 검색이 사용되고 <paramref name="bytes" />에 잘못된 바이트 시퀀스를 포함합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-351">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="6f059-352">대체가 발생했습니다(전체 설명은 [.NET Framework의 문자 인코딩](~/docs/standard/base-types/character-encoding.md) 참조).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-352">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="6f059-353">및</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-353">-and-</span>
          </span>
          <span data-ttu-id="6f059-354">
            <see cref="P:System.Text.Encoding.DecoderFallback" />이 <see cref="T:System.Text.DecoderExceptionFallback" />로 설정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-354">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="6f059-355">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-355">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="6f059-356">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-356">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="Overload:System.Text.UTF8Encoding.GetChars" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public override int GetCharCount (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharCount(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCharCount (bytes As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharCount(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="6f059-357">디코딩할 바이트 시퀀스를 포함하는 바이트 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-357">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="6f059-358">디코딩할 첫 번째 바이트의 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-358">The index of the first byte to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="6f059-359">디코딩할 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-359">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6f059-360">지정한 바이트 배열의 바이트 시퀀스를 디코딩할 경우 생성되는 문자 수를 계산합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-360">Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6f059-361">지정한 바이트 시퀀스를 디코딩할 경우 생성되는 문자 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-361">The number of characters produced by decoding the specified sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f059-362">필요한 정확한 배열 크기를 계산 하려면 <xref:System.Text.UTF8Encoding.GetChars%2A> 결과 문자를 저장 하기 위해 호출 된 <xref:System.Text.UTF8Encoding.GetCharCount%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6f059-362">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetChars%2A> to store the resulting characters, call the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="6f059-363">최대 배열 크기를 계산 하려면 호출 된 <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6f059-363">To calculate the maximum array size, call the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="6f059-364"><xref:System.Text.UTF8Encoding.GetCharCount%2A> 메서드는 일반적으로 적은 메모리를 할당 하는 동안는 <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> 메서드는 일반적으로 더 빠르게 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-364">The <xref:System.Text.UTF8Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="6f059-365">오류 검색 기능을 잘못 된 시퀀스가이 메서드가 throw 하는 <xref:System.ArgumentException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-365">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="6f059-366">오류 검색 없이 잘못 된 시퀀스는 무시 되 고 예외가 throw 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-366">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6f059-367">다음 예제에서는 <xref:System.Text.UTF8Encoding.GetCharCount%2A> 바이트 배열의 요소 범위를 디코딩하여 생성 되는 문자 수를 반환 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="6f059-367">The following example uses the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method to return the number of characters produced by decoding a range of elements in a byte array.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetCharCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetCharCount Example/CPP/getcharcount-byte[]-int32-int32.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetCharCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetCharCount Example/CS/getcharcount-byte[]-int32-int32.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetCharCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetCharCount Example/VB/getcharcount-byte[]-int32-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6f059-368">
            <paramref name="bytes" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-368">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6f059-369">
            <paramref name="index" /> 또는 <paramref name="count" />가 0보다 작습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-369">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="6f059-370">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-370">-or-</span>
          </span>
          <span data-ttu-id="6f059-371">
            <paramref name="index" /> 및 <paramref name="count" />가 <paramref name="bytes" />에서 올바른 범위를 나타내지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-371">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span>
          </span>
          <span data-ttu-id="6f059-372">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-372">-or-</span>
          </span>
          <span data-ttu-id="6f059-373">결과 바이트 수가 정수로 반환될 수 있는 최대 수보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-373">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6f059-374">오류 검색이 사용되고 <paramref name="bytes" />에 잘못된 바이트 시퀀스를 포함합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-374">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="6f059-375">대체가 발생했습니다(전체 설명은 [.NET Framework의 문자 인코딩](~/docs/standard/base-types/character-encoding.md) 참조).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-375">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="6f059-376">및</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-376">-and-</span>
          </span>
          <span data-ttu-id="6f059-377">
            <see cref="P:System.Text.Encoding.DecoderFallback" />이 <see cref="T:System.Text.DecoderExceptionFallback" />로 설정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-377">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Text.UTF8Encoding.GetChars" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetDecoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChars">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6f059-378">바이트 시퀀스를 문자 집합으로 디코딩합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-378">Decodes a sequence of bytes into a set of characters.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override int GetChars (byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetChars(unsigned int8* bytes, int32 byteCount, char* chars, int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetChars(System::Byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="6f059-379">디코딩할 첫 번째 바이트를 가리키는 포인터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-379">A pointer to the first byte to decode.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="6f059-380">디코딩할 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-380">The number of bytes to decode.</span>
          </span>
        </param>
        <param name="chars">
          <span data-ttu-id="6f059-381">결과 문자 집합을 쓰기 시작할 위치를 가리키는 포인터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-381">A pointer to the location at which to start writing the resulting set of characters.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="6f059-382">쓸 최대 문자 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-382">The maximum number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6f059-383">지정한 바이트 포인터에서 시작하는 바이트 시퀀스를 지정한 문자 포인터에서 시작하여 저장되는 문자 집합으로 디코딩합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-383">Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6f059-384">
            <paramref name="chars" />가 가리키는 위치에 써지는 실제 문자 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-384">The actual number of characters written at the location indicated by <paramref name="chars" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f059-385">필요한 정확한 배열 크기를 계산 하려면 <xref:System.Text.UTF8Encoding.GetChars%2A> 결과 문자를 저장 하기 위해 호출 된 <xref:System.Text.UTF8Encoding.GetCharCount%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6f059-385">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetChars%2A> to store the resulting characters, call the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="6f059-386">최대 배열 크기를 계산 하려면 호출 된 <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6f059-386">To calculate the maximum array size, call the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="6f059-387"><xref:System.Text.UTF8Encoding.GetCharCount%2A> 메서드는 일반적으로 적은 메모리를 할당 하는 동안는 <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> 메서드는 일반적으로 더 빠르게 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-387">The <xref:System.Text.UTF8Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="6f059-388">오류 검색 기능을 잘못 된 시퀀스가이 메서드가 throw 하는 <xref:System.ArgumentException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-388">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="6f059-389">오류 검색 없이 잘못 된 시퀀스는 무시 되 고 예외가 throw 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-389">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="6f059-390">디코딩할 바이트 범위 (BOM)의 바이트 순서 표시를 포함 하는 경우 인식 BOM이 아닌 형식의 메서드에 의해 반환 된 바이트 배열을 문자 U + FFFE이이 메서드에 의해 반환 되는 문자 배열에 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-390">If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="6f059-391">호출 하 여 제거할 수는 <xref:System.String.TrimStart%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6f059-391">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="6f059-392">데이터를 변환할 수는 예: 스트림에서 읽은 데이터 순차 블록 에서만에서 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-392">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="6f059-393">이 경우, 또는 사용 하 여 데이터의 양이 너무 많아 작은 블록으로 나눌 경우는 <xref:System.Text.Decoder> 또는 <xref:System.Text.Encoder> 에서 제공 하는 개체는 <xref:System.Text.UTF8Encoding.GetDecoder%2A> 메서드 또는 <xref:System.Text.UTF8Encoding.GetEncoder%2A> 메서드를 각각.</span><span class="sxs-lookup"><span data-stu-id="6f059-393">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> object provided by the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6f059-394">
            <paramref name="bytes" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-394">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="6f059-395">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-395">-or-</span>
          </span>
          <span data-ttu-id="6f059-396">
            <paramref name="chars" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-396">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6f059-397">
            <paramref name="byteCount" /> 또는 <paramref name="charCount" />가 0보다 작습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-397">
              <paramref name="byteCount" /> or <paramref name="charCount" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6f059-398">오류 검색이 사용되고 <paramref name="bytes" />에 잘못된 바이트 시퀀스를 포함합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-398">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          </span>
          <span data-ttu-id="6f059-399">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-399">-or-</span>
          </span>
          <span data-ttu-id="6f059-400">
            <paramref name="charCount" />가 결과 문자 수보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-400">
              <paramref name="charCount" /> is less than the resulting number of characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="6f059-401">대체가 발생했습니다(전체 설명은 [.NET Framework의 문자 인코딩](~/docs/standard/base-types/character-encoding.md) 참조).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-401">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="6f059-402">및</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-402">-and-</span>
          </span>
          <span data-ttu-id="6f059-403">
            <see cref="P:System.Text.Encoding.DecoderFallback" />이 <see cref="T:System.Text.DecoderExceptionFallback" />로 설정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-403">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="6f059-404">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-404">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="6f059-405">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-405">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetDecoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override int GetChars (byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetChars(unsigned int8[] bytes, int32 byteIndex, int32 byteCount, char[] chars, int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChars (bytes As Byte(), byteIndex As Integer, byteCount As Integer, chars As Char(), charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetChars(cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex, int byteCount, cli::array &lt;char&gt; ^ chars, int charIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="6f059-406">디코딩할 바이트 시퀀스를 포함하는 바이트 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-406">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <param name="byteIndex">
          <span data-ttu-id="6f059-407">디코딩할 첫 번째 바이트의 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-407">The index of the first byte to decode.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="6f059-408">디코딩할 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-408">The number of bytes to decode.</span>
          </span>
        </param>
        <param name="chars">
          <span data-ttu-id="6f059-409">결과 문자 집합을 포함할 문자 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-409">The character array to contain the resulting set of characters.</span>
          </span>
        </param>
        <param name="charIndex">
          <span data-ttu-id="6f059-410">결과 문자 집합을 쓰기 시작할 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-410">The index at which to start writing the resulting set of characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6f059-411">지정한 바이트 배열의 바이트 시퀀스를 지정한 문자 배열로 디코딩합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-411">Decodes a sequence of bytes from the specified byte array into the specified character array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6f059-412">
            <paramref name="chars" />에 쓴 실제 문자 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-412">The actual number of characters written into <paramref name="chars" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f059-413">필요한 정확한 배열 크기를 계산 하려면 <xref:System.Text.UTF8Encoding.GetChars%2A> 결과 문자를 저장 하기 위해 호출 된 <xref:System.Text.UTF8Encoding.GetCharCount%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6f059-413">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetChars%2A> to store the resulting characters, call the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="6f059-414">최대 배열 크기를 계산 하려면 호출 된 <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6f059-414">To calculate the maximum array size, call the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="6f059-415"><xref:System.Text.UTF8Encoding.GetCharCount%2A> 메서드는 일반적으로 적은 메모리를 할당 하는 동안는 <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> 메서드는 일반적으로 더 빠르게 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-415">The <xref:System.Text.UTF8Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="6f059-416">오류 검색 기능을 잘못 된 시퀀스가이 메서드가 throw 하는 <xref:System.ArgumentException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-416">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="6f059-417">오류 검색 없이 잘못 된 시퀀스는 무시 되 고 예외가 throw 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-417">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="6f059-418">디코딩할 바이트 범위 (BOM)의 바이트 순서 표시를 포함 하는 경우 인식 BOM이 아닌 형식의 메서드에 의해 반환 된 바이트 배열을 문자 U + FFFE이이 메서드에 의해 반환 되는 문자 배열에 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-418">If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="6f059-419">호출 하 여 제거할 수는 <xref:System.String.TrimStart%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6f059-419">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="6f059-420">데이터를 변환할 수는 예: 스트림에서 읽은 데이터 순차 블록 에서만에서 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-420">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="6f059-421">이 경우, 또는 사용 하 여 데이터의 양이 너무 많아 작은 블록으로 나눌 경우는 <xref:System.Text.Decoder> 또는 <xref:System.Text.Encoder> 에서 제공 되는 <xref:System.Text.UTF8Encoding.GetDecoder%2A> 메서드 또는 <xref:System.Text.UTF8Encoding.GetEncoder%2A> 메서드를 각각.</span><span class="sxs-lookup"><span data-stu-id="6f059-421">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6f059-422">다음 예제에서는 <xref:System.Text.UTF8Encoding.GetChars%2A> 메서드는 바이트 배열에서 요소의 범위를 디코딩하고 문자 배열에 결과 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-422">The following example uses the <xref:System.Text.UTF8Encoding.GetChars%2A> method to decode a range of elements in a byte array and store the result in a character array.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetChars Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetChars Example/CPP/getchars-byte[]-int32-int32-char[]-int32.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetChars Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetChars Example/CS/getchars-byte[]-int32-int32-char[]-int32.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetChars Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetChars Example/VB/getchars-byte[]-int32-int32-char[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6f059-423">
            <paramref name="bytes" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-423">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="6f059-424">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-424">-or-</span>
          </span>
          <span data-ttu-id="6f059-425">
            <paramref name="chars" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-425">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6f059-426">
            <paramref name="byteIndex" />, <paramref name="byteCount" /> 또는 <paramref name="charIndex" />가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-426">
              <paramref name="byteIndex" /> or <paramref name="byteCount" /> or <paramref name="charIndex" /> is less than zero.</span>
          </span>
          <span data-ttu-id="6f059-427">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-427">-or-</span>
          </span>
          <span data-ttu-id="6f059-428">
            <paramref name="byteindex" /> 및 <paramref name="byteCount" />가 <paramref name="bytes" />에서 올바른 범위를 나타내지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-428">
              <paramref name="byteindex" /> and <paramref name="byteCount" /> do not denote a valid range in <paramref name="bytes" />.</span>
          </span>
          <span data-ttu-id="6f059-429">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-429">-or-</span>
          </span>
          <span data-ttu-id="6f059-430">
            <paramref name="charIndex" />가 <paramref name="chars" />의 유효한 인덱스가 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-430">
              <paramref name="charIndex" /> is not a valid index in <paramref name="chars" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6f059-431">오류 검색이 사용되고 <paramref name="bytes" />에 잘못된 바이트 시퀀스를 포함합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-431">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          </span>
          <span data-ttu-id="6f059-432">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-432">-or-</span>
          </span>
          <span data-ttu-id="6f059-433">
            <paramref name="chars" />의 용량(<paramref name="charIndex" /> ~ 배열 끝)이 부족해서 결과 문자를 수용할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-433">
              <paramref name="chars" /> does not have enough capacity from <paramref name="charIndex" /> to the end of the array to accommodate the resulting characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="6f059-434">대체가 발생했습니다(전체 설명은 [.NET Framework의 문자 인코딩](~/docs/standard/base-types/character-encoding.md) 참조).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-434">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="6f059-435">및</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-435">-and-</span>
          </span>
          <span data-ttu-id="6f059-436">
            <see cref="P:System.Text.Encoding.DecoderFallback" />이 <see cref="T:System.Text.DecoderExceptionFallback" />로 설정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-436">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetDecoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDecoder">
      <MemberSignature Language="C#" Value="public override System.Text.Decoder GetDecoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Decoder GetDecoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetDecoder" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDecoder () As Decoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Decoder ^ GetDecoder();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Decoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6f059-437">UTF-8로 인코딩된 바이트 시퀀스를 유니코드 문자 시퀀스로 변환하는 디코더를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-437">Obtains a decoder that converts a UTF-8 encoded sequence of bytes into a sequence of Unicode characters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6f059-438">UTF-8로 인코딩된 바이트 시퀀스를 유니코드 문자 시퀀스로 변환하는 디코더입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-438">A decoder that converts a UTF-8 encoded sequence of bytes into a sequence of Unicode characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f059-439"><xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> 메서드 순차 바이트 블록을 유사한 방식으로 문자의 순차 블록 변환는 <xref:System.Text.UTF8Encoding.GetChars%2A> 이 클래스의 메서드.</span><span class="sxs-lookup"><span data-stu-id="6f059-439">The <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method converts sequential blocks of bytes into sequential blocks of characters, in a manner similar to the <xref:System.Text.UTF8Encoding.GetChars%2A> method of this class.</span></span> <span data-ttu-id="6f059-440">그러나 한 <xref:System.Text.Decoder> 블록으로 확장 되는 바이트 시퀀스를 올바르게 디코딩할 수 있도록 호출 간의 상태 정보를 관리 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-440">However, a <xref:System.Text.Decoder> maintains state information between calls so it can correctly decode byte sequences that span blocks.</span></span> <span data-ttu-id="6f059-441"><xref:System.Text.Decoder> 또한 데이터 블록의 끝에 후행 바이트를 보존 하 고 다음 디코딩 작업에서 후행 바이트를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-441">The <xref:System.Text.Decoder> also preserves trailing bytes at the end of data blocks and uses the trailing bytes in the next decoding operation.</span></span> <span data-ttu-id="6f059-442">따라서 <xref:System.Text.UTF8Encoding.GetDecoder%2A> 및 <xref:System.Text.UTF8Encoding.GetEncoder%2A> 는 전체 데이터 스트림 하는 대신 데이터 블록을 처리 하기 때문에 네트워크 전송 및 파일 작업에 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-442">Therefore, <xref:System.Text.UTF8Encoding.GetDecoder%2A> and <xref:System.Text.UTF8Encoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 <span data-ttu-id="6f059-443">오류 검색이 사용 됩니다, 즉,는 `throwOnInvalidCharacters` 생성자의 매개 변수 설정 `true`, 오류 검색이에 사용 되는 <xref:System.Text.Decoder> 이 메서드에서 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-443">If error detection is enabled, that is, the `throwOnInvalidCharacters` parameter of the constructor is set to `true`, error detection is also enabled in the <xref:System.Text.Decoder> returned by this method.</span></span> <span data-ttu-id="6f059-444">오류 검색이 사용 되는 경우 잘못 된 시퀀스가 발생 된 디코더 상태에 정의 되지 않으며 처리가 중지 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-444">If error detection is enabled and an invalid sequence is encountered, the state of the decoder is undefined and processing must stop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6f059-445">다음 예제에서는 <xref:System.Text.UTF8Encoding.GetDecoder%2A> utf-8 디코더를 얻는 메서드를 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-445">The following example uses the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method to obtain a UTF-8 decoder.</span></span> <span data-ttu-id="6f059-446">디코더 문자 시퀀스를 바이트 시퀀스로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-446">The decoder converts a sequence of bytes into a sequence of characters.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetDecoder Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetDecoder Example/CPP/getdecoder-.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetDecoder Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetDecoder Example/CS/getdecoder-.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetDecoder Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetDecoder Example/VB/getdecoder-.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Decoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetEncoder">
      <MemberSignature Language="C#" Value="public override System.Text.Encoder GetEncoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Encoder GetEncoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetEncoder" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEncoder () As Encoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Encoder ^ GetEncoder();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6f059-447">유니코드 문자 시퀀스를 UTF-8로 인코딩된 바이트 시퀀스로 변환하는 인코더를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-447">Obtains an encoder that converts a sequence of Unicode characters into a UTF-8 encoded sequence of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6f059-448">유니코드 문자 시퀀스를 UTF-8로 인코딩된 바이트 시퀀스로 변환하는 <see cref="T:System.Text.Encoder" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-448">A <see cref="T:System.Text.Encoder" /> that converts a sequence of Unicode characters into a UTF-8 encoded sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f059-449"><xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> 메서드 문자의 순차 블록 순차 블록의 바이트 유사한 방식으로 변환 된 <xref:System.Text.UTF8Encoding.GetBytes%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6f059-449">The <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method converts sequential blocks of characters into sequential blocks of bytes, in a manner similar to the <xref:System.Text.UTF8Encoding.GetBytes%2A> method.</span></span> <span data-ttu-id="6f059-450">그러나 한 <xref:System.Text.Encoder> 블록으로 확장 되는 문자 시퀀스 올바르게 인코딩할 수 있도록 호출 간의 상태 정보를 관리 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-450">However, a <xref:System.Text.Encoder> maintains state information between calls so it can correctly encode character sequences that span blocks.</span></span> <span data-ttu-id="6f059-451"><xref:System.Text.Encoder> 또한 전처리 후행 데이터 블록의 끝에 문자 하 고 다음 인코딩 작업에 후행 문자를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-451">The <xref:System.Text.Encoder> also preserves trailing characters at the end of data blocks and uses the trailing characters in the next encoding operation.</span></span> <span data-ttu-id="6f059-452">예를 들어 데이터 블록 짝이 맞지 않는 상위 서로게이트를 마무리할 수 있습니다 및 다음 데이터 블록에 일치 하는 하위 서로게이트 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-452">For example, a data block might end with an unmatched high surrogate, and the matching low surrogate might be in the next data block.</span></span> <span data-ttu-id="6f059-453">따라서 <xref:System.Text.UTF8Encoding.GetDecoder%2A> 및 <xref:System.Text.UTF8Encoding.GetEncoder%2A> 는 전체 데이터 스트림 하는 대신 데이터 블록을 처리 하기 때문에 네트워크 전송 및 파일 작업에 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-453">Therefore, <xref:System.Text.UTF8Encoding.GetDecoder%2A> and <xref:System.Text.UTF8Encoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 <span data-ttu-id="6f059-454">오류 검색이 사용 됩니다, 즉,는 `throwOnInvalidCharacters` 생성자의 매개 변수 설정 `true`, 오류 검색이에 사용 되는 <xref:System.Text.Encoder> 이 메서드에서 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-454">If error detection is enabled, that is, the `throwOnInvalidCharacters` parameter of the constructor is set to `true`, error detection is also enabled in the <xref:System.Text.Encoder> returned by this method.</span></span> <span data-ttu-id="6f059-455">오류 검색이 사용 되는 잘못 된 시퀀스가 발생 하는 경우 인코더의 상태가 정의 하 고 처리가 중지 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-455">If error detection is enabled and an invalid sequence is encountered, the state of the encoder is undefined and processing must stop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6f059-456">다음 예제에서는 <xref:System.Text.UTF8Encoding.GetEncoder%2A> 문자 시퀀스를 u t F-8로 변환 하는 인코더를 얻는 메서드를 인코딩된 바이트 시퀀스로 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-456">The following example uses the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method to obtain an encoder to convert a sequence of characters into a UTF-8 encoded sequence of bytes.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetEncoder Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetEncoder Example/CPP/getencoder-.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetEncoder Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetEncoder Example/CS/getencoder-.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetEncoder Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetEncoder Example/VB/getencoder-.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6f059-457">현재 인스턴스의 해시 코드를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-457">Returns the hash code for the current instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6f059-458">현재 인스턴스에 대한 해시 코드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-458">The hash code for the current instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6f059-459">다음 예제에서는 <xref:System.Text.UTF8Encoding.GetHashCode%2A> 에 대 한 해시 코드를 반환 하는 메서드 <xref:System.Text.UTF8Encoding> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="6f059-459">The following example uses the <xref:System.Text.UTF8Encoding.GetHashCode%2A> method to return a hash code for <xref:System.Text.UTF8Encoding> instances.</span></span> <span data-ttu-id="6f059-460">이 메서드에 의해 반환 되는 해시 코드를 만드는 데 사용 하는 생성자에 따라 달라 집니다 통지는 <xref:System.Text.UTF8Encoding> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-460">Notice that the hash code returned by this method depends on the constructor used to create the <xref:System.Text.UTF8Encoding> object.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetHashCode Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetHashCode Example/CPP/gethashcode-.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetHashCode Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetHashCode Example/CS/gethashcode-.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetHashCode Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetHashCode Example/VB/gethashcode-.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxByteCount">
      <MemberSignature Language="C#" Value="public override int GetMaxByteCount (int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMaxByteCount(int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMaxByteCount (charCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMaxByteCount(int charCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charCount">
          <span data-ttu-id="6f059-461">인코딩할 문자 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-461">The number of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6f059-462">지정한 수의 문자를 인코딩할 경우 생성되는 최대 바이트 수를 계산합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-462">Calculates the maximum number of bytes produced by encoding the specified number of characters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6f059-463">지정한 수의 문자를 인코딩할 경우 생성되는 최대 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-463">The maximum number of bytes produced by encoding the specified number of characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f059-464">필요한 정확한 배열 크기를 계산 하려면 <xref:System.Text.UTF8Encoding.GetBytes%2A> 호출 결과 바이트를 저장 하기 위해는 <xref:System.Text.UTF8Encoding.GetByteCount%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6f059-464">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="6f059-465">최대 배열 크기를 계산 하려면 호출는 <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6f059-465">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="6f059-466"><xref:System.Text.UTF8Encoding.GetByteCount%2A> 메서드는 일반적으로 적은 메모리를 할당 하는 동안는 <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> 메서드는 일반적으로 더 빠르게 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-466">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="6f059-467"><xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> 현재 선택 된 최악의 경우를 포함 하 여 최악의 숫자, <xref:System.Text.EncoderFallback>합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-467"><xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> is a worst-case number, including the worst case for the currently selected <xref:System.Text.EncoderFallback>.</span></span> <span data-ttu-id="6f059-468">잠재적으로 큰 문자열로 대체를 선택한 경우 <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> 큰 값을 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-468">If a fallback is chosen with a potentially large string, <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> can return large values.</span></span>  
  
 <span data-ttu-id="6f059-469">대부분의 경우가이 메서드는 작은 문자열에 대해 적합 한 숫자를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-469">In most cases, this method returns reasonable numbers for small strings.</span></span> <span data-ttu-id="6f059-470">큰 문자열에 대 한 매우 큰 버퍼를 사용 하 고 버퍼를 보다 적절 한 크기를 초과 하는 드문 경우에서 오류를 catch 하는 중 하나를 선택 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-470">For large strings, you might have to choose between using very large buffers and catching errors in the rare case that a more reasonable buffer is exceeded.</span></span> <span data-ttu-id="6f059-471">사용 하 여 다른 접근 방식을 고려해 야 할 수도 있습니다 <xref:System.Text.UTF8Encoding.GetByteCount%2A> 또는 <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-471">You might also want to consider a different approach using <xref:System.Text.UTF8Encoding.GetByteCount%2A> or <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="6f059-472">예를 들어 영어 및 다른 여러 언어의 텍스트에는 종종 하나만 u t F-8 바이트의 문자를 나타내는 데 필요 하지만에서 반환 된 수 <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> 있는지 변환 될 문자열은만 구성 될 문자는 각 가능성 수 있도록 허용 해야 4 바이트가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-472">For example, text in English and many other languages often needs only one UTF-8 byte to represent a character, but the number returned by <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> has to allow for the possibility that the string to be converted will consist entirely of characters that each require four bytes.</span></span>  
  
 <span data-ttu-id="6f059-473"><xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> 관계가 없으며 <xref:System.Text.UTF8Encoding.GetChars%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-473"><xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> has no relation to <xref:System.Text.UTF8Encoding.GetChars%2A>.</span></span> <span data-ttu-id="6f059-474">응용 프로그램을 사용 하면 비슷한 기능이 필요한 경우 <xref:System.Text.UTF8Encoding.GetChars%2A>를 사용 해야 <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-474">If your application needs a similar function to use with <xref:System.Text.UTF8Encoding.GetChars%2A>, it should use <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6f059-475">`GetMaxByteCount(N)` 와 같은 값은 반드시 `N* GetMaxByteCount(1)`합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-475">`GetMaxByteCount(N)` is not necessarily the same value as `N* GetMaxByteCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6f059-476">다음 예제에서는 <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> 메서드를 지정된 된 수의 문자를 인코딩하는 데 필요한 바이트의 최대 수를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-476">The following example uses the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method to return the maximum number of bytes required to encode a specified number of characters.</span></span>  
  
 [!code-cpp[System.Text.utf8encoding.getmaxbytecount example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetMaxByteCount Example/CPP/getmaxbytecount-int32.cpp#1)]
 [!code-csharp[System.Text.utf8encoding.getmaxbytecount example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetMaxByteCount Example/CS/getmaxbytecount-int32.cs#1)]
 [!code-vb[System.Text.utf8encoding.getmaxbytecount example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetMaxByteCount Example/VB/getmaxbytecount-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6f059-477">
            <paramref name="charCount" />가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-477">
              <paramref name="charCount" /> is less than zero.</span>
          </span>
          <span data-ttu-id="6f059-478">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-478">-or-</span>
          </span>
          <span data-ttu-id="6f059-479">결과 바이트 수가 정수로 반환될 수 있는 최대 수보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-479">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="6f059-480">대체가 발생했습니다(전체 설명은 [.NET Framework의 문자 인코딩](~/docs/standard/base-types/character-encoding.md) 참조).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-480">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="6f059-481">및</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-481">-and-</span>
          </span>
          <span data-ttu-id="6f059-482">
            <see cref="P:System.Text.Encoding.EncoderFallback" />이 <see cref="T:System.Text.EncoderExceptionFallback" />로 설정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-482">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxCharCount">
      <MemberSignature Language="C#" Value="public override int GetMaxCharCount (int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMaxCharCount(int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMaxCharCount (byteCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMaxCharCount(int byteCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="byteCount">
          <span data-ttu-id="6f059-483">디코딩할 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-483">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6f059-484">지정한 수의 바이트를 디코딩할 경우 생성되는 최대 문자 수를 계산합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-484">Calculates the maximum number of characters produced by decoding the specified number of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6f059-485">지정한 수의 바이트를 디코딩할 경우 생성되는 최대 문자 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-485">The maximum number of characters produced by decoding the specified number of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f059-486">필요한 정확한 배열 크기를 계산 하려면 <xref:System.Text.UTF8Encoding.GetChars%2A> 호출 결과 문자를 저장 하기 위해는 <xref:System.Text.UTF8Encoding.GetCharCount%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6f059-486">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetChars%2A> to store the resulting characters, you call the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="6f059-487">최대 배열 크기를 계산 하려면 호출는 <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6f059-487">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="6f059-488"><xref:System.Text.UTF8Encoding.GetCharCount%2A> 메서드는 일반적으로 적은 메모리를 할당 하는 동안는 <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> 메서드는 일반적으로 더 빠르게 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-488">The <xref:System.Text.UTF8Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="6f059-489"><xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> 현재 선택 된 최악의 경우를 포함 하 여 최악의 숫자, <xref:System.Text.DecoderFallback>합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-489"><xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> is a worst-case number, including the worst case for the currently selected <xref:System.Text.DecoderFallback>.</span></span> <span data-ttu-id="6f059-490">잠재적으로 큰 문자열로 대체를 선택한 경우 <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> 큰 값을 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-490">If a fallback is chosen with a potentially large string, <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> can return large values.</span></span>  
  
 <span data-ttu-id="6f059-491">대부분의 경우가이 메서드는 작은 문자열에 대해 적합 한 숫자를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-491">In most cases, this method returns reasonable numbers for small strings.</span></span> <span data-ttu-id="6f059-492">큰 문자열에 대 한 매우 큰 버퍼를 사용 하 고 버퍼를 보다 적절 한 크기를 초과 하는 드문 경우에서 오류를 catch 하는 중 하나를 선택 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-492">For large strings, you might have to choose between using very large buffers and catching errors in the rare case that a more reasonable buffer is exceeded.</span></span>  <span data-ttu-id="6f059-493">사용 하 여 다른 접근 방식을 고려해 야 할 수도 있습니다 <xref:System.Text.UTF8Encoding.GetCharCount%2A> 또는 <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-493">You might also want to consider a different approach using <xref:System.Text.UTF8Encoding.GetCharCount%2A> or <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="6f059-494"><xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> 관계가 없으며 <xref:System.Text.UTF8Encoding.GetBytes%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-494"><xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> has no relation to <xref:System.Text.UTF8Encoding.GetBytes%2A>.</span></span> <span data-ttu-id="6f059-495">응용 프로그램을 사용 하면 비슷한 기능이 필요한 경우 <xref:System.Text.UTF8Encoding.GetBytes%2A>를 사용 해야 <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-495">If your application needs a similar function to use with <xref:System.Text.UTF8Encoding.GetBytes%2A>, it should use <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6f059-496">`GetMaxCharCount(N)` 와 같은 값은 반드시 `N* GetMaxCharCount(1)`합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-496">`GetMaxCharCount(N)` is not necessarily the same value as `N* GetMaxCharCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6f059-497">다음 예제에서는 <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> 지정된 된 수의 바이트를 디코딩하여 생성 되는 최대 문자 수를 반환 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="6f059-497">The following example uses the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method to return the maximum number of characters produced by decoding a specified number of bytes.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetMaxCharCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetMaxCharCount Example/CPP/getmaxcharcount-int32.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetMaxCharCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetMaxCharCount Example/CS/getmaxcharcount-int32.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetMaxCharCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetMaxCharCount Example/VB/getmaxcharcount-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6f059-498">
            <paramref name="byteCount" />가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-498">
              <paramref name="byteCount" /> is less than zero.</span>
          </span>
          <span data-ttu-id="6f059-499">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-499">-or-</span>
          </span>
          <span data-ttu-id="6f059-500">결과 바이트 수가 정수로 반환될 수 있는 최대 수보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-500">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="6f059-501">대체가 발생했습니다(전체 설명은 [.NET Framework의 문자 인코딩](~/docs/standard/base-types/character-encoding.md) 참조).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-501">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="6f059-502">및</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-502">-and-</span>
          </span>
          <span data-ttu-id="6f059-503">
            <see cref="P:System.Text.Encoding.DecoderFallback" />이 <see cref="T:System.Text.DecoderExceptionFallback" />로 설정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-503">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetPreamble">
      <MemberSignature Language="C#" Value="public override byte[] GetPreamble ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] GetPreamble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetPreamble" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPreamble () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ GetPreamble();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6f059-504">
            <see cref="T:System.Text.UTF8Encoding" /> 인코딩 개체가 제공하도록 구성된 경우 UTF-8 형식으로 인코딩된 유니코드 바이트 순서 표시를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-504">Returns a Unicode byte order mark encoded in UTF-8 format, if the <see cref="T:System.Text.UTF8Encoding" /> encoding object is configured to supply one.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6f059-505">
            <see cref="T:System.Text.UTF8Encoding" /> 인코딩 개체가 제공하도록 구성된 경우 유니코드 바이트 순서 표시가 포함된 바이트 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-505">A byte array containing the Unicode byte order mark, if the <see cref="T:System.Text.UTF8Encoding" /> encoding object is configured to supply one.</span>
          </span>
          <span data-ttu-id="6f059-506">그렇지 않으면 이 메서드는 길이가 0인 바이트 배열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-506">Otherwise, this method returns a zero-length byte array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f059-507"><xref:System.Text.UTF8Encoding> 개체 인코딩 프로세스에서 발생 하는 바이트 시퀀스에 접두어로 추가 될 수 있는 바이트 배열에는 머리말을 제공할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-507">The <xref:System.Text.UTF8Encoding> object can provide a preamble, which is a byte array that can be prefixed to the sequence of bytes that result from the encoding process.</span></span> <span data-ttu-id="6f059-508">바이트 순서와 변환 형식, 또는 u t F를 결정 하는 디코더를 통해 바이트 순서 표시 (코드 포인트 U + FEFF)로 인코딩된 바이트 시퀀스를 앞 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-508">Prefacing a sequence of encoded bytes with a byte order mark (code point U+FEFF) helps the decoder determine the byte order and the transformation format, or UTF.</span></span> <span data-ttu-id="6f059-509">유니코드 바이트 순서 표시 (BOM) 0xEF로 serialize 되 0xBB 0xBF 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-509">The Unicode byte order mark (BOM) is serialized as 0xEF 0xBB 0xBF.</span></span> <span data-ttu-id="6f059-510">둘 다 필요 또는 u t F-8에 대 한 BOM 사용할 것을 권장 하는 유니코드 표준 인코딩하여 스트림을 note 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-510">Note that the Unicode Standard neither requires nor recommends the use of a BOM for UTF-8 encoded streams.</span></span>  
  
 <span data-ttu-id="6f059-511">인스턴스화할 수 있습니다는 <xref:System.Text.UTF8Encoding> 개체 <xref:System.Text.UTF8Encoding.GetPreamble%2A> 메서드는 다음과 같은 방법으로 유효한 BOM을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-511">You can instantiate a <xref:System.Text.UTF8Encoding> object whose <xref:System.Text.UTF8Encoding.GetPreamble%2A> method returns a valid BOM in the following ways:</span></span>  
  
-   <span data-ttu-id="6f059-512">검색 하 여는 <xref:System.Text.UTF8Encoding> 에서 반환 된 개체는 <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-512">By retrieving the <xref:System.Text.UTF8Encoding> object returned by the <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="6f059-513">호출 하 여 한 <xref:System.Text.UTF8Encoding> 생성자는 `encoderShouldEmitUTF8Identifier` 매개 변수 설정의 값 설정 하 고 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-513">By calling a <xref:System.Text.UTF8Encoding> constructor with a `encoderShouldEmitUTF8Identifier` parameter and setting its value set to `true`.</span></span>  
  
 <span data-ttu-id="6f059-514">다른 모든 <xref:System.Text.UTF8Encoding> 개체는 올바른 BOM 보다는 빈 배열을 반환 하도록 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-514">All other <xref:System.Text.UTF8Encoding> objects are configured to return an empty array rather than a valid BOM.</span></span>  
  
 <span data-ttu-id="6f059-515">태그가 지정 되지 않은 또는 부적절 하 게 태그가 지정 된 웹 같은 데이터 또는 임의 텍스트 파일 때 비즈니스 저장 없는 국가별 고려 사항, BOM 거의 특정 식별 그렇지 않으면 해당 인코딩에 대 한 참조가 손실 된 파일에 대 한 인코딩을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-515">The BOM provide nearly certain identification of an encoding for files that otherwise have lost a reference to their encoding, such as untagged or improperly tagged web data or random text files stored when a business did not have international concerns.</span></span> <span data-ttu-id="6f059-516">데이터는 일관 되 고 적절히 태그가 지정 종종 사용자 문제를 방지할 수 있는 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-516">Often user problems might be avoided if data is consistently and properly tagged.</span></span>  
  
 <span data-ttu-id="6f059-517">인코딩 형식을 제공 하는 표준, BOM은 중복 되는 부분이입니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-517">For standards that provide an encoding type, a BOM is somewhat redundant.</span></span> <span data-ttu-id="6f059-518">그러나 올바른 인코딩 헤더를 보낼 서버를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-518">However, it can be used to help a server send the correct encoding header.</span></span> <span data-ttu-id="6f059-519">또는 사용할 수 있습니다는 대체 방식으로 인코딩이 그렇지 않은 경우 손실 된 경우.</span><span class="sxs-lookup"><span data-stu-id="6f059-519">Alternatively, it can be used as a fallback in case the encoding is otherwise lost.</span></span>  
  
 <span data-ttu-id="6f059-520">BOM을 사용 하 여 몇 가지 단점이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-520">There are some disadvantages to using a BOM.</span></span> <span data-ttu-id="6f059-521">예를 들어 BOM을 사용 하는 데이터베이스 필드를 제한 하는 방법을 알아 두어야 어려울 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-521">For example, knowing how to limit the database fields that use a BOM can be difficult.</span></span> <span data-ttu-id="6f059-522">파일의 연결 문제가 될 수 또한 예를 들어 파일을 병합 될 때 데이터 중간에 불필요 한 문자가 포함 될 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-522">Concatenation of files can be a problem also, for example, when files are merged in such a way that an unnecessary character can end up in the middle of data.</span></span> <span data-ttu-id="6f059-523">그러나 몇 가지 단점 있음에도 불구 하 고 BOM 사용 하는 가장 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-523">In spite of the few disadvantages, however, the use of a BOM is highly recommended.</span></span>  
  
 <span data-ttu-id="6f059-524">바이트 순서 및 바이트 순서 표시에 대 한 자세한 내용은 유니코드 표준을 참조는 [유니코드 홈페이지](http://go.microsoft.com/fwlink/?LinkId=37123)합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-524">For more information on byte order and the byte order mark, see The Unicode Standard at the [Unicode home page](http://go.microsoft.com/fwlink/?LinkId=37123).</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="6f059-525">스트림 또는 파일로 저장 되 면 인코딩된 바이트는 제대로 디코딩을 보장 하려면 프리앰블을 사용 하 여 인코딩된 바이트 스트림의 시작 부분을 붙일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-525">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix the beginning of a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="6f059-526"><xref:System.Text.UTF8Encoding.GetBytes%2A> 메서드를 인코딩된 바이트 시퀀스로 BOM 앞에 추가 되지 않습니다; 개발자의 책임은 적절 한 바이트 스트림의 시작 부분에 BOM을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-526">Note that the <xref:System.Text.UTF8Encoding.GetBytes%2A> method does not prepend a BOM to a sequence of encoded bytes; supplying a BOM at the beginning of an appropriate byte stream is the developer's responsibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6f059-527">다음 예제에서는 <xref:System.Text.UTF8Encoding.GetPreamble%2A> 유니코드 바이트를 반환 하는 메서드 순서 utf-8 형식으로 인코딩된 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-527">The following example uses the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method to return the Unicode byte order mark encoded in UTF-8 format.</span></span> <span data-ttu-id="6f059-528">기본 생성자를 <xref:System.Text.UTF8Encoding> 프리앰블이 제공 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-528">Notice that the default constructor for <xref:System.Text.UTF8Encoding> does not provide a preamble.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetPreamble Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetPreamble Example/CPP/getpreamble-.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetPreamble Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetPreamble Example/CS/getpreamble-.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetPreamble Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetPreamble Example/VB/getpreamble-.vb#1)]  
  
 <span data-ttu-id="6f059-529">다음 예제에서는 두 개를 인스턴스화하고 <xref:System.Text.UTF8Encoding> 개체, 매개 변수가 없는 호출 하 여 첫 번째 <xref:System.Text.UTF8Encoding.%23ctor> 생성자를 호출 하 여 두 번째 및 BOM을 제공 하지 않는 <xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%29> 생성자와 해당 `encoderShouldEmitUTF8Identifier` 인수로 설정 `true`.</span><span class="sxs-lookup"><span data-stu-id="6f059-529">The following example instantiates two <xref:System.Text.UTF8Encoding> objects, the first by calling the parameterless <xref:System.Text.UTF8Encoding.%23ctor> constructor, which does not provide a BOM, and the second by calling the <xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%29> constructor with its `encoderShouldEmitUTF8Identifier` argument set to `true`.</span></span> <span data-ttu-id="6f059-530">그런 다음 호출 하는 <xref:System.Text.UTF8Encoding.GetPreamble%2A> 메서드를 UF8로 인코딩된 문자열을 작성 하기 전에 파일에 BOM을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-530">It then calls the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method to write the BOM to a file before writing a UF8-encoded string.</span></span> <span data-ttu-id="6f059-531">이 예제에서 콘솔 출력에서 볼 수 있듯이 두 번째 인코더에서 바이트를 저장 하는 파일에 첫 번째 보다 더 많은 바이트를 3 개 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-531">As the console output from the example shows, the file that saves the bytes from the second encoder has three more bytes than the first.</span></span>  
  
 [!code-csharp[System.Text.UTF8Encoding.GetPreamble#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf8encoding.getpreamble/cs/getpreamble1.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetPreamble#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf8encoding.getpreamble/vb/getpreamble1.vb#1)]  
  
 <span data-ttu-id="6f059-532">사용 하 여 파일을 비교할 수도 있습니다는 `fc` 콘솔 창에 명령 16 진수 보기 모드를 포함 하는 텍스트 편집기에서 파일을 검사할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-532">You can also compare the files by using the `fc` command in a console window, or you can inspect the files in a text editor that includes a Hex View mode.</span></span> <span data-ttu-id="6f059-533">Note에서 u t F-8을 지원 하는 편집기에서 파일을 열면 BOM이 표시 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-533">Note that when the file is opened in an editor that supports UTF-8, the BOM is not displayed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetString (bytes As Byte(), index As Integer, count As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetString(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="6f059-534">디코딩할 바이트 시퀀스를 포함하는 바이트 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-534">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="6f059-535">디코딩할 첫 번째 바이트의 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-535">The index of the first byte to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="6f059-536">디코딩할 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-536">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6f059-537">바이트 배열의 바이트 범위를 문자열로 디코딩합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-537">Decodes a range of bytes from a byte array into a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6f059-538">지정된 바이트 시퀀스에 대한 디코딩 결과가 포함된 <see cref="T:System.String" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-538">A <see cref="T:System.String" /> containing the results of decoding the specified sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f059-539">오류 검색 기능을 잘못 된 시퀀스가이 메서드가 throw 하는 <xref:System.ArgumentException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-539">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="6f059-540">오류 검색 없이 잘못 된 시퀀스는 무시 되 고 예외가 throw 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-540">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="6f059-541">디코딩할 바이트 범위 (BOM)의 바이트 순서 표시를 포함 하는 경우 인식 BOM이 아닌 형식의 메서드에 의해 반환 된 바이트 배열을 문자 U + FFFE이이 메서드에 의해 반환 되는 문자 배열에 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-541">If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="6f059-542">호출 하 여 제거할 수는 <xref:System.String.TrimStart%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6f059-542">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="6f059-543">데이터를 변환할 수는 예: 스트림에서 읽은 데이터 순차 블록 에서만에서 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-543">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="6f059-544">이 경우, 또는 사용 하 여 데이터의 양이 너무 많아 작은 블록으로 나눌 경우는 <xref:System.Text.Decoder> 또는 <xref:System.Text.Encoder> 에서 제공 되는 <xref:System.Text.UTF8Encoding.GetDecoder%2A> 메서드 또는 <xref:System.Text.UTF8Encoding.GetEncoder%2A> 메서드를 각각.</span><span class="sxs-lookup"><span data-stu-id="6f059-544">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6f059-545">다음 예제를 호출 하 여 배열을 초기화는 <xref:System.Text.UTF8Encoding.GetByteCount%2A> 메서드 정확 하 게 바이트 인코딩된 문자열 및 바이트 순서 표시 (BOM)의 크기를 추가한 다음에 대 한 필요한 지를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-545">The following example initializes an array by calling the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method to determine exactly how many bytes are required for an encoded string and then adding the size of the byte order mark (BOM).</span></span> <span data-ttu-id="6f059-546">이 예에서는 다음 호출에서 <xref:System.Text.UTF8Encoding.GetPreamble%2A> 메서드를 호출 하기 전에 배열에 BOM을 저장할는 <xref:System.Text.UTF8Encoding.GetBytes%2A> 메서드를 인코딩된 바이트 배열에 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-546">The example then calls the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method to store the BOM to the array before calling the <xref:System.Text.UTF8Encoding.GetBytes%2A> method to store the encoded bytes to the array.</span></span> <span data-ttu-id="6f059-547">이 예에서는 다음 호출에서 <xref:System.Text.UTF8Encoding.GetString%2A> 문자열을 디코딩하 메서드.</span><span class="sxs-lookup"><span data-stu-id="6f059-547">The example then calls the <xref:System.Text.UTF8Encoding.GetString%2A> method to decode the string.</span></span>  
  
 [!code-csharp[System.Text.UTF8Encoding.GetString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf8encoding.getstring/cs/getstring1.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf8encoding.getstring/vb/getstring1.vb#1)]  
  
 <span data-ttu-id="6f059-548">이 경우 디코딩된 문자열와 것 원래 문자열에서 U + FFFD 16 비트 바이트 순서 표시로 시작 하는 이후 note 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-548">Note that in this case the decoded string differs from the original string, since it begins with a 16-bit byte order mark U+FFFD.</span></span> <span data-ttu-id="6f059-549">즉, 두 문자열이 것으로 비교는 출력 문자열을 사용 하는 경우 BOM 대체 문자로 표시 됩니다 "?"입니다.</span><span class="sxs-lookup"><span data-stu-id="6f059-549">This means that the two strings will compare as unequal, and that if the string is output, the BOM will be displayed as the replacement character "?".</span></span> <span data-ttu-id="6f059-550">문자열의 시작 부분에 BOM을 제거 하려면 호출할 수 있습니다는 <xref:System.String.TrimStart%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6f059-550">To remove the BOM at the beginning of the string, you can call the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6f059-551">
            <paramref name="bytes" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-551">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6f059-552">
            <paramref name="index" /> 또는 <paramref name="count" />가 0보다 작습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-552">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="6f059-553">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-553">-or-</span>
          </span>
          <span data-ttu-id="6f059-554">
            <paramref name="index" /> 및 <paramref name="count" />가 <paramref name="bytes" />에서 올바른 범위를 나타내지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-554">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6f059-555">오류 검색이 사용되고 <paramref name="bytes" />에 잘못된 바이트 시퀀스를 포함합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-555">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="6f059-556">대체가 발생했습니다(전체 설명은 [.NET Framework의 문자 인코딩](~/docs/standard/base-types/character-encoding.md) 참조).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-556">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="6f059-557">및</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-557">-and-</span>
          </span>
          <span data-ttu-id="6f059-558">
            <see cref="P:System.Text.Encoding.DecoderFallback" />이 <see cref="T:System.Text.DecoderExceptionFallback" />로 설정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6f059-558">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetDecoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>