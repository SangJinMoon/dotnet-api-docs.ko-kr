<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="StringBuilder.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac50ef5479bab200f44f64b5f2445290b68bb885b09.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0ef5479bab200f44f64b5f2445290b68bb885b09</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Text.StringBuilder">
          <source>Represents a mutable string of characters.</source>
          <target state="translated">변경할 수 있는 문자열을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Text.StringBuilder">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>This class represents a string-like object whose value is a mutable sequence of characters.</source>
          <target state="translated">이 클래스는 값을 변경할 수 있는 문자 시퀀스로 문자열 형식 개체를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>In this section:</source>
          <target state="translated">섹션 내용</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source><bpt id="p1">[</bpt>The String and StringBuilder types<ept id="p1">](#StringAndSB)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>String 및 StringBuilder 형식<ept id="p1">](#StringAndSB)</ept></target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source><bpt id="p1">[</bpt>How StringBuilder works<ept id="p1">](#HowWorks)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder의 작동 원리<ept id="p1">](#HowWorks)</ept></target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source><bpt id="p1">[</bpt>Memory allocation<ept id="p1">](#Memory)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>메모리 할당<ept id="p1">](#Memory)</ept></target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source><bpt id="p1">[</bpt>Instantiating a StringBuilder object<ept id="p1">](#Instantiating)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder 개체 인스턴스화<ept id="p1">](#Instantiating)</ept></target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source><bpt id="p1">[</bpt>Calling StringBuilder methods<ept id="p1">](#Calling)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder 메서드 호출<ept id="p1">](#Calling)</ept></target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source><bpt id="p1">[</bpt>Performing StringBuilder operations<ept id="p1">](#Operations)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder 작업 수행<ept id="p1">](#Operations)</ept></target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source><bpt id="p1">[</bpt>Iterating StringBuilder characters<ept id="p1">](#Iterating)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder 문자를 반복합니다.<ept id="p1">](#Iterating)</ept></target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source><bpt id="p1">[</bpt>Adding text to a StringBuilder object<ept id="p1">](#Adding)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder 개체에 텍스트 추가<ept id="p1">](#Adding)</ept></target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source><bpt id="p1">[</bpt>Deleting text from a StringBuilder object<ept id="p1">](#Deleting)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder 개체에서 텍스트를 삭제합니다.<ept id="p1">](#Deleting)</ept></target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source><bpt id="p1">[</bpt>Modifying the text in a StringBuilder object<ept id="p1">](#Modifying)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder 개체의 텍스트를 수정합니다.<ept id="p1">](#Modifying)</ept></target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source><bpt id="p1">[</bpt>Searching the text in a StringBuilder object<ept id="p1">](#Searching)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder 개체에서 텍스트 검색<ept id="p1">](#Searching)</ept></target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source><bpt id="p1">[</bpt>Converting the StringBuilder object to a string<ept id="p1">](#Converting)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder 개체를 문자열로 변환<ept id="p1">](#Converting)</ept></target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The String and StringBuilder types</source>
          <target state="translated">String 및 StringBuilder 형식</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Although <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> and <ph id="ph2">&lt;xref:System.String&gt;</ph> both represent sequences of characters, they are implemented differently.</source>
          <target state="translated">하지만 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 및 <ph id="ph2">&lt;xref:System.String&gt;</ph> 둘 다 시퀀스를 나타내는 문자은 다르게 구현 됩니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source><ph id="ph1">&lt;xref:System.String&gt;</ph> is an immutable type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.String&gt;</ph> 변경할 수 없는 형식이입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>That is, each operation that appears to modify a <ph id="ph1">&lt;xref:System.String&gt;</ph> object actually creates a new string.</source>
          <target state="translated">수정 하려면 표시 되는 각 작업 즉, 한 <ph id="ph1">&lt;xref:System.String&gt;</ph> 개체는 실제로 새 문자열을 만듭니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>For example, the call to the <ph id="ph1">&lt;xref:System.String.Concat%2A?displayProperty=nameWithType&gt;</ph> method in the following C# example appears to change the value of a string variable named <ph id="ph2">`value`</ph>.</source>
          <target state="translated">예를 들어 호출 된 <ph id="ph1">&lt;xref:System.String.Concat%2A?displayProperty=nameWithType&gt;</ph> 이라는 문자열 변수 값을 변경 하려면 다음 C# 예제에서 메서드가 나타납니다 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>In fact, the <ph id="ph1">&lt;xref:System.String.Concat%2A&gt;</ph> method returns a <ph id="ph2">`value`</ph> object that has a different value and address from the <ph id="ph3">`value`</ph> object that was passed to the method.</source>
          <target state="translated">실제로 <ph id="ph1">&lt;xref:System.String.Concat%2A&gt;</ph> 메서드가 반환 되는 <ph id="ph2">`value`</ph> 에서 주소 및 다른 값을 가진 개체를는 <ph id="ph3">`value`</ph> 메서드에 전달 된 개체입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Note that the example must be compiled using the <ph id="ph1">`/unsafe`</ph> compiler option.</source>
          <target state="translated">이 예제에서는 해야 컴파일됩니다를 사용 하는 <ph id="ph1">`/unsafe`</ph> 컴파일러 옵션입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>For routines that perform extensive string manipulation (such as apps that modify a string numerous times in a loop), modifying a string repeatedly can exact a significant performance penalty.</source>
          <target state="translated">광범위 한 문자열 조작 (예: 여러 번 루프에서에서 문자열을 수정 하는 앱)를 수행 하는 루틴의 경우 문자열을 반복 해 서 수정 성능이 크게 저하를 정확한 수 있습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The alternative is to use <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>, which is a mutable string class.</source>
          <target state="translated">사용 하는 대체 항목은 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph>를 변경할 수 있는 문자열 클래스인 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Mutability means that once an instance of the class has been created, it can be modified by appending, removing, replacing, or inserting characters.</source>
          <target state="translated">클래스의 인스턴스를 만든 후이 변경할 수 있도록 추가, 제거, 교체, 또는 문자를 삽입 하 여 의미 하는 방법으로도 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>A <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object maintains a buffer to accommodate expansions to the string.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체는 문자열에 확장을 수용 하기 위해 버퍼를 유지 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>New data is appended to the buffer if room is available; otherwise, a new, larger buffer is allocated, data from the original buffer is copied to the new buffer, and the new data is then appended to the new buffer.</source>
          <target state="translated">대화방 언어가 경우 버퍼에 새 데이터가 추가 됩니다. 그렇지 않으면 새, 더 큰 버퍼를 할당 하 고 원래 버퍼의 데이터를 새 버퍼에 복사 되 고 새 데이터 그런 다음 새 버퍼에 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Although the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> class generally offers better performance than the <ph id="ph2">&lt;xref:System.String&gt;</ph> class, you should not automatically replace <ph id="ph3">&lt;xref:System.String&gt;</ph> with <ph id="ph4">&lt;xref:System.Text.StringBuilder&gt;</ph> whenever you want to manipulate strings.</source>
          <target state="translated">하지만 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 클래스에는 일반적으로 보다 더 나은 성능을 제공는 <ph id="ph2">&lt;xref:System.String&gt;</ph> 클래스 하지 자동으로 대체 해야 <ph id="ph3">&lt;xref:System.String&gt;</ph> 와 <ph id="ph4">&lt;xref:System.Text.StringBuilder&gt;</ph> 문자열을 조작 하 고 싶을 때마다 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Performance depends on the size of the string, the amount of memory to be allocated for the new string, the system on which your app is executing, and the type of operation.</source>
          <target state="translated">성능에 대해 새 문자열, 응용 프로그램을 실행 하는 시스템 및 작업 유형을 할당할 메모리의 양 문자열의 크기에 따라 달라 집니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>You should be prepared to test your app to determine whether <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> actually offers a significant performance improvement.</source>
          <target state="translated">준비 확인 하 여 앱을 테스트 해야 하는지 여부를 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 실제로 성능이 크게 향상을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Consider using the <ph id="ph1">&lt;xref:System.String&gt;</ph> class under these conditions:</source>
          <target state="translated">사용 하는 것이 좋습니다는 <ph id="ph1">&lt;xref:System.String&gt;</ph> 이러한 조건 클래스:</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>When the number of changes that your app will make to a string is small.</source>
          <target state="translated">때 앱 설정 됩니다. 문자열에 있는 변경 수는 적습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>In these cases, <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> might offer negligible or no performance improvement over <ph id="ph2">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">이러한 경우 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 수 제안을 무시할 수 또는 성능 향상을 통해 <ph id="ph2">&lt;xref:System.String&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>When you are performing a fixed number of concatenation operations, particularly with string literals.</source>
          <target state="translated">경우는 고정된 된 수의 문자열 리터럴과 함께 특히 연결 작업을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>In this case, the compiler might combine the concatenation operations into a single operation.</source>
          <target state="translated">이 경우 컴파일러는 단일 작업으로 연결 작업을 결합할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>When you have to perform extensive search operations while you are building your string.</source>
          <target state="translated">문자열을 빌드하는 동안 다양 한 검색 작업을 수행할 수 있을 때.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> class lacks search methods such as <ph id="ph2">`IndexOf`</ph> or <ph id="ph3">`StartsWith`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 와 같은 클래스에 검색 방법 <ph id="ph2">`IndexOf`</ph> 또는 <ph id="ph3">`StartsWith`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>You'll have to convert the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object to a <ph id="ph2">&lt;xref:System.String&gt;</ph> for these operations, and this can negate the performance benefit from using <ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph>.</source>
          <target state="translated">변환 해야 합니다는 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체는 <ph id="ph2">&lt;xref:System.String&gt;</ph> 하 고이 이러한 작업을 사용 하 여 성능상의 이점이 부정할 수에 대 한 <ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>For more information, see the <bpt id="p1">[</bpt>Searching the text in a StringBuilder object<ept id="p1">](#Searching)</ept> section.</source>
          <target state="translated">자세한 내용은 참조는 <bpt id="p1">[</bpt>StringBuilder 개체에서 텍스트 검색<ept id="p1">](#Searching)</ept> 섹션.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Consider using the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> class under these conditions:</source>
          <target state="translated">사용 하는 것이 좋습니다는 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 이러한 조건 클래스:</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>When you expect your app to make an unknown number of changes to a string at design time (for example, when you are using a loop to concatenate a random number of strings that contain user input).</source>
          <target state="translated">예상 하는 응용 프로그램 (예: 사용자 입력을 포함 하는 문자열의 임의의 숫자를 연결 하는 루프를 사용 하는 경우) 디자인 타임에 문자열에 변경 내용 수 알된 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>When you expect your app to make a significant number of changes to a string.</source>
          <target state="translated">문자열을 상당히 많이 변경 하 여 앱을 예상 하 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>How StringBuilder works</source>
          <target state="translated">StringBuilder의 작동 원리</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Length%2A?displayProperty=nameWithType&gt;</ph> property indicates the number of characters the <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object currently contains.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Length%2A?displayProperty=nameWithType&gt;</ph> 속성은 문자 수를 나타냅니다는 <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체에 현재 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>If you add characters to the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, its length increases until it equals the size of the <ph id="ph2">&lt;xref:System.Text.StringBuilder.Capacity%2A?displayProperty=nameWithType&gt;</ph> property, which defines the number of characters that the object can contain.</source>
          <target state="translated">문자를 추가 하는 경우는 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체의 크기를 같아질 때까지 해당 길이 증가 <ph id="ph2">&lt;xref:System.Text.StringBuilder.Capacity%2A?displayProperty=nameWithType&gt;</ph> 개체가 포함 될 수 있는 문자 수를 정의 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>If the number of added characters causes the length of the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object to exceed its current capacity, new memory is allocated, the value of the <ph id="ph2">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph> property is doubled, new characters are added to the <ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph> object, and its <ph id="ph4">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph> property is adjusted.</source>
          <target state="translated">추가 된 문자 수가 인해의 길이 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 의 값은 현재 용량, 새로운 메모리를 초과 하는 개체 할당는 <ph id="ph2">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph> 속성 두 배가 됩니다, 새 문자가 추가 되어는 <ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체 및 해당 <ph id="ph4">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph>속성 조정 됩니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Additional memory for the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object is allocated dynamically until it reaches the value defined by the <ph id="ph2">&lt;xref:System.Text.StringBuilder.MaxCapacity%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">에 대 한 추가 메모리는 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체에 정의 된 값에 도달할 때까지 동적으로 할당 되는 <ph id="ph2">&lt;xref:System.Text.StringBuilder.MaxCapacity%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>When the maximum capacity is reached, no further memory can be allocated for the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, and trying to add characters or expand it beyond its maximum capacity throws either an <ph id="ph2">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> or an <ph id="ph3">&lt;xref:System.OutOfMemoryException&gt;</ph> exception.</source>
          <target state="translated">에 대 한 없습니다 추가 메모리를 할당할 수는 최대 용량에 도달 하면는 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체 및 문자를 추가 하거나 해당 최대 용량을 초과 확장 하려는 중 하나를 throw 한 <ph id="ph2">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.OutOfMemoryException&gt;</ph> 예외입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The following example illustrates how a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object allocates new memory and increases its capacity dynamically as the string assigned to the object expands.</source>
          <target state="translated">다음 예제에서는 어떻게는 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체는 새로운 메모리를 할당 하 고 개체에 할당 된 문자열 확장 될 때 해당 용량을 늘리십시오.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The code creates a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object by calling its default (parameterless) constructor.</source>
          <target state="translated">코드는 만듭니다는 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 기본 (매개 변수가 없는) 생성자를 호출 하 여 개체입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The default capacity of this object is 16 characters, and its maximum capacity is more than 2 billion characters.</source>
          <target state="translated">이 개체의 기본 용량 16 자 이며 최대 용량 십억을 2 개 이상의 문자입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Appending the string "This is a sentence."</source>
          <target state="translated">추가 된 문자열 "This is 문장."</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>results in a new memory allocation because the string length (19 characters) exceeds the default capacity of the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">기본 용량을 초과 하는 문자열 길이 (19 문자 수) 때문에 새 메모리 할당 효과가 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The capacity of the object doubles to 32 characters, the new string is added, and the length of the object now equals 19 characters.</source>
          <target state="translated">개체의 용량을 두 배로 만듭니다 32 자로, 새 문자열 추가 되 고 개체의 길이 19 자과 같습니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The code then appends the string "This is an additional sentence."</source>
          <target state="translated">코드는 다음 추가 하는 "This is 추가 문장."</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>to the value of the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object 11 times.</source>
          <target state="translated">값에는 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 11 번 개체입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Whenever the append operation causes the length of the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object to exceed its capacity, its existing capacity is doubled and the <ph id="ph2">&lt;xref:System.Text.StringBuilder.Append%2A&gt;</ph> operation succeeds.</source>
          <target state="translated">때마다 추가 작업 하면의 길이 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 용량, 기존 용량을 초과 하는 개체의 두 배가 됩니다 및 <ph id="ph2">&lt;xref:System.Text.StringBuilder.Append%2A&gt;</ph> 작업이 성공 합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Memory allocation</source>
          <target state="translated">메모리 할당</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The default capacity of a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object is 16 characters, and its default maximum capacity is <ph id="ph2">&lt;xref:System.Int32.MaxValue?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">기본 용량은 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체가 16 자가 고 기본 최대 용량 <ph id="ph2">&lt;xref:System.Int32.MaxValue?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>These default values are used if you call the <ph id="ph1">&lt;xref:System.Text.StringBuilder.%23ctor&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.StringBuilder.%23ctor%28System.String%29&gt;</ph> constructors.</source>
          <target state="translated">이러한 기본 값이 호출 하는 경우 사용 되는 <ph id="ph1">&lt;xref:System.Text.StringBuilder.%23ctor&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Text.StringBuilder.%23ctor%28System.String%29&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>You can explicitly define the initial capacity of a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object in the following ways:</source>
          <target state="translated">초기 용량을 명시적으로 정의할 수 있습니다는 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 다음과 같은 방법으로 개체:</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>By calling any of the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> constructors that includes a <ph id="ph2">`capacity`</ph> parameter when you create the object.</source>
          <target state="translated">중 하나를 호출 하 여는 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 생성자를 포함 하는 <ph id="ph2">`capacity`</ph> 개체를 만들 때 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>By explicitly assigning a new value to the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A?displayProperty=nameWithType&gt;</ph> property to expand an existing <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">새 값을 명시적으로 할당 하 여는 <ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A?displayProperty=nameWithType&gt;</ph> 속성을 기존 확장 <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Note that the property throws an exception if the new capacity is less than the existing capacity or greater than the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object's maximum capacity.</source>
          <target state="translated">참고 새 용량 보다 크거나 용량 기존 보다 작은 경우 속성 예외를 throw 하는 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체의 최대 용량입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>By calling the <ph id="ph1">&lt;xref:System.Text.StringBuilder.EnsureCapacity%2A?displayProperty=nameWithType&gt;</ph> method with the new capacity.</source>
          <target state="translated">호출 하 여는 <ph id="ph1">&lt;xref:System.Text.StringBuilder.EnsureCapacity%2A?displayProperty=nameWithType&gt;</ph> 메서드 새 용량을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The new capacity must not be greater than the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object's maximum capacity.</source>
          <target state="translated">새 용량 보다 클 수 없습니다는 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체의 최대 용량입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>However, unlike an assignment to the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph> property, <ph id="ph2">&lt;xref:System.Text.StringBuilder.EnsureCapacity%2A&gt;</ph> does not throw an exception if the desired new capacity is less than the existing capacity; in this case, the method call has no effect.</source>
          <target state="translated">그러나에 할당 하는 달리는 <ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph> 속성 <ph id="ph2">&lt;xref:System.Text.StringBuilder.EnsureCapacity%2A&gt;</ph> 경우 예외를 throw 하지 않습니다 원하는 새 용량을 사용 하면 기존 용량 보다 적습니다;이 경우는 메서드는 영향을 주지 않습니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>If the length of the string assigned to the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object in the constructor call exceeds either the default capacity or the specified capacity, the <ph id="ph2">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph> property is set to the length of the string specified with the <ph id="ph3">`value`</ph> parameter.</source>
          <target state="translated">문자열의 길이에 할당 된 경우는 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체 생성자 호출에 기본 용량 또는 지정된 된 용량을 초과 <ph id="ph2">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph> 속성으로 지정 된 문자열의 길이 <ph id="ph3">`value`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>You can explicitly define the maximum capacity of a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object by calling the <ph id="ph2">&lt;xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29&gt;</ph> constructor.</source>
          <target state="translated">최대 용량을 명시적으로 정의할 수 있습니다는 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 호출 하 여 개체는 <ph id="ph2">&lt;xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>You can't change the maximum capacity by assigning a new value to the <ph id="ph1">&lt;xref:System.Text.StringBuilder.MaxCapacity%2A&gt;</ph> property, because it is read-only.</source>
          <target state="translated">최대 용량에 새 값을 할당 하 여 변경할 수 없습니다는 <ph id="ph1">&lt;xref:System.Text.StringBuilder.MaxCapacity%2A&gt;</ph> 속성을 읽기 전용 이기 때문에 있습니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>As the previous section shows, whenever the existing capacity is inadequate, additional memory is allocated and the capacity of a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object doubles up to the value defined by the <ph id="ph2">&lt;xref:System.Text.StringBuilder.MaxCapacity%2A&gt;</ph> property.</source>
          <target state="translated">이전 섹션으로 쇼, 기존 용량이 부족 추가 메모리가 때마다 할당의 용량는 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체에 정의 된 값 만큼 double 값은 <ph id="ph2">&lt;xref:System.Text.StringBuilder.MaxCapacity%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>In general, the default capacity and maximum capacity are adequate for most apps.</source>
          <target state="translated">일반적으로 기본 용량 및 최대 용량은 대부분의 응용 프로그램에 적합 합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>You might consider setting these values under the following conditions:</source>
          <target state="translated">다음과 같은 경우에 이러한 값을 설정 하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>If the eventual size of the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object is likely to grow exceedingly large, typically in excess of several megabytes.</source>
          <target state="translated">하는 경우의 최종 크기는 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체는 일반적으로 몇 메가바이트 보다 더 큰 많지 증가 수 있습니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>In this case, there may be some performance benefit from setting the initial <ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph> property to a significantly high value to eliminate the need for too many memory reallocations.</source>
          <target state="translated">이 경우 있을 수 있습니다 초기 설정에서 몇 가지 성능상의 이점을 <ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph> 속성 상당히 높은 값으로 너무 많은 메모리 재할당에 대 한 필요 하지 않도록 합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>If your app is running on a system with limited memory.</source>
          <target state="translated">앱 제한 된 메모리를 사용 하는 시스템에서 실행 되는 합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>In this case, you may want to consider setting the <ph id="ph1">&lt;xref:System.Text.StringBuilder.MaxCapacity%2A&gt;</ph> property to less than <ph id="ph2">&lt;xref:System.Int32.MaxValue?displayProperty=nameWithType&gt;</ph> if your app is handling large strings that may cause it to execute in a memory-constrained environment.</source>
          <target state="translated">설정 하려는 경우는 <ph id="ph1">&lt;xref:System.Text.StringBuilder.MaxCapacity%2A&gt;</ph> 속성을 보다 작은 <ph id="ph2">&lt;xref:System.Int32.MaxValue?displayProperty=nameWithType&gt;</ph> 앱 메모리 사용이 제한 된 환경에서 실행을 만들 수 있는 큰 문자열을 처리 하는 경우.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Instantiating a StringBuilder object</source>
          <target state="translated">StringBuilder 개체 인스턴스화</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>You instantiate a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object by calling one of its six overloaded class constructors, which are listed in the following table.</source>
          <target state="translated">인스턴스화하는 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 하나는 다음 표에 나열 된 6 개 오버 로드 된 클래스 생성자를 호출 하 여 개체입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Three of the constructors instantiate a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object whose value is an empty string, but set its <ph id="ph2">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Text.StringBuilder.MaxCapacity%2A&gt;</ph> values differently.</source>
          <target state="translated">인스턴스화하는 생성자 중 3 개는 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 해당 값이 빈 문자열을 설정 하지만 해당 <ph id="ph2">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Text.StringBuilder.MaxCapacity%2A&gt;</ph> 다르게 값입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The remaining three constructors define a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object that has a specific string value and capacity.</source>
          <target state="translated">나머지 세 명의 생성자 정의 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 특정 문자열 값 및 용량 개체입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Two of the three constructors use the default maximum capacity of <ph id="ph1">&lt;xref:System.Int32.MaxValue?displayProperty=nameWithType&gt;</ph>, whereas the third allows you to set the maximum capacity.</source>
          <target state="translated">기본 최대 용량을 사용 하 여 세 명의 생성자의 두 <ph id="ph1">&lt;xref:System.Int32.MaxValue?displayProperty=nameWithType&gt;</ph>, 세 번째 작업을 사용 하면 최대 용량을 설정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Constructor</source>
          <target state="translated">생성자</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>String value</source>
          <target state="translated">문자열 값</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Capacity</source>
          <target state="translated">용</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Maximum capacity</source>
          <target state="translated">최대 용량</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>16</source>
          <target state="translated">16</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Defined by the <ph id="ph1">`capacity`</ph> parameter</source>
          <target state="translated">으로 정의 되는 <ph id="ph1">`capacity`</ph> 매개 변수</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Defined by the <ph id="ph1">`capacity`</ph> parameter</source>
          <target state="translated">으로 정의 되는 <ph id="ph1">`capacity`</ph> 매개 변수</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Defined by the <ph id="ph1">`maxCapacity`</ph> parameter</source>
          <target state="translated">으로 정의 되는 <ph id="ph1">`maxCapacity`</ph> 매개 변수</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Defined by the <ph id="ph1">`value`</ph> parameter</source>
          <target state="translated">으로 정의 되는 <ph id="ph1">`value`</ph> 매개 변수</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>16 or <ph id="ph1">`value`</ph>.</source>
          <target state="translated">16 또는 <ph id="ph1">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source><ph id="ph1">&lt;xref:System.String.Length%2A&gt;</ph>, whichever is greater</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.String.Length%2A&gt;</ph>는 값 중 큰</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Defined by the <ph id="ph1">`value`</ph> parameter</source>
          <target state="translated">으로 정의 되는 <ph id="ph1">`value`</ph> 매개 변수</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Defined by the <ph id="ph1">`capacity`</ph> parameter or <ph id="ph2">`value`</ph>.</source>
          <target state="translated">으로 정의 되는 <ph id="ph1">`capacity`</ph> 매개 변수 또는 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source><ph id="ph1">&lt;xref:System.String.Length%2A&gt;</ph>, whichever is greater.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.String.Length%2A&gt;</ph>는 값 중 큰 합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Defined by <ph id="ph1">`value`</ph>.</source>
          <target state="translated">정의 방법 <ph id="ph1">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source><ph id="ph1">&lt;xref:System.String.Substring%2A&gt;</ph>(<ph id="ph2">`startIndex`</ph>, <ph id="ph3">`length`</ph>)</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.String.Substring%2A&gt;</ph>(<ph id="ph2">`startIndex`</ph>, <ph id="ph3">`length`</ph>)</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Defined by the <ph id="ph1">`capacity`</ph> parameter or <ph id="ph2">`value`</ph>.</source>
          <target state="translated">으로 정의 되는 <ph id="ph1">`capacity`</ph> 매개 변수 또는 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source><ph id="ph1">&lt;xref:System.String.Length%2A&gt;</ph>, whichever is greater.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.String.Length%2A&gt;</ph>는 값 중 큰 합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Defined by the <ph id="ph1">`maxCapacity`</ph> parameter</source>
          <target state="translated">으로 정의 되는 <ph id="ph1">`maxCapacity`</ph> 매개 변수</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The following example uses three of these constructor overloads to instantiate <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> objects.</source>
          <target state="translated">다음 예제에서는 이러한 생성자 오버 로드 중 3 개를 사용 하 여 인스턴스화할 수 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Calling StringBuilder methods</source>
          <target state="translated">StringBuilder 메서드 호출</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Most of the methods that modify the string in a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> instance return a reference to that same instance.</source>
          <target state="translated">대부분의 문자열을 수정 하는 메서드의 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 인스턴스 동일한 해당 인스턴스에 대 한 참조를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>This enables you to call <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> methods in two ways:</source>
          <target state="translated">이렇게 하면 호출할 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 두 가지 방법으로 메서드:</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>You can make individual method calls and ignore the return value, as the following example does.</source>
          <target state="translated">개별 메서드를 호출 하 고 다음 예제에서는 마찬가지로 반환 값을 무시 수 있습니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>You can make a series of method calls in a single statement.</source>
          <target state="translated">단일 문에서 일련의 메서드 호출을 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>This can be convenient if you want to write a single statement that chains successive operations.</source>
          <target state="translated">연속 작업을 연결 하는 단일 문을 작성 하려는 경우 편리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The following example consolidates three method calls from the previous example into a single line of code.</source>
          <target state="translated">다음 예제에서는 한 줄의 코드를 이전 예제에서 세 개의 메서드 호출을 통합합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Performing StringBuilder operations</source>
          <target state="translated">StringBuilder 작업 수행</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>You can use the methods of the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> class to iterate, add, delete, or modify characters in a <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">메서드를 사용할 수는 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 를 반복, 추가, 삭제 또는 수정에 문자 클래스는 <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Iterating StringBuilder characters</source>
          <target state="translated">StringBuilder 문자를 반복합니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>You can access the characters in a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object by using the <ph id="ph2">&lt;xref:System.Text.StringBuilder.Chars%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">에 있는 문자에 액세스할 수 있습니다는 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 사용 하 여 개체는 <ph id="ph2">&lt;xref:System.Text.StringBuilder.Chars%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>In C#, <ph id="ph1">&lt;xref:System.Text.StringBuilder.Chars%2A&gt;</ph> is an indexer; in Visual Basic, it is the default property of the <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> class.</source>
          <target state="translated">C#에서는 <ph id="ph1">&lt;xref:System.Text.StringBuilder.Chars%2A&gt;</ph> 은 인덱서; Visual basic에서은의 기본 속성은 <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>This enables you to set or retrieve individual characters by using their index only, without explicitly referencing the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Chars%2A&gt;</ph> property.</source>
          <target state="translated">이렇게 하면 설정 하거나 명시적으로 참조 하지 않고만 인덱스를 사용 하 여 개별 문자를 검색 하는 <ph id="ph1">&lt;xref:System.Text.StringBuilder.Chars%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Characters in a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object begin at index 0 (zero) and continue to index <ph id="ph2">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph> - 1.</source>
          <target state="translated">에 문자를 입력 한 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체의 인덱스 0 (영)부터 시작 하 고 인덱싱할 계속 <ph id="ph2">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph> -1입니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Chars%2A&gt;</ph> property.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Text.StringBuilder.Chars%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>It appends ten random numbers to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, and then iterates each character.</source>
          <target state="translated">에 10 개의 난수가 추가 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체, 한 다음 각 문자를 반복 합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>If the character's Unicode category is <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType&gt;</ph>, it decreases the number by 1 (or changes the number to 9 if its value is 0).</source>
          <target state="translated">문자의 유니코드 범주 이면 <ph id="ph1">&lt;xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType&gt;</ph>, 수 1 씩 감소 (또는 해당 값이 0이 9로 수 변경).</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The example displays the contents of the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object both before and after the values of individual characters were changed.</source>
          <target state="translated">내용을 표시 하는 예제는 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 전과 후의 개별 문자 값이 변경 되었는지 모두 개체입니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Adding text to a StringBuilder object</source>
          <target state="translated">StringBuilder 개체에 텍스트 추가</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> class includes the following methods for expanding the contents of a <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 의 내용을 확장을 위한 다음 메서드를 포함 하는 클래스는 <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체:</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%2A&gt;</ph> method appends a string, a substring, a character array, a portion of a character array, a single character repeated multiple times, or the string representation of a primitive data type to a <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%2A&gt;</ph> 메서드는 추가 문자열, 부분 문자열, 문자 배열, 문자 배열의 일부 단일 문자를 여러 번 반복 하거나 기본 데이터의 문자열 표현의 형식을로 <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendLine%2A&gt;</ph> method appends a line terminator or a string along with a line terminator to a <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendLine%2A&gt;</ph> 메서드를 줄 종결자와 함께 문자열 또는 줄 종결자를 차례로 추가 <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> method appends a  to a <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> 메서드 추가 하 한 <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The string representations of objects included in the result string can reflect the formatting conventions of the current system culture or a specified culture.</source>
          <target state="translated">결과 문자열에 포함 된 개체의 문자열 표현에는 현재 시스템 문화권 또는 지정 된 문화권의 서식 지정 규칙 반영할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> method inserts a string, a substring, multiple repetitions of a string, a character array, a portion of a character array, or the string representation of a primitive data type at a specified position in the <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> 메서드 삽입 여러 반복 되는 문자열, 문자열, 부분 문자열의 지정된 된 위치에는 문자 배열, 문자 배열의 일부 또는 기본 데이터의 문자열 표현을 입력는 <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The position is defined by a zero-based index.</source>
          <target state="translated">위치는 0부터 시작 인덱스에 의해 정의 됩니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendLine%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> methods to expand the text of a <ph id="ph5">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendLine%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph>, 및 <ph id="ph4">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> 의 텍스트를 확장 하는 메서드는 <ph id="ph5">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Deleting text from a StringBuilder object</source>
          <target state="translated">StringBuilder 개체에서 텍스트를 삭제합니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> class includes methods that can reduce the size of the current <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 클래스의 현재 크기를 줄일 수 있는 메서드를 포함 <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Clear%2A&gt;</ph> method removes all characters and sets the <ph id="ph2">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph> property to zero.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Clear%2A&gt;</ph> 메서드는 모든 문자를 제거 하 고 설정의 <ph id="ph2">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph> 속성을 0으로 합니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Remove%2A&gt;</ph> method deletes a specified number of characters starting at a particular index position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Remove%2A&gt;</ph> 메서드는 지정된 된 특정 인덱스 위치에서 시작 하는 문자 수가 삭제 합니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>In addition, you can remove characters from the end of a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object by setting its <ph id="ph2">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph> property to a value that is less than the length of the current instance.</source>
          <target state="translated">또한의 끝에서 문자를 제거할 수 있습니다는 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체를 설정 하 여 해당 <ph id="ph2">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph> 속성을 현재 인스턴스의 길이 보다 작은 값입니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The following example removes some of the text from a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, displays its resulting capacity, maximum capacity, and length property values, and then calls the <ph id="ph2">&lt;xref:System.Text.StringBuilder.Clear%2A&gt;</ph> method to remove all the characters from the <ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">텍스트의 일부를 제거 하는 다음 예제는 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체를 결과 용량, 최대 용량 및 길이 속성 값을 표시 한 다음 호출에서 <ph id="ph2">&lt;xref:System.Text.StringBuilder.Clear%2A&gt;</ph> 에서 모든 문자를 제거 하는 메서드는 <ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Modifying the text in a StringBuilder object</source>
          <target state="translated">StringBuilder 개체의 텍스트를 수정합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Replace%2A?displayProperty=nameWithType&gt;</ph> method replaces all occurrences of a character or a string in the entire <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object or in a particular character range.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Replace%2A?displayProperty=nameWithType&gt;</ph> 메서드는 문자 또는 전체에 있는 문자열의 모든 항목을 바꿉니다 <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체 또는 특정 문자 범위입니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Replace%2A&gt;</ph> method to replace all exclamation points (!) with question marks (?) in the <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Text.StringBuilder.Replace%2A&gt;</ph> 물음표 (?)와 모든 느낌표 (!)에서 바꾸려면 메서드는 <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Searching the text in a StringBuilder object</source>
          <target state="translated">StringBuilder 개체에서 텍스트 검색</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> class does not include methods similar to the <ph id="ph2">&lt;xref:System.String.Contains%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.String.IndexOf%2A?displayProperty=nameWithType&gt;</ph>, and <ph id="ph4">&lt;xref:System.String.StartsWith%2A?displayProperty=nameWithType&gt;</ph> methods provided by the <ph id="ph5">&lt;xref:System.String&gt;</ph> class, which allow you to search the object for a particular character or a substring.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 클래스는 비슷한 메서드를 포함 하지는 <ph id="ph2">&lt;xref:System.String.Contains%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.String.IndexOf%2A?displayProperty=nameWithType&gt;</ph>, 및 <ph id="ph4">&lt;xref:System.String.StartsWith%2A?displayProperty=nameWithType&gt;</ph> 에서 제공 하는 메서드는 <ph id="ph5">&lt;xref:System.String&gt;</ph> 클래스는 특정 문자 또는 부분 문자열에 대 한 개체를 검색할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Determining the presence or starting character position of a substring requires that you search a <ph id="ph1">&lt;xref:System.String&gt;</ph> value by using either a string search method or a regular expression method.</source>
          <target state="translated">존재 여부를 결정 하거나 부분 문자열의 문자 위치를 시작 하려면 검색 하는 한 <ph id="ph1">&lt;xref:System.String&gt;</ph> 문자열 검색 방법 또는 정규식 메서드 중 하나를 사용 하 여 값입니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>There are four ways to implement such searches, as the following table shows.</source>
          <target state="translated">다음 표에서 같이 이러한 검색을 구현 하는 방법은 네 가지입니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Technique</source>
          <target state="translated">기술</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Pros</source>
          <target state="translated">전문가</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Cons</source>
          <target state="translated">단점</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Search string values before adding them to the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">에 추가 하기 전에 문자열 값에서 검색 된 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Useful for determining whether a substring exists.</source>
          <target state="translated">부분 문자열의 존재 여부를 확인 하는 데 유용 합니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Cannot be used when the index position of a substring is important.</source>
          <target state="translated">부분 문자열의 인덱스 위치는 중요 한 경우에 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Call <ph id="ph1">&lt;xref:System.Text.StringBuilder.ToString%2A&gt;</ph> and search the returned <ph id="ph2">&lt;xref:System.String&gt;</ph> object.</source>
          <target state="translated">호출 <ph id="ph1">&lt;xref:System.Text.StringBuilder.ToString%2A&gt;</ph> 반환 된 검색 <ph id="ph2">&lt;xref:System.String&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Easy to use if you assign all the text to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, and then begin to modify it.</source>
          <target state="translated">사용 하기 쉬운 텍스트를 할당 하는 경우는 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체를 수정 하기 시작 합니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Cumbersome to repeatedly call <ph id="ph1">&lt;xref:System.Text.StringBuilder.ToString%2A&gt;</ph> if you must make modifications before all text is added to the <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">반복적으로 호출 하는 경우 다루기 <ph id="ph1">&lt;xref:System.Text.StringBuilder.ToString%2A&gt;</ph> 모든 텍스트에 추가 되기 전에 수정 작업을 확인 해야 하는 경우는 <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>You must remember to work from the end of the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object's text if you're making changes.</source>
          <target state="translated">끝에서 작동 하도록 주의 해야 합니다는 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 변경 하는 경우 개체의 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Use the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Chars%2A&gt;</ph> property to sequentially search a range of characters.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Text.StringBuilder.Chars%2A&gt;</ph> 속성을 순차적으로 문자 범위를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Useful if you're concerned with individual characters or a small substring.</source>
          <target state="translated">개별 문자 또는 작은 부분 문자열을 염려 하는 경우에 유용 합니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Cumbersome if the number of characters to search is large or if the search logic is complex.</source>
          <target state="translated">검색할 문자 수가 큰 경우 또는 검색 논리가 복잡 한 경우 복잡 합니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Results in very poor performance for objects that have grown very large through repeated method calls.</source>
          <target state="translated">반복된 메서드 호출을 통해 매우 큰 증가 하는 개체에 대 한 성능이 매우 저하 결과입니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Convert the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object to a <ph id="ph2">&lt;xref:System.String&gt;</ph> object, and perform modifications on the <ph id="ph3">&lt;xref:System.String&gt;</ph> object.</source>
          <target state="translated">변환에서 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체를 한 <ph id="ph2">&lt;xref:System.String&gt;</ph> 개체를에 수정 작업을 수행는 <ph id="ph3">&lt;xref:System.String&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Useful if the number of modifications is small.</source>
          <target state="translated">수정 횟수가 작을 경우에 유용 합니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Negates the performance benefit of the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> class if the number of modifications is large.</source>
          <target state="translated">성능 이점은 부정는 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 수정 횟수가 크면 클래스입니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Let's examine these techniques in greater detail.</source>
          <target state="translated">이러한 기술을 더 자세히 살펴보겠습니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>If the goal of the search is to determine whether a particular substring exists (that is, if you aren't interested in the position of the substring), you can search strings before storing them in the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">검색의 목표에 저장 하기 전에 문자열을 검색할 수 문자열이 특정 부분 (즉, 필요가 없는 경우에 부분 문자열의 위치)가 있는지 확인 하는 경우는 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The following example provides one possible implementation.</source>
          <target state="translated">다음 예에서는 가능한 한 구현을 제공합니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>It defines a <ph id="ph1">`StringBuilderFinder`</ph> class whose constructor is passed a reference to a <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object and the substring to find in the string.</source>
          <target state="translated">정의 <ph id="ph1">`StringBuilderFinder`</ph> 클래스의 생성자에 대 한 참조를 전달 되는 <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체와 문자열에서 찾을 하위 문자열입니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>In this case, the example tries to determine whether recorded temperatures are in Fahrenheit or Celsius, and adds the appropriate introductory text to the beginning of the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">이 예제에서는 기록 된 온도가 화씨 또는 섭씨로, 및에서 적절 한 소개 텍스트의 시작 부분에 추가 하는지 여부를 확인을 시도 하는 경우는 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>A random number generator is used to select an array that contains data in either degrees Celsius or degrees Fahrenheit.</source>
          <target state="translated">난수 생성기 섭씨 또는 화씨에서 데이터를 포함 하는 배열을 선택 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Call the <ph id="ph1">&lt;xref:System.Text.StringBuilder.ToString%2A?displayProperty=nameWithType&gt;</ph> method to convert the <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object to a <ph id="ph3">&lt;xref:System.String&gt;</ph> object.</source>
          <target state="translated">호출의 <ph id="ph1">&lt;xref:System.Text.StringBuilder.ToString%2A?displayProperty=nameWithType&gt;</ph> 변환 하는 메서드는 <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체를 한 <ph id="ph3">&lt;xref:System.String&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>You can search the string by using methods such as <ph id="ph1">&lt;xref:System.String.LastIndexOf%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.String.StartsWith%2A?displayProperty=nameWithType&gt;</ph>, or you can use regular expressions and the <ph id="ph3">&lt;xref:System.Text.RegularExpressions.Regex&gt;</ph> class to search for patterns.</source>
          <target state="translated">와 같은 메서드를 사용 하 여 문자열을 검색할 수 있습니다 <ph id="ph1">&lt;xref:System.String.LastIndexOf%2A?displayProperty=nameWithType&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.String.StartsWith%2A?displayProperty=nameWithType&gt;</ph>, 또는 정규식을 사용할 수 있습니다 및 <ph id="ph3">&lt;xref:System.Text.RegularExpressions.Regex&gt;</ph> 패턴을 검색 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Because both <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> and <ph id="ph2">&lt;xref:System.String&gt;</ph> objects use UTF-16 encoding to store characters, the index positions of characters, substrings, and regular expression matches are the same in both objects.</source>
          <target state="translated">때문에 둘 다 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 및 <ph id="ph2">&lt;xref:System.String&gt;</ph> 문자, 부분 문자열의 인덱스 위치에 문자를 저장 하기 위해 인코딩을 u t F-16을 사용 하 여 개체 및 정규식 일치 항목은 두 개체 모두에서 동일 합니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>This enables you to use <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> methods to make changes at the same position at which that text is found in the <ph id="ph2">&lt;xref:System.String&gt;</ph> object.</source>
          <target state="translated">이렇게 하면 사용 하도록 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 해당 텍스트에서 찾을 수 같은 위치에서 변경 하는 메서드는 <ph id="ph2">&lt;xref:System.String&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>If you adopt this approach, you should work from the end of the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object to its beginning so that you don't have to repeatedly convert the <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object to a string.</source>
          <target state="translated">끝에서 작동 해야이 방식을 채택 하는 경우는 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 를 반복적으로 변환 하는 것이 않아도 해당 시작 하는 개체는 <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체를 문자열로 합니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The following example illustrates this approach.</source>
          <target state="translated">다음 예제에서 이 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>It stores four occurrences of each letter of the English alphabet in a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">4 개에 영어 알파벳의 각 문자를 저장 한 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>It then converts the text to a <ph id="ph1">&lt;xref:System.String&gt;</ph> object and uses a regular expression to identify the starting position of each four-character sequence.</source>
          <target state="translated">텍스트를 다음 변환 된 <ph id="ph1">&lt;xref:System.String&gt;</ph> 개체 및 정규식을 사용 하 여 각 4 자리 시퀀스의 시작 위치를 식별 합니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Finally, it adds an underscore before each four-character sequence except for the first sequence, and converts the first character of the sequence to uppercase.</source>
          <target state="translated">마지막으로, 첫 번째 시퀀스를 제외 하 고 각 4 자리 시퀀스 앞에 밑줄을 추가 하 고 대문자로 시퀀스의 첫 번째 문자를 변환 합니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Use the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Chars%2A?displayProperty=nameWithType&gt;</ph> property to sequentially search a range of characters in a <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Text.StringBuilder.Chars%2A?displayProperty=nameWithType&gt;</ph> 속성에 있는 문자의 범위를 순차적으로 검색을 <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>This approach may not be practical if the number of characters to be searched is large or the search logic is particularly complex.</source>
          <target state="translated">검색할 문자 수가 또는 검색 논리는 특히 복잡 한 경우이 방법은 실용적 아닐 수 있습니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>For the performance implications of character-by-character index-based access for very large, chunked <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> objects, see the documentation for the <ph id="ph2">&lt;xref:System.Text.StringBuilder.Chars%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">문자-인덱스 기반 액세스에 대 한 성능에 미치는 영향에 대 한 매우 큰, chunked <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체에 대 한 설명서를 참조 하십시오.는 <ph id="ph2">&lt;xref:System.Text.StringBuilder.Chars%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The following example is identical in functionality to the previous example but differs in implementation.</source>
          <target state="translated">다음 예제는 앞의 예와 기능이 동일 하지만에 구현 방식이 달라 합니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>It uses the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Chars%2A&gt;</ph> property to detect when a character value has changed, inserts an underscore at that position, and converts the first character in the new sequence to uppercase.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Text.StringBuilder.Chars%2A&gt;</ph> 문자 값이 변경 되는 시기를 감지 하는 속성 해당 위치에 밑줄을 삽입 하 고 새 시퀀스의 첫 번째 문자를 대문자로 변환 합니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Store all the unmodified text in the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, call the <ph id="ph2">&lt;xref:System.Text.StringBuilder.ToString%2A?displayProperty=nameWithType&gt;</ph> method to convert the <ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph> object to a <ph id="ph4">&lt;xref:System.String&gt;</ph> object, and perform the modifications on the <ph id="ph5">&lt;xref:System.String&gt;</ph> object.</source>
          <target state="translated">수정 되지 않은 모든 텍스트에 저장할는 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체를 호출 하는 <ph id="ph2">&lt;xref:System.Text.StringBuilder.ToString%2A?displayProperty=nameWithType&gt;</ph> 변환 하는 메서드는 <ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체를 <ph id="ph4">&lt;xref:System.String&gt;</ph> 개체를에 수정 작업을 수행는 <ph id="ph5">&lt;xref:System.String&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>You can use this approach if you have only a few modifications; otherwise, the cost of working with immutable strings may negate the performance benefits of using a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">약간만 수정; 있는 경우이 방법을 사용할 수 있습니다. 그렇지 않으면 변경할 수 없는 문자열 작업의 비용 사용의 성능 이점을 부정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The following example is identical in functionality to the previous two examples but differs in implementation.</source>
          <target state="translated">다음 예제에서는 앞의 두 예제 기능이 동일 하지만에 구현 방식이 달라 합니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>It creates a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, converts it to a <ph id="ph2">&lt;xref:System.String&gt;</ph> object, and then uses a regular expression to perform all remaining modifications on the string.</source>
          <target state="translated">만듭니다는 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체,으로 변환 하는 <ph id="ph2">&lt;xref:System.String&gt;</ph> 개체를 다음 정규식을 사용 하 여 문자열에서 모든 나머지 수정 작업을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.MatchEvaluator%29?displayProperty=nameWithType&gt;</ph> method uses a lambda expression to perform the replacement on each match.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.MatchEvaluator%29?displayProperty=nameWithType&gt;</ph> 메서드 각 일치 항목에 교체를 수행 하는 람다 식을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>Converting the StringBuilder object to a string</source>
          <target state="translated">StringBuilder 개체를 문자열로 변환</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>You must convert the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object to a <ph id="ph2">&lt;xref:System.String&gt;</ph> object before you can pass the string represented by the <ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph> object to a method that has a <ph id="ph4">&lt;xref:System.String&gt;</ph> parameter or display it in the user interface.</source>
          <target state="translated"><ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체에 표시되는 문자열을 <ph id="ph4">&lt;xref:System.String&gt;</ph> 매개 변수를 가진 메서드에 전달하거나 사용자 인터페이스에 표시하려면 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체를 <ph id="ph2">&lt;xref:System.String&gt;</ph> 개체로 변환해야 합니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>You perform this conversion by calling the <ph id="ph1">&lt;xref:System.Text.StringBuilder.ToString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">이 변환을 호출 하 여 수행 된 <ph id="ph1">&lt;xref:System.Text.StringBuilder.ToString%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>For an illustration, see the previous example, which calls the <ph id="ph1">&lt;xref:System.Text.StringBuilder.ToString%2A&gt;</ph> method to convert a <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object to a string so that it can be passed to a regular expression method.</source>
          <target state="translated">예시의 경우 호출 하는 이전 예제를 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Text.StringBuilder.ToString%2A&gt;</ph> 변환 하는 메서드는 <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> 문자열로 개체 정규식 메서드에 전달할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>The following example shows how to call many of the methods defined by the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> class.</source>
          <target state="translated">다음 예제에서는 다양 한 정의한 메서드를 호출 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated">에<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> 및 <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>인스턴스화할 때는 <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 호출 하 여 개체는 <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> 생성자, 길이의 용량은 <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 인스턴스 값 이상으로 증가할 수 해당 <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.StringBuilder">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">특히 호출 하는 경우 발생할 수 있습니다는 <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> 작은 문자열을 추가 하는 메서드.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="T:System.Text.StringBuilder">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor">
          <source>The string value of this instance is set to <ph id="ph1">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>, and the capacity is set to the implementation-specific default capacity.</source>
          <target state="translated">이 인스턴스의 문자열 값으로 설정 되 <ph id="ph1">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>, 용량 구현의 기본 용량으로 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor">
          <source>The following example demonstrates how to call the <ph id="ph1">&lt;xref:System.Text.StringBuilder.%23ctor%2A&gt;</ph> constructor with no parameters.</source>
          <target state="translated">다음 예제에서는 호출 하는 <ph id="ph1">&lt;xref:System.Text.StringBuilder.%23ctor%2A&gt;</ph> 매개 변수가 없는 생성자입니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.Int32)">
          <source>The suggested starting size of this instance.</source>
          <target state="translated">이 인스턴스의 제안된 시작 크기입니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> class using the specified capacity.</source>
          <target state="translated">지정된 용량을 사용하여 <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.Int32)">
          <source>The <ph id="ph1">`capacity`</ph> parameter defines the maximum number of characters that can be stored in the memory allocated by the current instance.</source>
          <target state="translated"><ph id="ph1">`capacity`</ph> 매개 변수는 현재 인스턴스에 의해 할당 된 메모리에 저장할 수 있는 문자의 최대 수를 정의 합니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.Int32)">
          <source>Its value is assigned to the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph> property.</source>
          <target state="translated">에 해당 값이 할당 된 <ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.Int32)">
          <source>If the number of characters to be stored in the current instance exceeds this <ph id="ph1">`capacity`</ph> value, the <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object allocates additional memory to store them.</source>
          <target state="translated">현재 인스턴스에 저장 될 문자 수가이 초과 하는 경우 <ph id="ph1">`capacity`</ph> 값의 <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체 하 고 저장할 추가 메모리를 할당 합니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.Int32)">
          <source>The string value of this instance is set to <ph id="ph1">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이 인스턴스의 문자열 값으로 설정 되 <ph id="ph1">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.Int32)">
          <source>If <ph id="ph1">`capacity`</ph> is zero, the implementation-specific default capacity is used.</source>
          <target state="translated">경우 <ph id="ph1">`capacity`</ph> 가 0 이면 구현의 기본 용량을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.Int32)">
          <source>The following example demonstrates how to call the <ph id="ph1">&lt;xref:System.Text.StringBuilder.%23ctor%2A&gt;</ph> constructor with a specified capacity.</source>
          <target state="translated">다음 예제에서는 호출 하는 방법을 <ph id="ph1">&lt;xref:System.Text.StringBuilder.%23ctor%2A&gt;</ph> 생성자 지정한 용량을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph>가 0보다 작은 경우</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.String)">
          <source>The string used to initialize the value of the instance.</source>
          <target state="translated">인스턴스 값을 초기화하는 데 사용되는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.String)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the new <ph id="ph2">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> will contain the empty string (that is, it contains <ph id="ph3">&lt;see cref="F:System.String.Empty" /&gt;</ph>).</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept>이 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이면 새 <ph id="ph2">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>에 빈 문자열(<ph id="ph3">&lt;see cref="F:System.String.Empty" /&gt;</ph>)이 포함됩니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> class using the specified string.</source>
          <target state="translated">지정된 문자열을 사용하여 <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.String)">
          <source>If <ph id="ph1">`value`</ph> is <ph id="ph2">`null`</ph>, the new <ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph> will contain the empty string (that is, it contains <ph id="ph4">&lt;xref:System.String.Empty&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">`value`</ph>가 <ph id="ph2">`null`</ph>이면 새 <ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph>에 빈 문자열(<ph id="ph4">&lt;xref:System.String.Empty&gt;</ph>)이 포함됩니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.String)">
          <source>The following example demonstrates how to call the <ph id="ph1">&lt;xref:System.Text.StringBuilder.%23ctor%2A&gt;</ph> constructor with the specified string.</source>
          <target state="translated">다음 예제에서는 호출 하는 방법을 <ph id="ph1">&lt;xref:System.Text.StringBuilder.%23ctor%2A&gt;</ph> 생성자 문자열을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)">
          <source>The suggested starting size of the <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>의 제안된 시작 크기입니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)">
          <source>The maximum number of characters the current string can contain.</source>
          <target state="translated">현재 문자열에 포함할 수 있는 최대 문자 수입니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> class that starts with a specified capacity and can grow to a specified maximum.</source>
          <target state="translated">지정된 용량으로 시작되어 지정된 최대 용량까지 커질 수 있는 <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)">
          <source>The <ph id="ph1">`capacity`</ph> parameter defines the maximum number of characters that can be stored in the memory allocated by the current instance.</source>
          <target state="translated"><ph id="ph1">`capacity`</ph> 매개 변수는 현재 인스턴스에 의해 할당 된 메모리에 저장할 수 있는 문자의 최대 수를 정의 합니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)">
          <source>Its value is assigned to the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph> property.</source>
          <target state="translated">에 해당 값이 할당 된 <ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)">
          <source>If the number of characters to be stored in the current instance exceeds this <ph id="ph1">`capacity`</ph> value, the <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object allocates additional memory to store them.</source>
          <target state="translated">현재 인스턴스에 저장 될 문자 수가이 초과 하는 경우 <ph id="ph1">`capacity`</ph> 값의 <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체 하 고 저장할 추가 메모리를 할당 합니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)">
          <source>If <ph id="ph1">`capacity`</ph> is zero, the implementation-specific default capacity is used.</source>
          <target state="translated">경우 <ph id="ph1">`capacity`</ph> 가 0 이면 구현의 기본 용량을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)">
          <source>The <ph id="ph1">`maxCapacity`</ph> property defines the maximum number of characters that the current instance can hold.</source>
          <target state="translated"><ph id="ph1">`maxCapacity`</ph> 속성의 현재 인스턴스에 저장할 수 있는 문자 최대 수를 정의 합니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)">
          <source>Its value is assigned to the <ph id="ph1">&lt;xref:System.Text.StringBuilder.MaxCapacity%2A&gt;</ph> property.</source>
          <target state="translated">에 해당 값이 할당 된 <ph id="ph1">&lt;xref:System.Text.StringBuilder.MaxCapacity%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)">
          <source>If the number of characters to be stored in the current instance exceeds this <ph id="ph1">`maxCapacity`</ph> value, the <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object does not allocate additional memory, but instead throws an exception.</source>
          <target state="translated">현재 인스턴스에 저장 될 문자 수가이 초과 하는 경우 <ph id="ph1">`maxCapacity`</ph> 값의 <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체가 추가 메모리를 할당 하지는 않지만 대신 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)">
          <source>The following example demonstrates how to call the <ph id="ph1">&lt;xref:System.Text.StringBuilder.%23ctor%2A&gt;</ph> constructor with a specified capacity and maximum capacity.</source>
          <target state="translated">다음 예제에서는 호출 하는 방법을 <ph id="ph1">&lt;xref:System.Text.StringBuilder.%23ctor%2A&gt;</ph> 지정 된 용량 및 최대 용량 포함 된 생성자입니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="maxCapacity" /&gt;</ph> is less than one, <ph id="ph2">&lt;paramref name="capacity" /&gt;</ph> is less than zero, or <ph id="ph3">&lt;paramref name="capacity" /&gt;</ph> is greater than <ph id="ph4">&lt;paramref name="maxCapacity" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="maxCapacity" /&gt;</ph>가 1보다 작거나 <ph id="ph2">&lt;paramref name="capacity" /&gt;</ph>가 0보다 작거나 <ph id="ph3">&lt;paramref name="capacity" /&gt;</ph>가 <ph id="ph4">&lt;paramref name="maxCapacity" /&gt;</ph>보다 큰 경우</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated">에<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> 및 <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>인스턴스화할 때는 <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 호출 하 여 개체는 <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> 생성자, 길이의 용량은 <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 인스턴스 값 이상으로 증가할 수 해당 <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">특히 호출 하는 경우 발생할 수 있습니다는 <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> 작은 문자열을 추가 하는 메서드.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32)">
          <source>The string used to initialize the value of the instance.</source>
          <target state="translated">인스턴스 값을 초기화하는 데 사용되는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the new <ph id="ph2">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> will contain the empty string (that is, it contains <ph id="ph3">&lt;see cref="F:System.String.Empty" /&gt;</ph>).</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept>이 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이면 새 <ph id="ph2">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>에 빈 문자열(<ph id="ph3">&lt;see cref="F:System.String.Empty" /&gt;</ph>)이 포함됩니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32)">
          <source>The suggested starting size of the <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>의 제안된 시작 크기입니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> class using the specified string and capacity.</source>
          <target state="translated">지정된 문자열과 용량을 사용하여 <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32)">
          <source>The <ph id="ph1">`capacity`</ph> parameter defines the maximum number of characters that can be stored in the memory allocated by the current instance.</source>
          <target state="translated"><ph id="ph1">`capacity`</ph> 매개 변수는 현재 인스턴스에 의해 할당 된 메모리에 저장할 수 있는 문자의 최대 수를 정의 합니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32)">
          <source>Its value is assigned to the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph> property.</source>
          <target state="translated">에 해당 값이 할당 된 <ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32)">
          <source>If the number of characters to be stored in the current instance exceeds this <ph id="ph1">`capacity`</ph> value, the <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object allocates additional memory to store them.</source>
          <target state="translated">현재 인스턴스에 저장 될 문자 수가이 초과 하는 경우 <ph id="ph1">`capacity`</ph> 값의 <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체 하 고 저장할 추가 메모리를 할당 합니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32)">
          <source>If <ph id="ph1">`capacity`</ph> is zero, the implementation-specific default capacity is used.</source>
          <target state="translated">경우 <ph id="ph1">`capacity`</ph> 가 0 이면 구현의 기본 용량을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32)">
          <source>The following example demonstrates how to call the <ph id="ph1">&lt;xref:System.Text.StringBuilder.%23ctor%2A&gt;</ph> constructor with an initial string and a specified capacity.</source>
          <target state="translated">다음 예제에서는 호출 하는 방법을 <ph id="ph1">&lt;xref:System.Text.StringBuilder.%23ctor%2A&gt;</ph> 생성자는 초기 문자열 및 지정 된 용량을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph>가 0보다 작은 경우</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
          <source>The string that contains the substring used to initialize the value of this instance.</source>
          <target state="translated">이 인스턴스 값을 초기화하는 데 사용된 부분 문자열이 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the new <ph id="ph2">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> will contain the empty string (that is, it contains <ph id="ph3">&lt;see cref="F:System.String.Empty" /&gt;</ph>).</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept>이 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이면 새 <ph id="ph2">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>에 빈 문자열(<ph id="ph3">&lt;see cref="F:System.String.Empty" /&gt;</ph>)이 포함됩니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
          <source>The position within <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> where the substring begins.</source>
          <target state="translated">부분 문자열이 시작되는 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept> 내의 위치입니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
          <source>The number of characters in the substring.</source>
          <target state="translated">부분 문자열에 있는 문자의 수입니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
          <source>The suggested starting size of the <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>의 제안된 시작 크기입니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> class from the specified substring and capacity.</source>
          <target state="translated">지정된 부분 문자열과 용량을 사용하여 <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
          <source>The <ph id="ph1">`capacity`</ph> parameter defines the maximum number of characters that can be stored in the memory allocated by the current instance.</source>
          <target state="translated"><ph id="ph1">`capacity`</ph> 매개 변수는 현재 인스턴스에 의해 할당 된 메모리에 저장할 수 있는 문자의 최대 수를 정의 합니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
          <source>Its value is assigned to the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph> property.</source>
          <target state="translated">에 해당 값이 할당 된 <ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
          <source>If the number of characters to be stored in the current instance exceeds this <ph id="ph1">`capacity`</ph> value, the <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object allocates additional memory to store them.</source>
          <target state="translated">현재 인스턴스에 저장 될 문자 수가이 초과 하는 경우 <ph id="ph1">`capacity`</ph> 값의 <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체 하 고 저장할 추가 메모리를 할당 합니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
          <source>If <ph id="ph1">`capacity`</ph> is zero, the implementation-specific default capacity is used.</source>
          <target state="translated">경우 <ph id="ph1">`capacity`</ph> 가 0 이면 구현의 기본 용량을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
          <source>The following example demonstrates how to call the <ph id="ph1">&lt;xref:System.Text.StringBuilder.%23ctor%2A&gt;</ph> constructor with the specified string.</source>
          <target state="translated">다음 예제에서는 호출 하는 방법을 <ph id="ph1">&lt;xref:System.Text.StringBuilder.%23ctor%2A&gt;</ph> 생성자 문자열을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph>가 0보다 작은 경우</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> plus <ph id="ph2">&lt;paramref name="length" /&gt;</ph> is not a position within <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph>와 <ph id="ph2">&lt;paramref name="length" /&gt;</ph>의 합이 <ph id="ph3">&lt;paramref name="value" /&gt;</ph> 내에 위치하지 않는 경우</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="T:System.Text.StringBuilder">
          <source>Appends the string representation of a specified object to this instance.</source>
          <target state="translated">지정된 개체의 문자열 표현을 이 인스턴스에 추가합니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Boolean)">
          <source>The Boolean value to append.</source>
          <target state="translated">추가할 Boolean 값입니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Boolean)">
          <source>Appends the string representation of a specified Boolean value to this instance.</source>
          <target state="translated">지정된 부울 값의 문자열 표현을 이 인스턴스에 추가합니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Boolean)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Boolean%29&gt;</ph> method modifies the existing instance of this class; it does not return a new class instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Boolean%29&gt;</ph> 메서드는이 클래스의 기존 인스턴스를 수정를 새 클래스 인스턴스를 반환 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Boolean)">
          <source>Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, as the following example illustrates.</source>
          <target state="translated">이 인해를 호출할 수는 메서드 또는 속성에 대 한 기존 참조 있으며 반환 값을 할당할 필요가 없습니다는 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 다음 예제와 같이 개체입니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Boolean%29&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Boolean.ToString?displayProperty=nameWithType&gt;</ph> method to get the string representation of <ph id="ph3">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Boolean%29&gt;</ph> 메서드 호출의 <ph id="ph2">&lt;xref:System.Boolean.ToString?displayProperty=nameWithType&gt;</ph> 의 문자열 표현을 가져올 메서드를 <ph id="ph3">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Boolean)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Boolean)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">이 인스턴스의 값이 커지면 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>가 초과됩니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Boolean)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated">에<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> 및 <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>인스턴스화할 때는 <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 호출 하 여 개체는 <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> 생성자, 길이의 용량은 <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 인스턴스 값 이상으로 증가할 수 해당 <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Boolean)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">특히 호출 하는 경우 발생할 수 있습니다는 <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> 작은 문자열을 추가 하는 메서드.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Byte)">
          <source>The value to append.</source>
          <target state="translated">추가할 값입니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Byte)">
          <source>Appends the string representation of a specified 8-bit unsigned integer to this instance.</source>
          <target state="translated">지정된 8비트 부호 없는 정수의 문자열 표현을 이 인스턴스에 추가합니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Byte)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Byte)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Byte%29&gt;</ph> method modifies the existing instance of this class; it does not return a new class instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Byte%29&gt;</ph> 메서드는이 클래스의 기존 인스턴스를 수정를 새 클래스 인스턴스를 반환 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Byte)">
          <source>Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, as the following example illustrates.</source>
          <target state="translated">이 인해를 호출할 수는 메서드 또는 속성에 대 한 기존 참조 있으며 반환 값을 할당할 필요가 없습니다는 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 다음 예제와 같이 개체입니다.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Byte)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Byte%29&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Byte.ToString%28System.IFormatProvider%29&gt;</ph> method to get the string representation of <ph id="ph3">`value`</ph> for the current culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Byte%29&gt;</ph> 메서드 호출의 <ph id="ph2">&lt;xref:System.Byte.ToString%28System.IFormatProvider%29&gt;</ph> 의 문자열 표현을 가져올 메서드를 <ph id="ph3">`value`</ph> 현재 문화권에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Byte)">
          <source>To control the formatting of <ph id="ph1">`value`</ph>, call the <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> method.</source>
          <target state="translated">형식을 제어 하기 위해 <ph id="ph1">`value`</ph>, 호출 된 <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Byte)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Byte)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">이 인스턴스의 값이 커지면 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>가 초과됩니다.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Byte)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated">에<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> 및 <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>인스턴스화할 때는 <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 호출 하 여 개체는 <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> 생성자, 길이의 용량은 <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 인스턴스 값 이상으로 증가할 수 해당 <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Byte)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">특히 호출 하는 경우 발생할 수 있습니다는 <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> 작은 문자열을 추가 하는 메서드.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char)">
          <source>The UTF-16-encoded code unit to append.</source>
          <target state="translated">추가할 UTF-16 인코딩된 코드 단위입니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char)">
          <source>Appends the string representation of a specified <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> object to this instance.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> 개체의 문자열 표현을 이 인스턴스에 추가합니다.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Char%29&gt;</ph> method modifies the existing instance of this class; it does not return a new class instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Char%29&gt;</ph> 메서드는이 클래스의 기존 인스턴스를 수정를 새 클래스 인스턴스를 반환 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char)">
          <source>Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, as the following example illustrates.</source>
          <target state="translated">이 인해를 호출할 수는 메서드 또는 속성에 대 한 기존 참조 있으며 반환 값을 할당할 필요가 없습니다는 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 다음 예제와 같이 개체입니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">이 인스턴스의 값이 커지면 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>가 초과됩니다.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated">에<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> 및 <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>인스턴스화할 때는 <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 호출 하 여 개체는 <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> 생성자, 길이의 용량은 <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 인스턴스 값 이상으로 증가할 수 해당 <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">특히 호출 하는 경우 발생할 수 있습니다는 <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> 작은 문자열을 추가 하는 메서드.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char[])">
          <source>The array of characters to append.</source>
          <target state="translated">추가할 문자 배열입니다.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char[])">
          <source>Appends the string representation of the Unicode characters in a specified array to this instance.</source>
          <target state="translated">지정된 배열의 유니코드 문자에 대한 문자열 표현을 이 인스턴스에 추가합니다.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char[])">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char[])">
          <source>This method appends all the characters in the specified array to the current instance in the same order as they appear in <ph id="ph1">`value`</ph>.</source>
          <target state="translated">이 메서드를 지정 된 배열에 있는 모든 문자가 현재 인스턴스에 추가 같은 순서로 표시 된 대로 <ph id="ph1">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char[])">
          <source>If <ph id="ph1">`value`</ph> is <ph id="ph2">`null`</ph>, no changes are made.</source>
          <target state="translated">경우 <ph id="ph1">`value`</ph> 은 <ph id="ph2">`null`</ph>, 변경 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char[])">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Char%5B%5D%29&gt;</ph> method modifies the existing instance of this class; it does not return a new class instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Char%5B%5D%29&gt;</ph> 메서드는이 클래스의 기존 인스턴스를 수정를 새 클래스 인스턴스를 반환 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char[])">
          <source>Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, as the following example illustrates.</source>
          <target state="translated">이 인해를 호출할 수는 메서드 또는 속성에 대 한 기존 참조 있으며 반환 값을 할당할 필요가 없습니다는 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 다음 예제와 같이 개체입니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char[])">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char[])">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">이 인스턴스의 값이 커지면 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>가 초과됩니다.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char[])">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated">에<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> 및 <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>인스턴스화할 때는 <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 호출 하 여 개체는 <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> 생성자, 길이의 용량은 <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 인스턴스 값 이상으로 증가할 수 해당 <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char[])">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">특히 호출 하는 경우 발생할 수 있습니다는 <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> 작은 문자열을 추가 하는 메서드.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Decimal)">
          <source>The value to append.</source>
          <target state="translated">추가할 값입니다.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Decimal)">
          <source>Appends the string representation of a specified decimal number to this instance.</source>
          <target state="translated">지정된 10진수의 문자열 표현을 이 인스턴스에 추가합니다.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Decimal)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Decimal)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Decimal%29&gt;</ph> method modifies the existing instance of this class; it does not return a new class instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Decimal%29&gt;</ph> 메서드는이 클래스의 기존 인스턴스를 수정를 새 클래스 인스턴스를 반환 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Decimal)">
          <source>Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, as the following example illustrates.</source>
          <target state="translated">이 인해를 호출할 수는 메서드 또는 속성에 대 한 기존 참조 있으며 반환 값을 할당할 필요가 없습니다는 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 다음 예제와 같이 개체입니다.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Decimal)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Decimal%29&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Decimal.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> method to get the string representation of <ph id="ph3">`value`</ph> for the current culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Decimal%29&gt;</ph> 메서드 호출의 <ph id="ph2">&lt;xref:System.Decimal.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> 의 문자열 표현을 가져올 메서드를 <ph id="ph3">`value`</ph> 현재 문화권에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Decimal)">
          <source>To control the formatting of <ph id="ph1">`value`</ph>, call the <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> method.</source>
          <target state="translated">형식을 제어 하기 위해 <ph id="ph1">`value`</ph>, 호출 된 <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Decimal)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Decimal)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">이 인스턴스의 값이 커지면 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>가 초과됩니다.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Decimal)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated">에<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> 및 <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>인스턴스화할 때는 <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 호출 하 여 개체는 <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> 생성자, 길이의 용량은 <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 인스턴스 값 이상으로 증가할 수 해당 <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Decimal)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">특히 호출 하는 경우 발생할 수 있습니다는 <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> 작은 문자열을 추가 하는 메서드.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Double)">
          <source>The value to append.</source>
          <target state="translated">추가할 값입니다.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Double)">
          <source>Appends the string representation of a specified double-precision floating-point number to this instance.</source>
          <target state="translated">지정된 배정밀도 부동 소수점 숫자의 문자열 표현을 이 인스턴스에 추가합니다.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Double)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Double)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Double%29&gt;</ph> method modifies the existing instance of this class; it does not return a new class instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Double%29&gt;</ph> 메서드는이 클래스의 기존 인스턴스를 수정를 새 클래스 인스턴스를 반환 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Double)">
          <source>Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, as the following example illustrates.</source>
          <target state="translated">이 인해를 호출할 수는 메서드 또는 속성에 대 한 기존 참조 있으며 반환 값을 할당할 필요가 없습니다는 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 다음 예제와 같이 개체입니다.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Double)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Double%29&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Double.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> method to get the string representation of <ph id="ph3">`value`</ph> for the current culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Double%29&gt;</ph> 메서드 호출의 <ph id="ph2">&lt;xref:System.Double.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> 의 문자열 표현을 가져올 메서드를 <ph id="ph3">`value`</ph> 현재 문화권에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Double)">
          <source>To control the formatting of <ph id="ph1">`value`</ph>, call the <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> method.</source>
          <target state="translated">형식을 제어 하기 위해 <ph id="ph1">`value`</ph>, 호출 된 <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Double)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Double)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">이 인스턴스의 값이 커지면 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>가 초과됩니다.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Double)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated">에<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> 및 <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>인스턴스화할 때는 <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 호출 하 여 개체는 <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> 생성자, 길이의 용량은 <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 인스턴스 값 이상으로 증가할 수 해당 <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Double)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">특히 호출 하는 경우 발생할 수 있습니다는 <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> 작은 문자열을 추가 하는 메서드.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Int16)">
          <source>The value to append.</source>
          <target state="translated">추가할 값입니다.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Int16)">
          <source>Appends the string representation of a specified 16-bit signed integer to this instance.</source>
          <target state="translated">지정된 16비트 부호 있는 정수의 문자열 표현을 이 인스턴스에 추가합니다.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Int16)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Int16)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Int16%29&gt;</ph> method modifies the existing instance of this class; it does not return a new class instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Int16%29&gt;</ph> 메서드는이 클래스의 기존 인스턴스를 수정를 새 클래스 인스턴스를 반환 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Int16)">
          <source>Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, as the following example illustrates.</source>
          <target state="translated">이 인해를 호출할 수는 메서드 또는 속성에 대 한 기존 참조 있으며 반환 값을 할당할 필요가 없습니다는 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 다음 예제와 같이 개체입니다.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Int16)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Int16%29&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Int16.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> method to get the string representation of <ph id="ph3">`value`</ph> for the current culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Int16%29&gt;</ph> 메서드 호출의 <ph id="ph2">&lt;xref:System.Int16.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> 의 문자열 표현을 가져올 메서드를 <ph id="ph3">`value`</ph> 현재 문화권에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Int16)">
          <source>To control the formatting of <ph id="ph1">`value`</ph>, call the <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> method.</source>
          <target state="translated">형식을 제어 하기 위해 <ph id="ph1">`value`</ph>, 호출 된 <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Int16)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Int16)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">이 인스턴스의 값이 커지면 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>가 초과됩니다.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Int16)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated">에<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> 및 <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>인스턴스화할 때는 <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 호출 하 여 개체는 <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> 생성자, 길이의 용량은 <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 인스턴스 값 이상으로 증가할 수 해당 <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Int16)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">특히 호출 하는 경우 발생할 수 있습니다는 <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> 작은 문자열을 추가 하는 메서드.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Int32)">
          <source>The value to append.</source>
          <target state="translated">추가할 값입니다.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Int32)">
          <source>Appends the string representation of a specified 32-bit signed integer to this instance.</source>
          <target state="translated">지정된 32비트 부호 있는 정수의 문자열 표현을 이 인스턴스에 추가합니다.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Int32)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Int32%29&gt;</ph> method modifies the existing instance of this class; it does not return a new class instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Int32%29&gt;</ph> 메서드는이 클래스의 기존 인스턴스를 수정를 새 클래스 인스턴스를 반환 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Int32)">
          <source>Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, as the following example illustrates.</source>
          <target state="translated">이 인해를 호출할 수는 메서드 또는 속성에 대 한 기존 참조 있으며 반환 값을 할당할 필요가 없습니다는 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 다음 예제와 같이 개체입니다.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Int32%29&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Int32.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> method to get the string representation of <ph id="ph3">`value`</ph> for the current culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Int32%29&gt;</ph> 메서드 호출의 <ph id="ph2">&lt;xref:System.Int32.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> 의 문자열 표현을 가져올 메서드를 <ph id="ph3">`value`</ph> 현재 문화권에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Int32)">
          <source>To control the formatting of <ph id="ph1">`value`</ph>, call the <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> method.</source>
          <target state="translated">형식을 제어 하기 위해 <ph id="ph1">`value`</ph>, 호출 된 <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Int32)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Int32)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">이 인스턴스의 값이 커지면 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>가 초과됩니다.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Int32)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated">에<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> 및 <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>인스턴스화할 때는 <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 호출 하 여 개체는 <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> 생성자, 길이의 용량은 <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 인스턴스 값 이상으로 증가할 수 해당 <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Int32)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">특히 호출 하는 경우 발생할 수 있습니다는 <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> 작은 문자열을 추가 하는 메서드.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Int64)">
          <source>The value to append.</source>
          <target state="translated">추가할 값입니다.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Int64)">
          <source>Appends the string representation of a specified 64-bit signed integer to this instance.</source>
          <target state="translated">지정된 64비트 부호 있는 정수의 문자열 표현을 이 인스턴스에 추가합니다.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Int64)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Int64)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Int64%29&gt;</ph> method modifies the existing instance of this class; it does not return a new class instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Int64%29&gt;</ph> 메서드는이 클래스의 기존 인스턴스를 수정를 새 클래스 인스턴스를 반환 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Int64)">
          <source>Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, as the following example illustrates.</source>
          <target state="translated">이 인해를 호출할 수는 메서드 또는 속성에 대 한 기존 참조 있으며 반환 값을 할당할 필요가 없습니다는 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 다음 예제와 같이 개체입니다.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Int64)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Int64%29&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Int64.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> to get the string representation of <ph id="ph3">`value`</ph> for the current culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Int64%29&gt;</ph> 메서드 호출의 <ph id="ph2">&lt;xref:System.Int64.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> 의 문자열 표현을 가져올 <ph id="ph3">`value`</ph> 현재 문화권에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Int64)">
          <source>To control the formatting of <ph id="ph1">`value`</ph>, call the <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> method.</source>
          <target state="translated">형식을 제어 하기 위해 <ph id="ph1">`value`</ph>, 호출 된 <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Int64)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Int64)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">이 인스턴스의 값이 커지면 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>가 초과됩니다.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Int64)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated">에<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> 및 <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>인스턴스화할 때는 <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 호출 하 여 개체는 <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> 생성자, 길이의 용량은 <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 인스턴스 값 이상으로 증가할 수 해당 <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Int64)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">특히 호출 하는 경우 발생할 수 있습니다는 <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> 작은 문자열을 추가 하는 메서드.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Object)">
          <source>The object to append.</source>
          <target state="translated">추가할 개체입니다.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Object)">
          <source>Appends the string representation of a specified object to this instance.</source>
          <target state="translated">지정된 개체의 문자열 표현을 이 인스턴스에 추가합니다.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Object)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Object%29&gt;</ph> method modifies the existing instance of this class; it does not return a new class instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Object%29&gt;</ph> 메서드는이 클래스의 기존 인스턴스를 수정를 새 클래스 인스턴스를 반환 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Object)">
          <source>Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, as the following example illustrates.</source>
          <target state="translated">이 인해를 호출할 수는 메서드 또는 속성에 대 한 기존 참조 있으며 반환 값을 할당할 필요가 없습니다는 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 다음 예제와 같이 개체입니다.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Object)">
          <source>It defines a <ph id="ph1">`Dog`</ph> class, creates a <ph id="ph2">`Dog`</ph> object, and makes three calls to the <ph id="ph3">&lt;xref:System.Text.StringBuilder.Append%2A&gt;</ph> method to create a string that contains the dog's name and breed.</source>
          <target state="translated">정의 <ph id="ph1">`Dog`</ph> 클래스, 만들어집니다는 <ph id="ph2">`Dog`</ph> 개체와 세 번 호출 하는 <ph id="ph3">&lt;xref:System.Text.StringBuilder.Append%2A&gt;</ph> dog의 이름 및 종류를 포함 하는 문자열을 만드는 메서드를 합니다.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Object%29&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Object.ToString%2A?displayProperty=nameWithType&gt;</ph> method to get the string representation of <ph id="ph3">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Object%29&gt;</ph> 메서드 호출의 <ph id="ph2">&lt;xref:System.Object.ToString%2A?displayProperty=nameWithType&gt;</ph> 의 문자열 표현을 가져올 메서드를 <ph id="ph3">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Object)">
          <source>If <ph id="ph1">`value`</ph> is <ph id="ph2">`null`</ph>, no changes are made to the <ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">경우 <ph id="ph1">`value`</ph> 은 <ph id="ph2">`null`</ph>에 변경 되지 않습니다는 <ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Object)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Object)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">이 인스턴스의 값이 커지면 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>가 초과됩니다.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Object)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated">에<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> 및 <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>인스턴스화할 때는 <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 호출 하 여 개체는 <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> 생성자, 길이의 용량은 <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 인스턴스 값 이상으로 증가할 수 해당 <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Object)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">특히 호출 하는 경우 발생할 수 있습니다는 <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> 작은 문자열을 추가 하는 메서드.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.SByte)">
          <source>The value to append.</source>
          <target state="translated">추가할 값입니다.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.SByte)">
          <source>Appends the string representation of a specified 8-bit signed integer to this instance.</source>
          <target state="translated">지정된 8비트 부호 있는 정수의 문자열 표현을 이 인스턴스에 추가합니다.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.SByte)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.SByte)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.SByte%29&gt;</ph> method modifies the existing instance of this class; it does not return a new class instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.SByte%29&gt;</ph> 메서드는이 클래스의 기존 인스턴스를 수정를 새 클래스 인스턴스를 반환 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.SByte)">
          <source>Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, as the following example illustrates.</source>
          <target state="translated">이 인해를 호출할 수는 메서드 또는 속성에 대 한 기존 참조 있으며 반환 값을 할당할 필요가 없습니다는 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 다음 예제와 같이 개체입니다.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.SByte)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.SByte%29&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.SByte.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> method  to get the string representation of <ph id="ph3">`value`</ph> for the current culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.SByte%29&gt;</ph> 메서드 호출의 <ph id="ph2">&lt;xref:System.SByte.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> 의 문자열 표현을 가져올 메서드를 <ph id="ph3">`value`</ph> 현재 문화권에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.SByte)">
          <source>To control the formatting of <ph id="ph1">`value`</ph>, call the <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> method.</source>
          <target state="translated">형식을 제어 하기 위해 <ph id="ph1">`value`</ph>, 호출 된 <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.SByte)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.SByte)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">이 인스턴스의 값이 커지면 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>가 초과됩니다.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.SByte)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated">에<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> 및 <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>인스턴스화할 때는 <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 호출 하 여 개체는 <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> 생성자, 길이의 용량은 <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 인스턴스 값 이상으로 증가할 수 해당 <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.SByte)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">특히 호출 하는 경우 발생할 수 있습니다는 <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> 작은 문자열을 추가 하는 메서드.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Single)">
          <source>The value to append.</source>
          <target state="translated">추가할 값입니다.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Single)">
          <source>Appends the string representation of a specified single-precision floating-point number to this instance.</source>
          <target state="translated">지정된 단정밀도 부동 소수점 숫자의 문자열 표현을 이 인스턴스에 추가합니다.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Single)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Single)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Single%29&gt;</ph> method modifies the existing instance of this class; it does not return a new class instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Single%29&gt;</ph> 메서드는이 클래스의 기존 인스턴스를 수정를 새 클래스 인스턴스를 반환 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Single)">
          <source>Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, as the following example illustrates.</source>
          <target state="translated">이 인해를 호출할 수는 메서드 또는 속성에 대 한 기존 참조 있으며 반환 값을 할당할 필요가 없습니다는 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 다음 예제와 같이 개체입니다.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Single)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Single%29&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Single.ToString%2A?displayProperty=nameWithType&gt;</ph> method to get the string representation of <ph id="ph3">`value`</ph> for the current culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Single%29&gt;</ph> 메서드 호출의 <ph id="ph2">&lt;xref:System.Single.ToString%2A?displayProperty=nameWithType&gt;</ph> 의 문자열 표현을 가져올 메서드를 <ph id="ph3">`value`</ph> 현재 문화권에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Single)">
          <source>To control the formatting of <ph id="ph1">`value`</ph>, call the <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> method.</source>
          <target state="translated">형식을 제어 하기 위해 <ph id="ph1">`value`</ph>, 호출 된 <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Single)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Single)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">이 인스턴스의 값이 커지면 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>가 초과됩니다.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Single)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated">에<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> 및 <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>인스턴스화할 때는 <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 호출 하 여 개체는 <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> 생성자, 길이의 용량은 <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 인스턴스 값 이상으로 증가할 수 해당 <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Single)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">특히 호출 하는 경우 발생할 수 있습니다는 <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> 작은 문자열을 추가 하는 메서드.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.String)">
          <source>The string to append.</source>
          <target state="translated">추가할 문자열입니다.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.String)">
          <source>Appends a copy of the specified string to this instance.</source>
          <target state="translated">지정된 문자열의 복사본을 이 인스턴스의 끝에 추가합니다.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.String)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.String%29&gt;</ph> method modifies the existing instance of this class; it does not return a new class instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.String%29&gt;</ph> 메서드는이 클래스의 기존 인스턴스를 수정를 새 클래스 인스턴스를 반환 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.String)">
          <source>Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, as the following example illustrates.</source>
          <target state="translated">이 인해를 호출할 수는 메서드 또는 속성에 대 한 기존 참조 있으며 반환 값을 할당할 필요가 없습니다는 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 다음 예제와 같이 개체입니다.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.String)">
          <source>If <ph id="ph1">`value`</ph> is <ph id="ph2">`null`</ph>, no changes are made.</source>
          <target state="translated">경우 <ph id="ph1">`value`</ph> 은 <ph id="ph2">`null`</ph>, 변경 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.String)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.String)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">이 인스턴스의 값이 커지면 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>가 초과됩니다.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.String)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated">에<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> 및 <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>인스턴스화할 때는 <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 호출 하 여 개체는 <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> 생성자, 길이의 용량은 <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 인스턴스 값 이상으로 증가할 수 해당 <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.String)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">특히 호출 하는 경우 발생할 수 있습니다는 <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> 작은 문자열을 추가 하는 메서드.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.UInt16)">
          <source>The value to append.</source>
          <target state="translated">추가할 값입니다.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.UInt16)">
          <source>Appends the string representation of a specified 16-bit unsigned integer to this instance.</source>
          <target state="translated">지정된 16비트 부호 없는 정수의 문자열 표현을 이 인스턴스에 추가합니다.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.UInt16)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.UInt16)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.UInt16%29&gt;</ph> method modifies the existing instance of this class; it does not return a new class instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.UInt16%29&gt;</ph> 메서드는이 클래스의 기존 인스턴스를 수정를 새 클래스 인스턴스를 반환 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.UInt16)">
          <source>Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, as the following example illustrates.</source>
          <target state="translated">이 인해를 호출할 수는 메서드 또는 속성에 대 한 기존 참조 있으며 반환 값을 할당할 필요가 없습니다는 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 다음 예제와 같이 개체입니다.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.UInt16)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.UInt16%29&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.UInt16.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> method to get the string representation of <ph id="ph3">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.UInt16%29&gt;</ph> 메서드 호출의 <ph id="ph2">&lt;xref:System.UInt16.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> 의 문자열 표현을 가져올 메서드를 <ph id="ph3">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.UInt16)">
          <source>To control the formatting of <ph id="ph1">`value`</ph>, call the <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> method.</source>
          <target state="translated">형식을 제어 하기 위해 <ph id="ph1">`value`</ph>, 호출 된 <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.UInt16)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.UInt16)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">이 인스턴스의 값이 커지면 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>가 초과됩니다.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.UInt16)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated">에<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> 및 <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>인스턴스화할 때는 <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 호출 하 여 개체는 <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> 생성자, 길이의 용량은 <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 인스턴스 값 이상으로 증가할 수 해당 <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.UInt16)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">특히 호출 하는 경우 발생할 수 있습니다는 <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> 작은 문자열을 추가 하는 메서드.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.UInt32)">
          <source>The value to append.</source>
          <target state="translated">추가할 값입니다.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.UInt32)">
          <source>Appends the string representation of a specified 32-bit unsigned integer to this instance.</source>
          <target state="translated">지정된 32비트 부호 없는 정수의 문자열 표현을 이 인스턴스에 추가합니다.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.UInt32)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.UInt32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.UInt32%29&gt;</ph> method modifies the existing instance of this class; it does not return a new class instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.UInt32%29&gt;</ph> 메서드는이 클래스의 기존 인스턴스를 수정를 새 클래스 인스턴스를 반환 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.UInt32)">
          <source>Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, as the following example illustrates.</source>
          <target state="translated">이 인해를 호출할 수는 메서드 또는 속성에 대 한 기존 참조 있으며 반환 값을 할당할 필요가 없습니다는 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 다음 예제와 같이 개체입니다.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.UInt32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.UInt32%29&gt;</ph> calls the <ph id="ph2">&lt;xref:System.UInt32.ToString%2A?displayProperty=nameWithType&gt;</ph> method to get the string representation of <ph id="ph3">`value`</ph> for the current culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.UInt32%29&gt;</ph> 호출은 <ph id="ph2">&lt;xref:System.UInt32.ToString%2A?displayProperty=nameWithType&gt;</ph> 의 문자열 표현을 가져올 메서드를 <ph id="ph3">`value`</ph> 현재 문화권에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.UInt32)">
          <source>To control the formatting of <ph id="ph1">`value`</ph>, call the <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> method.</source>
          <target state="translated">형식을 제어 하기 위해 <ph id="ph1">`value`</ph>, 호출 된 <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.UInt32)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.UInt32)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">이 인스턴스의 값이 커지면 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>가 초과됩니다.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.UInt32)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated">에<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> 및 <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>인스턴스화할 때는 <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 호출 하 여 개체는 <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> 생성자, 길이의 용량은 <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 인스턴스 값 이상으로 증가할 수 해당 <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.UInt32)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">특히 호출 하는 경우 발생할 수 있습니다는 <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> 작은 문자열을 추가 하는 메서드.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.UInt64)">
          <source>The value to append.</source>
          <target state="translated">추가할 값입니다.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.UInt64)">
          <source>Appends the string representation of a specified 64-bit unsigned integer to this instance.</source>
          <target state="translated">지정된 64비트 부호 없는 정수의 문자열 표현을 이 인스턴스에 추가합니다.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.UInt64)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.UInt64)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.UInt64%29&gt;</ph> method modifies the existing instance of this class; it does not return a new class instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.UInt64%29&gt;</ph> 메서드는이 클래스의 기존 인스턴스를 수정를 새 클래스 인스턴스를 반환 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.UInt64)">
          <source>Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, as the following example illustrates.</source>
          <target state="translated">이 인해를 호출할 수는 메서드 또는 속성에 대 한 기존 참조 있으며 반환 값을 할당할 필요가 없습니다는 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 다음 예제와 같이 개체입니다.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.UInt64)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.UInt64%29&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.UInt64.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> method to get the string representation of <ph id="ph3">`value`</ph> for the current culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.UInt64%29&gt;</ph> 메서드 호출의 <ph id="ph2">&lt;xref:System.UInt64.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> 의 문자열 표현을 가져올 메서드를 <ph id="ph3">`value`</ph> 현재 문화권에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.UInt64)">
          <source>To control the formatting of <ph id="ph1">`value`</ph>, call the <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> method.</source>
          <target state="translated">형식을 제어 하기 위해 <ph id="ph1">`value`</ph>, 호출 된 <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.UInt64)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.UInt64)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">이 인스턴스의 값이 커지면 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>가 초과됩니다.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.UInt64)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated">에<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> 및 <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>인스턴스화할 때는 <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 호출 하 여 개체는 <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> 생성자, 길이의 용량은 <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 인스턴스 값 이상으로 증가할 수 해당 <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.UInt64)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">특히 호출 하는 경우 발생할 수 있습니다는 <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> 작은 문자열을 추가 하는 메서드.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char,System.Int32)">
          <source>The character to append.</source>
          <target state="translated">추가할 문자입니다.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char,System.Int32)">
          <source>The number of times to append <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept>을 추가할 횟수입니다.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char,System.Int32)">
          <source>Appends a specified number of copies of the string representation of a Unicode character to this instance.</source>
          <target state="translated">유니코드 문자에 대한 문자열 표현의 지정된 복사본 수를 이 인스턴스에 추가합니다.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char,System.Int32)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Char%2CSystem.Int32%29&gt;</ph> method modifies the existing instance of this class; it does not return a new class instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Char%2CSystem.Int32%29&gt;</ph> 메서드는이 클래스의 기존 인스턴스를 수정를 새 클래스 인스턴스를 반환 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char,System.Int32)">
          <source>Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, as the following example illustrates.</source>
          <target state="translated">이 인해를 호출할 수는 메서드 또는 속성에 대 한 기존 참조 있으며 반환 값을 할당할 필요가 없습니다는 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 다음 예제와 같이 개체입니다.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char,System.Int32)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="repeatCount" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="repeatCount" /&gt;</ph>가 0보다 작은 경우</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char,System.Int32)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">이 인스턴스의 값이 커지면 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>가 초과됩니다.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char,System.Int32)">
          <source>Out of memory.</source>
          <target state="translated">메모리가 부족합니다.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char,System.Int32)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated">에<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> 및 <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>인스턴스화할 때는 <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 호출 하 여 개체는 <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> 생성자, 길이의 용량은 <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 인스턴스 값 이상으로 증가할 수 해당 <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char,System.Int32)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">특히 호출 하는 경우 발생할 수 있습니다는 <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> 작은 문자열을 추가 하는 메서드.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char*,System.Int32)">
          <source>A pointer to an array of characters.</source>
          <target state="translated">문자의 배열에 대한 포인터입니다.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char*,System.Int32)">
          <source>The number of characters in the array.</source>
          <target state="translated">배열에 있는 문자의 수입니다.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char*,System.Int32)">
          <source>Appends an array of Unicode characters starting at a specified address to this instance.</source>
          <target state="translated">지정된 주소에서 시작하는 유니코드 문자의 배열을 이 인스턴스에 추가합니다.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char*,System.Int32)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char*,System.Int32)">
          <source>This method appends <ph id="ph1">`valueCount`</ph> characters starting at address <ph id="ph2">`value`</ph> to the current instance.</source>
          <target state="translated">이 메서드는 추가 <ph id="ph1">`valueCount`</ph> 주소에서 시작 하는 문자 <ph id="ph2">`value`</ph> 현재 인스턴스를 합니다.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char*,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Char%2A%2CSystem.Int32%29&gt;</ph> method modifies the existing instance of this class; it does not return a new class instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Char%2A%2CSystem.Int32%29&gt;</ph> 메서드는이 클래스의 기존 인스턴스를 수정를 새 클래스 인스턴스를 반환 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char*,System.Int32)">
          <source>Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">이 인해를 호출할 수는 메서드 또는 속성에 대 한 기존 참조 있으며 반환 값을 할당할 필요가 없습니다는 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char*,System.Int32)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="valueCount" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="valueCount" /&gt;</ph>가 0보다 작은 경우</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char*,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char*,System.Int32)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">이 인스턴스의 값이 커지면 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>가 초과됩니다.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is a null pointer.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>이(가) null 포인터입니다.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char*,System.Int32)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated">에<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> 및 <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>인스턴스화할 때는 <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 호출 하 여 개체는 <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> 생성자, 길이의 용량은 <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 인스턴스 값 이상으로 증가할 수 해당 <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char*,System.Int32)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">특히 호출 하는 경우 발생할 수 있습니다는 <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> 작은 문자열을 추가 하는 메서드.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
          <source>A character array.</source>
          <target state="translated">문자 배열입니다.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
          <source>The starting position in <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept>의 시작 위치입니다.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters to append.</source>
          <target state="translated">추가할 문자 수입니다.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
          <source>Appends the string representation of a specified subarray of Unicode characters to this instance.</source>
          <target state="translated">유니코드 문자의 지정된 하위 배열에 대한 문자열 표현을 이 인스턴스에 추가합니다.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
          <source>This method appends the specified range of characters in <ph id="ph1">`value`</ph> to the current instance.</source>
          <target state="translated">이 메서드는 지정 된 범위에 있는 문자의 추가 <ph id="ph1">`value`</ph> 현재 인스턴스에 있습니다.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
          <source>If <ph id="ph1">`value`</ph> is <ph id="ph2">`null`</ph> and <ph id="ph3">`startIndex`</ph> and <ph id="ph4">`count`</ph> are both zero, no changes are made.</source>
          <target state="translated">경우 <ph id="ph1">`value`</ph> 은 <ph id="ph2">`null`</ph> 및 <ph id="ph3">`startIndex`</ph> 및 <ph id="ph4">`count`</ph> 둘 다 0, 아니요 변경 내용이 있습니다.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> method modifies the existing instance of this class; it does not return a new class instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> 메서드는이 클래스의 기존 인스턴스를 수정를 새 클래스 인스턴스를 반환 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
          <source>Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, as the following example illustrates.</source>
          <target state="translated">이 인해를 호출할 수는 메서드 또는 속성에 대 한 기존 참조 있으며 반환 값을 할당할 필요가 없습니다는 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 다음 예제와 같이 개체입니다.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>, and <ph id="ph3">&lt;paramref name="startIndex" /&gt;</ph> and <ph id="ph4">&lt;paramref name="charCount" /&gt;</ph> are not zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>이고 <ph id="ph3">&lt;paramref name="startIndex" /&gt;</ph> 및 <ph id="ph4">&lt;paramref name="charCount" /&gt;</ph>는 0이 아닙니다.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="charCount" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="charCount" /&gt;</ph>가 0보다 작은 경우</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph>가 0보다 작은 경우</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="charCount" /&gt;</ph> is greater than the length of <ph id="ph4">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="charCount" /&gt;</ph>이 <ph id="ph4">&lt;paramref name="value" /&gt;</ph>의 길이보다 큽니다.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">이 인스턴스의 값이 커지면 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>가 초과됩니다.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated">에<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> 및 <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>인스턴스화할 때는 <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 호출 하 여 개체는 <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> 생성자, 길이의 용량은 <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 인스턴스 값 이상으로 증가할 수 해당 <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">특히 호출 하는 경우 발생할 수 있습니다는 <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> 작은 문자열을 추가 하는 메서드.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
          <source>The string that contains the substring to append.</source>
          <target state="translated">추가할 부분 문자열이 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
          <source>The starting position of the substring within <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept> 내에 있는 부분 문자열의 시작 위치입니다.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
          <source>The number of characters in <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> to append.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept>에서 추가할 문자 수입니다.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
          <source>Appends a copy of a specified substring to this instance.</source>
          <target state="translated">지정된 부분 문자열의 복사본을 이 인스턴스에 추가합니다.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
          <source>This method appends the specified range of characters in <ph id="ph1">`value`</ph> to the current instance.</source>
          <target state="translated">이 메서드는 지정 된 범위에 있는 문자의 추가 <ph id="ph1">`value`</ph> 현재 인스턴스에 있습니다.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
          <source>If <ph id="ph1">`value`</ph> is <ph id="ph2">`null`</ph> and <ph id="ph3">`startIndex`</ph> and <ph id="ph4">`count`</ph> are both zero, no changes are made.</source>
          <target state="translated">경우 <ph id="ph1">`value`</ph> 은 <ph id="ph2">`null`</ph> 및 <ph id="ph3">`startIndex`</ph> 및 <ph id="ph4">`count`</ph> 둘 다 0, 아니요 변경 내용이 있습니다.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.String%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> method modifies the existing instance of this class; it does not return a new class instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%28System.String%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> 메서드는이 클래스의 기존 인스턴스를 수정를 새 클래스 인스턴스를 반환 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
          <source>Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object, as the following example illustrates.</source>
          <target state="translated">이 인해를 호출할 수는 메서드 또는 속성에 대 한 기존 참조 있으며 반환 값을 할당할 필요가 없습니다는 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 다음 예제와 같이 개체입니다.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>, and <ph id="ph3">&lt;paramref name="startIndex" /&gt;</ph> and <ph id="ph4">&lt;paramref name="count" /&gt;</ph> are not zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>이고 <ph id="ph3">&lt;paramref name="startIndex" /&gt;</ph> 및 <ph id="ph4">&lt;paramref name="count" /&gt;</ph>는 0이 아닙니다.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph>가 0보다 작은 경우</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph>가 0보다 작은 경우</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="count" /&gt;</ph> is greater than the length of <ph id="ph4">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="count" /&gt;</ph>이 <ph id="ph4">&lt;paramref name="value" /&gt;</ph>의 길이보다 큽니다.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">이 인스턴스의 값이 커지면 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>가 초과됩니다.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated">에<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> 및 <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>인스턴스화할 때는 <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 호출 하 여 개체는 <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> 생성자, 길이의 용량은 <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 인스턴스 값 이상으로 증가할 수 해당 <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">특히 호출 하는 경우 발생할 수 있습니다는 <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> 작은 문자열을 추가 하는 메서드.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" uid="T:System.Text.StringBuilder">
          <source>Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance.</source>
          <target state="translated">서식 항목이 0개 이상 포함된 복합 서식 문자열을 처리하여 반환된 문자열을 이 인스턴스에 추가합니다.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" uid="T:System.Text.StringBuilder">
          <source>Each format item is replaced by the string representation of a corresponding object argument.</source>
          <target state="translated">각 서식 항목은 해당 개체 인수의 문자열 표현으로 바뀝니다.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>A composite format string.</source>
          <target state="translated">복합 형식 문자열입니다.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>An object to format.</source>
          <target state="translated">서식을 지정할 개체입니다.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance.</source>
          <target state="translated">서식 항목이 0개 이상 포함된 복합 서식 문자열을 처리하여 반환된 문자열을 이 인스턴스에 추가합니다.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>Each format item is replaced by the string representation of a single argument.</source>
          <target state="translated">각 서식 항목이 단일 인수의 문자열 표현으로 바뀝니다.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>A reference to this instance with <ph id="ph1">&lt;paramref name="format" /&gt;</ph> appended.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph>이 추가된 이 인스턴스에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>Each format item in <ph id="ph1">&lt;paramref name="format" /&gt;</ph> is replaced by the string representation of <ph id="ph2">&lt;paramref name="arg0" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph>의 각 서식 항목이 <ph id="ph2">&lt;paramref name="arg0" /&gt;</ph>의 문자열 표현으로 바뀝니다.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>This method uses the <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> of the .NET Framework to convert the value of an object to its text representation and embed that representation in the current <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">이 메서드는 사용 된 <bpt id="p1">[</bpt>합성 서식 지정 기능<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> 텍스트 표현으로 개체의 값을 변환 하 고 현재에서 표현을 포함 하는.NET Framework의 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items.</source>
          <target state="translated"><ph id="ph1">`format`</ph> 0 매개 변수 구성 되거나 더 많은 텍스트로와 0 개 이상의 인덱싱된 자리 표시자를 서식 항목 이라고 합니다.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>The index of the format items must be 0, to correspond to <ph id="ph1">`arg0`</ph>, the single object in the parameter list of this method.</source>
          <target state="translated">형식 항목의 인덱스 0에 해당 하도록 해야 합니다. <ph id="ph1">`arg0`</ph>를이 메서드의 매개 변수 목록에서 단일 개체입니다.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>The formatting process replaces each format item with the string representation of <ph id="ph1">`arg0`</ph>.</source>
          <target state="translated">포맷 프로세스는 각 형식 항목의 문자열 표현으로 대체 <ph id="ph1">`arg0`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>The syntax of a format item is as follows:</source>
          <target state="translated">형식 항목의 구문은 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</source>
          <target state="translated">{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>Elements in square brackets are optional.</source>
          <target state="translated">대괄호에서는 요소는 선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>The following table describes each element.</source>
          <target state="translated">다음 표에서 각 요소에 설명 합니다.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>Element</source>
          <target state="translated">요소</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source><bpt id="p1">*</bpt>index<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>index<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>The zero-based position in the parameter list of the object to be formatted.</source>
          <target state="translated">서식을 지정할 개체의 매개 변수 목록에서 0부터 시작 위치입니다.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>If the object specified by <bpt id="p1">*</bpt>index<ept id="p1">*</ept> is <ph id="ph1">`null`</ph>, the format item is replaced by <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">지정 하는 개체가 경우 <bpt id="p1">*</bpt>인덱스<ept id="p1">*</ept> 은 <ph id="ph1">`null`</ph>, 형식 항목으로 대체 되 <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>If there is no parameter in the <bpt id="p1">*</bpt>index<ept id="p1">*</ept> position, a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> is thrown.</source>
          <target state="translated">매개 변수가 없는 경우는 <bpt id="p1">*</bpt>인덱스<ept id="p1">*</ept> 위치는 <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> throw 됩니다.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></source>
          <target state="translated">,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>The minimum number of characters in the string representation of the parameter.</source>
          <target state="translated">매개 변수는 문자열 표현에 있는 문자의 최소 수입니다.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>If positive, the parameter is right-aligned; if negative, it is left-aligned.</source>
          <target state="translated">양수의 매개 변수는 오른쪽 맞춤; 음수 이면 왼쪽 맞춤 됩니다.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></source>
          <target state="translated">:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>A standard or custom format string that is supported by the parameter.</source>
          <target state="translated">매개 변수에서 지원 되는 표준 또는 사용자 지정 형식 문자열입니다.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>For the standard and custom format strings used with date and time values, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">날짜 및 시간 값으로 사용 되는 표준 및 사용자 지정 형식 문자열을 참조 하십시오. <bpt id="p1">[</bpt>표준 날짜 및 시간 형식 문자열<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> 및 <bpt id="p2">[</bpt>사용자 지정 날짜 및 시간 형식 문자열<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>For the standard and custom format strings used with numeric values, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">숫자 값으로 사용 되는 표준 및 사용자 지정 형식 문자열을 참조 하십시오. <bpt id="p1">[</bpt>표준 숫자 형식 문자열<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> 및 <bpt id="p2">[</bpt>사용자 지정 숫자 형식 문자열<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>For the standard format strings used with enumerations, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">열거형과 함께 사용 되는 표준 형식 문자열에 대 한 참조 <bpt id="p1">[</bpt>열거형 형식 문자열<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source><ph id="ph1">`arg0`</ph> represents the object to be formatted.</source>
          <target state="translated"><ph id="ph1">`arg0`</ph> 서식을 지정할 개체를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>Each format item in <ph id="ph1">`format`</ph> is replaced with the string representation of <ph id="ph2">`arg0`</ph>.</source>
          <target state="translated">각 서식 항목 <ph id="ph1">`format`</ph> 의 문자열 표현으로 바뀝니다 <ph id="ph2">`arg0`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>If the format item includes <ph id="ph1">`formatString`</ph> and <ph id="ph2">`arg0`</ph> implements the <ph id="ph3">&lt;xref:System.IFormattable&gt;</ph> interface, then <ph id="ph4">`arg0.ToString(formatString, null)`</ph> defines the formatting.</source>
          <target state="translated">서식 항목이 포함 된 경우 <ph id="ph1">`formatString`</ph> 및 <ph id="ph2">`arg0`</ph> 구현 하는 <ph id="ph3">&lt;xref:System.IFormattable&gt;</ph> 인터페이스 다음 <ph id="ph4">`arg0.ToString(formatString, null)`</ph> 서식을 정의 합니다.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>Otherwise, <ph id="ph1">`arg0.ToString()`</ph> defines the formatting.</source>
          <target state="translated">그렇지 않으면 <ph id="ph1">`arg0.ToString()`</ph> 서식을 정의 합니다.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>If the string assigned to <ph id="ph1">`format`</ph> is "Thank you for your donation of {0:####} cans of food to our charitable organization."</source>
          <target state="translated">에 할당 된 문자열이 <ph id="ph1">`format`</ph> 은 "에 기부 해 주셔서 {0: # # #} 캔을 저희 자선 기구 음식."</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>and <ph id="ph1">`arg0`</ph> is an integer with the value 10, the return value will be "Thank you for your donation of 10 cans of food to our charitable organization."</source>
          <target state="translated">및 <ph id="ph1">`arg0`</ph> 는 정수 값 10 이면 반환 값은 "10 식량 캔을 저희 자선 기구에 기부에 대 한 감사 합니다." 됩니다</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph>이 잘못되었습니다.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>The index of a format item is less than 0 (zero), or greater than or equal to 1.</source>
          <target state="translated">형식 항목의 인덱스는 0(영)보다 작고, 또는 1보다 크거나 같습니다.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>The length of the expanded string would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">확장된 문자열의 길이가 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>를 초과합니다.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated">에<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> 및 <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>인스턴스화할 때는 <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 호출 하 여 개체는 <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> 생성자, 길이의 용량은 <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 인스턴스 값 이상으로 증가할 수 해당 <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">특히 호출 하는 경우 발생할 수 있습니다는 <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> 작은 문자열을 추가 하는 메서드.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>A composite format string.</source>
          <target state="translated">복합 형식 문자열입니다.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>An array of objects to format.</source>
          <target state="translated">형식을 지정할 개체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance.</source>
          <target state="translated">서식 항목이 0개 이상 포함된 복합 서식 문자열을 처리하여 반환된 문자열을 이 인스턴스에 추가합니다.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>Each format item is replaced by the string representation of a corresponding argument in a parameter array.</source>
          <target state="translated">각 형식 항목은 매개 변수 배열에 있는 해당 인수의 문자열 표현으로 바뀝니다.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>A reference to this instance with <ph id="ph1">&lt;paramref name="format" /&gt;</ph> appended.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph>이 추가된 이 인스턴스에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>Each format item in <ph id="ph1">&lt;paramref name="format" /&gt;</ph> is replaced by the string representation of the corresponding object argument.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph>의 각 서식 항목은 해당 개체 인수의 문자열 표현으로 바뀝니다.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>This method uses the <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> of the .NET Framework to convert the value of an object to its text representation and embed that representation in the current <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">이 메서드는 사용 된 <bpt id="p1">[</bpt>합성 서식 지정 기능<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> 텍스트 표현으로 개체의 값을 변환 하 고 현재에서 표현을 포함 하는.NET Framework의 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to objects in the parameter list of this method.</source>
          <target state="translated"><ph id="ph1">`format`</ph> 0 매개 변수 구성 되거나 더 많은 텍스트로와 0 개 이상의 인덱싱된 자리 표시자를이 메서드의 매개 변수 목록에 있는 개체에 해당 하는 서식 항목 이라고 합니다.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>The formatting process replaces each format item with the string representation of the corresponding object.</source>
          <target state="translated">포맷 프로세스는 해당 개체의 문자열 표현으로 각 서식 항목을 바꿉니다.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>The syntax of a format item is as follows:</source>
          <target state="translated">형식 항목의 구문은 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</source>
          <target state="translated">{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>Elements in square brackets are optional.</source>
          <target state="translated">대괄호에서는 요소는 선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>The following table describes each element.</source>
          <target state="translated">다음 표에서 각 요소에 설명 합니다.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>Element</source>
          <target state="translated">요소</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source><bpt id="p1">*</bpt>index<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>index<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>The zero-based position in the parameter list of the object to be formatted.</source>
          <target state="translated">서식을 지정할 개체의 매개 변수 목록에서 0부터 시작 위치입니다.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>If the object specified by <bpt id="p1">*</bpt>index<ept id="p1">*</ept> is <ph id="ph1">`null`</ph>, the format item is replaced by <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">지정 하는 개체가 경우 <bpt id="p1">*</bpt>인덱스<ept id="p1">*</ept> 은 <ph id="ph1">`null`</ph>, 형식 항목으로 대체 되 <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>If there is no parameter in the <bpt id="p1">*</bpt>index<ept id="p1">*</ept> position, a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> is thrown.</source>
          <target state="translated">매개 변수가 없는 경우는 <bpt id="p1">*</bpt>인덱스<ept id="p1">*</ept> 위치는 <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> throw 됩니다.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></source>
          <target state="translated">,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>The minimum number of characters in the string representation of the parameter.</source>
          <target state="translated">매개 변수는 문자열 표현에 있는 문자의 최소 수입니다.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>If positive, the parameter is right-aligned; if negative, it is left-aligned.</source>
          <target state="translated">양수의 매개 변수는 오른쪽 맞춤; 음수 이면 왼쪽 맞춤 됩니다.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></source>
          <target state="translated">:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>A standard or custom format string that is supported by the parameter.</source>
          <target state="translated">매개 변수에서 지원 되는 표준 또는 사용자 지정 형식 문자열입니다.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>For the standard and custom format strings used with date and time values, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">날짜 및 시간 값으로 사용 되는 표준 및 사용자 지정 형식 문자열을 참조 하십시오. <bpt id="p1">[</bpt>표준 날짜 및 시간 형식 문자열<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> 및 <bpt id="p2">[</bpt>사용자 지정 날짜 및 시간 형식 문자열<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>For the standard and custom format strings used with numeric values, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">숫자 값으로 사용 되는 표준 및 사용자 지정 형식 문자열을 참조 하십시오. <bpt id="p1">[</bpt>표준 숫자 형식 문자열<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> 및 <bpt id="p2">[</bpt>사용자 지정 숫자 형식 문자열<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>For the standard format strings used with enumerations, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">열거형과 함께 사용 되는 표준 형식 문자열에 대 한 참조 <bpt id="p1">[</bpt>열거형 형식 문자열<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source><ph id="ph1">`args`</ph> represents the objects to be formatted.</source>
          <target state="translated"><ph id="ph1">`args`</ph> 서식을 지정할 개체를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>Each format item in <ph id="ph1">`format`</ph> is replaced with the string representation of the corresponding object in <ph id="ph2">`args`</ph>.</source>
          <target state="translated">각 서식 항목 <ph id="ph1">`format`</ph> 에 해당 개체의 문자열 표현으로 바뀝니다 <ph id="ph2">`args`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>If the format item includes <ph id="ph1">`formatString`</ph> and the corresponding object in <ph id="ph2">`args`</ph> implements the <ph id="ph3">&lt;xref:System.IFormattable&gt;</ph> interface, then <ph id="ph4">`args[index].ToString(formatString, provider)`</ph> defines the formatting.</source>
          <target state="translated">서식 항목이 포함 된 경우 <ph id="ph1">`formatString`</ph> 에 있는 해당 개체 및 <ph id="ph2">`args`</ph> 구현 하는 <ph id="ph3">&lt;xref:System.IFormattable&gt;</ph> 인터페이스, 다음 <ph id="ph4">`args[index].ToString(formatString, provider)`</ph> 서식을 정의 합니다.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>Otherwise, <ph id="ph1">`args[index].ToString()`</ph> defines the formatting.</source>
          <target state="translated">그렇지 않으면 <ph id="ph1">`args[index].ToString()`</ph> 서식을 정의 합니다.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>If the string assigned to <ph id="ph1">`format`</ph> is "Thank you for your donation of {0:####} cans of food to our charitable organization."</source>
          <target state="translated">에 할당 된 문자열이 <ph id="ph1">`format`</ph> 은 "에 기부 해 주셔서 {0: # # #} 캔을 저희 자선 기구 음식."</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>and <ph id="ph1">`arg0`</ph> is an integer with the value 10, the return value will be "Thank you for your donation of 10 cans of food to our charitable organization."</source>
          <target state="translated">및 <ph id="ph1">`arg0`</ph> 는 정수 값 10 이면 반환 값은 "10 식량 캔을 저희 자선 기구에 기부에 대 한 감사 합니다." 됩니다</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> or <ph id="ph2">&lt;paramref name="args" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="args" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph>이 잘못되었습니다.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>The index of a format item is less than 0 (zero), or greater than or equal to the length of the <ph id="ph1">&lt;paramref name="args" /&gt;</ph> array.</source>
          <target state="translated">형식 항목의 인덱스가 0보다 작거나 <ph id="ph1">&lt;paramref name="args" /&gt;</ph> 배열의 길이보다 크거나 같습니다.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>The length of the expanded string would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">확장된 문자열의 길이가 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>를 초과합니다.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated">에<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> 및 <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>인스턴스화할 때는 <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 호출 하 여 개체는 <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> 생성자, 길이의 용량은 <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 인스턴스 값 이상으로 증가할 수 해당 <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">특히 호출 하는 경우 발생할 수 있습니다는 <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> 작은 문자열을 추가 하는 메서드.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">문화권별 서식 지정 정보를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>A composite format string.</source>
          <target state="translated">복합 형식 문자열입니다.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>The object to format.</source>
          <target state="translated">형식을 지정할 개체입니다.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance.</source>
          <target state="translated">서식 항목이 0개 이상 포함된 복합 서식 문자열을 처리하여 반환된 문자열을 이 인스턴스에 추가합니다.</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>Each format item is replaced by the string representation of a single argument using a specified format provider.</source>
          <target state="translated">지정된 형식 공급자를 사용하여 각 서식 항목이 단일 인수의 문자열 표현으로 바뀝니다.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>After the append operation, this instance contains any data that existed before the operation, suffixed by a copy of <ph id="ph1">&lt;paramref name="format" /&gt;</ph> in which any format specification is replaced by the string representation of <ph id="ph2">&lt;paramref name="arg0" /&gt;</ph>.</source>
          <target state="translated">추가 작업 후, 이 인스턴스에는 추가 작업 이전부터 있던 데이터가 포함되고 그 뒤에 형식 사양이 <ph id="ph1">&lt;paramref name="format" /&gt;</ph>의 문자열 표현으로 바뀐  <ph id="ph2">&lt;paramref name="arg0" /&gt;</ph>의 복사본이 포함됩니다.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>This method uses the  <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> of the .NET Framework to convert the value of <ph id="ph1">`arg0`</ph> to its text representation and embed that representation in the current <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">이 메서드는 사용 된 <bpt id="p1">[</bpt>합성 서식 지정 기능<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> 의 값으로 변환 하는.NET Framework의 <ph id="ph1">`arg0`</ph> 텍스트 표현으로 현재에서 표현을 포함 하 고 <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items.</source>
          <target state="translated"><ph id="ph1">`format`</ph> 0 매개 변수 구성 되거나 더 많은 텍스트로와 0 개 이상의 인덱싱된 자리 표시자를 서식 항목 이라고 합니다.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>The index of each format item must be zero (0) since this method includes an argument list with a single argument.</source>
          <target state="translated">이 메서드에 단일 인수를 가진 인수 목록이 포함 되어 있습니다. 각 형식 항목의 인덱스 (0) 여야 합니다.</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>The formatting process replaces each format item with the string representation of <ph id="ph1">`arg0`</ph>.</source>
          <target state="translated">포맷 프로세스는 각 형식 항목의 문자열 표현으로 대체 <ph id="ph1">`arg0`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>The syntax of a format item is as follows:</source>
          <target state="translated">형식 항목의 구문은 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</source>
          <target state="translated">{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>Elements in square brackets are optional.</source>
          <target state="translated">대괄호에서는 요소는 선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>The following table describes each element.</source>
          <target state="translated">다음 표에서 각 요소에 설명 합니다.</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>Element</source>
          <target state="translated">요소</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source><bpt id="p1">*</bpt>index<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>index<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>The zero-based position in the parameter list of the object to be formatted.</source>
          <target state="translated">서식을 지정할 개체의 매개 변수 목록에서 0부터 시작 위치입니다.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>If the object specified by <bpt id="p1">*</bpt>index<ept id="p1">*</ept> is <ph id="ph1">`null`</ph>, the format item is replaced by <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">지정 하는 개체가 경우 <bpt id="p1">*</bpt>인덱스<ept id="p1">*</ept> 은 <ph id="ph1">`null`</ph>, 형식 항목으로 대체 되 <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>In this case, since the <ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%29&gt;</ph> method has a single argument in the argument list, the value of <bpt id="p1">*</bpt>index<ept id="p1">*</ept> must always be 0.</source>
          <target state="translated">이 경우 이후에 <ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%29&gt;</ph> 메서드 인수 목록의 값을 단일 인수가 있습니다. <bpt id="p1">*</bpt>인덱스<ept id="p1">*</ept> 항상 0 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>If it is not, a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> is thrown.</source>
          <target state="translated">그렇지 않을 경우는 <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> throw 됩니다.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></source>
          <target state="translated">,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>The minimum number of characters in the string representation of the parameter.</source>
          <target state="translated">매개 변수는 문자열 표현에 있는 문자의 최소 수입니다.</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>If positive, the parameter is right-aligned; if negative, it is left-aligned.</source>
          <target state="translated">양수의 매개 변수는 오른쪽 맞춤; 음수 이면 왼쪽 맞춤 됩니다.</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></source>
          <target state="translated">:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>A standard or custom format string that is supported by the parameter.</source>
          <target state="translated">매개 변수에서 지원 되는 표준 또는 사용자 지정 형식 문자열입니다.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>For the standard and custom format strings used with date and time values, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">날짜 및 시간 값으로 사용 되는 표준 및 사용자 지정 형식 문자열을 참조 하십시오. <bpt id="p1">[</bpt>표준 날짜 및 시간 형식 문자열<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> 및 <bpt id="p2">[</bpt>사용자 지정 날짜 및 시간 형식 문자열<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>For the standard and custom format strings used with numeric values, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">숫자 값으로 사용 되는 표준 및 사용자 지정 형식 문자열을 참조 하십시오. <bpt id="p1">[</bpt>표준 숫자 형식 문자열<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> 및 <bpt id="p2">[</bpt>사용자 지정 숫자 형식 문자열<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>For the standard format strings used with enumerations, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">열거형과 함께 사용 되는 표준 형식 문자열에 대 한 참조 <bpt id="p1">[</bpt>열거형 형식 문자열<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>The <ph id="ph1">`provider`</ph> parameter specifies an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation that can provide formatting information for the objects in <ph id="ph3">`args`</ph>.</source>
          <target state="translated"><ph id="ph1">`provider`</ph> 매개 변수는 지정 된 <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> 개체에 대 한 서식 지정 정보를 제공할 수 있는 구현 <ph id="ph3">`args`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source><ph id="ph1">`provider`</ph> can be any of the following:</source>
          <target state="translated"><ph id="ph1">`provider`</ph>는 다음과 같을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that provides culture-specific formatting information.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> culture 별 서식 지정 정보를 제공 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides culture-specific formatting information for <ph id="ph2">`arg0`</ph> if it is a numeric value.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 개체에 대 한 문화권별 서식 지정 정보를 제공 하는 <ph id="ph2">`arg0`</ph> 경우 숫자 값입니다.</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object that provides culture-specific formatting information for <ph id="ph2">`arg0`</ph> if it is a date and time value.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> 개체에 대 한 문화권별 서식 지정 정보를 제공 하는 <ph id="ph2">`arg0`</ph> 경우 날짜 및 시간 값입니다.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>A custom <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> implementation that provides formatting information for <ph id="ph2">`arg0`</ph>.</source>
          <target state="translated">사용자 지정 <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> 구현에 대 한 서식 지정 정보를 제공 하는 <ph id="ph2">`arg0`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>Typically, such an implementation also implements the <ph id="ph1">&lt;xref:System.ICustomFormatter&gt;</ph> interface.</source>
          <target state="translated">일반적으로 이러한 구현도 구현 하는 <ph id="ph1">&lt;xref:System.ICustomFormatter&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>If the <ph id="ph1">`provider`</ph> parameter is <ph id="ph2">`null`</ph>, formatting information is obtained from the current culture.</source>
          <target state="translated">경우는 <ph id="ph1">`provider`</ph> 매개 변수는 <ph id="ph2">`null`</ph>서식 지정, 현재 문화권에서 정보를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source><ph id="ph1">`arg0`</ph> represents the object to be formatted.</source>
          <target state="translated"><ph id="ph1">`arg0`</ph> 서식을 지정할 개체를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>Each format item in <ph id="ph1">`format`</ph> is replaced with the string representation of <ph id="ph2">`arg0`</ph>.</source>
          <target state="translated">각 서식 항목 <ph id="ph1">`format`</ph> 의 문자열 표현으로 바뀝니다 <ph id="ph2">`arg0`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>If the format item includes <ph id="ph1">`formatString`</ph> and <ph id="ph2">`arg0`</ph> implements the <ph id="ph3">&lt;xref:System.IFormattable&gt;</ph> interface, then <ph id="ph4">`arg0.ToString(formatString, provider)`</ph> defines the formatting.</source>
          <target state="translated">서식 항목이 포함 된 경우 <ph id="ph1">`formatString`</ph> 및 <ph id="ph2">`arg0`</ph> 구현 하는 <ph id="ph3">&lt;xref:System.IFormattable&gt;</ph> 인터페이스 다음 <ph id="ph4">`arg0.ToString(formatString, provider)`</ph> 서식을 정의 합니다.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>Otherwise, <ph id="ph1">`arg0.ToString()`</ph> defines the formatting.</source>
          <target state="translated">그렇지 않으면 <ph id="ph1">`arg0.ToString()`</ph> 서식을 정의 합니다.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>The following includes two calls to the <ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%29&gt;</ph> method.</source>
          <target state="translated">다음 두 호출이 포함 된는 <ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%29&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>Both use the formatting conventions of the English-Great Britain (en-GB) culture.</source>
          <target state="translated">모두 영어 Great Britain (EN-GB) 문화권의 형식 규칙을 사용합니다.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>The first inserts the string representation of a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value currency in a result string.</source>
          <target state="translated">문자열 표현을 삽입 하는 첫 번째는 <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> 결과 문자열에 통화 값입니다.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>The second inserts a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value in two places in a result string, the first including only the short date string and the second the short time string.</source>
          <target state="translated">두 번째 삽입 한 <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> 결과의 두 위치에 값 문자열에 첫 번째만 포함 하는 짧은 날짜 문자열 및 두 번째 짧은 시간 문자열입니다.</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph>이 잘못되었습니다.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>The index of a format item is less than 0 (zero), or greater than or equal to one (1).</source>
          <target state="translated">형식 항목의 인덱스가 0보다 작거나, 1보다 크거나 같습니다.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>The length of the expanded string would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">확장된 문자열의 길이가 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>를 초과합니다.</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated">에<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> 및 <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>인스턴스화할 때는 <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 호출 하 여 개체는 <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> 생성자, 길이의 용량은 <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 인스턴스 값 이상으로 증가할 수 해당 <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">특히 호출 하는 경우 발생할 수 있습니다는 <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> 작은 문자열을 추가 하는 메서드.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">문화권별 서식 지정 정보를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>A composite format string.</source>
          <target state="translated">복합 형식 문자열입니다.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>An array of objects to format.</source>
          <target state="translated">형식을 지정할 개체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance.</source>
          <target state="translated">서식 항목이 0개 이상 포함된 복합 서식 문자열을 처리하여 반환된 문자열을 이 인스턴스에 추가합니다.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>Each format item is replaced by the string representation of a corresponding argument in a parameter array using a specified format provider.</source>
          <target state="translated">각 서식 항목은 지정된 서식 공급자를 사용하여 매개 변수 배열에 있는 해당 인수의 문자열 표현으로 바뀝니다.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>After the append operation, this instance contains any data that existed before the operation, suffixed by a copy of <ph id="ph1">&lt;paramref name="format" /&gt;</ph> where any format specification is replaced by the string representation of the corresponding object argument.</source>
          <target state="translated">추가 작업 후, 이 인스턴스에는 추가 작업 이전부터 있던 데이터가 포함되고 그 뒤에 형식 사양이 해당하는 개체 인수의 문자열 표현으로 바뀐 <ph id="ph1">&lt;paramref name="format" /&gt;</ph>의 복사본이 포함됩니다.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>This method uses the <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> of the .NET Framework to convert the value of an object to its text representation and embed that representation in the current <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">이 메서드는 사용 된 <bpt id="p1">[</bpt>합성 서식 지정 기능<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> 텍스트 표현으로 개체의 값을 변환 하 고 현재에서 표현을 포함 하는.NET Framework의 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to objects in the parameter list of this method.</source>
          <target state="translated"><ph id="ph1">`format`</ph> 0 매개 변수 구성 되거나 더 많은 텍스트로와 0 개 이상의 인덱싱된 자리 표시자를이 메서드의 매개 변수 목록에 있는 개체에 해당 하는 서식 항목 이라고 합니다.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>The formatting process replaces each format item with the string representation of the corresponding object.</source>
          <target state="translated">포맷 프로세스는 해당 개체의 문자열 표현으로 각 서식 항목을 바꿉니다.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>The syntax of a format item is as follows:</source>
          <target state="translated">형식 항목의 구문은 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</source>
          <target state="translated">{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>Elements in square brackets are optional.</source>
          <target state="translated">대괄호에서는 요소는 선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>The following table describes each element.</source>
          <target state="translated">다음 표에서 각 요소에 설명 합니다.</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>Element</source>
          <target state="translated">요소</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source><bpt id="p1">*</bpt>index<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>index<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>The zero-based position in the parameter list of the object to be formatted.</source>
          <target state="translated">서식을 지정할 개체의 매개 변수 목록에서 0부터 시작 위치입니다.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>If the object specified by <bpt id="p1">*</bpt>index<ept id="p1">*</ept> is <ph id="ph1">`null`</ph>, the format item is replaced by <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">지정 하는 개체가 경우 <bpt id="p1">*</bpt>인덱스<ept id="p1">*</ept> 은 <ph id="ph1">`null`</ph>, 형식 항목으로 대체 되 <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>If there is no parameter in the <bpt id="p1">*</bpt>index<ept id="p1">*</ept> position, a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> is thrown.</source>
          <target state="translated">매개 변수가 없는 경우는 <bpt id="p1">*</bpt>인덱스<ept id="p1">*</ept> 위치는 <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> throw 됩니다.</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></source>
          <target state="translated">,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>The minimum number of characters in the string representation of the parameter.</source>
          <target state="translated">매개 변수는 문자열 표현에 있는 문자의 최소 수입니다.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>If positive, the parameter is right-aligned; if negative, it is left-aligned.</source>
          <target state="translated">양수의 매개 변수는 오른쪽 맞춤; 음수 이면 왼쪽 맞춤 됩니다.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></source>
          <target state="translated">:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>A standard or custom format string that is supported by the parameter.</source>
          <target state="translated">매개 변수에서 지원 되는 표준 또는 사용자 지정 형식 문자열입니다.</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>For the standard and custom format strings used with date and time values, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">날짜 및 시간 값으로 사용 되는 표준 및 사용자 지정 형식 문자열을 참조 하십시오. <bpt id="p1">[</bpt>표준 날짜 및 시간 형식 문자열<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> 및 <bpt id="p2">[</bpt>사용자 지정 날짜 및 시간 형식 문자열<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>For the standard and custom format strings used with numeric values, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">숫자 값으로 사용 되는 표준 및 사용자 지정 형식 문자열을 참조 하십시오. <bpt id="p1">[</bpt>표준 숫자 형식 문자열<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> 및 <bpt id="p2">[</bpt>사용자 지정 숫자 형식 문자열<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>For the standard format strings used with enumerations, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">열거형과 함께 사용 되는 표준 형식 문자열에 대 한 참조 <bpt id="p1">[</bpt>열거형 형식 문자열<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>The <ph id="ph1">`provider`</ph> parameter specifies an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation that can provide formatting information for the objects in <ph id="ph3">`args`</ph>.</source>
          <target state="translated"><ph id="ph1">`provider`</ph> 매개 변수는 지정 된 <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> 개체에 대 한 서식 지정 정보를 제공할 수 있는 구현 <ph id="ph3">`args`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source><ph id="ph1">`provider`</ph> can be any of the following:</source>
          <target state="translated"><ph id="ph1">`provider`</ph>는 다음과 같을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that provides culture-specific formatting information.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> culture 별 서식 지정 정보를 제공 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides culture-specific formatting information for numeric values in <ph id="ph2">`args`</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 숫자 값에 대 한 문화권별 서식 지정 정보를 제공 하는 개체 <ph id="ph2">`args`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object that provides culture-specific formatting information for date and time values in <ph id="ph2">`args`</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> 의 날짜 및 시간 값에 대 한 문화권별 서식 지정 정보를 제공 하는 개체 <ph id="ph2">`args`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>A custom <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> implementation that provides formatting information for one or more of the objects in <ph id="ph2">`args`</ph>.</source>
          <target state="translated">사용자 지정 <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> 하나 이상의 개체에 대 한 서식 지정 정보를 제공 하는 구현 <ph id="ph2">`args`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>Typically, such an implementation also implements the <ph id="ph1">&lt;xref:System.ICustomFormatter&gt;</ph> interface.</source>
          <target state="translated">일반적으로 이러한 구현도 구현 하는 <ph id="ph1">&lt;xref:System.ICustomFormatter&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>The second example in the next section illustrates an <ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph> method call with a custom <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation.</source>
          <target state="translated">다음 섹션에서 두 번째 예는 <ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph> 를 사용자 지정 메서드 호출 <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> 구현 합니다.</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>If the <ph id="ph1">`provider`</ph> parameter is <ph id="ph2">`null`</ph>, format provider information is obtained from the current culture.</source>
          <target state="translated">경우는 <ph id="ph1">`provider`</ph> 매개 변수는 <ph id="ph2">`null`</ph>, 현재 문화권에서 형식 공급자 정보를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source><ph id="ph1">`args`</ph> represents the objects to be formatted.</source>
          <target state="translated"><ph id="ph1">`args`</ph> 서식을 지정할 개체를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>Each format item in <ph id="ph1">`format`</ph> is replaced with the string representation of the corresponding object in <ph id="ph2">`args`</ph>.</source>
          <target state="translated">각 서식 항목 <ph id="ph1">`format`</ph> 에 해당 개체의 문자열 표현으로 바뀝니다 <ph id="ph2">`args`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>If the format item includes <ph id="ph1">`formatString`</ph> and the corresponding object in <ph id="ph2">`args`</ph> implements the <ph id="ph3">&lt;xref:System.IFormattable&gt;</ph> interface, then <ph id="ph4">`args[index].ToString(formatString, provider)`</ph> defines the formatting.</source>
          <target state="translated">서식 항목이 포함 된 경우 <ph id="ph1">`formatString`</ph> 에 있는 해당 개체 및 <ph id="ph2">`args`</ph> 구현 하는 <ph id="ph3">&lt;xref:System.IFormattable&gt;</ph> 인터페이스, 다음 <ph id="ph4">`args[index].ToString(formatString, provider)`</ph> 서식을 정의 합니다.</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>Otherwise, <ph id="ph1">`args[index].ToString()`</ph> defines the formatting.</source>
          <target state="translated">그렇지 않으면 <ph id="ph1">`args[index].ToString()`</ph> 서식을 정의 합니다.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>The following example defines a custom <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> implementation named <ph id="ph2">`CustomerFormatter`</ph> that formats a 10-digit customer number with hyphens after the fourth and seventh digits.</source>
          <target state="translated">다음 예제에서는 사용자 지정을 정의 <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> 라는 구현 <ph id="ph2">`CustomerFormatter`</ph> 네 번째와 일곱 번째 자릿수 이후 10 자리 고객 하이픈으로 번호 형식입니다.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>It is passed to the <ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph> method to create a string that includes the formatted customer number and customer name.</source>
          <target state="translated">에 전달 되는 <ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph> 메서드 서식이 지정 된 고객 번호 및 고객 이름을 포함 하는 문자열을 만듭니다.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph>이 잘못되었습니다.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>The index of a format item is less than 0 (zero), or greater than or equal to the length of the <ph id="ph1">&lt;paramref name="args" /&gt;</ph> array.</source>
          <target state="translated">형식 항목의 인덱스가 0보다 작거나 <ph id="ph1">&lt;paramref name="args" /&gt;</ph> 배열의 길이보다 크거나 같습니다.</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>The length of the expanded string would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">확장된 문자열의 길이가 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>를 초과합니다.</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated">에<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> 및 <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>인스턴스화할 때는 <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 호출 하 여 개체는 <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> 생성자, 길이의 용량은 <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 인스턴스 값 이상으로 증가할 수 해당 <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">특히 호출 하는 경우 발생할 수 있습니다는 <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> 작은 문자열을 추가 하는 메서드.</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>A composite format string.</source>
          <target state="translated">복합 형식 문자열입니다.</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>The first object to format.</source>
          <target state="translated">서식을 지정할 첫 번째 개체입니다.</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>The second object to format.</source>
          <target state="translated">서식을 지정할 두 번째 개체입니다.</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance.</source>
          <target state="translated">서식 항목이 0개 이상 포함된 복합 서식 문자열을 처리하여 반환된 문자열을 이 인스턴스에 추가합니다.</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>Each format item is replaced by the string representation of either of two arguments.</source>
          <target state="translated">각 서식 항목이 두 인수 중 하나의 문자열 표현으로 바뀝니다.</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>A reference to this instance with <ph id="ph1">&lt;paramref name="format" /&gt;</ph> appended.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph>이 추가된 이 인스턴스에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>Each format item in <ph id="ph1">&lt;paramref name="format" /&gt;</ph> is replaced by the string representation of the corresponding object argument.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph>의 각 서식 항목은 해당 개체 인수의 문자열 표현으로 바뀝니다.</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>This method uses the <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> of the .NET Framework to convert the value of an object to its text representation and embed that representation in the current <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">이 메서드는 사용 된 <bpt id="p1">[</bpt>합성 서식 지정 기능<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> 텍스트 표현으로 개체의 값을 변환 하 고 현재에서 표현을 포함 하는.NET Framework의 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to <ph id="ph2">`arg0`</ph> and <ph id="ph3">`arg1`</ph>, the two objects in the parameter list of this method.</source>
          <target state="translated"><ph id="ph1">`format`</ph> 0 매개 변수 구성 되거나 더 많은 텍스트로 0 개 이상의 인덱싱된 자리 표시자와, 해당 하는 서식 항목 이라고 <ph id="ph2">`arg0`</ph> 및 <ph id="ph3">`arg1`</ph>를이 메서드의 매개 변수 목록에서 두 개체입니다.</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>The formatting process replaces each format item with the string representation of the corresponding object.</source>
          <target state="translated">포맷 프로세스는 해당 개체의 문자열 표현으로 각 서식 항목을 바꿉니다.</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>The syntax of a format item is as follows:</source>
          <target state="translated">형식 항목의 구문은 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</source>
          <target state="translated">{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>Elements in square brackets are optional.</source>
          <target state="translated">대괄호에서는 요소는 선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>The following table describes each element.</source>
          <target state="translated">다음 표에서 각 요소에 설명 합니다.</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>Element</source>
          <target state="translated">요소</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source><bpt id="p1">*</bpt>index<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>index<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>The zero-based position in the parameter list of the object to be formatted.</source>
          <target state="translated">서식을 지정할 개체의 매개 변수 목록에서 0부터 시작 위치입니다.</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>If the object specified by <bpt id="p1">*</bpt>index<ept id="p1">*</ept> is <ph id="ph1">`null`</ph>, the format item is replaced by <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">지정 하는 개체가 경우 <bpt id="p1">*</bpt>인덱스<ept id="p1">*</ept> 은 <ph id="ph1">`null`</ph>, 형식 항목으로 대체 되 <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>If there is no parameter in the <bpt id="p1">*</bpt>index<ept id="p1">*</ept> position, a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> is thrown.</source>
          <target state="translated">매개 변수가 없는 경우는 <bpt id="p1">*</bpt>인덱스<ept id="p1">*</ept> 위치는 <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> throw 됩니다.</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></source>
          <target state="translated">,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>The minimum number of characters in the string representation of the parameter.</source>
          <target state="translated">매개 변수는 문자열 표현에 있는 문자의 최소 수입니다.</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>If positive, the parameter is right-aligned; if negative, it is left-aligned.</source>
          <target state="translated">양수의 매개 변수는 오른쪽 맞춤; 음수 이면 왼쪽 맞춤 됩니다.</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></source>
          <target state="translated">:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>A standard or custom format string that is supported by the parameter.</source>
          <target state="translated">매개 변수에서 지원 되는 표준 또는 사용자 지정 형식 문자열입니다.</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>For the standard and custom format strings used with date and time values, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">날짜 및 시간 값으로 사용 되는 표준 및 사용자 지정 형식 문자열을 참조 하십시오. <bpt id="p1">[</bpt>표준 날짜 및 시간 형식 문자열<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> 및 <bpt id="p2">[</bpt>사용자 지정 날짜 및 시간 형식 문자열<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>For the standard and custom format strings used with numeric values, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">숫자 값으로 사용 되는 표준 및 사용자 지정 형식 문자열을 참조 하십시오. <bpt id="p1">[</bpt>표준 숫자 형식 문자열<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> 및 <bpt id="p2">[</bpt>사용자 지정 숫자 형식 문자열<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>For the standard format strings used with enumerations, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">열거형과 함께 사용 되는 표준 형식 문자열에 대 한 참조 <bpt id="p1">[</bpt>열거형 형식 문자열<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source><ph id="ph1">`arg0`</ph> and <ph id="ph2">`arg1`</ph> represent the objects to be formatted.</source>
          <target state="translated"><ph id="ph1">`arg0`</ph> 및 <ph id="ph2">`arg1`</ph> 서식을 지정할 개체를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>Each format item in <ph id="ph1">`format`</ph> is replaced with the string representation of either <ph id="ph2">`arg0`</ph> or <ph id="ph3">`arg1`</ph>.</source>
          <target state="translated">각 서식 항목 <ph id="ph1">`format`</ph> 중 하나의 문자열 표현으로 바뀝니다 <ph id="ph2">`arg0`</ph> 또는 <ph id="ph3">`arg1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>If the format item includes <ph id="ph1">`formatString`</ph> and the corresponding object implements the <ph id="ph2">&lt;xref:System.IFormattable&gt;</ph> interface, then <ph id="ph3">`arg`</ph><bpt id="p1">*</bpt>x<ept id="p1">*</ept><ph id="ph4">`.ToString(formatString, provider)`</ph> defines the formatting, where <bpt id="p2">*</bpt>x<ept id="p2">*</ept> is the index of the argument.</source>
          <target state="translated">서식 항목이 포함 된 경우 <ph id="ph1">`formatString`</ph> 해당 개체가 구현 하 고는 <ph id="ph2">&lt;xref:System.IFormattable&gt;</ph> 인터페이스 다음 <ph id="ph3">`arg`</ph> <bpt id="p1">*</bpt>x<ept id="p1">*</ept> <ph id="ph4">`.ToString(formatString, provider)`</ph> 서식, 여기서 정의 <bpt id="p2">*</bpt>x<ept id="p2">*</ept> 인수의 인덱스가입니다.</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>Otherwise, <ph id="ph1">`arg`</ph><bpt id="p1">*</bpt>x<ept id="p1">*</ept><ph id="ph2">`.ToString()`</ph> defines the formatting.</source>
          <target state="translated">그렇지 않으면 <ph id="ph1">`arg`</ph> <bpt id="p1">*</bpt>x<ept id="p1">*</ept> <ph id="ph2">`.ToString()`</ph> 서식을 정의 합니다.</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>If the string assigned to <ph id="ph1">`format`</ph> is "Thank you for your donation of {0:####} cans of food to our charitable organization."</source>
          <target state="translated">에 할당 된 문자열이 <ph id="ph1">`format`</ph> 은 "에 기부 해 주셔서 {0: # # #} 캔을 저희 자선 기구 음식."</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>and <ph id="ph1">`arg0`</ph> is an integer with the value 10, the return value will be "Thank you for your donation of 10 cans of food to our charitable organization."</source>
          <target state="translated">및 <ph id="ph1">`arg0`</ph> 는 정수 값 10 이면 반환 값은 "10 식량 캔을 저희 자선 기구에 기부에 대 한 감사 합니다." 됩니다</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph>이 잘못되었습니다.</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>The index of a format item is less than 0 (zero), or greater than or equal to 2.</source>
          <target state="translated">형식 항목의 인덱스가 0보다 작거나 2보다 크거나 같습니다.</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>The length of the expanded string would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">확장된 문자열의 길이가 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>를 초과합니다.</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated">에<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> 및 <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>인스턴스화할 때는 <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 호출 하 여 개체는 <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> 생성자, 길이의 용량은 <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 인스턴스 값 이상으로 증가할 수 해당 <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">특히 호출 하는 경우 발생할 수 있습니다는 <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> 작은 문자열을 추가 하는 메서드.</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">문화권별 서식 지정 정보를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>A composite format string.</source>
          <target state="translated">복합 형식 문자열입니다.</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>The first object to format.</source>
          <target state="translated">서식을 지정할 첫 번째 개체입니다.</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>The second object to format.</source>
          <target state="translated">서식을 지정할 두 번째 개체입니다.</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance.</source>
          <target state="translated">서식 항목이 0개 이상 포함된 복합 서식 문자열을 처리하여 반환된 문자열을 이 인스턴스에 추가합니다.</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>Each format item is replaced by the string representation of either of two arguments using a specified format provider.</source>
          <target state="translated">지정된 형식 공급자를 사용하여 각 형식 항목이 두 인수 중 하나의 문자열 표현으로 바뀝니다.</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>After the append operation, this instance contains any data that existed before the operation, suffixed by a copy of <ph id="ph1">&lt;paramref name="format" /&gt;</ph> where any format specification is replaced by the string representation of the corresponding object argument.</source>
          <target state="translated">추가 작업 후, 이 인스턴스에는 추가 작업 이전부터 있던 데이터가 포함되고 그 뒤에 형식 사양이 해당하는 개체 인수의 문자열 표현으로 바뀐 <ph id="ph1">&lt;paramref name="format" /&gt;</ph>의 복사본이 포함됩니다.</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>This method uses the <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> of the .NET Framework to convert the value of an object to its text representation and embed that representation in the current <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">이 메서드는 사용 된 <bpt id="p1">[</bpt>합성 서식 지정 기능<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> 텍스트 표현으로 개체의 값을 변환 하 고 현재에서 표현을 포함 하는.NET Framework의 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to objects in the parameter list of this method.</source>
          <target state="translated"><ph id="ph1">`format`</ph> 0 매개 변수 구성 되거나 더 많은 텍스트로와 0 개 이상의 인덱싱된 자리 표시자를이 메서드의 매개 변수 목록에 있는 개체에 해당 하는 서식 항목 이라고 합니다.</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>The formatting process replaces each format item with the string representation of the corresponding object.</source>
          <target state="translated">포맷 프로세스는 해당 개체의 문자열 표현으로 각 서식 항목을 바꿉니다.</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>The syntax of a format item is as follows:</source>
          <target state="translated">형식 항목의 구문은 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</source>
          <target state="translated">{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>Elements in square brackets are optional.</source>
          <target state="translated">대괄호에서는 요소는 선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>The following table describes each element.</source>
          <target state="translated">다음 표에서 각 요소에 설명 합니다.</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>Element</source>
          <target state="translated">요소</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source><bpt id="p1">*</bpt>index<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>index<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>The zero-based position in the parameter list of the object to be formatted.</source>
          <target state="translated">서식을 지정할 개체의 매개 변수 목록에서 0부터 시작 위치입니다.</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>If the object specified by <bpt id="p1">*</bpt>index<ept id="p1">*</ept> is <ph id="ph1">`null`</ph>, the format item is replaced by <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">지정 하는 개체가 경우 <bpt id="p1">*</bpt>인덱스<ept id="p1">*</ept> 은 <ph id="ph1">`null`</ph>, 형식 항목으로 대체 되 <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>If there is no parameter in the <bpt id="p1">*</bpt>index<ept id="p1">*</ept> position, a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> is thrown.</source>
          <target state="translated">매개 변수가 없는 경우는 <bpt id="p1">*</bpt>인덱스<ept id="p1">*</ept> 위치는 <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> throw 됩니다.</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></source>
          <target state="translated">,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>The minimum number of characters in the string representation of the parameter.</source>
          <target state="translated">매개 변수는 문자열 표현에 있는 문자의 최소 수입니다.</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>If positive, the parameter is right-aligned; if negative, it is left-aligned.</source>
          <target state="translated">양수의 매개 변수는 오른쪽 맞춤; 음수 이면 왼쪽 맞춤 됩니다.</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></source>
          <target state="translated">:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>A standard or custom format string that is supported by the parameter.</source>
          <target state="translated">매개 변수에서 지원 되는 표준 또는 사용자 지정 형식 문자열입니다.</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>For the standard and custom format strings used with date and time values, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">날짜 및 시간 값으로 사용 되는 표준 및 사용자 지정 형식 문자열을 참조 하십시오. <bpt id="p1">[</bpt>표준 날짜 및 시간 형식 문자열<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> 및 <bpt id="p2">[</bpt>사용자 지정 날짜 및 시간 형식 문자열<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>For the standard and custom format strings used with numeric values, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">숫자 값으로 사용 되는 표준 및 사용자 지정 형식 문자열을 참조 하십시오. <bpt id="p1">[</bpt>표준 숫자 형식 문자열<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> 및 <bpt id="p2">[</bpt>사용자 지정 숫자 형식 문자열<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>For the standard format strings used with enumerations, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">열거형과 함께 사용 되는 표준 형식 문자열에 대 한 참조 <bpt id="p1">[</bpt>열거형 형식 문자열<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>The <ph id="ph1">`provider`</ph> parameter specifies an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation that can provide formatting information for <ph id="ph3">`arg0`</ph> and <ph id="ph4">`arg1`</ph>.</source>
          <target state="translated"><ph id="ph1">`provider`</ph> 매개 변수는 지정 된 <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> 구현에 대 한 서식 지정 정보를 제공할 수 있는 <ph id="ph3">`arg0`</ph> 및 <ph id="ph4">`arg1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source><ph id="ph1">`provider`</ph> can be any of the following:</source>
          <target state="translated"><ph id="ph1">`provider`</ph>는 다음과 같을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that provides culture-specific formatting information.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> culture 별 서식 지정 정보를 제공 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides culture-specific formatting information for <ph id="ph2">`arg0`</ph> or <ph id="ph3">`arg1`</ph> if they are numeric values.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 개체에 대 한 문화권별 서식 지정 정보를 제공 하는 <ph id="ph2">`arg0`</ph> 또는 <ph id="ph3">`arg1`</ph> 경우 숫자 값입니다.</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object that provides culture-specific formatting information for <ph id="ph2">`arg0`</ph> or <ph id="ph3">`arg1`</ph> if they are date and time values.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> 개체에 대 한 문화권별 서식 지정 정보를 제공 하는 <ph id="ph2">`arg0`</ph> 또는 <ph id="ph3">`arg1`</ph> 경우 날짜 및 시간 값입니다.</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>A custom <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> implementation that provides formatting information for <ph id="ph2">`arg0`</ph> and <ph id="ph3">`arg1`</ph>.</source>
          <target state="translated">사용자 지정 <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> 구현에 대 한 서식 지정 정보를 제공 하는 <ph id="ph2">`arg0`</ph> 및 <ph id="ph3">`arg1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>Typically, such an implementation also implements the <ph id="ph1">&lt;xref:System.ICustomFormatter&gt;</ph> interface.</source>
          <target state="translated">일반적으로 이러한 구현도 구현 하는 <ph id="ph1">&lt;xref:System.ICustomFormatter&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>If the <ph id="ph1">`provider`</ph> parameter is <ph id="ph2">`null`</ph>, format provider information is obtained from the current culture.</source>
          <target state="translated">경우는 <ph id="ph1">`provider`</ph> 매개 변수는 <ph id="ph2">`null`</ph>, 현재 문화권에서 형식 공급자 정보를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source><ph id="ph1">`arg0`</ph> and <ph id="ph2">`arg1`</ph> represent the objects to be formatted.</source>
          <target state="translated"><ph id="ph1">`arg0`</ph> 및 <ph id="ph2">`arg1`</ph> 서식을 지정할 개체를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>Each format item in <ph id="ph1">`format`</ph> is replaced with the string representation of the object that has the corresponding index.</source>
          <target state="translated">각 서식 항목 <ph id="ph1">`format`</ph> 해당 인덱스를 가진 개체의 문자열 표현으로 바뀝니다.</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>If the format item includes <ph id="ph1">`formatString`</ph> and the corresponding argument implements the <ph id="ph2">&lt;xref:System.IFormattable&gt;</ph> interface, then the argument's <ph id="ph3">`ToString(formatString, provider)`</ph> method defines the formatting.</source>
          <target state="translated">서식 항목이 포함 된 경우 <ph id="ph1">`formatString`</ph> 및 해당 인수를 구현 하는 <ph id="ph2">&lt;xref:System.IFormattable&gt;</ph> 인터페이스를 다음 인수 <ph id="ph3">`ToString(formatString, provider)`</ph> 메서드 서식을 정의 합니다.</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>Otherwise, the argument's <ph id="ph1">`ToString()`</ph> method defines the formatting.</source>
          <target state="translated">그렇지 않으면 인수의 <ph id="ph1">`ToString()`</ph> 메서드 서식을 정의 합니다.</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%2CSystem.Object%29&gt;</ph> method to display time and temperature data stored in a generic <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> object.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%2CSystem.Object%29&gt;</ph> 제네릭에 저장 된 시간 및 온도 데이터를 표시 하는 메서드 <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>Note that the format string has three format items, although there are only to objects to format.</source>
          <target state="translated">형식 문자열의 서식을 지정 하려면 개체에만 있지만 세 개의 형식 항목에 있는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>This is because the first object in the list (a date and time value) is used by two format items: The first format item displays the time, and the second displays the date.</source>
          <target state="translated">가 두 형식 (날짜 및 시간 값) 목록에서 첫 번째 개체를 사용 하기 때문에 이것이: 첫 번째 형식 항목 표시 되는 경우 시간 및 두 번째 날짜를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph>이 잘못되었습니다.</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>The index of a format item is less than 0 (zero), or greater than or equal to 2 (two).</source>
          <target state="translated">형식 항목의 인덱스가 0보다 작거나 2보다 크거나 같습니다.</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>The length of the expanded string would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">확장된 문자열의 길이가 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>를 초과합니다.</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated">에<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> 및 <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>인스턴스화할 때는 <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 호출 하 여 개체는 <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> 생성자, 길이의 용량은 <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 인스턴스 값 이상으로 증가할 수 해당 <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">특히 호출 하는 경우 발생할 수 있습니다는 <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> 작은 문자열을 추가 하는 메서드.</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>A composite format string.</source>
          <target state="translated">복합 형식 문자열입니다.</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>The first object to format.</source>
          <target state="translated">서식을 지정할 첫 번째 개체입니다.</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>The second object to format.</source>
          <target state="translated">서식을 지정할 두 번째 개체입니다.</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>The third object to format.</source>
          <target state="translated">서식을 지정할 세 번째 개체입니다.</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance.</source>
          <target state="translated">서식 항목이 0개 이상 포함된 복합 서식 문자열을 처리하여 반환된 문자열을 이 인스턴스에 추가합니다.</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>Each format item is replaced by the string representation of either of three arguments.</source>
          <target state="translated">각 서식 항목이 세 인수 중 하나의 문자열 표현으로 바뀝니다.</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>A reference to this instance with <ph id="ph1">&lt;paramref name="format" /&gt;</ph> appended.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph>이 추가된 이 인스턴스에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>Each format item in <ph id="ph1">&lt;paramref name="format" /&gt;</ph> is replaced by the string representation of the corresponding object argument.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph>의 각 서식 항목은 해당 개체 인수의 문자열 표현으로 바뀝니다.</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>This method uses the <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> of the .NET Framework to convert the value of an object to its text representation and embed that representation in the current <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">이 메서드는 사용 된 <bpt id="p1">[</bpt>합성 서식 지정 기능<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> 텍스트 표현으로 개체의 값을 변환 하 고 현재에서 표현을 포함 하는.NET Framework의 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to <ph id="ph2">`arg0`</ph> through <ph id="ph3">`arg2`</ph>, the objects in the parameter list of this method.</source>
          <target state="translated"><ph id="ph1">`format`</ph> 0 매개 변수 구성 되거나 더 많은 텍스트로 0 개 이상의 인덱싱된 자리 표시자와, 해당 하는 서식 항목 이라고 <ph id="ph2">`arg0`</ph> 통해 <ph id="ph3">`arg2`</ph>를이 메서드의 매개 변수 목록에 있는 개체입니다.</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>The formatting process replaces each format item with the string representation of the corresponding object.</source>
          <target state="translated">포맷 프로세스는 해당 개체의 문자열 표현으로 각 서식 항목을 바꿉니다.</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>The syntax of a format item is as follows:</source>
          <target state="translated">형식 항목의 구문은 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</source>
          <target state="translated">{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>Elements in square brackets are optional.</source>
          <target state="translated">대괄호에서는 요소는 선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>The following table describes each element.</source>
          <target state="translated">다음 표에서 각 요소에 설명 합니다.</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>Element</source>
          <target state="translated">요소</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source><bpt id="p1">*</bpt>index<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>index<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>The zero-based position in the parameter list of the object to be formatted.</source>
          <target state="translated">서식을 지정할 개체의 매개 변수 목록에서 0부터 시작 위치입니다.</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>If the object specified by <bpt id="p1">*</bpt>index<ept id="p1">*</ept> is <ph id="ph1">`null`</ph>, the format item is replaced by <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">지정 하는 개체가 경우 <bpt id="p1">*</bpt>인덱스<ept id="p1">*</ept> 은 <ph id="ph1">`null`</ph>, 형식 항목으로 대체 되 <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>If there is no parameter in the <bpt id="p1">*</bpt>index<ept id="p1">*</ept> position, a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> is thrown.</source>
          <target state="translated">매개 변수가 없는 경우는 <bpt id="p1">*</bpt>인덱스<ept id="p1">*</ept> 위치는 <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> throw 됩니다.</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></source>
          <target state="translated">,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>The minimum number of characters in the string representation of the parameter.</source>
          <target state="translated">매개 변수는 문자열 표현에 있는 문자의 최소 수입니다.</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>If positive, the parameter is right-aligned; if negative, it is left-aligned.</source>
          <target state="translated">양수의 매개 변수는 오른쪽 맞춤; 음수 이면 왼쪽 맞춤 됩니다.</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></source>
          <target state="translated">:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>A standard or custom format string that is supported by the parameter.</source>
          <target state="translated">매개 변수에서 지원 되는 표준 또는 사용자 지정 형식 문자열입니다.</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>For the standard and custom format strings used with date and time values, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">날짜 및 시간 값으로 사용 되는 표준 및 사용자 지정 형식 문자열을 참조 하십시오. <bpt id="p1">[</bpt>표준 날짜 및 시간 형식 문자열<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> 및 <bpt id="p2">[</bpt>사용자 지정 날짜 및 시간 형식 문자열<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>For the standard and custom format strings used with numeric values, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">숫자 값으로 사용 되는 표준 및 사용자 지정 형식 문자열을 참조 하십시오. <bpt id="p1">[</bpt>표준 숫자 형식 문자열<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> 및 <bpt id="p2">[</bpt>사용자 지정 숫자 형식 문자열<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>For the standard format strings used with enumerations, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">열거형과 함께 사용 되는 표준 형식 문자열에 대 한 참조 <bpt id="p1">[</bpt>열거형 형식 문자열<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source><ph id="ph1">`arg0`</ph>, <ph id="ph2">`arg1`</ph>, and <ph id="ph3">`arg2`</ph> represent the objects to be formatted.</source>
          <target state="translated"><ph id="ph1">`arg0`</ph><ph id="ph2">`arg1`</ph>, 및 <ph id="ph3">`arg2`</ph> 서식을 지정할 개체를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>Each format item in <ph id="ph1">`format`</ph> is replaced with the string representation of either <ph id="ph2">`arg0`</ph>, <ph id="ph3">`arg1`</ph>, or <ph id="ph4">`arg2`</ph>, depending on the index of the format item.</source>
          <target state="translated">각 서식 항목 <ph id="ph1">`format`</ph> 중 하나의 문자열 표현으로 바뀝니다 <ph id="ph2">`arg0`</ph>, <ph id="ph3">`arg1`</ph>, 또는 <ph id="ph4">`arg2`</ph>서식 항목의 인덱스에 따라 합니다.</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>If the format item includes <ph id="ph1">`formatString`</ph> and the corresponding object in <ph id="ph2">`args`</ph> implements the <ph id="ph3">&lt;xref:System.IFormattable&gt;</ph> interface, then <ph id="ph4">`arg`</ph><bpt id="p1">*</bpt>x<ept id="p1">*</ept><ph id="ph5">`.ToString(formatString, null)`</ph> defines the formatting, where <bpt id="p2">*</bpt>x<ept id="p2">*</ept> is the index of the argument.</source>
          <target state="translated">형식 항목을 포함 하는 경우 <ph id="ph1">`formatString`</ph> 에 있는 해당 개체 및 <ph id="ph2">`args`</ph> 구현 하는 <ph id="ph3">&lt;xref:System.IFormattable&gt;</ph> 인터페이스 다음 <ph id="ph4">`arg`</ph> <bpt id="p1">*</bpt>x<ept id="p1">*</ept> <ph id="ph5">`.ToString(formatString, null)`</ph> 서식, 여기서 정의 <bpt id="p2">*</bpt> x<ept id="p2">*</ept> 인수의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>Otherwise, <ph id="ph1">`arg`</ph><bpt id="p1">*</bpt>x<ept id="p1">*</ept><ph id="ph2">`.ToString()`</ph> defines the formatting.</source>
          <target state="translated">그렇지 않으면 <ph id="ph1">`arg`</ph> <bpt id="p1">*</bpt>x<ept id="p1">*</ept> <ph id="ph2">`.ToString()`</ph> 서식을 정의 합니다.</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>If the string assigned to <ph id="ph1">`format`</ph> is "Thank you for your donation of {0:####} cans of food to our charitable organization."</source>
          <target state="translated">에 할당 된 문자열이 <ph id="ph1">`format`</ph> 은 "에 기부 해 주셔서 {0: # # #} 캔을 저희 자선 기구 음식."</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>and <ph id="ph1">`arg0`</ph> is an integer with the value 10, the return value will be "Thank you for your donation of 10 cans of food to our charitable organization."</source>
          <target state="translated">및 <ph id="ph1">`arg0`</ph> 는 정수 값 10 이면 반환 값은 "10 식량 캔을 저희 자선 기구에 기부에 대 한 감사 합니다." 됩니다</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph>이 잘못되었습니다.</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>The index of a format item is less than 0 (zero), or greater than or equal to 3.</source>
          <target state="translated">형식 항목의 인덱스가 0보다 작거나, 3보다 크거나 같습니다.</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>The length of the expanded string would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">확장된 문자열의 길이가 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>를 초과합니다.</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated">에<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> 및 <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>인스턴스화할 때는 <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 호출 하 여 개체는 <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> 생성자, 길이의 용량은 <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 인스턴스 값 이상으로 증가할 수 해당 <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">특히 호출 하는 경우 발생할 수 있습니다는 <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> 작은 문자열을 추가 하는 메서드.</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">문화권별 서식 지정 정보를 제공하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>A composite format string.</source>
          <target state="translated">복합 형식 문자열입니다.</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>The first object to format.</source>
          <target state="translated">서식을 지정할 첫 번째 개체입니다.</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>The second object to format.</source>
          <target state="translated">서식을 지정할 두 번째 개체입니다.</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>The third object to format.</source>
          <target state="translated">서식을 지정할 세 번째 개체입니다.</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance.</source>
          <target state="translated">서식 항목이 0개 이상 포함된 복합 서식 문자열을 처리하여 반환된 문자열을 이 인스턴스에 추가합니다.</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>Each format item is replaced by the string representation of either of three arguments using a specified format provider.</source>
          <target state="translated">지정된 형식 공급자를 사용하여 각 형식 항목이 세 인수 중 하나의 문자열 표현으로 바뀝니다.</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>After the append operation, this instance contains any data that existed before the operation, suffixed by a copy of <ph id="ph1">&lt;paramref name="format" /&gt;</ph> where any format specification is replaced by the string representation of the corresponding object argument.</source>
          <target state="translated">추가 작업 후, 이 인스턴스에는 추가 작업 이전부터 있던 데이터가 포함되고 그 뒤에 형식 사양이 해당하는 개체 인수의 문자열 표현으로 바뀐 <ph id="ph1">&lt;paramref name="format" /&gt;</ph>의 복사본이 포함됩니다.</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>This method uses the <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> of the .NET Framework to convert the value of an object to its text representation and embed that representation in the current <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">이 메서드는 사용 된 <bpt id="p1">[</bpt>합성 서식 지정 기능<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> 텍스트 표현으로 개체의 값을 변환 하 고 현재에서 표현을 포함 하는.NET Framework의 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>The <ph id="ph1">`format`</ph> parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to objects in the parameter list of this method.</source>
          <target state="translated"><ph id="ph1">`format`</ph> 0 매개 변수 구성 되거나 더 많은 텍스트로와 0 개 이상의 인덱싱된 자리 표시자를이 메서드의 매개 변수 목록에 있는 개체에 해당 하는 서식 항목 이라고 합니다.</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>The formatting process replaces each format item with the string representation of the corresponding object.</source>
          <target state="translated">포맷 프로세스는 해당 개체의 문자열 표현으로 각 서식 항목을 바꿉니다.</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>The syntax of a format item is as follows:</source>
          <target state="translated">형식 항목의 구문은 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</source>
          <target state="translated">{<bpt id="p1">*</bpt>index<ept id="p1">*</ept>[,<bpt id="p2">*</bpt>length<ept id="p2">*</ept>][:<bpt id="p3">*</bpt>formatString<ept id="p3">*</ept>]}</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>Elements in square brackets are optional.</source>
          <target state="translated">대괄호에서는 요소는 선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>The following table describes each element.</source>
          <target state="translated">다음 표에서 각 요소에 설명 합니다.</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>Element</source>
          <target state="translated">요소</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source><bpt id="p1">*</bpt>index<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>index<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>The zero-based position in the parameter list of the object to be formatted.</source>
          <target state="translated">서식을 지정할 개체의 매개 변수 목록에서 0부터 시작 위치입니다.</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>If the object specified by <bpt id="p1">*</bpt>index<ept id="p1">*</ept> is <ph id="ph1">`null`</ph>, the format item is replaced by <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">지정 하는 개체가 경우 <bpt id="p1">*</bpt>인덱스<ept id="p1">*</ept> 은 <ph id="ph1">`null`</ph>, 형식 항목으로 대체 되 <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>If there is no parameter in the <bpt id="p1">*</bpt>index<ept id="p1">*</ept> position, a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> is thrown.</source>
          <target state="translated">매개 변수가 없는 경우는 <bpt id="p1">*</bpt>인덱스<ept id="p1">*</ept> 위치는 <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> throw 됩니다.</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></source>
          <target state="translated">,<bpt id="p1">*</bpt>length<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>The minimum number of characters in the string representation of the parameter.</source>
          <target state="translated">매개 변수는 문자열 표현에 있는 문자의 최소 수입니다.</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>If positive, the parameter is right-aligned; if negative, it is left-aligned.</source>
          <target state="translated">양수의 매개 변수는 오른쪽 맞춤; 음수 이면 왼쪽 맞춤 됩니다.</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></source>
          <target state="translated">:<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>A standard or custom format string that is supported by the parameter.</source>
          <target state="translated">매개 변수에서 지원 되는 표준 또는 사용자 지정 형식 문자열입니다.</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>For the standard and custom format strings used with date and time values, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
          <target state="translated">날짜 및 시간 값으로 사용 되는 표준 및 사용자 지정 형식 문자열을 참조 하십시오. <bpt id="p1">[</bpt>표준 날짜 및 시간 형식 문자열<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> 및 <bpt id="p2">[</bpt>사용자 지정 날짜 및 시간 형식 문자열<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>For the standard and custom format strings used with numeric values, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">숫자 값으로 사용 되는 표준 및 사용자 지정 형식 문자열을 참조 하십시오. <bpt id="p1">[</bpt>표준 숫자 형식 문자열<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> 및 <bpt id="p2">[</bpt>사용자 지정 숫자 형식 문자열<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>For the standard format strings used with enumerations, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">열거형과 함께 사용 되는 표준 형식 문자열에 대 한 참조 <bpt id="p1">[</bpt>열거형 형식 문자열<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>The <ph id="ph1">`provider`</ph> parameter specifies an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation that can provide formatting information for <ph id="ph3">`arg0`</ph> and <ph id="ph4">`arg1`</ph>.</source>
          <target state="translated"><ph id="ph1">`provider`</ph> 매개 변수는 지정 된 <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> 구현에 대 한 서식 지정 정보를 제공할 수 있는 <ph id="ph3">`arg0`</ph> 및 <ph id="ph4">`arg1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source><ph id="ph1">`provider`</ph> can be any of the following:</source>
          <target state="translated"><ph id="ph1">`provider`</ph>는 다음과 같을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that provides culture-specific formatting information.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> culture 별 서식 지정 정보를 제공 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides culture-specific formatting information for <ph id="ph2">`arg0`</ph> or <ph id="ph3">`arg1`</ph> if they are numeric values.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> 개체에 대 한 문화권별 서식 지정 정보를 제공 하는 <ph id="ph2">`arg0`</ph> 또는 <ph id="ph3">`arg1`</ph> 경우 숫자 값입니다.</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object that provides culture-specific formatting information for <ph id="ph2">`arg0`</ph>, <ph id="ph3">`arg1`</ph>, or <ph id="ph4">`arg2`</ph> if they are date and time values.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> 개체에 대 한 문화권별 서식 지정 정보를 제공 하는 <ph id="ph2">`arg0`</ph>, <ph id="ph3">`arg1`</ph>, 또는 <ph id="ph4">`arg2`</ph> 경우 날짜 및 시간 값입니다.</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>A custom <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> implementation that provides formatting information for <ph id="ph2">`arg0`</ph>,  <ph id="ph3">`arg1`</ph>, and <ph id="ph4">`arg2`</ph>.</source>
          <target state="translated">사용자 지정 <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> 구현에 대 한 서식 지정 정보를 제공 하는 <ph id="ph2">`arg0`</ph>, <ph id="ph3">`arg1`</ph>, 및 <ph id="ph4">`arg2`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>Typically, such an implementation also implements the <ph id="ph1">&lt;xref:System.ICustomFormatter&gt;</ph> interface.</source>
          <target state="translated">일반적으로 이러한 구현도 구현 하는 <ph id="ph1">&lt;xref:System.ICustomFormatter&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>If the <ph id="ph1">`provider`</ph> parameter is <ph id="ph2">`null`</ph>, format provider information is obtained from the current culture.</source>
          <target state="translated">경우는 <ph id="ph1">`provider`</ph> 매개 변수는 <ph id="ph2">`null`</ph>, 현재 문화권에서 형식 공급자 정보를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source><ph id="ph1">`arg0`</ph>, <ph id="ph2">`arg1`</ph>, and <ph id="ph3">`arg2`</ph> represent the objects to be formatted.</source>
          <target state="translated"><ph id="ph1">`arg0`</ph><ph id="ph2">`arg1`</ph>, 및 <ph id="ph3">`arg2`</ph> 서식을 지정할 개체를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>Each format item in <ph id="ph1">`format`</ph> is replaced with the string representation of the object that has the corresponding index.</source>
          <target state="translated">각 서식 항목 <ph id="ph1">`format`</ph> 해당 인덱스를 가진 개체의 문자열 표현으로 바뀝니다.</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>If the format item includes <ph id="ph1">`formatString`</ph> and the corresponding argument implements the <ph id="ph2">&lt;xref:System.IFormattable&gt;</ph> interface, then the argument's <ph id="ph3">`ToString(formatString, provider)`</ph> method defines the formatting.</source>
          <target state="translated">서식 항목이 포함 된 경우 <ph id="ph1">`formatString`</ph> 및 해당 인수를 구현 하는 <ph id="ph2">&lt;xref:System.IFormattable&gt;</ph> 인터페이스를 다음 인수 <ph id="ph3">`ToString(formatString, provider)`</ph> 메서드 서식을 정의 합니다.</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>Otherwise, the argument's <ph id="ph1">`ToString()`</ph> method defines the formatting.</source>
          <target state="translated">그렇지 않으면 인수의 <ph id="ph1">`ToString()`</ph> 메서드 서식을 정의 합니다.</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%2CSystem.Object%2CSystem.Object%29&gt;</ph> method to illustrate the result of a Boolean <ph id="ph2">`And`</ph> operation with integer values.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%2CSystem.Object%2CSystem.Object%29&gt;</ph> 부울 결과 설명 하기 위해 메서드 <ph id="ph2">`And`</ph> 정수 값으로 작업 합니다.</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>Note that the format string includes six format items, but the method has only three items in its argument list, because each item is formatted in two different ways.</source>
          <target state="translated">각 항목의 형식이 두 가지 방법으로 하기 때문에 형식 문자열에 6 개의 형식 항목을 포함 하지만 해당 인수 목록에 메서드가 세 개의 항목이 note 합니다.</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph>이 잘못되었습니다.</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>The index of a format item is less than 0 (zero), or greater than or equal to 3 (three).</source>
          <target state="translated">형식 항목의 인덱스가 0보다 작거나 3보다 크거나 같습니다.</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>The length of the expanded string would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">확장된 문자열의 길이가 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>를 초과합니다.</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated">에<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> 및 <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>인스턴스화할 때는 <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 호출 하 여 개체는 <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> 생성자, 길이의 용량은 <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 인스턴스 값 이상으로 증가할 수 해당 <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">특히 호출 하는 경우 발생할 수 있습니다는 <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> 작은 문자열을 추가 하는 메서드.</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve" uid="T:System.Text.StringBuilder">
          <source>Appends the default line terminator, or a copy of a specified string and the default line terminator, to the end of this instance.</source>
          <target state="translated">이 인스턴스의 끝에 기본 줄 종결자 또는 지정한 문자열의 복사본과 기본 줄 종결자를 추가합니다.</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendLine">
          <source>Appends the default line terminator to the end of the current <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 개체의 끝에 기본 줄 종결자를 추가합니다.</target>       </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendLine">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendLine">
          <source>The default line terminator is the current value of the <ph id="ph1">&lt;xref:System.Environment.NewLine%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">기본 줄 종결자는의 현재 값은 <ph id="ph1">&lt;xref:System.Environment.NewLine%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendLine">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</target>       </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendLine">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendLine%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Text.StringBuilder.AppendLine%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendLine">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">이 인스턴스의 값이 커지면 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>가 초과됩니다.</target>       </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendLine">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated">에<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> 및 <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>인스턴스화할 때는 <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 호출 하 여 개체는 <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> 생성자, 길이의 용량은 <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 인스턴스 값 이상으로 증가할 수 해당 <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendLine">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">특히 호출 하는 경우 발생할 수 있습니다는 <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> 작은 문자열을 추가 하는 메서드.</target>       </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendLine(System.String)">
          <source>The string to append.</source>
          <target state="translated">추가할 문자열입니다.</target>       </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendLine(System.String)">
          <source>Appends a copy of the specified string followed by the default line terminator to the end of the current <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 개체의 끝에 지정한 문자열의 복사본과 기본 줄 종결자를 차례로 추가합니다.</target>       </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendLine(System.String)">
          <source>A reference to this instance after the append operation has completed.</source>
          <target state="translated">추가 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendLine(System.String)">
          <source>The default line terminator is the current value of the <ph id="ph1">&lt;xref:System.Environment.NewLine%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">기본 줄 종결자는의 현재 값은 <ph id="ph1">&lt;xref:System.Environment.NewLine%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendLine(System.String)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</target>       </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.AppendLine(System.String)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">이 인스턴스의 값이 커지면 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>가 초과됩니다.</target>       </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendLine(System.String)">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object by calling the <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> property.</source>
          <target state="translated">에<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> 및 <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>인스턴스화할 때는 <ph id="ph3">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 호출 하 여 개체는 <ph id="ph4">&lt;see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /&gt;</ph> 생성자, 길이의 용량은 <ph id="ph5">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 인스턴스 값 이상으로 증가할 수 해당 <ph id="ph6">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.AppendLine(System.String)">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> methods to append small strings.</source>
          <target state="translated">특히 호출 하는 경우 발생할 수 있습니다는 <ph id="ph1">&lt;see cref="M:System.Text.StringBuilder.Append(System.String)" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /&gt;</ph> 작은 문자열을 추가 하는 메서드.</target>       </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve" uid="P:System.Text.StringBuilder.Capacity">
          <source>Gets or sets the maximum number of characters that can be contained in the memory allocated by the current instance.</source>
          <target state="translated">현재 인스턴스에 의해 할당된 메모리에 포함할 수 있는 최대 문자 수를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Capacity">
          <source>The maximum number of characters that can be contained in the memory allocated by the current instance.</source>
          <target state="translated">현재 인스턴스에 의해 할당된 메모리에 포함할 수 있는 최대 문자 수입니다.</target>       </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Capacity">
          <source>Its value can range from <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.Length" /&gt;</ph> to <ph id="ph2">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">값 범위는 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.Length" /&gt;</ph>에서 <ph id="ph2">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>까지일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Capacity">
          <source><ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph> does not affect the string value of the current instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph> 현재 인스턴스의 문자열 값에 영향을 주지 않습니다.</target>       </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Capacity">
          <source><ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph> can be decreased as long as it is not less than <ph id="ph2">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph> 없으면으로 축소 보다 작은 <ph id="ph2">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Capacity">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> dynamically allocates more space when required and increases <ph id="ph2">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph> accordingly.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 동적으로 필요할 때 더 많은 공간을 할당 하 고 증가 <ph id="ph2">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph> 적절 하 게 합니다.</target>       </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Capacity">
          <source>For performance reasons, a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> might allocate more memory than needed.</source>
          <target state="translated">성능상의 이유로 한 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 필요한 보다 더 많은 메모리를 할당할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Capacity">
          <source>The amount of memory allocated is implementation-specific.</source>
          <target state="translated">할당 된 메모리 크기는 구현 합니다.</target>       </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Capacity">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph> property.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve" uid="P:System.Text.StringBuilder.Capacity">
          <source>The value specified for a set operation is less than the current length of this instance.</source>
          <target state="translated">Set 작업에 지정된 값이 이 인스턴스의 현재 길이보다 작습니다.</target>       </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve" uid="P:System.Text.StringBuilder.Capacity">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve" uid="P:System.Text.StringBuilder.Capacity">
          <source>The value specified for a set operation is greater than the maximum capacity.</source>
          <target state="translated">Set 작업에 지정된 값이 최대 용량보다 큽니다.</target>       </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve" uid="P:System.Text.StringBuilder.Chars(System.Int32)">
          <source>The position of the character.</source>
          <target state="translated">문자의 위치입니다.</target>       </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve" uid="P:System.Text.StringBuilder.Chars(System.Int32)">
          <source>Gets or sets the character at the specified character position in this instance.</source>
          <target state="translated">이 인스턴트에서 특정 위치에 있는 문자를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Chars(System.Int32)">
          <source>The Unicode character at position <ph id="ph1">&lt;paramref name="index" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 위치에 있는 유니코드 문자입니다.</target>       </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Chars(System.Int32)">
          <source>The <ph id="ph1">`index`</ph> parameter is the position of a character within the <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`index`</ph> 매개 변수는 내에서 문자 위치에서 <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Chars(System.Int32)">
          <source>The first character in the string is at index 0.</source>
          <target state="translated">문자열의 첫 번째 문자 인덱스 0입니다.</target>       </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Chars(System.Int32)">
          <source>The length of a string is the number of characters it contains.</source>
          <target state="translated">문자열의 길이가 포함 된 문자의 수입니다.</target>       </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Chars(System.Int32)">
          <source>The last accessible character of a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> instance is at index <ph id="ph2">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph> - 1.</source>
          <target state="translated">액세스 가능한 마지막 문자는 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 인스턴스 인덱스에는 <ph id="ph2">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph> -1입니다.</target>       </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Chars(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Text.StringBuilder.Chars%2A&gt;</ph> is the default property of the <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Chars%2A&gt;</ph> 기본 속성은는 <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Chars(System.Int32)">
          <source>In C#, it is an indexer.</source>
          <target state="translated">C#의 인덱서입니다.</target>       </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Chars(System.Int32)">
          <source>This means that individual characters can be retrieved from the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Chars%2A&gt;</ph> property as shown in the following example, which counts the number of alphabetic, white-space, and punctuation characters in a string.</source>
          <target state="translated">즉, 개별 문자에서 검색할 수 있습니다는 <ph id="ph1">&lt;xref:System.Text.StringBuilder.Chars%2A&gt;</ph> 공백, 영문자의 수를 계산 하는 다음 예에서 표시 된 것 처럼 속성 및 문자열에 문장 부호 문자입니다.</target>       </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Chars(System.Int32)">
          <source>Performance and character-based indexing</source>
          <target state="translated">성능 및 문자 기반 인덱싱</target>       </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve" uid="P:System.Text.StringBuilder.Chars(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is outside the bounds of this instance while setting a character.</source>
          <target state="translated">문자를 설정하는 동안 <ph id="ph1">&lt;paramref name="index" /&gt;</ph>가 이 인스턴스의 범위를 벗어납니다.</target>       </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve" uid="P:System.Text.StringBuilder.Chars(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is outside the bounds of this instance while getting a character.</source>
          <target state="translated">문자를 가져오는 동안 <ph id="ph1">&lt;paramref name="index" /&gt;</ph>가 이 인스턴스의 범위를 벗어납니다.</target>       </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Clear">
          <source>Removes all characters from the current <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> instance.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 인스턴스에서 모든 문자를 제거합니다.</target>       </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Clear">
          <source>An object whose <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.Length" /&gt;</ph> is 0 (zero).</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.Length" /&gt;</ph>가 0인 개체입니다.</target>       </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Clear">
          <source><ph id="ph1">&lt;xref:System.Text.StringBuilder.Clear%2A&gt;</ph> is a convenience method that is equivalent to setting the <ph id="ph2">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph> property of the current instance to 0 (zero).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Clear%2A&gt;</ph> 설정에 해당 하는 편리한 메서드입니다는 <ph id="ph2">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph> 0 (영)는 현재 인스턴스의 속성입니다.</target>       </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Clear">
          <source>Calling the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Clear%2A&gt;</ph> method does not modify the current instance's <ph id="ph2">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Text.StringBuilder.MaxCapacity%2A&gt;</ph> property.</source>
          <target state="translated">호출 된 <ph id="ph1">&lt;xref:System.Text.StringBuilder.Clear%2A&gt;</ph> 메서드는 현재 인스턴스를 수정 하지 않습니다 <ph id="ph2">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Text.StringBuilder.MaxCapacity%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Clear">
          <source>The following example instantiates a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object with a string, calls the <ph id="ph2">&lt;xref:System.Text.StringBuilder.Clear%2A&gt;</ph> method, and then appends a new string.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 문자열로 호출 개체는 <ph id="ph2">&lt;xref:System.Text.StringBuilder.Clear%2A&gt;</ph> 메서드를 한 다음 새 문자열을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>The starting position in this instance where characters will be copied from.</source>
          <target state="translated">이 인스턴스에서 문자가 복사되기 시작하는 위치입니다.</target>       </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>The index is zero-based.</source>
          <target state="translated">인덱스는 0부터 시작합니다.</target>       </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>The array where characters will be copied.</source>
          <target state="translated">문자가 복사될 배열입니다.</target>       </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>The starting position in <bpt id="p1">&lt;c&gt;</bpt>destination<ept id="p1">&lt;/c&gt;</ept> where characters will be copied.</source>
          <target state="translated">문자가 복사될 <bpt id="p1">&lt;c&gt;</bpt>대상<ept id="p1">&lt;/c&gt;</ept>의 시작 위치입니다.</target>       </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>The index is zero-based.</source>
          <target state="translated">인덱스는 0부터 시작합니다.</target>       </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>The number of characters to be copied.</source>
          <target state="translated">복사될 문자 수입니다.</target>       </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>Copies the characters from a specified segment of this instance to a specified segment of a destination <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> array.</source>
          <target state="translated">이 인스턴스에서 지정한 세그먼트의 문자를 대상 <ph id="ph1">&lt;see cref="T:System.Char" /&gt;</ph> 배열에서 지정한 세그먼트에 복사합니다.</target>       </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.CopyTo%2A&gt;</ph> method is intended to be used in the rare situation when you need to efficiently copy successive sections of a <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object to an array.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.CopyTo%2A&gt;</ph> 효율적으로의 연속 섹션을 복사 해야 할 때 특수 한 상황에서 사용할 메서드는 <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체 배열입니다.</target>       </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>The array should be a fixed size, preallocated, reusable, and possibly globally accessible.</source>
          <target state="translated">배열의 크기는 고정된 미리 할당 된, 및 전역 액세스가 가능 해야 합니다.</target>       </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>For example, your application could populate a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object with a large number of characters then use the <ph id="ph2">&lt;xref:System.Text.StringBuilder.CopyTo%2A&gt;</ph> method to copy small, successive pieces of the <ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph> object to an array where the pieces are processed.</source>
          <target state="translated">예를 들어, 응용 프로그램 채울 수 없습니다는 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 문자의 다 수 포함 된 개체 다음 사용 하 여는 <ph id="ph2">&lt;xref:System.Text.StringBuilder.CopyTo%2A&gt;</ph> 작은, 연속 된 부분을 복사 하려면은 <ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph> 조각이 처리 되는 배열에는 개체입니다.</target>       </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>When all the data in the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object is processed, the size of the <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object is set to zero and the cycle is repeated.</source>
          <target state="translated">경우에 있는 모든 데이터는 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체 처리의 크기는 <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체가 0으로 설정 되 고 주기가 반복 됩니다.</target>       </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.CopyTo%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Text.StringBuilder.CopyTo%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="destination" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="destination" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="sourceIndex" /&gt;</ph>, <ph id="ph2">&lt;paramref name="destinationIndex" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="count" /&gt;</ph>, is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sourceIndex" /&gt;</ph>, <ph id="ph2">&lt;paramref name="destinationIndex" /&gt;</ph> 또는 <ph id="ph3">&lt;paramref name="count" /&gt;</ph>가 0보다 작습니다.</target>       </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="sourceIndex" /&gt;</ph> is greater than the length of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sourceIndex" /&gt;</ph>가 이 인스턴스의 길이보다 큽니다.</target>       </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="sourceIndex" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="count" /&gt;</ph> is greater than the length of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sourceIndex" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="count" /&gt;</ph>가 이 인스턴스의 길이보다 큽니다.</target>       </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="destinationIndex" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="count" /&gt;</ph> is greater than the length of <ph id="ph4">&lt;paramref name="destination" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="destinationIndex" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="count" /&gt;</ph>이 <ph id="ph4">&lt;paramref name="destination" /&gt;</ph>의 길이보다 큽니다.</target>       </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.EnsureCapacity(System.Int32)">
          <source>The minimum capacity to ensure.</source>
          <target state="translated">확보할 최소 용량입니다.</target>       </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.EnsureCapacity(System.Int32)">
          <source>Ensures that the capacity of this instance of <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> is at least the specified value.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 인스턴스의 용량이 최소한 지정된 값이 되도록 합니다.</target>       </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.EnsureCapacity(System.Int32)">
          <source>The new capacity of this instance.</source>
          <target state="translated">이 인스턴스의 새 용량입니다.</target>       </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.EnsureCapacity(System.Int32)">
          <source>If the current capacity is less than the <ph id="ph1">`capacity`</ph> parameter, memory for this instance is reallocated to hold at least <ph id="ph2">`capacity`</ph> number of characters; otherwise, no memory is changed.</source>
          <target state="translated">현재 용량이 보다 작은 <ph id="ph1">`capacity`</ph> 매개 변수를이 인스턴스에 대 한 다시 할당 이상을 보유할 수 <ph id="ph2">`capacity`</ph> 문자 수; 그렇지 않으면 메모리는 그대로 유지 합니다.</target>       </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.EnsureCapacity(System.Int32)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.EnsureCapacity%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Text.StringBuilder.EnsureCapacity%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.EnsureCapacity(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph>가 0보다 작은 경우</target>       </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.EnsureCapacity(System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.EnsureCapacity(System.Int32)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">이 인스턴스의 값이 커지면 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>가 초과됩니다.</target>       </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Equals(System.Text.StringBuilder)">
          <source>An object to compare with this instance, or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">이 인스턴스와 비교할 개체 또는 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Equals(System.Text.StringBuilder)">
          <source>Returns a value indicating whether this instance is equal to a specified object.</source>
          <target state="translated">이 인스턴스가 지정된 개체와 같은지를 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Equals(System.Text.StringBuilder)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this instance and <ph id="ph2">&lt;paramref name="sb" /&gt;</ph> have equal string, <ph id="ph3">&lt;see cref="P:System.Text.StringBuilder.Capacity" /&gt;</ph>, and <ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> values; otherwise, <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이 인스턴스와 <ph id="ph2">&lt;paramref name="sb" /&gt;</ph>에 같은 문자열, <ph id="ph3">&lt;see cref="P:System.Text.StringBuilder.Capacity" /&gt;</ph> 및 <ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph> 값이 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph5">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Equals(System.Text.StringBuilder)">
          <source>The following code uses the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Equals%2A&gt;</ph> method to check whether two <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> objects are equal.</source>
          <target state="translated">다음 코드에서는 <ph id="ph1">&lt;xref:System.Text.StringBuilder.Equals%2A&gt;</ph> 두 검사 하도록 <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체가 서로 같은지 합니다.</target>       </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Equals(System.Text.StringBuilder)">
          <source>The method is called repeatedly after small changes are made to each object, and the results are displayed to the console.</source>
          <target state="translated">각 개체에 작은 변경 내용이 고 결과 콘솔에 표시 됩니다는 메서드는 반복적으로 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve" uid="T:System.Text.StringBuilder">
          <source>Inserts the string representation of a specified object into this instance at a specified character position.</source>
          <target state="translated">지정된 개체의 문자열 표현을 지정된 문자 위치에 있는 이 인스턴스에 삽입합니다.</target>       </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean)">
          <source>The position in this instance where insertion begins.</source>
          <target state="translated">삽입을 시작할 인스턴스 내의 위치입니다.</target>       </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean)">
          <source>The value to insert.</source>
          <target state="translated">삽입할 값입니다.</target>       </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean)">
          <source>Inserts the string representation of a Boolean value into this instance at the specified character position.</source>
          <target state="translated">지정된 문자 위치에 있는 이 인스턴스에 부울 값의 문자열 표현을 삽입합니다.</target>       </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean)">
          <source>A reference to this instance after the insert operation has completed.</source>
          <target state="translated">삽입 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Boolean.ToString%2A?displayProperty=nameWithType&gt;</ph> is used to get a string representation of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Boolean.ToString%2A?displayProperty=nameWithType&gt;</ph> 문자열 표현을 가져오는 데 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean)">
          <source>Existing characters are shifted to make room for the new text.</source>
          <target state="translated">새 텍스트에 대 한 공간을 만들기 위해 기존 문자가 이동 됩니다.</target>       </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean)">
          <source>The capacity is adjusted as needed.</source>
          <target state="translated">필요에 따라 용량이 조정 됩니다.</target>       </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the length of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph>이 0보다 작거나 이 인스턴스 길이보다 큰 경우</target>       </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">이 인스턴스의 값이 커지면 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>가 초과됩니다.</target>       </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean)">
          <source>In the <ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph> and earlier versions, calls to this method threw an <ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph> if inserting <ph id="ph3">&lt;paramref name="value" /&gt;</ph> would cause the object's total length to exceed <ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">에 <ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph> 및 이전 버전에서는이 메서드를 호출 했습니다는 <ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph> 삽입 하는 경우 <ph id="ph3">&lt;paramref name="value" /&gt;</ph> 개체의 총 길이를 초과 인해 <ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean)">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, the method throws an <ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>.</source>
          <target state="translated">부터는 <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, 메서드에서 throw 된 <ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Byte)">
          <source>The position in this instance where insertion begins.</source>
          <target state="translated">삽입을 시작할 인스턴스 내의 위치입니다.</target>       </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Byte)">
          <source>The value to insert.</source>
          <target state="translated">삽입할 값입니다.</target>       </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Byte)">
          <source>Inserts the string representation of a specified 8-bit unsigned integer into this instance at the specified character position.</source>
          <target state="translated">지정된 8비트 부호 없는 정수의 문자열 표현을 지정된 문자 위치에 있는 이 인스턴스에 삽입합니다.</target>       </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Byte)">
          <source>A reference to this instance after the insert operation has completed.</source>
          <target state="translated">삽입 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Byte)">
          <source><ph id="ph1">&lt;xref:System.Byte.ToString%2A?displayProperty=nameWithType&gt;</ph> is used to get a string representation of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Byte.ToString%2A?displayProperty=nameWithType&gt;</ph> 문자열 표현을 가져오는 데 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Byte)">
          <source>Existing characters are shifted to make room for the new text.</source>
          <target state="translated">새 텍스트에 대 한 공간을 만들기 위해 기존 문자가 이동 됩니다.</target>       </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Byte)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</target>       </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Byte)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Byte)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the length of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph>이 0보다 작거나 이 인스턴스 길이보다 큰 경우</target>       </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Byte)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">이 인스턴스의 값이 커지면 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>가 초과됩니다.</target>       </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Byte)">
          <source>In the <ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph> and earlier versions, calls to this method threw an <ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph> if inserting <ph id="ph3">&lt;paramref name="value" /&gt;</ph> would cause the object's total length to exceed <ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">에 <ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph> 및 이전 버전에서는이 메서드를 호출 했습니다는 <ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph> 삽입 하는 경우 <ph id="ph3">&lt;paramref name="value" /&gt;</ph> 개체의 총 길이를 초과 인해 <ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Byte)">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, the method throws an <ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>.</source>
          <target state="translated">부터는 <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, 메서드에서 throw 된 <ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char)">
          <source>The position in this instance where insertion begins.</source>
          <target state="translated">삽입을 시작할 인스턴스 내의 위치입니다.</target>       </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char)">
          <source>The value to insert.</source>
          <target state="translated">삽입할 값입니다.</target>       </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char)">
          <source>Inserts the string representation of a specified Unicode character into this instance at the specified character position.</source>
          <target state="translated">지정된 유니코드 문자의 문자열 표현을 지정된 문자 위치에 있는 이 인스턴스에 삽입합니다.</target>       </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char)">
          <source>A reference to this instance after the insert operation has completed.</source>
          <target state="translated">삽입 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char)">
          <source><ph id="ph1">&lt;xref:System.Char.ToString%2A?displayProperty=nameWithType&gt;</ph> is used to get a string representation of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Char.ToString%2A?displayProperty=nameWithType&gt;</ph> 문자열 표현을 가져오는 데 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char)">
          <source>Existing characters are shifted to make room for the new text.</source>
          <target state="translated">새 텍스트에 대 한 공간을 만들기 위해 기존 문자가 이동 됩니다.</target>       </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</target>       </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the length of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph>이 0보다 작거나 이 인스턴스 길이보다 큰 경우</target>       </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">이 인스턴스의 값이 커지면 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>가 초과됩니다.</target>       </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[])">
          <source>The position in this instance where insertion begins.</source>
          <target state="translated">삽입을 시작할 인스턴스 내의 위치입니다.</target>       </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[])">
          <source>The character array to insert.</source>
          <target state="translated">삽입할 문자 배열입니다.</target>       </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[])">
          <source>Inserts the string representation of a specified array of Unicode characters into this instance at the specified character position.</source>
          <target state="translated">지정된 유니코드 문자 배열의 문자열 표현을 지정된 문자 위치에 있는 이 인스턴스에 삽입합니다.</target>       </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[])">
          <source>A reference to this instance after the insert operation has completed.</source>
          <target state="translated">삽입 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[])">
          <source>Existing characters are shifted to make room for the new text.</source>
          <target state="translated">새 텍스트에 대 한 공간을 만들기 위해 기존 문자가 이동 됩니다.</target>       </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[])">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</target>       </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[])">
          <source>If <ph id="ph1">`value`</ph> is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph> is not changed.</source>
          <target state="translated">경우 <ph id="ph1">`value`</ph> 은 <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph> 변경 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[])">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[])">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the length of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph>이 0보다 작거나 이 인스턴스 길이보다 큰 경우</target>       </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[])">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[])">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">이 인스턴스의 값이 커지면 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>가 초과됩니다.</target>       </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal)">
          <source>The position in this instance where insertion begins.</source>
          <target state="translated">삽입을 시작할 인스턴스 내의 위치입니다.</target>       </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal)">
          <source>The value to insert.</source>
          <target state="translated">삽입할 값입니다.</target>       </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal)">
          <source>Inserts the string representation of a decimal number into this instance at the specified character position.</source>
          <target state="translated">10진수의 문자열 표현을 지정된 문자 위치에 있는 이 인스턴스에 삽입합니다.</target>       </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal)">
          <source>A reference to this instance after the insert operation has completed.</source>
          <target state="translated">삽입 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal)">
          <source><ph id="ph1">&lt;xref:System.Decimal.ToString%2A?displayProperty=nameWithType&gt;</ph> is used to get a string representation of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Decimal.ToString%2A?displayProperty=nameWithType&gt;</ph> 문자열 표현을 가져오는 데 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal)">
          <source>Existing characters are shifted to make room for the new text.</source>
          <target state="translated">새 텍스트에 대 한 공간을 만들기 위해 기존 문자가 이동 됩니다.</target>       </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</target>       </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the length of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph>이 0보다 작거나 이 인스턴스 길이보다 큰 경우</target>       </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">이 인스턴스의 값이 커지면 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>가 초과됩니다.</target>       </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal)">
          <source>In the <ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph> and earlier versions, calls to this method threw an <ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph> if inserting <ph id="ph3">&lt;paramref name="value" /&gt;</ph> would cause the object's total length to exceed <ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">에 <ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph> 및 이전 버전에서는이 메서드를 호출 했습니다는 <ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph> 삽입 하는 경우 <ph id="ph3">&lt;paramref name="value" /&gt;</ph> 개체의 총 길이를 초과 인해 <ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal)">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, the method throws an <ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>.</source>
          <target state="translated">부터는 <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, 메서드에서 throw 된 <ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Double)">
          <source>The position in this instance where insertion begins.</source>
          <target state="translated">삽입을 시작할 인스턴스 내의 위치입니다.</target>       </trans-unit>
        <trans-unit id="1105" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Double)">
          <source>The value to insert.</source>
          <target state="translated">삽입할 값입니다.</target>       </trans-unit>
        <trans-unit id="1106" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Double)">
          <source>Inserts the string representation of a double-precision floating-point number into this instance at the specified character position.</source>
          <target state="translated">배정밀도 부동 소수점 숫자의 문자열 표현을 지정된 문자 위치에 있는 이 인스턴스에 삽입합니다.</target>       </trans-unit>
        <trans-unit id="1107" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Double)">
          <source>A reference to this instance after the insert operation has completed.</source>
          <target state="translated">삽입 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="1108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Double)">
          <source><ph id="ph1">&lt;xref:System.Double.ToString%2A?displayProperty=nameWithType&gt;</ph> is used to get a string representation of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Double.ToString%2A?displayProperty=nameWithType&gt;</ph> 문자열 표현을 가져오는 데 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Double)">
          <source>Existing characters are shifted to make room for the new text.</source>
          <target state="translated">새 텍스트에 대 한 공간을 만들기 위해 기존 문자가 이동 됩니다.</target>       </trans-unit>
        <trans-unit id="1110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Double)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</target>       </trans-unit>
        <trans-unit id="1111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Double)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1112" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Double)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the length of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph>이 0보다 작거나 이 인스턴스 길이보다 큰 경우</target>       </trans-unit>
        <trans-unit id="1113" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Double)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">이 인스턴스의 값이 커지면 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>가 초과됩니다.</target>       </trans-unit>
        <trans-unit id="1114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Double)">
          <source>In the <ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph> and earlier versions, calls to this method threw an <ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph> if inserting <ph id="ph3">&lt;paramref name="value" /&gt;</ph> would cause the object's total length to exceed <ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">에 <ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph> 및 이전 버전에서는이 메서드를 호출 했습니다는 <ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph> 삽입 하는 경우 <ph id="ph3">&lt;paramref name="value" /&gt;</ph> 개체의 총 길이를 초과 인해 <ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Double)">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, the method throws an <ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>.</source>
          <target state="translated">부터는 <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, 메서드에서 throw 된 <ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1116" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int16)">
          <source>The position in this instance where insertion begins.</source>
          <target state="translated">삽입을 시작할 인스턴스 내의 위치입니다.</target>       </trans-unit>
        <trans-unit id="1117" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int16)">
          <source>The value to insert.</source>
          <target state="translated">삽입할 값입니다.</target>       </trans-unit>
        <trans-unit id="1118" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int16)">
          <source>Inserts the string representation of a specified 16-bit signed integer into this instance at the specified character position.</source>
          <target state="translated">지정된 16비트 부호 있는 정수의 문자열 표현을 지정된 문자 위치에 있는 이 인스턴스에 삽입합니다.</target>       </trans-unit>
        <trans-unit id="1119" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int16)">
          <source>A reference to this instance after the insert operation has completed.</source>
          <target state="translated">삽입 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="1120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int16)">
          <source><ph id="ph1">&lt;xref:System.Int16.ToString%2A?displayProperty=nameWithType&gt;</ph> is used to get a string representation of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Int16.ToString%2A?displayProperty=nameWithType&gt;</ph> 문자열 표현을 가져오는 데 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int16)">
          <source>Existing characters are shifted to make room for the new text.</source>
          <target state="translated">새 텍스트에 대 한 공간을 만들기 위해 기존 문자가 이동 됩니다.</target>       </trans-unit>
        <trans-unit id="1122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int16)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</target>       </trans-unit>
        <trans-unit id="1123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int16)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1124" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int16)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the length of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph>이 0보다 작거나 이 인스턴스 길이보다 큰 경우</target>       </trans-unit>
        <trans-unit id="1125" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int16)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">이 인스턴스의 값이 커지면 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>가 초과됩니다.</target>       </trans-unit>
        <trans-unit id="1126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int16)">
          <source>In the <ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph> and earlier versions, calls to this method threw an <ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph> if inserting <ph id="ph3">&lt;paramref name="value" /&gt;</ph> would cause the object's total length to exceed <ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">에 <ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph> 및 이전 버전에서는이 메서드를 호출 했습니다는 <ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph> 삽입 하는 경우 <ph id="ph3">&lt;paramref name="value" /&gt;</ph> 개체의 총 길이를 초과 인해 <ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int16)">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, the method throws an <ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>.</source>
          <target state="translated">부터는 <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, 메서드에서 throw 된 <ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1128" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int32)">
          <source>The position in this instance where insertion begins.</source>
          <target state="translated">삽입을 시작할 인스턴스 내의 위치입니다.</target>       </trans-unit>
        <trans-unit id="1129" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int32)">
          <source>The value to insert.</source>
          <target state="translated">삽입할 값입니다.</target>       </trans-unit>
        <trans-unit id="1130" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int32)">
          <source>Inserts the string representation of a specified 32-bit signed integer into this instance at the specified character position.</source>
          <target state="translated">지정된 32비트 부호 있는 정수의 문자열 표현을 지정된 문자 위치에 있는 이 인스턴스에 삽입합니다.</target>       </trans-unit>
        <trans-unit id="1131" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int32)">
          <source>A reference to this instance after the insert operation has completed.</source>
          <target state="translated">삽입 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="1132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Int32.ToString%2A?displayProperty=nameWithType&gt;</ph> is used to get a string representation of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Int32.ToString%2A?displayProperty=nameWithType&gt;</ph> 문자열 표현을 가져오는 데 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int32)">
          <source>Existing characters are shifted to make room for the new text.</source>
          <target state="translated">새 텍스트에 대 한 공간을 만들기 위해 기존 문자가 이동 됩니다.</target>       </trans-unit>
        <trans-unit id="1134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int32)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</target>       </trans-unit>
        <trans-unit id="1135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int32)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1136" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the length of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph>이 0보다 작거나 이 인스턴스 길이보다 큰 경우</target>       </trans-unit>
        <trans-unit id="1137" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int32)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">이 인스턴스의 값이 커지면 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>가 초과됩니다.</target>       </trans-unit>
        <trans-unit id="1138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int32)">
          <source>In the <ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph> and earlier versions, calls to this method threw an <ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph> if inserting <ph id="ph3">&lt;paramref name="value" /&gt;</ph> would cause the object's total length to exceed <ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">에 <ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph> 및 이전 버전에서는이 메서드를 호출 했습니다는 <ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph> 삽입 하는 경우 <ph id="ph3">&lt;paramref name="value" /&gt;</ph> 개체의 총 길이를 초과 인해 <ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int32)">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, the method throws an <ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>.</source>
          <target state="translated">부터는 <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, 메서드에서 throw 된 <ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1140" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int64)">
          <source>The position in this instance where insertion begins.</source>
          <target state="translated">삽입을 시작할 인스턴스 내의 위치입니다.</target>       </trans-unit>
        <trans-unit id="1141" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int64)">
          <source>The value to insert.</source>
          <target state="translated">삽입할 값입니다.</target>       </trans-unit>
        <trans-unit id="1142" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int64)">
          <source>Inserts the string representation of a 64-bit signed integer into this instance at the specified character position.</source>
          <target state="translated">부호 있는 64비트 정수의 문자열 표현을 지정된 문자 위치에 있는 이 인스턴스에 삽입합니다.</target>       </trans-unit>
        <trans-unit id="1143" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int64)">
          <source>A reference to this instance after the insert operation has completed.</source>
          <target state="translated">삽입 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="1144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int64)">
          <source><ph id="ph1">&lt;xref:System.Int64.ToString%2A?displayProperty=nameWithType&gt;</ph> is used to get a string representation of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Int64.ToString%2A?displayProperty=nameWithType&gt;</ph> 문자열 표현을 가져오는 데 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int64)">
          <source>Existing characters are shifted to make room for the new text.</source>
          <target state="translated">새 텍스트에 대 한 공간을 만들기 위해 기존 문자가 이동 됩니다.</target>       </trans-unit>
        <trans-unit id="1146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int64)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</target>       </trans-unit>
        <trans-unit id="1147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int64)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1148" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the length of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph>이 0보다 작거나 이 인스턴스 길이보다 큰 경우</target>       </trans-unit>
        <trans-unit id="1149" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int64)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">이 인스턴스의 값이 커지면 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>가 초과됩니다.</target>       </trans-unit>
        <trans-unit id="1150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int64)">
          <source>In the <ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph> and earlier versions, calls to this method threw an <ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph> if inserting <ph id="ph3">&lt;paramref name="value" /&gt;</ph> would cause the object's total length to exceed <ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">에 <ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph> 및 이전 버전에서는이 메서드를 호출 했습니다는 <ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph> 삽입 하는 경우 <ph id="ph3">&lt;paramref name="value" /&gt;</ph> 개체의 총 길이를 초과 인해 <ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Int64)">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, the method throws an <ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>.</source>
          <target state="translated">부터는 <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, 메서드에서 throw 된 <ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1152" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Object)">
          <source>The position in this instance where insertion begins.</source>
          <target state="translated">삽입을 시작할 인스턴스 내의 위치입니다.</target>       </trans-unit>
        <trans-unit id="1153" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Object)">
          <source>The object to insert, or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">삽입할 개체이거나 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1154" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Object)">
          <source>Inserts the string representation of an object into this instance at the specified character position.</source>
          <target state="translated">개체의 문자열 표현을 지정된 문자 위치에 있는 이 인스턴스에 삽입합니다.</target>       </trans-unit>
        <trans-unit id="1155" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Object)">
          <source>A reference to this instance after the insert operation has completed.</source>
          <target state="translated">삽입 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="1156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Object)">
          <source><ph id="ph1">&lt;xref:System.Object.ToString%2A?displayProperty=nameWithType&gt;</ph> is used to get a string representation of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.ToString%2A?displayProperty=nameWithType&gt;</ph> 문자열 표현을 가져오는 데 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Object)">
          <source>Existing characters are shifted to make room for the new text.</source>
          <target state="translated">새 텍스트에 대 한 공간을 만들기 위해 기존 문자가 이동 됩니다.</target>       </trans-unit>
        <trans-unit id="1158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Object)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</target>       </trans-unit>
        <trans-unit id="1159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Object)">
          <source>If <ph id="ph1">`value`</ph> is <ph id="ph2">`null`</ph>, the value of this instance is unchanged.</source>
          <target state="translated">경우 <ph id="ph1">`value`</ph> 은 <ph id="ph2">`null`</ph>,이 인스턴스의 값이 변경 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Object)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1161" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Object)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the length of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph>이 0보다 작거나 이 인스턴스 길이보다 큰 경우</target>       </trans-unit>
        <trans-unit id="1162" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Object)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">이 인스턴스의 값이 커지면 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>가 초과됩니다.</target>       </trans-unit>
        <trans-unit id="1163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Object)">
          <source>In the <ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph> and earlier versions, calls to this method threw an <ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph> if inserting <ph id="ph3">&lt;paramref name="value" /&gt;</ph> would cause the object's total length to exceed <ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">에 <ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph> 및 이전 버전에서는이 메서드를 호출 했습니다는 <ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph> 삽입 하는 경우 <ph id="ph3">&lt;paramref name="value" /&gt;</ph> 개체의 총 길이를 초과 인해 <ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Object)">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, the method throws an <ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>.</source>
          <target state="translated">부터는 <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, 메서드에서 throw 된 <ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1165" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.SByte)">
          <source>The position in this instance where insertion begins.</source>
          <target state="translated">삽입을 시작할 인스턴스 내의 위치입니다.</target>       </trans-unit>
        <trans-unit id="1166" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.SByte)">
          <source>The value to insert.</source>
          <target state="translated">삽입할 값입니다.</target>       </trans-unit>
        <trans-unit id="1167" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.SByte)">
          <source>Inserts the string representation of a specified 8-bit signed integer into this instance at the specified character position.</source>
          <target state="translated">지정된 8비트 부호 있는 정수의 문자열 표현을 지정된 문자 위치에 있는 이 인스턴스에 삽입합니다.</target>       </trans-unit>
        <trans-unit id="1168" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.SByte)">
          <source>A reference to this instance after the insert operation has completed.</source>
          <target state="translated">삽입 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="1169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.SByte)">
          <source><ph id="ph1">&lt;xref:System.SByte.ToString%2A?displayProperty=nameWithType&gt;</ph> is used to get a string representation of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.SByte.ToString%2A?displayProperty=nameWithType&gt;</ph> 문자열 표현을 가져오는 데 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.SByte)">
          <source>Existing characters are shifted to make room for the new text.</source>
          <target state="translated">새 텍스트에 대 한 공간을 만들기 위해 기존 문자가 이동 됩니다.</target>       </trans-unit>
        <trans-unit id="1171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.SByte)">
          <source>The capacity is adjusted as needed.</source>
          <target state="translated">필요에 따라 용량이 조정 됩니다.</target>       </trans-unit>
        <trans-unit id="1172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.SByte)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1173" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.SByte)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the length of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph>이 0보다 작거나 이 인스턴스 길이보다 큰 경우</target>       </trans-unit>
        <trans-unit id="1174" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.SByte)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">이 인스턴스의 값이 커지면 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>가 초과됩니다.</target>       </trans-unit>
        <trans-unit id="1175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.SByte)">
          <source>In the <ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph> and earlier versions, calls to this method threw an <ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph> if inserting <ph id="ph3">&lt;paramref name="value" /&gt;</ph> would cause the object's total length to exceed <ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">에 <ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph> 및 이전 버전에서는이 메서드를 호출 했습니다는 <ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph> 삽입 하는 경우 <ph id="ph3">&lt;paramref name="value" /&gt;</ph> 개체의 총 길이를 초과 인해 <ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.SByte)">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, the method throws an <ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>.</source>
          <target state="translated">부터는 <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, 메서드에서 throw 된 <ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1177" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Single)">
          <source>The position in this instance where insertion begins.</source>
          <target state="translated">삽입을 시작할 인스턴스 내의 위치입니다.</target>       </trans-unit>
        <trans-unit id="1178" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Single)">
          <source>The value to insert.</source>
          <target state="translated">삽입할 값입니다.</target>       </trans-unit>
        <trans-unit id="1179" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Single)">
          <source>Inserts the string representation of a single-precision floating point number into this instance at the specified character position.</source>
          <target state="translated">단정밀도 부동 소수점 숫자의 문자열 표현을 지정된 문자 위치에 있는 이 인스턴스에 삽입합니다.</target>       </trans-unit>
        <trans-unit id="1180" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Single)">
          <source>A reference to this instance after the insert operation has completed.</source>
          <target state="translated">삽입 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="1181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Single)">
          <source><ph id="ph1">&lt;xref:System.Single.ToString%2A?displayProperty=nameWithType&gt;</ph> is used to get a string representation of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Single.ToString%2A?displayProperty=nameWithType&gt;</ph> 문자열 표현을 가져오는 데 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Single)">
          <source>Existing characters are shifted to make room for the new text.</source>
          <target state="translated">새 텍스트에 대 한 공간을 만들기 위해 기존 문자가 이동 됩니다.</target>       </trans-unit>
        <trans-unit id="1183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Single)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</target>       </trans-unit>
        <trans-unit id="1184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Single)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1185" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Single)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the length of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph>이 0보다 작거나 이 인스턴스 길이보다 큰 경우</target>       </trans-unit>
        <trans-unit id="1186" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Single)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">이 인스턴스의 값이 커지면 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>가 초과됩니다.</target>       </trans-unit>
        <trans-unit id="1187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Single)">
          <source>In the <ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph> and earlier versions, calls to this method threw an <ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph> if inserting <ph id="ph3">&lt;paramref name="value" /&gt;</ph> would cause the object's total length to exceed <ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">에 <ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph> 및 이전 버전에서는이 메서드를 호출 했습니다는 <ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph> 삽입 하는 경우 <ph id="ph3">&lt;paramref name="value" /&gt;</ph> 개체의 총 길이를 초과 인해 <ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Single)">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, the method throws an <ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>.</source>
          <target state="translated">부터는 <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, 메서드에서 throw 된 <ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1189" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String)">
          <source>The position in this instance where insertion begins.</source>
          <target state="translated">삽입을 시작할 인스턴스 내의 위치입니다.</target>       </trans-unit>
        <trans-unit id="1190" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String)">
          <source>The string to insert.</source>
          <target state="translated">삽입할 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1191" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String)">
          <source>Inserts a string into this instance at the specified character position.</source>
          <target state="translated">문자열을 지정한 인덱스에 있는 이 인스턴스에 삽입합니다.</target>       </trans-unit>
        <trans-unit id="1192" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String)">
          <source>A reference to this instance after the insert operation has completed.</source>
          <target state="translated">삽입 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="1193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String)">
          <source>Existing characters are shifted to make room for the new text.</source>
          <target state="translated">새 텍스트에 대 한 공간을 만들기 위해 기존 문자가 이동 됩니다.</target>       </trans-unit>
        <trans-unit id="1194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String)">
          <source>The capacity is adjusted as needed.</source>
          <target state="translated">필요에 따라 용량이 조정 됩니다.</target>       </trans-unit>
        <trans-unit id="1195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String)">
          <source>This instance of <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> is not changed if <ph id="ph2">`value`</ph> is <ph id="ph3">`null`</ph>, or <ph id="ph4">`value`</ph> is not <ph id="ph5">`null`</ph> but its length is zero.</source>
          <target state="translated">이 인스턴스의 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 변경 되지 <ph id="ph2">`value`</ph> 은 <ph id="ph3">`null`</ph>, 또는 <ph id="ph4">`value`</ph> 않습니다 <ph id="ph5">`null`</ph> 아니지만 길이가 0입니다.</target>       </trans-unit>
        <trans-unit id="1196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1197" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the current length of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph>가 0보다 작거나 이 인스턴스의 현재 길이보다 큰 경우</target>       </trans-unit>
        <trans-unit id="1198" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1199" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String)">
          <source>The current length of this <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object plus the length of <ph id="ph2">&lt;paramref name="value" /&gt;</ph> exceeds <ph id="ph3">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 개체의 현재 길이와 <ph id="ph2">&lt;paramref name="value" /&gt;</ph>의 길이를 더한 값이 <ph id="ph3">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>를 초과하는 경우</target>       </trans-unit>
        <trans-unit id="1200" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16)">
          <source>The position in this instance where insertion begins.</source>
          <target state="translated">삽입을 시작할 인스턴스 내의 위치입니다.</target>       </trans-unit>
        <trans-unit id="1201" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16)">
          <source>The value to insert.</source>
          <target state="translated">삽입할 값입니다.</target>       </trans-unit>
        <trans-unit id="1202" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16)">
          <source>Inserts the string representation of a 16-bit unsigned integer into this instance at the specified character position.</source>
          <target state="translated">부호 없는 16비트 정수의 문자열 표현을 지정된 문자 위치에 있는 이 인스턴스에 삽입합니다.</target>       </trans-unit>
        <trans-unit id="1203" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16)">
          <source>A reference to this instance after the insert operation has completed.</source>
          <target state="translated">삽입 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="1204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16)">
          <source><ph id="ph1">&lt;xref:System.UInt16.ToString%2A?displayProperty=nameWithType&gt;</ph> is used to get a string representation of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.UInt16.ToString%2A?displayProperty=nameWithType&gt;</ph> 문자열 표현을 가져오는 데 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16)">
          <source>Existing characters are shifted to make room for the new text.</source>
          <target state="translated">새 텍스트에 대 한 공간을 만들기 위해 기존 문자가 이동 됩니다.</target>       </trans-unit>
        <trans-unit id="1206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</target>       </trans-unit>
        <trans-unit id="1207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1208" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the length of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph>이 0보다 작거나 이 인스턴스 길이보다 큰 경우</target>       </trans-unit>
        <trans-unit id="1209" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">이 인스턴스의 값이 커지면 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>가 초과됩니다.</target>       </trans-unit>
        <trans-unit id="1210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16)">
          <source>In the <ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph> and earlier versions, calls to this method threw an <ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph> if inserting <ph id="ph3">&lt;paramref name="value" /&gt;</ph> would cause the object's total length to exceed <ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">에 <ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph> 및 이전 버전에서는이 메서드를 호출 했습니다는 <ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph> 삽입 하는 경우 <ph id="ph3">&lt;paramref name="value" /&gt;</ph> 개체의 총 길이를 초과 인해 <ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16)">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, the method throws an <ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>.</source>
          <target state="translated">부터는 <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, 메서드에서 throw 된 <ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1212" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32)">
          <source>The position in this instance where insertion begins.</source>
          <target state="translated">삽입을 시작할 인스턴스 내의 위치입니다.</target>       </trans-unit>
        <trans-unit id="1213" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32)">
          <source>The value to insert.</source>
          <target state="translated">삽입할 값입니다.</target>       </trans-unit>
        <trans-unit id="1214" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32)">
          <source>Inserts the string representation of a 32-bit unsigned integer into this instance at the specified character position.</source>
          <target state="translated">부호 없는 32비트 정수의 문자열 표현을 지정된 문자 위치에 있는 이 인스턴스에 삽입합니다.</target>       </trans-unit>
        <trans-unit id="1215" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32)">
          <source>A reference to this instance after the insert operation has completed.</source>
          <target state="translated">삽입 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="1216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32)">
          <source><ph id="ph1">&lt;xref:System.UInt32.ToString%2A?displayProperty=nameWithType&gt;</ph> is used to get a string representation of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.UInt32.ToString%2A?displayProperty=nameWithType&gt;</ph> 문자열 표현을 가져오는 데 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32)">
          <source>Existing characters are shifted to make room for the new text.</source>
          <target state="translated">새 텍스트에 대 한 공간을 만들기 위해 기존 문자가 이동 됩니다.</target>       </trans-unit>
        <trans-unit id="1218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</target>       </trans-unit>
        <trans-unit id="1219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1220" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the length of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph>이 0보다 작거나 이 인스턴스 길이보다 큰 경우</target>       </trans-unit>
        <trans-unit id="1221" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">이 인스턴스의 값이 커지면 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>가 초과됩니다.</target>       </trans-unit>
        <trans-unit id="1222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32)">
          <source>In the <ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph> and earlier versions, calls to this method threw an <ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph> if inserting <ph id="ph3">&lt;paramref name="value" /&gt;</ph> would cause the object's total length to exceed <ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">에 <ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph> 및 이전 버전에서는이 메서드를 호출 했습니다는 <ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph> 삽입 하는 경우 <ph id="ph3">&lt;paramref name="value" /&gt;</ph> 개체의 총 길이를 초과 인해 <ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32)">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, the method throws an <ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>.</source>
          <target state="translated">부터는 <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, 메서드에서 throw 된 <ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1224" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64)">
          <source>The position in this instance where insertion begins.</source>
          <target state="translated">삽입을 시작할 인스턴스 내의 위치입니다.</target>       </trans-unit>
        <trans-unit id="1225" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64)">
          <source>The value to insert.</source>
          <target state="translated">삽입할 값입니다.</target>       </trans-unit>
        <trans-unit id="1226" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64)">
          <source>Inserts the string representation of a 64-bit unsigned integer into this instance at the specified character position.</source>
          <target state="translated">부호 없는 64비트 정수의 문자열 표현을 지정된 문자 위치에 있는 이 인스턴스에 삽입합니다.</target>       </trans-unit>
        <trans-unit id="1227" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64)">
          <source>A reference to this instance after the insert operation has completed.</source>
          <target state="translated">삽입 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="1228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64)">
          <source><ph id="ph1">&lt;xref:System.UInt64.ToString%2A?displayProperty=nameWithType&gt;</ph> is used to get a string representation of <ph id="ph2">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.UInt64.ToString%2A?displayProperty=nameWithType&gt;</ph> 문자열 표현을 가져오는 데 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64)">
          <source>Existing characters are shifted to make room for the new text.</source>
          <target state="translated">새 텍스트에 대 한 공간을 만들기 위해 기존 문자가 이동 됩니다.</target>       </trans-unit>
        <trans-unit id="1230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</target>       </trans-unit>
        <trans-unit id="1231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1232" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the length of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph>이 0보다 작거나 이 인스턴스 길이보다 큰 경우</target>       </trans-unit>
        <trans-unit id="1233" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">이 인스턴스의 값이 커지면 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>가 초과됩니다.</target>       </trans-unit>
        <trans-unit id="1234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64)">
          <source>In the <ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph> and earlier versions, calls to this method threw an <ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph> if inserting <ph id="ph3">&lt;paramref name="value" /&gt;</ph> would cause the object's total length to exceed <ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">에 <ph id="ph1">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]</ph> 및 이전 버전에서는이 메서드를 호출 했습니다는 <ph id="ph2">&lt;see cref="T:System.ArgumentOutOfRangeException" /&gt;</ph> 삽입 하는 경우 <ph id="ph3">&lt;paramref name="value" /&gt;</ph> 개체의 총 길이를 초과 인해 <ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64)">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, the method throws an <ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>.</source>
          <target state="translated">부터는 <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, 메서드에서 throw 된 <ph id="ph2">&lt;see cref="T:System.OutOfMemoryException" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1236" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32)">
          <source>The position in this instance where insertion begins.</source>
          <target state="translated">삽입을 시작할 인스턴스 내의 위치입니다.</target>       </trans-unit>
        <trans-unit id="1237" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32)">
          <source>The string to insert.</source>
          <target state="translated">삽입할 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1238" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32)">
          <source>The number of times to insert <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept>을 삽입할 횟수입니다.</target>       </trans-unit>
        <trans-unit id="1239" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32)">
          <source>Inserts one or more copies of a specified string into this instance at the specified character position.</source>
          <target state="translated">지정된 하나 이상의 문자열의 복사본을 지정된 문자 위치에 있는 이 인스턴스에 삽입합니다.</target>       </trans-unit>
        <trans-unit id="1240" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32)">
          <source>A reference to this instance after insertion has completed.</source>
          <target state="translated">삽입 작업이 완료한 후에 이 인스턴스에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="1241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32)">
          <source>Existing characters are shifted to make room for the new text.</source>
          <target state="translated">새 텍스트에 대 한 공간을 만들기 위해 기존 문자가 이동 됩니다.</target>       </trans-unit>
        <trans-unit id="1242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</target>       </trans-unit>
        <trans-unit id="1243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32)">
          <source>This <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object is not changed if <ph id="ph2">`value`</ph> is <ph id="ph3">`null`</ph>, <ph id="ph4">`value`</ph> is not <ph id="ph5">`null`</ph> but its length is zero, or <ph id="ph6">`count`</ph> is zero.</source>
          <target state="translated">이 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 경우 개체는 변경 되지 않습니다 <ph id="ph2">`value`</ph> 은 <ph id="ph3">`null`</ph>, <ph id="ph4">`value`</ph> 않습니다 <ph id="ph5">`null`</ph> 아니지만 길이가 0 또는 <ph id="ph6">`count`</ph> 은 0입니다.</target>       </trans-unit>
        <trans-unit id="1244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1245" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the current length of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph>가 0보다 작거나 이 인스턴스의 현재 길이보다 큰 경우</target>       </trans-unit>
        <trans-unit id="1246" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1247" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph>가 0보다 작은 경우</target>       </trans-unit>
        <trans-unit id="1248" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32)">
          <source>The current length of this <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object plus the length of <ph id="ph2">&lt;paramref name="value" /&gt;</ph> times <ph id="ph3">&lt;paramref name="count" /&gt;</ph> exceeds <ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="value" /&gt;</ph>의 길이에 <ph id="ph3">&lt;paramref name="count" /&gt;</ph>를 곱한 값과 이 <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 개체의 현재 길이를 더한 값이 <ph id="ph4">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>를 초과하는 경우</target>       </trans-unit>
        <trans-unit id="1249" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>The position in this instance where insertion begins.</source>
          <target state="translated">삽입을 시작할 인스턴스 내의 위치입니다.</target>       </trans-unit>
        <trans-unit id="1250" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>A character array.</source>
          <target state="translated">문자 배열입니다.</target>       </trans-unit>
        <trans-unit id="1251" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>The starting index within <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept> 내의 시작 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="1252" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>The number of characters to insert.</source>
          <target state="translated">삽입할 문자 수입니다.</target>       </trans-unit>
        <trans-unit id="1253" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>Inserts the string representation of a specified subarray of Unicode characters into this instance at the specified character position.</source>
          <target state="translated">유니코드 문자의 지정된 하위 배열에 대한 문자열 표현을 지정된 문자 위치에 있는 이 인스턴스에 삽입합니다.</target>       </trans-unit>
        <trans-unit id="1254" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>A reference to this instance after the insert operation has completed.</source>
          <target state="translated">삽입 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="1255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>Existing characters are shifted to make room for the new text.</source>
          <target state="translated">새 텍스트에 대 한 공간을 만들기 위해 기존 문자가 이동 됩니다.</target>       </trans-unit>
        <trans-unit id="1256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>The capacity of this instance is adjusted as needed.</source>
          <target state="translated">이 인스턴스의 용량에는 필요에 따라 조정 됩니다.</target>       </trans-unit>
        <trans-unit id="1257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Text.StringBuilder.Insert%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1258" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>, and <ph id="ph3">&lt;paramref name="startIndex" /&gt;</ph> and <ph id="ph4">&lt;paramref name="charCount" /&gt;</ph> are not zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>이고 <ph id="ph3">&lt;paramref name="startIndex" /&gt;</ph> 및 <ph id="ph4">&lt;paramref name="charCount" /&gt;</ph>는 0이 아닙니다.</target>       </trans-unit>
        <trans-unit id="1259" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph>, <ph id="ph2">&lt;paramref name="startIndex" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="charCount" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph>, <ph id="ph2">&lt;paramref name="startIndex" /&gt;</ph> 또는 <ph id="ph3">&lt;paramref name="charCount" /&gt;</ph>가 0보다 작은 경우</target>       </trans-unit>
        <trans-unit id="1260" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1261" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is greater than the length of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph>가 이 인스턴스의 길이보다 큽니다.</target>       </trans-unit>
        <trans-unit id="1262" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1263" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> plus <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> is not a position within <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph>와 <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph>의 합이 <ph id="ph3">&lt;paramref name="value" /&gt;</ph> 내에 위치하지 않는 경우</target>       </trans-unit>
        <trans-unit id="1264" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1265" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">이 인스턴스의 값이 커지면 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>가 초과됩니다.</target>       </trans-unit>
        <trans-unit id="1266" translate="yes" xml:space="preserve" uid="P:System.Text.StringBuilder.Length">
          <source>Gets or sets the length of the current <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 개체의 길이를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="1267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Length">
          <source>The length of this instance.</source>
          <target state="translated">이 인스턴스의 길이입니다.</target>       </trans-unit>
        <trans-unit id="1268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Length">
          <source>The length of a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object is defined by its number of <ph id="ph2">&lt;xref:System.Char&gt;</ph> objects.</source>
          <target state="translated">길이 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 의 해당 번호로 개체 이루어집니다 <ph id="ph2">&lt;xref:System.Char&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="1269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Length">
          <source>Like the <ph id="ph1">&lt;xref:System.String.Length%2A?displayProperty=nameWithType&gt;</ph> property, the <ph id="ph2">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph> property indicates the length of the current string object.</source>
          <target state="translated">마찬가지로 <ph id="ph1">&lt;xref:System.String.Length%2A?displayProperty=nameWithType&gt;</ph> 속성에는 <ph id="ph2">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph> 속성은 현재 string 개체의 길이 나타냅니다.</target>       </trans-unit>
        <trans-unit id="1270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Length">
          <source>Unlike the <ph id="ph1">&lt;xref:System.String.Length%2A?displayProperty=nameWithType&gt;</ph> property, which is read-only, the <ph id="ph2">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph> property allows you to modify the length of the string stored to the <ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">와 달리는 <ph id="ph1">&lt;xref:System.String.Length%2A?displayProperty=nameWithType&gt;</ph> 속성 읽기 전용 즉는 <ph id="ph2">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph> 속성에 저장 된 문자열의 길이 수정할 수 있습니다는 <ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="1271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Length">
          <source>If the specified length is less than the current length, the current <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object is truncated to the specified length.</source>
          <target state="translated">지정된 된 길이 현재 현재 길이 보다 작은 경우 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체가 지정 된 길이로 잘립니다.</target>       </trans-unit>
        <trans-unit id="1272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Length">
          <source>If the specified length is greater than the current length, the end of the string value of the current <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object is padded with the Unicode NULL character (U+0000).</source>
          <target state="translated">지정 된 길이 현재 문자열의 마지막 현재 길이 보다 큰 경우 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체 유니코드 NULL 문자로 채워집니다 (U + 0000)입니다.</target>       </trans-unit>
        <trans-unit id="1273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Length">
          <source>If the specified length is greater than the current capacity, <ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph> increases so that it is greater than or equal to the specified length.</source>
          <target state="translated">지정된 된 길이 현재 용량 보다 큰 경우 <ph id="ph1">&lt;xref:System.Text.StringBuilder.Capacity%2A&gt;</ph> 지정된 된 길이 보다 크거나 있도록 증가 합니다.</target>       </trans-unit>
        <trans-unit id="1274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.Length">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph> property.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Text.StringBuilder.Length%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1275" translate="yes" xml:space="preserve" uid="P:System.Text.StringBuilder.Length">
          <source>The value specified for a set operation is less than zero or greater than <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">설정된 값이 0보다 작거나 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>보다 큰 경우</target>       </trans-unit>
        <trans-unit id="1276" translate="yes" xml:space="preserve" uid="P:System.Text.StringBuilder.MaxCapacity">
          <source>Gets the maximum capacity of this instance.</source>
          <target state="translated">이 인스턴스의 최대 용량을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="1277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.MaxCapacity">
          <source>The maximum number of characters this instance can hold.</source>
          <target state="translated">이 인스턴스가 보유할 수 있는 최대 문자 수입니다.</target>       </trans-unit>
        <trans-unit id="1278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.MaxCapacity">
          <source>The maximum capacity for this implementation is <ph id="ph1">&lt;xref:System.Int32.MaxValue?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이 구현에 대 한 최대 용량은 <ph id="ph1">&lt;xref:System.Int32.MaxValue?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.MaxCapacity">
          <source>However, this value is implementation-specific and might be different in other or later implementations.</source>
          <target state="translated">그러나이 값은 구현 별로 되며 다른 또는 이후 구현에서 다를 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.MaxCapacity">
          <source>You can explicitly set the maximum capacity of a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object by calling the <ph id="ph2">&lt;xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29&gt;</ph> constructor.</source>
          <target state="translated">최대 용량을 명시적으로 설정할 수는 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 호출 하 여 개체는 <ph id="ph2">&lt;xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="1281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.MaxCapacity">
          <source>In the<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> and the <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, when you instantiate the <ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph> object by calling the <ph id="ph4">&lt;xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29&gt;</ph> constructor, both the length and the capacity of the <ph id="ph5">&lt;xref:System.Text.StringBuilder&gt;</ph> instance can grow beyond the value of its <ph id="ph6">&lt;xref:System.Text.StringBuilder.MaxCapacity%2A&gt;</ph> property.</source>
          <target state="translated">에<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> 및 <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>인스턴스화할 때는 <ph id="ph3">&lt;xref:System.Text.StringBuilder&gt;</ph> 호출 하 여 개체는 <ph id="ph4">&lt;xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29&gt;</ph> 생성자, 길이의 용량은 <ph id="ph5">&lt;xref:System.Text.StringBuilder&gt;</ph> 인스턴스 값 이상으로 증가할 수 해당 <ph id="ph6">&lt;xref:System.Text.StringBuilder.MaxCapacity%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.StringBuilder.MaxCapacity">
          <source>This can occur particularly when you call the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> methods to append small strings.</source>
          <target state="translated">특히 호출 하는 경우 발생할 수 있습니다는 <ph id="ph1">&lt;xref:System.Text.StringBuilder.Append%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%2A&gt;</ph> 작은 문자열을 추가 하는 메서드.</target>       </trans-unit>
        <trans-unit id="1283" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Remove(System.Int32,System.Int32)">
          <source>The number of characters to remove.</source>
          <target state="translated">제거할 문자 수입니다.</target>       </trans-unit>
        <trans-unit id="1284" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Remove(System.Int32,System.Int32)">
          <source>Removes the specified range of characters from this instance.</source>
          <target state="translated">이 인스턴스에서 지정된 문자 범위를 제거합니다.</target>       </trans-unit>
        <trans-unit id="1285" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Remove(System.Int32,System.Int32)">
          <source>A reference to this instance after the excise operation has completed.</source>
          <target state="translated">삭제 작업이 완료된 후 이 인스턴스에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="1286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Remove(System.Int32,System.Int32)">
          <source>The current method removes the specified range of characters from the current instance.</source>
          <target state="translated">현재 메서드는 현재 인스턴스에서 지정 된 범위의 문자를 제거합니다.</target>       </trans-unit>
        <trans-unit id="1287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Remove(System.Int32,System.Int32)">
          <source>The characters at (<ph id="ph1">`startIndex`</ph><ph id="ph2"> + </ph><ph id="ph3">`length`</ph>) are moved to <ph id="ph4">`startIndex`</ph>, and the string value of the current instance is shortened by <ph id="ph5">`length`</ph>.</source>
          <target state="translated">에 있는 문자 (<ph id="ph1">`startIndex`</ph><ph id="ph2"> + </ph><ph id="ph3">`length`</ph>)로 이동 <ph id="ph4">`startIndex`</ph>, 현재 인스턴스의 문자열 값 만큼 줄어듭니다 및 <ph id="ph5">`length`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Remove(System.Int32,System.Int32)">
          <source>The capacity of the current instance is unaffected.</source>
          <target state="translated">현재 인스턴스의 용량 영향을 받지 않습니다.</target>       </trans-unit>
        <trans-unit id="1289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Remove(System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.StringBuilder.Remove%2A&gt;</ph> method modifies the value of the current <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> instance and returns that instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.StringBuilder.Remove%2A&gt;</ph> 현재 값 수정 <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> 인스턴스 및 해당 인스턴스를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="1290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Remove(System.Int32,System.Int32)">
          <source>It does not create and return a new <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object.</source>
          <target state="translated">만들 고 새 반환 되지 않는 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="1291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Remove(System.Int32,System.Int32)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Remove%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Text.StringBuilder.Remove%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1292" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Remove(System.Int32,System.Int32)">
          <source>If <ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> or <ph id="ph2">&lt;paramref name="length" /&gt;</ph> is less than zero, or <ph id="ph3">&lt;paramref name="startIndex" /&gt;</ph><ph id="ph4"> + </ph><ph id="ph5">&lt;paramref name="length" /&gt;</ph> is greater than the length of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="length" /&gt;</ph>가 0보다 작거나 <ph id="ph3">&lt;paramref name="startIndex" /&gt;</ph><ph id="ph4"> + </ph><ph id="ph5">&lt;paramref name="length" /&gt;</ph>가 이 인스턴스의 길이보다 큽니다.</target>       </trans-unit>
        <trans-unit id="1293" translate="yes" xml:space="preserve" uid="T:System.Text.StringBuilder">
          <source>Replaces all occurrences of a specified character or string in this instance with another specified character or string.</source>
          <target state="translated">이 인스턴스에서 발견되는 지정된 문자 또는 문자열을 지정된 다른 문자 또는 문자열로 모두 바꿉니다.</target>       </trans-unit>
        <trans-unit id="1294" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.Char,System.Char)">
          <source>The character to replace.</source>
          <target state="translated">바꿀 문자입니다.</target>       </trans-unit>
        <trans-unit id="1295" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.Char,System.Char)">
          <source>The character that replaces <bpt id="p1">&lt;c&gt;</bpt>oldChar<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>oldChar<ept id="p1">&lt;/c&gt;</ept>를 바꾸는 문자입니다.</target>       </trans-unit>
        <trans-unit id="1296" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.Char,System.Char)">
          <source>Replaces all occurrences of a specified character in this instance with another specified character.</source>
          <target state="translated">이 인스턴스에서 발견되는 지정된 문자를 지정된 다른 문자로 모두 바꿉니다.</target>       </trans-unit>
        <trans-unit id="1297" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.Char,System.Char)">
          <source>A reference to this instance with <ph id="ph1">&lt;paramref name="oldChar" /&gt;</ph> replaced by <ph id="ph2">&lt;paramref name="newChar" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="oldChar" /&gt;</ph>가 <ph id="ph2">&lt;paramref name="newChar" /&gt;</ph>로 바뀐 이 인스턴스에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="1298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Replace(System.Char,System.Char)">
          <source>This method performs an ordinal, case-sensitive comparison to identify occurrences of <ph id="ph1">`oldChar`</ph> in the current instance.</source>
          <target state="translated">이 메서드는 횟수를 식별 하는 서 수, 대/소문자 구분 비교를 수행 <ph id="ph1">`oldChar`</ph> 현재 인스턴스에 있습니다.</target>       </trans-unit>
        <trans-unit id="1299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Replace(System.Char,System.Char)">
          <source>The size of the current <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> instance is unchanged after the replacement.</source>
          <target state="translated">현재 크기 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 교체 후 인스턴스는 변경 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Replace(System.Char,System.Char)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Replace%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Text.StringBuilder.Replace%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1301" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.String,System.String)">
          <source>The string to replace.</source>
          <target state="translated">바꿀 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1302" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.String,System.String)">
          <source>The string that replaces <bpt id="p1">&lt;c&gt;</bpt>oldValue<ept id="p1">&lt;/c&gt;</ept>, or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>oldValue<ept id="p1">&lt;/c&gt;</ept>를 바꾸는 문자열이거나 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1303" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.String,System.String)">
          <source>Replaces all occurrences of a specified string in this instance with another specified string.</source>
          <target state="translated">이 인스턴스에서 발견되는 지정된 문자열을 지정된 다른 문자열로 모두 바꿉니다.</target>       </trans-unit>
        <trans-unit id="1304" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.String,System.String)">
          <source>A reference to this instance with all instances of <ph id="ph1">&lt;paramref name="oldValue" /&gt;</ph> replaced by <ph id="ph2">&lt;paramref name="newValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="oldValue" /&gt;</ph>의 모든 인스턴스가 <ph id="ph2">&lt;paramref name="newValue" /&gt;</ph>로 바뀐 이 인스턴스에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="1305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Replace(System.String,System.String)">
          <source>This method performs an ordinal, case-sensitive comparison to identify occurrences of <ph id="ph1">`oldValue`</ph> in the current instance.</source>
          <target state="translated">이 메서드는 횟수를 식별 하는 서 수, 대/소문자 구분 비교를 수행 <ph id="ph1">`oldValue`</ph> 현재 인스턴스에 있습니다.</target>       </trans-unit>
        <trans-unit id="1306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Replace(System.String,System.String)">
          <source>If <ph id="ph1">`newValue`</ph> is <ph id="ph2">`null`</ph> or <ph id="ph3">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>, all occurrences of <ph id="ph4">`oldValue`</ph> are removed.</source>
          <target state="translated">경우 <ph id="ph1">`newValue`</ph> 은 <ph id="ph2">`null`</ph> 또는 <ph id="ph3">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>의 항목을 모두 <ph id="ph4">`oldValue`</ph> 제거 됩니다.</target>       </trans-unit>
        <trans-unit id="1307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Replace(System.String,System.String)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Replace%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Text.StringBuilder.Replace%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1308" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="oldValue" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="oldValue" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="1309" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.String,System.String)">
          <source>The length of <ph id="ph1">&lt;paramref name="oldValue" /&gt;</ph> is zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="oldValue" /&gt;</ph>의 길이가 0인 경우</target>       </trans-unit>
        <trans-unit id="1310" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.String,System.String)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">이 인스턴스의 값이 커지면 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>가 초과됩니다.</target>       </trans-unit>
        <trans-unit id="1311" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32)">
          <source>The character to replace.</source>
          <target state="translated">바꿀 문자입니다.</target>       </trans-unit>
        <trans-unit id="1312" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32)">
          <source>The character that replaces <bpt id="p1">&lt;c&gt;</bpt>oldChar<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>oldChar<ept id="p1">&lt;/c&gt;</ept>를 바꾸는 문자입니다.</target>       </trans-unit>
        <trans-unit id="1313" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32)">
          <source>The position in this instance where the substring begins.</source>
          <target state="translated">부분 문자열이 시작되는 인스턴스 내의 위치입니다.</target>       </trans-unit>
        <trans-unit id="1314" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32)">
          <source>The length of the substring.</source>
          <target state="translated">부분 문자열의 길이입니다.</target>       </trans-unit>
        <trans-unit id="1315" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32)">
          <source>Replaces, within a substring of this instance, all occurrences of a specified character with another specified character.</source>
          <target state="translated">이 인스턴스의 부분 문자열에서 발견되는 지정된 문자를 지정된 다른 문자로 모두 바꿉니다.</target>       </trans-unit>
        <trans-unit id="1316" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32)">
          <source>A reference to this instance with <ph id="ph1">&lt;paramref name="oldChar" /&gt;</ph> replaced by <ph id="ph2">&lt;paramref name="newChar" /&gt;</ph> in the range from <ph id="ph3">&lt;paramref name="startIndex" /&gt;</ph> to <ph id="ph4">&lt;paramref name="startIndex" /&gt;</ph><ph id="ph5"> + </ph><ph id="ph6">&lt;paramref name="count" /&gt;</ph> -1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="oldChar" /&gt;</ph>가 <ph id="ph3">&lt;paramref name="startIndex" /&gt;</ph>에서부터 <ph id="ph4">&lt;paramref name="startIndex" /&gt;</ph><ph id="ph5"> + </ph><ph id="ph6">&lt;paramref name="count" /&gt;</ph> -1의 범위에 있는 <ph id="ph2">&lt;paramref name="newChar" /&gt;</ph>로 바뀐 이 인스턴스에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="1317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32)">
          <source>This method performs an ordinal, case-sensitive comparison to identify occurrences of <ph id="ph1">`oldChar`</ph> in the current instance.</source>
          <target state="translated">이 메서드는 횟수를 식별 하는 서 수, 대/소문자 구분 비교를 수행 <ph id="ph1">`oldChar`</ph> 현재 인스턴스에 있습니다.</target>       </trans-unit>
        <trans-unit id="1318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32)">
          <source>The size of the current <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object is unchanged after the replacement.</source>
          <target state="translated">현재 크기 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체는 교체 후 변경 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Replace%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Text.StringBuilder.Replace%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1320" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="count" /&gt;</ph> is greater than the length of the value of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="count" /&gt;</ph>가 이 인스턴스의 길이보다 큽니다.</target>       </trans-unit>
        <trans-unit id="1321" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1322" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="count" /&gt;</ph>가 0보다 작습니다.</target>       </trans-unit>
        <trans-unit id="1323" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32)">
          <source>The string to replace.</source>
          <target state="translated">바꿀 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1324" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32)">
          <source>The string that replaces <bpt id="p1">&lt;c&gt;</bpt>oldValue<ept id="p1">&lt;/c&gt;</ept>, or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>oldValue<ept id="p1">&lt;/c&gt;</ept>를 바꾸는 문자열이거나 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1325" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32)">
          <source>The position in this instance where the substring begins.</source>
          <target state="translated">부분 문자열이 시작되는 인스턴스 내의 위치입니다.</target>       </trans-unit>
        <trans-unit id="1326" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32)">
          <source>The length of the substring.</source>
          <target state="translated">부분 문자열의 길이입니다.</target>       </trans-unit>
        <trans-unit id="1327" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32)">
          <source>Replaces, within a substring of this instance, all occurrences of a specified string with another specified string.</source>
          <target state="translated">이 인스턴스의 부분 문자열에서 발견되는 지정된 문자열을 지정된 다른 문자열로 모두 바꿉니다.</target>       </trans-unit>
        <trans-unit id="1328" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32)">
          <source>A reference to this instance with all instances of <ph id="ph1">&lt;paramref name="oldValue" /&gt;</ph> replaced by <ph id="ph2">&lt;paramref name="newValue" /&gt;</ph> in the range from <ph id="ph3">&lt;paramref name="startIndex" /&gt;</ph> to <ph id="ph4">&lt;paramref name="startIndex" /&gt;</ph><ph id="ph5"> + </ph><ph id="ph6">&lt;paramref name="count" /&gt;</ph> - 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="oldValue" /&gt;</ph>의 모든 인스턴스가 <ph id="ph3">&lt;paramref name="startIndex" /&gt;</ph>에서 <ph id="ph4">&lt;paramref name="startIndex" /&gt;</ph><ph id="ph5"> + </ph><ph id="ph6">&lt;paramref name="count" /&gt;</ph> - 1 범위에 있는 <ph id="ph2">&lt;paramref name="newValue" /&gt;</ph>로 바뀐 이 인스턴스에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="1329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32)">
          <source>This method performs an ordinal, case-sensitive comparison to identify occurrences of <ph id="ph1">`oldValue`</ph> in the specified substring.</source>
          <target state="translated">이 메서드는 횟수를 식별 하는 서 수, 대/소문자 구분 비교를 수행 <ph id="ph1">`oldValue`</ph> 에 지정된 된 부분 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32)">
          <source>If <ph id="ph1">`newValue`</ph> is <ph id="ph2">`null`</ph> or <ph id="ph3">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>, all occurrences of <ph id="ph4">`oldValue`</ph> are removed.</source>
          <target state="translated">경우 <ph id="ph1">`newValue`</ph> 은 <ph id="ph2">`null`</ph> 또는 <ph id="ph3">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>의 항목을 모두 <ph id="ph4">`oldValue`</ph> 제거 됩니다.</target>       </trans-unit>
        <trans-unit id="1331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Text.StringBuilder.Replace%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Text.StringBuilder.Replace%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1332" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="oldValue" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="oldValue" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="1333" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32)">
          <source>The length of <ph id="ph1">&lt;paramref name="oldValue" /&gt;</ph> is zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="oldValue" /&gt;</ph>의 길이가 0인 경우</target>       </trans-unit>
        <trans-unit id="1334" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="count" /&gt;</ph>가 0보다 작습니다.</target>       </trans-unit>
        <trans-unit id="1335" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1336" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> plus <ph id="ph2">&lt;paramref name="count" /&gt;</ph> indicates a character position not within this instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph>와 <ph id="ph2">&lt;paramref name="count" /&gt;</ph>의 합이 이 인스턴스 내에 있지 않은 문자 위치를 나타내는 경우</target>       </trans-unit>
        <trans-unit id="1337" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1338" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32)">
          <source>Enlarging the value of this instance would exceed <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>.</source>
          <target state="translated">이 인스턴스의 값이 커지면 <ph id="ph1">&lt;see cref="P:System.Text.StringBuilder.MaxCapacity" /&gt;</ph>가 초과됩니다.</target>       </trans-unit>
        <trans-unit id="1339" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The object to populate with serialization information.</source>
          <target state="translated">serialization 정보로 채울 개체입니다.</target>       </trans-unit>
        <trans-unit id="1340" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The place to store and retrieve serialized data.</source>
          <target state="translated">serialize된 데이터를 저장 및 검색할 위치입니다.</target>       </trans-unit>
        <trans-unit id="1341" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Reserved for future use.</source>
          <target state="translated">나중에 사용하기 위해 예약되어 있습니다.</target>       </trans-unit>
        <trans-unit id="1342" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Populates a <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object with the data necessary to deserialize the current <ph id="ph2">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> 개체를 deserialize하는 데 필요한 데이터로 <ph id="ph2">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 개체를 채웁니다.</target>       </trans-unit>
        <trans-unit id="1343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">`context`</ph> parameter is reserved for future use and does not participate in this operation.</source>
          <target state="translated"><ph id="ph1">`context`</ph> 매개 변수는 나중에 사용할 수는 예약 되어 있으며이 작업에 참여 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="1344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo.AddValue%28System.String%2CSystem.Object%2CSystem.Type%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo.AddValue%28System.String%2CSystem.Object%2CSystem.Type%29?displayProperty=nameWithType&gt;</ph> 메서드를 참조하세요.</target>       </trans-unit>
        <trans-unit id="1345" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source><ph id="ph1">&lt;paramref name="info" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="info" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="1346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</target>       </trans-unit>
        <trans-unit id="1347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1348" translate="yes" xml:space="preserve" uid="T:System.Text.StringBuilder">
          <source>Converts the value of a <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph>의 값을 <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1349" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.ToString">
          <source>Converts the value of this instance to a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated">이 인스턴스의 값을 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1350" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.ToString">
          <source>A string whose value is the same as this instance.</source>
          <target state="translated">이 인스턴스와 같은 값을 가진 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.ToString">
          <source>You must call the <ph id="ph1">&lt;xref:System.Text.StringBuilder.ToString%2A&gt;</ph> method to convert the <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object to a <ph id="ph3">&lt;xref:System.String&gt;</ph> object before you can pass the string represented by the <ph id="ph4">&lt;xref:System.Text.StringBuilder&gt;</ph> object to a method that has a <ph id="ph5">&lt;xref:System.String&gt;</ph> parameter or display it in the user interface.</source>
          <target state="translated">호출 해야 합니다는 <ph id="ph1">&lt;xref:System.Text.StringBuilder.ToString%2A&gt;</ph> 변환 하는 메서드는 <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체를 <ph id="ph3">&lt;xref:System.String&gt;</ph> 이 나타내는 문자열을 전달할 수 전에 개체는 <ph id="ph4">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체 변수가 있는 메서드를는 <ph id="ph5">&lt;xref:System.String&gt;</ph> 매개 변수 또는 사용자 인터페이스에 표시 합니다.</target>       </trans-unit>
        <trans-unit id="1352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.ToString">
          <source>The following example demonstrates calling the <ph id="ph1">&lt;xref:System.Text.StringBuilder.ToString%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Text.StringBuilder.ToString%2A&gt;</ph> 메서드를 호출하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.ToString">
          <source>This example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> class.</source>
          <target state="translated">이 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="1354" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.ToString(System.Int32,System.Int32)">
          <source>The starting position of the substring in this instance.</source>
          <target state="translated">이 인스턴스에 있는 부분 문자열의 시작 위치입니다.</target>       </trans-unit>
        <trans-unit id="1355" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.ToString(System.Int32,System.Int32)">
          <source>The length of the substring.</source>
          <target state="translated">부분 문자열의 길이입니다.</target>       </trans-unit>
        <trans-unit id="1356" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.ToString(System.Int32,System.Int32)">
          <source>Converts the value of a substring of this instance to a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated">이 인스턴스의 부분 문자열 값을 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="1357" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.ToString(System.Int32,System.Int32)">
          <source>A string whose value is the same as the specified substring of this instance.</source>
          <target state="translated">이 인스턴스의 지정된 부분 문자열과 같은 값을 가진 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.StringBuilder.ToString(System.Int32,System.Int32)">
          <source>You must call the <ph id="ph1">&lt;xref:System.Text.StringBuilder.ToString%2A&gt;</ph> method to convert the <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> object to a <ph id="ph3">&lt;xref:System.String&gt;</ph> object before you can pass the string represented by the <ph id="ph4">&lt;xref:System.Text.StringBuilder&gt;</ph> object to a method that has a <ph id="ph5">&lt;xref:System.String&gt;</ph> parameter or display it in the user interface.</source>
          <target state="translated">호출 해야 합니다는 <ph id="ph1">&lt;xref:System.Text.StringBuilder.ToString%2A&gt;</ph> 변환 하는 메서드는 <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체를 <ph id="ph3">&lt;xref:System.String&gt;</ph> 이 나타내는 문자열을 전달할 수 전에 개체는 <ph id="ph4">&lt;xref:System.Text.StringBuilder&gt;</ph> 개체 변수가 있는 메서드를는 <ph id="ph5">&lt;xref:System.String&gt;</ph> 매개 변수 또는 사용자 인터페이스에 표시 합니다.</target>       </trans-unit>
        <trans-unit id="1359" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.ToString(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> or <ph id="ph2">&lt;paramref name="length" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="length" /&gt;</ph>가 0보다 작습니다.</target>       </trans-unit>
        <trans-unit id="1360" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.ToString(System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1361" translate="yes" xml:space="preserve" uid="M:System.Text.StringBuilder.ToString(System.Int32,System.Int32)">
          <source>The sum of <ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> and <ph id="ph2">&lt;paramref name="length" /&gt;</ph> is greater than the length of the current instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph>와 <ph id="ph2">&lt;paramref name="length" /&gt;</ph>의 합이 현재 인스턴스의 길이보다 큰 경우</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>