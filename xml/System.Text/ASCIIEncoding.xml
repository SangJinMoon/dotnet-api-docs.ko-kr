<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ASCIIEncoding.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5ab5211a8f9320a934d74d9b3f821ee108ec6cb24.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ab5211a8f9320a934d74d9b3f821ee108ec6cb24</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Text.ASCIIEncoding">
          <source>Represents an ASCII character encoding of Unicode characters.</source>
          <target state="translated">유니코드 문자의 ASCII 문자 인코딩을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.ASCIIEncoding">
          <source>Encoding is the process of transforming a set of Unicode characters into a sequence of bytes.</source>
          <target state="translated">인코딩은 유니코드 문자 집합을 바이트 시퀀스로 변환하는 프로세스입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.ASCIIEncoding">
          <source>Decoding is the process of transforming a sequence of encoded bytes into a set of Unicode characters.</source>
          <target state="translated">디코딩은 유니코드 문자 집합으로 인코딩된 바이트 시퀀스로 변형 프로세스입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.ASCIIEncoding">
          <source><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> corresponds to the Windows code page 20127.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> 20127 Windows 코드 페이지에 해당합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.ASCIIEncoding">
          <source>Because ASCII is a 7-bit encoding, ASCII characters are limited to the lowest 128 Unicode characters, from U+0000 to U+007F.</source>
          <target state="translated">인코딩 7 비트 ASCII 이기 때문에 ASCII 문자는 U + 0000 ~ U + 007F에서에서 가장 낮은 128 개의 유니코드 문자일 제한 됩니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.ASCIIEncoding">
          <source>If you use the default encoder returned by the <ph id="ph1">&lt;xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType&gt;</ph> property or the <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.%23ctor%2A&gt;</ph> constructor, characters outside that range are replaced with a question mark (?) before the encoding operation is performed.</source>
          <target state="translated">반환 된 기본 인코더를 사용 하는 경우는 <ph id="ph1">&lt;xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType&gt;</ph> 속성 또는 <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.%23ctor%2A&gt;</ph> 생성자, 범위 밖의 문자 인코딩 작업을 수행 하기 전에 물음표 (?)로 대체 됩니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.ASCIIEncoding">
          <source>Because the <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> class supports only a limited character set, the <ph id="ph2">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id="ph3">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>, and <ph id="ph4">&lt;xref:System.Text.UTF32Encoding&gt;</ph> classes are better suited for globalized applications.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> 클래스는 제한 된 문자 집합만 지원는 <ph id="ph2">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id="ph3">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>, 및 <ph id="ph4">&lt;xref:System.Text.UTF32Encoding&gt;</ph> 클래스는 더 전역화 된 응용 프로그램에 적합 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.ASCIIEncoding">
          <source>The following considerations can help you to decide whether to use <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph>:</source>
          <target state="translated">다음 고려 사항이을 사용할지 결정에 도움이 될만한 <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.ASCIIEncoding">
          <source>Some protocols require ASCII or a subset of ASCII.</source>
          <target state="translated">일부 프로토콜 ASCII 또는 ASCII의 하위 집합을 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.ASCIIEncoding">
          <source>In these cases ASCII encoding is appropriate.</source>
          <target state="translated">이러한 경우 ASCII 인코딩을 방법이 적합 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.ASCIIEncoding">
          <source>If an 8-bit encoding is expected, then ASCII probably isn't the correct choice.</source>
          <target state="translated">8 비트 인코딩 예상 되는 경우 다음 ASCII 아닐 올바른 선택 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.ASCIIEncoding">
          <source>Instead, consider using UTF8 instead of ASCII.</source>
          <target state="translated">대신, ASCII 대신 u t f 8을 사용 하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.ASCIIEncoding">
          <source>For the characters U+0000 through U+007F, the results are identical, but all Unicode characters are representable in UTF-8, which avoids data loss.</source>
          <target state="translated">U + 007F 사이의 문자 U + 0000에 대 한 결과 동일 하지만 모든 유니코드 문자는 데이터 손실을 방지할 수는 u t F-8에서 표현할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.ASCIIEncoding">
          <source><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> does not provide error detection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> 오류 검색을 제공 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.ASCIIEncoding">
          <source>For security reasons, you should use <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>, or <ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph> and enable error detection.</source>
          <target state="translated">보안상의 이유로 사용할지 <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>, 또는 <ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph> 오류 검색을 사용 하도록 설정 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.ASCIIEncoding">
          <source>The <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph> method determines how many bytes result in encoding a set of Unicode characters, and the <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph> method performs the actual encoding.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph> 메서드는 유니코드 문자 집합을 인코딩할 될 바이트 수를 확인 및 <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph> 메서드에서는 실제 인코딩을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.ASCIIEncoding">
          <source>Likewise, the <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph> method determines how many characters result in decoding a sequence of bytes, and the <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetChars%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Text.ASCIIEncoding.GetString%2A&gt;</ph> methods perform the actual decoding.</source>
          <target state="translated">마찬가지로,는 <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph> 메서드 디코딩될, 바이트의 시퀀스의 문자 수를 확인 및 <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetChars%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Text.ASCIIEncoding.GetString%2A&gt;</ph> 메서드는 실제 디코딩을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.ASCIIEncoding">
          <source>Note that the default <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> constructor by itself might not have the appropriate behavior for your application.</source>
          <target state="translated">기본 <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> 생성자 자체 응용 프로그램에 대 한 적절 한 동작에 없을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.ASCIIEncoding">
          <source>You might want to consider setting the <ph id="ph1">&lt;xref:System.Text.Encoding.EncoderFallback%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Text.Encoding.DecoderFallback%2A&gt;</ph> property to <ph id="ph3">&lt;xref:System.Text.EncoderExceptionFallback&gt;</ph> or <ph id="ph4">&lt;xref:System.Text.DecoderExceptionFallback&gt;</ph> to prevent sequences with the 8th bit set.</source>
          <target state="translated">설정 하려는 경우는 <ph id="ph1">&lt;xref:System.Text.Encoding.EncoderFallback%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Text.Encoding.DecoderFallback%2A&gt;</ph> 속성을 <ph id="ph3">&lt;xref:System.Text.EncoderExceptionFallback&gt;</ph> 또는 <ph id="ph4">&lt;xref:System.Text.DecoderExceptionFallback&gt;</ph> 8 번째 비트가 설정 된 시퀀스를 방지 하기 위해 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.ASCIIEncoding">
          <source>Custom behavior might also be appropriate for these cases.</source>
          <target state="translated">이러한 경우에 적합 한 사용자 지정 동작 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.ASCIIEncoding">
          <source>The following example demonstrates how to encode Unicode characters into ASCII.</source>
          <target state="translated">다음 예제에서는 유니코드 문자를 ASCII로 인코딩하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.ASCIIEncoding">
          <source>Notice the loss of data that occurs when your application uses <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> to encode Unicode characters outside of the ASCII range.</source>
          <target state="translated">응용 프로그램에서 사용 하는 경우에 발생 하는 데이터의 손실 <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> ASCII 범위 밖의 유니코드 문자를 인코딩하는 데 있습니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.ASCIIEncoding" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Text.ASCIIEncoding" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> class does not provide error detection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> 클래스 오류 검색을 제공 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.#ctor">
          <source>For security reasons, you should use the <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>, or <ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph> class and enable error detection.</source>
          <target state="translated">보안상의 이유로 사용할지는 <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>, 또는 <ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph> 클래스 및 오류 검색이 가능 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.#ctor">
          <source>If you choose to use ASCII encoding, this constructor may not provide the appropriate fallback behavior for your application.</source>
          <target state="translated">ASCII 인코딩을 사용 하도록 선택 하면이 생성자는 응용 프로그램에 대 한 적절 한 동작을 대체 하지 제공할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.#ctor">
          <source>It uses the <ph id="ph1">&lt;xref:System.Text.EncoderReplacementFallback&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.DecoderReplacementFallback&gt;</ph> classes to replace every character outside the range of U+0000 through U+007F with a question mark (?).</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Text.EncoderReplacementFallback&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Text.DecoderReplacementFallback&gt;</ph> U + 0000에서 U + 007f의 범위 밖에 있는 모든 문자가 물음표 (?)로 대체 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.#ctor">
          <source>Instead, you can call the <ph id="ph1">&lt;xref:System.Text.Encoding.GetEncoding%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Text.Encoding.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29?displayProperty=nameWithType&gt;</ph> method and pass it <ph id="ph3">&lt;xref:System.Text.EncoderExceptionFallback&gt;</ph> and <ph id="ph4">&lt;xref:System.Text.DecoderExceptionFallback&gt;</ph> objects to use exception fallback.</source>
          <target state="translated">대신, 호출 수는 <ph id="ph1">&lt;xref:System.Text.Encoding.GetEncoding%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29?displayProperty=nameWithType&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Text.Encoding.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29?displayProperty=nameWithType&gt;</ph> 메서드 전달 <ph id="ph3">&lt;xref:System.Text.EncoderExceptionFallback&gt;</ph> 및 <ph id="ph4">&lt;xref:System.Text.DecoderExceptionFallback&gt;</ph> 예외 대체 (fallback)를 사용 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.#ctor">
          <source><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> supports only the Unicode character values between U+0000 and U+007F.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> 유니코드 문자 사이의 값이 U + 0000에서 U + 007F만 지원 됩니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.#ctor">
          <source>Therefore, <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>, and <ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph> are better suited for globalized applications.</source>
          <target state="translated">따라서 <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph> 전역화 된 응용 프로그램에 더 적합 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.#ctor">
          <source>The following example demonstrates how to create a new <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> instance and display the name of the encoding.</source>
          <target state="translated">다음 예제에서는 새로 만들려면 <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> 인스턴스 및 인코딩의 이름을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="T:System.Text.ASCIIEncoding">
          <source>Calculates the number of bytes produced by encoding a set of characters.</source>
          <target state="translated">문자 집합을 인코딩할 경우 생성되는 바이트 수를 계산합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the set of characters to encode.</source>
          <target state="translated">인코딩할 문자 집합이 포함된 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.String)">
          <source>Calculates the number of bytes produced by encoding the characters in the specified <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>의 문자를 인코딩하여 생성된 바이트 수를 계산합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.String)">
          <source>The number of bytes produced by encoding the specified characters.</source>
          <target state="translated">지정한 문자를 인코딩할 경우 생성되는 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.String)">
          <source>To calculate the exact array size required by <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph> to store the resulting bytes, the application uses <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph>.</source>
          <target state="translated">필요한 정확한 배열 크기를 계산 하려면 <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph> 결과 바이트를 저장 하기 위해 응용 프로그램에서 <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.String)">
          <source>To calculate the maximum array size, the application should use <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>.</source>
          <target state="translated">최대 배열 크기를 계산 하는 응용 프로그램 사용 해야 <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph> method generally allows allocation of less memory, while the <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph> 메서드는 일반적으로 적은 메모리의 할당을 통해 동안는 <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph> 메서드는 일반적으로 더 빠르게 실행 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.String)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph> method to return the number of bytes required to encode a string using <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 사용 하는 <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph> 메서드를 사용 하 여 문자열을 인코딩하는 데 필요한 바이트 수를 반환 <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.String)">
          <source><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="chars" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.String)">
          <source>The resulting number of bytes is greater than the maximum number that can be returned as an integer.</source>
          <target state="translated">결과 바이트 수가 정수로 반환될 수 있는 최대 수보다 큽니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.String)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for complete explanation)</source>
          <target state="translated">대체가 발생했습니다(전체 설명은 <bpt id="p1">[</bpt>.NET Framework의 문자 인코딩<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> 참조).</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.String)">
          <source>-and-</source>
          <target state="translated">및</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.String)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph>이 <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>로 설정됩니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char*,System.Int32)">
          <source>A pointer to the first character to encode.</source>
          <target state="translated">인코딩할 첫 번째 문자를 가리키는 포인터입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char*,System.Int32)">
          <source>The number of characters to encode.</source>
          <target state="translated">인코딩할 문자 수입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char*,System.Int32)">
          <source>Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.</source>
          <target state="translated">지정한 문자 포인터에서 시작되는 문자 집합을 인코딩할 경우 생성되는 바이트 수를 계산합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char*,System.Int32)">
          <source>The number of bytes produced by encoding the specified characters.</source>
          <target state="translated">지정한 문자를 인코딩할 경우 생성되는 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char*,System.Int32)">
          <source>To calculate the exact array size required by <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph> to store the resulting bytes, the application uses <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph>.</source>
          <target state="translated">필요한 정확한 배열 크기를 계산 하려면 <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph> 결과 바이트를 저장 하기 위해 응용 프로그램에서 <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char*,System.Int32)">
          <source>To calculate the maximum array size, the application should use <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>.</source>
          <target state="translated">최대 배열 크기를 계산 하는 응용 프로그램 사용 해야 <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char*,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph> method generally allows allocation of less memory, while the <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph> 메서드는 일반적으로 적은 메모리의 할당을 통해 동안는 <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph> 메서드는 일반적으로 더 빠르게 실행 합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="chars" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph>가 0보다 작은 경우</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char*,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char*,System.Int32)">
          <source>The resulting number of bytes is greater than the maximum number that can be returned as an integer.</source>
          <target state="translated">결과 바이트 수가 정수로 반환될 수 있는 최대 수보다 큽니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char*,System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for complete explanation)</source>
          <target state="translated">대체가 발생했습니다(전체 설명은 <bpt id="p1">[</bpt>.NET Framework의 문자 인코딩<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> 참조).</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char*,System.Int32)">
          <source>-and-</source>
          <target state="translated">및</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char*,System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph>이 <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>로 설정됩니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char*,System.Int32)">
          <source>Requires full trust for the immediate caller.</source>
          <target state="translated">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char*,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>The character array containing the set of characters to encode.</source>
          <target state="translated">인코딩할 문자 집합이 포함된 문자 배열입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>The index of the first character to encode.</source>
          <target state="translated">인코딩할 첫 번째 문자의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters to encode.</source>
          <target state="translated">인코딩할 문자 수입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>Calculates the number of bytes produced by encoding a set of characters from the specified character array.</source>
          <target state="translated">지정한 문자 배열의 문자 집합을 인코딩할 경우 생성되는 바이트 수를 계산합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>The number of bytes produced by encoding the specified characters.</source>
          <target state="translated">지정한 문자를 인코딩할 경우 생성되는 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>To calculate the exact array size required by <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph> to store the resulting bytes, the application uses <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph>.</source>
          <target state="translated">필요한 정확한 배열 크기를 계산 하려면 <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph> 결과 바이트를 저장 하기 위해 응용 프로그램에서 <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>To calculate the maximum array size, the application should use <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>.</source>
          <target state="translated">최대 배열 크기를 계산 하는 응용 프로그램 사용 해야 <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph> method generally allows allocation of less memory, while the <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph> 메서드는 일반적으로 적은 메모리의 할당을 통해 동안는 <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph> 메서드는 일반적으로 더 빠르게 실행 합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph> method to return the number of bytes required to encode an array of Unicode characters using <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 사용 하는 <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph> 메서드를 사용 하 여 유니코드 문자 배열을 인코딩하는 데 필요한 바이트 수를 반환 <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="chars" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="count" /&gt;</ph>가 0보다 작습니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> do not denote a valid range in <ph id="ph3">&lt;paramref name="chars" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 및 <ph id="ph2">&lt;paramref name="count" /&gt;</ph>가 <ph id="ph3">&lt;paramref name="chars" /&gt;</ph>에서 올바른 범위를 나타내지 않습니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>The resulting number of bytes is greater than the maximum number that can be returned as an integer.</source>
          <target state="translated">결과 바이트 수가 정수로 반환될 수 있는 최대 수보다 큽니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for complete explanation)</source>
          <target state="translated">대체가 발생했습니다(전체 설명은 <bpt id="p1">[</bpt>.NET Framework의 문자 인코딩<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> 참조).</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>-and-</source>
          <target state="translated">및</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph>이 <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>로 설정됩니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="T:System.Text.ASCIIEncoding">
          <source>Encodes a set of characters into a sequence of bytes.</source>
          <target state="translated">문자 집합을 바이트 시퀀스로 인코딩합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>A pointer to the first character to encode.</source>
          <target state="translated">인코딩할 첫 번째 문자를 가리키는 포인터입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>The number of characters to encode.</source>
          <target state="translated">인코딩할 문자 수입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>A pointer to the location at which to start writing the resulting sequence of bytes.</source>
          <target state="translated">결과 바이트 시퀀스를 쓰기 시작할 위치를 가리키는 포인터입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>The maximum number of bytes to write.</source>
          <target state="translated">쓸 최대 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.</source>
          <target state="translated">지정한 문자 포인터에서 시작하는 문자 집합을 지정한 바이트 포인터에서 시작하여 저장되는 바이트 시퀀스로 인코딩합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>The actual number of bytes written at the location indicated by <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph>가 가리키는 위치에 써지는 실제 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>To calculate the exact array size required by <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph> to store the resulting bytes, the application uses <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph>.</source>
          <target state="translated">필요한 정확한 배열 크기를 계산 하려면 <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph> 결과 바이트를 저장 하기 위해 응용 프로그램에서 <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>To calculate the maximum array size, the application should use <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>.</source>
          <target state="translated">최대 배열 크기를 계산 하는 응용 프로그램 사용 해야 <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph> method generally allows allocation of less memory, while the <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph> 메서드는 일반적으로 적은 메모리의 할당을 통해 동안는 <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph> 메서드는 일반적으로 더 빠르게 실행 합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>Data to be converted, such as data read from a stream, can be available only in sequential blocks.</source>
          <target state="translated">예: 스트림에서 읽은 데이터 변환할 데이터를 순차적인 블록에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> or the <ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph> provided by the <ph id="ph3">&lt;xref:System.Text.ASCIIEncoding.GetDecoder%2A&gt;</ph> method or the <ph id="ph4">&lt;xref:System.Text.ASCIIEncoding.GetEncoder%2A&gt;</ph> method, respectively.</source>
          <target state="translated">이 경우 응용 프로그램 데이터의 양이 너무 많아 작은 블록으로 나눌 경우 사용할지 또는 <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph> 에서 제공 되는 <ph id="ph3">&lt;xref:System.Text.ASCIIEncoding.GetDecoder%2A&gt;</ph> 메서드 또는 <ph id="ph4">&lt;xref:System.Text.ASCIIEncoding.GetEncoder%2A&gt;</ph> 메서드를 각각.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> does not provide error detection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> 오류 검색을 제공 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>Any Unicode character greater than U+007F is translated to an ASCII question mark ("?").</source>
          <target state="translated">모든 유니코드 문자 U + 007F 보다 큰 ASCII 물음표도 변환 됩니다 ("?").</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>For security reasons, your application is recommended to use <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>, or <ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph> and enable error detection.</source>
          <target state="translated">보안상의 이유로 응용 프로그램을 사용 하 여 것이 좋습니다 <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>, 또는 <ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph> 오류 검색을 사용 하도록 설정 합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="chars" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="charCount" /&gt;</ph> or <ph id="ph2">&lt;paramref name="byteCount" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="charCount" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="byteCount" /&gt;</ph>가 0보다 작습니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="byteCount" /&gt;</ph> is less than the resulting number of bytes.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="byteCount" /&gt;</ph>가 결과 바이트 수보다 작은 경우</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for complete explanation)</source>
          <target state="translated">대체가 발생했습니다(전체 설명은 <bpt id="p1">[</bpt>.NET Framework의 문자 인코딩<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> 참조).</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>-and-</source>
          <target state="translated">및</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph>이 <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>로 설정됩니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>Requires full trust for the immediate caller.</source>
          <target state="translated">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The character array containing the set of characters to encode.</source>
          <target state="translated">인코딩할 문자 집합이 포함된 문자 배열입니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The index of the first character to encode.</source>
          <target state="translated">인코딩할 첫 번째 문자의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The number of characters to encode.</source>
          <target state="translated">인코딩할 문자 수입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The byte array to contain the resulting sequence of bytes.</source>
          <target state="translated">결과 바이트 시퀀스를 포함할 바이트 배열입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The index at which to start writing the resulting sequence of bytes.</source>
          <target state="translated">결과 바이트 시퀀스를 쓰기 시작할 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>Encodes a set of characters from the specified character array into the specified byte array.</source>
          <target state="translated">지정한 문자 배열의 문자 집합을 지정한 바이트 배열로 인코딩합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The actual number of bytes written into <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph>에 쓴 실제 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>To calculate the exact array size required by <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph> to store the resulting bytes, the application uses <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph>.</source>
          <target state="translated">필요한 정확한 배열 크기를 계산 하려면 <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph> 결과 바이트를 저장 하기 위해 응용 프로그램에서 <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>To calculate the maximum array size, the application should use <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>.</source>
          <target state="translated">최대 배열 크기를 계산 하는 응용 프로그램 사용 해야 <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph> method generally allows allocation of less memory, while the <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph> 메서드는 일반적으로 적은 메모리의 할당을 통해 동안는 <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph> 메서드는 일반적으로 더 빠르게 실행 합니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>Data to be converted, such as data read from a stream, can be available only in sequential blocks.</source>
          <target state="translated">예: 스트림에서 읽은 데이터 변환할 데이터를 순차적인 블록에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> or the <ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph> provided by the <ph id="ph3">&lt;xref:System.Text.ASCIIEncoding.GetDecoder%2A&gt;</ph> method or the <ph id="ph4">&lt;xref:System.Text.ASCIIEncoding.GetEncoder%2A&gt;</ph> method, respectively.</source>
          <target state="translated">이 경우 응용 프로그램 데이터의 양이 너무 많아 작은 블록으로 나눌 경우 사용할지 또는 <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph> 에서 제공 되는 <ph id="ph3">&lt;xref:System.Text.ASCIIEncoding.GetDecoder%2A&gt;</ph> 메서드 또는 <ph id="ph4">&lt;xref:System.Text.ASCIIEncoding.GetEncoder%2A&gt;</ph> 메서드를 각각.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> does not provide error detection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> 오류 검색을 제공 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>Any Unicode character greater than U+007F is encoded as the ASCII question mark ("?").</source>
          <target state="translated">U + 007F 보다 큰 모든 유니코드 문자는 물음표의 ASCII로 인코딩됩니다 ("?").</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>For security reasons, your application is recommended to use <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>, or <ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph> and enable error detection.</source>
          <target state="translated">보안상의 이유로 응용 프로그램을 사용 하 여 것이 좋습니다 <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>, 또는 <ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph> 오류 검색을 사용 하도록 설정 합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph> method to encode a range of characters from a string and store the encoded characters in a range of elements in a byte array.</source>
          <target state="translated">다음 예제에서는 사용 하는 <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph> 메서드를 다양 한 문자열에서 문자 인코딩 및 바이트 배열의 요소 범위에 인코딩된 문자를 저장 합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="chars" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph> or <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> or <ph id="ph3">&lt;paramref name="byteIndex" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph>, <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> 또는 <ph id="ph3">&lt;paramref name="byteIndex" /&gt;</ph>가 0보다 작은 경우</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph> and <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> do not denote a valid range in <ph id="ph3">&lt;paramref name="chars" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph> 및 <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph>가 <ph id="ph3">&lt;paramref name="chars" /&gt;</ph>에서 올바른 범위를 나타내지 않습니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="byteIndex" /&gt;</ph> is not a valid index in <ph id="ph2">&lt;paramref name="bytes" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="byteIndex" /&gt;</ph>가 <ph id="ph2">&lt;paramref name="bytes" /&gt;</ph>의 유효한 인덱스가 아닌 경우</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> does not have enough capacity from <ph id="ph2">&lt;paramref name="byteIndex" /&gt;</ph> to the end of the array to accommodate the resulting bytes.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph>의 용량(<ph id="ph2">&lt;paramref name="byteIndex" /&gt;</ph> ~ 배열 끝)이 부족해서 결과 바이트를 수용할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for complete explanation)</source>
          <target state="translated">대체가 발생했습니다(전체 설명은 <bpt id="p1">[</bpt>.NET Framework의 문자 인코딩<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> 참조).</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>-and-</source>
          <target state="translated">및</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph>이 <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>로 설정됩니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the set of characters to encode.</source>
          <target state="translated">인코딩할 문자 집합이 포함된 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The index of the first character to encode.</source>
          <target state="translated">인코딩할 첫 번째 문자의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The number of characters to encode.</source>
          <target state="translated">인코딩할 문자 수입니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The byte array to contain the resulting sequence of bytes.</source>
          <target state="translated">결과 바이트 시퀀스를 포함할 바이트 배열입니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The index at which to start writing the resulting sequence of bytes.</source>
          <target state="translated">결과 바이트 시퀀스를 쓰기 시작할 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>Encodes a set of characters from the specified <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> into the specified byte array.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>의 문자 집합을 지정된 바이트 배열로 인코딩합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The actual number of bytes written into <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph>에 쓴 실제 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>To calculate the exact array size required by <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph> to store the resulting bytes, the application uses <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph>.</source>
          <target state="translated">필요한 정확한 배열 크기를 계산 하려면 <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph> 결과 바이트를 저장 하기 위해 응용 프로그램에서 <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>To calculate the maximum array size, the application should use <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>.</source>
          <target state="translated">최대 배열 크기를 계산 하는 응용 프로그램 사용 해야 <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph> method generally allows allocation of less memory, while the <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph> 메서드는 일반적으로 적은 메모리의 할당을 통해 동안는 <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph> 메서드는 일반적으로 더 빠르게 실행 합니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>Data to be converted, such as data read from a stream, can be available only in sequential blocks.</source>
          <target state="translated">예: 스트림에서 읽은 데이터 변환할 데이터를 순차적인 블록에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> or the <ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph> provided by the <ph id="ph3">&lt;xref:System.Text.ASCIIEncoding.GetDecoder%2A&gt;</ph> method or the <ph id="ph4">&lt;xref:System.Text.ASCIIEncoding.GetEncoder%2A&gt;</ph> method, respectively.</source>
          <target state="translated">이 경우 응용 프로그램 데이터의 양이 너무 많아 작은 블록으로 나눌 경우 사용할지 또는 <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph> 에서 제공 되는 <ph id="ph3">&lt;xref:System.Text.ASCIIEncoding.GetDecoder%2A&gt;</ph> 메서드 또는 <ph id="ph4">&lt;xref:System.Text.ASCIIEncoding.GetEncoder%2A&gt;</ph> 메서드를 각각.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> does not provide error detection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> 오류 검색을 제공 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>Any Unicode character greater than U+007F is encoded as the ASCII question mark ("?").</source>
          <target state="translated">U + 007F 보다 큰 모든 유니코드 문자는 물음표의 ASCII로 인코딩됩니다 ("?").</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>For security reasons, your application is recommended to use <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>, or <ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph> and enable error detection.</source>
          <target state="translated">보안상의 이유로 응용 프로그램을 사용 하 여 것이 좋습니다 <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>, 또는 <ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph> 오류 검색을 사용 하도록 설정 합니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph> method to encode a range of elements from a Unicode character array and store the encoded bytes in a range of elements in a byte array.</source>
          <target state="translated">다음 예제에서는 사용 하는 <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph> 메서드를 유니코드 문자 배열에서 요소의 범위를 인코딩하고 인코딩된 바이트를 바이트 배열의 요소 범위에 저장 합니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph> or <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> or <ph id="ph3">&lt;paramref name="byteIndex" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph>, <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> 또는 <ph id="ph3">&lt;paramref name="byteIndex" /&gt;</ph>가 0보다 작은 경우</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph> and <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> do not denote a valid range in <ph id="ph3">&lt;paramref name="chars" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph> 및 <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph>가 <ph id="ph3">&lt;paramref name="chars" /&gt;</ph>에서 올바른 범위를 나타내지 않습니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="byteIndex" /&gt;</ph> is not a valid index in <ph id="ph2">&lt;paramref name="bytes" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="byteIndex" /&gt;</ph>가 <ph id="ph2">&lt;paramref name="bytes" /&gt;</ph>의 유효한 인덱스가 아닌 경우</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> does not have enough capacity from <ph id="ph2">&lt;paramref name="byteIndex" /&gt;</ph> to the end of the array to accommodate the resulting bytes.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph>의 용량(<ph id="ph2">&lt;paramref name="byteIndex" /&gt;</ph> ~ 배열 끝)이 부족해서 결과 바이트를 수용할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for complete explanation)</source>
          <target state="translated">대체가 발생했습니다(전체 설명은 <bpt id="p1">[</bpt>.NET Framework의 문자 인코딩<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> 참조).</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>-and-</source>
          <target state="translated">및</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph>이 <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>로 설정됩니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="T:System.Text.ASCIIEncoding">
          <source>Calculates the number of characters produced by decoding a sequence of bytes.</source>
          <target state="translated">바이트 시퀀스를 디코딩할 경우 생성되는 문자 수를 계산합니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte*,System.Int32)">
          <source>A pointer to the first byte to decode.</source>
          <target state="translated">디코딩할 첫 번째 바이트를 가리키는 포인터입니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte*,System.Int32)">
          <source>The number of bytes to decode.</source>
          <target state="translated">디코딩할 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte*,System.Int32)">
          <source>Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.</source>
          <target state="translated">지정한 바이트 포인터에서 시작되는 바이트 시퀀스를 디코딩할 경우 생성되는 문자 수를 계산합니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte*,System.Int32)">
          <source>The number of characters produced by decoding the specified sequence of bytes.</source>
          <target state="translated">지정한 바이트 시퀀스를 디코딩할 경우 생성되는 문자 수입니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte*,System.Int32)">
          <source>To calculate the exact array size required by <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetChars%2A&gt;</ph> to store the resulting characters, the application uses <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph>.</source>
          <target state="translated">필요한 정확한 배열 크기를 계산 하려면 <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetChars%2A&gt;</ph> 결과 문자를 저장 하기 위해 응용 프로그램에서 <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte*,System.Int32)">
          <source>To calculate the maximum array size, the application should use <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph>.</source>
          <target state="translated">최대 배열 크기를 계산 하는 응용 프로그램 사용 해야 <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte*,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph> method generally allows allocation of less memory, while the <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph> 메서드는 일반적으로 적은 메모리의 할당을 통해 동안는 <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph> 메서드는 일반적으로 더 빠르게 실행 합니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph>가 0보다 작은 경우</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte*,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte*,System.Int32)">
          <source>The resulting number of bytes is greater than the maximum number that can be returned as an integer.</source>
          <target state="translated">결과 바이트 수가 정수로 반환될 수 있는 최대 수보다 큽니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte*,System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for complete explanation)</source>
          <target state="translated">대체가 발생했습니다(전체 설명은 <bpt id="p1">[</bpt>.NET Framework의 문자 인코딩<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> 참조).</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte*,System.Int32)">
          <source>-and-</source>
          <target state="translated">및</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte*,System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph>이 <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>로 설정됩니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte*,System.Int32)">
          <source>Requires full trust for the immediate caller.</source>
          <target state="translated">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte*,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>The byte array containing the sequence of bytes to decode.</source>
          <target state="translated">디코딩할 바이트 시퀀스를 포함하는 바이트 배열입니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>The index of the first byte to decode.</source>
          <target state="translated">디코딩할 첫 번째 바이트의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes to decode.</source>
          <target state="translated">디코딩할 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</source>
          <target state="translated">지정한 바이트 배열의 바이트 시퀀스를 디코딩할 경우 생성되는 문자 수를 계산합니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>The number of characters produced by decoding the specified sequence of bytes.</source>
          <target state="translated">지정한 바이트 시퀀스를 디코딩할 경우 생성되는 문자 수입니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>To calculate the exact array size required by <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetChars%2A&gt;</ph> to store the resulting characters, the application uses <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph>.</source>
          <target state="translated">필요한 정확한 배열 크기를 계산 하려면 <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetChars%2A&gt;</ph> 결과 문자를 저장 하기 위해 응용 프로그램에서 <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>To calculate the maximum array size, the application should use <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph>.</source>
          <target state="translated">최대 배열 크기를 계산 하는 응용 프로그램 사용 해야 <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph> method generally allows allocation of less memory, while the <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph> 메서드는 일반적으로 적은 메모리의 할당을 통해 동안는 <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph> 메서드는 일반적으로 더 빠르게 실행 합니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph> method to return the number of characters produced by decoding a range of elements in a byte array.</source>
          <target state="translated">다음 예제에서는 사용 하는 <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph> 바이트 배열의 요소 범위를 디코딩하여 생성 되는 문자 수를 반환 하는 메서드.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="count" /&gt;</ph>가 0보다 작습니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> do not denote a valid range in <ph id="ph3">&lt;paramref name="bytes" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 및 <ph id="ph2">&lt;paramref name="count" /&gt;</ph>가 <ph id="ph3">&lt;paramref name="bytes" /&gt;</ph>에서 올바른 범위를 나타내지 않습니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>The resulting number of bytes is greater than the maximum number that can be returned as an integer.</source>
          <target state="translated">결과 바이트 수가 정수로 반환될 수 있는 최대 수보다 큽니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for complete explanation)</source>
          <target state="translated">대체가 발생했습니다(전체 설명은 <bpt id="p1">[</bpt>.NET Framework의 문자 인코딩<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> 참조).</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>-and-</source>
          <target state="translated">및</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph>이 <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>로 설정됩니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="T:System.Text.ASCIIEncoding">
          <source>Decodes a sequence of bytes into a set of characters.</source>
          <target state="translated">바이트 시퀀스를 문자 집합으로 디코딩합니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>A pointer to the first byte to decode.</source>
          <target state="translated">디코딩할 첫 번째 바이트를 가리키는 포인터입니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>The number of bytes to decode.</source>
          <target state="translated">디코딩할 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>A pointer to the location at which to start writing the resulting set of characters.</source>
          <target state="translated">결과 문자 집합을 쓰기 시작할 위치를 가리키는 포인터입니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>The maximum number of characters to write.</source>
          <target state="translated">쓸 최대 문자 수입니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.</source>
          <target state="translated">지정한 바이트 포인터에서 시작하는 바이트 시퀀스를 지정한 문자 포인터에서 시작하여 저장되는 문자 집합으로 디코딩합니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>The actual number of characters written at the location indicated by <ph id="ph1">&lt;paramref name="chars" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="chars" /&gt;</ph>가 가리키는 위치에 써지는 실제 문자 수입니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>To calculate the exact array size required by <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetChars%2A&gt;</ph> to store the resulting characters, the application uses <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph>.</source>
          <target state="translated">필요한 정확한 배열 크기를 계산 하려면 <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetChars%2A&gt;</ph> 결과 문자를 저장 하기 위해 응용 프로그램에서 <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>To calculate the maximum array size, the application should use <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph>.</source>
          <target state="translated">최대 배열 크기를 계산 하는 응용 프로그램 사용 해야 <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph> method generally allows allocation of less memory, while the <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph> 메서드는 일반적으로 적은 메모리의 할당을 통해 동안는 <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph> 메서드는 일반적으로 더 빠르게 실행 합니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>Data to be converted, such as data read from a stream, can be available only in sequential blocks.</source>
          <target state="translated">예: 스트림에서 읽은 데이터 변환할 데이터를 순차적인 블록에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> or the <ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph> provided by the <ph id="ph3">&lt;xref:System.Text.ASCIIEncoding.GetDecoder%2A&gt;</ph> method or the <ph id="ph4">&lt;xref:System.Text.ASCIIEncoding.GetEncoder%2A&gt;</ph> method, respectively.</source>
          <target state="translated">이 경우 응용 프로그램 데이터의 양이 너무 많아 작은 블록으로 나눌 경우 사용할지 또는 <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph> 에서 제공 되는 <ph id="ph3">&lt;xref:System.Text.ASCIIEncoding.GetDecoder%2A&gt;</ph> 메서드 또는 <ph id="ph4">&lt;xref:System.Text.ASCIIEncoding.GetEncoder%2A&gt;</ph> 메서드를 각각.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> does not provide error detection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> 오류 검색을 제공 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>Any byte greater than hexadecimal 0x7F is decoded as the Unicode question mark ("?").</source>
          <target state="translated">16 진수 0x7F 보다 큰 모든 바이트 유니코드 물음표도 디코딩 되며 ("?").</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>For security reasons, your application is recommended to use <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>, or <ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph> and enable error detection.</source>
          <target state="translated">보안상의 이유로 응용 프로그램을 사용 하 여 것이 좋습니다 <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>, 또는 <ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph> 오류 검색을 사용 하도록 설정 합니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="chars" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="byteCount" /&gt;</ph> or <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="byteCount" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph>가 0보다 작습니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="charCount" /&gt;</ph> is less than the resulting number of characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="charCount" /&gt;</ph>가 결과 문자 수보다 작은 경우</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for complete explanation)</source>
          <target state="translated">대체가 발생했습니다(전체 설명은 <bpt id="p1">[</bpt>.NET Framework의 문자 인코딩<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> 참조).</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>-and-</source>
          <target state="translated">및</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph>이 <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>로 설정됩니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>Requires full trust for the immediate caller.</source>
          <target state="translated">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The byte array containing the sequence of bytes to decode.</source>
          <target state="translated">디코딩할 바이트 시퀀스를 포함하는 바이트 배열입니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The index of the first byte to decode.</source>
          <target state="translated">디코딩할 첫 번째 바이트의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The number of bytes to decode.</source>
          <target state="translated">디코딩할 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The character array to contain the resulting set of characters.</source>
          <target state="translated">결과 문자 집합을 포함할 문자 배열입니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The index at which to start writing the resulting set of characters.</source>
          <target state="translated">결과 문자 집합을 쓰기 시작할 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>Decodes a sequence of bytes from the specified byte array into the specified character array.</source>
          <target state="translated">지정한 바이트 배열의 바이트 시퀀스를 지정한 문자 배열로 디코딩합니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The actual number of characters written into <ph id="ph1">&lt;paramref name="chars" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="chars" /&gt;</ph>에 쓴 실제 문자 수입니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>To calculate the exact array size required by <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetChars%2A&gt;</ph> to store the resulting characters, the application uses <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph>.</source>
          <target state="translated">필요한 정확한 배열 크기를 계산 하려면 <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetChars%2A&gt;</ph> 결과 문자를 저장 하기 위해 응용 프로그램에서 <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>To calculate the maximum array size, the application should use <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph>.</source>
          <target state="translated">최대 배열 크기를 계산 하는 응용 프로그램 사용 해야 <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph> method generally allows allocation of less memory, while the <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph> 메서드는 일반적으로 적은 메모리의 할당을 통해 동안는 <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph> 메서드는 일반적으로 더 빠르게 실행 합니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>Data to be converted, such as data read from a stream, can be available only in sequential blocks.</source>
          <target state="translated">예: 스트림에서 읽은 데이터 변환할 데이터를 순차적인 블록에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> or the <ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph> provided by the <ph id="ph3">&lt;xref:System.Text.ASCIIEncoding.GetDecoder%2A&gt;</ph> method or the <ph id="ph4">&lt;xref:System.Text.ASCIIEncoding.GetEncoder%2A&gt;</ph> method, respectively.</source>
          <target state="translated">이 경우 응용 프로그램 데이터의 양이 너무 많아 작은 블록으로 나눌 경우 사용할지 또는 <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph> 에서 제공 되는 <ph id="ph3">&lt;xref:System.Text.ASCIIEncoding.GetDecoder%2A&gt;</ph> 메서드 또는 <ph id="ph4">&lt;xref:System.Text.ASCIIEncoding.GetEncoder%2A&gt;</ph> 메서드를 각각.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> does not provide error detection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> 오류 검색을 제공 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>Any byte greater than hexadecimal 0x7F is decoded as the Unicode question mark ("?").</source>
          <target state="translated">16 진수 0x7F 보다 큰 모든 바이트 유니코드 물음표도 디코딩 되며 ("?").</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>For security reasons, your application is recommended to use <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>, or <ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph> and enable error detection.</source>
          <target state="translated">보안상의 이유로 응용 프로그램을 사용 하 여 것이 좋습니다 <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>, 또는 <ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph> 오류 검색을 사용 하도록 설정 합니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The following example demonstrates how to decode a range of elements from a byte array and store the result in a set of elements in a Unicode character array.</source>
          <target state="translated">다음 예제에서는 디코딩할 바이트 배열에서 요소 범위 및 유니코드 문자 배열에서 요소 집합에 결과 저장 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="chars" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="byteIndex" /&gt;</ph> or <ph id="ph2">&lt;paramref name="byteCount" /&gt;</ph> or <ph id="ph3">&lt;paramref name="charIndex" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="byteIndex" /&gt;</ph>, <ph id="ph2">&lt;paramref name="byteCount" /&gt;</ph> 또는 <ph id="ph3">&lt;paramref name="charIndex" /&gt;</ph>가 0보다 작은 경우</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="byteindex" /&gt;</ph> and <ph id="ph2">&lt;paramref name="byteCount" /&gt;</ph> do not denote a valid range in <ph id="ph3">&lt;paramref name="bytes" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="byteindex" /&gt;</ph> 및 <ph id="ph2">&lt;paramref name="byteCount" /&gt;</ph>가 <ph id="ph3">&lt;paramref name="bytes" /&gt;</ph>에서 올바른 범위를 나타내지 않습니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph> is not a valid index in <ph id="ph2">&lt;paramref name="chars" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph>가 <ph id="ph2">&lt;paramref name="chars" /&gt;</ph>의 유효한 인덱스가 아닌 경우</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> does not have enough capacity from <ph id="ph2">&lt;paramref name="charIndex" /&gt;</ph> to the end of the array to accommodate the resulting characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="chars" /&gt;</ph>의 용량(<ph id="ph2">&lt;paramref name="charIndex" /&gt;</ph> ~ 배열 끝)이 부족해서 결과 문자를 수용할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for complete explanation)</source>
          <target state="translated">대체가 발생했습니다(전체 설명은 <bpt id="p1">[</bpt>.NET Framework의 문자 인코딩<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> 참조).</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>-and-</source>
          <target state="translated">및</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph>이 <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>로 설정됩니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetDecoder">
          <source>Obtains a decoder that converts an ASCII encoded sequence of bytes into a sequence of Unicode characters.</source>
          <target state="translated">ASCII로 인코딩된 바이트 시퀀스를 유니코드 문자 시퀀스로 변환하는 디코더를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetDecoder">
          <source>A <ph id="ph1">&lt;see cref="T:System.Text.Decoder" /&gt;</ph> that converts an ASCII encoded sequence of bytes into a sequence of Unicode characters.</source>
          <target state="translated">ASCII로 인코딩된 바이트 시퀀스를 유니코드 문자 시퀀스로 변환하는 <ph id="ph1">&lt;see cref="T:System.Text.Decoder" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetDecoder">
          <source>The <ph id="ph1">&lt;xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType&gt;</ph> method converts sequential blocks of bytes into sequential blocks of characters, in a manner similar to the <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetChars%2A&gt;</ph> method of this class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType&gt;</ph> 메서드 순차 바이트 블록을 유사한 방식으로 문자의 순차 블록 변환는 <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetChars%2A&gt;</ph> 이 클래스의 메서드.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetDecoder">
          <source>However, a <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> maintains state information between calls so it can correctly decode byte sequences that span blocks.</source>
          <target state="translated">그러나 한 <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> 블록으로 확장 되는 바이트 시퀀스를 올바르게 디코딩할 수 있도록 호출 간의 상태 정보를 관리 합니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetDecoder">
          <source>The <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> also preserves trailing bytes at the end of data blocks and uses the trailing bytes in the next decoding operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> 또한 데이터 블록의 끝에 후행 바이트를 보존 하 고 다음 디코딩 작업에서 후행 바이트를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetDecoder">
          <source>Therefore, <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetDecoder%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetEncoder%2A&gt;</ph> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</source>
          <target state="translated">따라서 <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetDecoder%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetEncoder%2A&gt;</ph> 는 전체 데이터 스트림 하는 대신 데이터 블록을 처리 하기 때문에 네트워크 전송 및 파일 작업에 유용 합니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetEncoder">
          <source>Obtains an encoder that converts a sequence of Unicode characters into an ASCII encoded sequence of bytes.</source>
          <target state="translated">유니코드 문자 시퀀스를 ASCII로 인코딩된 바이트 시퀀스로 변환하는 인코더를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetEncoder">
          <source>An <ph id="ph1">&lt;see cref="T:System.Text.Encoder" /&gt;</ph> that converts a sequence of Unicode characters into an ASCII encoded sequence of bytes.</source>
          <target state="translated">유니코드 문자 시퀀스를 ASCII로 인코딩된 바이트 시퀀스로 변환하는 <ph id="ph1">&lt;see cref="T:System.Text.Encoder" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetEncoder">
          <source>The <ph id="ph1">&lt;xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType&gt;</ph> method converts sequential blocks of characters into sequential blocks of bytes, in a manner similar to the <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph> method of this class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType&gt;</ph> 메서드 문자의 순차 블록 순차 블록의 바이트 유사한 방식으로 변환 된 <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph> 이 클래스의 메서드.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetEncoder">
          <source>However, an <ph id="ph1">&lt;xref:System.Text.Encoder&gt;</ph> maintains state information between calls so it can correctly encode character sequences that span blocks.</source>
          <target state="translated">그러나는 <ph id="ph1">&lt;xref:System.Text.Encoder&gt;</ph> 블록으로 확장 되는 문자 시퀀스 올바르게 인코딩할 수 있도록 호출 간의 상태 정보를 관리 합니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetEncoder">
          <source>The <ph id="ph1">&lt;xref:System.Text.Encoder&gt;</ph> also preserves trailing characters at the end of data blocks and uses the trailing characters in the next encoding operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.Encoder&gt;</ph> 또한 전처리 후행 데이터 블록의 끝에 문자 하 고 다음 인코딩 작업에 후행 문자를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetEncoder">
          <source>For example, a data block might end with an unmatched high surrogate, and the matching low surrogate might be in the next data block.</source>
          <target state="translated">예를 들어 데이터 블록 짝이 맞지 않는 상위 서로게이트를 마무리할 수 있습니다 및 다음 데이터 블록에 일치 하는 하위 서로게이트 있을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetEncoder">
          <source>Therefore, <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetDecoder%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetEncoder%2A&gt;</ph> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</source>
          <target state="translated">따라서 <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetDecoder%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetEncoder%2A&gt;</ph> 는 전체 데이터 스트림 하는 대신 데이터 블록을 처리 하기 때문에 네트워크 전송 및 파일 작업에 유용 합니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)">
          <source>The number of characters to encode.</source>
          <target state="translated">인코딩할 문자 수입니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)">
          <source>Calculates the maximum number of bytes produced by encoding the specified number of characters.</source>
          <target state="translated">지정한 수의 문자를 인코딩할 경우 생성되는 최대 바이트 수를 계산합니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)">
          <source>The maximum number of bytes produced by encoding the specified number of characters.</source>
          <target state="translated">지정한 수의 문자를 인코딩할 경우 생성되는 최대 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph> method calculates the exact array size required by the <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph> method to store the resulting bytes, whereas the <ph id="ph3">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph> method calculates the maximum array size.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph> 에 필요한 정확한 배열 크기를 계산 하는 메서드는 <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph> 반면 결과 바이트를 저장 하는 메서드는 <ph id="ph3">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph> 메서드는 최대 배열 크기를 계산 합니다.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph> method generally allocates less memory, but the <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph> 메서드는 일반적으로 적은 메모리를 할당 하지만 <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph> 메서드는 일반적으로 더 빠르게 실행 합니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph> is a worst-case number, including the worst case for the currently selected <ph id="ph2">&lt;xref:System.Text.EncoderFallback&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph> 현재 선택 된 최악의 경우를 포함 하 여 최악의 숫자, <ph id="ph2">&lt;xref:System.Text.EncoderFallback&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)">
          <source>If you choose a replacement fallback with a potentially large string, <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph> can return large values.</source>
          <target state="translated">대체 된 잠재적으로 큰 문자열로 대체 (fallback)를 선택 하면 <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph> 큰 값을 반환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph> method considers potential leftover surrogates from a previous encoding operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph> 메서드는 이전 인코딩 작업에서 잠재적인 남겨진 서로게이트를 고려 합니다.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)">
          <source>As a result, if the <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> object uses the default replacement fallback, or if a custom replacement fallback has been defined with a single possible fallback character, the method returns <ph id="ph2">`charCount`</ph> + 1.</source>
          <target state="translated">결과적으로, 하는 경우는 <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> 개체 기본 교체 대체 (fallback)를 사용 하 여 또는 대체 (fallback)는 사용자 지정 하는 대체 가능한 단일 대체 (fallback) 문자를 정의한 경우 메서드는 반환 <ph id="ph2">`charCount`</ph> + 1입니다.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)">
          <source>If the <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> object uses a replacement fallback with more than one possible fallback character, the method returns <bpt id="p1">*</bpt>n<ept id="p1">*</ept> * (<ph id="ph2">`charCount`</ph> + 1), where <bpt id="p2">*</bpt>n<ept id="p2">*</ept> is the maximum number of fallback characters.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> 메서드 반환 개체는 교체 대체 (fallback)를 사용 하 여 둘 이상의 가능한 대체 문자로, <bpt id="p1">*</bpt>n<ept id="p1">*</ept> * (<ph id="ph2">`charCount`</ph> + 1), 여기서 <bpt id="p2">*</bpt>n<ept id="p2">*</ept> 대체 (fallback)의 최대 수 문자 수입니다.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph> has no relation to <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetChars%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph> 관계가 없으며 <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetChars%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)">
          <source>If your application needs a similar function to use with <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetChars%2A&gt;</ph>, it should use <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph>.</source>
          <target state="translated">응용 프로그램을 사용 하면 비슷한 기능이 필요한 경우 <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetChars%2A&gt;</ph>를 사용 해야 <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)">
          <source><ph id="ph1">`GetMaxByteCount(N)`</ph> is not necessarily the same value as <ph id="ph2">`N* GetMaxByteCount(1)`</ph>.</source>
          <target state="translated"><ph id="ph1">`GetMaxByteCount(N)`</ph> 와 같은 값은 반드시 <ph id="ph2">`N* GetMaxByteCount(1)`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph> method to calculate the bytes required to encode a specified number of characters.</source>
          <target state="translated">다음 예제에서는 사용 하는 <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph> 지정한 개수의 문자를 인코딩하는 데 필요한 바이트를 계산 하는 메서드.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="charCount" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="charCount" /&gt;</ph>가 0보다 작은 경우</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)">
          <source>The resulting number of bytes is greater than the maximum number that can be returned as an integer.</source>
          <target state="translated">결과 바이트 수가 정수로 반환될 수 있는 최대 수보다 큽니다.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)">
          <source>The number of bytes to decode.</source>
          <target state="translated">디코딩할 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)">
          <source>Calculates the maximum number of characters produced by decoding the specified number of bytes.</source>
          <target state="translated">지정한 수의 바이트를 디코딩할 경우 생성되는 최대 문자 수를 계산합니다.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)">
          <source>The maximum number of characters produced by decoding the specified number of bytes.</source>
          <target state="translated">지정한 수의 바이트를 디코딩할 경우 생성되는 최대 문자 수입니다.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph> method calculates the exact array size required by the <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetChars%2A&gt;</ph> method to store the resulting characters, whereas  the <ph id="ph3">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph> method calculates the maximum array size.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph> 에 필요한 정확한 배열 크기를 계산 하는 메서드는 <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetChars%2A&gt;</ph> 반면 결과 저장 하는 메서드 문자는 <ph id="ph3">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph> 메서드는 최대 배열 크기를 계산 합니다.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph> method generally allocates less memory, while the <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph> 메서드는 일반적으로 적은 메모리를 할당 하는 동안는 <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph> 메서드는 일반적으로 더 빠르게 실행 합니다.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph> retrieves a worst-case number, including the worst case for the currently selected <ph id="ph2">&lt;xref:System.Text.DecoderFallback&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph> 현재 선택 된 최악의 경우를 포함 하 여 최악의 수를 검색 <ph id="ph2">&lt;xref:System.Text.DecoderFallback&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)">
          <source>If a decoder fallback is present that has a maximum fallback length of <bpt id="p1">*</bpt>n<ept id="p1">*</ept>, the <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph> method returns <bpt id="p2">*</bpt>n<ept id="p2">*</ept><ph id="ph2"> * </ph><ph id="ph3">`byteCount`</ph>.</source>
          <target state="translated">디코더 대체 (fallback)를 사용할 수 있는 경우 길이가 최대 대체 (fallback)의 <bpt id="p1">*</bpt>n<ept id="p1">*</ept>, <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph> 메서드 반환 <bpt id="p2">*</bpt>n<ept id="p2">*</ept><ph id="ph2"> * </ph><ph id="ph3">`byteCount`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph> has no relation to <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph> 관계가 없으며 <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)">
          <source>If your application needs a similar function to use with <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph>, it should use <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>.</source>
          <target state="translated">응용 프로그램을 사용 하면 비슷한 기능이 필요한 경우 <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph>를 사용 해야 <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)">
          <source><ph id="ph1">`GetMaxCharCount(N)`</ph> is not necessarily the same value as <ph id="ph2">`N* GetMaxCharCount(1)`</ph>.</source>
          <target state="translated"><ph id="ph1">`GetMaxCharCount(N)`</ph> 와 같은 값은 반드시 <ph id="ph2">`N* GetMaxCharCount(1)`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph> method to calculate the maximum number of characters needed to decode a specified number of bytes.</source>
          <target state="translated">다음 예제에서는 사용 하는 <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph> 디코딩할 바이트 수를 지정된 하는 데 필요한 문자의 최대 수를 계산 하는 메서드.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="byteCount" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="byteCount" /&gt;</ph>가 0보다 작은 경우</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)">
          <source>The resulting number of bytes is greater than the maximum number that can be returned as an integer.</source>
          <target state="translated">결과 바이트 수가 정수로 반환될 수 있는 최대 수보다 큽니다.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>The byte array containing the sequence of bytes to decode.</source>
          <target state="translated">디코딩할 바이트 시퀀스를 포함하는 바이트 배열입니다.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>The index of the first byte to decode.</source>
          <target state="translated">디코딩할 첫 번째 바이트의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes to decode.</source>
          <target state="translated">디코딩할 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>Decodes a range of bytes from a byte array into a string.</source>
          <target state="translated">바이트 배열의 바이트 범위를 문자열로 디코딩합니다.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the results of decoding the specified sequence of bytes.</source>
          <target state="translated">지정된 바이트 시퀀스에 대한 디코딩 결과가 포함된 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>Data to be converted, such as data read from a stream, can be available only in sequential blocks.</source>
          <target state="translated">예: 스트림에서 읽은 데이터 변환할 데이터를 순차적인 블록에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> or the <ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph> provided by the <ph id="ph3">&lt;xref:System.Text.ASCIIEncoding.GetDecoder%2A&gt;</ph> method or the <ph id="ph4">&lt;xref:System.Text.ASCIIEncoding.GetEncoder%2A&gt;</ph> method, respectively.</source>
          <target state="translated">이 경우 응용 프로그램 데이터의 양이 너무 많아 작은 블록으로 나눌 경우 사용할지 또는 <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph> 에서 제공 되는 <ph id="ph3">&lt;xref:System.Text.ASCIIEncoding.GetDecoder%2A&gt;</ph> 메서드 또는 <ph id="ph4">&lt;xref:System.Text.ASCIIEncoding.GetEncoder%2A&gt;</ph> 메서드를 각각.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> does not provide error detection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> 오류 검색을 제공 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>Any byte greater than hexadecimal 0x7F is decoded as the Unicode question mark ("?").</source>
          <target state="translated">16 진수 0x7F 보다 큰 모든 바이트 유니코드 물음표도 디코딩 되며 ("?").</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>For security reasons, you should use the <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>, or <ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph> classes and enable error detection instead of using the <ph id="ph4">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> class.</source>
          <target state="translated">보안상의 이유로 사용할지는 <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>, 또는 <ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph> 클래스 및 사용 하는 대신 오류 검색이 가능는 <ph id="ph4">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetString%2A&gt;</ph> method to convert a byte array into a <ph id="ph2">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 사용 하는 방법을 <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetString%2A&gt;</ph> 바이트 배열에 변환 하는 메서드는 <ph id="ph2">&lt;xref:System.String&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="count" /&gt;</ph>가 0보다 작습니다.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> do not denote a valid range in <ph id="ph3">&lt;paramref name="bytes" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 및 <ph id="ph2">&lt;paramref name="count" /&gt;</ph>가 <ph id="ph3">&lt;paramref name="bytes" /&gt;</ph>에서 올바른 범위를 나타내지 않습니다.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for complete explanation)</source>
          <target state="translated">대체가 발생했습니다(전체 설명은 <bpt id="p1">[</bpt>.NET Framework의 문자 인코딩<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> 참조).</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>-and-</source>
          <target state="translated">및</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph>이 <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>로 설정됩니다.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="P:System.Text.ASCIIEncoding.IsSingleByte">
          <source>Gets a value indicating whether the current encoding uses single-byte code points.</source>
          <target state="translated">현재 인코딩이 싱글바이트 코드 포인트를 사용하는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.ASCIIEncoding.IsSingleByte">
          <source>This property is always <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">이 속성은 항상 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.ASCIIEncoding.IsSingleByte">
          <source>Instead of using the <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.IsSingleByte%2A&gt;</ph> property to determine the size of a byte array for encoding operations  and the size of a character array for decoding operations (for example, so that the size of the byte array is <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.IsSingleByte%2A&gt;</ph> * the number of characters to be encoded), you should call the <ph id="ph3">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph> method for encoding operations and the <ph id="ph5">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph> or <ph id="ph6">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph> method for decoding operations.</source>
          <target state="translated">사용 하는 대신는 <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.IsSingleByte%2A&gt;</ph> 인코딩 작업 및 디코딩 작업의 문자 배열의 크기에 대 한 바이트 배열의 크기를 결정 하는 속성 (예를 들어 하는 바이트 배열 크기가 <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.IsSingleByte%2A&gt;</ph> * 문자 수 호출 해야 인코딩된), 여 <ph id="ph3">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph> 또는 <ph id="ph4">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph> 인코딩 작업에 대 한 메서드 및 <ph id="ph5">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph> 또는 <ph id="ph6">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph> 디코딩 작업의 메서드.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.ASCIIEncoding.IsSingleByte">
          <source>These methods takes the <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> object's replacement fallback strategy into account when calculating the required array size.</source>
          <target state="translated">이러한 메서드 사용은 <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> 개체의 교체 대체 (fallback) 전략을 필수 배열 크기를 계산할 때 고려 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>