<Type Name="ASCIIEncoding" FullName="System.Text.ASCIIEncoding">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="692f1ed02adbf9527875f7caa1c155c859bd26e6" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39778605" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ASCIIEncoding : System.Text.Encoding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ASCIIEncoding extends System.Text.Encoding" />
  <TypeSignature Language="DocId" Value="T:System.Text.ASCIIEncoding" />
  <TypeSignature Language="VB.NET" Value="Public Class ASCIIEncoding&#xA;Inherits Encoding" />
  <TypeSignature Language="C++ CLI" Value="public ref class ASCIIEncoding : System::Text::Encoding" />
  <TypeSignature Language="F#" Value="type ASCIIEncoding = class&#xA;    inherit Encoding" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.Encoding</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="3c2b5-101">유니코드 문자의 ASCII 문자 인코딩을 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3c2b5-101">Represents an ASCII character encoding of Unicode characters.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c2b5-102">인코딩은 유니코드 문자 집합을 바이트 시퀀스로 변환하는 프로세스입니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-102">Encoding is the process of transforming a set of Unicode characters into a sequence of bytes.</span></span> <span data-ttu-id="3c2b5-103">디코딩은 유니코드 문자 집합으로 인코딩된 바이트 시퀀스로 변환 하는 프로세스입니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-103">Decoding is the process of transforming a sequence of encoded bytes into a set of Unicode characters.</span></span>  
  
 <span data-ttu-id="3c2b5-104"><xref:System.Text.ASCIIEncoding> 20127 Windows 코드 페이지에 해당합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-104"><xref:System.Text.ASCIIEncoding> corresponds to the Windows code page 20127.</span></span> <span data-ttu-id="3c2b5-105">ASCII 7 비트 인코딩을 이기 때문에 ASCII 문자는 u+0000 ~ U + 007F 가장 낮은 128 유니코드 문자로 제한 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-105">Because ASCII is a 7-bit encoding, ASCII characters are limited to the lowest 128 Unicode characters, from U+0000 to U+007F.</span></span> <span data-ttu-id="3c2b5-106">반환 된 기본 인코더를 사용 하는 경우는 <xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType> 속성 또는 <xref:System.Text.ASCIIEncoding.%23ctor%2A> 인코딩 작업을 수행 하기 전에 생성자 범위를 벗어난 문자가 물음표 (?)로 대체 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-106">If you use the default encoder returned by the <xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType> property or the <xref:System.Text.ASCIIEncoding.%23ctor%2A> constructor, characters outside that range are replaced with a question mark (?) before the encoding operation is performed.</span></span>  <span data-ttu-id="3c2b5-107">때문에 합니다 <xref:System.Text.ASCIIEncoding> 클래스는 제한 된 문자 집합만 지원 합니다 <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, 및 <xref:System.Text.UTF32Encoding> 클래스는 세계화 된 응용 프로그램에 적합 한 더 합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-107">Because the <xref:System.Text.ASCIIEncoding> class supports only a limited character set, the <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, and <xref:System.Text.UTF32Encoding> classes are better suited for globalized applications.</span></span> <span data-ttu-id="3c2b5-108">다음 고려 사항을를 사용할지 여부를 결정 하는 데 도움이 <xref:System.Text.ASCIIEncoding>:</span><span class="sxs-lookup"><span data-stu-id="3c2b5-108">The following considerations can help you to decide whether to use <xref:System.Text.ASCIIEncoding>:</span></span>  
  
-   <span data-ttu-id="3c2b5-109">일부 프로토콜에는 ASCII 또는 ASCII의 하위 집합이 필요합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-109">Some protocols require ASCII or a subset of ASCII.</span></span> <span data-ttu-id="3c2b5-110">이러한 경우 ASCII 인코딩 적합합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-110">In these cases ASCII encoding is appropriate.</span></span>  
  
-   <span data-ttu-id="3c2b5-111">8 비트 인코딩 예상 되는 경우 다음 ASCII 아닐 적합 합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-111">If an 8-bit encoding is expected, then ASCII probably isn't the correct choice.</span></span> <span data-ttu-id="3c2b5-112">대신, ASCII 대신 UTF8을 사용 하는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-112">Instead, consider using UTF8 instead of ASCII.</span></span> <span data-ttu-id="3c2b5-113">U + 007f 문자 u+0000에서 결과 동일 하지만 모든 유니코드 문자는 데이터 손실을 방지 하는 u t F-8에서 표현할 수 있는 합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-113">For the characters U+0000 through U+007F, the results are identical, but all Unicode characters are representable in UTF-8, which avoids data loss.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="3c2b5-114"><xref:System.Text.ASCIIEncoding> 오류 검색을 제공 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-114"><xref:System.Text.ASCIIEncoding> does not provide error detection.</span></span> <span data-ttu-id="3c2b5-115">보안상의 이유로 사용할지 <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, 또는 <xref:System.Text.UTF32Encoding> 오류 검색을 사용 하도록 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-115">For security reasons, you should use <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, or <xref:System.Text.UTF32Encoding> and enable error detection.</span></span>  
  
 <span data-ttu-id="3c2b5-116"><xref:System.Text.ASCIIEncoding.GetByteCount%2A> 메서드는 유니코드 문자 집합 인코딩의 바이트 수 결과 확인 및 <xref:System.Text.ASCIIEncoding.GetBytes%2A> 메서드에서는 실제 인코딩을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-116">The <xref:System.Text.ASCIIEncoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.ASCIIEncoding.GetBytes%2A> method performs the actual encoding.</span></span>  
  
 <span data-ttu-id="3c2b5-117">마찬가지로 합니다 <xref:System.Text.ASCIIEncoding.GetCharCount%2A> 메서드는 바이트 시퀀스를 디코딩할에서 디코딩될 문자 확인 및 <xref:System.Text.ASCIIEncoding.GetChars%2A> 및 <xref:System.Text.ASCIIEncoding.GetString%2A> 메서드는 실제 디코딩을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-117">Likewise, the <xref:System.Text.ASCIIEncoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.ASCIIEncoding.GetChars%2A> and <xref:System.Text.ASCIIEncoding.GetString%2A> methods perform the actual decoding.</span></span>  
  
 <span data-ttu-id="3c2b5-118">기본 <xref:System.Text.ASCIIEncoding> 생성자 자체 응용 프로그램에 대 한 적절 한 동작에 없을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-118">Note that the default <xref:System.Text.ASCIIEncoding> constructor by itself might not have the appropriate behavior for your application.</span></span> <span data-ttu-id="3c2b5-119">설정 하려는 합니다 <xref:System.Text.Encoding.EncoderFallback%2A> 또는 <xref:System.Text.Encoding.DecoderFallback%2A> 속성을 <xref:System.Text.EncoderExceptionFallback> 또는 <xref:System.Text.DecoderExceptionFallback> 8 비트 집합을 사용 하 여 시퀀스를 방지 하기 위해.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-119">You might want to consider setting the <xref:System.Text.Encoding.EncoderFallback%2A> or <xref:System.Text.Encoding.DecoderFallback%2A> property to <xref:System.Text.EncoderExceptionFallback> or <xref:System.Text.DecoderExceptionFallback> to prevent sequences with the 8th bit set.</span></span> <span data-ttu-id="3c2b5-120">이러한 경우에 대 한 적절 한 사용자 지정 동작 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-120">Custom behavior might also be appropriate for these cases.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c2b5-121">다음 예제에서는 유니코드 문자를 ASCII로 인코딩하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-121">The following example demonstrates how to encode Unicode characters into ASCII.</span></span> <span data-ttu-id="3c2b5-122">응용 프로그램에서 사용 하는 경우 발생 하는 데이터 손실 확인 <xref:System.Text.ASCIIEncoding> ASCII 범위 밖의 유니코드 문자를 인코딩합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-122">Notice the loss of data that occurs when your application uses <xref:System.Text.ASCIIEncoding> to encode Unicode characters outside of the ASCII range.</span></span>  
  
 [!code-cpp[System.Text.ASCIIEncoding Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding Example/CPP/snippet.cpp#1)]
 [!code-csharp[System.Text.ASCIIEncoding Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding Example/CS/snippet.cs#1)]
 [!code-vb[System.Text.ASCIIEncoding Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.ASCIIEncoding Example/VB/snippet.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.Decoder" />
    <altmember cref="T:System.Text.Encoder" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ASCIIEncoding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ASCIIEncoding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3c2b5-123">
            <see cref="T:System.Text.ASCIIEncoding" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-123">Initializes a new instance of the <see cref="T:System.Text.ASCIIEncoding" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="3c2b5-124"><xref:System.Text.ASCIIEncoding> 클래스 오류 검색을 제공 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-124">The <xref:System.Text.ASCIIEncoding> class does not provide error detection.</span></span> <span data-ttu-id="3c2b5-125">보안상의 이유로 사용 해야 합니다 <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, 또는 <xref:System.Text.UTF32Encoding> 클래스 및 오류 검색을 사용 하도록 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-125">For security reasons, you should use the <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, or <xref:System.Text.UTF32Encoding> class and enable error detection.</span></span>  
  
 <span data-ttu-id="3c2b5-126">ASCII 인코딩을 사용 하려는 경우에이 생성자는 응용 프로그램에 대 한 적절 한 대체 (fallback) 동작을 제공할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-126">If you choose to use ASCII encoding, this constructor may not provide the appropriate fallback behavior for your application.</span></span> <span data-ttu-id="3c2b5-127">사용 된 <xref:System.Text.EncoderReplacementFallback> 및 <xref:System.Text.DecoderReplacementFallback> u+0000 U + 007f 범위를 벗어난 모든 문자를 물음표 (?)로 대체 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-127">It uses the <xref:System.Text.EncoderReplacementFallback> and <xref:System.Text.DecoderReplacementFallback> classes to replace every character outside the range of U+0000 through U+007F with a question mark (?).</span></span> <span data-ttu-id="3c2b5-128">대신 호출할 수 있습니다 합니다 <xref:System.Text.Encoding.GetEncoding%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29?displayProperty=nameWithType> 또는 <xref:System.Text.Encoding.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29?displayProperty=nameWithType> 메서드를 전달 <xref:System.Text.EncoderExceptionFallback> 및 <xref:System.Text.DecoderExceptionFallback> 예외 대체 (fallback)를 사용 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-128">Instead, you can call the <xref:System.Text.Encoding.GetEncoding%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29?displayProperty=nameWithType> or <xref:System.Text.Encoding.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29?displayProperty=nameWithType> method and pass it <xref:System.Text.EncoderExceptionFallback> and <xref:System.Text.DecoderExceptionFallback> objects to use exception fallback.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3c2b5-129"><xref:System.Text.ASCIIEncoding> 0000에서 U + 007F U + 사이의 유니코드 문자 값만 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-129"><xref:System.Text.ASCIIEncoding> supports only the Unicode character values between U+0000 and U+007F.</span></span> <span data-ttu-id="3c2b5-130">따라서 <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, 및 <xref:System.Text.UTF32Encoding> 세계화 된 응용 프로그램에 더 적합 합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-130">Therefore, <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, and <xref:System.Text.UTF32Encoding> are better suited for globalized applications.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c2b5-131">다음 예제에서는 새 <xref:System.Text.ASCIIEncoding> 인스턴스 및 인코딩의 이름을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-131">The following example demonstrates how to create a new <xref:System.Text.ASCIIEncoding> instance and display the name of the encoding.</span></span>  
  
 [!code-cpp[System.Text.ASCIIEncoding.ctor Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.ctor Example/CPP/ctor.cpp#1)]
 [!code-csharp[System.Text.ASCIIEncoding.ctor Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.ctor Example/CS/ctor.cs#1)]
 [!code-vb[System.Text.ASCIIEncoding.ctor Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.ctor Example/VB/ctor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetByteCount">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3c2b5-132">문자 집합을 인코딩할 경우 생성되는 바이트 수를 계산합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-132">Calculates the number of bytes produced by encoding a set of characters.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (string chars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(string chars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetByteCount(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByteCount (chars As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(System::String ^ chars);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : string -&gt; int" Usage="aSCIIEncoding.GetByteCount chars" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="3c2b5-133">인코딩할 문자 집합이 포함된 <see cref="T:System.String" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-133">The <see cref="T:System.String" /> containing the set of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3c2b5-134">지정된 <see cref="T:System.String" />의 문자를 인코딩하여 생성된 바이트 수를 계산합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-134">Calculates the number of bytes produced by encoding the characters in the specified <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c2b5-135">지정한 문자를 인코딩할 경우 생성되는 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-135">The number of bytes produced by encoding the specified characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c2b5-136">에 필요한 정확한 배열 크기를 계산 하려면 <xref:System.Text.ASCIIEncoding.GetBytes%2A> 응용 프로그램에서는 결과 바이트를 저장 하려면 <xref:System.Text.ASCIIEncoding.GetByteCount%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-136">To calculate the exact array size required by <xref:System.Text.ASCIIEncoding.GetBytes%2A> to store the resulting bytes, the application uses <xref:System.Text.ASCIIEncoding.GetByteCount%2A>.</span></span> <span data-ttu-id="3c2b5-137">최대 배열 크기를 계산 하려면 응용 프로그램을 사용할지 <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-137">To calculate the maximum array size, the application should use <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>.</span></span> <span data-ttu-id="3c2b5-138">합니다 <xref:System.Text.ASCIIEncoding.GetByteCount%2A> 메서드는 일반적으로 적은 메모리의 할당을 통해 동안는 <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> 메서드는 일반적으로 더 빠르게 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-138">The <xref:System.Text.ASCIIEncoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c2b5-139">다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Text.ASCIIEncoding.GetByteCount%2A> 메서드를 사용 하 여 문자열을 인코딩하는 데 필요한 바이트 수가 반환 <xref:System.Text.ASCIIEncoding>합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-139">The following example demonstrates how to use the <xref:System.Text.ASCIIEncoding.GetByteCount%2A> method to return the number of bytes required to encode a string using <xref:System.Text.ASCIIEncoding>.</span></span>  
  
 [!code-cpp[System.Text.ASCIIEncoding.GetByteCount2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetByteCount2 Example/CPP/getbytecount-string.cpp#1)]
 [!code-csharp[System.Text.ASCIIEncoding.GetByteCount2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetByteCount2 Example/CS/getbytecount-string.cs#1)]
 [!code-vb[System.Text.ASCIIEncoding.GetByteCount2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetByteCount2 Example/VB/getbytecount-string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3c2b5-140">
            <paramref name="chars" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-140">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3c2b5-141">결과 바이트 수가 정수로 반환될 수 있는 최대 수보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-141">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="3c2b5-142">대체가 발생했습니다(전체 설명은 [.NET Framework의 문자 인코딩](~/docs/standard/base-types/character-encoding.md) 참조).</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-142">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="3c2b5-143">및</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-143">-and-</span>
          </span>
          <span data-ttu-id="3c2b5-144">
            <see cref="P:System.Text.Encoding.EncoderFallback" />이 <see cref="T:System.Text.EncoderExceptionFallback" />로 설정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-144">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (char* chars, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(char* chars, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetByteCount(System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(char* chars, int count);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : nativeptr&lt;char&gt; * int -&gt; int" Usage="aSCIIEncoding.GetByteCount (chars, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="3c2b5-145">인코딩할 첫 번째 문자를 가리키는 포인터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-145">A pointer to the first character to encode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="3c2b5-146">인코딩할 문자 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-146">The number of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3c2b5-147">지정한 문자 포인터에서 시작되는 문자 집합을 인코딩할 경우 생성되는 바이트 수를 계산합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-147">Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c2b5-148">지정한 문자를 인코딩할 경우 생성되는 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-148">The number of bytes produced by encoding the specified characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c2b5-149">에 필요한 정확한 배열 크기를 계산 하려면 <xref:System.Text.ASCIIEncoding.GetBytes%2A> 응용 프로그램에서는 결과 바이트를 저장 하려면 <xref:System.Text.ASCIIEncoding.GetByteCount%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-149">To calculate the exact array size required by <xref:System.Text.ASCIIEncoding.GetBytes%2A> to store the resulting bytes, the application uses <xref:System.Text.ASCIIEncoding.GetByteCount%2A>.</span></span> <span data-ttu-id="3c2b5-150">최대 배열 크기를 계산 하려면 응용 프로그램을 사용할지 <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-150">To calculate the maximum array size, the application should use <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>.</span></span> <span data-ttu-id="3c2b5-151">합니다 <xref:System.Text.ASCIIEncoding.GetByteCount%2A> 메서드는 일반적으로 적은 메모리의 할당을 통해 동안는 <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> 메서드는 일반적으로 더 빠르게 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-151">The <xref:System.Text.ASCIIEncoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3c2b5-152">
            <paramref name="chars" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-152">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3c2b5-153">
            <paramref name="count" />가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-153">
              <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="3c2b5-154">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-154">-or-</span>
          </span>
          <span data-ttu-id="3c2b5-155">결과 바이트 수가 정수로 반환될 수 있는 최대 수보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-155">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="3c2b5-156">대체가 발생했습니다(전체 설명은 [.NET Framework의 문자 인코딩](~/docs/standard/base-types/character-encoding.md) 참조).</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-156">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="3c2b5-157">및</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-157">-and-</span>
          </span>
          <span data-ttu-id="3c2b5-158">
            <see cref="P:System.Text.Encoding.EncoderFallback" />이 <see cref="T:System.Text.EncoderExceptionFallback" />로 설정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-158">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="3c2b5-159">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-159">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="3c2b5-160">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-160">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (char[] chars, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(char[] chars, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByteCount (chars As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(cli::array &lt;char&gt; ^ chars, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : char[] * int * int -&gt; int" Usage="aSCIIEncoding.GetByteCount (chars, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="3c2b5-161">인코딩할 문자 집합이 포함된 문자 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-161">The character array containing the set of characters to encode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="3c2b5-162">인코딩할 첫 번째 문자의 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-162">The index of the first character to encode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="3c2b5-163">인코딩할 문자 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-163">The number of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3c2b5-164">지정한 문자 배열의 문자 집합을 인코딩할 경우 생성되는 바이트 수를 계산합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-164">Calculates the number of bytes produced by encoding a set of characters from the specified character array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c2b5-165">지정한 문자를 인코딩할 경우 생성되는 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-165">The number of bytes produced by encoding the specified characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c2b5-166">에 필요한 정확한 배열 크기를 계산 하려면 <xref:System.Text.ASCIIEncoding.GetBytes%2A> 응용 프로그램에서는 결과 바이트를 저장 하려면 <xref:System.Text.ASCIIEncoding.GetByteCount%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-166">To calculate the exact array size required by <xref:System.Text.ASCIIEncoding.GetBytes%2A> to store the resulting bytes, the application uses <xref:System.Text.ASCIIEncoding.GetByteCount%2A>.</span></span> <span data-ttu-id="3c2b5-167">최대 배열 크기를 계산 하려면 응용 프로그램을 사용할지 <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-167">To calculate the maximum array size, the application should use <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>.</span></span> <span data-ttu-id="3c2b5-168">합니다 <xref:System.Text.ASCIIEncoding.GetByteCount%2A> 메서드는 일반적으로 적은 메모리의 할당을 통해 동안는 <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> 메서드는 일반적으로 더 빠르게 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-168">The <xref:System.Text.ASCIIEncoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c2b5-169">다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Text.ASCIIEncoding.GetByteCount%2A> 배열을 사용 하 여 유니코드 문자를 인코딩하는 데 필요한 바이트 수를 반환 하는 방법 <xref:System.Text.ASCIIEncoding>합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-169">The following example demonstrates how to use the <xref:System.Text.ASCIIEncoding.GetByteCount%2A> method to return the number of bytes required to encode an array of Unicode characters using <xref:System.Text.ASCIIEncoding>.</span></span>  
  
 [!code-cpp[System.Text.ASCIIEncoding.GetByteCount1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetByteCount1 Example/CPP/getbytecount-char[]-int32-int32.cpp#1)]
 [!code-csharp[System.Text.ASCIIEncoding.GetByteCount1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetByteCount1 Example/CS/getbytecount-char[]-int32-int32.cs#1)]
 [!code-vb[System.Text.ASCIIEncoding.GetByteCount1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetByteCount1 Example/VB/getbytecount-char[]-int32-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3c2b5-170">
            <paramref name="chars" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-170">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3c2b5-171">
            <paramref name="index" /> 또는 <paramref name="count" />가 0보다 작습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-171">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="3c2b5-172">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-172">-or-</span>
          </span>
          <span data-ttu-id="3c2b5-173">
            <paramref name="index" /> 및 <paramref name="count" />가 <paramref name="chars" />에서 올바른 범위를 나타내지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-173">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="chars" />.</span>
          </span>
          <span data-ttu-id="3c2b5-174">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-174">-or-</span>
          </span>
          <span data-ttu-id="3c2b5-175">결과 바이트 수가 정수로 반환될 수 있는 최대 수보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-175">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="3c2b5-176">대체가 발생했습니다(전체 설명은 [.NET Framework의 문자 인코딩](~/docs/standard/base-types/character-encoding.md) 참조).</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-176">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="3c2b5-177">및</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-177">-and-</span>
          </span>
          <span data-ttu-id="3c2b5-178">
            <see cref="P:System.Text.Encoding.EncoderFallback" />이 <see cref="T:System.Text.EncoderExceptionFallback" />로 설정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-178">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetEncoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBytes">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3c2b5-179">문자 집합을 바이트 시퀀스로 인코딩합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-179">Encodes a set of characters into a sequence of bytes.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (char* chars, int charCount, byte* bytes, int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(char* chars, int32 charCount, unsigned int8* bytes, int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(char* chars, int charCount, System::Byte* bytes, int byteCount);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : nativeptr&lt;char&gt; * int * nativeptr&lt;byte&gt; * int -&gt; int" Usage="aSCIIEncoding.GetBytes (chars, charCount, bytes, byteCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="3c2b5-180">인코딩할 첫 번째 문자를 가리키는 포인터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-180">A pointer to the first character to encode.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="3c2b5-181">인코딩할 문자 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-181">The number of characters to encode.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="3c2b5-182">결과 바이트 시퀀스를 쓰기 시작할 위치를 가리키는 포인터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-182">A pointer to the location at which to start writing the resulting sequence of bytes.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="3c2b5-183">쓸 최대 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-183">The maximum number of bytes to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3c2b5-184">지정한 문자 포인터에서 시작하는 문자 집합을 지정한 바이트 포인터에서 시작하여 저장되는 바이트 시퀀스로 인코딩합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-184">Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c2b5-185">
            <paramref name="bytes" />가 가리키는 위치에 써지는 실제 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-185">The actual number of bytes written at the location indicated by <paramref name="bytes" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c2b5-186">에 필요한 정확한 배열 크기를 계산 하려면 <xref:System.Text.ASCIIEncoding.GetBytes%2A> 응용 프로그램에서는 결과 바이트를 저장 하려면 <xref:System.Text.ASCIIEncoding.GetByteCount%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-186">To calculate the exact array size required by <xref:System.Text.ASCIIEncoding.GetBytes%2A> to store the resulting bytes, the application uses <xref:System.Text.ASCIIEncoding.GetByteCount%2A>.</span></span> <span data-ttu-id="3c2b5-187">최대 배열 크기를 계산 하려면 응용 프로그램을 사용할지 <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-187">To calculate the maximum array size, the application should use <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>.</span></span> <span data-ttu-id="3c2b5-188">합니다 <xref:System.Text.ASCIIEncoding.GetByteCount%2A> 메서드는 일반적으로 적은 메모리의 할당을 통해 동안는 <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> 메서드는 일반적으로 더 빠르게 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-188">The <xref:System.Text.ASCIIEncoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="3c2b5-189">같은 스트림에서 읽은 데이터를 변환할 데이터를 순차 블록에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-189">Data to be converted, such as data read from a stream, can be available only in sequential blocks.</span></span> <span data-ttu-id="3c2b5-190">이 경우 응용 프로그램 데이터의 양이 너무 커서 작은 블록으로 나눌 필요가 있는 경우를 사용 해야 합니다 <xref:System.Text.Decoder> 또는 <xref:System.Text.Encoder> 제공한를 <xref:System.Text.ASCIIEncoding.GetDecoder%2A> 메서드 또는 <xref:System.Text.ASCIIEncoding.GetEncoder%2A> 메서드를 각각.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-190">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.ASCIIEncoding.GetDecoder%2A> method or the <xref:System.Text.ASCIIEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
 <span data-ttu-id="3c2b5-191"><xref:System.Text.ASCIIEncoding> 오류 검색을 제공 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-191"><xref:System.Text.ASCIIEncoding> does not provide error detection.</span></span> <span data-ttu-id="3c2b5-192">유니코드 문자 U + 007F 보다 큰 물음표를 ASCII로 변환 됩니다 ("?").</span><span class="sxs-lookup"><span data-stu-id="3c2b5-192">Any Unicode character greater than U+007F is translated to an ASCII question mark ("?").</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="3c2b5-193">보안상의 이유로 응용 프로그램 사용 것이 좋습니다 <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, 또는 <xref:System.Text.UTF32Encoding> 오류 검색을 사용 하도록 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-193">For security reasons, your application is recommended to use <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, or <xref:System.Text.UTF32Encoding> and enable error detection.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3c2b5-194">
            <paramref name="chars" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-194">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3c2b5-195">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-195">-or-</span>
          </span>
          <span data-ttu-id="3c2b5-196">
            <paramref name="bytes" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-196">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3c2b5-197">
            <paramref name="charCount" /> 또는 <paramref name="byteCount" />가 0보다 작습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-197">
              <paramref name="charCount" /> or <paramref name="byteCount" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3c2b5-198">
            <paramref name="byteCount" />가 결과 바이트 수보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-198">
              <paramref name="byteCount" /> is less than the resulting number of bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="3c2b5-199">대체가 발생했습니다(전체 설명은 [.NET Framework의 문자 인코딩](~/docs/standard/base-types/character-encoding.md) 참조).</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-199">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="3c2b5-200">및</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-200">-and-</span>
          </span>
          <span data-ttu-id="3c2b5-201">
            <see cref="P:System.Text.Encoding.EncoderFallback" />이 <see cref="T:System.Text.EncoderExceptionFallback" />로 설정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-201">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="3c2b5-202">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-202">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="3c2b5-203">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-203">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Text.ASCIIEncoding.GetEncoder" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (char[] chars, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(char[] chars, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (chars As Char(), charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(cli::array &lt;char&gt; ^ chars, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : char[] * int * int * byte[] * int -&gt; int" Usage="aSCIIEncoding.GetBytes (chars, charIndex, charCount, bytes, byteIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="3c2b5-204">인코딩할 문자 집합이 포함된 문자 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-204">The character array containing the set of characters to encode.</span>
          </span>
        </param>
        <param name="charIndex">
          <span data-ttu-id="3c2b5-205">인코딩할 첫 번째 문자의 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-205">The index of the first character to encode.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="3c2b5-206">인코딩할 문자 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-206">The number of characters to encode.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="3c2b5-207">결과 바이트 시퀀스를 포함할 바이트 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-207">The byte array to contain the resulting sequence of bytes.</span>
          </span>
        </param>
        <param name="byteIndex">
          <span data-ttu-id="3c2b5-208">결과 바이트 시퀀스를 쓰기 시작할 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-208">The index at which to start writing the resulting sequence of bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3c2b5-209">지정한 문자 배열의 문자 집합을 지정한 바이트 배열로 인코딩합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-209">Encodes a set of characters from the specified character array into the specified byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c2b5-210">
            <paramref name="bytes" />에 쓴 실제 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-210">The actual number of bytes written into <paramref name="bytes" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c2b5-211">에 필요한 정확한 배열 크기를 계산 하려면 <xref:System.Text.ASCIIEncoding.GetBytes%2A> 응용 프로그램에서는 결과 바이트를 저장 하려면 <xref:System.Text.ASCIIEncoding.GetByteCount%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-211">To calculate the exact array size required by <xref:System.Text.ASCIIEncoding.GetBytes%2A> to store the resulting bytes, the application uses <xref:System.Text.ASCIIEncoding.GetByteCount%2A>.</span></span> <span data-ttu-id="3c2b5-212">최대 배열 크기를 계산 하려면 응용 프로그램을 사용할지 <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-212">To calculate the maximum array size, the application should use <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>.</span></span> <span data-ttu-id="3c2b5-213">합니다 <xref:System.Text.ASCIIEncoding.GetByteCount%2A> 메서드는 일반적으로 적은 메모리의 할당을 통해 동안는 <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> 메서드는 일반적으로 더 빠르게 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-213">The <xref:System.Text.ASCIIEncoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="3c2b5-214">같은 스트림에서 읽은 데이터를 변환할 데이터를 순차 블록에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-214">Data to be converted, such as data read from a stream, can be available only in sequential blocks.</span></span> <span data-ttu-id="3c2b5-215">이 경우 응용 프로그램 데이터의 양이 너무 커서 작은 블록으로 나눌 필요가 있는 경우를 사용 해야 합니다 <xref:System.Text.Decoder> 또는 <xref:System.Text.Encoder> 제공한를 <xref:System.Text.ASCIIEncoding.GetDecoder%2A> 메서드 또는 <xref:System.Text.ASCIIEncoding.GetEncoder%2A> 메서드를 각각.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-215">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.ASCIIEncoding.GetDecoder%2A> method or the <xref:System.Text.ASCIIEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
 <span data-ttu-id="3c2b5-216"><xref:System.Text.ASCIIEncoding> 오류 검색을 제공 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-216"><xref:System.Text.ASCIIEncoding> does not provide error detection.</span></span> <span data-ttu-id="3c2b5-217">유니코드 문자 U + 007F 보다 큰 물음표를 ASCII로 인코딩된 ("?").</span><span class="sxs-lookup"><span data-stu-id="3c2b5-217">Any Unicode character greater than U+007F is encoded as the ASCII question mark ("?").</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="3c2b5-218">보안상의 이유로 응용 프로그램 사용 것이 좋습니다 <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, 또는 <xref:System.Text.UTF32Encoding> 오류 검색을 사용 하도록 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-218">For security reasons, your application is recommended to use <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, or <xref:System.Text.UTF32Encoding> and enable error detection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c2b5-219">다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Text.ASCIIEncoding.GetBytes%2A> 메서드를 다양 한 문자열에서 문자를 인코딩하고 인코딩된 문자를 바이트 배열의 요소 범위에 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-219">The following example demonstrates how to use the <xref:System.Text.ASCIIEncoding.GetBytes%2A> method to encode a range of characters from a string and store the encoded characters in a range of elements in a byte array.</span></span>  
  
 [!code-cpp[System.Text.ASCIIEncoding.GetBytes1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetBytes1 Example/CPP/getbytes-string-int32-int32-byte[]-int32.cpp#1)]
 [!code-csharp[System.Text.ASCIIEncoding.GetBytes1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetBytes1 Example/CS/getbytes-string-int32-int32-byte[]-int32.cs#1)]
 [!code-vb[System.Text.ASCIIEncoding.GetBytes1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetBytes1 Example/VB/getbytes-string-int32-int32-byte[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3c2b5-220">
            <paramref name="chars" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-220">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3c2b5-221">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-221">-or-</span>
          </span>
          <span data-ttu-id="3c2b5-222">
            <paramref name="bytes" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-222">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3c2b5-223">
            <paramref name="charIndex" />, <paramref name="charCount" /> 또는 <paramref name="byteIndex" />가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-223">
              <paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span>
          </span>
          <span data-ttu-id="3c2b5-224">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-224">-or-</span>
          </span>
          <span data-ttu-id="3c2b5-225">
            <paramref name="charIndex" /> 및 <paramref name="charCount" />가 <paramref name="chars" />에서 올바른 범위를 나타내지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-225">
              <paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span>
          </span>
          <span data-ttu-id="3c2b5-226">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-226">-or-</span>
          </span>
          <span data-ttu-id="3c2b5-227">
            <paramref name="byteIndex" />가 <paramref name="bytes" />의 유효한 인덱스가 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-227">
              <paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3c2b5-228">
            <paramref name="bytes" />의 용량(<paramref name="byteIndex" /> ~ 배열 끝)이 부족해서 결과 바이트를 수용할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-228">
              <paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="3c2b5-229">대체가 발생했습니다(전체 설명은 [.NET Framework의 문자 인코딩](~/docs/standard/base-types/character-encoding.md) 참조).</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-229">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="3c2b5-230">및</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-230">-and-</span>
          </span>
          <span data-ttu-id="3c2b5-231">
            <see cref="P:System.Text.Encoding.EncoderFallback" />이 <see cref="T:System.Text.EncoderExceptionFallback" />로 설정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-231">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.ASCIIEncoding.GetEncoder" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (string chars, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(string chars, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (chars As String, charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(System::String ^ chars, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : string * int * int * byte[] * int -&gt; int" Usage="aSCIIEncoding.GetBytes (chars, charIndex, charCount, bytes, byteIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.String" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="3c2b5-232">인코딩할 문자 집합이 포함된 <see cref="T:System.String" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-232">The <see cref="T:System.String" /> containing the set of characters to encode.</span>
          </span>
        </param>
        <param name="charIndex">
          <span data-ttu-id="3c2b5-233">인코딩할 첫 번째 문자의 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-233">The index of the first character to encode.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="3c2b5-234">인코딩할 문자 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-234">The number of characters to encode.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="3c2b5-235">결과 바이트 시퀀스를 포함할 바이트 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-235">The byte array to contain the resulting sequence of bytes.</span>
          </span>
        </param>
        <param name="byteIndex">
          <span data-ttu-id="3c2b5-236">결과 바이트 시퀀스를 쓰기 시작할 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-236">The index at which to start writing the resulting sequence of bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3c2b5-237">지정된 <see cref="T:System.String" />의 문자 집합을 지정된 바이트 배열로 인코딩합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-237">Encodes a set of characters from the specified <see cref="T:System.String" /> into the specified byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c2b5-238">
            <paramref name="bytes" />에 쓴 실제 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-238">The actual number of bytes written into <paramref name="bytes" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c2b5-239">에 필요한 정확한 배열 크기를 계산 하려면 <xref:System.Text.ASCIIEncoding.GetBytes%2A> 응용 프로그램에서는 결과 바이트를 저장 하려면 <xref:System.Text.ASCIIEncoding.GetByteCount%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-239">To calculate the exact array size required by <xref:System.Text.ASCIIEncoding.GetBytes%2A> to store the resulting bytes, the application uses <xref:System.Text.ASCIIEncoding.GetByteCount%2A>.</span></span> <span data-ttu-id="3c2b5-240">최대 배열 크기를 계산 하려면 응용 프로그램을 사용할지 <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-240">To calculate the maximum array size, the application should use <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>.</span></span> <span data-ttu-id="3c2b5-241">합니다 <xref:System.Text.ASCIIEncoding.GetByteCount%2A> 메서드는 일반적으로 적은 메모리의 할당을 통해 동안는 <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> 메서드는 일반적으로 더 빠르게 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-241">The <xref:System.Text.ASCIIEncoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="3c2b5-242">같은 스트림에서 읽은 데이터를 변환할 데이터를 순차 블록에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-242">Data to be converted, such as data read from a stream, can be available only in sequential blocks.</span></span> <span data-ttu-id="3c2b5-243">이 경우 응용 프로그램 데이터의 양이 너무 커서 작은 블록으로 나눌 필요가 있는 경우를 사용 해야 합니다 <xref:System.Text.Decoder> 또는 <xref:System.Text.Encoder> 제공한를 <xref:System.Text.ASCIIEncoding.GetDecoder%2A> 메서드 또는 <xref:System.Text.ASCIIEncoding.GetEncoder%2A> 메서드를 각각.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-243">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.ASCIIEncoding.GetDecoder%2A> method or the <xref:System.Text.ASCIIEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
 <span data-ttu-id="3c2b5-244"><xref:System.Text.ASCIIEncoding> 오류 검색을 제공 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-244"><xref:System.Text.ASCIIEncoding> does not provide error detection.</span></span> <span data-ttu-id="3c2b5-245">유니코드 문자 U + 007F 보다 큰 물음표를 ASCII로 인코딩된 ("?").</span><span class="sxs-lookup"><span data-stu-id="3c2b5-245">Any Unicode character greater than U+007F is encoded as the ASCII question mark ("?").</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="3c2b5-246">보안상의 이유로 응용 프로그램 사용 것이 좋습니다 <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, 또는 <xref:System.Text.UTF32Encoding> 오류 검색을 사용 하도록 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-246">For security reasons, your application is recommended to use <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, or <xref:System.Text.UTF32Encoding> and enable error detection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c2b5-247">다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Text.ASCIIEncoding.GetBytes%2A> 메서드는 유니코드 문자 배열에서 요소의 범위를 인코딩하고 인코딩된 바이트를 바이트 배열의 요소 범위에 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-247">The following example demonstrates how to use the <xref:System.Text.ASCIIEncoding.GetBytes%2A> method to encode a range of elements from a Unicode character array and store the encoded bytes in a range of elements in a byte array.</span></span>  
  
 [!code-cpp[System.Text.ASCIIEncoding.GetBytes2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetBytes2/CPP/getbytes-char[]-int32-int32-byte[]-int32.cpp#1)]
 [!code-csharp[System.Text.ASCIIEncoding.GetBytes2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetBytes2/CS/getbytes-char[]-int32-int32-byte[]-int32.cs#1)]
 [!code-vb[System.Text.ASCIIEncoding.GetBytes2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetBytes2/VB/getbytes-char[]-int32-int32-byte[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3c2b5-248">
            <paramref name="s" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-248">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3c2b5-249">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-249">-or-</span>
          </span>
          <span data-ttu-id="3c2b5-250">
            <paramref name="bytes" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-250">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3c2b5-251">
            <paramref name="charIndex" />, <paramref name="charCount" /> 또는 <paramref name="byteIndex" />가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-251">
              <paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span>
          </span>
          <span data-ttu-id="3c2b5-252">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-252">-or-</span>
          </span>
          <span data-ttu-id="3c2b5-253">
            <paramref name="charIndex" /> 및 <paramref name="charCount" />가 <paramref name="chars" />에서 올바른 범위를 나타내지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-253">
              <paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span>
          </span>
          <span data-ttu-id="3c2b5-254">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-254">-or-</span>
          </span>
          <span data-ttu-id="3c2b5-255">
            <paramref name="byteIndex" />가 <paramref name="bytes" />의 유효한 인덱스가 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-255">
              <paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3c2b5-256">
            <paramref name="bytes" />의 용량(<paramref name="byteIndex" /> ~ 배열 끝)이 부족해서 결과 바이트를 수용할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-256">
              <paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="3c2b5-257">대체가 발생했습니다(전체 설명은 [.NET Framework의 문자 인코딩](~/docs/standard/base-types/character-encoding.md) 참조).</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-257">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="3c2b5-258">및</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-258">-and-</span>
          </span>
          <span data-ttu-id="3c2b5-259">
            <see cref="P:System.Text.Encoding.EncoderFallback" />이 <see cref="T:System.Text.EncoderExceptionFallback" />로 설정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-259">
              <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.ASCIIEncoding.GetEncoder" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCharCount">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3c2b5-260">바이트 시퀀스를 디코딩할 경우 생성되는 문자 수를 계산합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-260">Calculates the number of characters produced by decoding a sequence of bytes.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public override int GetCharCount (byte* bytes, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharCount(unsigned int8* bytes, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharCount(System::Byte* bytes, int count);" />
      <MemberSignature Language="F#" Value="override this.GetCharCount : nativeptr&lt;byte&gt; * int -&gt; int" Usage="aSCIIEncoding.GetCharCount (bytes, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="3c2b5-261">디코딩할 첫 번째 바이트를 가리키는 포인터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-261">A pointer to the first byte to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="3c2b5-262">디코딩할 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-262">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3c2b5-263">지정한 바이트 포인터에서 시작되는 바이트 시퀀스를 디코딩할 경우 생성되는 문자 수를 계산합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-263">Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c2b5-264">지정한 바이트 시퀀스를 디코딩할 경우 생성되는 문자 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-264">The number of characters produced by decoding the specified sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c2b5-265">에 필요한 정확한 배열 크기를 계산 하려면 <xref:System.Text.ASCIIEncoding.GetChars%2A> 응용 프로그램에서는 결과 문자를 저장 하려면 <xref:System.Text.ASCIIEncoding.GetCharCount%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-265">To calculate the exact array size required by <xref:System.Text.ASCIIEncoding.GetChars%2A> to store the resulting characters, the application uses <xref:System.Text.ASCIIEncoding.GetCharCount%2A>.</span></span> <span data-ttu-id="3c2b5-266">최대 배열 크기를 계산 하려면 응용 프로그램을 사용할지 <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-266">To calculate the maximum array size, the application should use <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>.</span></span> <span data-ttu-id="3c2b5-267">합니다 <xref:System.Text.ASCIIEncoding.GetCharCount%2A> 메서드는 일반적으로 적은 메모리의 할당을 통해 동안는 <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> 메서드는 일반적으로 더 빠르게 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-267">The <xref:System.Text.ASCIIEncoding.GetCharCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3c2b5-268">
            <paramref name="bytes" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-268">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3c2b5-269">
            <paramref name="count" />가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-269">
              <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="3c2b5-270">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-270">-or-</span>
          </span>
          <span data-ttu-id="3c2b5-271">결과 바이트 수가 정수로 반환될 수 있는 최대 수보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-271">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="3c2b5-272">대체가 발생했습니다(전체 설명은 [.NET Framework의 문자 인코딩](~/docs/standard/base-types/character-encoding.md) 참조).</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-272">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="3c2b5-273">및</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-273">-and-</span>
          </span>
          <span data-ttu-id="3c2b5-274">
            <see cref="P:System.Text.Encoding.DecoderFallback" />이 <see cref="T:System.Text.DecoderExceptionFallback" />로 설정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-274">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="3c2b5-275">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-275">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="3c2b5-276">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-276">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="Overload:System.Text.ASCIIEncoding.GetChars" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public override int GetCharCount (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharCount(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCharCount (bytes As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharCount(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.GetCharCount : byte[] * int * int -&gt; int" Usage="aSCIIEncoding.GetCharCount (bytes, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="3c2b5-277">디코딩할 바이트 시퀀스를 포함하는 바이트 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-277">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="3c2b5-278">디코딩할 첫 번째 바이트의 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-278">The index of the first byte to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="3c2b5-279">디코딩할 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-279">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3c2b5-280">지정한 바이트 배열의 바이트 시퀀스를 디코딩할 경우 생성되는 문자 수를 계산합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-280">Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c2b5-281">지정한 바이트 시퀀스를 디코딩할 경우 생성되는 문자 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-281">The number of characters produced by decoding the specified sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c2b5-282">에 필요한 정확한 배열 크기를 계산 하려면 <xref:System.Text.ASCIIEncoding.GetChars%2A> 응용 프로그램에서는 결과 문자를 저장 하려면 <xref:System.Text.ASCIIEncoding.GetCharCount%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-282">To calculate the exact array size required by <xref:System.Text.ASCIIEncoding.GetChars%2A> to store the resulting characters, the application uses <xref:System.Text.ASCIIEncoding.GetCharCount%2A>.</span></span> <span data-ttu-id="3c2b5-283">최대 배열 크기를 계산 하려면 응용 프로그램을 사용할지 <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-283">To calculate the maximum array size, the application should use <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>.</span></span> <span data-ttu-id="3c2b5-284">합니다 <xref:System.Text.ASCIIEncoding.GetCharCount%2A> 메서드는 일반적으로 적은 메모리의 할당을 통해 동안는 <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> 메서드는 일반적으로 더 빠르게 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-284">The <xref:System.Text.ASCIIEncoding.GetCharCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c2b5-285">다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Text.ASCIIEncoding.GetCharCount%2A> 바이트 배열에서 요소의 범위를 디코딩하여 생성 되는 문자 수를 반환 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-285">The following example demonstrates how to use the <xref:System.Text.ASCIIEncoding.GetCharCount%2A> method to return the number of characters produced by decoding a range of elements in a byte array.</span></span>  
  
 [!code-cpp[System.Text.ASCIIEncoding.GetCharCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetCharCount Example/CPP/getcharcount-byte[]-int32-int32.cpp#1)]
 [!code-csharp[System.Text.ASCIIEncoding.GetCharCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetCharCount Example/CS/getcharcount-byte[]-int32-int32.cs#1)]
 [!code-vb[System.Text.ASCIIEncoding.GetCharCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetCharCount Example/VB/getcharcount-byte[]-int32-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3c2b5-286">
            <paramref name="bytes" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-286">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3c2b5-287">
            <paramref name="index" /> 또는 <paramref name="count" />가 0보다 작습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-287">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="3c2b5-288">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-288">-or-</span>
          </span>
          <span data-ttu-id="3c2b5-289">
            <paramref name="index" /> 및 <paramref name="count" />가 <paramref name="bytes" />에서 올바른 범위를 나타내지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-289">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span>
          </span>
          <span data-ttu-id="3c2b5-290">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-290">-or-</span>
          </span>
          <span data-ttu-id="3c2b5-291">결과 바이트 수가 정수로 반환될 수 있는 최대 수보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-291">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="3c2b5-292">대체가 발생했습니다(전체 설명은 [.NET Framework의 문자 인코딩](~/docs/standard/base-types/character-encoding.md) 참조).</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-292">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="3c2b5-293">및</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-293">-and-</span>
          </span>
          <span data-ttu-id="3c2b5-294">
            <see cref="P:System.Text.Encoding.DecoderFallback" />이 <see cref="T:System.Text.DecoderExceptionFallback" />로 설정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-294">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Text.ASCIIEncoding.GetChars" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetDecoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChars">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3c2b5-295">바이트 시퀀스를 문자 집합으로 디코딩합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-295">Decodes a sequence of bytes into a set of characters.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override int GetChars (byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetChars(unsigned int8* bytes, int32 byteCount, char* chars, int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetChars(System::Byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberSignature Language="F#" Value="override this.GetChars : nativeptr&lt;byte&gt; * int * nativeptr&lt;char&gt; * int -&gt; int" Usage="aSCIIEncoding.GetChars (bytes, byteCount, chars, charCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="3c2b5-296">디코딩할 첫 번째 바이트를 가리키는 포인터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-296">A pointer to the first byte to decode.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="3c2b5-297">디코딩할 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-297">The number of bytes to decode.</span>
          </span>
        </param>
        <param name="chars">
          <span data-ttu-id="3c2b5-298">결과 문자 집합을 쓰기 시작할 위치를 가리키는 포인터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-298">A pointer to the location at which to start writing the resulting set of characters.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="3c2b5-299">쓸 최대 문자 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-299">The maximum number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3c2b5-300">지정한 바이트 포인터에서 시작하는 바이트 시퀀스를 지정한 문자 포인터에서 시작하여 저장되는 문자 집합으로 디코딩합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-300">Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c2b5-301">
            <paramref name="chars" />가 가리키는 위치에 써지는 실제 문자 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-301">The actual number of characters written at the location indicated by <paramref name="chars" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c2b5-302">에 필요한 정확한 배열 크기를 계산 하려면 <xref:System.Text.ASCIIEncoding.GetChars%2A> 응용 프로그램에서는 결과 문자를 저장 하려면 <xref:System.Text.ASCIIEncoding.GetCharCount%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-302">To calculate the exact array size required by <xref:System.Text.ASCIIEncoding.GetChars%2A> to store the resulting characters, the application uses <xref:System.Text.ASCIIEncoding.GetCharCount%2A>.</span></span> <span data-ttu-id="3c2b5-303">최대 배열 크기를 계산 하려면 응용 프로그램을 사용할지 <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-303">To calculate the maximum array size, the application should use <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>.</span></span> <span data-ttu-id="3c2b5-304">합니다 <xref:System.Text.ASCIIEncoding.GetCharCount%2A> 메서드는 일반적으로 적은 메모리의 할당을 통해 동안는 <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> 메서드는 일반적으로 더 빠르게 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-304">The <xref:System.Text.ASCIIEncoding.GetCharCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="3c2b5-305">같은 스트림에서 읽은 데이터를 변환할 데이터를 순차 블록에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-305">Data to be converted, such as data read from a stream, can be available only in sequential blocks.</span></span> <span data-ttu-id="3c2b5-306">이 경우 응용 프로그램 데이터의 양이 너무 커서 작은 블록으로 나눌 필요가 있는 경우를 사용 해야 합니다 <xref:System.Text.Decoder> 또는 <xref:System.Text.Encoder> 제공한를 <xref:System.Text.ASCIIEncoding.GetDecoder%2A> 메서드 또는 <xref:System.Text.ASCIIEncoding.GetEncoder%2A> 메서드를 각각.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-306">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.ASCIIEncoding.GetDecoder%2A> method or the <xref:System.Text.ASCIIEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
 <span data-ttu-id="3c2b5-307"><xref:System.Text.ASCIIEncoding> 오류 검색을 제공 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-307"><xref:System.Text.ASCIIEncoding> does not provide error detection.</span></span> <span data-ttu-id="3c2b5-308">16 진수 0x7F 보다 큰 모든 바이트 유니코드 물음표도 디코딩 되며 ("?").</span><span class="sxs-lookup"><span data-stu-id="3c2b5-308">Any byte greater than hexadecimal 0x7F is decoded as the Unicode question mark ("?").</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="3c2b5-309">보안상의 이유로 응용 프로그램 사용 것이 좋습니다 <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, 또는 <xref:System.Text.UTF32Encoding> 오류 검색을 사용 하도록 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-309">For security reasons, your application is recommended to use <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, or <xref:System.Text.UTF32Encoding> and enable error detection.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3c2b5-310">
            <paramref name="bytes" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-310">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3c2b5-311">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-311">-or-</span>
          </span>
          <span data-ttu-id="3c2b5-312">
            <paramref name="chars" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-312">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3c2b5-313">
            <paramref name="byteCount" /> 또는 <paramref name="charCount" />가 0보다 작습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-313">
              <paramref name="byteCount" /> or <paramref name="charCount" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3c2b5-314">
            <paramref name="charCount" />가 결과 문자 수보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-314">
              <paramref name="charCount" /> is less than the resulting number of characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="3c2b5-315">대체가 발생했습니다(전체 설명은 [.NET Framework의 문자 인코딩](~/docs/standard/base-types/character-encoding.md) 참조).</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-315">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="3c2b5-316">및</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-316">-and-</span>
          </span>
          <span data-ttu-id="3c2b5-317">
            <see cref="P:System.Text.Encoding.DecoderFallback" />이 <see cref="T:System.Text.DecoderExceptionFallback" />로 설정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-317">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="3c2b5-318">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-318">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="3c2b5-319">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-319">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetDecoder" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override int GetChars (byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetChars(unsigned int8[] bytes, int32 byteIndex, int32 byteCount, char[] chars, int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChars (bytes As Byte(), byteIndex As Integer, byteCount As Integer, chars As Char(), charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetChars(cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex, int byteCount, cli::array &lt;char&gt; ^ chars, int charIndex);" />
      <MemberSignature Language="F#" Value="override this.GetChars : byte[] * int * int * char[] * int -&gt; int" Usage="aSCIIEncoding.GetChars (bytes, byteIndex, byteCount, chars, charIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="3c2b5-320">디코딩할 바이트 시퀀스를 포함하는 바이트 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-320">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <param name="byteIndex">
          <span data-ttu-id="3c2b5-321">디코딩할 첫 번째 바이트의 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-321">The index of the first byte to decode.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="3c2b5-322">디코딩할 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-322">The number of bytes to decode.</span>
          </span>
        </param>
        <param name="chars">
          <span data-ttu-id="3c2b5-323">결과 문자 집합을 포함할 문자 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-323">The character array to contain the resulting set of characters.</span>
          </span>
        </param>
        <param name="charIndex">
          <span data-ttu-id="3c2b5-324">결과 문자 집합을 쓰기 시작할 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-324">The index at which to start writing the resulting set of characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3c2b5-325">지정한 바이트 배열의 바이트 시퀀스를 지정한 문자 배열로 디코딩합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-325">Decodes a sequence of bytes from the specified byte array into the specified character array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c2b5-326">
            <paramref name="chars" />에 쓴 실제 문자 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-326">The actual number of characters written into <paramref name="chars" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c2b5-327">에 필요한 정확한 배열 크기를 계산 하려면 <xref:System.Text.ASCIIEncoding.GetChars%2A> 응용 프로그램에서는 결과 문자를 저장 하려면 <xref:System.Text.ASCIIEncoding.GetCharCount%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-327">To calculate the exact array size required by <xref:System.Text.ASCIIEncoding.GetChars%2A> to store the resulting characters, the application uses <xref:System.Text.ASCIIEncoding.GetCharCount%2A>.</span></span> <span data-ttu-id="3c2b5-328">최대 배열 크기를 계산 하려면 응용 프로그램을 사용할지 <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-328">To calculate the maximum array size, the application should use <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>.</span></span> <span data-ttu-id="3c2b5-329">합니다 <xref:System.Text.ASCIIEncoding.GetCharCount%2A> 메서드는 일반적으로 적은 메모리의 할당을 통해 동안는 <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> 메서드는 일반적으로 더 빠르게 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-329">The <xref:System.Text.ASCIIEncoding.GetCharCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="3c2b5-330">같은 스트림에서 읽은 데이터를 변환할 데이터를 순차 블록에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-330">Data to be converted, such as data read from a stream, can be available only in sequential blocks.</span></span> <span data-ttu-id="3c2b5-331">이 경우 응용 프로그램 데이터의 양이 너무 커서 작은 블록으로 나눌 필요가 있는 경우를 사용 해야 합니다 <xref:System.Text.Decoder> 또는 <xref:System.Text.Encoder> 제공한를 <xref:System.Text.ASCIIEncoding.GetDecoder%2A> 메서드 또는 <xref:System.Text.ASCIIEncoding.GetEncoder%2A> 메서드를 각각.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-331">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.ASCIIEncoding.GetDecoder%2A> method or the <xref:System.Text.ASCIIEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
 <span data-ttu-id="3c2b5-332"><xref:System.Text.ASCIIEncoding> 오류 검색을 제공 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-332"><xref:System.Text.ASCIIEncoding> does not provide error detection.</span></span> <span data-ttu-id="3c2b5-333">16 진수 0x7F 보다 큰 모든 바이트 유니코드 물음표도 디코딩 되며 ("?").</span><span class="sxs-lookup"><span data-stu-id="3c2b5-333">Any byte greater than hexadecimal 0x7F is decoded as the Unicode question mark ("?").</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="3c2b5-334">보안상의 이유로 응용 프로그램 사용 것이 좋습니다 <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, 또는 <xref:System.Text.UTF32Encoding> 오류 검색을 사용 하도록 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-334">For security reasons, your application is recommended to use <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, or <xref:System.Text.UTF32Encoding> and enable error detection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c2b5-335">다음 예제에서는 바이트 배열에서 요소의 범위를 디코딩 및 유니코드 문자 배열에서 요소 집합에서 결과 저장 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-335">The following example demonstrates how to decode a range of elements from a byte array and store the result in a set of elements in a Unicode character array.</span></span>  
  
 [!code-cpp[System.Text.ASCIIEncoding.GetChars Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetChars Example/CPP/getchars-byte[]-int32-int32-char[]-int32.cpp#1)]
 [!code-csharp[System.Text.ASCIIEncoding.GetChars Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetChars Example/CS/getchars-byte[]-int32-int32-char[]-int32.cs#1)]
 [!code-vb[System.Text.ASCIIEncoding.GetChars Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetChars Example/VB/getchars-byte[]-int32-int32-char[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3c2b5-336">
            <paramref name="bytes" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-336">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3c2b5-337">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-337">-or-</span>
          </span>
          <span data-ttu-id="3c2b5-338">
            <paramref name="chars" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-338">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3c2b5-339">
            <paramref name="byteIndex" />, <paramref name="byteCount" /> 또는 <paramref name="charIndex" />가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-339">
              <paramref name="byteIndex" /> or <paramref name="byteCount" /> or <paramref name="charIndex" /> is less than zero.</span>
          </span>
          <span data-ttu-id="3c2b5-340">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-340">-or-</span>
          </span>
          <span data-ttu-id="3c2b5-341">
            <paramref name="byteindex" /> 및 <paramref name="byteCount" />가 <paramref name="bytes" />에서 올바른 범위를 나타내지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-341">
              <paramref name="byteindex" /> and <paramref name="byteCount" /> do not denote a valid range in <paramref name="bytes" />.</span>
          </span>
          <span data-ttu-id="3c2b5-342">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-342">-or-</span>
          </span>
          <span data-ttu-id="3c2b5-343">
            <paramref name="charIndex" />가 <paramref name="chars" />의 유효한 인덱스가 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-343">
              <paramref name="charIndex" /> is not a valid index in <paramref name="chars" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3c2b5-344">
            <paramref name="chars" />의 용량(<paramref name="charIndex" /> ~ 배열 끝)이 부족해서 결과 문자를 수용할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-344">
              <paramref name="chars" /> does not have enough capacity from <paramref name="charIndex" /> to the end of the array to accommodate the resulting characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="3c2b5-345">대체가 발생했습니다(전체 설명은 [.NET Framework의 문자 인코딩](~/docs/standard/base-types/character-encoding.md) 참조).</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-345">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="3c2b5-346">및</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-346">-and-</span>
          </span>
          <span data-ttu-id="3c2b5-347">
            <see cref="P:System.Text.Encoding.DecoderFallback" />이 <see cref="T:System.Text.DecoderExceptionFallback" />로 설정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-347">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetDecoder" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDecoder">
      <MemberSignature Language="C#" Value="public override System.Text.Decoder GetDecoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Decoder GetDecoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetDecoder" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDecoder () As Decoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Decoder ^ GetDecoder();" />
      <MemberSignature Language="F#" Value="override this.GetDecoder : unit -&gt; System.Text.Decoder" Usage="aSCIIEncoding.GetDecoder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Decoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3c2b5-348">ASCII로 인코딩된 바이트 시퀀스를 유니코드 문자 시퀀스로 변환하는 디코더를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-348">Obtains a decoder that converts an ASCII encoded sequence of bytes into a sequence of Unicode characters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c2b5-349">ASCII로 인코딩된 바이트 시퀀스를 유니코드 문자 시퀀스로 변환하는 <see cref="T:System.Text.Decoder" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-349">A <see cref="T:System.Text.Decoder" /> that converts an ASCII encoded sequence of bytes into a sequence of Unicode characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c2b5-350"><xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> 메서드를 비슷한 방식으로 문자의 순차 블록 순차 블록 바이트 변환 된 <xref:System.Text.ASCIIEncoding.GetChars%2A> 이 클래스의 메서드.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-350">The <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method converts sequential blocks of bytes into sequential blocks of characters, in a manner similar to the <xref:System.Text.ASCIIEncoding.GetChars%2A> method of this class.</span></span> <span data-ttu-id="3c2b5-351">그러나는 <xref:System.Text.Decoder> 블록으로 확장 되는 바이트 시퀀스를 올바르게 디코딩할 수 있도록 호출 간의 상태 정보를 유지 관리 합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-351">However, a <xref:System.Text.Decoder> maintains state information between calls so it can correctly decode byte sequences that span blocks.</span></span> <span data-ttu-id="3c2b5-352"><xref:System.Text.Decoder> 도 데이터 블록의 끝에 후행 바이트를 유지 하 고 디코딩 작업은 다음에 후행 바이트를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-352">The <xref:System.Text.Decoder> also preserves trailing bytes at the end of data blocks and uses the trailing bytes in the next decoding operation.</span></span> <span data-ttu-id="3c2b5-353">따라서 <xref:System.Text.ASCIIEncoding.GetDecoder%2A> 고 <xref:System.Text.ASCIIEncoding.GetEncoder%2A> 있으므로 아주 유용 네트워크 전송 및 파일 작업에 대 한 전체 데이터 스트림 대신 데이터 블록을 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-353">Therefore, <xref:System.Text.ASCIIEncoding.GetDecoder%2A> and <xref:System.Text.ASCIIEncoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Decoder" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetEncoder">
      <MemberSignature Language="C#" Value="public override System.Text.Encoder GetEncoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Encoder GetEncoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetEncoder" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEncoder () As Encoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Encoder ^ GetEncoder();" />
      <MemberSignature Language="F#" Value="override this.GetEncoder : unit -&gt; System.Text.Encoder" Usage="aSCIIEncoding.GetEncoder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3c2b5-354">유니코드 문자 시퀀스를 ASCII로 인코딩된 바이트 시퀀스로 변환하는 인코더를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-354">Obtains an encoder that converts a sequence of Unicode characters into an ASCII encoded sequence of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c2b5-355">유니코드 문자 시퀀스를 ASCII로 인코딩된 바이트 시퀀스로 변환하는 <see cref="T:System.Text.Encoder" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-355">An <see cref="T:System.Text.Encoder" /> that converts a sequence of Unicode characters into an ASCII encoded sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c2b5-356">합니다 <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> 메서드를 비슷한 방식으로 바이트 순차 블록 문자의 순차 블록 변환는 <xref:System.Text.ASCIIEncoding.GetBytes%2A> 이 클래스의 메서드.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-356">The <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method converts sequential blocks of characters into sequential blocks of bytes, in a manner similar to the <xref:System.Text.ASCIIEncoding.GetBytes%2A> method of this class.</span></span> <span data-ttu-id="3c2b5-357">그러나는 <xref:System.Text.Encoder> 블록으로 확장 되는 문자 시퀀스 올바르게 인코딩할 수 있도록 호출 간에 상태 정보를 유지 관리 합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-357">However, an <xref:System.Text.Encoder> maintains state information between calls so it can correctly encode character sequences that span blocks.</span></span> <span data-ttu-id="3c2b5-358"><xref:System.Text.Encoder> 또한 후행 유지 되는 데이터 블록의 끝 문자 하 고 다음 인코딩 작업에서 후행 문자를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-358">The <xref:System.Text.Encoder> also preserves trailing characters at the end of data blocks and uses the trailing characters in the next encoding operation.</span></span> <span data-ttu-id="3c2b5-359">예를 들어 데이터 블록 수는 일치 하지 않는 상위 서로게이트를 사용 하 여 종료 및 다음 데이터 블록에 일치 하는 하위 서로게이트 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-359">For example, a data block might end with an unmatched high surrogate, and the matching low surrogate might be in the next data block.</span></span> <span data-ttu-id="3c2b5-360">따라서 <xref:System.Text.ASCIIEncoding.GetDecoder%2A> 고 <xref:System.Text.ASCIIEncoding.GetEncoder%2A> 있으므로 아주 유용 네트워크 전송 및 파일 작업에 대 한 전체 데이터 스트림 대신 데이터 블록을 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-360">Therefore, <xref:System.Text.ASCIIEncoding.GetDecoder%2A> and <xref:System.Text.ASCIIEncoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoder" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxByteCount">
      <MemberSignature Language="C#" Value="public override int GetMaxByteCount (int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMaxByteCount(int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMaxByteCount (charCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMaxByteCount(int charCount);" />
      <MemberSignature Language="F#" Value="override this.GetMaxByteCount : int -&gt; int" Usage="aSCIIEncoding.GetMaxByteCount charCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charCount">
          <span data-ttu-id="3c2b5-361">인코딩할 문자 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-361">The number of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3c2b5-362">지정한 수의 문자를 인코딩할 경우 생성되는 최대 바이트 수를 계산합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-362">Calculates the maximum number of bytes produced by encoding the specified number of characters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c2b5-363">지정한 수의 문자를 인코딩할 경우 생성되는 최대 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-363">The maximum number of bytes produced by encoding the specified number of characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c2b5-364">합니다 <xref:System.Text.ASCIIEncoding.GetByteCount%2A> 에 필요한 정확한 배열 크기를 계산 하는 메서드를 <xref:System.Text.ASCIIEncoding.GetBytes%2A> 반면 결과 바이트를 저장 하는 방법의 <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> 최대 배열 크기를 계산 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-364">The <xref:System.Text.ASCIIEncoding.GetByteCount%2A> method calculates the exact array size required by the <xref:System.Text.ASCIIEncoding.GetBytes%2A> method to store the resulting bytes, whereas the <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> method calculates the maximum array size.</span></span> <span data-ttu-id="3c2b5-365">합니다 <xref:System.Text.ASCIIEncoding.GetByteCount%2A> 메서드는 일반적으로 적은 메모리를 할당 하지만 <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> 메서드는 일반적으로 더 빠르게 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-365">The <xref:System.Text.ASCIIEncoding.GetByteCount%2A> method generally allocates less memory, but the <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="3c2b5-366"><xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> 현재 선택 된 최악의 경우를 비롯 한 최악의 숫자, <xref:System.Text.EncoderFallback>합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-366"><xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> is a worst-case number, including the worst case for the currently selected <xref:System.Text.EncoderFallback>.</span></span>  <span data-ttu-id="3c2b5-367">대체는 잠재적으로 큰 문자열을 사용 하 여 대체 (fallback)를 선택 하면 <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> 큰 값을 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-367">If you choose a replacement fallback with a potentially large string, <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> can return large values.</span></span>  
  
 <span data-ttu-id="3c2b5-368"><xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> 메서드 이전에 인코딩 작업에서 잠재적인 남겨진 서로게이트를 고려 합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-368">The <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> method considers potential leftover surrogates from a previous encoding operation.</span></span> <span data-ttu-id="3c2b5-369">결과적으로, 경우 합니다 <xref:System.Text.ASCIIEncoding> 개체에 기본 교체 대체 (fallback)를 사용 하 여 또는 대체 (fallback)는 사용자 지정 하는 대체 가능한 대체 (fallback) 문자 하나를 사용 하 여 정의한 경우이 메서드 반환 `charCount` + 1입니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-369">As a result, if the <xref:System.Text.ASCIIEncoding> object uses the default replacement fallback, or if a custom replacement fallback has been defined with a single possible fallback character, the method returns `charCount` + 1.</span></span> <span data-ttu-id="3c2b5-370">경우는 <xref:System.Text.ASCIIEncoding> 개체는 교체 대체 (fallback)를 사용 하 여 둘 이상의 가능한 대체 (fallback) 문자를 사용 하 여, 메서드가 반환 *n* \* (`charCount` + 1) 여기서 *n* 대체 (fallback)의 최대 수 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-370">If the <xref:System.Text.ASCIIEncoding> object uses a replacement fallback with more than one possible fallback character, the method returns *n* \* (`charCount` + 1), where *n* is the maximum number of fallback characters.</span></span>  
  
 <span data-ttu-id="3c2b5-371"><xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> 관계가 없으며 <xref:System.Text.ASCIIEncoding.GetChars%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-371"><xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> has no relation to <xref:System.Text.ASCIIEncoding.GetChars%2A>.</span></span> <span data-ttu-id="3c2b5-372">응용 프로그램에 사용 하는 유사한 함수가 필요 하는 경우 <xref:System.Text.ASCIIEncoding.GetChars%2A>를 사용 해야 <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-372">If your application needs a similar function to use with <xref:System.Text.ASCIIEncoding.GetChars%2A>, it should use <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3c2b5-373">`GetMaxByteCount(N)` 동일한 값은 반드시 `N* GetMaxByteCount(1)`입니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-373">`GetMaxByteCount(N)` is not necessarily the same value as `N* GetMaxByteCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c2b5-374">다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> 지정한 개수의 문자를 인코딩하는 데 필요한 바이트를 계산 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-374">The following example demonstrates how to use the <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> method to calculate the bytes required to encode a specified number of characters.</span></span>  
  
 [!code-cpp[System.Text.ASCIIEncoding.GetMaxByteCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetMaxByteCount Example/CPP/getmaxbytecount-int32.cpp#1)]
 [!code-csharp[System.Text.ASCIIEncoding.GetMaxByteCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetMaxByteCount Example/CS/getmaxbytecount-int32.cs#1)]
 [!code-vb[System.Text.ASCIIEncoding.GetMaxByteCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetMaxByteCount Example/VB/getmaxbytecount-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3c2b5-375">
            <paramref name="charCount" />가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-375">
              <paramref name="charCount" /> is less than zero.</span>
          </span>
          <span data-ttu-id="3c2b5-376">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-376">-or-</span>
          </span>
          <span data-ttu-id="3c2b5-377">결과 바이트 수가 정수로 반환될 수 있는 최대 수보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-377">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxCharCount">
      <MemberSignature Language="C#" Value="public override int GetMaxCharCount (int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMaxCharCount(int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMaxCharCount (byteCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMaxCharCount(int byteCount);" />
      <MemberSignature Language="F#" Value="override this.GetMaxCharCount : int -&gt; int" Usage="aSCIIEncoding.GetMaxCharCount byteCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="byteCount">
          <span data-ttu-id="3c2b5-378">디코딩할 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-378">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3c2b5-379">지정한 수의 바이트를 디코딩할 경우 생성되는 최대 문자 수를 계산합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-379">Calculates the maximum number of characters produced by decoding the specified number of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c2b5-380">지정한 수의 바이트를 디코딩할 경우 생성되는 최대 문자 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-380">The maximum number of characters produced by decoding the specified number of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c2b5-381"><xref:System.Text.ASCIIEncoding.GetCharCount%2A> 에 필요한 정확한 배열 크기를 계산 하는 메서드를 <xref:System.Text.ASCIIEncoding.GetChars%2A> 반면 결과 저장 하는 방법 문자는 <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> 메서드는 최대 배열 크기를 계산 합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-381">The <xref:System.Text.ASCIIEncoding.GetCharCount%2A> method calculates the exact array size required by the <xref:System.Text.ASCIIEncoding.GetChars%2A> method to store the resulting characters, whereas  the <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> method calculates the maximum array size.</span></span> <span data-ttu-id="3c2b5-382">합니다 <xref:System.Text.ASCIIEncoding.GetCharCount%2A> 메서드는 일반적으로 적은 메모리를 할당 하는 동안는 <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> 메서드는 일반적으로 더 빠르게 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-382">The <xref:System.Text.ASCIIEncoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="3c2b5-383"><xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> 현재 선택 된 최악의 경우를 비롯 한 최악의 숫자 검색 <xref:System.Text.DecoderFallback>합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-383"><xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> retrieves a worst-case number, including the worst case for the currently selected <xref:System.Text.DecoderFallback>.</span></span> <span data-ttu-id="3c2b5-384">디코더 대체 (fallback)이 없으면 길이가 최대 대체 (fallback)의 *n*서 <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> 메서드가 반환 *n* \* `byteCount`합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-384">If a decoder fallback is present that has a maximum fallback length of *n*, the <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> method returns *n* \* `byteCount`.</span></span>  
  
 <span data-ttu-id="3c2b5-385"><xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> 관계가 없으며 <xref:System.Text.ASCIIEncoding.GetBytes%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-385"><xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> has no relation to <xref:System.Text.ASCIIEncoding.GetBytes%2A>.</span></span> <span data-ttu-id="3c2b5-386">응용 프로그램에 사용 하는 유사한 함수가 필요 하는 경우 <xref:System.Text.ASCIIEncoding.GetBytes%2A>를 사용 해야 <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-386">If your application needs a similar function to use with <xref:System.Text.ASCIIEncoding.GetBytes%2A>, it should use <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3c2b5-387">`GetMaxCharCount(N)` 동일한 값은 반드시 `N* GetMaxCharCount(1)`입니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-387">`GetMaxCharCount(N)` is not necessarily the same value as `N* GetMaxCharCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c2b5-388">다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> 디코딩할 바이트 수를 지정된 하는 데 필요한 문자의 최대 수를 계산 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-388">The following example demonstrates how to use the <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> method to calculate the maximum number of characters needed to decode a specified number of bytes.</span></span>  
  
 [!code-cpp[System.Text.ASCIIEncoding.GetMaxCharCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetMaxCharCount Example/CPP/getmaxcharcount-int32.cpp#1)]
 [!code-csharp[System.Text.ASCIIEncoding.GetMaxCharCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetMaxCharCount Example/CS/getmaxcharcount-int32.cs#1)]
 [!code-vb[System.Text.ASCIIEncoding.GetMaxCharCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetMaxCharCount Example/VB/getmaxcharcount-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3c2b5-389">
            <paramref name="byteCount" />가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-389">
              <paramref name="byteCount" /> is less than zero.</span>
          </span>
          <span data-ttu-id="3c2b5-390">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-390">-or-</span>
          </span>
          <span data-ttu-id="3c2b5-391">결과 바이트 수가 정수로 반환될 수 있는 최대 수보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-391">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (byte[] bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(unsigned int8[] bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetString(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetString (bytes As Byte()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetString(cli::array &lt;System::Byte&gt; ^ bytes);" />
      <MemberSignature Language="F#" Value="override this.GetString : byte[] -&gt; string" Usage="aSCIIEncoding.GetString bytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (byte[] bytes, int byteIndex, int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(unsigned int8[] bytes, int32 byteIndex, int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetString (bytes As Byte(), byteIndex As Integer, byteCount As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetString(cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex, int byteCount);" />
      <MemberSignature Language="F#" Value="override this.GetString : byte[] * int * int -&gt; string" Usage="aSCIIEncoding.GetString (bytes, byteIndex, byteCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="3c2b5-392">디코딩할 바이트 시퀀스를 포함하는 바이트 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-392">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <param name="byteIndex">
          <span data-ttu-id="3c2b5-393">디코딩할 첫 번째 바이트의 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-393">The index of the first byte to decode.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="3c2b5-394">디코딩할 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-394">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3c2b5-395">바이트 배열의 바이트 범위를 문자열로 디코딩합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-395">Decodes a range of bytes from a byte array into a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c2b5-396">지정된 바이트 시퀀스에 대한 디코딩 결과가 포함된 <see cref="T:System.String" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-396">A <see cref="T:System.String" /> containing the results of decoding the specified sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c2b5-397">같은 스트림에서 읽은 데이터를 변환할 데이터를 순차 블록에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-397">Data to be converted, such as data read from a stream, can be available only in sequential blocks.</span></span> <span data-ttu-id="3c2b5-398">이 경우 응용 프로그램 데이터의 양이 너무 커서 작은 블록으로 나눌 필요가 있는 경우를 사용 해야 합니다 <xref:System.Text.Decoder> 또는 <xref:System.Text.Encoder> 제공한를 <xref:System.Text.ASCIIEncoding.GetDecoder%2A> 메서드 또는 <xref:System.Text.ASCIIEncoding.GetEncoder%2A> 메서드를 각각.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-398">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.ASCIIEncoding.GetDecoder%2A> method or the <xref:System.Text.ASCIIEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
 <span data-ttu-id="3c2b5-399"><xref:System.Text.ASCIIEncoding> 오류 검색을 제공 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-399"><xref:System.Text.ASCIIEncoding> does not provide error detection.</span></span> <span data-ttu-id="3c2b5-400">16 진수 0x7F 보다 큰 모든 바이트 유니코드 물음표도 디코딩 되며 ("?").</span><span class="sxs-lookup"><span data-stu-id="3c2b5-400">Any byte greater than hexadecimal 0x7F is decoded as the Unicode question mark ("?").</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="3c2b5-401">보안상의 이유로 사용 해야 합니다 <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, 또는 <xref:System.Text.UTF32Encoding> 클래스 및 사용 하는 대신 오류 검색을 사용 하도록 설정 합니다 <xref:System.Text.ASCIIEncoding> 클래스.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-401">For security reasons, you should use the <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, or <xref:System.Text.UTF32Encoding> classes and enable error detection instead of using the <xref:System.Text.ASCIIEncoding> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c2b5-402">다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Text.ASCIIEncoding.GetString%2A> 메서드는 바이트 배열은 <xref:System.String>합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-402">The following example demonstrates how to use the <xref:System.Text.ASCIIEncoding.GetString%2A> method to convert a byte array into a <xref:System.String>.</span></span>  
  
 [!code-cpp[System.Text.ASCIIEncoding.GetString1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetString1 Example/CPP/getstring-byte[].cpp#1)]
 [!code-csharp[System.Text.ASCIIEncoding.GetString1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetString1 Example/CS/getstring-byte[].cs#1)]
 [!code-vb[System.Text.ASCIIEncoding.GetString1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetString1 Example/VB/getstring-byte[].vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3c2b5-403">
            <paramref name="bytes" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-403">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3c2b5-404">
            <paramref name="index" /> 또는 <paramref name="count" />가 0보다 작습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-404">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="3c2b5-405">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-405">-or-</span>
          </span>
          <span data-ttu-id="3c2b5-406">
            <paramref name="index" /> 및 <paramref name="count" />가 <paramref name="bytes" />에서 올바른 범위를 나타내지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-406">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="3c2b5-407">대체가 발생했습니다(전체 설명은 [.NET Framework의 문자 인코딩](~/docs/standard/base-types/character-encoding.md) 참조).</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-407">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span>
          </span>
          <span data-ttu-id="3c2b5-408">및</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-408">-and-</span>
          </span>
          <span data-ttu-id="3c2b5-409">
            <see cref="P:System.Text.Encoding.DecoderFallback" />이 <see cref="T:System.Text.DecoderExceptionFallback" />로 설정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-409">
              <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetDecoder" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsSingleByte">
      <MemberSignature Language="C#" Value="public override bool IsSingleByte { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSingleByte" />
      <MemberSignature Language="DocId" Value="P:System.Text.ASCIIEncoding.IsSingleByte" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsSingleByte As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSingleByte { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSingleByte : bool" Usage="System.Text.ASCIIEncoding.IsSingleByte" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3c2b5-410">현재 인코딩이 싱글바이트 코드 포인트를 사용하는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-410">Gets a value indicating whether the current encoding uses single-byte code points.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3c2b5-411">이 속성은 항상 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c2b5-411">This property is always <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c2b5-412">사용 하는 대신 합니다 <xref:System.Text.ASCIIEncoding.IsSingleByte%2A> 인코딩 작업 및 디코딩 작업에 대 한 문자 배열의 크기에 대 한 바이트 배열의 크기를 결정 하는 속성 (예를 들어 되도록 바이트 배열의 크기 <xref:System.Text.ASCIIEncoding.IsSingleByte%2A> \* 문자 수 인코딩)를 호출 해야 합니다 <xref:System.Text.ASCIIEncoding.GetByteCount%2A> 하거나 <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> 인코딩 작업에 대 한 메서드 및 <xref:System.Text.ASCIIEncoding.GetCharCount%2A> 또는 <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> 디코딩 작업의 메서드.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-412">Instead of using the <xref:System.Text.ASCIIEncoding.IsSingleByte%2A> property to determine the size of a byte array for encoding operations  and the size of a character array for decoding operations (for example, so that the size of the byte array is <xref:System.Text.ASCIIEncoding.IsSingleByte%2A> \* the number of characters to be encoded), you should call the <xref:System.Text.ASCIIEncoding.GetByteCount%2A> or <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> method for encoding operations and the <xref:System.Text.ASCIIEncoding.GetCharCount%2A> or <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> method for decoding operations.</span></span> <span data-ttu-id="3c2b5-413">이러한 메서드는는 <xref:System.Text.ASCIIEncoding> 개체의 교체 대체 (fallback) 전략을 필요한 배열 크기를 계산할 때 고려 합니다.</span><span class="sxs-lookup"><span data-stu-id="3c2b5-413">These methods takes the <xref:System.Text.ASCIIEncoding> object's replacement fallback strategy into account when calculating the required array size.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>