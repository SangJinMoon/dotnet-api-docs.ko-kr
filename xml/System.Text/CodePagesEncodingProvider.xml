<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CodePagesEncodingProvider.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e6efcd1087d76c36c30b97da200a756d52917279.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e6efcd1087d76c36c30b97da200a756d52917279</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Text.CodePagesEncodingProvider">
          <source>Provides access to an encoding provider for code pages supported in the desktop .NET Framework but not in UWP apps.</source>
          <target state="translated">데스크톱 .NET Framework에서는 지원되지만 UWP 앱에서는 지원되지 않는 코드 페이지의 인코딩 공급자에 액세스할 수 있도록 해줍니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.CodePagesEncodingProvider">
          <source>The <ph id="ph1">&lt;xref:System.Text.CodePagesEncodingProvider&gt;</ph> class is supported in the .NET Native implementation of .NET Core only.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.CodePagesEncodingProvider&gt;</ph> 클래스는.NET 네이티브의 구현에서.NET Core만 지원 됩니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.CodePagesEncodingProvider">
          <source>The .NET Framework for the Windows desktop supports a large set of Unicode and code page encodings.</source>
          <target state="translated">Windows 바탕 화면에 대 한.NET Framework는 다양 한 유니코드 및 코드 페이지 인코딩 지원합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.CodePagesEncodingProvider">
          <source>The Universal Windows platform and .NET Native, on the other hand, support only the following encodings:</source>
          <target state="translated">유니버설 Windows 플랫폼 및.NET 네이티브 반면에 다음 인코딩을을 지원합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.CodePagesEncodingProvider">
          <source>ASCII (code page 20127), which is returned by the <ph id="ph1">&lt;xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">ASCII (코드 페이지 20127)에서 반환 되는 <ph id="ph1">&lt;xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.CodePagesEncodingProvider">
          <source>ISO-8859-1 (code page 28591).</source>
          <target state="translated">Iso-8859-1 (코드 페이지 28591).</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.CodePagesEncodingProvider">
          <source>UTF-7 (code page 65000), which is returned by the <ph id="ph1">&lt;xref:System.Text.Encoding.UTF7%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">U t F-7 (코드 페이지 65000)에서 반환 되는 <ph id="ph1">&lt;xref:System.Text.Encoding.UTF7%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.CodePagesEncodingProvider">
          <source>UTF-8 (code page 65001), which is returned by the <ph id="ph1">&lt;xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">U t F-8 (코드 페이지 65001)에서 반환 되는 <ph id="ph1">&lt;xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.CodePagesEncodingProvider">
          <source>UTF-16 and UTF-16LE (code page 1200), which is returned by the <ph id="ph1">&lt;xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">U t F-16과 u t F-16LE (코드 페이지 1200)에서 반환 되는 <ph id="ph1">&lt;xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.CodePagesEncodingProvider">
          <source>UTF-16BE (code page 1201), which is instantiated by calling the <ph id="ph1">&lt;xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType&gt;</ph> constructor with a <ph id="ph3">`bigEndian`</ph> value of <ph id="ph4">`true`</ph>.</source>
          <target state="translated">U t F-16BE (코드 페이지 1201)를 호출 하 여 인스턴스화된는 <ph id="ph1">&lt;xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType&gt;</ph> 생성자는 <ph id="ph3">`bigEndian`</ph> 값 <ph id="ph4">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.CodePagesEncodingProvider">
          <source>UTF-32 and UTF-32LE (code page 12000), which is returned by the <ph id="ph1">&lt;xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">U t F-32와 u t F-32LE (코드 페이지 12000)에서 반환 되는 <ph id="ph1">&lt;xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.CodePagesEncodingProvider">
          <source>UTF-32BE (code page 12001), which is instantiated by calling an <ph id="ph1">&lt;xref:System.Text.UTF32Encoding&gt;</ph> constructor that has a <ph id="ph2">`bigEndian`</ph> parameter and providing a value of <ph id="ph3">`true`</ph> in the method call.</source>
          <target state="translated">U t F-32BE (코드 페이지 12001)를 호출 하 여 인스턴스화된는 <ph id="ph1">&lt;xref:System.Text.UTF32Encoding&gt;</ph> 변수가 있는 생성자는 <ph id="ph2">`bigEndian`</ph> 의 값을 제공 하 고 매개 변수 <ph id="ph3">`true`</ph> 메서드 호출에서 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.CodePagesEncodingProvider">
          <source>Other than code page 20127, code page encodings are not supported.</source>
          <target state="translated">코드 페이지 20127 이외의 코드 페이지 인코딩 지원 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.CodePagesEncodingProvider">
          <source>The <ph id="ph1">&lt;xref:System.Text.CodePagesEncodingProvider&gt;</ph> class extends <ph id="ph2">&lt;xref:System.Text.EncodingProvider&gt;</ph> to make these code pages available to .NET Native and Universal Windows Platform (UWP) apps.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.CodePagesEncodingProvider&gt;</ph> 클래스 확장 <ph id="ph2">&lt;xref:System.Text.EncodingProvider&gt;</ph> 이러한 코드 페이지를.NET 네이티브 및 유니버설 Windows 플랫폼 (UWP) 응용 프로그램에서 사용할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.CodePagesEncodingProvider">
          <source>To use these additional code pages, you do the following:</source>
          <target state="translated">이러한 추가 코드 페이지를 사용 하려면 다음을 수행 있습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.CodePagesEncodingProvider">
          <source>Add a reference to the System.Text.Encoding.CodePages.dll assembly to your project.</source>
          <target state="translated">프로젝트에 System.Text.Encoding.CodePages.dll 어셈블리에 대 한 참조를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.CodePagesEncodingProvider">
          <source>Retrieve a <ph id="ph1">&lt;xref:System.Text.CodePagesEncodingProvider&gt;</ph> object from the static <ph id="ph2">&lt;xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">검색 한 <ph id="ph1">&lt;xref:System.Text.CodePagesEncodingProvider&gt;</ph> 정적에서 개체 <ph id="ph2">&lt;xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.CodePagesEncodingProvider">
          <source>Pass the <ph id="ph1">&lt;xref:System.Text.CodePagesEncodingProvider&gt;</ph> object to the <ph id="ph2">&lt;xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.CodePagesEncodingProvider&gt;</ph> 개체를 <ph id="ph2">&lt;xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType&gt;</ph> 메서드에 전달합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.CodePagesEncodingProvider">
          <source>After an <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> object is registered, the encodings that it supports are available by calling the overloads of <ph id="ph2">&lt;xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType&gt;</ph>; you should not call the <ph id="ph3">&lt;xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType&gt;</ph> overloads.</source>
          <target state="translated">후는 <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> 개체가 등록 된, 오버 로드를 호출 하 여 지원 되는 인코딩은 소재가 <ph id="ph2">&lt;xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType&gt;</ph>; 호출 하지 않아야는 <ph id="ph3">&lt;xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType&gt;</ph> 오버 로드 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.Text.CodePagesEncodingProvider.Instance">
          <source>Gets an encoding provider for code pages supported in the desktop .NET Framework but not in the current .NET Framework platform.</source>
          <target state="translated">데스크톱 .NET Framework에서는 지원되지만 현재 .NET Framework 플랫폼에서는 지원되지 않는 코드 페이지의 인코딩 공급자를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.CodePagesEncodingProvider.Instance">
          <source>An encoding provider that allows access to encodings not supported on the current .NET Framework platform.</source>
          <target state="translated">현재.NET Framework 플랫폼에서 지원 되지 않는 인코딩에 대 한 액세스를 허용 하는 인코딩 공급자입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.CodePagesEncodingProvider.Instance">
          <source>The <ph id="ph1">&lt;xref:System.Text.CodePagesEncodingProvider.Instance%2A&gt;</ph> property returns an <ph id="ph2">&lt;xref:System.Text.EncodingProvider&gt;</ph> object that makes encodings available to apps that target the <ph id="ph3">[!INCLUDE[net_v46](~/includes/net-v46-md.md)]</ph> or a later version  and that otherwise are available only in the .NET Framework on the Windows desktop.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.CodePagesEncodingProvider.Instance%2A&gt;</ph> 속성에서 반환 된 <ph id="ph2">&lt;xref:System.Text.EncodingProvider&gt;</ph> 인코딩을 사용할 수 있도록 앱을 대상으로 하는 개체는 <ph id="ph3">[!INCLUDE[net_v46](~/includes/net-v46-md.md)]</ph> 이후 버전이 고 그렇지 않으면 에서만 사용할 수 있는 Windows 바탕 화면에서.NET Framework 또는 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.CodePagesEncodingProvider.Instance">
          <source>The .NET Framework on the Windows desktop supports a large number of character encodings and code pages.</source>
          <target state="translated">Windows 바탕 화면에서.NET Framework는 많은 수의 문자 인코딩 및 코드 페이지를 지원합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.CodePagesEncodingProvider.Instance">
          <source>You can get a complete list of encodings by calling the <ph id="ph1">&lt;xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType&gt;</ph> method, which is available in the full .NET Framework on the Windows desktop.</source>
          <target state="translated">호출 하 여 인코딩의 전체 목록을 가져올 수 있습니다는 <ph id="ph1">&lt;xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType&gt;</ph> Windows 바탕 화면에서 전체.NET Framework에서 제공 되는 메서드.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.CodePagesEncodingProvider.Instance">
          <source>.NET Native for UWP apps, on the other hand, supports only the following encodings by default:</source>
          <target state="translated">UWP 앱 용.NET 네이티브 반면에 다음 인코딩은 기본적으로 지원:</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.CodePagesEncodingProvider.Instance">
          <source>ASCII (code page 20127), which is returned by the <ph id="ph1">&lt;xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">ASCII (코드 페이지 20127)에서 반환 되는 <ph id="ph1">&lt;xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.CodePagesEncodingProvider.Instance">
          <source>ISO-8859-1 (code page 28591).</source>
          <target state="translated">Iso-8859-1 (코드 페이지 28591).</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.CodePagesEncodingProvider.Instance">
          <source>UTF-7 (code page 65000), which is returned by the <ph id="ph1">&lt;xref:System.Text.Encoding.UTF7%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">U t F-7 (코드 페이지 65000)에서 반환 되는 <ph id="ph1">&lt;xref:System.Text.Encoding.UTF7%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.CodePagesEncodingProvider.Instance">
          <source>UTF-8 (code page 65001), which is returned by the <ph id="ph1">&lt;xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">U t F-8 (코드 페이지 65001)에서 반환 되는 <ph id="ph1">&lt;xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.CodePagesEncodingProvider.Instance">
          <source>UTF-16 and UTF-16LE (code page 1200), which is returned by the <ph id="ph1">&lt;xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">U t F-16과 u t F-16LE (코드 페이지 1200)에서 반환 되는 <ph id="ph1">&lt;xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.CodePagesEncodingProvider.Instance">
          <source>UTF-16BE (code page 1201), which is instantiated by calling the <ph id="ph1">&lt;xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType&gt;</ph> constructor with a <ph id="ph3">`bigEndian`</ph> value of <ph id="ph4">`true`</ph>.</source>
          <target state="translated">U t F-16BE (코드 페이지 1201)를 호출 하 여 인스턴스화된는 <ph id="ph1">&lt;xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType&gt;</ph> 생성자는 <ph id="ph3">`bigEndian`</ph> 값 <ph id="ph4">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.CodePagesEncodingProvider.Instance">
          <source>UTF-32 and UTF-32LE (code page 12000), which is returned by the <ph id="ph1">&lt;xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">U t F-32와 u t F-32LE (코드 페이지 12000)에서 반환 되는 <ph id="ph1">&lt;xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.CodePagesEncodingProvider.Instance">
          <source>UTF-32BE (code page 12001), which is instantiated by calling an <ph id="ph1">&lt;xref:System.Text.UTF32Encoding&gt;</ph> constructor that has a <ph id="ph2">`bigEndian`</ph> parameter and providing a value of <ph id="ph3">`true`</ph> in the method call.</source>
          <target state="translated">U t F-32BE (코드 페이지 12001)를 호출 하 여 인스턴스화된는 <ph id="ph1">&lt;xref:System.Text.UTF32Encoding&gt;</ph> 변수가 있는 생성자는 <ph id="ph2">`bigEndian`</ph> 의 값을 제공 하 고 매개 변수 <ph id="ph3">`true`</ph> 메서드 호출에서 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.CodePagesEncodingProvider.Instance">
          <source>To retrieve an encoding that is present in the .NET Framework on the Windows desktop but not in UWP apps, you do the following:</source>
          <target state="translated">UWP 앱 있지만 Windows 바탕 화면에서.NET Framework에 존재 하는 인코딩을 검색 하려면 다음을 수행 있습니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.CodePagesEncodingProvider.Instance">
          <source>Add a reference to the System.Text.Encoding.CodePages.dll assembly to your project.</source>
          <target state="translated">프로젝트에 System.Text.Encoding.CodePages.dll 어셈블리에 대 한 참조를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.CodePagesEncodingProvider.Instance">
          <source>Get the <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> object from the static <ph id="ph2">&lt;xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">가져오기는 <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> 정적에서 개체 <ph id="ph2">&lt;xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.CodePagesEncodingProvider.Instance">
          <source>Pass the <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> object to the <ph id="ph2">&lt;xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType&gt;</ph> method to make the encodings supplied by the <ph id="ph3">&lt;xref:System.Text.EncodingProvider&gt;</ph> object available to the common language runtime.</source>
          <target state="translated">전달 된 <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> 개체를 <ph id="ph2">&lt;xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType&gt;</ph> 제공한 인코딩은 만드는 메서드와 알림이 <ph id="ph3">&lt;xref:System.Text.EncodingProvider&gt;</ph> 공용 언어 런타임에 사용할 수 있는 개체입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.CodePagesEncodingProvider.Instance">
          <source>Call an <ph id="ph1">&lt;xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType&gt;</ph> overload to retrieve the encoding.</source>
          <target state="translated">호출 프로그램 <ph id="ph1">&lt;xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType&gt;</ph> 인코딩을 검색 하는 오버 로드 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.CodePagesEncodingProvider.Instance">
          <source>The <ph id="ph1">&lt;xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType&gt;</ph> method will call the corresponding <ph id="ph2">&lt;xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType&gt;</ph> method to determine whether it can supply the requested encoding.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType&gt;</ph> 해당 메서드를 호출 합니다 <ph id="ph2">&lt;xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType&gt;</ph> 요청한 인코딩의 제공할 수 있는지 여부를 결정 하는 메서드.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>