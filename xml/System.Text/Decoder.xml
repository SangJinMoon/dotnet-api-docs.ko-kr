<Type Name="Decoder" FullName="System.Text.Decoder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="13b84f63684da5556905ba4fdf5eed7f591aa9bd" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36408126" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Decoder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Decoder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.Decoder" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Decoder" />
  <TypeSignature Language="C++ CLI" Value="public ref class Decoder abstract" />
  <TypeSignature Language="F#" Value="type Decoder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="98e27-101">Converts a sequence of encoded bytes into a set of characters.</span>
      <span class="sxs-lookup">
        <span data-stu-id="98e27-101">Converts a sequence of encoded bytes into a set of characters.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98e27-102">구현 인스턴스를 가져오려면 이와 <xref:System.Text.Decoder> 응용 프로그램에서 사용 해야 클래스는 <xref:System.Text.Encoding.GetDecoder%2A> 의 메서드는 <xref:System.Text.Encoding> 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-102">To obtain an instance of an implementation of the <xref:System.Text.Decoder> class, the application should use the <xref:System.Text.Encoding.GetDecoder%2A> method of an <xref:System.Text.Encoding> implementation.</span></span>  
  
 <span data-ttu-id="98e27-103"><xref:System.Text.Decoder.GetCharCount%2A> 메서드 디코딩될, 바이트의 시퀀스의 문자 수를 확인 및 <xref:System.Text.Decoder.GetChars%2A> 메서드는 실제 디코딩을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-103">The <xref:System.Text.Decoder.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.Decoder.GetChars%2A> method performs the actual decoding.</span></span> <span data-ttu-id="98e27-104">사용할 수 있는 여러 버전의 두 가지이 방법을 가지가 <xref:System.Text.Decoder> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-104">There are several versions of both of these methods available in the <xref:System.Text.Decoder> class.</span></span> <span data-ttu-id="98e27-105">자세한 내용은 <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType>을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="98e27-105">For more information, see <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="98e27-106">A <xref:System.Text.Decoder> 개체에 연속 호출 간의 상태 정보를 유지 관리 `GetChars` 또는 <xref:System.Text.Decoder.Convert%2A> 메서드 블록으로 확장 되는 바이트 시퀀스를 올바르게 디코딩할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-106">A <xref:System.Text.Decoder> object maintains state information between successive calls to `GetChars` or <xref:System.Text.Decoder.Convert%2A> methods so it can correctly decode byte sequences that span blocks.</span></span> <span data-ttu-id="98e27-107"><xref:System.Text.Decoder> 또한 데이터 블록의 끝에 후행 바이트를 보존 하 고 다음 디코딩 작업에서 후행 바이트를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-107">The <xref:System.Text.Decoder> also preserves trailing bytes at the end of data blocks and uses the trailing bytes in the next decoding operation.</span></span> <span data-ttu-id="98e27-108">따라서 <xref:System.Text.Encoding.GetDecoder%2A> 및 <xref:System.Text.Encoding.GetEncoder%2A> 는 전체 데이터 스트림 하는 대신 데이터 블록을 처리 하기 때문에 네트워크 전송 및 파일 작업에 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-108">Therefore, <xref:System.Text.Encoding.GetDecoder%2A> and <xref:System.Text.Encoding.GetEncoder%2A> are useful for network transmission and file operations because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="98e27-109">응용 프로그램 데이터의 스트림을 사용 하 여 완료 된 상태 정보를 설정 하 여 플러시 되도록 확인 해야는 `flush` 매개 변수를 `true` 적절 한 메서드 호출에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-109">When the application is done with a stream of data, it should make sure that the state information is flushed by setting the `flush` parameter to `true` in the appropriate method call.</span></span> <span data-ttu-id="98e27-110">예외가 발생 하거나 응용 프로그램 전환 스트림 하는 경우 호출 해야 <xref:System.Text.Decoder.Reset%2A> 의 내부 상태를 지우려면는 `Decoder` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-110">If an exception occurs or if the application switches streams, it should call <xref:System.Text.Decoder.Reset%2A> to clear the internal state of the `Decoder` object.</span></span>  
  
## <a name="version-considerations"></a><span data-ttu-id="98e27-111">버전 고려 사항</span><span class="sxs-lookup"><span data-stu-id="98e27-111">Version Considerations</span></span>  
 <span data-ttu-id="98e27-112">A <xref:System.Text.Decoder> 또는 <xref:System.Text.Encoder> 변환 작업을 하는 동안 개체를 serialize 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-112">A <xref:System.Text.Decoder> or <xref:System.Text.Encoder> object can be serialized during a conversion operation.</span></span> <span data-ttu-id="98e27-113">개체의 상태는 동일한 버전의.NET Framework에서 deserialize 되는 경우 보존 않으며 다른 버전에서 deserialize 되는 경우 손실입니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-113">The state of the object is retained if it is deserialized in the same version of the .NET Framework, but lost if it is deserialized in another version.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98e27-114">다음 예제에서는 <xref:System.Text.Decoder> 두 개의 서로 다른 바이트 배열을 문자 배열로 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-114">The following example demonstrates the use of a <xref:System.Text.Decoder> to convert two different byte arrays into a character array.</span></span> <span data-ttu-id="98e27-115">문자 바이트 중 하나는 배열로 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-115">One of the character's bytes spans the arrays.</span></span> <span data-ttu-id="98e27-116">이 비슷합니다는 <xref:System.IO.StreamReader> 개체가 스트림의 읽을 때 내부적으로 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-116">This is similar to what a <xref:System.IO.StreamReader> object does internally when reading a stream.</span></span>  
  
 [!code-cpp[Classic Decoder Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Decoder Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Decoder Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Decoder Example/CS/source.cs#1)]
 [!code-vb[Classic Decoder Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Decoder Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="98e27-117">
        <para>응용 프로그램을이 클래스에서 상속 하는 경우에 모든 멤버를 재정의 해야 합니다.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="98e27-117">
          <para>When your application inherits from this class, it must override all the members.</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.Text.Encoder" />
    <altmember cref="T:System.Text.Encoding" />
    <altmember cref="M:System.Text.Encoding.GetChars(System.Byte[],System.Int32,System.Int32)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Decoder ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Decoder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Decoder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="98e27-118">Initializes a new instance of the <see cref="T:System.Text.Decoder" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-118">Initializes a new instance of the <see cref="T:System.Text.Decoder" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98e27-119">이 클래스의 구현 인스턴스를 가져오려면 응용 프로그램을 사용할지는 <xref:System.Text.Encoding.GetDecoder%2A> 의 메서드는 <xref:System.Text.Encoding> 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-119">To obtain an instance of an implementation of this class, the application should use the <xref:System.Text.Encoding.GetDecoder%2A> method of a <xref:System.Text.Encoding> implementation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98e27-120">다음 예제에서는 새를 초기화 하기 위한 다음 두 가지 기술 <xref:System.Text.Decoder> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="98e27-120">The following example demonstrates two techniques for initializing a new <xref:System.Text.Decoder> instance.</span></span>  
  
 [!code-cpp[System.Text.Decoder.ctor Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Decoder.ctor Example/CPP/ctor.cpp#1)]
 [!code-csharp[System.Text.Decoder.ctor Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Decoder.ctor Example/CS/ctor.cs#1)]
 [!code-vb[System.Text.Decoder.ctor Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Decoder.ctor Example/VB/ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Convert">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="98e27-121">Converts an encoded byte sequence to a string or array of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-121">Converts an encoded byte sequence to a string or array of characters.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public virtual void Convert (ReadOnlySpan&lt;byte&gt; bytes, Span&lt;char&gt; chars, bool flush, out int bytesUsed, out int charsUsed, out bool completed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Convert(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes, valuetype System.Span`1&lt;char&gt; chars, bool flush, [out] int32&amp; bytesUsed, [out] int32&amp; charsUsed, [out] bool&amp; completed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Decoder.Convert(System.ReadOnlySpan{System.Byte},System.Span{System.Char},System.Boolean,System.Int32@,System.Int32@,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Convert (bytes As ReadOnlySpan(Of Byte), chars As Span(Of Char), flush As Boolean, ByRef bytesUsed As Integer, ByRef charsUsed As Integer, ByRef completed As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Convert(ReadOnlySpan&lt;System::Byte&gt; bytes, Span&lt;char&gt; chars, bool flush, [Runtime::InteropServices::Out] int % bytesUsed, [Runtime::InteropServices::Out] int % charsUsed, [Runtime::InteropServices::Out] bool % completed);" />
      <MemberSignature Language="F#" Value="abstract member Convert : ReadOnlySpan&lt;byte&gt; * Span&lt;char&gt; * bool *  *  *  -&gt; unit&#xA;override this.Convert : ReadOnlySpan&lt;byte&gt; * Span&lt;char&gt; * bool *  *  *  -&gt; unit" Usage="decoder.Convert (bytes, chars, flush, bytesUsed, charsUsed, completed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="chars" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="flush" Type="System.Boolean" />
        <Parameter Name="bytesUsed" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="charsUsed" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="completed" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <param name="chars">To be added.</param>
        <param name="flush">To be added.</param>
        <param name="bytesUsed">To be added.</param>
        <param name="charsUsed">To be added.</param>
        <param name="completed">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public virtual void Convert (byte* bytes, int byteCount, char* chars, int charCount, bool flush, out int bytesUsed, out int charsUsed, out bool completed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Convert(unsigned int8* bytes, int32 byteCount, char* chars, int32 charCount, bool flush, [out] int32&amp; bytesUsed, [out] int32&amp; charsUsed, [out] bool&amp; completed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Decoder.Convert(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Convert(System::Byte* bytes, int byteCount, char* chars, int charCount, bool flush, [Runtime::InteropServices::Out] int % bytesUsed, [Runtime::InteropServices::Out] int % charsUsed, [Runtime::InteropServices::Out] bool % completed);" />
      <MemberSignature Language="F#" Value="abstract member Convert : nativeptr&lt;byte&gt; * int * nativeptr&lt;char&gt; * int * bool *  *  *  -&gt; unit&#xA;override this.Convert : nativeptr&lt;byte&gt; * int * nativeptr&lt;char&gt; * int * bool *  *  *  -&gt; unit" Usage="decoder.Convert (bytes, byteCount, chars, charCount, flush, bytesUsed, charsUsed, completed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="flush" Type="System.Boolean" />
        <Parameter Name="bytesUsed" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="charsUsed" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="completed" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="98e27-122">The address of a buffer that contains the byte sequences to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-122">The address of a buffer that contains the byte sequences to convert.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="98e27-123">The number of bytes in <c>bytes</c> to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-123">The number of bytes in <c>bytes</c> to convert.</span>
          </span>
        </param>
        <param name="chars">
          <span data-ttu-id="98e27-124">The address of a buffer to store the converted characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-124">The address of a buffer to store the converted characters.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="98e27-125">The maximum number of characters in <c>chars</c> to use in the conversion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-125">The maximum number of characters in <c>chars</c> to use in the conversion.</span>
          </span>
        </param>
        <param name="flush">
          <span data-ttu-id="98e27-126">
            <see langword="true" /> to indicate no further data is to be converted; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-126">
              <see langword="true" /> to indicate no further data is to be converted; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="bytesUsed">
          <span data-ttu-id="98e27-127">When this method returns, contains the number of bytes that were produced by the conversion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-127">When this method returns, contains the number of bytes that were produced by the conversion.</span>
          </span>
          <span data-ttu-id="98e27-128">This parameter is passed uninitialized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-128">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <param name="charsUsed">
          <span data-ttu-id="98e27-129">When this method returns, contains the number of characters from <c>chars</c> that were used in the conversion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-129">When this method returns, contains the number of characters from <c>chars</c> that were used in the conversion.</span>
          </span>
          <span data-ttu-id="98e27-130">This parameter is passed uninitialized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-130">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <param name="completed">
          <span data-ttu-id="98e27-131">When this method returns, contains <see langword="true" /> if all the characters specified by <c>byteCount</c> were converted; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-131">When this method returns, contains <see langword="true" /> if all the characters specified by <c>byteCount</c> were converted; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="98e27-132">This parameter is passed uninitialized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-132">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98e27-133">Converts a buffer of encoded bytes to UTF-16 encoded characters and stores the result in another buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-133">Converts a buffer of encoded bytes to UTF-16 encoded characters and stores the result in another buffer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98e27-134">에 유의 해야는 <xref:System.Text.Decoder> 개체에 대 한 호출 간에 상태를 저장 <xref:System.Text.Decoder.Convert%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-134">Remember that the <xref:System.Text.Decoder> object saves state between calls to <xref:System.Text.Decoder.Convert%2A>.</span></span> <span data-ttu-id="98e27-135">설정 해야 응용 프로그램 데이터의 스트림을 사용 하 여 작업을 마치면는 `flush` 매개 변수를 `true` 상태 정보 플러시 되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-135">When the application is done with a stream of data, it should set the `flush` parameter to `true` to make sure that the state information is flushed.</span></span> <span data-ttu-id="98e27-136">이 설정을 통해 디코더는 데이터 블록의 끝에 잘못 된 바이트를 무시 하 고 내부 버퍼를 지웁니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-136">With this setting, the decoder ignores invalid bytes at the end of the data block and clears the internal buffer.</span></span> <span data-ttu-id="98e27-137">서로게이트 쌍의 high surrogate 등의 논리 단위에 속하는 모든 나머지 처리 된 데이터는 현재 대체 (fallback) 설정에 따라 변환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-137">Any remaining processed data that is part of a logical unit, such as the high surrogate of a surrogate pair, is converted according to the current fallback settings.</span></span>  
  
 <span data-ttu-id="98e27-138">`Convert` 메서드를 디코딩하는 임의 개수의 입력을 루프에서 사용 하도록 합니다. 예: 파일 또는 스트림에서 읽은 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-138">The `Convert` method is designed to be used in a loop to decode an arbitrary amount of input, such as data read from a file or stream.</span></span> <span data-ttu-id="98e27-139">디코딩 작업의 출력을 고정 크기 버퍼에 저장합니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-139">It stores the output of the decoding operation in a fixed-size buffer.</span></span> <span data-ttu-id="98e27-140"><xref:System.Text.Decoder.GetChars%2A> 출력 버퍼가 충분히 크지 않은 경우 예외를 throw 하지만 <xref:System.Text.Decoder.Convert%2A> 이 최대한 많은 공간을 채울 되 고 읽은 바이트와 쓰여진 문자를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-140"><xref:System.Text.Decoder.GetChars%2A> will throw an exception if the output buffer isn't large enough, but <xref:System.Text.Decoder.Convert%2A> will fill as much space as possible and return the bytes read and chars written.</span></span> <span data-ttu-id="98e27-141">또한 참조는 <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> 자세한 주석에 대 한 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-141">Also see the <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> topic for more comments.</span></span>  
  
 <span data-ttu-id="98e27-142">`completed` 출력 매개 변수는 입력된 버퍼의 모든 데이터를 변환 되어 출력 버퍼에 저장 하는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-142">The `completed` output parameter indicates whether all the data in the input buffer was converted and stored in the output buffer.</span></span> <span data-ttu-id="98e27-143">이 매개 변수 설정 `false` 변수로 지정 된 바이트 수는 `byteCount` 변수로 지정 된 문자 수를 초과 하지 않으면 매개 변수를 변환할 수 없습니다는 `charCount` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-143">This parameter is set to `false` if the number of bytes specified by the `byteCount` parameter cannot be converted without exceeding the number of characters specified by the `charCount` parameter.</span></span> <span data-ttu-id="98e27-144">이러한 상황에서는 응용 프로그램 해야 출력 버퍼의 내용을 사용 하거나 새 출력 버퍼를 제공 증가 `bytes` 에 지정 된 바이트 수로 매개 변수는 `bytesUsed` 매개 변수를 다음 호출에서 `Convert` 메서드를 다시 나머지 입력을 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-144">In that situation, the application should use the contents of the output buffer or provide a new output buffer, increment the `bytes` parameter by the number of bytes specified by the `bytesUsed` parameter, then call the `Convert` method again to process the remaining input.</span></span>  
  
 <span data-ttu-id="98e27-145">`completed` 매개 변수 설정할 수도 있습니다 `false`경우라도는 `bytesUsed` 및 `byteCount` 매개 변수가 같은지 합니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-145">The `completed` parameter can also be set to `false`, even though the `bytesUsed` and `byteCount` parameters are equal.</span></span> <span data-ttu-id="98e27-146">이러한 상황이 발생 하는 부분이의 데이터는 <xref:System.Text.Decoder> 에 저장 되지 않은 개체는 `bytes` 버퍼입니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-146">This situation occurs if there is still data in the <xref:System.Text.Decoder> object that has not been stored in the `bytes` buffer.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Text.Decoder.Convert(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="98e27-147">
            <paramref name="chars" /> or <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-147">
              <paramref name="chars" /> or <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="98e27-148">
            <paramref name="charCount" /> or <paramref name="byteCount" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-148">
              <paramref name="charCount" /> or <paramref name="byteCount" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="98e27-149">The output buffer is too small to contain any of the converted input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-149">The output buffer is too small to contain any of the converted input.</span>
          </span>
          <span data-ttu-id="98e27-150">The output buffer should be greater than or equal to the size indicated by the <see cref="Overload:System.Text.Decoder.GetCharCount" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-150">The output buffer should be greater than or equal to the size indicated by the <see cref="Overload:System.Text.Decoder.GetCharCount" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="98e27-151">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Decoder.Fallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-151">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Decoder.Fallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="98e27-152">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-152">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="98e27-153">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-153">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public virtual void Convert (byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex, int charCount, bool flush, out int bytesUsed, out int charsUsed, out bool completed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Convert(unsigned int8[] bytes, int32 byteIndex, int32 byteCount, char[] chars, int32 charIndex, int32 charCount, bool flush, [out] int32&amp; bytesUsed, [out] int32&amp; charsUsed, [out] bool&amp; completed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Decoder.Convert(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Convert (bytes As Byte(), byteIndex As Integer, byteCount As Integer, chars As Char(), charIndex As Integer, charCount As Integer, flush As Boolean, ByRef bytesUsed As Integer, ByRef charsUsed As Integer, ByRef completed As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Convert(cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex, int byteCount, cli::array &lt;char&gt; ^ chars, int charIndex, int charCount, bool flush, [Runtime::InteropServices::Out] int % bytesUsed, [Runtime::InteropServices::Out] int % charsUsed, [Runtime::InteropServices::Out] bool % completed);" />
      <MemberSignature Language="F#" Value="abstract member Convert : byte[] * int * int * char[] * int * int * bool *  *  *  -&gt; unit&#xA;override this.Convert : byte[] * int * int * char[] * int * int * bool *  *  *  -&gt; unit" Usage="decoder.Convert (bytes, byteIndex, byteCount, chars, charIndex, charCount, flush, bytesUsed, charsUsed, completed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="flush" Type="System.Boolean" />
        <Parameter Name="bytesUsed" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="charsUsed" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="completed" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="98e27-154">A byte array to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-154">A byte array to convert.</span>
          </span>
        </param>
        <param name="byteIndex">
          <span data-ttu-id="98e27-155">The first element of <c>bytes</c> to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-155">The first element of <c>bytes</c> to convert.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="98e27-156">The number of elements of <c>bytes</c> to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-156">The number of elements of <c>bytes</c> to convert.</span>
          </span>
        </param>
        <param name="chars">
          <span data-ttu-id="98e27-157">An array to store the converted characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-157">An array to store the converted characters.</span>
          </span>
        </param>
        <param name="charIndex">
          <span data-ttu-id="98e27-158">The first element of <c>chars</c> in which data is stored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-158">The first element of <c>chars</c> in which data is stored.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="98e27-159">The maximum number of elements of <c>chars</c> to use in the conversion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-159">The maximum number of elements of <c>chars</c> to use in the conversion.</span>
          </span>
        </param>
        <param name="flush">
          <span data-ttu-id="98e27-160">
            <see langword="true" /> to indicate that no further data is to be converted; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-160">
              <see langword="true" /> to indicate that no further data is to be converted; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="bytesUsed">
          <span data-ttu-id="98e27-161">When this method returns, contains the number of bytes that were used in the conversion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-161">When this method returns, contains the number of bytes that were used in the conversion.</span>
          </span>
          <span data-ttu-id="98e27-162">This parameter is passed uninitialized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-162">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <param name="charsUsed">
          <span data-ttu-id="98e27-163">When this method returns, contains the number of characters from <c>chars</c> that were produced by the conversion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-163">When this method returns, contains the number of characters from <c>chars</c> that were produced by the conversion.</span>
          </span>
          <span data-ttu-id="98e27-164">This parameter is passed uninitialized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-164">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <param name="completed">
          <span data-ttu-id="98e27-165">When this method returns, contains <see langword="true" /> if all the characters specified by <c>byteCount</c> were converted; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-165">When this method returns, contains <see langword="true" /> if all the characters specified by <c>byteCount</c> were converted; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="98e27-166">This parameter is passed uninitialized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-166">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98e27-167">Converts an array of encoded bytes to UTF-16 encoded characters and stores the result in a character array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-167">Converts an array of encoded bytes to UTF-16 encoded characters and stores the result in a character array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98e27-168">에 유의 해야는 <xref:System.Text.Decoder> 개체에 대 한 호출 간에 상태를 저장 <xref:System.Text.Decoder.Convert%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-168">Remember that the <xref:System.Text.Decoder> object saves state between calls to <xref:System.Text.Decoder.Convert%2A>.</span></span> <span data-ttu-id="98e27-169">설정 해야 응용 프로그램 데이터의 스트림을 사용 하 여 작업을 마치면는 `flush` 매개 변수를 `true` 상태 정보 플러시 되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-169">When the application is done with a stream of data, it should set the `flush` parameter to `true` to make sure that the state information is flushed.</span></span> <span data-ttu-id="98e27-170">이 설정을 통해 디코더는 데이터 블록의 끝에 잘못 된 바이트를 무시 하 고 내부 버퍼를 지웁니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-170">With this setting, the decoder ignores invalid bytes at the end of the data block and clears the internal buffer.</span></span> <span data-ttu-id="98e27-171">서로게이트 쌍의 high surrogate 등의 논리 단위에 속하는 모든 나머지 처리 된 데이터는 현재 대체 (fallback) 설정에 따라 변환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-171">Any remaining processed data that is part of a logical unit, such as the high surrogate of a surrogate pair, is converted according to the current fallback settings.</span></span>  
  
 <span data-ttu-id="98e27-172">`Convert` 메서드를 디코딩하는 임의 개수의 입력을 루프에서 사용 하도록 합니다. 예: 파일 또는 스트림에서 읽은 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-172">The `Convert` method is designed to be used in a loop to decode an arbitrary amount of input, such as data read from a file or stream.</span></span> <span data-ttu-id="98e27-173">디코딩 작업의 출력을 고정 크기 버퍼에 저장합니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-173">It stores the output of the decoding operation in a fixed-size buffer.</span></span> <span data-ttu-id="98e27-174"><xref:System.Text.Decoder.GetChars%2A> 출력 버퍼가 충분히 크지 않은 경우 예외를 throw 하지만 <xref:System.Text.Decoder.Convert%2A> 이 최대한 많은 공간을 채울 되 고 읽은 바이트와 쓰여진 문자를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-174"><xref:System.Text.Decoder.GetChars%2A> will throw an exception if the output buffer isn't large enough, but <xref:System.Text.Decoder.Convert%2A> will fill as much space as possible and return the bytes read and chars written.</span></span> <span data-ttu-id="98e27-175">또한 참조는 <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> 자세한 주석에 대 한 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-175">Also see the <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> topic for more comments.</span></span>  
  
 <span data-ttu-id="98e27-176">`completed` 출력 매개 변수는 입력된 버퍼의 모든 데이터를 변환 되어 출력 버퍼에 저장 하는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-176">The `completed` output parameter indicates whether all the data in the input buffer was converted and stored in the output buffer.</span></span> <span data-ttu-id="98e27-177">이 매개 변수 설정 `false` 변수로 지정 된 바이트 수는 `byteCount` 변수로 지정 된 문자 수를 초과 하지 않으면 매개 변수를 변환할 수 없습니다는 `charCount` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-177">This parameter is set to `false` if the number of bytes specified by the `byteCount` parameter cannot be converted without exceeding the number of characters specified by the `charCount` parameter.</span></span> <span data-ttu-id="98e27-178">이러한 상황에서는 응용 프로그램 해야 출력 버퍼의 내용을 사용 하거나 새 출력 버퍼를 제공 증가 `bytes` 에 지정 된 바이트 수로 매개 변수는 `bytesUsed` 매개 변수를 다음 호출에서 `Convert` 메서드를 다시 나머지 입력을 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-178">In that situation, the application should use the contents of the output buffer or provide a new output buffer, increment the `bytes` parameter by the number of bytes specified by the `bytesUsed` parameter, then call the `Convert` method again to process the remaining input.</span></span>  
  
 <span data-ttu-id="98e27-179">`completed` 매개 변수 설정할 수도 있습니다 `false`경우라도는 `bytesUsed` 및 `byteCount` 매개 변수가 같은지 합니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-179">The `completed` parameter can also be set to `false`, even though the `bytesUsed` and `byteCount` parameters are equal.</span></span> <span data-ttu-id="98e27-180">이러한 상황이 발생 하는 부분이의 데이터는 <xref:System.Text.Decoder> 에 저장 되지 않은 개체는 `bytes` 버퍼입니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-180">This situation occurs if there is still data in the <xref:System.Text.Decoder> object that has not been stored in the `bytes` buffer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98e27-181">다음 코드 예제에서는 <xref:System.Text.Encoder.Convert%2A> u t F-16 자의 파일을 u t F-8로 변환 하는 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-181">The following code example uses the <xref:System.Text.Encoder.Convert%2A> method to convert a file of UTF-16 characters to UTF-8.</span></span> <span data-ttu-id="98e27-182">다음 사용 하 여는 <xref:System.Text.Decoder.Convert%2A> u t F-16 자로 다시 utf-8 문자를 변환 하는 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-182">It then uses the <xref:System.Text.Decoder.Convert%2A> method to convert the UTF-8 characters back to UTF-16 characters.</span></span>  
  
 [!code-csharp[sys.txt.EncoderDecoder.convert#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.txt.EncoderDecoder.convert/cs/edCvt.cs#1)]
 [!code-vb[sys.txt.EncoderDecoder.convert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.txt.EncoderDecoder.convert/vb/edCvt.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="98e27-183">
            <paramref name="chars" /> or <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-183">
              <paramref name="chars" /> or <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="98e27-184">
            <paramref name="charIndex" />, <paramref name="charCount" />, <paramref name="byteIndex" />, or <paramref name="byteCount" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-184">
              <paramref name="charIndex" />, <paramref name="charCount" />, <paramref name="byteIndex" />, or <paramref name="byteCount" /> is less than zero.</span>
          </span>
          <span data-ttu-id="98e27-185">-or-  The length of <paramref name="chars" /> - <paramref name="charIndex" /> is less than <paramref name="charCount" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-185">-or-  The length of <paramref name="chars" /> - <paramref name="charIndex" /> is less than <paramref name="charCount" />.</span>
          </span>
          <span data-ttu-id="98e27-186">-or-  The length of <paramref name="bytes" /> - <paramref name="byteIndex" /> is less than <paramref name="byteCount" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-186">-or-  The length of <paramref name="bytes" /> - <paramref name="byteIndex" /> is less than <paramref name="byteCount" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="98e27-187">The output buffer is too small to contain any of the converted input.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-187">The output buffer is too small to contain any of the converted input.</span>
          </span>
          <span data-ttu-id="98e27-188">The output buffer should be greater than or equal to the size indicated by the <see cref="Overload:System.Text.Decoder.GetCharCount" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-188">The output buffer should be greater than or equal to the size indicated by the <see cref="Overload:System.Text.Decoder.GetCharCount" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="98e27-189">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Decoder.Fallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-189">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Decoder.Fallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public System.Text.DecoderFallback Fallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.DecoderFallback Fallback" />
      <MemberSignature Language="DocId" Value="P:System.Text.Decoder.Fallback" />
      <MemberSignature Language="VB.NET" Value="Public Property Fallback As DecoderFallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::DecoderFallback ^ Fallback { System::Text::DecoderFallback ^ get(); void set(System::Text::DecoderFallback ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Fallback : System.Text.DecoderFallback with get, set" Usage="System.Text.Decoder.Fallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.DecoderFallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="98e27-190">Gets or sets a <see cref="T:System.Text.DecoderFallback" /> object for the current <see cref="T:System.Text.Decoder" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-190">Gets or sets a <see cref="T:System.Text.DecoderFallback" /> object for the current <see cref="T:System.Text.Decoder" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="98e27-191">
            <see cref="T:System.Text.DecoderFallback" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-191">A <see cref="T:System.Text.DecoderFallback" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98e27-192"><xref:System.Text.DecoderFallback> 개체 인코딩된 바이트 시퀀스를 문자로 변환할 수 없을 때 호출 되는 오류 처리기를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-192">The <xref:System.Text.DecoderFallback> object represents an error handler that is invoked when an encoded byte sequence cannot be converted to a character.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="98e27-193">The value in a set operation is <see langword="null" /> (<see langword="Nothing" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-193">The value in a set operation is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="98e27-194">A new value cannot be assigned in a set operation because the current <see cref="T:System.Text.DecoderFallbackBuffer" /> object contains data that has not been decoded yet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-194">A new value cannot be assigned in a set operation because the current <see cref="T:System.Text.DecoderFallbackBuffer" /> object contains data that has not been decoded yet.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.EncoderFallback" />
        <altmember cref="P:System.Text.Encoder.FallbackBuffer" />
      </Docs>
    </Member>
    <Member MemberName="FallbackBuffer">
      <MemberSignature Language="C#" Value="public System.Text.DecoderFallbackBuffer FallbackBuffer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.DecoderFallbackBuffer FallbackBuffer" />
      <MemberSignature Language="DocId" Value="P:System.Text.Decoder.FallbackBuffer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FallbackBuffer As DecoderFallbackBuffer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::DecoderFallbackBuffer ^ FallbackBuffer { System::Text::DecoderFallbackBuffer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FallbackBuffer : System.Text.DecoderFallbackBuffer" Usage="System.Text.Decoder.FallbackBuffer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.DecoderFallbackBuffer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="98e27-195">Gets the <see cref="T:System.Text.DecoderFallbackBuffer" /> object associated with the current <see cref="T:System.Text.Decoder" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-195">Gets the <see cref="T:System.Text.DecoderFallbackBuffer" /> object associated with the current <see cref="T:System.Text.Decoder" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="98e27-196">
            <see cref="T:System.Text.DecoderFallbackBuffer" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-196">A <see cref="T:System.Text.DecoderFallbackBuffer" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98e27-197"><xref:System.Text.DecoderFallbackBuffer> 개체에서 사용 되는 데이터를 나타내는 <xref:System.Text.DecoderFallback> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-197">The <xref:System.Text.DecoderFallbackBuffer> object represents data used by the <xref:System.Text.DecoderFallback> object.</span></span> <span data-ttu-id="98e27-198"><xref:System.Text.DecoderFallback> 개체 인코딩된 바이트 시퀀스를 문자로 변환할 수 없을 때 호출 되는 오류 처리기를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-198">The <xref:System.Text.DecoderFallback> object represents an error handler that is invoked when an encoded byte sequence cannot be converted to a character.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.EncoderFallback" />
        <altmember cref="P:System.Text.Encoder.Fallback" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCharCount">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="98e27-199">When overridden in a derived class, calculates the number of characters produced by decoding a sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-199">When overridden in a derived class, calculates the number of characters produced by decoding a sequence of bytes.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public virtual int GetCharCount (ReadOnlySpan&lt;byte&gt; bytes, bool flush);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCharCount(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes, bool flush) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Decoder.GetCharCount(System.ReadOnlySpan{System.Byte},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCharCount (bytes As ReadOnlySpan(Of Byte), flush As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetCharCount(ReadOnlySpan&lt;System::Byte&gt; bytes, bool flush);" />
      <MemberSignature Language="F#" Value="abstract member GetCharCount : ReadOnlySpan&lt;byte&gt; * bool -&gt; int&#xA;override this.GetCharCount : ReadOnlySpan&lt;byte&gt; * bool -&gt; int" Usage="decoder.GetCharCount (bytes, flush)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="flush" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <param name="flush">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public virtual int GetCharCount (byte* bytes, int count, bool flush);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCharCount(unsigned int8* bytes, int32 count, bool flush) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Decoder.GetCharCount(System.Byte*,System.Int32,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetCharCount(System::Byte* bytes, int count, bool flush);" />
      <MemberSignature Language="F#" Value="abstract member GetCharCount : nativeptr&lt;byte&gt; * int * bool -&gt; int&#xA;override this.GetCharCount : nativeptr&lt;byte&gt; * int * bool -&gt; int" Usage="decoder.GetCharCount (bytes, count, flush)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="flush" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="98e27-200">A pointer to the first byte to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-200">A pointer to the first byte to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="98e27-201">The number of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-201">The number of bytes to decode.</span>
          </span>
        </param>
        <param name="flush">
          <span data-ttu-id="98e27-202">
            <see langword="true" /> to simulate clearing the internal state of the encoder after the calculation; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-202">
              <see langword="true" /> to simulate clearing the internal state of the encoder after the calculation; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98e27-203">When overridden in a derived class, calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-203">When overridden in a derived class, calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.</span>
          </span>
          <span data-ttu-id="98e27-204">A parameter indicates whether to clear the internal state of the decoder after the calculation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-204">A parameter indicates whether to clear the internal state of the decoder after the calculation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98e27-205">The number of characters produced by decoding the specified sequence of bytes and any bytes in the internal buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-205">The number of characters produced by decoding the specified sequence of bytes and any bytes in the internal buffer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98e27-206">이 메서드 된 디코더 상태에 영향을 주지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-206">This method does not affect the state of the decoder.</span></span>  
  
 <span data-ttu-id="98e27-207">정확한 배열 크기를 계산 하려면 <xref:System.Text.Decoder.GetChars%2A> 필요한 결과 문자를 저장 하기 위해 응용 프로그램 사용 해야 <xref:System.Text.Decoder.GetCharCount%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-207">To calculate the exact array size that <xref:System.Text.Decoder.GetChars%2A> requires to store the resulting characters, the application should use <xref:System.Text.Decoder.GetCharCount%2A>.</span></span>  
  
 <span data-ttu-id="98e27-208">경우 `GetChars` 사용 하 여 호출 `flush` 로 설정 `false`, 디코더를 내부 버퍼에 데이터 블록의 끝에 후행 바이트를 저장 하 고 다음 디코딩 작업에 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-208">If `GetChars` is called with `flush` set to `false`, the decoder stores trailing bytes at the end of the data block in an internal buffer and uses them in the next decoding operation.</span></span> <span data-ttu-id="98e27-209">응용 프로그램 호출 해야 `GetCharCount` 호출 하기 전에 즉시 데이터 블록에 `GetChars` 동일한 블록에는 이전 블록의 모든 후행 바이트 계산에 포함 되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-209">The application should call `GetCharCount` on a block of data immediately before calling `GetChars` on the same block, so that any trailing bytes from the previous block are included in the calculation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="98e27-210">
            <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" /> in Visual Basic .NET).</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-210">
              <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" /> in Visual Basic .NET).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="98e27-211">
            <paramref name="count" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-211">
              <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="98e27-212">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Decoder.Fallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-212">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Decoder.Fallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="98e27-213">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-213">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="98e27-214">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-214">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Text.Decoder.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean)" />
        <altmember cref="M:System.Text.Decoder.Reset" />
      </Docs>
    </Member>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public abstract int GetCharCount (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCharCount(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetCharCount (bytes As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetCharCount(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member GetCharCount : byte[] * int * int -&gt; int" Usage="decoder.GetCharCount (bytes, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="98e27-215">The byte array containing the sequence of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-215">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="98e27-216">The index of the first byte to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-216">The index of the first byte to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="98e27-217">The number of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-217">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98e27-218">When overridden in a derived class, calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-218">When overridden in a derived class, calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98e27-219">The number of characters produced by decoding the specified sequence of bytes and any bytes in the internal buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-219">The number of characters produced by decoding the specified sequence of bytes and any bytes in the internal buffer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98e27-220">이 메서드 된 디코더 상태에 영향을 주지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-220">This method does not affect the state of the decoder.</span></span>  
  
 <span data-ttu-id="98e27-221">정확한 배열 크기를 계산 하려면 <xref:System.Text.Decoder.GetChars%2A> 필요한 결과 문자를 저장 하기 위해 응용 프로그램 사용 해야 <xref:System.Text.Decoder.GetCharCount%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-221">To calculate the exact array size that <xref:System.Text.Decoder.GetChars%2A> requires to store the resulting characters, the application should use <xref:System.Text.Decoder.GetCharCount%2A>.</span></span>  
  
 <span data-ttu-id="98e27-222">경우 `GetChars` 사용 하 여 호출 `flush` 로 설정 `false`, 디코더를 내부 버퍼에 데이터 블록의 끝에 후행 바이트를 저장 하 고 다음 디코딩 작업에 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-222">If `GetChars` is called with `flush` set to `false`, the decoder stores trailing bytes at the end of the data block in an internal buffer and uses them in the next decoding operation.</span></span> <span data-ttu-id="98e27-223">응용 프로그램 호출 해야 `GetCharCount` 호출 하기 전에 즉시 데이터 블록에 `GetChars` 동일한 블록에는 이전 블록의 모든 후행 바이트 계산에 포함 되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-223">The application should call `GetCharCount` on a block of data immediately before calling `GetChars` on the same block, so that any trailing bytes from the previous block are included in the calculation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98e27-224">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Text.Decoder.GetCharCount%2A> 메서드를 지정된 된 배열의 바이트 범위를 디코딩하는 데 필요한 문자 수를 계산 합니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-224">The following code example demonstrates how to use the <xref:System.Text.Decoder.GetCharCount%2A> method to calculate the number of characters required to decode the specified range of bytes in the array.</span></span>  
  
 [!code-cpp[System.Text.Decoder.GetCharCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Decoder.GetCharCount Example/CPP/getcharcount-byte[]-int32-int32.cpp#1)]
 [!code-csharp[System.Text.Decoder.GetCharCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Decoder.GetCharCount Example/CS/getcharcount-byte[]-int32-int32.cs#1)]
 [!code-vb[System.Text.Decoder.GetCharCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Decoder.GetCharCount Example/VB/getcharcount-byte[]-int32-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="98e27-225">
            <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-225">
              <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="98e27-226">
            <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-226">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="98e27-227">-or-  <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-227">-or-  <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="98e27-228">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Decoder.Fallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-228">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Decoder.Fallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.Decoder.Reset" />
      </Docs>
    </Member>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public virtual int GetCharCount (byte[] bytes, int index, int count, bool flush);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCharCount(unsigned int8[] bytes, int32 index, int32 count, bool flush) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCharCount (bytes As Byte(), index As Integer, count As Integer, flush As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetCharCount(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count, bool flush);" />
      <MemberSignature Language="F#" Value="abstract member GetCharCount : byte[] * int * int * bool -&gt; int&#xA;override this.GetCharCount : byte[] * int * int * bool -&gt; int" Usage="decoder.GetCharCount (bytes, index, count, flush)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="flush" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="98e27-229">The byte array containing the sequence of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-229">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="98e27-230">The index of the first byte to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-230">The index of the first byte to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="98e27-231">The number of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-231">The number of bytes to decode.</span>
          </span>
        </param>
        <param name="flush">
          <span data-ttu-id="98e27-232">
            <see langword="true" /> to simulate clearing the internal state of the encoder after the calculation; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-232">
              <see langword="true" /> to simulate clearing the internal state of the encoder after the calculation; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98e27-233">When overridden in a derived class, calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-233">When overridden in a derived class, calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</span>
          </span>
          <span data-ttu-id="98e27-234">A parameter indicates whether to clear the internal state of the decoder after the calculation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-234">A parameter indicates whether to clear the internal state of the decoder after the calculation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98e27-235">The number of characters produced by decoding the specified sequence of bytes and any bytes in the internal buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-235">The number of characters produced by decoding the specified sequence of bytes and any bytes in the internal buffer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98e27-236">이 메서드 된 디코더 상태에 영향을 주지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-236">This method does not affect the state of the decoder.</span></span>  
  
 <span data-ttu-id="98e27-237">정확한 배열 크기를 계산 하려면 <xref:System.Text.Decoder.GetChars%2A> 필요한 결과 문자를 저장 하기 위해 응용 프로그램 사용 해야 <xref:System.Text.Decoder.GetCharCount%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-237">To calculate the exact array size that <xref:System.Text.Decoder.GetChars%2A> requires to store the resulting characters, the application should use <xref:System.Text.Decoder.GetCharCount%2A>.</span></span>  
  
 <span data-ttu-id="98e27-238">경우 `GetChars` 사용 하 여 호출 `flush` 로 설정 `false`, 디코더를 내부 버퍼에 데이터 블록의 끝에 후행 바이트를 저장 하 고 다음 디코딩 작업에 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-238">If `GetChars` is called with `flush` set to `false`, the decoder stores trailing bytes at the end of the data block in an internal buffer and uses them in the next decoding operation.</span></span> <span data-ttu-id="98e27-239">응용 프로그램 호출 해야 `GetCharCount` 호출 하기 전에 즉시 데이터 블록에 `GetChars` 동일한 블록에는 이전 블록의 모든 후행 바이트 계산에 포함 되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-239">The application should call `GetCharCount` on a block of data immediately before calling `GetChars` on the same block, so that any trailing bytes from the previous block are included in the calculation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="98e27-240">
            <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-240">
              <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="98e27-241">
            <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-241">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="98e27-242">-or-  <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-242">-or-  <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="98e27-243">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Decoder.Fallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-243">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Decoder.Fallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Boolean)" />
        <altmember cref="M:System.Text.Decoder.Reset" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChars">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="98e27-244">When overridden in a derived class, decodes a sequence of bytes into a set of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-244">When overridden in a derived class, decodes a sequence of bytes into a set of characters.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public virtual int GetChars (ReadOnlySpan&lt;byte&gt; bytes, Span&lt;char&gt; chars, bool flush);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetChars(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes, valuetype System.Span`1&lt;char&gt; chars, bool flush) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Decoder.GetChars(System.ReadOnlySpan{System.Byte},System.Span{System.Char},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChars (bytes As ReadOnlySpan(Of Byte), chars As Span(Of Char), flush As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetChars(ReadOnlySpan&lt;System::Byte&gt; bytes, Span&lt;char&gt; chars, bool flush);" />
      <MemberSignature Language="F#" Value="abstract member GetChars : ReadOnlySpan&lt;byte&gt; * Span&lt;char&gt; * bool -&gt; int&#xA;override this.GetChars : ReadOnlySpan&lt;byte&gt; * Span&lt;char&gt; * bool -&gt; int" Usage="decoder.GetChars (bytes, chars, flush)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="chars" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="flush" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <param name="chars">To be added.</param>
        <param name="flush">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public virtual int GetChars (byte* bytes, int byteCount, char* chars, int charCount, bool flush);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetChars(unsigned int8* bytes, int32 byteCount, char* chars, int32 charCount, bool flush) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Decoder.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetChars(System::Byte* bytes, int byteCount, char* chars, int charCount, bool flush);" />
      <MemberSignature Language="F#" Value="abstract member GetChars : nativeptr&lt;byte&gt; * int * nativeptr&lt;char&gt; * int * bool -&gt; int&#xA;override this.GetChars : nativeptr&lt;byte&gt; * int * nativeptr&lt;char&gt; * int * bool -&gt; int" Usage="decoder.GetChars (bytes, byteCount, chars, charCount, flush)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="flush" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="98e27-245">A pointer to the first byte to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-245">A pointer to the first byte to decode.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="98e27-246">The number of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-246">The number of bytes to decode.</span>
          </span>
        </param>
        <param name="chars">
          <span data-ttu-id="98e27-247">A pointer to the location at which to start writing the resulting set of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-247">A pointer to the location at which to start writing the resulting set of characters.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="98e27-248">The maximum number of characters to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-248">The maximum number of characters to write.</span>
          </span>
        </param>
        <param name="flush">
          <span data-ttu-id="98e27-249">
            <see langword="true" /> to clear the internal state of the decoder after the conversion; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-249">
              <see langword="true" /> to clear the internal state of the decoder after the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98e27-250">When overridden in a derived class, decodes a sequence of bytes starting at the specified byte pointer and any bytes in the internal buffer into a set of characters that are stored starting at the specified character pointer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-250">When overridden in a derived class, decodes a sequence of bytes starting at the specified byte pointer and any bytes in the internal buffer into a set of characters that are stored starting at the specified character pointer.</span>
          </span>
          <span data-ttu-id="98e27-251">A parameter indicates whether to clear the internal state of the decoder after the conversion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-251">A parameter indicates whether to clear the internal state of the decoder after the conversion.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98e27-252">The actual number of characters written at the location indicated by the <paramref name="chars" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-252">The actual number of characters written at the location indicated by the <paramref name="chars" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98e27-253">에 유의 해야는 <xref:System.Text.Decoder> 개체에 대 한 호출 간에 상태를 저장 <xref:System.Text.Decoder.GetChars%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-253">Remember that the <xref:System.Text.Decoder> object saves state between calls to <xref:System.Text.Decoder.GetChars%2A>.</span></span> <span data-ttu-id="98e27-254">설정 해야 응용 프로그램 데이터의 스트림을 사용 하 여 작업을 마치면는 `flush` 매개 변수를 `true` 상태 정보 플러시 되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-254">When the application is done with a stream of data, it should set the `flush` parameter to `true` to make sure that the state information is flushed.</span></span> <span data-ttu-id="98e27-255">이 설정을 통해 디코더는 데이터 블록의 끝에 잘못 된 바이트를 무시 하 고 내부 버퍼를 지웁니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-255">With this setting, the decoder ignores invalid bytes at the end of the data block and clears the internal buffer.</span></span>  
  
 <span data-ttu-id="98e27-256">정확한 버퍼 크기를 계산 하려면 `GetChars` 필요한 결과 문자를 저장 하기 위해 응용 프로그램 사용 해야 <xref:System.Text.Decoder.GetCharCount%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-256">To calculate the exact buffer size that `GetChars` requires to store the resulting characters, the application should use <xref:System.Text.Decoder.GetCharCount%2A>.</span></span>  
  
 <span data-ttu-id="98e27-257">경우 `GetChars` 사용 하 여 호출 `flush` 로 설정 `false`, 디코더를 내부 버퍼에 데이터 블록의 끝에 후행 바이트를 저장 하 고 다음 디코딩 작업에 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-257">If `GetChars` is called with `flush` set to `false`, the decoder stores trailing bytes at the end of the data block in an internal buffer and uses them in the next decoding operation.</span></span> <span data-ttu-id="98e27-258">응용 프로그램 호출 해야 `GetCharCount` 호출 하기 전에 즉시 데이터 블록에 `GetChars` 동일한 블록에는 이전 블록의 모든 후행 바이트 계산에 포함 되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-258">The application should call `GetCharCount` on a block of data immediately before calling `GetChars` on the same block, so that any trailing bytes from the previous block are included in the calculation.</span></span>  
  
 <span data-ttu-id="98e27-259">응용 프로그램 입력 스트림의 많은 세그먼트가 변환할 경우에 사용 하 여 여는 <xref:System.Text.Decoder.Convert%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="98e27-259">If your application is to convert many segments of an input stream, consider using the <xref:System.Text.Decoder.Convert%2A> method.</span></span> <span data-ttu-id="98e27-260"><xref:System.Text.Decoder.GetChars%2A> 출력 버퍼가 충분히 크지 않은 경우 예외를 throw 하지만 <xref:System.Text.Decoder.Convert%2A> 이 최대한 많은 공간을 채울 되 고 읽은 바이트와 쓰여진 문자를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-260"><xref:System.Text.Decoder.GetChars%2A> will throw an exception if the output buffer isn't large enough, but <xref:System.Text.Decoder.Convert%2A> will fill as much space as possible and return the bytes read and chars written.</span></span> <span data-ttu-id="98e27-261">또한 참조는 <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> 자세한 주석에 대 한 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-261">Also see the <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> topic for more comments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="98e27-262">
            <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-262">
              <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
          <span data-ttu-id="98e27-263">-or-  <paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-263">-or-  <paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="98e27-264">
            <paramref name="byteCount" /> or <paramref name="charCount" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-264">
              <paramref name="byteCount" /> or <paramref name="charCount" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="98e27-265">
            <paramref name="charCount" /> is less than the resulting number of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-265">
              <paramref name="charCount" /> is less than the resulting number of characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="98e27-266">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Decoder.Fallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-266">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Decoder.Fallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="98e27-267">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-267">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="98e27-268">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-268">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Text.Decoder.GetCharCount(System.Byte*,System.Int32,System.Boolean)" />
        <altmember cref="M:System.Text.Decoder.Reset" />
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public abstract int GetChars (byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetChars(unsigned int8[] bytes, int32 byteIndex, int32 byteCount, char[] chars, int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetChars (bytes As Byte(), byteIndex As Integer, byteCount As Integer, chars As Char(), charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetChars(cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex, int byteCount, cli::array &lt;char&gt; ^ chars, int charIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetChars : byte[] * int * int * char[] * int -&gt; int" Usage="decoder.GetChars (bytes, byteIndex, byteCount, chars, charIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="98e27-269">The byte array containing the sequence of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-269">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <param name="byteIndex">
          <span data-ttu-id="98e27-270">The index of the first byte to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-270">The index of the first byte to decode.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="98e27-271">The number of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-271">The number of bytes to decode.</span>
          </span>
        </param>
        <param name="chars">
          <span data-ttu-id="98e27-272">The character array to contain the resulting set of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-272">The character array to contain the resulting set of characters.</span>
          </span>
        </param>
        <param name="charIndex">
          <span data-ttu-id="98e27-273">The index at which to start writing the resulting set of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-273">The index at which to start writing the resulting set of characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98e27-274">When overridden in a derived class, decodes a sequence of bytes from the specified byte array and any bytes in the internal buffer into the specified character array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-274">When overridden in a derived class, decodes a sequence of bytes from the specified byte array and any bytes in the internal buffer into the specified character array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98e27-275">The actual number of characters written into <paramref name="chars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-275">The actual number of characters written into <paramref name="chars" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98e27-276">에 유의 해야는 <xref:System.Text.Decoder> 개체에 대 한 호출 간에 상태를 저장 <xref:System.Text.Decoder.GetChars%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-276">Remember that the <xref:System.Text.Decoder> object saves state between calls to <xref:System.Text.Decoder.GetChars%2A>.</span></span> <span data-ttu-id="98e27-277">설정 해야 응용 프로그램 데이터의 스트림을 사용 하 여 작업을 마치면는 `flush` 매개 변수를 `true` 상태 정보 플러시 되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-277">When the application is done with a stream of data, it should set the `flush` parameter to `true` to make sure that the state information is flushed.</span></span> <span data-ttu-id="98e27-278">이 설정을 통해 디코더는 데이터 블록의 끝에 잘못 된 바이트를 무시 하 고 내부 버퍼를 지웁니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-278">With this setting, the decoder ignores invalid bytes at the end of the data block and clears the internal buffer.</span></span>  
  
 <span data-ttu-id="98e27-279">정확한 배열 크기를 계산 하려면 `GetChars` 필요한 결과 문자를 저장 하기 위해 응용 프로그램 사용 해야 <xref:System.Text.Decoder.GetCharCount%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-279">To calculate the exact array size that `GetChars` requires to store the resulting characters, the application should use <xref:System.Text.Decoder.GetCharCount%2A>.</span></span>  
  
 <span data-ttu-id="98e27-280">경우 `GetChars` 사용 하 여 호출 `flush` 로 설정 `false`, 디코더를 내부 버퍼에 데이터 블록의 끝에 후행 바이트를 저장 하 고 다음 디코딩 작업에 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-280">If `GetChars` is called with `flush` set to `false`, the decoder stores trailing bytes at the end of the data block in an internal buffer and uses them in the next decoding operation.</span></span> <span data-ttu-id="98e27-281">응용 프로그램 호출 해야 `GetCharCount` 호출 하기 전에 즉시 데이터 블록에 `GetChars` 동일한 블록에는 이전 블록의 모든 후행 바이트 계산에 포함 되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-281">The application should call `GetCharCount` on a block of data immediately before calling `GetChars` on the same block, so that any trailing bytes from the previous block are included in the calculation.</span></span>  
  
 <span data-ttu-id="98e27-282">응용 프로그램 입력 스트림의 많은 세그먼트가 변환할 경우에 사용 하 여 여는 <xref:System.Text.Decoder.Convert%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="98e27-282">If your application is to convert many segments of an input stream, consider using the <xref:System.Text.Decoder.Convert%2A> method.</span></span> <span data-ttu-id="98e27-283"><xref:System.Text.Decoder.GetChars%2A> 출력 버퍼가 충분히 크지 않은 경우 예외를 throw 하지만 <xref:System.Text.Decoder.Convert%2A> 이 최대한 많은 공간을 채울 되 고 읽은 바이트와 쓰여진 문자를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-283"><xref:System.Text.Decoder.GetChars%2A> will throw an exception if the output buffer isn't large enough, but <xref:System.Text.Decoder.Convert%2A> will fill as much space as possible and return the bytes read and chars written.</span></span> <span data-ttu-id="98e27-284">또한 참조는 <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> 자세한 주석에 대 한 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-284">Also see the <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> topic for more comments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98e27-285">다음 예제에서는 디코딩할 바이트 배열에서 요소의 범위를 유니코드 문자 배열에 저장 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-285">The following example demonstrates how to decode a range of elements from a byte array and store them in a Unicode character array.</span></span> <span data-ttu-id="98e27-286"><xref:System.Text.Decoder.GetCharCount%2A> 메서드는 배열에서 디코딩된 요소를 저장 하는 데 필요한 문자 수를 계산에 사용 `bytes`합니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-286">The <xref:System.Text.Decoder.GetCharCount%2A> method is used to calculate the number of characters needed to store the decoded elements in the array `bytes`.</span></span> <span data-ttu-id="98e27-287"><xref:System.Text.Decoder.GetChars%2A> 메서드는 바이트 배열에 지정된 된 요소를 디코딩하고 새 문자 배열에 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-287">The <xref:System.Text.Decoder.GetChars%2A> method decodes the specified elements in the byte array and stores them in the new character array.</span></span>  
  
 [!code-cpp[System.Text.Decoder.GetChars Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Decoder.GetChars Example/CPP/getchars-byte[]-int32-int32-char[]-int32.cpp#1)]
 [!code-csharp[System.Text.Decoder.GetChars Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Decoder.GetChars Example/CS/getchars-byte[]-int32-int32-char[]-int32.cs#1)]
 [!code-vb[System.Text.Decoder.GetChars Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Decoder.GetChars Example/VB/getchars-byte[]-int32-int32-char[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="98e27-288">
            <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-288">
              <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
          <span data-ttu-id="98e27-289">-or-  <paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-289">-or-  <paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="98e27-290">
            <paramref name="byteIndex" /> or <paramref name="byteCount" /> or <paramref name="charIndex" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-290">
              <paramref name="byteIndex" /> or <paramref name="byteCount" /> or <paramref name="charIndex" /> is less than zero.</span>
          </span>
          <span data-ttu-id="98e27-291">-or-  <paramref name="byteindex" /> and <paramref name="byteCount" /> do not denote a valid range in <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-291">-or-  <paramref name="byteindex" /> and <paramref name="byteCount" /> do not denote a valid range in <paramref name="bytes" />.</span>
          </span>
          <span data-ttu-id="98e27-292">-or-  <paramref name="charIndex" /> is not a valid index in <paramref name="chars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-292">-or-  <paramref name="charIndex" /> is not a valid index in <paramref name="chars" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="98e27-293">
            <paramref name="chars" /> does not have enough capacity from <paramref name="charIndex" /> to the end of the array to accommodate the resulting characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-293">
              <paramref name="chars" /> does not have enough capacity from <paramref name="charIndex" /> to the end of the array to accommodate the resulting characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="98e27-294">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Decoder.Fallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-294">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Decoder.Fallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.Decoder.Reset" />
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public virtual int GetChars (byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex, bool flush);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetChars(unsigned int8[] bytes, int32 byteIndex, int32 byteCount, char[] chars, int32 charIndex, bool flush) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChars (bytes As Byte(), byteIndex As Integer, byteCount As Integer, chars As Char(), charIndex As Integer, flush As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetChars(cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex, int byteCount, cli::array &lt;char&gt; ^ chars, int charIndex, bool flush);" />
      <MemberSignature Language="F#" Value="abstract member GetChars : byte[] * int * int * char[] * int * bool -&gt; int&#xA;override this.GetChars : byte[] * int * int * char[] * int * bool -&gt; int" Usage="decoder.GetChars (bytes, byteIndex, byteCount, chars, charIndex, flush)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="flush" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="98e27-295">The byte array containing the sequence of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-295">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <param name="byteIndex">
          <span data-ttu-id="98e27-296">The index of the first byte to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-296">The index of the first byte to decode.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="98e27-297">The number of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-297">The number of bytes to decode.</span>
          </span>
        </param>
        <param name="chars">
          <span data-ttu-id="98e27-298">The character array to contain the resulting set of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-298">The character array to contain the resulting set of characters.</span>
          </span>
        </param>
        <param name="charIndex">
          <span data-ttu-id="98e27-299">The index at which to start writing the resulting set of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-299">The index at which to start writing the resulting set of characters.</span>
          </span>
        </param>
        <param name="flush">
          <span data-ttu-id="98e27-300">
            <see langword="true" /> to clear the internal state of the decoder after the conversion; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-300">
              <see langword="true" /> to clear the internal state of the decoder after the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="98e27-301">When overridden in a derived class, decodes a sequence of bytes from the specified byte array and any bytes in the internal buffer into the specified character array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-301">When overridden in a derived class, decodes a sequence of bytes from the specified byte array and any bytes in the internal buffer into the specified character array.</span>
          </span>
          <span data-ttu-id="98e27-302">A parameter indicates whether to clear the internal state of the decoder after the conversion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-302">A parameter indicates whether to clear the internal state of the decoder after the conversion.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="98e27-303">The actual number of characters written into the <paramref name="chars" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-303">The actual number of characters written into the <paramref name="chars" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98e27-304">에 유의 해야는 <xref:System.Text.Decoder> 개체에 대 한 호출 간에 상태를 저장 <xref:System.Text.Decoder.GetChars%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-304">Remember that the <xref:System.Text.Decoder> object saves state between calls to <xref:System.Text.Decoder.GetChars%2A>.</span></span> <span data-ttu-id="98e27-305">설정 해야 응용 프로그램 데이터의 스트림을 사용 하 여 작업을 마치면는 `flush` 매개 변수를 `true` 상태 정보 플러시 되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-305">When the application is done with a stream of data, it should set the `flush` parameter to `true` to make sure that the state information is flushed.</span></span> <span data-ttu-id="98e27-306">이 설정을 통해 디코더는 데이터 블록의 끝에 잘못 된 바이트를 무시 하 고 내부 버퍼를 지웁니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-306">With this setting, the decoder ignores invalid bytes at the end of the data block and clears the internal buffer.</span></span>  
  
 <span data-ttu-id="98e27-307">정확한 배열 크기를 계산 하려면 `GetChars` 필요한 결과 문자를 저장 하기 위해 응용 프로그램 사용 해야 <xref:System.Text.Decoder.GetCharCount%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-307">To calculate the exact array size that `GetChars` requires to store the resulting characters, the application should use <xref:System.Text.Decoder.GetCharCount%2A>.</span></span>  
  
 <span data-ttu-id="98e27-308">경우 `GetChars` 사용 하 여 호출 `flush` 로 설정 `false`, 디코더를 내부 버퍼에 데이터 블록의 끝에 후행 바이트를 저장 하 고 다음 디코딩 작업에 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-308">If `GetChars` is called with `flush` set to `false`, the decoder stores trailing bytes at the end of the data block in an internal buffer and uses them in the next decoding operation.</span></span> <span data-ttu-id="98e27-309">응용 프로그램 호출 해야 `GetCharCount` 호출 하기 전에 즉시 데이터 블록에 `GetChars` 동일한 블록에는 이전 블록의 모든 후행 바이트 계산에 포함 되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-309">The application should call `GetCharCount` on a block of data immediately before calling `GetChars` on the same block, so that any trailing bytes from the previous block are included in the calculation.</span></span>  
  
 <span data-ttu-id="98e27-310">응용 프로그램 입력 스트림의 많은 세그먼트가 변환할 경우에 사용 하 여 여는 <xref:System.Text.Decoder.Convert%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="98e27-310">If your application is to convert many segments of an input stream, consider using the <xref:System.Text.Decoder.Convert%2A> method.</span></span> <span data-ttu-id="98e27-311"><xref:System.Text.Decoder.GetChars%2A> 출력 버퍼가 충분히 크지 않은 경우 예외를 throw 하지만 <xref:System.Text.Decoder.Convert%2A> 이 최대한 많은 공간을 채울 되 고 읽은 바이트와 쓰여진 문자를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-311"><xref:System.Text.Decoder.GetChars%2A> will throw an exception if the output buffer isn't large enough, but <xref:System.Text.Decoder.Convert%2A> will fill as much space as possible and return the bytes read and chars written.</span></span> <span data-ttu-id="98e27-312">또한 참조는 <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> 자세한 주석에 대 한 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-312">Also see the <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> topic for more comments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="98e27-313">
            <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-313">
              <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
          <span data-ttu-id="98e27-314">-or-  <paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-314">-or-  <paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="98e27-315">
            <paramref name="byteIndex" /> or <paramref name="byteCount" /> or <paramref name="charIndex" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-315">
              <paramref name="byteIndex" /> or <paramref name="byteCount" /> or <paramref name="charIndex" /> is less than zero.</span>
          </span>
          <span data-ttu-id="98e27-316">-or-  <paramref name="byteindex" /> and <paramref name="byteCount" /> do not denote a valid range in <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-316">-or-  <paramref name="byteindex" /> and <paramref name="byteCount" /> do not denote a valid range in <paramref name="bytes" />.</span>
          </span>
          <span data-ttu-id="98e27-317">-or-  <paramref name="charIndex" /> is not a valid index in <paramref name="chars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-317">-or-  <paramref name="charIndex" /> is not a valid index in <paramref name="chars" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="98e27-318">
            <paramref name="chars" /> does not have enough capacity from <paramref name="charIndex" /> to the end of the array to accommodate the resulting characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-318">
              <paramref name="chars" /> does not have enough capacity from <paramref name="charIndex" /> to the end of the array to accommodate the resulting characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="98e27-319">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Decoder.Fallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-319">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)  -and-  <see cref="P:System.Text.Decoder.Fallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.Text.Decoder.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Decoder.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="decoder.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="98e27-320">When overridden in a derived class, sets the decoder back to its initial state.</span>
          <span class="sxs-lookup">
            <span data-stu-id="98e27-320">When overridden in a derived class, sets the decoder back to its initial state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98e27-321">내부 상태를 지우고이 메서드는 <xref:System.Text.Decoder> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-321">This method clears the internal state of the <xref:System.Text.Decoder> object.</span></span> <span data-ttu-id="98e27-322">메서드에 대 한 이전 호출에서 보관 된 모든 상태 정보를 지웁니다 <xref:System.Text.Decoder.GetChars%2A> 또는 <xref:System.Text.Decoder.Convert%2A>를 포함 하 여 이전 데이터 블록의 끝에 바이트 뒤에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="98e27-322">The method clears any state information preserved from a previous call to <xref:System.Text.Decoder.GetChars%2A> or <xref:System.Text.Decoder.Convert%2A>, including trailing bytes at the end of the previous data block.</span></span>  
  
 <span data-ttu-id="98e27-323">응용 프로그램에서 호출 해야는 <xref:System.Text.Decoder.Reset%2A> 메서드 여 예외가 발생 한 후에 동일한 디코더를 다시 사용 하려는 경우 <xref:System.Text.Decoder.GetChars%2A>, <xref:System.Text.Decoder.Convert%2A>, 또는 <xref:System.Text.Decoder.GetCharCount%2A>, 디코더 스트림을 전환 하 고 또 다른 스트림을 디코딩하 시작 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="98e27-323">Your application should call the <xref:System.Text.Decoder.Reset%2A> method if it wants to reuse the same decoder even after an exception is thrown by <xref:System.Text.Decoder.GetChars%2A>, <xref:System.Text.Decoder.Convert%2A>, or <xref:System.Text.Decoder.GetCharCount%2A>, or if the decoder switches streams and begins to decode another stream.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>