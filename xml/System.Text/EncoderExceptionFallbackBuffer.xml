<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="EncoderExceptionFallbackBuffer.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac500aa7c16487a8e1d2e57f073b4d082024e7f6b64.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">00aa7c16487a8e1d2e57f073b4d082024e7f6b64</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Text.EncoderExceptionFallbackBuffer">
          <source>Throws <ph id="ph1">&lt;see cref="T:System.Text.EncoderFallbackException" /&gt;</ph> when an input character cannot be converted to an encoded output byte sequence.</source>
          <target state="translated">입력 문자를 인코딩된 출력 바이트 시퀀스로 변환할 수 없으면 <ph id="ph1">&lt;see cref="T:System.Text.EncoderFallbackException" /&gt;</ph>을 throw합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Text.EncoderExceptionFallbackBuffer">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderExceptionFallbackBuffer">
          <source>A common reason for an encoding or decoding operation to fail is if the underlying encoding class does not provide a mapping between a character and an equivalent byte sequence.</source>
          <target state="translated">실패 하는 인코딩 또는 디코딩 작업에 대 한 일반적인 이유는 기본 인코딩 클래스는 문자가 고 해당 하는 바이트 시퀀스 간의 매핑을 제공 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderExceptionFallbackBuffer">
          <source>If the input character cannot be converted to an output byte sequence, the encoding operation calls the <ph id="ph1">&lt;xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A&gt;</ph> method, which throws <ph id="ph2">&lt;xref:System.Text.EncoderFallbackException&gt;</ph>.</source>
          <target state="translated">인코딩 작업을 호출 하는 입력된 문자를 출력 바이트 시퀀스로 변환할 수 없습니다는 <ph id="ph1">&lt;xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A&gt;</ph> throw 하는 메서드를 <ph id="ph2">&lt;xref:System.Text.EncoderFallbackException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderExceptionFallbackBuffer">
          <source>The <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer?displayProperty=nameWithType&gt;</ph> class, which represents a data buffer used in an encoding operation, is the base class for the <ph id="ph2">&lt;xref:System.Text.EncoderExceptionFallbackBuffer&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer?displayProperty=nameWithType&gt;</ph> 인코딩 작업에서 사용 되는 데이터 버퍼를 나타내는 클래스는에 대 한 기본 클래스는 <ph id="ph2">&lt;xref:System.Text.EncoderExceptionFallbackBuffer&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderExceptionFallbackBuffer">
          <source>However, instead of a data buffer, the <ph id="ph1">&lt;xref:System.Text.EncoderExceptionFallbackBuffer&gt;</ph> class represents a standard behavior wherein an exception is thrown if an encoding operation fails.</source>
          <target state="translated">그러나 데이터 버퍼 대신는 <ph id="ph1">&lt;xref:System.Text.EncoderExceptionFallbackBuffer&gt;</ph> 클래스 인코딩 작업이 실패 하면 예외가 throw 되는 여기서 표준 동작을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderExceptionFallbackBuffer">
          <source>No actual data buffer exists, and the members designed to manipulate such a buffer do no significant work.</source>
          <target state="translated">실제 데이터 버퍼가 없습니다 있고, 이러한 버퍼를 처리 하도록 디자인 된 멤버 없는 중요 한 작업을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderExceptionFallbackBuffer.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.EncoderExceptionFallbackBuffer" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Text.EncoderExceptionFallbackBuffer" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="T:System.Text.EncoderExceptionFallbackBuffer">
          <source>Throws an exception because the input character cannot be encoded.</source>
          <target state="translated">입력 문자를 인코딩할 수 없으므로 예외를 throw합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="T:System.Text.EncoderExceptionFallbackBuffer">
          <source>The nominal return value is not used.</source>
          <target state="translated">명목상의 반환 값은 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Int32)">
          <source>An input character.</source>
          <target state="translated">입력 문자입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Int32)">
          <source>The index position of the character in the input buffer.</source>
          <target state="translated">입력 버퍼에 있는 문자의 인덱스 위치입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Int32)">
          <source>Throws an exception because the input character cannot be encoded.</source>
          <target state="translated">입력 문자를 인코딩할 수 없으므로 예외를 throw합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Int32)">
          <source>Parameters specify the value and index position of the character that cannot be converted.</source>
          <target state="translated">매개 변수는 변환할 수 없는 문자의 값과 인덱스 위치를 지정합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Int32)">
          <source>None.</source>
          <target state="translated">없음</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Int32)">
          <source>No value is returned because the <ph id="ph1">&lt;see cref="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Int32)" /&gt;</ph> method always throws an exception.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Int32)" /&gt;</ph> 메서드가 항상 예외를 throw하므로 값이 반환되지 않습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.Encoding.GetBytes%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.Encoder.Convert%2A&gt;</ph> methods call <ph id="ph3">&lt;xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A&gt;</ph> if they encounter an unknown character in their input.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.Encoding.GetBytes%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Text.Encoder.Convert%2A&gt;</ph> 메서드 호출 <ph id="ph3">&lt;xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A&gt;</ph> 는 입력에 알 수 없는 문자가 발생 한 경우.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Int32)">
          <source>In response, <ph id="ph1">&lt;xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A&gt;</ph> always throws <ph id="ph2">&lt;xref:System.Text.EncoderFallbackException&gt;</ph>.</source>
          <target state="translated">에 대 한 응답 <ph id="ph1">&lt;xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A&gt;</ph> 항상 throw <ph id="ph2">&lt;xref:System.Text.EncoderFallbackException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="charUnknown" /&gt;</ph> cannot be encoded.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="charUnknown" /&gt;</ph>을 인코딩할 수 없는 경우.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Int32)">
          <source>This method always throws an exception that reports the value of the <ph id="ph1">&lt;paramref name="charUnknown" /&gt;</ph> and <ph id="ph2">&lt;paramref name="index" /&gt;</ph> parameters.</source>
          <target state="translated">이 메서드는 항상 <ph id="ph1">&lt;paramref name="charUnknown" /&gt;</ph> 및 <ph id="ph2">&lt;paramref name="index" /&gt;</ph> 매개 변수의 값을 보고하는 예외를 throw합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)">
          <source>The high surrogate of the input pair.</source>
          <target state="translated">입력 쌍의 high surrogate입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)">
          <source>The low surrogate of the input pair.</source>
          <target state="translated">입력 쌍의 low surrogate입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)">
          <source>The index position of the surrogate pair in the input buffer.</source>
          <target state="translated">입력 버퍼에 있는 서로게이트 쌍의 인덱스 위치입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)">
          <source>Throws an exception because the input character cannot be encoded.</source>
          <target state="translated">입력 문자를 인코딩할 수 없으므로 예외를 throw합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)">
          <source>Parameters specify the value and index position of the surrogate pair in the input, and the nominal return value is not used.</source>
          <target state="translated">매개 변수는 입력에 있는 서로게이트 쌍의 값과 인덱스 위치를 지정하고, 명목상의 반환 값은 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)">
          <source>None.</source>
          <target state="translated">없음</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)">
          <source>No value is returned because the <ph id="ph1">&lt;see cref="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)" /&gt;</ph> method always throws an exception.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)" /&gt;</ph> 메서드가 항상 예외를 throw하므로 값이 반환되지 않습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.Encoding.GetBytes%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.Encoder.Convert%2A&gt;</ph> methods call <ph id="ph3">&lt;xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A&gt;</ph> if they encounter a surrogate pair in their input.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.Encoding.GetBytes%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Text.Encoder.Convert%2A&gt;</ph> 메서드 호출 <ph id="ph3">&lt;xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A&gt;</ph> 는 입력에는 서로게이트 쌍을 발견할 경우.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)">
          <source>In response, <ph id="ph1">&lt;xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A&gt;</ph> always throws an exception.</source>
          <target state="translated">에 대 한 응답 <ph id="ph1">&lt;xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A&gt;</ph> 항상 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)">
          <source>The character represented by <ph id="ph1">&lt;paramref name="charUnknownHigh" /&gt;</ph> and <ph id="ph2">&lt;paramref name="charUnknownLow" /&gt;</ph> cannot be encoded.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="charUnknownHigh" /&gt;</ph> 및 <ph id="ph2">&lt;paramref name="charUnknownLow" /&gt;</ph>로 나타내는 문자를 인코딩할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)">
          <source>Either <ph id="ph1">&lt;paramref name="charUnknownHigh" /&gt;</ph> or <ph id="ph2">&lt;paramref name="charUnknownLow" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="charUnknownHigh" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="charUnknownLow" /&gt;</ph>가 잘못된 경우(즉,</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="charUnknownHigh" /&gt;</ph> is not between U+D800 and U+DBFF, inclusive, or <ph id="ph2">&lt;paramref name="charUnknownLow" /&gt;</ph> is not between U+DC00 and U+DFFF, inclusive.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="charUnknownHigh" /&gt;</ph>가 U+D800 ~ U+DBFF 범위에 있지 않거나 <ph id="ph2">&lt;paramref name="charUnknownLow" /&gt;</ph>가 U+DC00 ~ U+DFFF 범위에 있지 않은 경우)</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderExceptionFallbackBuffer.GetNextChar">
          <source>Retrieves the next character in the exception fallback buffer.</source>
          <target state="translated">예외 대체(fallback) 버퍼에서 다음 문자를 검색합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderExceptionFallbackBuffer.GetNextChar">
          <source>The return value is always the Unicode character, NULL (U+0000).</source>
          <target state="translated">반환 값은 항상 유니코드 문자 NULL(U+0000)입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderExceptionFallbackBuffer.GetNextChar">
          <source>A return value is defined, although it is unchanging, because this method implements an abstract method.</source>
          <target state="translated">이 메서드가 추상 메서드를 구현하므로 변경되지 않는 반환 값이 정의됩니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncoderExceptionFallbackBuffer.GetNextChar">
          <source>Because <ph id="ph1">&lt;xref:System.Text.EncoderExceptionFallbackBuffer&gt;</ph> has no actual exception data buffer, the <ph id="ph2">&lt;xref:System.Text.EncoderExceptionFallbackBuffer.GetNextChar%2A&gt;</ph> method always returns the Unicode NULL character.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Text.EncoderExceptionFallbackBuffer&gt;</ph> 는 실제 예외 데이터 버퍼가 없으므로 <ph id="ph2">&lt;xref:System.Text.EncoderExceptionFallbackBuffer.GetNextChar%2A&gt;</ph> 메서드 유니코드 NULL 문자는 항상 반환 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderExceptionFallbackBuffer.MovePrevious">
          <source>Causes the next call to the <ph id="ph1">&lt;see cref="M:System.Text.EncoderExceptionFallbackBuffer.GetNextChar" /&gt;</ph> method to access the exception data buffer character position that is prior to the current position.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Text.EncoderExceptionFallbackBuffer.GetNextChar" /&gt;</ph> 메서드에 대한 다음 호출을 발생시켜 현재 위치 앞의 예외 데이터 버퍼 문자 위치에 액세스합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderExceptionFallbackBuffer.MovePrevious">
          <source>The return value is always <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">반환 값은 항상 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderExceptionFallbackBuffer.MovePrevious">
          <source>A return value is defined, although it is unchanging, because this method implements an abstract method.</source>
          <target state="translated">이 메서드가 추상 메서드를 구현하므로 변경되지 않는 반환 값이 정의됩니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncoderExceptionFallbackBuffer.MovePrevious">
          <source>Because <ph id="ph1">&lt;xref:System.Text.EncoderExceptionFallbackBuffer&gt;</ph> has no actual exception data buffer, the <ph id="ph2">&lt;xref:System.Text.EncoderExceptionFallbackBuffer.MovePrevious%2A&gt;</ph> method always returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Text.EncoderExceptionFallbackBuffer&gt;</ph> 는 실제 예외 데이터 버퍼가 없으므로 <ph id="ph2">&lt;xref:System.Text.EncoderExceptionFallbackBuffer.MovePrevious%2A&gt;</ph> 메서드는 항상 반환 <ph id="ph3">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.Text.EncoderExceptionFallbackBuffer.Remaining">
          <source>Gets the number of characters in the current <ph id="ph1">&lt;see cref="T:System.Text.EncoderExceptionFallbackBuffer" /&gt;</ph> object that remain to be processed.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Text.EncoderExceptionFallbackBuffer" /&gt;</ph> 개체에서 처리할 남은 문자 수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.EncoderExceptionFallbackBuffer.Remaining">
          <source>The return value is always zero.</source>
          <target state="translated">반환 값은 항상 0입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.EncoderExceptionFallbackBuffer.Remaining">
          <source>A return value is defined, although it is unchanging, because this method implements an abstract method.</source>
          <target state="translated">이 메서드가 추상 메서드를 구현하므로 변경되지 않는 반환 값이 정의됩니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.EncoderExceptionFallbackBuffer.Remaining">
          <source>Because <ph id="ph1">&lt;xref:System.Text.EncoderExceptionFallbackBuffer&gt;</ph> has no actual exception data buffer, the <ph id="ph2">&lt;xref:System.Text.EncoderExceptionFallbackBuffer.Remaining%2A&gt;</ph> property always returns zero.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Text.EncoderExceptionFallbackBuffer&gt;</ph> 는 실제 예외 데이터 버퍼가 없으므로 <ph id="ph2">&lt;xref:System.Text.EncoderExceptionFallbackBuffer.Remaining%2A&gt;</ph> 속성은 항상 0을 반환 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>