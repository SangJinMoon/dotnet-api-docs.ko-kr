<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DecoderFallbackBuffer.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5334e4a94e0c09dca04227f373df6acb3a69c9b91.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">334e4a94e0c09dca04227f373df6acb3a69c9b91</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Text.DecoderFallbackBuffer">
          <source>Provides a buffer that allows a fallback handler to return an alternate string to a decoder when it cannot decode an input byte sequence.</source>
          <target state="translated">입력 바이트 시퀀스를 디코딩할 수 없는 경우 대체(fallback) 처리기가 디코더에 대체 문자열을 반환할 수 있도록 허용하는 버퍼를 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>An encoding defines a mapping between a Unicode character and an encoded sequence of bytes.</source>
          <target state="translated">인코딩을 유니코드 문자 및 인코딩된 바이트 시퀀스로 간의 매핑을 정의합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>A decoding operation, which converts an input byte sequence to an output character, fails if no mapping is defined for a particular byte sequence.</source>
          <target state="translated">출력 문자로 입력된 바이트 시퀀스를 변환, 디코딩 작업을 특정 바이트 시퀀스에 대해 정의 된 매핑이 없는 경우 실패 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>The .NET Framework provides a failure handling mechanism, called a fallback, if a conversion cannot be performed.</source>
          <target state="translated">.NET Framework는 오류 처리는 변환을 수행할 수 없는 경우 대체 (fallback)는 호출 메커니즘을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>All decoder fallback handlers must implement the following:</source>
          <target state="translated">모든 디코더 대체 (fallback) 처리기는 다음 구현 해야 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>A decoder fallback, which is represented by a class derived from the <ph id="ph1">&lt;xref:System.Text.DecoderFallback&gt;</ph> class.</source>
          <target state="translated">파생 된 클래스에 의해 표현 되는 디코더 대체 (fallback)는 <ph id="ph1">&lt;xref:System.Text.DecoderFallback&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>A decoder fallback buffer, which is represented by a type derived from the <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer&gt;</ph> class that can return a string to the conversion operation.</source>
          <target state="translated">파생 된 형식으로 표시 된 디코더 대체 (fallback) 버퍼는 <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer&gt;</ph> 문자열로 변환 작업을 반환할 수 있는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>Fallbacks can use three strategies to handle conversion failures:</source>
          <target state="translated">대체 변환 오류를 처리 하도록 세 가지 전략을 사용할 수 있습니다.:</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>Best-fit mapping.</source>
          <target state="translated">최적된 매핑을 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>The decoder fallback buffer can return a string that represents a close approximation to the input byte sequence.</source>
          <target state="translated">디코더 대체 (fallback) 버퍼는 유사한 문자 입력된 바이트 시퀀스를 나타내는 문자열을 반환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>The .NET Framework does not provide a public best-fit <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer&gt;</ph> implementation.</source>
          <target state="translated">.NET Framework에 가장 적합된 한 공용 제공 하지 않습니다 <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer&gt;</ph> 구현 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>Replacement.</source>
          <target state="translated">대체 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>The decoder fallback buffer can return a string, such as a question mark ("?"), that indicates that a byte sequence could not be decoded.</source>
          <target state="translated">디코더 대체 (fallback) 버퍼에는 매개 변수 등의 문자열을 반환할 수 있습니다 ("?")을 나타내는 바이트 시퀀스를 디코딩할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>In the .NET Framework, the <ph id="ph1">&lt;xref:System.Text.DecoderReplacementFallback&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.DecoderReplacementFallbackBuffer&gt;</ph> classes provide a public replacement fallback buffer implementation.</source>
          <target state="translated">.NET framework에서는 <ph id="ph1">&lt;xref:System.Text.DecoderReplacementFallback&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Text.DecoderReplacementFallbackBuffer&gt;</ph> 클래스에서 공용 교체 대체 (fallback) 버퍼 구현을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>The constructor of the <ph id="ph1">&lt;xref:System.Text.DecoderReplacementFallback&gt;</ph> class enables you to define the replacement string.</source>
          <target state="translated">생성자는 <ph id="ph1">&lt;xref:System.Text.DecoderReplacementFallback&gt;</ph> 클래스 대체 문자열을 정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>Exception.</source>
          <target state="translated">예외입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>The <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer&gt;</ph> implementation throws an exception, which indicates that a byte sequence cannot be decoded, and terminates the decoding operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer&gt;</ph> 구현 예외를 throw 하는 바이트 시퀀스를 디코딩할 수 없으면 디코딩 작업을 종료 함을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>In this case, the fallback handler must provide a <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer&gt;</ph> implementation, although it does not return a string to the decoder.</source>
          <target state="translated">이 경우 대체 (fallback) 처리기를 제공 해야는 <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer&gt;</ph> 구현 하지만 디코더에 문자열을 반환 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>In the .NET Framework, the <ph id="ph1">&lt;xref:System.Text.DecoderExceptionFallback&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.DecoderExceptionFallbackBuffer&gt;</ph> classes provide a public exception fallback implementation that throws a <ph id="ph3">&lt;xref:System.Text.DecoderFallbackException&gt;</ph> when a byte sequence cannot be decoded.</source>
          <target state="translated">.NET framework에서는 <ph id="ph1">&lt;xref:System.Text.DecoderExceptionFallback&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Text.DecoderExceptionFallbackBuffer&gt;</ph> 클래스에서 throw 하는 공용 예외 대체 (fallback) 구현을 제공는 <ph id="ph3">&lt;xref:System.Text.DecoderFallbackException&gt;</ph> 바이트 시퀀스를 디코딩할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>The buffer in a <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer&gt;</ph> implementation represents the entire string to be returned to the decoder in response to a decoder fallback.</source>
          <target state="translated">버퍼는 <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer&gt;</ph> 구현 전체 문자열을 반환할 디코더에 대 한 응답으로 디코더 대체 (fallback)를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>Generally, implementations also include state information, such as the index of the next character to return to the decoder and the number of remaining characters to be returned.</source>
          <target state="translated">일반적으로 구현 반환할 디코더와 남은 문자 수를 반환한 다음 문자의 인덱스 등의 상태 정보를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>Because <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer&gt;</ph> is an abstract class, it requires derived classes to implement the following members at a minimum:</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer&gt;</ph> 클래스는 추상 클래스에는 최소한 다음 멤버를 구현 하는 파생된 클래스가 필요 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>The <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.Fallback%2A&gt;</ph> method, which is called by the decoder when it cannot decode a byte sequence.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.Fallback%2A&gt;</ph> 메서드는 바이트 시퀀스를 디코딩할 수 없는 때 디코더에 의해 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>The decoder passes two pieces of information to the fallback buffer implementation: an array containing the bytes that could not be decoded and the index of the first byte in the input byte array.</source>
          <target state="translated">디코더 대체 (fallback) 버퍼 구현에 두 가지 정보를 전달: 디코딩할 수 없는 바이트를 포함 하는 배열 및 첫 번째 입력된 바이트 배열의 바이트의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>In a decoder fallback exception handler, the exception is thrown in this method.</source>
          <target state="translated">디코더 대체 (fallback) 예외 처리기에서이 메서드에서 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>Otherwise, the method returns <ph id="ph1">`true`</ph> if it provides a fallback, or <ph id="ph2">`false`</ph> if it does not.</source>
          <target state="translated">그렇지 않으면 메서드가 반환 <ph id="ph1">`true`</ph> 대체 (fallback)를 제공 하는 경우 또는 <ph id="ph2">`false`</ph> 그렇지 않은 경우.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>The <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.GetNextChar%2A&gt;</ph> method, which is called repeatedly by the decoder if the <ph id="ph2">&lt;xref:System.Text.DecoderFallbackBuffer.Fallback%2A&gt;</ph> method returns <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.GetNextChar%2A&gt;</ph> 경우 디코더에 의해 반복적으로 호출 되는 메서드는 <ph id="ph2">&lt;xref:System.Text.DecoderFallbackBuffer.Fallback%2A&gt;</ph> 메서드 반환 <ph id="ph3">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>In successive calls, the handler should return each character in its buffer.</source>
          <target state="translated">연속 호출에서 처리기의 버퍼에 각 문자를 반환 해야 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>When it has returned all characters, it should return U+0000.</source>
          <target state="translated">모든 문자를 반환 하면 U + 0000을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>An exception fallback handler always returns U+0000.</source>
          <target state="translated">예외 대체 (fallback) 처리기는 항상 U + 0000을 반환합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>The <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.MovePrevious%2A&gt;</ph> method, which tries to move the pointer to the previous position in the buffer and indicates whether the move was successful.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.MovePrevious%2A&gt;</ph> 메서드를 포인터는 버퍼의 이전 위치를 이동 하 려 하 고 이동에 성공 했는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>An exception handler always returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">예외 처리기가 항상 반환 <ph id="ph1">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>The <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.Remaining%2A&gt;</ph> property, which indicates the number of remaining characters to be returned to the decoder.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.Remaining%2A&gt;</ph> 속성 디코더에 반환할 남은 문자 수를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.DecoderFallbackBuffer">
          <source>An exception fallback handler always returns zero.</source>
          <target state="translated">예외 대체 (fallback) 처리기는 항상 0을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Text.DecoderFallbackBuffer.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.DecoderFallbackBuffer" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Text.DecoderFallbackBuffer" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Text.DecoderFallbackBuffer.Fallback(System.Byte[],System.Int32)">
          <source>An input array of bytes.</source>
          <target state="translated">입력 바이트 배열입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Text.DecoderFallbackBuffer.Fallback(System.Byte[],System.Int32)">
          <source>The index position of a byte in <bpt id="p1">&lt;c&gt;</bpt>bytesUnknown<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>bytesUnknown<ept id="p1">&lt;/c&gt;</ept>에서 바이트의 인덱스 위치입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Text.DecoderFallbackBuffer.Fallback(System.Byte[],System.Int32)">
          <source>When overridden in a derived class, prepares the fallback buffer to handle the specified input byte sequence.</source>
          <target state="translated">파생 클래스에서 재정의될 때 지정된 입력 바이트 시퀀스를 처리하도록 대체 버퍼를 준비합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Text.DecoderFallbackBuffer.Fallback(System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the fallback buffer can process <ph id="ph2">&lt;paramref name="bytesUnknown" /&gt;</ph>; <ph id="ph3">&lt;see langword="false" /&gt;</ph> if the fallback buffer ignores <ph id="ph4">&lt;paramref name="bytesUnknown" /&gt;</ph>.</source>
          <target state="translated">대체 버퍼에서 <ph id="ph2">&lt;paramref name="bytesUnknown" /&gt;</ph>을 처리할 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 대체 버퍼에서 <ph id="ph4">&lt;paramref name="bytesUnknown" /&gt;</ph>을 무시하면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.DecoderFallbackBuffer.Fallback(System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.Encoding.GetString%2A?displayProperty=nameWithType&gt;</ph>, and <ph id="ph3">&lt;xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType&gt;</ph> methods call <ph id="ph4">&lt;xref:System.Text.DecoderFallbackBuffer.Fallback%2A&gt;</ph> if they encounter an unknown input byte sequence that cannot be decoded.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.Encoding.GetString%2A?displayProperty=nameWithType&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType&gt;</ph> 메서드 호출 <ph id="ph4">&lt;xref:System.Text.DecoderFallbackBuffer.Fallback%2A&gt;</ph> 디코딩할 수 없는 알 수 없는 입력된 바이트 시퀀스를 발생 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.DecoderFallbackBuffer.Fallback(System.Byte[],System.Int32)">
          <source>A return value of <ph id="ph1">`true`</ph> indicates that the fallback buffer can process the input byte sequence, which causes the calling method to call the <ph id="ph2">&lt;xref:System.Text.DecoderFallbackBuffer.GetNextChar%2A&gt;</ph> method to obtain each character of the fallback buffer.</source>
          <target state="translated">반환 값이 <ph id="ph1">`true`</ph> 대체 (fallback) 버퍼 호출 메서드를 호출 하는 입력된 바이트 시퀀스를 처리할 수 있는지 나타냅니다는 <ph id="ph2">&lt;xref:System.Text.DecoderFallbackBuffer.GetNextChar%2A&gt;</ph> 대체 (fallback) 버퍼의 각 문자를 얻는 메서드를 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.DecoderFallbackBuffer.Fallback(System.Byte[],System.Int32)">
          <source>Because it does not process individual bytes, the <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.Fallback%2A&gt;</ph> method in an exception fallback handler throws an exception.</source>
          <target state="translated">개별 바이트를 처리 하지 않으므로 <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.Fallback%2A&gt;</ph> 메서드 예외 대체 (fallback) 처리기에서 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Text.DecoderFallbackBuffer.GetNextChar">
          <source>When overridden in a derived class, retrieves the next character in the fallback buffer.</source>
          <target state="translated">파생 클래스에서 재정의될 때 대체 버퍼에서 다음 문자를 검색합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Text.DecoderFallbackBuffer.GetNextChar">
          <source>The next character in the fallback buffer.</source>
          <target state="translated">대체 버퍼에 있는 다음 문자입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.DecoderFallbackBuffer.GetNextChar">
          <source>A decoding operation calls the <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.Fallback%2A&gt;</ph> method if the operation encounters an unknown byte sequence in the input.</source>
          <target state="translated">디코딩 작업 호출에서 <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.Fallback%2A&gt;</ph> 메서드 입력에는 알 수 없는 바이트 시퀀스를 발견 하면 합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.DecoderFallbackBuffer.GetNextChar">
          <source>If the <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.Fallback%2A&gt;</ph> method returns <ph id="ph2">`true`</ph>, a substitute string exists that can be inserted in the output instead of decoding the unknown input.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.Fallback%2A&gt;</ph> 메서드 반환 <ph id="ph2">`true`</ph>, 대체 문자열이 존재 하는 알 수 없는 입력을 디코딩하는 대신 출력에 삽입 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.DecoderFallbackBuffer.GetNextChar">
          <source>The decoding operation calls the <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.GetNextChar%2A&gt;</ph> method repeatedly and obtains the substitute string one character at a time.</source>
          <target state="translated">디코딩 작업 호출에서 <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.GetNextChar%2A&gt;</ph> 메서드 반복적으로 고 한 번에 한 문자씩 대체 문자열을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.DecoderFallbackBuffer.GetNextChar">
          <source>When all characters in the fallback buffer have been returned to the decoder, the method should return U+0000.</source>
          <target state="translated">디코더에 대체 (fallback) 버퍼에 있는 모든 문자가 반환 되는 경우 메서드는 U + 0000을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.DecoderFallbackBuffer.GetNextChar">
          <source>For an exception fallback handler, the <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.GetNextChar%2A&gt;</ph> method should return U+0000.</source>
          <target state="translated">예외 대체 (fallback) 처리기의 경우는 <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.GetNextChar%2A&gt;</ph> 메서드에서 U + 0000을 반환 해야 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Text.DecoderFallbackBuffer.MovePrevious">
          <source>When overridden in a derived class, causes the next call to the <ph id="ph1">&lt;see cref="M:System.Text.DecoderFallbackBuffer.GetNextChar" /&gt;</ph> method to access the data buffer character position that is prior to the current character position.</source>
          <target state="translated">파생 클래스에서 재정의될 때 <ph id="ph1">&lt;see cref="M:System.Text.DecoderFallbackBuffer.GetNextChar" /&gt;</ph> 메서드에 대한 다음 호출에서 데이터 버퍼의 현재 문자 위치 이전의 문자 위치에 액세스하도록 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Text.DecoderFallbackBuffer.MovePrevious">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="M:System.Text.DecoderFallbackBuffer.MovePrevious" /&gt;</ph> operation was successful; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="M:System.Text.DecoderFallbackBuffer.MovePrevious" /&gt;</ph> 작업이 성공적으로 수행되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.DecoderFallbackBuffer.MovePrevious">
          <source>An exception fallback handler should return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">예외 대체 (fallback) 처리기 반환 해야 <ph id="ph1">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="P:System.Text.DecoderFallbackBuffer.Remaining">
          <source>When overridden in a derived class, gets the number of characters in the current <ph id="ph1">&lt;see cref="T:System.Text.DecoderFallbackBuffer" /&gt;</ph> object that remain to be processed.</source>
          <target state="translated">파생 클래스에서 재정의될 때 처리되기 위해 남아 있는 현재 <ph id="ph1">&lt;see cref="T:System.Text.DecoderFallbackBuffer" /&gt;</ph> 개체의 문자 수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.DecoderFallbackBuffer.Remaining">
          <source>The number of characters in the current fallback buffer that have not yet been processed.</source>
          <target state="translated">아직 처리되지 않은 현재 대체 버퍼의 문자 수입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.DecoderFallbackBuffer.Remaining">
          <source>The <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.Fallback%2A&gt;</ph> method returns <ph id="ph2">`true`</ph> if <ph id="ph3">&lt;xref:System.Text.DecoderFallbackBuffer.Remaining%2A&gt;</ph> is a nonzero value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.Fallback%2A&gt;</ph> 메서드 반환 <ph id="ph2">`true`</ph> 경우 <ph id="ph3">&lt;xref:System.Text.DecoderFallbackBuffer.Remaining%2A&gt;</ph> 0이 아닌 값입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.DecoderFallbackBuffer.Remaining">
          <source>For an exception fallback handler, the <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.Remaining%2A&gt;</ph> method should return zero.</source>
          <target state="translated">예외 대체 (fallback) 처리기의 경우는 <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer.Remaining%2A&gt;</ph> 메서드에서 0을 반환 해야 합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Text.DecoderFallbackBuffer.Reset">
          <source>Initializes all data and state information pertaining to this fallback buffer.</source>
          <target state="translated">이 대체 버퍼와 관련된 모든 데이터 및 상태 정보를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.DecoderFallbackBuffer.Reset">
          <source>After calling the <ph id="ph1">&lt;see cref="M:System.Text.DecoderFallbackBuffer.Reset" /&gt;</ph> method, the <ph id="ph2">&lt;see cref="P:System.Text.DecoderFallbackBuffer.Remaining" /&gt;</ph> property should return 0, the <ph id="ph3">&lt;see cref="M:System.Text.DecoderFallbackBuffer.GetNextChar" /&gt;</ph> method should return U+0000, and the <ph id="ph4">&lt;see cref="M:System.Text.DecoderFallbackBuffer.MovePrevious" /&gt;</ph> method should return <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">호출한 후의 <ph id="ph1">&lt;see cref="M:System.Text.DecoderFallbackBuffer.Reset" /&gt;</ph> 메서드를는 <ph id="ph2">&lt;see cref="P:System.Text.DecoderFallbackBuffer.Remaining" /&gt;</ph> 속성에 0을 반환 해야는 <ph id="ph3">&lt;see cref="M:System.Text.DecoderFallbackBuffer.GetNextChar" /&gt;</ph> 메서드에서 U + 0000을 반환 해야 및 <ph id="ph4">&lt;see cref="M:System.Text.DecoderFallbackBuffer.MovePrevious" /&gt;</ph> 메서드를 반환 하도록 <ph id="ph5">&lt;see langword="false" /&gt;</ph>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>