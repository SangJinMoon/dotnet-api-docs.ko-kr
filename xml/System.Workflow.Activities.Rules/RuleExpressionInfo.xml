<Type Name="RuleExpressionInfo" FullName="System.Workflow.Activities.Rules.RuleExpressionInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="60cdf563023073de8c57f53c28f3efaa9bbc7377" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37488101" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RuleExpressionInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RuleExpressionInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Activities.Rules.RuleExpressionInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class RuleExpressionInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class RuleExpressionInfo" />
  <TypeSignature Language="F#" Value="type RuleExpressionInfo = class" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Activities</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="97f27-101">
        <see cref="M:System.Workflow.Activities.Rules.IRuleExpression.Validate(System.Workflow.Activities.Rules.RuleValidation,System.Boolean)" /> 식의 <see cref="T:System.Workflow.Activities.Rules.IRuleExpression" /> 메서드에서 이 클래스의 인스턴스를 반환합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="97f27-101">An instance of this class is returned by the <see cref="M:System.Workflow.Activities.Rules.IRuleExpression.Validate(System.Workflow.Activities.Rules.RuleValidation,System.Boolean)" /> method of an <see cref="T:System.Workflow.Activities.Rules.IRuleExpression" /> expression.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97f27-102"><xref:System.Workflow.Activities.Rules.RuleExpressionInfo.ExpressionType%2A>의 <xref:System.Workflow.Activities.Rules.RuleExpressionInfo> 속성은 식의 반환 형식을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="97f27-102">The <xref:System.Workflow.Activities.Rules.RuleExpressionInfo.ExpressionType%2A> property on <xref:System.Workflow.Activities.Rules.RuleExpressionInfo> provides the return type of the expression.</span></span> <span data-ttu-id="97f27-103">예를 들어 이진 식을 계산했을 때는 부울 형식이 반환된다거나, 속성에 액세스하는 식은 정수 형식을 반환하게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="97f27-103">For example, a binary expression, when evaluated, has a return type of Boolean; or, an expression that accesses a property might return an integer type.</span></span>  
  
 <span data-ttu-id="97f27-104"><xref:System.Workflow.Activities.Rules.RuleExpressionInfo>의 정보를 사용하여 식 사용의 유효성을 검사할 수 있습니다</span><span class="sxs-lookup"><span data-stu-id="97f27-104">The information in the <xref:System.Workflow.Activities.Rules.RuleExpressionInfo> can be used to validate the use of the expression.</span></span> <span data-ttu-id="97f27-105">예를 들면 두 식 중 하나가 부울을 반환하는 경우에는 두 식을 비교하는 데 크기 비교 테스트를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="97f27-105">For example, a greater-than test cannot be used to compare two expressions if either returns a Boolean.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RuleExpressionInfo (Type expressionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type expressionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.RuleExpressionInfo.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (expressionType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RuleExpressionInfo(Type ^ expressionType);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Activities.Rules.RuleExpressionInfo : Type -&gt; System.Workflow.Activities.Rules.RuleExpressionInfo" Usage="new System.Workflow.Activities.Rules.RuleExpressionInfo expressionType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="expressionType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="expressionType">
          <span data-ttu-id="97f27-106">식의 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97f27-106">The <see cref="T:System.Type" /> of the expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97f27-107">
            <see cref="T:System.Workflow.Activities.Rules.RuleExpressionInfo" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97f27-107">Initializes a new instance of the <see cref="T:System.Workflow.Activities.Rules.RuleExpressionInfo" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpressionType">
      <MemberSignature Language="C#" Value="public Type ExpressionType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ExpressionType" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.Rules.RuleExpressionInfo.ExpressionType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExpressionType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ExpressionType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExpressionType : Type" Usage="System.Workflow.Activities.Rules.RuleExpressionInfo.ExpressionType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="97f27-108">식 유형을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97f27-108">Gets the type of the expression.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="97f27-109">식의 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97f27-109">The <see cref="T:System.Type" /> of the expression.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>