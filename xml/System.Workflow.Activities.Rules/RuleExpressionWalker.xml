<Type Name="RuleExpressionWalker" FullName="System.Workflow.Activities.Rules.RuleExpressionWalker">
  <TypeSignature Language="C#" Value="public static class RuleExpressionWalker" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit RuleExpressionWalker extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Activities.Rules.RuleExpressionWalker" />
  <TypeSignature Language="VB.NET" Value="Public Class RuleExpressionWalker" />
  <TypeSignature Language="C++ CLI" Value="public ref class RuleExpressionWalker abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="35156-101">식의 현재 동작을 자식 노드에 전파합니다.</span><span class="sxs-lookup"><span data-stu-id="35156-101">Propagates the current behavior in the expression to child nodes.</span></span> <span data-ttu-id="35156-102">이 클래스는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="35156-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35156-103">이 클래스는 모든 <xref:System.Workflow.Activities.Rules.IRuleExpression> 메서드가 자식 노드로 동작을 전파하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="35156-103">This class is used by all <xref:System.Workflow.Activities.Rules.IRuleExpression> methods to propagate behavior to child nodes.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AnalyzeUsage">
      <MemberSignature Language="C#" Value="public static void AnalyzeUsage (System.Workflow.Activities.Rules.RuleAnalysis analysis, System.CodeDom.CodeExpression expression, bool isRead, bool isWritten, System.Workflow.Activities.Rules.RulePathQualifier qualifier);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AnalyzeUsage(class System.Workflow.Activities.Rules.RuleAnalysis analysis, class System.CodeDom.CodeExpression expression, bool isRead, bool isWritten, class System.Workflow.Activities.Rules.RulePathQualifier qualifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.RuleExpressionWalker.AnalyzeUsage(System.Workflow.Activities.Rules.RuleAnalysis,System.CodeDom.CodeExpression,System.Boolean,System.Boolean,System.Workflow.Activities.Rules.RulePathQualifier)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AnalyzeUsage (analysis As RuleAnalysis, expression As CodeExpression, isRead As Boolean, isWritten As Boolean, qualifier As RulePathQualifier)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AnalyzeUsage(System::Workflow::Activities::Rules::RuleAnalysis ^ analysis, System::CodeDom::CodeExpression ^ expression, bool isRead, bool isWritten, System::Workflow::Activities::Rules::RulePathQualifier ^ qualifier);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="analysis" Type="System.Workflow.Activities.Rules.RuleAnalysis" />
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" />
        <Parameter Name="isRead" Type="System.Boolean" />
        <Parameter Name="isWritten" Type="System.Boolean" />
        <Parameter Name="qualifier" Type="System.Workflow.Activities.Rules.RulePathQualifier" />
      </Parameters>
      <Docs>
        <param name="analysis"><span data-ttu-id="35156-104">규칙 조건 및 작업에 사용되는 속성과 필드를 나타내는 기호가 저장된 <see cref="T:System.Workflow.Activities.Rules.RuleAnalysis" /> 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="35156-104">The <see cref="T:System.Workflow.Activities.Rules.RuleAnalysis" /> instance that stores symbols representing the properties and fields used by rule conditions and actions.</span></span></param>
        <param name="expression"><span data-ttu-id="35156-105">실행되는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="35156-105">The expression being executed.</span></span></param>
        <param name="isRead">
          <span data-ttu-id="35156-106"><see langword="true" />이 읽은 필드와 속성을 <see cref="T:System.Workflow.Activities.Rules.RuleAction" />에 추가하는 경우에는 <see cref="T:System.Workflow.Activities.Rules.RuleAnalysis" />이고, 그렇지 않은 경우에는 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="35156-106"><see langword="true" /> if fields and properties read by a <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> are to be added to <see cref="T:System.Workflow.Activities.Rules.RuleAnalysis" />; otherwise, <see langword="false" />.</span></span></param>
        <param name="isWritten">
          <span data-ttu-id="35156-107"><see langword="true" />이 작성한 필드와 속성을 <see cref="T:System.Workflow.Activities.Rules.RuleAction" />에 추가하는 경우에는 <see cref="T:System.Workflow.Activities.Rules.RuleAnalysis" />이고, 그렇지 않은 경우에는 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="35156-107"><see langword="true" /> if fields and properties written by a <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> are to be added to <see cref="T:System.Workflow.Activities.Rules.RuleAnalysis" />; otherwise, <see langword="false" />.</span></span></param>
        <param name="qualifier"><span data-ttu-id="35156-108">이 시점까지 확인된 필드 또는 속성의 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="35156-108">The path of a field or property determined up to this point.</span></span></param>
        <summary><span data-ttu-id="35156-109">식에서 사용된 필드와 속성을 식별하고 <see cref="T:System.Workflow.Activities.Rules.RuleAnalysis" /> 인스턴스에 기호로 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="35156-109">Identifies the fields and properties used by an expression and adds these as symbols to the <see cref="T:System.Workflow.Activities.Rules.RuleAnalysis" /> instance.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="35156-110"><paramref name="analysis" />이 null 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</span><span class="sxs-lookup"><span data-stu-id="35156-110"><paramref name="analysis" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public static System.CodeDom.CodeExpression Clone (System.CodeDom.CodeExpression originalExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CodeDom.CodeExpression Clone(class System.CodeDom.CodeExpression originalExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.RuleExpressionWalker.Clone(System.CodeDom.CodeExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clone (originalExpression As CodeExpression) As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::CodeDom::CodeExpression ^ Clone(System::CodeDom::CodeExpression ^ originalExpression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="originalExpression" Type="System.CodeDom.CodeExpression" />
      </Parameters>
      <Docs>
        <param name="originalExpression"><span data-ttu-id="35156-111">복제본의 기준이 되는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="35156-111">The expression that the clone is based on.</span></span></param>
        <summary><span data-ttu-id="35156-112">현재 <see cref="T:System.CodeDom.CodeExpression" />의 자식 노드에 대한 전체 복사본을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="35156-112">Creates a deep copy of the child nodes of the current <see cref="T:System.CodeDom.CodeExpression" />.</span></span></summary>
        <returns><span data-ttu-id="35156-113">이 인스턴스와 동일한 <see cref="T:System.CodeDom.CodeExpression" />입니다.</span><span class="sxs-lookup"><span data-stu-id="35156-113">A <see cref="T:System.CodeDom.CodeExpression" /> that is identical to this instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Decompile">
      <MemberSignature Language="C#" Value="public static void Decompile (System.Text.StringBuilder stringBuilder, System.CodeDom.CodeExpression expression, System.CodeDom.CodeExpression parentExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Decompile(class System.Text.StringBuilder stringBuilder, class System.CodeDom.CodeExpression expression, class System.CodeDom.CodeExpression parentExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.RuleExpressionWalker.Decompile(System.Text.StringBuilder,System.CodeDom.CodeExpression,System.CodeDom.CodeExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Decompile(System::Text::StringBuilder ^ stringBuilder, System::CodeDom::CodeExpression ^ expression, System::CodeDom::CodeExpression ^ parentExpression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720:AvoidTypeNamesInParameters", MessageId="0#")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringBuilder" Type="System.Text.StringBuilder" />
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" />
        <Parameter Name="parentExpression" Type="System.CodeDom.CodeExpression" />
      </Parameters>
      <Docs>
        <param name="stringBuilder"><span data-ttu-id="35156-114">변경할 수 있는 문자열이 있는 <see cref="T:System.Text.StringBuilder" />입니다.</span><span class="sxs-lookup"><span data-stu-id="35156-114">The <see cref="T:System.Text.StringBuilder" /> that contains the mutable string of characters.</span></span></param>
        <param name="expression"><span data-ttu-id="35156-115">현재 <see cref="T:System.CodeDom.CodeExpression" />입니다.</span><span class="sxs-lookup"><span data-stu-id="35156-115">The current <see cref="T:System.CodeDom.CodeExpression" />.</span></span></param>
        <param name="parentExpression"><span data-ttu-id="35156-116">부모 <see cref="T:System.CodeDom.CodeExpression" />입니다.</span><span class="sxs-lookup"><span data-stu-id="35156-116">The parent <see cref="T:System.CodeDom.CodeExpression" />.</span></span></param>
        <summary><span data-ttu-id="35156-117">식의 자식 노드를 문자열 형식으로 디컴파일합니다.</span><span class="sxs-lookup"><span data-stu-id="35156-117">Decompiles the child nodes of the expression into string form.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public static System.Workflow.Activities.Rules.RuleExpressionResult Evaluate (System.Workflow.Activities.Rules.RuleExecution execution, System.CodeDom.CodeExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Workflow.Activities.Rules.RuleExpressionResult Evaluate(class System.Workflow.Activities.Rules.RuleExecution execution, class System.CodeDom.CodeExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.RuleExpressionWalker.Evaluate(System.Workflow.Activities.Rules.RuleExecution,System.CodeDom.CodeExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Evaluate (execution As RuleExecution, expression As CodeExpression) As RuleExpressionResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Workflow::Activities::Rules::RuleExpressionResult ^ Evaluate(System::Workflow::Activities::Rules::RuleExecution ^ execution, System::CodeDom::CodeExpression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.Rules.RuleExpressionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="execution" Type="System.Workflow.Activities.Rules.RuleExecution" />
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" />
      </Parameters>
      <Docs>
        <param name="execution"><span data-ttu-id="35156-118">식을 실행할 <see cref="T:System.Workflow.Activities.Rules.RuleExecution" />입니다.</span><span class="sxs-lookup"><span data-stu-id="35156-118">The <see cref="T:System.Workflow.Activities.Rules.RuleExecution" /> to execute the expression.</span></span></param>
        <param name="expression"><span data-ttu-id="35156-119">실행할 <see cref="T:System.CodeDom.CodeExpression" />입니다.</span><span class="sxs-lookup"><span data-stu-id="35156-119">The <see cref="T:System.CodeDom.CodeExpression" /> to evaluate.</span></span></param>
        <summary><span data-ttu-id="35156-120">식과 모든 자식 식을 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="35156-120">Evaluates the expression and all child expressions.</span></span></summary>
        <returns><span data-ttu-id="35156-121">식 계산 결과를 나타내는 <see cref="T:System.Workflow.Activities.Rules.RuleExpressionResult" />입니다.</span><span class="sxs-lookup"><span data-stu-id="35156-121">The <see cref="T:System.Workflow.Activities.Rules.RuleExpressionResult" /> that indicates the result of the expression evaluation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="35156-122"><paramref name="execution" />이 null 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</span><span class="sxs-lookup"><span data-stu-id="35156-122"><paramref name="execution" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public static bool Match (System.CodeDom.CodeExpression firstExpression, System.CodeDom.CodeExpression secondExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Match(class System.CodeDom.CodeExpression firstExpression, class System.CodeDom.CodeExpression secondExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.RuleExpressionWalker.Match(System.CodeDom.CodeExpression,System.CodeDom.CodeExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Match (firstExpression As CodeExpression, secondExpression As CodeExpression) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Match(System::CodeDom::CodeExpression ^ firstExpression, System::CodeDom::CodeExpression ^ secondExpression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1062:ValidateArgumentsOfPublicMethods")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstExpression" Type="System.CodeDom.CodeExpression" />
        <Parameter Name="secondExpression" Type="System.CodeDom.CodeExpression" />
      </Parameters>
      <Docs>
        <param name="firstExpression"><span data-ttu-id="35156-123">비교할 첫 번째 <see cref="T:System.CodeDom.CodeExpression" />입니다.</span><span class="sxs-lookup"><span data-stu-id="35156-123">The first <see cref="T:System.CodeDom.CodeExpression" /> in the comparison.</span></span></param>
        <param name="secondExpression"><span data-ttu-id="35156-124">비교할 두 번째 <see cref="T:System.CodeDom.CodeExpression" />입니다.</span><span class="sxs-lookup"><span data-stu-id="35156-124">The second <see cref="T:System.CodeDom.CodeExpression" /> in the comparison.</span></span></param>
        <summary><span data-ttu-id="35156-125">현재 식과 자식 노드를 다른 식과 비교하여 같은지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="35156-125">Compares the current expression and child nodes to another expression to determine whether they are equal.</span></span></summary>
        <returns>
          <span data-ttu-id="35156-126">식이 동일하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="35156-126"><see langword="true" /> if the expressions are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public static System.Workflow.Activities.Rules.RuleExpressionInfo Validate (System.Workflow.Activities.Rules.RuleValidation validation, System.CodeDom.CodeExpression expression, bool isWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Workflow.Activities.Rules.RuleExpressionInfo Validate(class System.Workflow.Activities.Rules.RuleValidation validation, class System.CodeDom.CodeExpression expression, bool isWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.RuleExpressionWalker.Validate(System.Workflow.Activities.Rules.RuleValidation,System.CodeDom.CodeExpression,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Validate (validation As RuleValidation, expression As CodeExpression, isWritten As Boolean) As RuleExpressionInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Workflow::Activities::Rules::RuleExpressionInfo ^ Validate(System::Workflow::Activities::Rules::RuleValidation ^ validation, System::CodeDom::CodeExpression ^ expression, bool isWritten);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.Rules.RuleExpressionInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validation" Type="System.Workflow.Activities.Rules.RuleValidation" />
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" />
        <Parameter Name="isWritten" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="validation"><span data-ttu-id="35156-127">유효성 검사 프로세스를 관리하기 위한 <see cref="T:System.Workflow.Activities.Rules.RuleValidation" />입니다.</span><span class="sxs-lookup"><span data-stu-id="35156-127">The <see cref="T:System.Workflow.Activities.Rules.RuleValidation" /> to manage the validation process.</span></span></param>
        <param name="expression"><span data-ttu-id="35156-128">실행할 <see cref="T:System.CodeDom.CodeExpression" />입니다.</span><span class="sxs-lookup"><span data-stu-id="35156-128">The <see cref="T:System.CodeDom.CodeExpression" /> to evaluate.</span></span></param>
        <param name="isWritten">
          <span data-ttu-id="35156-129"><see cref="T:System.Workflow.Activities.Rules.RuleAction" />이 기록한 필드와 속성이 <see cref="T:System.Workflow.Activities.Rules.RuleAnalysis" />에 의해 저장되는 경우에는 <see langword="true" />이고, 그렇지 않은 경우에는 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="35156-129"><see langword="true" /> if fields and properties written by a <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> are stored in by <see cref="T:System.Workflow.Activities.Rules.RuleAnalysis" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="35156-130">식과 자식 노드가 올바로 구성되고 오류가 없는지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="35156-130">Verifies that the expression and child nodes are configured correctly and has no errors.</span></span></summary>
        <returns><span data-ttu-id="35156-131">
          <see cref="T:System.Workflow.Activities.Rules.RuleExpressionInfo" />에 대한 <see cref="T:System.CodeDom.CodeExpression" />입니다.</span><span class="sxs-lookup"><span data-stu-id="35156-131">The <see cref="T:System.Workflow.Activities.Rules.RuleExpressionInfo" /> for the <see cref="T:System.CodeDom.CodeExpression" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="35156-132"><paramref name="validation" />이 null 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</span><span class="sxs-lookup"><span data-stu-id="35156-132"><paramref name="validation" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="35156-133"><paramref name="expression" />이 null이고 <see cref="T:System.Workflow.Activities.Rules.RuleValidation" /> 개체의 오류 컬렉션이 null 참조(<see langword="Nothing" />)인 경우</span><span class="sxs-lookup"><span data-stu-id="35156-133">The <paramref name="expression" /> is null and the errors collection on the <see cref="T:System.Workflow.Activities.Rules.RuleValidation" /> object is a null reference (<see langword="Nothing" />).</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>