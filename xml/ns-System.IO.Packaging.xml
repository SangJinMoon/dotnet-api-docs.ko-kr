<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ns-System.IO.Packaging.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5a83ea4b-dd12-480b-bfc8-267272ef1864f69cd1007240704fd34332575d8c47779bbec550.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f69cd1007240704fd34332575d8c47779bbec550</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">df6cf590aa3087f6c7c202712eee781c6a3c8f96</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/10/2018</xliffext:ms.lasthandoff>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides classes that support storage of multiple data objects in a single container.</source>
          <target state="translated">단일 컨테이너에 여러 개의 데이터 개체를 저장할 수 있도록 지원하는 클래스를 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> is an abstract class that can be used to organize objects into a single entity of a defined physical format for portability and efficient access.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> 개체의 이식성 및 효율적인 액세스에 대 한 정의 된 실제 형식 단일 엔터티를 구성 하는 데 사용할 수 있는 추상 클래스가입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>A ZIP file is the primary physical format for the <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph>.</source>
          <target state="translated">ZIP 파일은 기본 실제 형식에 대 한는 <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Other <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> implementations might use other physical formats such as an XML document, a database, or Web service.</source>
          <target state="translated">다른 <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> 구현 수 있는 XML 문서를 데이터베이스와 같은 다른 물리적 형식을 사용 하 여 또는 웹 서비스입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Like a file system, items contained in a <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> are referenced in a hierarchical organization of folders and files.</source>
          <target state="translated">같은 파일 시스템에 포함 된 항목은 <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> 파일과 폴더의 계층적 구성에서 참조 됩니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> is an abstract class, the <ph id="ph2">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> derived class is used as default by the <ph id="ph3">&lt;xref:System.IO.Packaging.Package.Open%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">하지만 <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> 클래스는 추상 클래스는 <ph id="ph2">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> 파생된 클래스에서 기본적으로 사용 됩니다는 <ph id="ph3">&lt;xref:System.IO.Packaging.Package.Open%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph> ("part") is the abstract class that represents an object that is stored in a <ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph> ("파트")에 저장 된 개체를 나타내는 추상 클래스는는 <ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.IO.Packaging.PackageRelationship&gt;</ph> ("relationship") defines an association between a source <ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph> or <ph id="ph3">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph> and a target object.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.IO.Packaging.PackageRelationship&gt;</ph> ("관계")을 원본 간의 연결을 정의 <ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph> 와 대상 개체입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.IO.Packaging.PackageRelationship&gt;</ph> can be one of two types, each of which can be one of two forms:</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.IO.Packaging.PackageRelationship&gt;</ph> 두 형식 중 하나일 수 있으며 각 두 형식 중 하나일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Package-level relationship (created by <ph id="ph1">&lt;xref:System.IO.Packaging.Package.CreateRelationship%2A?displayProperty=nameWithType&gt;</ph>)</source>
          <target state="translated">패키지 수준 관계 (에서 만든 <ph id="ph1">&lt;xref:System.IO.Packaging.Package.CreateRelationship%2A?displayProperty=nameWithType&gt;</ph>)</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Between a <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> and a target part in the package.</source>
          <target state="translated">사이 <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> 및 패키지의 대상 파트.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Between a <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> and a target resource outside the package.</source>
          <target state="translated">사이 <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> 및 패키지 외부의 대상 리소스입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Part-level relationship (created by <ph id="ph1">&lt;xref:System.IO.Packaging.PackagePart.CreateRelationship%2A?displayProperty=nameWithType&gt;</ph>)</source>
          <target state="translated">파트 수준 관계 (에서 만든 <ph id="ph1">&lt;xref:System.IO.Packaging.PackagePart.CreateRelationship%2A?displayProperty=nameWithType&gt;</ph>)</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Between a source <ph id="ph1">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph> and another target part in the package.</source>
          <target state="translated">간의 <ph id="ph1">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph> 및 패키지의 다른 대상 파트.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Between a source <ph id="ph1">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph> and a target resource outside the package.</source>
          <target state="translated">간의 <ph id="ph1">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph> 및 패키지 외부의 대상 리소스입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The relationship's source <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> or source <ph id="ph2">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph> is considered the "owner" of the relationship.</source>
          <target state="translated">관계의 소스 <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> 또는 소스 <ph id="ph2">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph> 관계의 "소유자"로 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the source object is deleted, all the relationships owned by the source object are also deleted.</source>
          <target state="translated">소스 개체가 삭제 된 원본 개체가 소유 하는 모든 관계가 삭제 됩니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>The process of creating or deleting a relationship does not physically change either the source or target objects in any way.</source>
          <target state="translated">만들기 또는 관계를 삭제 하는 과정은 어떤 방식으로든에서 원본 또는 대상 개체를 물리적으로 변경 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.IO.Packaging.PackageDigitalSignature&gt;</ph> ("digital signature") is a composition of parts and relationships representing a digital signature included with a <ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.IO.Packaging.PackageDigitalSignature&gt;</ph> ("디지털 서명")에 포함 된 디지털 서명이 나타내는 관계와 파트의 컴퍼지션은는 <ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>The digital signature identifies the originator and validates that the signed parts and relationships contained in the <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> have not been modified.</source>
          <target state="translated">디지털 서명은 출처를 식별 하 고 서명 된 파트 및 관계에 포함 하는 유효성을 검사는 <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> 수정 되지 않은 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Packages also support Digital Rights Management (DRM), which allows content elements in a <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> to be encrypted with specific access rights granted to authorized users.</source>
          <target state="translated">패키지에는 또한 관리 DRM (디지털 권한)을 콘텐츠 요소에 지원는 <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> 권한 있는 사용자에 게 부여 하는 특정 액세스 권한을 가진 암호화 해야 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Based on the <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> architecture, an <ph id="ph2">&lt;xref:System.Windows.Xps.Packaging.XpsDocument&gt;</ph> is a package type designed for storing documents based on the open <bpt id="p1">[</bpt>XML Paper Specification (XPS)<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=65761)</ept>.</source>
          <target state="translated">에 따라는 <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> 아키텍처는 <ph id="ph2">&lt;xref:System.Windows.Xps.Packaging.XpsDocument&gt;</ph> 열기에 따라 문서를 저장 하기 위한 패키지 형식이 <bpt id="p1">[</bpt>XPS XML Paper Specification ()<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=65761)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Windows Presentation Foundation uses packages to store content, resources, and relationships for pages and documents using a standard ZIP file by default.</source>
          <target state="translated">Windows Presentation Foundation 콘텐츠, 리소스 및 페이지와 기본적으로 표준 ZIP 파일을 사용 하 여 문서에 대 한 관계를 저장 하려면 패키지를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>As with any ZIP file, your application can use the <ph id="ph1">&lt;xref:System.IO.Packaging&gt;</ph> classes to store and optionally protect any type or number of data files in a single efficient-to-access container.</source>
          <target state="translated">다른 ZIP 파일과 응용 프로그램 사용 하 여 수는 <ph id="ph1">&lt;xref:System.IO.Packaging&gt;</ph> 클래스를 저장 하 고 필요에 따라에 임의의 유형 또는 단일 효율적으로 액세스 컨테이너의 데이터 파일 수를 보호 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the Open Packaging Conventions (OPC) specification, available for download at the XPS section of <bpt id="p1">[</bpt>Windows Hardware Developer Central<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>.</source>
          <target state="translated">자세한 내용은 참조 열기 패키징 규칙 (OPC) 사양의 XPS 섹션에서 다운로드할 수 <bpt id="p1">[</bpt>Windows 하드웨어 개발자 센터<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>