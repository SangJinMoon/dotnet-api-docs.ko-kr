<Type Name="PropertyValueUIItemInvokeHandler" FullName="System.Drawing.Design.PropertyValueUIItemInvokeHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="278e34e1ce07c81f9bcf7455f811bf2a01ec4538" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30406267" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void PropertyValueUIItemInvokeHandler(ITypeDescriptorContext context, PropertyDescriptor descriptor, PropertyValueUIItem invokedItem);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed PropertyValueUIItemInvokeHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Design.PropertyValueUIItemInvokeHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub PropertyValueUIItemInvokeHandler(context As ITypeDescriptorContext, descriptor As PropertyDescriptor, invokedItem As PropertyValueUIItem)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void PropertyValueUIItemInvokeHandler(ITypeDescriptorContext ^ context, PropertyDescriptor ^ descriptor, PropertyValueUIItem ^ invokedItem);" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
    <Parameter Name="descriptor" Type="System.ComponentModel.PropertyDescriptor" />
    <Parameter Name="invokedItem" Type="System.Drawing.Design.PropertyValueUIItem" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="context">두 번 클릭한 아이콘과 연결된 속성의 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</param>
    <param name="descriptor">두 번 클릭한 아이콘과 연결된 속성입니다.</param>
    <param name="invokedItem">두 번 클릭한 아이콘과 연결된 <see cref="T:System.Drawing.Design.PropertyValueUIItem" />입니다.</param>
    <summary>
      <see cref="P:System.Drawing.Design.PropertyValueUIItem.InvokeHandler" />의 <see cref="T:System.Drawing.Design.PropertyValueUIItem" /> 이벤트를 처리할 메서드를 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 속성 창에서 아이콘을 두 번 클릭 하면 발생 합니다는 <xref:System.Drawing.Design.PropertyValueUIItem.InvokeHandler%2A> 의 이벤트는 <xref:System.Drawing.Design.PropertyValueUIItem> 와 연결 된 아이콘입니다. <xref:System.Drawing.Design.PropertyValueUIItem.InvokeHandler%2A> 이벤트는 일반적으로 사용자 인터페이스 (UI) 속성의 값을 편집을 시작 합니다. 추가 <xref:System.Drawing.Design.PropertyValueUIItemInvokeHandler> 에 <xref:System.Drawing.Design.PropertyValueUIItem.InvokeHandler%2A> 의 속성을 <xref:System.Drawing.Design.PropertyValueUIItem> 속성 이름 옆에 표시 되는 아이콘을 두 번 클릭할 때 적절 한 동작을 수행 하는 이벤트 처리기를 할당 하 합니다.  
  
 <xref:System.Drawing.Design.PropertyValueUIItemInvokeHandler> 대리자를 만들 때, 이벤트를 처리할 메서드를 식별합니다. 이벤트를 이벤트 처리기와 연결하려면 대리자의 인스턴스를 해당 이벤트에 추가합니다. 대리자를 제거하지 않는 경우 이벤트가 발생할 때마다 이벤트 처리기가 호출됩니다. 이벤트 처리기 대리자에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 제공 된 <xref:System.Drawing.Design.PropertyValueUIItem> 명명 된 구성 요소의 모든 속성에 대 한 개체 `HorizontalMargin` 또는 `VerticalMargin`합니다. <xref:System.Drawing.Design.PropertyValueUIItem> 이미지, 도구 설명 및 속성에 대 한 이미지가 클릭 될 때 메시지 상자를 표시 하는 이벤트 처리기를 제공 하는 이러한 속성에 대 한 합니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Drawing.Design.IPropertyValueUIService> 인터페이스입니다.  
  
 [!code-cpp[IPropertyValueUIServiceExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/IPropertyValueUIServiceExample/CPP/propertyuicomponent.cpp#2)]
 [!code-csharp[IPropertyValueUIServiceExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/IPropertyValueUIServiceExample/CS/propertyuicomponent.cs#2)]
 [!code-vb[IPropertyValueUIServiceExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IPropertyValueUIServiceExample/VB/propertyuicomponent.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
    <altmember cref="T:System.Drawing.Design.PropertyValueUIItem" />
    <altmember cref="T:System.Drawing.Design.IPropertyValueUIService" />
  </Docs>
</Type>