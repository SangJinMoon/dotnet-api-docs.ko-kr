<Type Name="UITypeEditor" FullName="System.Drawing.Design.UITypeEditor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c5c5aa98cf87f7dac7de8548fcab85d76b9c2dfd" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30409607" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class UITypeEditor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi UITypeEditor extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Design.UITypeEditor" />
  <TypeSignature Language="VB.NET" Value="Public Class UITypeEditor" />
  <TypeSignature Language="C++ CLI" Value="public ref class UITypeEditor" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>값 편집기를 디자인하는 데 사용할 수 있는 기본 클래스를 제공합니다. 값 편집기는 지원되는 데이터 형식 개체의 값을 나타내고 편집할 수 있는 사용자 인터페이스를 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Design.UITypeEditor> 클래스에서 파생 하 고 디자인 타임 환경에 대 한 사용자 지정 형식 편집기를 구현 하는 확장할 수 있는 기본 클래스를 제공 합니다. 사용자 지정 형식 편집기와 상호 작용 하는 일반적으로 <xref:System.Windows.Forms.PropertyGrid> 제어 합니다.  
  
 사용자 지정 형식 편집기는 텍스트 상자 값 편집기를 효과적으로 특정 형식의 값을 선택 하는 데 충분 하지 않은 경우에 유용 합니다.  
  
 사용자 지정 디자인 타임 UI 형식 편집기를 구현 하려면 다음 단계를 수행 해야 합니다.  
  
-   <xref:System.Drawing.Design.UITypeEditor>에서 파생된 클래스를 정의합니다.  
  
-   재정의 <xref:System.Drawing.Design.UITypeEditor.EditValue%2A> 사용자 인터페이스, 사용자 입력된 처리 및 값 할당을 처리 하는 메서드.  
  
-   재정의 <xref:System.Drawing.Design.UITypeEditor.GetEditStyle%2A> 메서드를 편집기에서 사용할 편집기 스타일의 형식 속성 창에 게 알립니다.  
  
 다음 단계를 수행 하 여 속성 창에서 값의 표시를 그리기 위한 추가 지원을 추가할 수 있습니다.  
  
-   재정의 <xref:System.Drawing.Design.UITypeEditor.GetPaintValueSupported%2A> 메서드를 나타내는 편집기에서는 표시 값의 표현을 지원 합니다.  
  
-   재정의 <xref:System.Drawing.Design.UITypeEditor.PaintValue%2A> 메서드는 값의 표현 표시 기능을 구현 합니다.  
  
-   재정의 <xref:System.Drawing.Design.UITypeEditor> 편집기 초기화 동작을 포함 해야 하는 경우 생성자 메서드.  
  
> [!NOTE]
>  <xref:System.Drawing.Design.UITypeEditor> 클래스 오른쪽에서 왼쪽 (오른쪽에서 왼쪽) 레이아웃을 지원 하지 않습니다.  
  
 디자인 타임 지원 향상에 대 한 자세한 내용은 참조 [디자인 타임 지원 확장](http://msdn.microsoft.com/library/d6ac8a6a-42fd-4bc8-bf33-b212811297e2)합니다. 구현에 대 한 자세한 내용은 <xref:System.Drawing.Design.UITypeEditor>, 참조 [사용자 인터페이스 형식 편집기 개요](http://msdn.microsoft.com/library/f068b4ea-6e8c-4c0b-aefd-188b337240da)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 것을 보여 줍니다는 <xref:System.Drawing.Design.UITypeEditor> 정수, double, 연관 될 수 또는 사용 하 여 속성 float는 <xref:System.ComponentModel.EditorAttribute> 디자인 모드에서 속성 창에서 각도 선택 인터페이스를 제공 합니다. 사용 하 여이 예제는 <xref:System.Windows.Forms.Design.IWindowsFormsEditorService> 디자인 모드에서 속성 창에서 드롭다운 컨트롤을 표시 하는 인터페이스입니다. 코드를 컴파일하고 어셈블리를 사용 하 여 도구 상자에 추가 **도구 상자 사용자 지정** 명령을 **도구** Visual Studio의 메뉴. 인스턴스를 만들고는 `AngleTestControl` 각도 속성 편집기를 사용 하 여 속성을 구성 하려면 속성 창에서 옆에 있는 드롭 다운 단추를 클릭 합니다.  
  
 [!code-cpp[AngleEditor#1](~/samples/snippets/cpp/VS_Snippets_Winforms/AngleEditor/CPP/angleeditor.cpp#1)]
 [!code-csharp[AngleEditor#1](~/samples/snippets/csharp/VS_Snippets_Winforms/AngleEditor/CS/angleeditor.cs#1)]
 [!code-vb[AngleEditor#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AngleEditor/VB/angleeditor.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.NamedPermissionSet">시스템 리소스에 대 한 전체 액세스 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />, <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />합니다. 연결 된 상태:</permission>
    <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
    <altmember cref="T:System.IServiceProvider" />
    <altmember cref="T:System.Windows.Forms.PropertyGrid" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UITypeEditor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.UITypeEditor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UITypeEditor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Drawing.Design.UITypeEditor" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="EditValue">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle" /> 메서드에 표시된 편집기 스타일을 사용하여 지정된 개체의 값을 편집합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EditValue">
      <MemberSignature Language="C#" Value="public object EditValue (IServiceProvider provider, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object EditValue(class System.IServiceProvider provider, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function EditValue (provider As IServiceProvider, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ EditValue(IServiceProvider ^ provider, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="provider">이 편집기에서 서비스를 가져오는 데 사용할 수 있는 <see cref="T:System.IServiceProvider" />입니다.</param>
        <param name="value">편집할 개체입니다.</param>
        <summary>
          <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle" /> 메서드에 표시된 편집기 스타일을 사용하여 지정된 개체의 값을 편집합니다.</summary>
        <returns>개체의 새 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 값 편집을 위해 사용자 인터페이스를 시작 하며 사용자가이 편집기의 값을 편집 하도록 구성 되어 있는지 형식의 값을 편집 하려고 할 때 속성 창에서 호출 됩니다. 편집기에서 필요한 모든 서비스를 가져올 수 있도록 서비스 공급자가 제공 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="EditValue">
      <MemberSignature Language="C#" Value="public virtual object EditValue (System.ComponentModel.ITypeDescriptorContext context, IServiceProvider provider, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EditValue(class System.ComponentModel.ITypeDescriptorContext context, class System.IServiceProvider provider, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.UITypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EditValue (context As ITypeDescriptorContext, provider As IServiceProvider, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ EditValue(System::ComponentModel::ITypeDescriptorContext ^ context, IServiceProvider ^ provider, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="provider" Type="System.IServiceProvider" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">추가 컨텍스트 정보를 얻는 데 사용할 수 있는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</param>
        <param name="provider">이 편집기에서 서비스를 가져오는 데 사용할 수 있는 <see cref="T:System.IServiceProvider" />입니다.</param>
        <param name="value">편집할 개체입니다.</param>
        <summary>
          <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle" /> 메서드에 표시된 편집기 스타일을 사용하여 지정된 개체의 값을 편집합니다.</summary>
        <returns>개체의 새 값입니다. 개체의 값을 변경하지 않은 경우 여기서는 전달된 것과 동일한 개체를 반환해야 합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 편집기에서 필요한 모든 서비스를 가져올 수 있도록 서비스 공급자가 제공 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEditStyle">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)" /> 메서드에서 사용하는 편집기 스타일을 가져옵니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEditStyle">
      <MemberSignature Language="C#" Value="public System.Drawing.Design.UITypeEditorEditStyle GetEditStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Design.UITypeEditorEditStyle GetEditStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.UITypeEditor.GetEditStyle" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEditStyle () As UITypeEditorEditStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Design::UITypeEditorEditStyle GetEditStyle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Design.UITypeEditorEditStyle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)" /> 메서드에서 사용하는 편집기 스타일을 가져옵니다.</summary>
        <returns>현재 <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" />에서 사용하는 편집기 스타일을 나타내는 <see cref="T:System.Drawing.Design.UITypeEditor" /> 열거형 값입니다. 기본적으로 이 메서드는 <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />을 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Drawing.Design.UITypeEditor> 재정의 하며이 메서드를 구현 하지 <xref:System.Drawing.Design.UITypeEditor.GetEditStyle%2A> 돌아갑니다 <xref:System.Drawing.Design.UITypeEditorEditStyle.None> 기본적으로 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Design.UITypeEditorEditStyle" />
      </Docs>
    </Member>
    <Member MemberName="GetEditStyle">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Design.UITypeEditorEditStyle GetEditStyle (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Drawing.Design.UITypeEditorEditStyle GetEditStyle(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.UITypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEditStyle (context As ITypeDescriptorContext) As UITypeEditorEditStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Drawing::Design::UITypeEditorEditStyle GetEditStyle(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Design.UITypeEditorEditStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">추가 컨텍스트 정보를 얻는 데 사용할 수 있는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</param>
        <summary>
          <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)" /> 메서드에서 사용하는 편집기 스타일을 가져옵니다.</summary>
        <returns>
          <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 메서드에서 사용하는 편집기 스타일을 나타내는 <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)" /> 값입니다. <see cref="T:System.Drawing.Design.UITypeEditor" />에서 이 메서드를 지원하지 않으면 <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle" />이 <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />을 반환합니다.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Drawing.Design.UITypeEditorEditStyle" />
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPaintValueSupported">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>이 편집기에서 개체 값 표현를 칠할 수 있는지 여부를 나타냅니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPaintValueSupported">
      <MemberSignature Language="C#" Value="public bool GetPaintValueSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetPaintValueSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.UITypeEditor.GetPaintValueSupported" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPaintValueSupported () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetPaintValueSupported();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 편집기에서 개체 값 표현를 칠할 수 있는지 여부를 나타냅니다.</summary>
        <returns>
          <see cref="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)" />이 구현되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)" />
      </Docs>
    </Member>
    <Member MemberName="GetPaintValueSupported">
      <MemberSignature Language="C#" Value="public virtual bool GetPaintValueSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetPaintValueSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.UITypeEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPaintValueSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetPaintValueSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">추가 컨텍스트 정보를 얻는 데 사용할 수 있는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />입니다.</param>
        <summary>지정된 컨텍스트에서 지정된 컨텍스트 내의 개체 값 표현를 칠할 수 있는지 여부를 나타냅니다.</summary>
        <returns>
          <see cref="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)" />이 구현되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)" />
      </Docs>
    </Member>
    <Member MemberName="IsDropDownResizable">
      <MemberSignature Language="C#" Value="public virtual bool IsDropDownResizable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDropDownResizable" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Design.UITypeEditor.IsDropDownResizable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsDropDownResizable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsDropDownResizable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>드롭다운 편집기를 사용자가 크기 조정할 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>
          드롭다운 편집기의 크기를 조정할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="PaintValue">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>개체 값 표현를 칠합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PaintValue">
      <MemberSignature Language="C#" Value="public virtual void PaintValue (System.Drawing.Design.PaintValueEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PaintValue(class System.Drawing.Design.PaintValueEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub PaintValue (e As PaintValueEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PaintValue(System::Drawing::Design::PaintValueEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Drawing.Design.PaintValueEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">칠할 대상과 칠할 위치를 나타내는 <see cref="T:System.Drawing.Design.PaintValueEventArgs" />입니다.</param>
        <summary>지정된 <see cref="T:System.Drawing.Design.PaintValueEventArgs" />를 사용하여 개체 값 표현를 칠합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 지정된 된 사각형의 경계 내에서 편집기를 그리면 합니다. 이 사각형 내에서 값의 표시를 그리는 데 속성 창의 영역을 보여 줍니다.  
  
 부터는 [!INCLUDE[net_v46](~/includes/net-v46-md.md)], 지정 된 사각형 <xref:System.Drawing.Design.PaintValueEventArgs.Bounds%2A> app.config 파일에 다음 항목이 포함 되어 있으면 시스템 DPI 설정에 따라 조정 됩니다.  
  
```  
<appSettings>  
  <add key="EnableWindowsFormsHighDpiAutoResizing" value="true" />  
</appSettings>  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="PaintValue">
      <MemberSignature Language="C#" Value="public void PaintValue (object value, System.Drawing.Graphics canvas, System.Drawing.Rectangle rectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PaintValue(object value, class System.Drawing.Graphics canvas, valuetype System.Drawing.Rectangle rectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PaintValue(System::Object ^ value, System::Drawing::Graphics ^ canvas, System::Drawing::Rectangle rectangle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="canvas" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="value">이 형식 편집기에서 값을 표시할 개체입니다.</param>
        <param name="canvas">개체 값 표현를 칠할 그리기 캔버스입니다.</param>
        <param name="rectangle">해당 경계 내에 값을 칠할 <see cref="T:System.Drawing.Rectangle" />입니다.</param>
        <summary>지정된 개체의 값 표시를 지정된 캔버스에 칠합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 지정된 된 사각형의 경계 내에서 편집기를 그리면 합니다. 이 사각형 내에서 값의 표시를 그리는 데 속성 창의 영역을 보여 줍니다.  
  
 부터는 [!INCLUDE[net_v46](~/includes/net-v46-md.md)], 지정 된 사각형 <xref:System.Drawing.Design.PaintValueEventArgs.Bounds%2A> app.config 파일에 다음 항목이 포함 되어 있으면 시스템 DPI 설정에 따라 조정 됩니다.  
  
```  
<appSettings>  
  <add key="EnableWindowsFormsHighDpiAutoResizing" value="true" />  
</appSettings>  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>