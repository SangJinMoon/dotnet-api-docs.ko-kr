<Type Name="DrawingVisual" FullName="System.Windows.Media.DrawingVisual">
  <TypeSignature Language="C#" Value="public class DrawingVisual : System.Windows.Media.ContainerVisual" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DrawingVisual extends System.Windows.Media.ContainerVisual" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.DrawingVisual" />
  <TypeSignature Language="VB.NET" Value="Public Class DrawingVisual&#xA;Inherits ContainerVisual" />
  <TypeSignature Language="C++ CLI" Value="public ref class DrawingVisual : System::Windows::Media::ContainerVisual" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.ContainerVisual</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="7d7cc-101"><see cref="T:System.Windows.Media.DrawingVisual" />은 화면에 벡터 그래픽을 렌더링하는 데 사용할 수 있는 시각적 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="7d7cc-101"><see cref="T:System.Windows.Media.DrawingVisual" /> is a visual object that can be used to render vector graphics on the screen.</span></span> <span data-ttu-id="7d7cc-102">콘텐츠는 시스템에서 유지됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d7cc-102">The content is persisted by the system.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d7cc-103"><xref:System.Windows.Media.DrawingVisual> 도형, 이미지 또는 텍스트를 렌더링 하는 데 사용 되는 간단한 그리기 클래스가입니다.</span><span class="sxs-lookup"><span data-stu-id="7d7cc-103"><xref:System.Windows.Media.DrawingVisual> is a lightweight drawing class that is used to render shapes, images, or text.</span></span> <span data-ttu-id="7d7cc-104">이 클래스 레이아웃, 입력, 포커스 또는 성능을 향상 시키는 이벤트 처리를 제공 하지 않기 때문에 간단한 클래스로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7d7cc-104">This class is considered lightweight because it does not provide layout, input, focus, or event handling, which improves its performance.</span></span> <span data-ttu-id="7d7cc-105">이러한 이유 때문에 그리기는 배경 및 클립 아트에 적합합니다.</span><span class="sxs-lookup"><span data-stu-id="7d7cc-105">For this reason, drawings are ideal for backgrounds and clip art.</span></span>  
  
 <span data-ttu-id="7d7cc-106">사용 하려면 <xref:System.Windows.Media.DrawingVisual> 개체를 개체에 대 한 호스트 컨테이너를 만들어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d7cc-106">In order to use <xref:System.Windows.Media.DrawingVisual> objects, you need to create a host container for the objects.</span></span> <span data-ttu-id="7d7cc-107">컨테이너 개체에서 파생 되어야 합니다는 <xref:System.Windows.FrameworkElement> 를 지 원하는 레이아웃 및 이벤트 처리를 제공 하는 클래스는 <xref:System.Windows.Media.DrawingVisual> 클래스를 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="7d7cc-107">The host container object must be derived from the <xref:System.Windows.FrameworkElement> class, which provides the layout and event handling support that the <xref:System.Windows.Media.DrawingVisual> class does not support.</span></span> <span data-ttu-id="7d7cc-108">자식 개체를 포함 하는 것이 주요 목적 이므로 호스트 컨테이너 개체에는 시각적 속성을 표시 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="7d7cc-108">The host container object does not display any visual properties, since its main purpose is to contain child objects.</span></span> <span data-ttu-id="7d7cc-109">자세한 내용은 [DrawingVisual 개체 사용](~/docs/framework/wpf/graphics-multimedia/using-drawingvisual-objects.md)을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="7d7cc-109">For more information, see [Using DrawingVisual Objects](~/docs/framework/wpf/graphics-multimedia/using-drawingvisual-objects.md).</span></span>  
  
 <span data-ttu-id="7d7cc-110">만드는 방법을 보여 주는 전체 예제는 <xref:System.Windows.Media.DrawingVisual> 호스트 컨테이너를 사용 하 여 개체 참조는 [적중 테스트를 사용 하 여 DrawingVisuals 샘플](http://go.microsoft.com/fwlink/?LinkID=159994) 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d7cc-110">For a complete example showing how to create <xref:System.Windows.Media.DrawingVisual> objects with a host container, see the [Hit Test Using DrawingVisuals Sample](http://go.microsoft.com/fwlink/?LinkID=159994) .</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DrawingVisual ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DrawingVisual.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DrawingVisual();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7d7cc-111"><see cref="T:System.Windows.Media.DrawingVisual" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="7d7cc-111">Initializes a new instance of the <see cref="T:System.Windows.Media.DrawingVisual" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d7cc-112">만들 때 한 <xref:System.Windows.Media.DrawingVisual> 개체를 그리기 내용이 없는 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d7cc-112">When you create a <xref:System.Windows.Media.DrawingVisual> object, it has no drawing content.</span></span> <span data-ttu-id="7d7cc-113">개체의 그리기 컨텍스트를 검색 하 고을 그려 하 여 텍스트, 그래픽 또는 이미지 콘텐츠를 추가할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7d7cc-113">You can add text, graphic, or image content by retrieving the drawing context of the object and drawing into it.</span></span> <span data-ttu-id="7d7cc-114">그리기 컨텍스트 호출에서 반환 되는 <xref:System.Windows.Media.DrawingVisual.RenderOpen%2A> 의 메서드는 <xref:System.Windows.Media.DrawingVisual> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="7d7cc-114">A drawing context is returned by calling the <xref:System.Windows.Media.DrawingVisual.RenderOpen%2A> method of a <xref:System.Windows.Media.DrawingVisual> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d7cc-115">다음 예제에서는 <xref:System.Windows.Media.DrawingVisual> 개체가 만들어지고 해당 그리기 컨텍스트로 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="7d7cc-115">In the following example, a <xref:System.Windows.Media.DrawingVisual> object is created, and a rectangle is drawn into its drawing context.</span></span> <span data-ttu-id="7d7cc-116">호출 해야 하는 통지는 <xref:System.Windows.Media.DrawingContext.Close%2A> 의 메서드는 <xref:System.Windows.Media.DrawingContext> 그리기 콘텐츠를 유지 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d7cc-116">Notice that you must call the <xref:System.Windows.Media.DrawingContext.Close%2A> method of the <xref:System.Windows.Media.DrawingContext> to persist drawing content.</span></span>  
  
 [!code-csharp[DrawingVisualSample#101](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingVisualSample/CSharp/Window1.xaml.cs#101)]
 [!code-vb[DrawingVisualSample#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingVisualSample/visualbasic/window1.xaml.vb#101)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Drawing">
      <MemberSignature Language="C#" Value="public System.Windows.Media.DrawingGroup Drawing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.DrawingGroup Drawing" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.DrawingVisual.Drawing" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Drawing As DrawingGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::DrawingGroup ^ Drawing { System::Windows::Media::DrawingGroup ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.DrawingGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d7cc-117"><see cref="T:System.Windows.Media.DrawingVisual" /> 개체의 그리기 내용을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="7d7cc-117">Gets the drawing content of the <see cref="T:System.Windows.Media.DrawingVisual" /> object.</span></span></summary>
        <value><span data-ttu-id="7d7cc-118"><see cref="T:System.Windows.Media.DrawingGroup" />에서 <see cref="T:System.Windows.Media.Drawing" /> 개체의 컬렉션을 나타내는 <see cref="T:System.Windows.Media.DrawingVisual" /> 형식의 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="7d7cc-118">Gets a value of type <see cref="T:System.Windows.Media.DrawingGroup" /> that represents the collection of <see cref="T:System.Windows.Media.Drawing" /> objects in the <see cref="T:System.Windows.Media.DrawingVisual" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d7cc-119">시각적 개체는 벡터 그래픽 명령 목록으로 렌더링 데이터를 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d7cc-119">A visual object stores its rendering data as a vector graphics instruction list.</span></span> <span data-ttu-id="7d7cc-120">명령 목록의 각 항목에는 그래픽 형식으로 데이터를 직렬화의 하위 수준 집합을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="7d7cc-120">Each item in the instruction list represents a low-level set of graphics data in a serialized format.</span></span> <span data-ttu-id="7d7cc-121">어떻게 시각적 개체에 대 한 자세한 내용은 그래픽 데이터를 저장, 참조 [WPF 그래픽 렌더링 개요](~/docs/framework/wpf/graphics-multimedia/wpf-graphics-rendering-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="7d7cc-121">For more information on how visual objects store graphics data, see [WPF Graphics Rendering Overview](~/docs/framework/wpf/graphics-multimedia/wpf-graphics-rendering-overview.md).</span></span>  
  
 <span data-ttu-id="7d7cc-122">반환 된 변경 <xref:System.Windows.Media.DrawingGroup> 값 유지 되지 않습니다는 <xref:System.Windows.Media.DrawingVisual>합니다.</span><span class="sxs-lookup"><span data-stu-id="7d7cc-122">Any change to the returned <xref:System.Windows.Media.DrawingGroup> value is not persisted by the <xref:System.Windows.Media.DrawingVisual>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d7cc-123">다음 예제에서는 <xref:System.Windows.Media.DrawingGroup> 각 값 <xref:System.Windows.Media.DrawingVisual> visual를 열거 하는 호스트에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d7cc-123">In the following example, the <xref:System.Windows.Media.DrawingGroup> value of each <xref:System.Windows.Media.DrawingVisual> in a host visual is enumerated.</span></span>  
  
 [!code-csharp[VisualSnippets#DrawingVisualSnippet1](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualSnippets/CSharp/DrawingVisual.xaml.cs#drawingvisualsnippet1)]
 [!code-vb[VisualSnippets#DrawingVisualSnippet1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VisualSnippets/visualbasic/drawingvisual.xaml.vb#drawingvisualsnippet1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="HitTestCore">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7d7cc-124"><see cref="Overload:System.Windows.Media.DrawingVisual.HitTestCore" />는 시각적 개체의 경계가 적중되었는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="7d7cc-124"><see cref="Overload:System.Windows.Media.DrawingVisual.HitTestCore" /> determines whether the bounds of the visual object has been hit.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HitTestCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Media.GeometryHitTestResult HitTestCore (System.Windows.Media.GeometryHitTestParameters hitTestParameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Media.GeometryHitTestResult HitTestCore(class System.Windows.Media.GeometryHitTestParameters hitTestParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DrawingVisual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HitTestCore (hitTestParameters As GeometryHitTestParameters) As GeometryHitTestResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Media::GeometryHitTestResult ^ HitTestCore(System::Windows::Media::GeometryHitTestParameters ^ hitTestParameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.GeometryHitTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hitTestParameters" Type="System.Windows.Media.GeometryHitTestParameters" />
      </Parameters>
      <Docs>
        <param name="hitTestParameters"><span data-ttu-id="7d7cc-125">적중 테스트를 수행할 대상 <see cref="T:System.Windows.Media.GeometryHitTestParameters" />를 지정하는 <see cref="T:System.Windows.Media.Geometry" /> 형식의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="7d7cc-125">A value of type <see cref="T:System.Windows.Media.GeometryHitTestParameters" /> that specifies the <see cref="T:System.Windows.Media.Geometry" /> to hit test against.</span></span></param>
        <summary><span data-ttu-id="7d7cc-126">기하 도형 값이 시각적 개체의 경계 내에 있는지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="7d7cc-126">Determines whether a geometry value is within the bounds of the visual object.</span></span></summary>
        <returns><span data-ttu-id="7d7cc-127"><see cref="T:System.Windows.Media.GeometryHitTestResult" /> 형식의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="7d7cc-127">A value of type <see cref="T:System.Windows.Media.GeometryHitTestResult" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTestCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Media.HitTestResult HitTestCore (System.Windows.Media.PointHitTestParameters hitTestParameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Media.HitTestResult HitTestCore(class System.Windows.Media.PointHitTestParameters hitTestParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DrawingVisual.HitTestCore(System.Windows.Media.PointHitTestParameters)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HitTestCore (hitTestParameters As PointHitTestParameters) As HitTestResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Media::HitTestResult ^ HitTestCore(System::Windows::Media::PointHitTestParameters ^ hitTestParameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.HitTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hitTestParameters" Type="System.Windows.Media.PointHitTestParameters" />
      </Parameters>
      <Docs>
        <param name="hitTestParameters"><span data-ttu-id="7d7cc-128">적중 테스트를 수행할 대상 <see cref="T:System.Windows.Media.PointHitTestParameters" />를 지정하는 <see cref="T:System.Windows.Point" /> 형식의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="7d7cc-128">A value of type <see cref="T:System.Windows.Media.PointHitTestParameters" /> that specifies the <see cref="T:System.Windows.Point" /> to hit test against.</span></span></param>
        <summary><span data-ttu-id="7d7cc-129">점 좌표 값이 <see cref="T:System.Windows.Media.DrawingVisual" /> 개체의 경계 내에 있는지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="7d7cc-129">Determines whether a point coordinate value is within the bounds of the <see cref="T:System.Windows.Media.DrawingVisual" /> object.</span></span></summary>
        <returns><span data-ttu-id="7d7cc-130">적중 테스트에서 반환되는 <see cref="T:System.Windows.Media.HitTestResult" />을 나타내는 <see cref="T:System.Windows.Media.Visual" /> 형식의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="7d7cc-130">A value of type <see cref="T:System.Windows.Media.HitTestResult" />, representing the <see cref="T:System.Windows.Media.Visual" /> returned from a hit test.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d7cc-131"><xref:System.Windows.Media.HitTestResult.VisualHit%2A> 반환 값의 속성은 적중 된 시각적 개체를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="7d7cc-131">The <xref:System.Windows.Media.HitTestResult.VisualHit%2A> property of the return value represents the visual object that was hit.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderOpen">
      <MemberSignature Language="C#" Value="public System.Windows.Media.DrawingContext RenderOpen ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.DrawingContext RenderOpen() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DrawingVisual.RenderOpen" />
      <MemberSignature Language="VB.NET" Value="Public Function RenderOpen () As DrawingContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::DrawingContext ^ RenderOpen();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.DrawingContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7d7cc-132">렌더링에 사용할 <see cref="T:System.Windows.Media.DrawingVisual" /> 개체를 엽니다.</span><span class="sxs-lookup"><span data-stu-id="7d7cc-132">Opens the <see cref="T:System.Windows.Media.DrawingVisual" /> object for rendering.</span></span> <span data-ttu-id="7d7cc-133">반환된 <see cref="T:System.Windows.Media.DrawingContext" /> 값은 <see cref="T:System.Windows.Media.DrawingVisual" />로 렌더링하는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="7d7cc-133">The returned <see cref="T:System.Windows.Media.DrawingContext" /> value can be used to render into the <see cref="T:System.Windows.Media.DrawingVisual" />.</span></span></summary>
        <returns><span data-ttu-id="7d7cc-134"><see cref="T:System.Windows.Media.DrawingContext" /> 형식의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="7d7cc-134">A value of type <see cref="T:System.Windows.Media.DrawingContext" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d7cc-135">호출 하는 경우는 <xref:System.Windows.Media.DrawingContext.Close%2A> 의 메서드는 <xref:System.Windows.Media.DrawingContext>, 현재 콘텐츠 대체에 대해 정의 된 모든 이전 그리기 내용 드로잉는 <xref:System.Windows.Media.DrawingVisual>합니다.</span><span class="sxs-lookup"><span data-stu-id="7d7cc-135">When you call the <xref:System.Windows.Media.DrawingContext.Close%2A> method of the <xref:System.Windows.Media.DrawingContext>, the current drawing content replaces any previous drawing content defined for the <xref:System.Windows.Media.DrawingVisual>.</span></span> <span data-ttu-id="7d7cc-136">새 그리기 내용을 그리기 기존 콘텐츠를 추가할 수 없습니다 있다는 것을 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d7cc-136">This means that there is no way to append new drawing content to existing drawing content.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d7cc-137">다음 예제에서는 <xref:System.Windows.Media.DrawingVisual> 개체가 만들어지면 및 해당 <xref:System.Windows.Media.DrawingContext> 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="7d7cc-137">In the following example, a <xref:System.Windows.Media.DrawingVisual> object is created, and its <xref:System.Windows.Media.DrawingContext> returned.</span></span>  
  
 [!code-csharp[DrawingVisualSample#101](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingVisualSample/CSharp/Window1.xaml.cs#101)]
 [!code-vb[DrawingVisualSample#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingVisualSample/visualbasic/window1.xaml.vb#101)]  
  
 <span data-ttu-id="7d7cc-138">그리기 컨텍스트에 그리기 순서는 중요-각 후속 그리기 다른 맨 위에 그려집니다.</span><span class="sxs-lookup"><span data-stu-id="7d7cc-138">The order in which you draw into the drawing context is important—each succeeding drawing is drawn on top of the others.</span></span> <span data-ttu-id="7d7cc-139">다음 예제에서는 사각형은 먼저 그린된 다음 텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="7d7cc-139">In the following example, the rectangle is drawn first, then the text.</span></span>  
  
 [!code-csharp[VisualSnippets#RenderOrderSnippet1](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualSnippets/CSharp/Snippets.cs#renderordersnippet1)]
 [!code-vb[VisualSnippets#RenderOrderSnippet1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VisualSnippets/visualbasic/snippets.vb#renderordersnippet1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>