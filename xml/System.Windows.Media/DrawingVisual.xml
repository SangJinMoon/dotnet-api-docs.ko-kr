<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DrawingVisual.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac599dc3c30e48b3d0a4c8e87df9c61a3bfc4cce898.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">99dc3c30e48b3d0a4c8e87df9c61a3bfc4cce898</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.DrawingVisual">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Media.DrawingVisual" /&gt;</ph> is a visual object that can be used to render vector graphics on the screen.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.DrawingVisual" /&gt;</ph>은 화면에 벡터 그래픽을 렌더링하는 데 사용할 수 있는 시각적 개체입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.DrawingVisual">
          <source>The content is persisted by the system.</source>
          <target state="translated">콘텐츠는 시스템에서 유지됩니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.DrawingVisual">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.DrawingVisual&gt;</ph> is a lightweight drawing class that is used to render shapes, images, or text.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.DrawingVisual&gt;</ph> 도형, 이미지 또는 텍스트를 렌더링 하는 데 사용 되는 간단한 그리기 클래스가입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.DrawingVisual">
          <source>This class is considered lightweight because it does not provide layout, input, focus, or event handling, which improves its performance.</source>
          <target state="translated">이 클래스 레이아웃, 입력, 포커스 또는 성능을 향상 시키는 이벤트 처리를 제공 하지 않기 때문에 간단한 클래스로 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.DrawingVisual">
          <source>For this reason, drawings are ideal for backgrounds and clip art.</source>
          <target state="translated">이러한 이유 때문에 그리기는 배경 및 클립 아트에 적합합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.DrawingVisual">
          <source>In order to use <ph id="ph1">&lt;xref:System.Windows.Media.DrawingVisual&gt;</ph> objects, you need to create a host container for the objects.</source>
          <target state="translated">사용 하려면 <ph id="ph1">&lt;xref:System.Windows.Media.DrawingVisual&gt;</ph> 개체를 개체에 대 한 호스트 컨테이너를 만들어야 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.DrawingVisual">
          <source>The host container object must be derived from the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> class, which provides the layout and event handling support that the <ph id="ph2">&lt;xref:System.Windows.Media.DrawingVisual&gt;</ph> class does not support.</source>
          <target state="translated">컨테이너 개체에서 파생 되어야 합니다는 <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> 를 지 원하는 레이아웃 및 이벤트 처리를 제공 하는 클래스는 <ph id="ph2">&lt;xref:System.Windows.Media.DrawingVisual&gt;</ph> 클래스를 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.DrawingVisual">
          <source>The host container object does not display any visual properties, since its main purpose is to contain child objects.</source>
          <target state="translated">자식 개체를 포함 하는 것이 주요 목적 이므로 호스트 컨테이너 개체에는 시각적 속성을 표시 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.DrawingVisual">
          <source>For more information, see <bpt id="p1">[</bpt>Using DrawingVisual Objects<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/using-drawingvisual-objects.md)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>DrawingVisual 개체 사용<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/using-drawingvisual-objects.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.DrawingVisual">
          <source>For a complete example showing how to create <ph id="ph1">&lt;xref:System.Windows.Media.DrawingVisual&gt;</ph> objects with a host container, see the <bpt id="p1">[</bpt>Hit Test Using DrawingVisuals Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=159994)</ept> .</source>
          <target state="translated">만드는 방법을 보여 주는 전체 예제는 <ph id="ph1">&lt;xref:System.Windows.Media.DrawingVisual&gt;</ph> 호스트 컨테이너를 사용 하 여 개체 참조는 <bpt id="p1">[</bpt>적중 테스트를 사용 하 여 DrawingVisuals 샘플<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=159994)</ept> 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.DrawingVisual.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.DrawingVisual" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.DrawingVisual" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.DrawingVisual.#ctor">
          <source>When you create a <ph id="ph1">&lt;xref:System.Windows.Media.DrawingVisual&gt;</ph> object, it has no drawing content.</source>
          <target state="translated">만들 때 한 <ph id="ph1">&lt;xref:System.Windows.Media.DrawingVisual&gt;</ph> 개체를 그리기 내용이 없는 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.DrawingVisual.#ctor">
          <source>You can add text, graphic, or image content by retrieving the drawing context of the object and drawing into it.</source>
          <target state="translated">개체의 그리기 컨텍스트를 검색 하 고을 그려 하 여 텍스트, 그래픽 또는 이미지 콘텐츠를 추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.DrawingVisual.#ctor">
          <source>A drawing context is returned by calling the <ph id="ph1">&lt;xref:System.Windows.Media.DrawingVisual.RenderOpen%2A&gt;</ph> method of a <ph id="ph2">&lt;xref:System.Windows.Media.DrawingVisual&gt;</ph> object.</source>
          <target state="translated">그리기 컨텍스트 호출에서 반환 되는 <ph id="ph1">&lt;xref:System.Windows.Media.DrawingVisual.RenderOpen%2A&gt;</ph> 의 메서드는 <ph id="ph2">&lt;xref:System.Windows.Media.DrawingVisual&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.DrawingVisual.#ctor">
          <source>In the following example, a <ph id="ph1">&lt;xref:System.Windows.Media.DrawingVisual&gt;</ph> object is created, and a rectangle is drawn into its drawing context.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Media.DrawingVisual&gt;</ph> 개체가 만들어지고 해당 그리기 컨텍스트로 사각형을 그립니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.DrawingVisual.#ctor">
          <source>Notice that you must call the <ph id="ph1">&lt;xref:System.Windows.Media.DrawingContext.Close%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Windows.Media.DrawingContext&gt;</ph> to persist drawing content.</source>
          <target state="translated">호출 해야 하는 통지는 <ph id="ph1">&lt;xref:System.Windows.Media.DrawingContext.Close%2A&gt;</ph> 의 메서드는 <ph id="ph2">&lt;xref:System.Windows.Media.DrawingContext&gt;</ph> 그리기 콘텐츠를 유지 하 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.DrawingVisual.Drawing">
          <source>Gets the drawing content of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.DrawingVisual" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.DrawingVisual" /&gt;</ph> 개체의 그리기 내용을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.DrawingVisual.Drawing">
          <source>Gets a value of type <ph id="ph1">&lt;see cref="T:System.Windows.Media.DrawingGroup" /&gt;</ph> that represents the collection of <ph id="ph2">&lt;see cref="T:System.Windows.Media.Drawing" /&gt;</ph> objects in the <ph id="ph3">&lt;see cref="T:System.Windows.Media.DrawingVisual" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.DrawingGroup" /&gt;</ph>에서 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Drawing" /&gt;</ph> 개체의 컬렉션을 나타내는 <ph id="ph3">&lt;see cref="T:System.Windows.Media.DrawingVisual" /&gt;</ph> 형식의 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.DrawingVisual.Drawing">
          <source>A visual object stores its rendering data as a vector graphics instruction list.</source>
          <target state="translated">시각적 개체는 벡터 그래픽 명령 목록으로 렌더링 데이터를 저장 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.DrawingVisual.Drawing">
          <source>Each item in the instruction list represents a low-level set of graphics data in a serialized format.</source>
          <target state="translated">명령 목록의 각 항목에는 그래픽 형식으로 데이터를 직렬화의 하위 수준 집합을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.DrawingVisual.Drawing">
          <source>For more information on how visual objects store graphics data, see <bpt id="p1">[</bpt>WPF Graphics Rendering Overview<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/wpf-graphics-rendering-overview.md)</ept>.</source>
          <target state="translated">어떻게 시각적 개체에 대 한 자세한 내용은 그래픽 데이터를 저장, 참조 <bpt id="p1">[</bpt>WPF 그래픽 렌더링 개요<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/wpf-graphics-rendering-overview.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.DrawingVisual.Drawing">
          <source>Any change to the returned <ph id="ph1">&lt;xref:System.Windows.Media.DrawingGroup&gt;</ph> value is not persisted by the <ph id="ph2">&lt;xref:System.Windows.Media.DrawingVisual&gt;</ph>.</source>
          <target state="translated">반환 된 변경 <ph id="ph1">&lt;xref:System.Windows.Media.DrawingGroup&gt;</ph> 값 유지 되지 않습니다는 <ph id="ph2">&lt;xref:System.Windows.Media.DrawingVisual&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.DrawingVisual.Drawing">
          <source>In the following example, the <ph id="ph1">&lt;xref:System.Windows.Media.DrawingGroup&gt;</ph> value of each <ph id="ph2">&lt;xref:System.Windows.Media.DrawingVisual&gt;</ph> in a host visual is enumerated.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Media.DrawingGroup&gt;</ph> 각 값 <ph id="ph2">&lt;xref:System.Windows.Media.DrawingVisual&gt;</ph> visual를 열거 하는 호스트에서 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.DrawingVisual">
          <source><ph id="ph1">&lt;see cref="Overload:System.Windows.Media.DrawingVisual.HitTestCore" /&gt;</ph> determines whether the bounds of the visual object has been hit.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="Overload:System.Windows.Media.DrawingVisual.HitTestCore" /&gt;</ph>는 시각적 개체의 경계가 적중되었는지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.DrawingVisual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)">
          <source>A value of type <ph id="ph1">&lt;see cref="T:System.Windows.Media.GeometryHitTestParameters" /&gt;</ph> that specifies the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Geometry" /&gt;</ph> to hit test against.</source>
          <target state="translated">적중 테스트를 수행할 대상 <ph id="ph1">&lt;see cref="T:System.Windows.Media.GeometryHitTestParameters" /&gt;</ph>를 지정하는 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Geometry" /&gt;</ph> 형식의 값입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.DrawingVisual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)">
          <source>Determines whether a geometry value is within the bounds of the visual object.</source>
          <target state="translated">기하 도형 값이 시각적 개체의 경계 내에 있는지 확인합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.DrawingVisual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)">
          <source>A value of type <ph id="ph1">&lt;see cref="T:System.Windows.Media.GeometryHitTestResult" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.GeometryHitTestResult" /&gt;</ph> 형식의 값입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.DrawingVisual.HitTestCore(System.Windows.Media.PointHitTestParameters)">
          <source>A value of type <ph id="ph1">&lt;see cref="T:System.Windows.Media.PointHitTestParameters" /&gt;</ph> that specifies the <ph id="ph2">&lt;see cref="T:System.Windows.Point" /&gt;</ph> to hit test against.</source>
          <target state="translated">적중 테스트를 수행할 대상 <ph id="ph1">&lt;see cref="T:System.Windows.Media.PointHitTestParameters" /&gt;</ph>를 지정하는 <ph id="ph2">&lt;see cref="T:System.Windows.Point" /&gt;</ph> 형식의 값입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.DrawingVisual.HitTestCore(System.Windows.Media.PointHitTestParameters)">
          <source>Determines whether a point coordinate value is within the bounds of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.DrawingVisual" /&gt;</ph> object.</source>
          <target state="translated">점 좌표 값이 <ph id="ph1">&lt;see cref="T:System.Windows.Media.DrawingVisual" /&gt;</ph> 개체의 경계 내에 있는지 확인합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.DrawingVisual.HitTestCore(System.Windows.Media.PointHitTestParameters)">
          <source>A value of type <ph id="ph1">&lt;see cref="T:System.Windows.Media.HitTestResult" /&gt;</ph>, representing the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> returned from a hit test.</source>
          <target state="translated">적중 테스트에서 반환되는 <ph id="ph1">&lt;see cref="T:System.Windows.Media.HitTestResult" /&gt;</ph>을 나타내는 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> 형식의 값입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.DrawingVisual.HitTestCore(System.Windows.Media.PointHitTestParameters)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.HitTestResult.VisualHit%2A&gt;</ph> property of the return value represents the visual object that was hit.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.HitTestResult.VisualHit%2A&gt;</ph> 반환 값의 속성은 적중 된 시각적 개체를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.DrawingVisual.RenderOpen">
          <source>Opens the <ph id="ph1">&lt;see cref="T:System.Windows.Media.DrawingVisual" /&gt;</ph> object for rendering.</source>
          <target state="translated">렌더링에 사용할 <ph id="ph1">&lt;see cref="T:System.Windows.Media.DrawingVisual" /&gt;</ph> 개체를 엽니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.DrawingVisual.RenderOpen">
          <source>The returned <ph id="ph1">&lt;see cref="T:System.Windows.Media.DrawingContext" /&gt;</ph> value can be used to render into the <ph id="ph2">&lt;see cref="T:System.Windows.Media.DrawingVisual" /&gt;</ph>.</source>
          <target state="translated">반환된 <ph id="ph1">&lt;see cref="T:System.Windows.Media.DrawingContext" /&gt;</ph> 값은 <ph id="ph2">&lt;see cref="T:System.Windows.Media.DrawingVisual" /&gt;</ph>로 렌더링하는 데 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.DrawingVisual.RenderOpen">
          <source>A value of type <ph id="ph1">&lt;see cref="T:System.Windows.Media.DrawingContext" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.DrawingContext" /&gt;</ph> 형식의 값입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.DrawingVisual.RenderOpen">
          <source>When you call the <ph id="ph1">&lt;xref:System.Windows.Media.DrawingContext.Close%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Windows.Media.DrawingContext&gt;</ph>, the current drawing content replaces any previous drawing content defined for the <ph id="ph3">&lt;xref:System.Windows.Media.DrawingVisual&gt;</ph>.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Media.DrawingContext.Close%2A&gt;</ph> 의 메서드는 <ph id="ph2">&lt;xref:System.Windows.Media.DrawingContext&gt;</ph>, 현재 콘텐츠 대체에 대해 정의 된 모든 이전 그리기 내용 드로잉는 <ph id="ph3">&lt;xref:System.Windows.Media.DrawingVisual&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.DrawingVisual.RenderOpen">
          <source>This means that there is no way to append new drawing content to existing drawing content.</source>
          <target state="translated">새 그리기 내용을 그리기 기존 콘텐츠를 추가할 수 없습니다 있다는 것을 의미 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.DrawingVisual.RenderOpen">
          <source>In the following example, a <ph id="ph1">&lt;xref:System.Windows.Media.DrawingVisual&gt;</ph> object is created, and its <ph id="ph2">&lt;xref:System.Windows.Media.DrawingContext&gt;</ph> returned.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Media.DrawingVisual&gt;</ph> 개체가 만들어지면 및 해당 <ph id="ph2">&lt;xref:System.Windows.Media.DrawingContext&gt;</ph> 반환 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.DrawingVisual.RenderOpen">
          <source>The order in which you draw into the drawing context is important—each succeeding drawing is drawn on top of the others.</source>
          <target state="translated">그리기 컨텍스트에 그리기 순서는 중요-각 후속 그리기 다른 맨 위에 그려집니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.DrawingVisual.RenderOpen">
          <source>In the following example, the rectangle is drawn first, then the text.</source>
          <target state="translated">다음 예제에서는 사각형은 먼저 그린된 다음 텍스트입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>