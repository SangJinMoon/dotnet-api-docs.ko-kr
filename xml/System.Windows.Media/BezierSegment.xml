<Type Name="BezierSegment" FullName="System.Windows.Media.BezierSegment">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e83035909876b5220c892ae1473f795053afc74b" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36489907" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class BezierSegment : System.Windows.Media.PathSegment" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed BezierSegment extends System.Windows.Media.PathSegment" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.BezierSegment" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BezierSegment&#xA;Inherits PathSegment" />
  <TypeSignature Language="C++ CLI" Value="public ref class BezierSegment sealed : System::Windows::Media::PathSegment" />
  <TypeSignature Language="F#" Value="type BezierSegment = class&#xA;    inherit PathSegment" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.PathSegment</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="118ce-101">두 점 사이에 그려진 입방형 3차원 곡선을 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="118ce-101">Represents a cubic Bezier curve drawn between two points.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="118ce-102">사용 하 여 한 <xref:System.Windows.Media.PathFigure> 개체를 저장할 <xref:System.Windows.Media.BezierSegment> 개체와 다른 세그먼트입니다.</span><span class="sxs-lookup"><span data-stu-id="118ce-102">Use a <xref:System.Windows.Media.PathFigure> object to store <xref:System.Windows.Media.BezierSegment> objects and other segments.</span></span>  
  
 <span data-ttu-id="118ce-103">입방 형 3 차원 곡선을 4 개의 점으로 정의: 시작점, 끝점 (<xref:System.Windows.Media.BezierSegment.Point3%2A>), 그리고 두 개의 제어점 (<xref:System.Windows.Media.BezierSegment.Point1%2A> 및 <xref:System.Windows.Media.BezierSegment.Point2%2A>). <xref:System.Windows.Media.BezierSegment> 클래스 곡선의 시작점에 대 한 속성을 포함 하지 않습니다;만 끝점을 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="118ce-103">A cubic Bezier curve is defined by four points: a start point, an end point (<xref:System.Windows.Media.BezierSegment.Point3%2A>), and two control points (<xref:System.Windows.Media.BezierSegment.Point1%2A> and <xref:System.Windows.Media.BezierSegment.Point2%2A>).The <xref:System.Windows.Media.BezierSegment> class does not contain a property for the starting point of the curve; it only defines the end point.</span></span> <span data-ttu-id="118ce-104">곡선의 시작점은 현재 지점으로의 <xref:System.Windows.Media.PathFigure> 입니다는 <xref:System.Windows.Media.BezierSegment> 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="118ce-104">The beginning point of the curve is the current point of the <xref:System.Windows.Media.PathFigure> to which the <xref:System.Windows.Media.BezierSegment> is added.</span></span>  
  
 <span data-ttu-id="118ce-105">입방 형 3 차원 곡선의 두 개의 제어점 자석과 있는 자체적으로 직선 될 수 부분 곡선을 만듭니다 처럼 동작 합니다.</span><span class="sxs-lookup"><span data-stu-id="118ce-105">The two control points of a cubic Bezier curve behave like magnets, attracting portions of what would otherwise be a straight line toward themselves and producing a curve.</span></span> <span data-ttu-id="118ce-106">첫 번째 제어점 <xref:System.Windows.Media.BezierSegment.Point1%2A>, 시작 부분에 영향을 줍니다 곡선의 부분, 두 번째 제어점 <xref:System.Windows.Media.BezierSegment.Point2%2A>, 곡선의 끝 부분에 영향을 줍니다.</span><span class="sxs-lookup"><span data-stu-id="118ce-106">The first control point, <xref:System.Windows.Media.BezierSegment.Point1%2A>, affects the beginning portion of the curve; the second control point, <xref:System.Windows.Media.BezierSegment.Point2%2A>, affects the ending portion of the curve.</span></span> <span data-ttu-id="118ce-107">곡선 반드시 통과할 제어점; 중 하나는 각 제어점 제어점을 통과 하지만 쪽으로 줄의 해당 부분을 이동합니다.</span><span class="sxs-lookup"><span data-stu-id="118ce-107">Note that the curve doesn't necessarily pass through either of the control points; each control point moves its portion of the line toward itself, but not through itself.</span></span>  
  
## <a name="freezable-features"></a><span data-ttu-id="118ce-108">Freezable 기능</span><span class="sxs-lookup"><span data-stu-id="118ce-108">Freezable Features</span></span>  
 <span data-ttu-id="118ce-109">A <xref:System.Windows.Media.BezierSegment> 의 형식인 <xref:System.Windows.Freezable> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="118ce-109">A <xref:System.Windows.Media.BezierSegment> is a type of <xref:System.Windows.Freezable> object.</span></span> <span data-ttu-id="118ce-110">에 대 한 내용은 <xref:System.Windows.Freezable> 복제를 중지 및 등의 기능 참조는 [Freezable 개체 개요](~/docs/framework/wpf/advanced/freezable-objects-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="118ce-110">For information about <xref:System.Windows.Freezable> features, such as freezing and cloning, see the [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.PathFigure" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="118ce-111">
            <see cref="T:System.Windows.Media.BezierSegment" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="118ce-111">Initializes a new instance of the <see cref="T:System.Windows.Media.BezierSegment" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BezierSegment ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.BezierSegment.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BezierSegment();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="118ce-112">
            <see cref="T:System.Windows.Media.BezierSegment" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="118ce-112">Initializes a new instance of the <see cref="T:System.Windows.Media.BezierSegment" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="118ce-113">입방 형 3 차원 곡선을 4 개의 점으로 정의: 시작점, 끝점 (`point3`), 그리고 두 개의 제어점 (`point1` 및 `point2`).</span><span class="sxs-lookup"><span data-stu-id="118ce-113">A cubic Bezier curve is defined by four points: a start point, an end point (`point3`), and two control points (`point1` and `point2`).</span></span> <span data-ttu-id="118ce-114">이 방법을; 곡선의 시작점을 지정할 수 있습니다를 사용 하지 않습니다. 곡선의 현재 위치에서 시작 된 <xref:System.Windows.Media.PathFigure> 있는 개체를는 <xref:System.Windows.Media.BezierSegment> 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="118ce-114">This method does not enable you to specify the beginning point of the curve; the curve begins at the current point of the <xref:System.Windows.Media.PathFigure> object to which the <xref:System.Windows.Media.BezierSegment> is added.</span></span>  
  
 <span data-ttu-id="118ce-115">입방 형 3 차원 곡선의 두 개의 제어점 자석과 있는 자체적으로 직선 될 수 부분 곡선을 만듭니다 처럼 동작 합니다.</span><span class="sxs-lookup"><span data-stu-id="118ce-115">The two control points of a cubic Bezier curve behave like magnets, attracting portions of what would otherwise be a straight line toward themselves and producing a curve.</span></span> <span data-ttu-id="118ce-116">첫 번째 제어점 `point1`, 시작 부분에 영향을 줍니다 곡선의 부분, 두 번째 제어점 `point2`, 곡선의 끝 부분에 영향을 줍니다.</span><span class="sxs-lookup"><span data-stu-id="118ce-116">The first control point, `point1`, affects the beginning portion of the curve; the second control point, `point2`, affects the ending portion of the curve.</span></span> <span data-ttu-id="118ce-117">곡선 반드시 통과할 제어점; 중 하나는 각 제어점 제어점을 통과 하지만 쪽으로 줄의 해당 부분을 이동합니다.</span><span class="sxs-lookup"><span data-stu-id="118ce-117">Note that the curve doesn't necessarily pass through either of the control points; each control point moves its portion of the line toward itself, but not through itself.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BezierSegment (System.Windows.Point point1, System.Windows.Point point2, System.Windows.Point point3, bool isStroked);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2, valuetype System.Windows.Point point3, bool isStroked) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.BezierSegment.#ctor(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (point1 As Point, point2 As Point, point3 As Point, isStroked As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BezierSegment(System::Windows::Point point1, System::Windows::Point point2, System::Windows::Point point3, bool isStroked);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.BezierSegment : System.Windows.Point * System.Windows.Point * System.Windows.Point * bool -&gt; System.Windows.Media.BezierSegment" Usage="new System.Windows.Media.BezierSegment (point1, point2, point3, isStroked)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
        <Parameter Name="point3" Type="System.Windows.Point" />
        <Parameter Name="isStroked" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point1">
          <span data-ttu-id="118ce-118">곡선의 시작 부분을 결정하는 첫 번째 제어점입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="118ce-118">The first control point, which determines the beginning portion of the curve.</span>
          </span>
        </param>
        <param name="point2">
          <span data-ttu-id="118ce-119">곡선의 끝 부분을 결정하는 두 번째 제어점입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="118ce-119">The second control point, which determines the ending portion of the curve.</span>
          </span>
        </param>
        <param name="point3">
          <span data-ttu-id="118ce-120">곡선을 그릴 지점입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="118ce-120">The point to which the curve is drawn.</span>
          </span>
        </param>
        <param name="isStroked">
          <span data-ttu-id="118ce-121">
            <see cref="T:System.Windows.Media.Pen" />을 사용하여 세그먼트를 렌더링할 때 곡선을 그리면 <see langword="true" />이고, 곡선을 그리지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="118ce-121">
              <see langword="true" /> to stroke the curve when a <see cref="T:System.Windows.Media.Pen" /> is used to render the segment; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="118ce-122">지정된 제어점, 끝점 및 스트로크 옵션을 사용하여 <see cref="T:System.Windows.Media.BezierSegment" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="118ce-122">Initializes a new instance of the <see cref="T:System.Windows.Media.BezierSegment" /> class with the specified control points, end point, and stroke option.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="118ce-123">입방 형 3 차원 곡선을 4 개의 점으로 정의: 시작점, 끝점 (`point3`), 그리고 두 개의 제어점 (`point1` 및 `point2`).</span><span class="sxs-lookup"><span data-stu-id="118ce-123">A cubic Bezier curve is defined by four points: a start point, an end point (`point3`), and two control points (`point1` and `point2`).</span></span> <span data-ttu-id="118ce-124">이 방법을; 곡선의 시작점을 지정할 수 있습니다를 사용 하지 않습니다. 곡선의 현재 위치에서 시작 된 <xref:System.Windows.Media.PathFigure> 있는 개체를는 <xref:System.Windows.Media.BezierSegment> 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="118ce-124">This method does not enable you to specify the beginning point of the curve; the curve begins at the current point of the <xref:System.Windows.Media.PathFigure> object to which the <xref:System.Windows.Media.BezierSegment> is added.</span></span>  
  
 <span data-ttu-id="118ce-125">입방 형 3 차원 곡선의 두 개의 제어점 자석과 있는 자체적으로 직선 될 수 부분 곡선을 만듭니다 처럼 동작 합니다.</span><span class="sxs-lookup"><span data-stu-id="118ce-125">The two control points of a cubic Bezier curve behave like magnets, attracting portions of what would otherwise be a straight line toward themselves and producing a curve.</span></span> <span data-ttu-id="118ce-126">첫 번째 제어점 `point1`, 시작 부분에 영향을 줍니다 곡선의 부분, 두 번째 제어점 `point2`, 곡선의 끝 부분에 영향을 줍니다.</span><span class="sxs-lookup"><span data-stu-id="118ce-126">The first control point, `point1`, affects the beginning portion of the curve; the second control point, `point2`, affects the ending portion of the curve.</span></span> <span data-ttu-id="118ce-127">곡선 반드시 통과할 제어점; 중 하나는 각 제어점 제어점을 통과 하지만 쪽으로 줄의 해당 부분을 이동합니다.</span><span class="sxs-lookup"><span data-stu-id="118ce-127">Note that the curve doesn't necessarily pass through either of the control points; each control point moves its portion of the line toward itself, but not through itself.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.BezierSegment Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.BezierSegment Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.BezierSegment.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As BezierSegment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::BezierSegment ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.Media.BezierSegment" Usage="bezierSegment.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.BezierSegment</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="118ce-128">이 개체 값의 전체 복사본을 만들어 이 <see cref="T:System.Windows.Media.BezierSegment" />의 수정 가능한 복제본을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="118ce-128">Creates a modifiable clone of this <see cref="T:System.Windows.Media.BezierSegment" />, making deep copies of this object's values.</span>
          </span>
          <span data-ttu-id="118ce-129">종속성 속성을 복사하는 경우 이 메서드는 더 이상 확인되지 않을 수도 있는 리소스 참조와 데이터 바인딩을 복사하지만 애니메이션이나 애니메이션의 현재 값은 복사하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="118ce-129">When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="118ce-130">현재 개체의 수정 가능한 복제본입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="118ce-130">A modifiable clone of the current object.</span>
          </span>
          <span data-ttu-id="118ce-131">소스의 <see cref="P:System.Windows.Freezable.IsFrozen" /> 속성이 <see langword="true." />인 경우에도 복제된 개체의 <see cref="P:System.Windows.Freezable.IsFrozen" /> 속성은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="118ce-131">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true." /></span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="118ce-132">수정 가능한 복사본을 생성 하기 위해이 메서드는 고정 된 <xref:System.Windows.Freezable> 개체 (또는 모든 <xref:System.Windows.Freezable> 개체).</span><span class="sxs-lookup"><span data-stu-id="118ce-132">This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object).</span></span> <span data-ttu-id="118ce-133">편의 위해이 메서드는 강력한 형식의 구현이 포함 된 상속 된 버전을 숨깁니다.</span><span class="sxs-lookup"><span data-stu-id="118ce-133">For convenience, this method shadows the inherited version with a strongly typed implementation.</span></span>  
  
 <span data-ttu-id="118ce-134">자세한 내용은 <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="118ce-134">For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Media.BezierSegment CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.BezierSegment CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.BezierSegment.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As BezierSegment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::BezierSegment ^ CloneCurrentValue();" />
      <MemberSignature Language="F#" Value="override this.CloneCurrentValue : unit -&gt; System.Windows.Media.BezierSegment" Usage="bezierSegment.CloneCurrentValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.BezierSegment</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="118ce-135">
            <see cref="T:System.Windows.Media.BezierSegment" /> 개체의 현재 값에 대한 전체 복사본을 만들어 이 개체의 수정 가능한 복제본을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="118ce-135">Creates a modifiable clone of this <see cref="T:System.Windows.Media.BezierSegment" /> object, making deep copies of this object's current values.</span>
          </span>
          <span data-ttu-id="118ce-136">리소스 참조, 데이터 바인딩 및 애니메이션은 복사되지 않지만 이러한 요소의 현재 값은 복사됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="118ce-136">Resource references, data bindings, and animations are not copied, but their current values are.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="118ce-137">현재 개체의 수정 가능한 복제본입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="118ce-137">A modifiable clone of the current object.</span>
          </span>
          <span data-ttu-id="118ce-138">소스의 <see cref="P:System.Windows.Freezable.IsFrozen" /> 속성이 <see langword="true" />인 경우에도 복제된 개체의 <see cref="P:System.Windows.Freezable.IsFrozen" /> 속성은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="118ce-138">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="118ce-139">수정 가능한 복사본을 생성 하기 위해이 메서드는 고정 된 <xref:System.Windows.Freezable> 개체 (또는 모든 <xref:System.Windows.Freezable> 개체).</span><span class="sxs-lookup"><span data-stu-id="118ce-139">This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object).</span></span> <span data-ttu-id="118ce-140">편의 위해이 메서드는 강력한 형식의 구현이 포함 된 상속 된 버전을 숨깁니다.</span><span class="sxs-lookup"><span data-stu-id="118ce-140">For convenience, this method shadows the inherited version with a strongly typed implementation.</span></span>  
  
 <span data-ttu-id="118ce-141">자세한 내용은 <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="118ce-141">For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.BezierSegment.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="abstract member CreateInstanceCore : unit -&gt; System.Windows.Freezable&#xA;override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="bezierSegment.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Point1">
      <MemberSignature Language="C#" Value="public System.Windows.Point Point1 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point Point1" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.BezierSegment.Point1" />
      <MemberSignature Language="VB.NET" Value="Public Property Point1 As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point Point1 { System::Windows::Point get(); void set(System::Windows::Point value); };" />
      <MemberSignature Language="F#" Value="member this.Point1 : System.Windows.Point with get, set" Usage="System.Windows.Media.BezierSegment.Point1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="118ce-142">곡선의 첫 번째 제어점을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="118ce-142">Gets or sets the first control point of the curve.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="118ce-143">곡선의 첫 번째 제어점입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="118ce-143">The first control point of the curve.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="118ce-144">입방 형 3 차원 곡선의 두 개의 제어점 자석과 있는 자체적으로 직선 될 수 부분 곡선을 만듭니다 처럼 동작 합니다.</span><span class="sxs-lookup"><span data-stu-id="118ce-144">The two control points of a cubic Bezier curve behave like magnets, attracting portions of what would otherwise be a straight line toward themselves and producing a curve.</span></span> <span data-ttu-id="118ce-145">첫 번째 제어점 <xref:System.Windows.Media.BezierSegment.Point1%2A>, 시작 부분에 영향을 줍니다 곡선의 부분, 두 번째 제어점 <xref:System.Windows.Media.BezierSegment.Point2%2A>, 곡선의 끝 부분에 영향을 줍니다.</span><span class="sxs-lookup"><span data-stu-id="118ce-145">The first control point, <xref:System.Windows.Media.BezierSegment.Point1%2A>, affects the beginning portion of the curve; the second control point, <xref:System.Windows.Media.BezierSegment.Point2%2A>, affects the ending portion of the curve.</span></span> <span data-ttu-id="118ce-146">곡선 반드시 통과할 제어점; 중 하나는 각 제어점 제어점을 통과 하지만 쪽으로 줄의 해당 부분을 이동합니다.</span><span class="sxs-lookup"><span data-stu-id="118ce-146">Note that the curve doesn't necessarily pass through either of the control points; each control point moves its portion of the line toward itself, but not through itself.</span></span>  
  
<a name="dependencyPropertyInfo_Point1"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="118ce-147">종속성 속성 정보</span><span class="sxs-lookup"><span data-stu-id="118ce-147">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="118ce-148">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="118ce-148">Identifier field</span></span>|<xref:System.Windows.Media.BezierSegment.Point1Property>|  
|<span data-ttu-id="118ce-149">로 메타 데이터 속성 설정 `true`</span><span class="sxs-lookup"><span data-stu-id="118ce-149">Metadata properties set to `true`</span></span>|<span data-ttu-id="118ce-150">없음</span><span class="sxs-lookup"><span data-stu-id="118ce-150">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Point1Property">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty Point1Property;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty Point1Property" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.BezierSegment.Point1Property" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Point1Property As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ Point1Property;" />
      <MemberSignature Language="F#" Value=" staticval mutable Point1Property : System.Windows.DependencyProperty" Usage="System.Windows.Media.BezierSegment.Point1Property" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="118ce-151">
            <see cref="P:System.Windows.Media.BezierSegment.Point1" /> 종속성 속성을 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="118ce-151">Identifies the <see cref="P:System.Windows.Media.BezierSegment.Point1" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Point2">
      <MemberSignature Language="C#" Value="public System.Windows.Point Point2 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point Point2" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.BezierSegment.Point2" />
      <MemberSignature Language="VB.NET" Value="Public Property Point2 As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point Point2 { System::Windows::Point get(); void set(System::Windows::Point value); };" />
      <MemberSignature Language="F#" Value="member this.Point2 : System.Windows.Point with get, set" Usage="System.Windows.Media.BezierSegment.Point2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="118ce-152">곡선의 두 번째 제어점을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="118ce-152">Gets or sets the second control point of the curve.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="118ce-153">곡선의 두 번째 제어점입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="118ce-153">The second control point of the curve.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="118ce-154">입방 형 3 차원 곡선의 두 개의 제어점 자석과 있는 자체적으로 직선 될 수 부분 곡선을 만듭니다 처럼 동작 합니다.</span><span class="sxs-lookup"><span data-stu-id="118ce-154">The two control points of a cubic Bezier curve behave like magnets, attracting portions of what would otherwise be a straight line toward themselves and producing a curve.</span></span> <span data-ttu-id="118ce-155">첫 번째 제어점 <xref:System.Windows.Media.BezierSegment.Point1%2A>, 시작 부분에 영향을 줍니다 곡선의 부분, 두 번째 제어점 <xref:System.Windows.Media.BezierSegment.Point2%2A>, 곡선의 끝 부분에 영향을 줍니다.</span><span class="sxs-lookup"><span data-stu-id="118ce-155">The first control point, <xref:System.Windows.Media.BezierSegment.Point1%2A>, affects the beginning portion of the curve; the second control point, <xref:System.Windows.Media.BezierSegment.Point2%2A>, affects the ending portion of the curve.</span></span> <span data-ttu-id="118ce-156">곡선 반드시 통과할 제어점; 중 하나는 각 제어점 제어점을 통과 하지만 쪽으로 줄의 해당 부분을 이동합니다.</span><span class="sxs-lookup"><span data-stu-id="118ce-156">Note that the curve doesn't necessarily pass through either of the control points; each control point moves its portion of the line toward itself, but not through itself.</span></span>  
  
<a name="dependencyPropertyInfo_Point2"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="118ce-157">종속성 속성 정보</span><span class="sxs-lookup"><span data-stu-id="118ce-157">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="118ce-158">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="118ce-158">Identifier field</span></span>|<xref:System.Windows.Media.BezierSegment.Point2Property>|  
|<span data-ttu-id="118ce-159">로 메타 데이터 속성 설정 `true`</span><span class="sxs-lookup"><span data-stu-id="118ce-159">Metadata properties set to `true`</span></span>|<span data-ttu-id="118ce-160">없음</span><span class="sxs-lookup"><span data-stu-id="118ce-160">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Point2Property">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty Point2Property;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty Point2Property" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.BezierSegment.Point2Property" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Point2Property As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ Point2Property;" />
      <MemberSignature Language="F#" Value=" staticval mutable Point2Property : System.Windows.DependencyProperty" Usage="System.Windows.Media.BezierSegment.Point2Property" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="118ce-161">
            <see cref="P:System.Windows.Media.BezierSegment.Point2" /> 종속성 속성을 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="118ce-161">Identifies the <see cref="P:System.Windows.Media.BezierSegment.Point2" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Point3">
      <MemberSignature Language="C#" Value="public System.Windows.Point Point3 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point Point3" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.BezierSegment.Point3" />
      <MemberSignature Language="VB.NET" Value="Public Property Point3 As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point Point3 { System::Windows::Point get(); void set(System::Windows::Point value); };" />
      <MemberSignature Language="F#" Value="member this.Point3 : System.Windows.Point with get, set" Usage="System.Windows.Media.BezierSegment.Point3" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="118ce-162">곡선의 끝점을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="118ce-162">Gets or sets the end point of the curve.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="118ce-163">곡선의 끝점입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="118ce-163">The end point of the curve.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="118ce-164"><xref:System.Windows.Media.BezierSegment> 클래스 곡선의 시작점에 대 한 속성을 포함 하지 않습니다;만 끝점을 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="118ce-164">The <xref:System.Windows.Media.BezierSegment> class does not contain a property for the starting point of the curve; it only defines the end point.</span></span> <span data-ttu-id="118ce-165">곡선의 시작점은 현재 지점으로의 <xref:System.Windows.Media.PathFigure> 입니다는 <xref:System.Windows.Media.BezierSegment> 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="118ce-165">The beginning point of the curve is the current point of the <xref:System.Windows.Media.PathFigure> to which the <xref:System.Windows.Media.BezierSegment> is added.</span></span>  
  
<a name="dependencyPropertyInfo_Point3"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="118ce-166">종속성 속성 정보</span><span class="sxs-lookup"><span data-stu-id="118ce-166">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="118ce-167">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="118ce-167">Identifier field</span></span>|<xref:System.Windows.Media.BezierSegment.Point3Property>|  
|<span data-ttu-id="118ce-168">로 메타 데이터 속성 설정 `true`</span><span class="sxs-lookup"><span data-stu-id="118ce-168">Metadata properties set to `true`</span></span>|<span data-ttu-id="118ce-169">없음</span><span class="sxs-lookup"><span data-stu-id="118ce-169">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Point3Property">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty Point3Property;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty Point3Property" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.BezierSegment.Point3Property" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Point3Property As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ Point3Property;" />
      <MemberSignature Language="F#" Value=" staticval mutable Point3Property : System.Windows.DependencyProperty" Usage="System.Windows.Media.BezierSegment.Point3Property" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="118ce-170">
            <see cref="P:System.Windows.Media.BezierSegment.Point3" /> 종속성 속성을 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="118ce-170">Identifies the <see cref="P:System.Windows.Media.BezierSegment.Point3" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>