<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Visual.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac53e9ff5e020c2a0b40cc9f1a9cf79c83b9cddf495.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3e9ff5e020c2a0b40cc9f1a9cf79c83b9cddf495</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.Visual">
          <source>Provides rendering support in WPF, which includes hit testing, coordinate transformation, and bounding box calculations.</source>
          <target state="translated">적중 테스트, 좌표 변환, 경계 상자 계산 등을 포함한 WPF의 렌더링 지원을 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Visual">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph> class is the basic abstraction from which every <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph> object derives.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph> 클래스는 기본 추상화 하는 모든 <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph> 개체에서 파생 됩니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Visual">
          <source>It also serves as the entry point for writing new controls in <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>, and in many ways can be thought of as an equivalent of a window handle (HWND) in the <ph id="ph2">[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]</ph> application model.</source>
          <target state="translated">새 컨트롤을 작성 하는 것에 대 한 진입점으로도 사용 <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>, 여러 가지 방법으로 일종의 창 핸들 (HWND)의 해당에서 및는 <ph id="ph2">[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]</ph> 응용 프로그램 모델입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Visual">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph> object is a core <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> object, whose primary role is to provide rendering support.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph> 개체는 핵심 <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> 주 역할이 렌더링 지원을 제공 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Visual">
          <source>User interface controls, such as <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>, derive from the <ph id="ph3">&lt;xref:System.Windows.Media.Visual&gt;</ph> class, and use the <ph id="ph4">&lt;xref:System.Windows.Media.Visual&gt;</ph> defined properties for persisting their rendering data.</source>
          <target state="translated">와 같은 사용자 인터페이스 컨트롤 <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>에서 파생 되는 <ph id="ph3">&lt;xref:System.Windows.Media.Visual&gt;</ph> 클래스를 사용 하 여는 <ph id="ph4">&lt;xref:System.Windows.Media.Visual&gt;</ph> 렌더링 데이터를 유지 하는 것에 대 한 속성을 정의 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Visual">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph> object provides support for the following:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph> 개체 다음에 대 한 지원을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Visual">
          <source>Output display: Rendering the persisted, serialized drawing content of a visual.</source>
          <target state="translated">출력 표시: 시각적 개체의 serialize된 지속형 그리기 콘텐츠 렌더링</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Visual">
          <source>Transformations: Performing transformations on a visual.</source>
          <target state="translated">변환: 시각적 개체에 대해 변환 수행</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Visual">
          <source>Clipping: Providing clipping region support for a visual.</source>
          <target state="translated">클리핑: 시각적 개체에 대해 클리핑 영역 지원 제공</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Visual">
          <source>Hit testing: Determining whether a specified coordinate (point) or geometry is contained within the bounds of a visual.</source>
          <target state="translated">적중 테스트:에 지정 된 좌표 (포인트) 또는 기 하 도형 시각적 개체의 범위 내에 포함 되어 있는지 여부를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Visual">
          <source>Bounding box calculations: Determining the bounding rectangle of a visual.</source>
          <target state="translated">경계 상자 계산: 시각적 개체의 경계 사각형 결정</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Visual">
          <source>Architecturally, the <ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph> object does not include support for other application development requirements / <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> features that are not immediately related to its rendering, such as the following:</source>
          <target state="translated">아키텍처 측면에서 <ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph> 개체에는 다른 응용 프로그램 개발 요구 사항에 대 한 지원을 / <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> 즉시 다음과 같은 렌더링과 관련 되지 않은 기능:</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Visual">
          <source>Event handling</source>
          <target state="translated">이벤트 처리</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Visual">
          <source>Layout</source>
          <target state="translated">레이아웃</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Visual">
          <source>Styles</source>
          <target state="translated">스타일</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Visual">
          <source>Data binding</source>
          <target state="translated">데이터 바인딩</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Visual">
          <source>Globalization</source>
          <target state="translated">전역화</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Visual">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph> is provided as a public abstract class from which further classes can be derived.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph> 공용 추상 클래스는 추가 클래스 파생 될 수로 제공 됩니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Visual">
          <source>The following illustration shows the hierarchy of the existing visual objects that are defined in the <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> architecture.</source>
          <target state="translated">다음 그림에 정의 된 기존 시각적 개체의 계층 구조를 보여 줍니다.는 <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> 아키텍처.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Visual">
          <source><bpt id="p1">![</bpt>Diagram of classes derived from the Visual object<ept id="p1">]</ept><bpt id="p2">(~/add/media/visualclass01.png "</bpt>Diagram of classes derived from the Visual object<ept id="p2">")</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>시각적 개체에서 파생 된 클래스의 다이어그램<ept id="p1">]</ept><bpt id="p2">(~/add/media/visualclass01.png "</bpt>시각적 개체에서 파생 된 클래스의 다이어그램<ept id="p2">")</ept></target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Visual">
          <source>Visual class hierarchy</source>
          <target state="translated">시각적 개체 클래스 계층 구조</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Visual">
          <source>In some cases, members that are defined as protected in <ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph> are exposed as more readily accessible members with similar names in the derived <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph> class.</source>
          <target state="translated">경우에 따라로 정의 된 구성원에서 보호 <ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph> 에서 파생 된 유사한 이름의 쉽게 액세스할 수 있는 멤버로 노출 되 <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Visual">
          <source>For more information, see <bpt id="p1">[</bpt>WPF Graphics Rendering Overview<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/wpf-graphics-rendering-overview.md)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>WPF 그래픽 렌더링 개요<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/wpf-graphics-rendering-overview.md)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Visual">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph> has a limited number of levels.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph> 제한 된 수의 수준에 있습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Visual">
          <source>In previous versions of the .NET Framework, this maximum depth was 255.</source>
          <target state="translated">.NET Framework의 이전 버전에서는이 최대 깊이 255 였습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Visual">
          <source>This limit is inadequate for some layouts that have many levels in the visual tree.</source>
          <target state="translated">이 한도 시각적 트리에 여러 수준이 있는 일부 레이아웃에 적합 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Visual">
          <source>In <ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>, the maximum depth of a <ph id="ph2">&lt;xref:System.Windows.Media.Visual&gt;</ph> is 2047, which enables much deeper visual trees.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>의 최대 깊이 <ph id="ph2">&lt;xref:System.Windows.Media.Visual&gt;</ph> 은 훨씬 더 깊은 시각적 트리를 매핑함으로써 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Visual">
          <source>In most applications, there is not enough stack space to traverse so many levels, and the result is a <ph id="ph1">&lt;xref:System.StackOverflowException&gt;</ph> during layout.</source>
          <target state="translated">대부분의 응용 프로그램에 공간이 충분 한 스택 많은 수준을 통과 하 고 결과 한 <ph id="ph1">&lt;xref:System.StackOverflowException&gt;</ph> 레이아웃 중입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Visual">
          <source>For the default stack size, this exception is usually thrown when the tree depth is approximately 800, which corresponds to about 190 nested <ph id="ph1">&lt;xref:System.Windows.Controls.TreeViewItem&gt;</ph> objects.</source>
          <target state="translated">기본 스택 크기에 대 한이 예외는 대개 throw 트리 깊이 약 800 중첩 190 약에 해당 하는 경우 <ph id="ph1">&lt;xref:System.Windows.Controls.TreeViewItem&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Visual">
          <source>If this exception is thrown by your application and you need to have a deeper visual tree, you can increase the application's stack size.</source>
          <target state="translated">응용 프로그램에서이 예외는 throw 깊은 시각적 트리 있어야 하는 경우에 응용 프로그램의 스택 크기를 늘릴 수 있습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Visual">
          <source>You can increase the size of the stack by using the /STACK option at compile time or by using the EDITBIN utility.</source>
          <target state="translated">컴파일 타임에 /STACK 옵션을 사용 하 여 또는 EDITBIN 유틸리티를 사용 하 여 스택 크기를 늘릴 수 있습니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Visual">
          <source>Increasing the stack size may affect your application's performance.</source>
          <target state="translated">스택 크기를 늘리면 응용 프로그램의 성능에 영향을 줄 수 있습니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.Visual">
          <source>For more information, see <bpt id="p1">[</bpt>Stack Allocations<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=165510)</ept> and <bpt id="p2">[</bpt>EDITBIN Options<ept id="p2">](http://go.microsoft.com/fwlink/?LinkId=165511)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>스택 할당<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=165510)</ept> 및 <bpt id="p2">[</bpt>EDITBIN 옵션<ept id="p2">](http://go.microsoft.com/fwlink/?LinkId=165511)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Visual.#ctor">
          <source>Provides the base initialization for objects derived from the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> 클래스에서 파생된 개체의 기본 초기화를 제공합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Visual.AddVisualChild(System.Windows.Media.Visual)">
          <source>The child visual object to add to parent visual.</source>
          <target state="translated">부모 시각적 개체에 추가할 자식 시각적 개체입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Visual.AddVisualChild(System.Windows.Media.Visual)">
          <source>Defines the parent-child relationship between two visuals.</source>
          <target state="translated">두 시각적 개체 사이의 부모/자식 관계를 정의합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Visual.AddVisualChild(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.Visual.AddVisualChild%2A&gt;</ph> method sets up the parent-child relationship between two visual objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.Visual.AddVisualChild%2A&gt;</ph> 메서드 두 시각적 개체 간의 부모-자식 관계를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Visual.AddVisualChild(System.Windows.Media.Visual)">
          <source>This method must be used when you need greater low-level control over the underlying storage implementation of visual child objects.</source>
          <target state="translated">시각적 자식 개체의 기본 저장소 구현에 대 한 하위 수준 제어 강화 해야 하는 경우이 메서드를 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Visual.AddVisualChild(System.Windows.Media.Visual)">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> can be used as a default implementation for storing child objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> 자식 개체를 저장 하기 위한 기본 구현으로 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Visual.AddVisualChild(System.Windows.Media.Visual)">
          <source>The following example shows how to define custom storage requirements for a visual child.</source>
          <target state="translated">다음 예제에서는 시각적 자식에 대 한 사용자 지정 저장소 요구 사항을 정의 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Visual.AddVisualChild(System.Windows.Media.Visual)">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Windows.Media.Visual.AddVisualChild%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Visual.RemoveVisualChild%2A&gt;</ph> methods to sets up the parent-child relationship between the parent visual and <ph id="ph3">`child`</ph>.</source>
          <target state="translated">이 예제에서는 사용은 <ph id="ph1">&lt;xref:System.Windows.Media.Visual.AddVisualChild%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Media.Visual.RemoveVisualChild%2A&gt;</ph> 부모 표시 간의 부모-자식 관계를 설정 하는 메서드 및 <ph id="ph3">`child`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Visual.AddVisualChild(System.Windows.Media.Visual)">
          <source>In order for the visual tree to be enumerated correctly, the example provides overridden implementations of the <ph id="ph1">&lt;xref:System.Windows.Media.Visual.GetVisualChild%2A&gt;</ph> method and <ph id="ph2">&lt;xref:System.Windows.Media.Visual.VisualChildrenCount%2A&gt;</ph> property.</source>
          <target state="translated">시각적 트리를 올바르게 열거에 대 한 순서로 예제에서는 제공의 재정의 된 구현에서 <ph id="ph1">&lt;xref:System.Windows.Media.Visual.GetVisualChild%2A&gt;</ph> 메서드 및 <ph id="ph2">&lt;xref:System.Windows.Media.Visual.VisualChildrenCount%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Visual.AddVisualChild(System.Windows.Media.Visual)">
          <source>Although it is possible to use <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> to create parent-child relationships between visual objects, it is more efficient to provide your own custom storage implementation when only one child is linked to a parent.</source>
          <target state="translated">사용할 수 있지만 <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> 부모-자식 시각적 개체 간의 관계를 만들려면 것이 더 효율적 하나의 자식만 부모에 연결 하면 사용자 고유의 사용자 지정 저장소 구현을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Visual.FindCommonVisualAncestor(System.Windows.DependencyObject)">
          <source>A visual object of type <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph> 형식의 시각적 개체입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Visual.FindCommonVisualAncestor(System.Windows.DependencyObject)">
          <source>Returns the common ancestor of two visual objects.</source>
          <target state="translated">두 시각적 개체의 공통 상위 항목을 반환합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Visual.FindCommonVisualAncestor(System.Windows.DependencyObject)">
          <source>The common ancestor of the visual object and <ph id="ph1">&lt;paramref name="otherVisual" /&gt;</ph> if one exists; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">시각적 개체와 <ph id="ph1">&lt;paramref name="otherVisual" /&gt;</ph>의 공통 상위 항목(있는 경우)이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Visual.FindCommonVisualAncestor(System.Windows.DependencyObject)">
          <source>2D and 3D objects can have common visual ancestors, so it is possible to pass a <ph id="ph1">&lt;xref:System.Windows.Media.Media3D.Visual3D&gt;</ph> for <ph id="ph2">`otherVisual`</ph>.</source>
          <target state="translated">2D 및 3D 개체 이므로 전달할 수 시각적 공통 상위 항목이 있을 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Media.Media3D.Visual3D&gt;</ph> 에 대 한 <ph id="ph2">`otherVisual`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Visual.GetVisualChild(System.Int32)">
          <source>The index of the visual object in the <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>에 있는 시각적 개체의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Visual.GetVisualChild(System.Int32)">
          <source>Returns the specified <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> in the parent <ph id="ph2">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>.</source>
          <target state="translated">부모 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>에 있는 지정한 <ph id="ph2">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>을 반환합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Visual.GetVisualChild(System.Int32)">
          <source>The child in the <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> at the specified <ph id="ph2">&lt;paramref name="index" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>에서 지정된 <ph id="ph2">&lt;paramref name="index" /&gt;</ph> 값에 있는 자식입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Visual.GetVisualChild(System.Int32)">
          <source>By default, a <ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph> has no children.</source>
          <target state="translated">기본적으로는 <ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph> 에 따르면 자식이 없습니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Visual.GetVisualChild(System.Int32)">
          <source>Therefore, the default implementation always throws an <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>.</source>
          <target state="translated">따라서 기본 구현에서는 항상 throw 한 <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Visual.GetVisualChild(System.Int32)">
          <source>The following example defines an overridden implementation of <ph id="ph1">&lt;xref:System.Windows.Media.Visual.GetVisualChild%2A&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 정의의 재정의 된 구현을 <ph id="ph1">&lt;xref:System.Windows.Media.Visual.GetVisualChild%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Visual.GetVisualChild(System.Int32)">
          <source>A class that derives from <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> must override this method, and also the <ph id="ph2">&lt;see cref="P:System.Windows.Media.Visual.VisualChildrenCount" /&gt;</ph> property, for the visual tree to be enumerated correctly.</source>
          <target state="translated">파생 되는 클래스 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> 이 메서드를 재정의 해야 그리고는 <ph id="ph2">&lt;see cref="P:System.Windows.Media.Visual.VisualChildrenCount" /&gt;</ph> 속성의 표시 트리를 올바르게 열거에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.Visual">
          <source>Determines whether a point or geometry value is within the bounds of the visual object.</source>
          <target state="translated">점 또는 기하 도형 값이 시각적 개체의 경계 내에 있는지 확인합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Media.GeometryHitTestParameters" /&gt;</ph> object that specifies the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Geometry" /&gt;</ph> to hit test against.</source>
          <target state="translated">적중 테스트를 수행할 대상 <ph id="ph1">&lt;see cref="T:System.Windows.Media.GeometryHitTestParameters" /&gt;</ph>를 지정하는 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Geometry" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)">
          <source>Determines whether a geometry value is within the bounds of the visual object.</source>
          <target state="translated">기하 도형 값이 시각적 개체의 경계 내에 있는지 확인합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Media.GeometryHitTestResult" /&gt;</ph> that represents the result of the hit test.</source>
          <target state="translated">적중 테스트 결과를 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Media.GeometryHitTestResult" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)">
          <source>You can override default hit testing support for a visual object by overriding the <ph id="ph1">&lt;xref:System.Windows.Media.Visual.HitTestCore%2A&gt;</ph> method.</source>
          <target state="translated">재정의 하 여 시각적 개체에 대 한 지원을 테스트 하는 기본 적중 재정의할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Media.Visual.HitTestCore%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)">
          <source>This means that when you invoke the <ph id="ph1">&lt;xref:System.Windows.Media.VisualTreeHelper.HitTest%2A&gt;</ph> method, your overridden implementation of <ph id="ph2">&lt;xref:System.Windows.Media.Visual.HitTestCore%2A&gt;</ph> is called.</source>
          <target state="translated">즉, 호출 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Media.VisualTreeHelper.HitTest%2A&gt;</ph> 메서드를 재정의 된 구현 <ph id="ph2">&lt;xref:System.Windows.Media.Visual.HitTestCore%2A&gt;</ph> 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)">
          <source>Your overridden method is called when a hit test falls within the bounding rectangle of the visual object, even if the coordinate falls outside the geometry of the visual object.</source>
          <target state="translated">재정의 된 메서드는 좌표가 시각적 개체의 기 하 도형을 밖에 있는 경우에이 시각적 개체의 경계 사각형 내에 적중 횟수 테스트 하는 경우 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)">
          <source>The following example shows how to override the <ph id="ph1">&lt;xref:System.Windows.Media.Visual.HitTestCore%28System.Windows.Media.GeometryHitTestParameters%29&gt;</ph> method.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Media.Visual.HitTestCore%28System.Windows.Media.GeometryHitTestParameters%29&gt;</ph> 메서드를 재정의하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)">
          <source>One reason you might want to override this method is to provide additional functionality during the hit testing process.</source>
          <target state="translated">이 메서드를 재정의 하려는 경우 한 가지 이유는 적중 횟수 테스트 프로세스 중 추가 기능을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.PointHitTestParameters)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Media.PointHitTestParameters" /&gt;</ph> object that specifies the <ph id="ph2">&lt;see cref="T:System.Windows.Point" /&gt;</ph> to hit test against.</source>
          <target state="translated">적중 테스트를 수행할 대상 <ph id="ph1">&lt;see cref="T:System.Windows.Media.PointHitTestParameters" /&gt;</ph>를 지정하는 <ph id="ph2">&lt;see cref="T:System.Windows.Point" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.PointHitTestParameters)">
          <source>Determines whether a point coordinate value is within the bounds of the visual object.</source>
          <target state="translated">점 좌표 값이 시각적 개체의 경계 내에 있는지 확인합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.PointHitTestParameters)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Media.HitTestResult" /&gt;</ph> that represents the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> that is returned from a hit test.</source>
          <target state="translated">적중 테스트에서 반환되는 <ph id="ph1">&lt;see cref="T:System.Windows.Media.HitTestResult" /&gt;</ph>을 나타내는 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.PointHitTestParameters)">
          <source>You can override the default hit testing support on visual objects by overriding the <ph id="ph1">&lt;xref:System.Windows.Media.Visual.HitTestCore%2A&gt;</ph> method.</source>
          <target state="translated">기본 적중 시각적 개체에 대 한 지원 재정의 하 여 테스트를 재정의할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Media.Visual.HitTestCore%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.PointHitTestParameters)">
          <source>This means that when you invoke the <ph id="ph1">&lt;xref:System.Windows.Media.VisualTreeHelper.HitTest%2A&gt;</ph> method, your overridden implementation of <ph id="ph2">&lt;xref:System.Windows.Media.Visual.HitTestCore%2A&gt;</ph> is called.</source>
          <target state="translated">즉, 호출 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Media.VisualTreeHelper.HitTest%2A&gt;</ph> 메서드를 재정의 된 구현 <ph id="ph2">&lt;xref:System.Windows.Media.Visual.HitTestCore%2A&gt;</ph> 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.PointHitTestParameters)">
          <source>Your overridden method is called when a hit test falls within the bounding rectangle of the visual object, even if the coordinate falls outside the geometry of the visual object.</source>
          <target state="translated">재정의 된 메서드는 좌표가 시각적 개체의 기 하 도형을 밖에 있는 경우에이 시각적 개체의 경계 사각형 내에 적중 횟수 테스트 하는 경우 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.PointHitTestParameters)">
          <source>The following example shows how to override the <ph id="ph1">&lt;xref:System.Windows.Media.Visual.HitTestCore%28System.Windows.Media.PointHitTestParameters%29&gt;</ph> method.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Media.Visual.HitTestCore%28System.Windows.Media.PointHitTestParameters%29&gt;</ph> 메서드를 재정의하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.PointHitTestParameters)">
          <source>One reason you might want to override this method is to provide additional functionality during the hit testing process.</source>
          <target state="translated">이 메서드를 재정의 하려는 경우 한 가지 이유는 적중 횟수 테스트 프로세스 중 추가 기능을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Visual.IsAncestorOf(System.Windows.DependencyObject)">
          <source>A value of type <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph> 형식의 값입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Visual.IsAncestorOf(System.Windows.DependencyObject)">
          <source>Determines whether the visual object is an ancestor of the descendant visual object.</source>
          <target state="translated">시각적 개체가 하위 시각적 개체의 상위 항목인지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Visual.IsAncestorOf(System.Windows.DependencyObject)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the visual object is an ancestor of <ph id="ph2">&lt;paramref name="descendant" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">시각적 개체가 <ph id="ph2">&lt;paramref name="descendant" /&gt;</ph>의 상위 항목이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Visual.IsDescendantOf(System.Windows.DependencyObject)">
          <source>A value of type <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph> 형식의 값입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Visual.IsDescendantOf(System.Windows.DependencyObject)">
          <source>Determines whether the visual object is a descendant of the ancestor visual object.</source>
          <target state="translated">시각적 개체가 상위 시각적 개체의 하위 항목인지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Visual.IsDescendantOf(System.Windows.DependencyObject)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the visual object is a descendant of <ph id="ph2">&lt;paramref name="ancestor" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">시각적 개체가 <ph id="ph2">&lt;paramref name="ancestor" /&gt;</ph>의 하위 항목이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Visual.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)">
          <source>The previous DPI scale setting.</source>
          <target state="translated">이전 DPI 배율 설정입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Visual.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)">
          <source>The new DPI scale setting.</source>
          <target state="translated">새 DPI 배율 설정입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Visual.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)">
          <source>Called when the DPI at which this View is rendered changes.</source>
          <target state="translated">이 뷰가 렌더링되는 DPI가 변경될 때 호출됩니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Visual.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> that was added to the collection</source>
          <target state="translated">컬렉션에 추가된 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Visual.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> that was removed from the collection</source>
          <target state="translated">컬렉션에서 제거된 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Visual.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)">
          <source>Called when the <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> of the visual object is modified.</source>
          <target state="translated">시각적 개체의 <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>이 수정될 때 호출됩니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Visual.OnVisualParentChanged(System.Windows.DependencyObject)">
          <source>A value of type <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph> that represents the previous parent of the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph> 개체의 이전 부모를 나타내는 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> 형식의 값입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Visual.OnVisualParentChanged(System.Windows.DependencyObject)">
          <source>If the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> object did not have a previous parent, the value of the parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> 개체에 이전 부모가 없는 경우 매개 변수 값은 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Visual.OnVisualParentChanged(System.Windows.DependencyObject)">
          <source>Called when the parent of the visual object is changed.</source>
          <target state="translated">시각적 개체의 부모를 변경할 때 호출됩니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Visual.OnVisualParentChanged(System.Windows.DependencyObject)">
          <source>A class that derives from <ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph> can choose to override this method.</source>
          <target state="translated">파생 되는 클래스 <ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph> 이 메서드를 재정의 하도록 선택할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Visual.OnVisualParentChanged(System.Windows.DependencyObject)">
          <source>There is no "VisualParentChanged" event provided that reports this change to instances.</source>
          <target state="translated">이벤트는 없습니다 "VisualParentChanged" 인스턴스에이 변경을 보고를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Visual.OnVisualParentChanged(System.Windows.DependencyObject)">
          <source>Therefore, you must override this method to handle notification scenarios and provide an instance version of the notification if that is part of your scenario.</source>
          <target state="translated">따라서 알림 시나리오를 처리 하 고 시나리오에 포함 된 경우 알림 메시지의 인스턴스 버전을 제공 하려면이 메서드를 재정의 해야 합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Visual.OnVisualParentChanged(System.Windows.DependencyObject)">
          <source>The following example defines an overridden implementation of <ph id="ph1">&lt;xref:System.Windows.Media.Visual.OnVisualParentChanged%2A&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 정의의 재정의 된 구현을 <ph id="ph1">&lt;xref:System.Windows.Media.Visual.OnVisualParentChanged%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Visual.PointFromScreen(System.Windows.Point)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Point" /&gt;</ph> value in screen coordinates.</source>
          <target state="translated">화면 좌표에 있는 <ph id="ph1">&lt;see cref="T:System.Windows.Point" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Visual.PointFromScreen(System.Windows.Point)">
          <source>Converts a <ph id="ph1">&lt;see cref="T:System.Windows.Point" /&gt;</ph> in screen coordinates into a <ph id="ph2">&lt;see cref="T:System.Windows.Point" /&gt;</ph> that represents the current coordinate system of the <ph id="ph3">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          <target state="translated">화면 좌표에 있는 <ph id="ph1">&lt;see cref="T:System.Windows.Point" /&gt;</ph>를 <ph id="ph2">&lt;see cref="T:System.Windows.Point" /&gt;</ph>의 현재 좌표계를 나타내는 <ph id="ph3">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>로 변환합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Visual.PointFromScreen(System.Windows.Point)">
          <source>The converted <ph id="ph1">&lt;see cref="T:System.Windows.Point" /&gt;</ph> value that represents the current coordinate system of the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Point" /&gt;</ph>의 현재 좌표계를 나타내는 변환된 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Visual.PointFromScreen(System.Windows.Point)">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Media.Visual.PointToScreen%2A&gt;</ph> method to convert a <ph id="ph2">&lt;xref:System.Windows.Point&gt;</ph> that represents the current coordinate system of the <ph id="ph3">&lt;xref:System.Windows.Media.Visual&gt;</ph> into a <ph id="ph4">&lt;xref:System.Windows.Point&gt;</ph> in screen coordinates.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Media.Visual.PointToScreen%2A&gt;</ph> 변환 하는 메서드는 <ph id="ph2">&lt;xref:System.Windows.Point&gt;</ph> 의 현재 좌표 시스템을 나타내는 <ph id="ph3">&lt;xref:System.Windows.Media.Visual&gt;</ph> 에 <ph id="ph4">&lt;xref:System.Windows.Point&gt;</ph> 화면 좌표에서입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Visual.PointToScreen(System.Windows.Point)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Point" /&gt;</ph> value that represents the current coordinate system of the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Point" /&gt;</ph>의 현재 좌표계를 나타내는 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Visual.PointToScreen(System.Windows.Point)">
          <source>Converts a <ph id="ph1">&lt;see cref="T:System.Windows.Point" /&gt;</ph> that represents the current coordinate system of the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> into a <ph id="ph3">&lt;see cref="T:System.Windows.Point" /&gt;</ph> in screen coordinates.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Point" /&gt;</ph>의 현재 좌표계를 나타내는 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>를 화면 좌표에 있는 <ph id="ph3">&lt;see cref="T:System.Windows.Point" /&gt;</ph>로 변환합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Visual.PointToScreen(System.Windows.Point)">
          <source>The converted <ph id="ph1">&lt;see cref="T:System.Windows.Point" /&gt;</ph> value in screen coordinates.</source>
          <target state="translated">화면 좌표로 변환된 <ph id="ph1">&lt;see cref="T:System.Windows.Point" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Visual.PointToScreen(System.Windows.Point)">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Media.Visual.PointFromScreen%2A&gt;</ph> method to convert a <ph id="ph2">&lt;xref:System.Windows.Point&gt;</ph> in screen coordinates into a <ph id="ph3">&lt;xref:System.Windows.Point&gt;</ph> that represents the current coordinate system of the <ph id="ph4">&lt;xref:System.Windows.Media.Visual&gt;</ph>.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Media.Visual.PointFromScreen%2A&gt;</ph> 변환 하는 메서드는 <ph id="ph2">&lt;xref:System.Windows.Point&gt;</ph> 화면 좌표에는 <ph id="ph3">&lt;xref:System.Windows.Point&gt;</ph> 의 현재 좌표 시스템을 나타내는 <ph id="ph4">&lt;xref:System.Windows.Media.Visual&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Visual.RemoveVisualChild(System.Windows.Media.Visual)">
          <source>The child visual object to remove from the parent visual.</source>
          <target state="translated">부모 시각적 개체에서 제거할 자식 시각적 개체입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Visual.RemoveVisualChild(System.Windows.Media.Visual)">
          <source>Removes the parent-child relationship between two visuals.</source>
          <target state="translated">두 시각적 개체 사이의 부모/자식 관계를 제거합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Visual.RemoveVisualChild(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.Visual.RemoveVisualChild%2A&gt;</ph> method removes the parent-child relationship between two visuals.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.Visual.RemoveVisualChild%2A&gt;</ph> 메서드 두 시각적 개체 간의 부모-자식 관계를 제거 합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Visual.RemoveVisualChild(System.Windows.Media.Visual)">
          <source>This method, along with the <ph id="ph1">&lt;xref:System.Windows.Media.Visual.AddVisualChild%2A&gt;</ph> method, must be used when you need greater low-level control over the underlying storage implementation of visual child objects.</source>
          <target state="translated">이 메서드를 함께 <ph id="ph1">&lt;xref:System.Windows.Media.Visual.AddVisualChild%2A&gt;</ph> 시각적 자식 개체의 기본 저장소 구현 큰 하위 수준 제어 해야 할 때 메서드를 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Visual.RemoveVisualChild(System.Windows.Media.Visual)">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> can be used as a default implementation for storing child objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> 자식 개체를 저장 하기 위한 기본 구현으로 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Visual.RemoveVisualChild(System.Windows.Media.Visual)">
          <source>The following example shows how to define custom storage requirements for a visual child.</source>
          <target state="translated">다음 예제에서는 시각적 자식에 대 한 사용자 지정 저장소 요구 사항을 정의 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Visual.RemoveVisualChild(System.Windows.Media.Visual)">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Windows.Media.Visual.AddVisualChild%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Visual.RemoveVisualChild%2A&gt;</ph> methods to sets up the parent-child relationship between the parent visual and <ph id="ph3">`child`</ph>.</source>
          <target state="translated">이 예제에서는 사용은 <ph id="ph1">&lt;xref:System.Windows.Media.Visual.AddVisualChild%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Media.Visual.RemoveVisualChild%2A&gt;</ph> 부모 표시 간의 부모-자식 관계를 설정 하는 메서드 및 <ph id="ph3">`child`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Visual.RemoveVisualChild(System.Windows.Media.Visual)">
          <source>In order for the visual tree to be enumerated correctly, the example provides overridden implementations of the <ph id="ph1">&lt;xref:System.Windows.Media.Visual.GetVisualChild%2A&gt;</ph> method and <ph id="ph2">&lt;xref:System.Windows.Media.Visual.VisualChildrenCount%2A&gt;</ph> property.</source>
          <target state="translated">시각적 트리를 올바르게 열거에 대 한 순서로 예제에서는 제공의 재정의 된 구현에서 <ph id="ph1">&lt;xref:System.Windows.Media.Visual.GetVisualChild%2A&gt;</ph> 메서드 및 <ph id="ph2">&lt;xref:System.Windows.Media.Visual.VisualChildrenCount%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Visual.RemoveVisualChild(System.Windows.Media.Visual)">
          <source>Although it is possible to use <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> to create parent-child relationships between visual objects, it is more efficient to provide your own custom storage implementation when only one child is linked to a parent.</source>
          <target state="translated">사용할 수 있지만 <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> 부모-자식 시각적 개체 간의 관계를 만들려면 것이 더 효율적 하나의 자식만 부모에 연결 하면 사용자 고유의 사용자 지정 저장소 구현을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.Visual">
          <source>Returns a transform that can be used to transform coordinates from the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> to the specified ancestor of the visual object.</source>
          <target state="translated">좌표를 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>에서 시각적 개체의 지정된 상위 항목으로 변환하는 데 사용할 수 있는 변환을 반환합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Media3D.Visual3D)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Media3D.Visual3D" /&gt;</ph> to which the coordinates are transformed.</source>
          <target state="translated">좌표가 변환되는 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Media3D.Visual3D" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Media3D.Visual3D)">
          <source>Returns a transform that can be used to transform coordinates from the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> to the specified <ph id="ph2">&lt;see cref="T:System.Windows.Media.Media3D.Visual3D" /&gt;</ph> ancestor of the visual object.</source>
          <target state="translated">좌표를 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>에서 시각적 개체의 지정된 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Media3D.Visual3D" /&gt;</ph> 상위 항목으로 변환하는 데 사용할 수 있는 변환을 반환합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Media3D.Visual3D)">
          <source>A transform that can be used to transform coordinates from the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> to the specified <ph id="ph2">&lt;see cref="T:System.Windows.Media.Media3D.Visual3D" /&gt;</ph> ancestor of the visual object.</source>
          <target state="translated">좌표를 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>에서 시각적 개체의 지정된 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Media3D.Visual3D" /&gt;</ph> 상위 항목으로 변환하는 데 사용할 수 있는 변환입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> to which the coordinates are transformed.</source>
          <target state="translated">좌표가 변환되는 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Visual)">
          <source>Returns a transform that can be used to transform coordinates from the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> to the specified <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> ancestor of the visual object.</source>
          <target state="translated">좌표를 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>에서 시각적 개체의 지정된 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> 상위 항목으로 변환하는 데 사용할 수 있는 변환을 반환합니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Visual)">
          <source>A value of type <ph id="ph1">&lt;see cref="T:System.Windows.Media.GeneralTransform" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.GeneralTransform" /&gt;</ph> 형식의 값입니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Visual)">
          <source>Alternatively, you can use the <ph id="ph1">&lt;xref:System.Windows.Media.VisualTreeHelper.GetOffset%2A?displayProperty=nameWithType&gt;</ph> method to retrieve the offset of a visual object relative to its parent.</source>
          <target state="translated">사용할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Media.VisualTreeHelper.GetOffset%2A?displayProperty=nameWithType&gt;</ph> 메서드를 부모에 상대적인 시각적 개체의 오프셋을 검색 합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Visual)">
          <source>The offset values are contained within the returned <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> value.</source>
          <target state="translated">오프셋된 값이 포함 되어 반환 된 <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Visual)">
          <source>The following markup example shows a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> that is nested within two <ph id="ph2">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph> objects.</source>
          <target state="translated">다음 예제에서는 태그는 <ph id="ph1">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> 안에 두 개의 중첩 된 <ph id="ph2">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Visual)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Media.Visual.TransformToAncestor%2A&gt;</ph> method to retrieve the offset of the <ph id="ph2">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> relative to the containing <ph id="ph3">&lt;xref:System.Windows.Window&gt;</ph>.</source>
          <target state="translated">다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Windows.Media.Visual.TransformToAncestor%2A&gt;</ph> 의 오프셋을 검색 하는 메서드는 <ph id="ph2">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> 포함 하는 기준으로 <ph id="ph3">&lt;xref:System.Windows.Window&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Visual)">
          <source>The offset values are contained in the returned <ph id="ph1">&lt;xref:System.Windows.Media.GeneralTransform&gt;</ph>.</source>
          <target state="translated">오프셋된 값이 포함 되어 반환 된 <ph id="ph1">&lt;xref:System.Windows.Media.GeneralTransform&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Visual)">
          <source>The offset takes into account the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Margin%2A&gt;</ph> values for all objects within the containing <ph id="ph2">&lt;xref:System.Windows.Window&gt;</ph>.</source>
          <target state="translated">오프셋은 고려는 <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Margin%2A&gt;</ph> 내의 포함 하는 모든 개체에 대 한 값 <ph id="ph2">&lt;xref:System.Windows.Window&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Visual)">
          <source>In this case, <ph id="ph1">&lt;xref:System.Windows.Vector.X%2A&gt;</ph> is 28, and <ph id="ph2">&lt;xref:System.Windows.Vector.Y%2A&gt;</ph> is 28.</source>
          <target state="translated">이 경우 <ph id="ph1">&lt;xref:System.Windows.Vector.X%2A&gt;</ph> 는 28, 및 <ph id="ph2">&lt;xref:System.Windows.Vector.Y%2A&gt;</ph> 는 28입니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Visual)">
          <source><ph id="ph1">&lt;paramref name="ancestor" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ancestor" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Visual)">
          <source><ph id="ph1">&lt;paramref name="ancestor" /&gt;</ph> is not an ancestor of the visual.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ancestor" /&gt;</ph>가 시각적 개체의 상위 항목인 경우</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Visual)">
          <source>The visual objects are not related.</source>
          <target state="translated">시각적 개체가 관련되지 않은 경우</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Visual.TransformToDescendant(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> to which the coordinates are transformed.</source>
          <target state="translated">좌표가 변환되는 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Visual.TransformToDescendant(System.Windows.Media.Visual)">
          <source>Returns a transform that can be used to transform coordinates from the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> to the specified visual object descendant.</source>
          <target state="translated">좌표를 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>에서 지정된 시각적 개체 하위 항목으로 변환하는 데 사용할 수 있는 변환을 반환합니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Visual.TransformToDescendant(System.Windows.Media.Visual)">
          <source>A value of type <ph id="ph1">&lt;see cref="T:System.Windows.Media.GeneralTransform" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.GeneralTransform" /&gt;</ph> 형식의 값입니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Visual.TransformToDescendant(System.Windows.Media.Visual)">
          <source>The following markup example shows a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> that is contained within a <ph id="ph2">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph> object.</source>
          <target state="translated">다음 예제에서는 태그는 <ph id="ph1">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> 내에 포함 된는 <ph id="ph2">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Visual.TransformToDescendant(System.Windows.Media.Visual)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Media.Visual.TransformToDescendant%2A&gt;</ph> method to retrieve the offset of the <ph id="ph2">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph> relative to its child <ph id="ph3">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph>.</source>
          <target state="translated">다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Windows.Media.Visual.TransformToDescendant%2A&gt;</ph> 의 오프셋을 검색 하는 메서드는 <ph id="ph2">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph> 해당 자식에 상대적인 <ph id="ph3">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Visual.TransformToDescendant(System.Windows.Media.Visual)">
          <source>The offset values are contained within the returned <ph id="ph1">&lt;xref:System.Windows.Media.GeneralTransform&gt;</ph> value.</source>
          <target state="translated">오프셋된 값이 포함 되어 반환 된 <ph id="ph1">&lt;xref:System.Windows.Media.GeneralTransform&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Visual.TransformToDescendant(System.Windows.Media.Visual)">
          <source>The offset takes into account the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Margin%2A&gt;</ph> values for all objects.</source>
          <target state="translated">오프셋은 고려는 <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Margin%2A&gt;</ph> 모든 개체에 대 한 값입니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Visual.TransformToDescendant(System.Windows.Media.Visual)">
          <source>In this case, <ph id="ph1">&lt;xref:System.Windows.Vector.X%2A&gt;</ph> is -4, and <ph id="ph2">&lt;xref:System.Windows.Vector.Y%2A&gt;</ph> is -4.</source>
          <target state="translated">이 경우 <ph id="ph1">&lt;xref:System.Windows.Vector.X%2A&gt;</ph> -4 이며, 및 <ph id="ph2">&lt;xref:System.Windows.Vector.Y%2A&gt;</ph> 은-4입니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Visual.TransformToDescendant(System.Windows.Media.Visual)">
          <source>The offset values are negative values because the parent object is negatively offset relative to its child object.</source>
          <target state="translated">오프셋된 값은 해당 자식 개체를 기준으로 부모 개체 음의 방향으로 오프셋 때문에 음수 값입니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Visual.TransformToDescendant(System.Windows.Media.Visual)">
          <source><ph id="ph1">&lt;paramref name="descendant" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="descendant" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Visual.TransformToDescendant(System.Windows.Media.Visual)">
          <source>The visual is not an ancestor of the <ph id="ph1">&lt;paramref name="descendant" /&gt;</ph> visual.</source>
          <target state="translated">시각적 개체가 <ph id="ph1">&lt;paramref name="descendant" /&gt;</ph> 시각적 개체의 상위 항목이 아닌 경우</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Visual.TransformToDescendant(System.Windows.Media.Visual)">
          <source>The visual objects are not related.</source>
          <target state="translated">시각적 개체가 관련되지 않은 경우</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Visual.TransformToVisual(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> to which the coordinates are transformed.</source>
          <target state="translated">좌표가 변환되는 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Visual.TransformToVisual(System.Windows.Media.Visual)">
          <source>Returns a transform that can be used to transform coordinates from the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> to the specified visual object.</source>
          <target state="translated">좌표를 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>에서 지정된 시각적 개체로 변환하는 데 사용할 수 있는 변환을 반환합니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Visual.TransformToVisual(System.Windows.Media.Visual)">
          <source>A value of type <ph id="ph1">&lt;see cref="T:System.Windows.Media.GeneralTransform" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.GeneralTransform" /&gt;</ph> 형식의 값입니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Visual.TransformToVisual(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.Visual.TransformToAncestor%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Visual.TransformToDescendant%2A&gt;</ph> methods can also be used to return a transform for a visual object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.Visual.TransformToAncestor%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Media.Visual.TransformToDescendant%2A&gt;</ph> 시각적 개체에 대 한 변환을 반환할 방법을 사용할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Visual.TransformToVisual(System.Windows.Media.Visual)">
          <source>The following markup example shows a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> that is contained within a <ph id="ph2">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph> object.</source>
          <target state="translated">다음 예제에서는 태그는 <ph id="ph1">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> 내에 포함 된는 <ph id="ph2">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Visual.TransformToVisual(System.Windows.Media.Visual)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Media.Visual.TransformToVisual%2A&gt;</ph> method to retrieve the offset of the <ph id="ph2">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph> relative to its child <ph id="ph3">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph>.</source>
          <target state="translated">다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Windows.Media.Visual.TransformToVisual%2A&gt;</ph> 의 오프셋을 검색 하는 메서드는 <ph id="ph2">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph> 해당 자식에 상대적인 <ph id="ph3">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Visual.TransformToVisual(System.Windows.Media.Visual)">
          <source>The offset values are contained within the returned <ph id="ph1">&lt;xref:System.Windows.Media.GeneralTransform&gt;</ph> value.</source>
          <target state="translated">오프셋된 값이 포함 되어 반환 된 <ph id="ph1">&lt;xref:System.Windows.Media.GeneralTransform&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Visual.TransformToVisual(System.Windows.Media.Visual)">
          <source>The offset takes into account the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Margin%2A&gt;</ph> values for all objects.</source>
          <target state="translated">오프셋은 고려는 <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Margin%2A&gt;</ph> 모든 개체에 대 한 값입니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Visual.TransformToVisual(System.Windows.Media.Visual)">
          <source>In this case, <ph id="ph1">&lt;xref:System.Windows.Vector.X%2A&gt;</ph> is -4, and <ph id="ph2">&lt;xref:System.Windows.Vector.Y%2A&gt;</ph> is -4.</source>
          <target state="translated">이 경우 <ph id="ph1">&lt;xref:System.Windows.Vector.X%2A&gt;</ph> -4 이며, 및 <ph id="ph2">&lt;xref:System.Windows.Vector.Y%2A&gt;</ph> 은-4입니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Visual.TransformToVisual(System.Windows.Media.Visual)">
          <source>The offset values are negative values because the parent object is negatively offset relative to its child object.</source>
          <target state="translated">오프셋된 값은 해당 자식 개체를 기준으로 부모 개체 음의 방향으로 오프셋 때문에 음수 값입니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Visual.TransformToVisual(System.Windows.Media.Visual)">
          <source><ph id="ph1">&lt;paramref name="visual" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="visual" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Visual.TransformToVisual(System.Windows.Media.Visual)">
          <source>The visual objects are not related.</source>
          <target state="translated">시각적 개체가 관련되지 않은 경우</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.Visual.VisualBitmapEffect">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Effects.BitmapEffect" /&gt;</ph> value for the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.Effects.BitmapEffect" /&gt;</ph>에 대한 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualBitmapEffect">
          <source>The bitmap effect for this visual object.</source>
          <target state="translated">이 시각적 개체에 대한 비트맵 효과입니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.Visual.VisualBitmapEffectInput">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Effects.BitmapEffectInput" /&gt;</ph> value for the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.Effects.BitmapEffectInput" /&gt;</ph>에 대한 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualBitmapEffectInput">
          <source>The bitmap effect input value for this visual object.</source>
          <target state="translated">이 시각적 개체에 대한 비트맵 효과 입력 값입니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.Visual.VisualBitmapScalingMode">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Windows.Media.BitmapScalingMode" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.BitmapScalingMode" /&gt;</ph>의 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualBitmapScalingMode">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.BitmapScalingMode" /&gt;</ph> value for the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          <target state="translated">의 <ph id="ph1">&lt;see cref="T:System.Windows.Media.BitmapScalingMode" /&gt;</ph> 값입니다 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.Visual.VisualCacheMode">
          <source>Gets or sets a cached representation of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>의 캐시된 표현을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualCacheMode">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Media.CacheMode" /&gt;</ph> that holds a cached representation of the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.CacheMode" /&gt;</ph>의 캐시된 표현을 보유하는 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualCacheMode">
          <source>Set the <ph id="ph1">&lt;xref:System.Windows.Media.Visual.VisualCacheMode%2A&gt;</ph> property when you need to increase performance for content that is time-consuming to render.</source>
          <target state="translated">설정의 <ph id="ph1">&lt;xref:System.Windows.Media.Visual.VisualCacheMode%2A&gt;</ph> 속성을 렌더링 하는 데 많은 시간이 소요 되는 콘텐츠에 대 한 성능 향상을 위해 필요 합니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualCacheMode">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache&gt;</ph>.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache&gt;</ph>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.Visual.VisualChildrenCount">
          <source>Gets the number of child elements for the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>의 자식 요소 수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualChildrenCount">
          <source>The number of child elements.</source>
          <target state="translated">자식 요소 수입니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualChildrenCount">
          <source>By default, a <ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph> has no children.</source>
          <target state="translated">기본적으로는 <ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph> 에 따르면 자식이 없습니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualChildrenCount">
          <source>Therefore, the default implementation always returns 0.</source>
          <target state="translated">따라서 기본 구현에서는 항상 0을 반환합니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualChildrenCount">
          <source>The following example defines an overridden implementation of <ph id="ph1">&lt;xref:System.Windows.Media.Visual.VisualChildrenCount%2A&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 정의의 재정의 된 구현을 <ph id="ph1">&lt;xref:System.Windows.Media.Visual.VisualChildrenCount%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualChildrenCount">
          <source>A class that derives from <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> must override this property, and also the <ph id="ph2">&lt;see cref="M:System.Windows.Media.Visual.GetVisualChild(System.Int32)" /&gt;</ph> method, for the visual tree to be enumerated correctly.</source>
          <target state="translated">파생 되는 클래스 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> 이 속성을 재정의 해야 그리고는 <ph id="ph2">&lt;see cref="M:System.Windows.Media.Visual.GetVisualChild(System.Int32)" /&gt;</ph> 의 표시 트리를 올바르게 열거에 대 한 메서드.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.Visual.VisualClearTypeHint">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Windows.Media.ClearTypeHint" /&gt;</ph> that determines how ClearType is rendered in the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          <target state="translated">ClearType이 <ph id="ph1">&lt;see cref="T:System.Windows.Media.ClearTypeHint" /&gt;</ph>에서 렌더링되는 방법을 결정하는 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualClearTypeHint">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Media.ClearTypeHint" /&gt;</ph> of the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.ClearTypeHint" /&gt;</ph>의 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.Visual.VisualClip">
          <source>Gets or sets the clip region of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> as a <ph id="ph2">&lt;see cref="T:System.Windows.Media.Geometry" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>의 클립 영역을 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Geometry" /&gt;</ph> 값으로 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualClip">
          <source>The clip region value of the visual as a <ph id="ph1">&lt;see cref="T:System.Windows.Media.Geometry" /&gt;</ph> type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.Geometry" /&gt;</ph> 형식인 시각적 개체의 클립 영역 값입니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.Visual.VisualEdgeMode">
          <source>Gets or sets the edge mode of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> as an <ph id="ph2">&lt;see cref="T:System.Windows.Media.EdgeMode" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>의 가장자리 모드를 <ph id="ph2">&lt;see cref="T:System.Windows.Media.EdgeMode" /&gt;</ph> 값으로 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualEdgeMode">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.EdgeMode" /&gt;</ph> value of the visual.</source>
          <target state="translated">시각적 개체의 <ph id="ph1">&lt;see cref="T:System.Windows.Media.EdgeMode" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.Visual.VisualEffect">
          <source>Gets or sets the bitmap effect to apply to the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>에 적용할 비트맵 효과를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualEffect">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Media.Effects.Effect" /&gt;</ph> that represents the bitmap effect.</source>
          <target state="translated">비트맵 효과를 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Effects.Effect" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.Visual.VisualOffset">
          <source>Gets or sets the offset value of the visual object.</source>
          <target state="translated">시각적 개체의 오프셋 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualOffset">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Vector" /&gt;</ph> that specifies the offset value.</source>
          <target state="translated">오프셋 값을 지정하는 <ph id="ph1">&lt;see cref="T:System.Windows.Vector" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.Visual.VisualOpacity">
          <source>Gets or sets the opacity of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>의 불투명도를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualOpacity">
          <source>The opacity value of the visual.</source>
          <target state="translated">시각적 개체의 불투명도 값입니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualOpacity">
          <source>The value of the opacity of the <ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph> is expressed as a value between 0 and 1.</source>
          <target state="translated">불투명도 값은 <ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph> 은 0과 1 사이의 값으로 표현 됩니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualOpacity">
          <source>A value of 0 indicates that the element is completely transparent, whereas a value of 1 indicates that the element is completely opaque.</source>
          <target state="translated">값이 0 값이 1 이면 요소는 완전히 불투명 반면 요소가 완전히 투명 임을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualOpacity">
          <source>A value of 0.5 indicates that the element is 50 percent opaque.</source>
          <target state="translated">값이 0.5 요소 50% 불투명 임을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualOpacity">
          <source>Values that are less than 0 are treated as 0; values that are greater than 1 are treated as 1.</source>
          <target state="translated">0 보다 작은 값은 0으로 처리 됩니다. 1 보다 큰 값을 1로 처리 됩니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.Visual.VisualOpacityMask">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Brush" /&gt;</ph> value that represents the opacity mask of the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.Brush" /&gt;</ph>의 불투명 마스크를 나타내는 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualOpacityMask">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Media.Brush" /&gt;</ph> that represents the opacity mask value of the visual.</source>
          <target state="translated">시각적 개체의 불투명 마스크 값을 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Brush" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualOpacityMask">
          <source>The opacity mask is a <ph id="ph1">&lt;xref:System.Windows.Media.Brush&gt;</ph> that is applied to any alpha-channel masking for the rendered content of this visual.</source>
          <target state="translated">불투명 마스크는는 <ph id="ph1">&lt;xref:System.Windows.Media.Brush&gt;</ph> 이 시각적 개체의 렌더링 된 콘텐츠에 대 한 모든 알파 채널 마스킹에 적용 되는 합니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.Visual.VisualParent">
          <source>Gets the visual tree parent of the visual object.</source>
          <target state="translated">시각적 개체의 시각적 트리 부모를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualParent">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> parent.</source>
          <target state="translated">부모 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.Visual.VisualScrollableAreaClip">
          <source>Gets or sets a clipped scrollable area for the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>의 스크롤할 수 있는 클리핑된 영역을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualScrollableAreaClip">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> that represents the scrollable clipping area, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if no clipping area is assigned.</source>
          <target state="translated">스크롤할 수 있는 클리핑 영역을 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph>이거나 클리핑 영역이 할당되지 않은 경우 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualScrollableAreaClip">
          <source>Set the <ph id="ph1">&lt;xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A&gt;</ph> property to enable accelerated scrolling when rendering in software.</source>
          <target state="translated">설정의 <ph id="ph1">&lt;xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A&gt;</ph> 속성을 사용 하는 소프트웨어에서 렌더링할 때 스크롤 accelerated 합니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualScrollableAreaClip">
          <source>This is useful in remote rendering scenarios, such as running over Remote Desktop or running in a virtual machine.</source>
          <target state="translated">원격 데스크톱을 통해를 실행 하거나 가상 컴퓨터에서 실행 되는 원격 렌더링 시나리오에 유용 합니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualScrollableAreaClip">
          <source>Set this property on the parent element whose children will be scrolled.</source>
          <target state="translated">자식 스크롤되는 부모 요소에이 속성을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualScrollableAreaClip">
          <source>Setting the <ph id="ph1">&lt;xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A&gt;</ph> property has no effect when rendering is hardware accelerated.</source>
          <target state="translated">설정의 <ph id="ph1">&lt;xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A&gt;</ph> 렌더링 되는 하드웨어 가속 속성에 영향을 주지 않습니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualScrollableAreaClip">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A&gt;</ph> property enables specific, advanced scenarios.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A&gt;</ph> 속성을 사용 하면 특정 고급 시나리오입니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualScrollableAreaClip">
          <source>The following list shows the caveats that apply when you use the <ph id="ph1">&lt;xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A&gt;</ph> property.</source>
          <target state="translated">다음 목록은 주의 사항을 사용 하는 경우 적용 되는 <ph id="ph1">&lt;xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualScrollableAreaClip">
          <source>The background of the scrolled area must be opaque, or scrolling artifacts will occur.</source>
          <target state="translated">스크롤 영역의 배경을 불투명 이거나 합니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualScrollableAreaClip">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A&gt;</ph> property accelerates scrolling only when WPF is rendering in software.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A&gt;</ph> 속성의 WPF 소프트웨어에서 렌더링 되는 경우에 스크롤 속도 높여 합니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualScrollableAreaClip">
          <source>For example, this situation occurs when the application is running over Remote Desktop or running locally in a virtual machine.</source>
          <target state="translated">예를 들어 응용 프로그램이 가상 컴퓨터에서 로컬로 실행 중이거나 원격 데스크톱을 통해 실행 중인 경우이 상황이 발생 합니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualScrollableAreaClip">
          <source>The scrolling behavior is unchanged when rendering in hardware.</source>
          <target state="translated">하드웨어에서 렌더링할 때에 스크롤 동작 변경 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualScrollableAreaClip">
          <source>To prevent differences in scrolling behavior, you should keep the <ph id="ph1">&lt;xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A&gt;</ph> property enabled for both hardware and software.</source>
          <target state="translated">스크롤 동작의 차이 방지 하려면 보관 해야는 <ph id="ph1">&lt;xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A&gt;</ph> 속성을 하드웨어와 소프트웨어를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualScrollableAreaClip">
          <source>Rotate and skew transforms disable accelerated scrolling.</source>
          <target state="translated">회전 및 기울이기 변환을 가속 스크롤 사용 하지 않도록 설정 합니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualScrollableAreaClip">
          <source>Scale transforms and horizontal or vertical translations above the scrolled region work correctly and do not disable scrolling acceleration.</source>
          <target state="translated">배율 변형 및 스크롤된 영역 위에 수평 또는 수직 번역 제대로 작동 하 고 스크롤 가속을 해제 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualScrollableAreaClip">
          <source>Changing the subtree or triggering parts of the scrollable area to redraw via animation behave as expected, but lose the benefit of accelerated scrolling for the redrawn area.</source>
          <target state="translated">하위 트리를 변경 하거나 애니메이션 통해 다시 그리기 위해 스크롤 가능한 영역의 일부를 트리거하면 예상 대로 작동 하지만 다시 그려야 영역에 대 한 가속 스크롤의 이점을 잃게 됩니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualScrollableAreaClip">
          <source>Any animation that invalidates the scrolled area during the same frame in which scrolling occurs eliminates the benefit of this optimization.</source>
          <target state="translated">같은 프레임 동안 스크롤된 영역을 무효화 하는 애니메이션은 스크롤이 최적화의 장점을 제거 발생 합니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualScrollableAreaClip">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A&gt;</ph> rectangle snaps inward to pixels.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A&gt;</ph> 사각형 픽셀 안쪽으로 맞춥니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualScrollableAreaClip">
          <source>Therefore, the snapped size of the scrolling rectangle is always less than or equal to the size you have set.</source>
          <target state="translated">따라서 스크롤 사각형의 기본 크기는 항상 설정한 크기 보다 작거나 합니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualScrollableAreaClip">
          <source>Offsets snap downward.</source>
          <target state="translated">오프셋을 아래로 맞춥니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualScrollableAreaClip">
          <source>This means that the difference of the previous snapped offset and current snapped offset is always an integer number of pixels.</source>
          <target state="translated">즉, 이전의 차이 모눈 오프셋 현재 맞춰진된 오프셋은 항상 정수 픽셀 수 있습니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualScrollableAreaClip">
          <source>Hit tests can be off by up to a pixel.</source>
          <target state="translated">적중된 테스트는 픽셀까지 여 해제할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualScrollableAreaClip">
          <source>Layout rounding should be turned on, because it ensures that the edges of scrollable areas and the boundary window client area are snapped to pixel boundaries, resulting in correct alignment.</source>
          <target state="translated">레이아웃 반올림를 설정 해야, 스크롤 가능한 영역 및 경계 창의 클라이언트 영역 가장자리 모눈 올바르게 정렬 픽셀 경계도 있기 때문에 있습니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualScrollableAreaClip">
          <source>Scrolling acceleration does not work on layered windows.</source>
          <target state="translated">가속 스크롤 계층된 창에서 작동 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualScrollableAreaClip">
          <source>This means windows in which AllowTransparency == true, window.windowstyle == none, and so on.</source>
          <target state="translated">즉, windows는 AllowTransparency에 = = true 이면 window.windowstyle = = none, 등에.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualScrollableAreaClip">
          <source>Scrolling acceleration does not occur during full-window rendering.</source>
          <target state="translated">가속 스크롤 전체 창이 렌더링 하는 동안 발생 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualScrollableAreaClip">
          <source>Scrolling acceleration does not work when the window straddles two monitors.</source>
          <target state="translated">가속 스크롤 창의 두 모니터를 분명 하는 경우 작동 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualScrollableAreaClip">
          <source>Scrolling acceleration does not work in the presence of intermediate render targets in the parent chain of the scrolled element.</source>
          <target state="translated">가속 스크롤 있는 중간 렌더링 대상 스크롤 요소의 부모 체인에서 작동 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualScrollableAreaClip">
          <source>The following list shows some of these intermediate render targets.</source>
          <target state="translated">다음 목록에서는이 중 일부를 중간 렌더링 대상 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualScrollableAreaClip">
          <source>Clips</source>
          <target state="translated">클립</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualScrollableAreaClip">
          <source>Effects</source>
          <target state="translated">효과</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualScrollableAreaClip">
          <source>DrawingBrushes</source>
          <target state="translated">DrawingBrushes</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualScrollableAreaClip">
          <source>VisualBrushes</source>
          <target state="translated">VisualBrushes</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualScrollableAreaClip">
          <source>OpacityMasks</source>
          <target state="translated">OpacityMasks</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualScrollableAreaClip">
          <source>Opacity</source>
          <target state="translated">Opacity</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualScrollableAreaClip">
          <source>Only one accelerated scroll can happen per frame.</source>
          <target state="translated">프레임 마다 하나의 가속된 스크롤 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualScrollableAreaClip">
          <source>There can be multiple accelerated scroll areas, but only one of them can perform an accelerated scroll during a frame.</source>
          <target state="translated">여러 개 가속된 스크롤 영역에 있을 수 있지만 그 중 하나만 프레임 동안 가속된 스크롤을 수행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualScrollableAreaClip">
          <source>Which area is scrolled is indeterminate.</source>
          <target state="translated">어떤 영역으로 스크롤 되는 결정 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualScrollableAreaClip">
          <source>Scrolling acceleration supports content above the scrolling region (in z-order) that is not scrolled with the rest of the content.</source>
          <target state="translated">가속 스크롤 콘텐츠의 나머지 스크롤되지 않는 (z-순서) 대로 스크롤 영역 위에 콘텐츠를 지원 합니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualScrollableAreaClip">
          <source>The system calculates all necessary dirty regions and completes the accelerated scroll, but it sends several additional bitmaps over the wire to move the unintentionally scrolled portion back to its correct position on screen.</source>
          <target state="translated">시스템 필요한 모든 변경 영역을 계산 하 고 가속화 스크롤을 완료 하지만 화면에 올바른 위치로 이동 하 고 의도 하지 않게 스크롤된 부분 위해 네트워크를 통해 몇 가지 추가 비트맵 다시 보냅니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.Visual.VisualTextHintingMode">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Windows.Media.TextHintingMode" /&gt;</ph> of the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>의 <ph id="ph1">&lt;see cref="T:System.Windows.Media.TextHintingMode" /&gt;</ph>를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualTextHintingMode">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.TextHintingMode" /&gt;</ph> applied to the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>에 적용된 <ph id="ph1">&lt;see cref="T:System.Windows.Media.TextHintingMode" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.Visual.VisualTextRenderingMode">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Windows.Media.TextRenderingMode" /&gt;</ph> of the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>의 <ph id="ph1">&lt;see cref="T:System.Windows.Media.TextRenderingMode" /&gt;</ph>를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualTextRenderingMode">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.TextRenderingMode" /&gt;</ph> applied to the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>에 적용된 <ph id="ph1">&lt;see cref="T:System.Windows.Media.TextRenderingMode" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.Visual.VisualTransform">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Transform" /&gt;</ph> value for the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.Transform" /&gt;</ph>에 대한 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualTransform">
          <source>The transform value of the visual.</source>
          <target state="translated">시각적 개체의 변환 값입니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.Visual.VisualXSnappingGuidelines">
          <source>Gets or sets the x-coordinate (vertical) guideline collection.</source>
          <target state="translated">X 좌표(세로) 안내선 컬렉션을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualXSnappingGuidelines">
          <source>The x-coordinate guideline collection of the visual.</source>
          <target state="translated">시각적 개체의 X 좌표 안내선 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualXSnappingGuidelines">
          <source>Pixel snapping is the process in which content layout is fixed so that object edges are rendered on device-specific pixels.</source>
          <target state="translated">픽셀 맞추기 개체 가장자리 장치 관련 픽셀에 렌더링 되도록 콘텐츠 레이아웃을 고정 하는 프로세스는 합니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualXSnappingGuidelines">
          <source>The <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> graphics system uses device-independent units to enable resolution and device independence.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> 그래픽 시스템에서는 해상도와 장치의 영향을 받지 않기 위해 장치 독립적 단위를 사용합니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualXSnappingGuidelines">
          <source>Each device independent pixel automatically scales with the system's <ph id="ph1">[!INCLUDE[TLA#tla_dpi](~/includes/tlasharptla-dpi-md.md)]</ph> setting.</source>
          <target state="translated">각 장치 독립적 픽셀은 시스템의 <ph id="ph1">[!INCLUDE[TLA#tla_dpi](~/includes/tlasharptla-dpi-md.md)]</ph> 설정에 맞게 자동으로 크기가 조정됩니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualXSnappingGuidelines">
          <source>This provides <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> applications proper scaling for different <ph id="ph2">[!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]</ph> settings and makes the application automatically <ph id="ph3">[!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]</ph>-aware.</source>
          <target state="translated">이를 통해 <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> 응용 프로그램에서 다양한 <ph id="ph2">[!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]</ph> 설정에 적합하게 크기를 조정할 수 있으며 자동으로 <ph id="ph3">[!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]</ph>를 인식할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualXSnappingGuidelines">
          <source>However, this <ph id="ph1">[!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]</ph> independence can create irregular edge rendering due to anti-aliasing.</source>
          <target state="translated">그러나이 <ph id="ph1">[!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]</ph> 독립성 앤티앨리어싱 인해 불규칙 한 가장자리 렌더링을 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualXSnappingGuidelines">
          <source>These artifacts, commonly seen as blurry or "soft" edges, can occur when the location of an edge falls in the middle of a device pixel rather than between device pixels.</source>
          <target state="translated">흐린 또는 "소프트" 가장자리 표시 되는 이러한 아티팩트는 가장자리의 위치가 (장치 픽셀) 사이 있지 않고 장치 픽셀 중간에 있을 때 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualXSnappingGuidelines">
          <source>To address this issue, <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> provides a way for object edges in a visual tree to "snap" to device pixels, eliminating the soft edges produced by anti-aliasing.</source>
          <target state="translated">이 문제를 해결 하기 위해 <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> "맞춤선" 장치 픽셀에 앤티앨리어싱에서 생성 된 부드러운 가장자리를 제거 하는 시각적 트리를 위해 방법을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.Visual.VisualYSnappingGuidelines">
          <source>Gets or sets the y-coordinate (horizontal) guideline collection.</source>
          <target state="translated">y-좌표(가로) 안내선 컬렉션을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualYSnappingGuidelines">
          <source>The y-coordinate guideline collection of the visual.</source>
          <target state="translated">시각적 개체의 y 좌표 지침 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualYSnappingGuidelines">
          <source>Pixel snapping is the process in which content layout is fixed so that object edges are rendered on device-specific pixels.</source>
          <target state="translated">픽셀 맞추기 개체 가장자리 장치 관련 픽셀에 렌더링 되도록 콘텐츠 레이아웃을 고정 하는 프로세스는 합니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualYSnappingGuidelines">
          <source>The <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> graphics system uses device-independent units to enable resolution and device independence.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> 그래픽 시스템에서는 해상도와 장치의 영향을 받지 않기 위해 장치 독립적 단위를 사용합니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualYSnappingGuidelines">
          <source>Each device independent pixel automatically scales with the system's <ph id="ph1">[!INCLUDE[TLA#tla_dpi](~/includes/tlasharptla-dpi-md.md)]</ph> setting.</source>
          <target state="translated">각 장치 독립적 픽셀은 시스템의 <ph id="ph1">[!INCLUDE[TLA#tla_dpi](~/includes/tlasharptla-dpi-md.md)]</ph> 설정에 맞게 자동으로 크기가 조정됩니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualYSnappingGuidelines">
          <source>This provides <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> applications proper scaling for different <ph id="ph2">[!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]</ph> settings and makes the application automatically <ph id="ph3">[!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]</ph>-aware.</source>
          <target state="translated">이를 통해 <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> 응용 프로그램에서 다양한 <ph id="ph2">[!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]</ph> 설정에 적합하게 크기를 조정할 수 있으며 자동으로 <ph id="ph3">[!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]</ph>를 인식할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualYSnappingGuidelines">
          <source>However, this <ph id="ph1">[!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]</ph> independence can create irregular edge rendering due to anti-aliasing.</source>
          <target state="translated">그러나이 <ph id="ph1">[!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]</ph> 독립성 앤티앨리어싱 인해 불규칙 한 가장자리 렌더링을 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualYSnappingGuidelines">
          <source>These artifacts, commonly seen as blurry, or "soft" edges, can occur when the location of an edge falls in the middle of a device pixel rather than between device pixels.</source>
          <target state="translated">흐린, 또는 "소프트" 가장자리 표시 되는 이러한 아티팩트는 가장자리의 위치가 (장치 픽셀) 사이 있지 않고 장치 픽셀 중간에 있을 때 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Visual.VisualYSnappingGuidelines">
          <source>To address this issue, <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> provides a way for object edges in a visual tree to "snap" to device pixels, eliminating the soft edges produced by anti-aliasing.</source>
          <target state="translated">이 문제를 해결 하기 위해 <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> "맞춤선" 장치 픽셀에 앤티앨리어싱에서 생성 된 부드러운 가장자리를 제거 하는 시각적 트리를 위해 방법을 제공 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>