<Type Name="GeometryHitTestResult" FullName="System.Windows.Media.GeometryHitTestResult">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c0e97dd3f5796b6dbf9c03b40493852dc0ad6dbd" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30666307" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class GeometryHitTestResult : System.Windows.Media.HitTestResult" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GeometryHitTestResult extends System.Windows.Media.HitTestResult" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.GeometryHitTestResult" />
  <TypeSignature Language="VB.NET" Value="Public Class GeometryHitTestResult&#xA;Inherits HitTestResult" />
  <TypeSignature Language="C++ CLI" Value="public ref class GeometryHitTestResult : System::Windows::Media::HitTestResult" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.HitTestResult</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.Windows.Media.Geometry" />를 적중 횟수 테스트 매개 변수로 사용하는 적중 횟수 테스트의 결과를 반환합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여 시각적 개체에서 적중 횟수 테스트를 수행할 수도 있습니다는 <xref:System.Windows.Point> 적중 매개 변수를 테스트 하 고로 결과 반환 하는 <xref:System.Windows.Media.PointHitTestResult>합니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GeometryHitTestResult (System.Windows.Media.Visual visualHit, System.Windows.Media.IntersectionDetail intersectionDetail);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Media.Visual visualHit, valuetype System.Windows.Media.IntersectionDetail intersectionDetail) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.GeometryHitTestResult.#ctor(System.Windows.Media.Visual,System.Windows.Media.IntersectionDetail)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GeometryHitTestResult(System::Windows::Media::Visual ^ visualHit, System::Windows::Media::IntersectionDetail intersectionDetail);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="visualHit" Type="System.Windows.Media.Visual" />
        <Parameter Name="intersectionDetail" Type="System.Windows.Media.IntersectionDetail" />
      </Parameters>
      <Docs>
        <param name="visualHit">적중 테스트 도중 적중되는 표시 개체입니다.</param>
        <param name="intersectionDetail">
          <see cref="T:System.Windows.Media.Geometry" />와 <c>visualHit</c>의 교차를 설명합니다.</param>
        <summary>지정한 표시 개체와 <see cref="T:System.Windows.Media.GeometryHitTestResult" /> 값을 사용하여 <see cref="T:System.Windows.Media.IntersectionDetail" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 만드는 방법을 보여 주는 다음 예제는 <xref:System.Windows.Media.GeometryHitTestResult> 개체의 재정의 된 구현에 대 한 반환 값으로 사용 하 고 <xref:System.Windows.Media.Visual.HitTestCore%2A>합니다.  
  
 [!code-csharp[HitTestingOverview#HitTestingOverviewSnippet13](~/samples/snippets/csharp/VS_Snippets_Wpf/HitTestingOverview/CSharp/GeometryHitTest.cs#hittestingoverviewsnippet13)]
 [!code-vb[HitTestingOverview#HitTestingOverviewSnippet13](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HitTestingOverview/visualbasic/geometryhittest.vb#hittestingoverviewsnippet13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntersectionDetail">
      <MemberSignature Language="C#" Value="public System.Windows.Media.IntersectionDetail IntersectionDetail { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.IntersectionDetail IntersectionDetail" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.GeometryHitTestResult.IntersectionDetail" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IntersectionDetail As IntersectionDetail" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::IntersectionDetail IntersectionDetail { System::Windows::Media::IntersectionDetail get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.IntersectionDetail</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>적중 횟수 테스트의 <see cref="T:System.Windows.Media.IntersectionDetail" /> 값을 가져옵니다.</summary>
        <value>적중 테스트의 <see cref="T:System.Windows.Media.IntersectionDetail" /> 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.GeometryHitTestResult.IntersectionDetail%2A> 교차를 설명 하는 속성을 <xref:System.Windows.Media.Geometry> 및 대상 시각적 개체입니다.  
  
 다음 그림은 적중 횟수 테스트 기 하 도형 (파란색 원) 및 (빨간색 사각형) 대상 개체 간의 관계를 보여 줍니다.  
  
 ![사용 되는 IntersectionDetail의 다이어그램 적중 테스트](~/add/media/intersectiondetail01.png "다이어그램의 사용 되는 IntersectionDetail의 적중 테스트")  
적중 횟수 테스트 기 하 도형 및 대상 개체 간 교차 영역  
  
   
  
## Examples  
 사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Windows.Media.GeometryHitTestResult.IntersectionDetail%2A> 속성 <xref:System.Windows.Media.GeometryHitTestResult>합니다.  
  
 [!code-csharp[HitTestingOverview#HitTestingOverviewSnippet11](~/samples/snippets/csharp/VS_Snippets_Wpf/HitTestingOverview/CSharp/GeometryHitTest.cs#hittestingoverviewsnippet11)]
 [!code-vb[HitTestingOverview#HitTestingOverviewSnippet11](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HitTestingOverview/visualbasic/geometryhittest.vb#hittestingoverviewsnippet11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualHit">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Visual VisualHit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Visual VisualHit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.GeometryHitTestResult.VisualHit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VisualHit As Visual" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Visual ^ VisualHit { System::Windows::Media::Visual ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Visual</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>적중 횟수 테스트 결과에서 반환되는 시각적 개체를 가져옵니다.</summary>
        <value>적중 테스트 결과를 나타내는 <see cref="T:System.Windows.Media.Visual" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 값을 참조 하는 방법을 보여 줍니다는 <xref:System.Windows.Media.GeometryHitTestResult.VisualHit%2A> 적중 횟수 테스트 필터 콜백 프로시저에는 속성입니다.  
  
 [!code-csharp[HitTestingOverview#HitTestingOverviewSnippet11](~/samples/snippets/csharp/VS_Snippets_Wpf/HitTestingOverview/CSharp/GeometryHitTest.cs#hittestingoverviewsnippet11)]
 [!code-vb[HitTestingOverview#HitTestingOverviewSnippet11](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HitTestingOverview/visualbasic/geometryhittest.vb#hittestingoverviewsnippet11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>