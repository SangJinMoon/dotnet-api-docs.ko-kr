<Type Name="RenderCapability" FullName="System.Windows.Media.RenderCapability">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="349baa59103b5e5bef63238a6682d1716d942d06" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30668947" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class RenderCapability" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit RenderCapability extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.RenderCapability" />
  <TypeSignature Language="VB.NET" Value="Public Class RenderCapability" />
  <TypeSignature Language="C++ CLI" Value="public ref class RenderCapability abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>WPF 응용 프로그램에서 연결된 <see cref="T:System.Windows.Threading.Dispatcher" /> 개체의 현재 렌더링 계층을 쿼리하고 변경 알림을 등록할 수 있도록 설정합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 렌더링 계층은 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 응용 프로그램을 실행하는 장치의 그래픽 하드웨어 기능과 성능 수준을 정의합니다. 대부분 렌더링 계층 수준에 영향을 그래픽 하드웨어 기능에는 다음과 같습니다.  
  
-   비디오 RAM: 합성 그래픽에 사용할 수 있는 버퍼의 수와 크기 그래픽 하드웨어에서 비디오 메모리의 양이 결정 합니다.  
  
-   픽셀 셰이더: 픽셀 셰이더는는 그래픽 효과를 픽셀 단위로 계산 하는 함수를 처리 합니다. 표시된 그래픽의 해상도에 따라 표시 프레임별로 수백만 픽셀을 처리해야 할 수도 있습니다.  
  
-   꼭 짓 점 셰이더: 꼭 짓 점 셰이더는는 그래픽 개체의 꼭지점 데이터에 수학 연산을 수행 하는 함수를 처리 합니다.  
  
-   질감 지원: 여러 질감 지원 3D 그래픽 개체에서 혼합 작업 중 두 개 이상의 고유 질감을 적용 하는 능력을 나타냅니다. 여러 질감 지원 정도는 그래픽 하드웨어의 여러 질감 단위 수에 따라 결정됩니다.  
  
 픽셀 셰이더, 꼭 짓 점 셰이더 및 질감 기능 하는 데 특정 정의 [!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)] 에서 다양 한 렌더링 계층을 정의 하는 데 사용 되는 버전 수준이 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]합니다. 참조에 대 한 전체 설명은 렌더링 계층, [그래픽 렌더링 계층](~/docs/framework/wpf/advanced/graphics-rendering-tiers.md)합니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.RenderOptions" />
    <altmember cref="T:System.Windows.Threading.Dispatcher" />
  </Docs>
  <Members>
    <Member MemberName="IsPixelShaderVersionSupported">
      <MemberSignature Language="C#" Value="public static bool IsPixelShaderVersionSupported (short majorVersionRequested, short minorVersionRequested);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPixelShaderVersionSupported(int16 majorVersionRequested, int16 minorVersionRequested) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.RenderCapability.IsPixelShaderVersionSupported(System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPixelShaderVersionSupported (majorVersionRequested As Short, minorVersionRequested As Short) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPixelShaderVersionSupported(short majorVersionRequested, short minorVersionRequested);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="majorVersionRequested" Type="System.Int16" />
        <Parameter Name="minorVersionRequested" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="majorVersionRequested">픽셀 셰이더의 주 버전입니다.</param>
        <param name="minorVersionRequested">픽셀 셰이더의 부 버전입니다.</param>
        <summary>지정된 픽셀 셰이더 버전이 지원되는지 여부를 나타내는 값을 가져옵니다.</summary>
        <returns>
          픽셀 셰이더 버전을 현재 버전의 WPF에서 지원하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.RenderCapability.IsPixelShaderVersionSupported%2A> 메서드 반환 `true` WPF의 현재 버전에서 픽셀 셰이더 버전을 지원 하 고 경우는 <xref:System.Windows.Media.Effects.Effect> 지정된 된 주/부 버전을 사용 하 여 GPU에서 실행 수 있습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Effects.PixelShader" />
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.ShaderEffect" />
      </Docs>
    </Member>
    <Member MemberName="IsPixelShaderVersionSupportedInSoftware">
      <MemberSignature Language="C#" Value="public static bool IsPixelShaderVersionSupportedInSoftware (short majorVersionRequested, short minorVersionRequested);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPixelShaderVersionSupportedInSoftware(int16 majorVersionRequested, int16 minorVersionRequested) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.RenderCapability.IsPixelShaderVersionSupportedInSoftware(System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPixelShaderVersionSupportedInSoftware (majorVersionRequested As Short, minorVersionRequested As Short) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPixelShaderVersionSupportedInSoftware(short majorVersionRequested, short minorVersionRequested);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="majorVersionRequested" Type="System.Int16" />
        <Parameter Name="minorVersionRequested" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="majorVersionRequested">픽셀 셰이더의 주 버전입니다.</param>
        <param name="minorVersionRequested">픽셀 셰이더의 부 버전입니다.</param>
        <summary>지정된 픽셀 셰이더 버전을 현재 시스템의 소프트웨어에서 렌더링할 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <returns>
          현재 시스템의 소프트웨어에서 픽셀 셰이더를 렌더링할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 소프트웨어 렌더링 픽셀 셰이더 2.0 에서만 지원 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Effects.PixelShader" />
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.ShaderEffect" />
      </Docs>
    </Member>
    <Member MemberName="IsShaderEffectSoftwareRenderingSupported">
      <MemberSignature Language="C#" Value="public static bool IsShaderEffectSoftwareRenderingSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsShaderEffectSoftwareRenderingSupported" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.RenderCapability.IsShaderEffectSoftwareRenderingSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsShaderEffectSoftwareRenderingSupported As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsShaderEffectSoftwareRenderingSupported { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("IsShaderEffectSoftwareRenderingSupported property is deprecated.  Use IsPixelShaderVersionSupportedInSoftware static method instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>시스템이 소프트웨어에서 비트맵 효과를 렌더링할 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>
          시스템이 소프트웨어에서 비트맵 효과를 렌더링할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Media.Effects.PixelShader" />
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.ShaderEffect" />
      </Docs>
    </Member>
    <Member MemberName="MaxHardwareTextureSize">
      <MemberSignature Language="C#" Value="public static System.Windows.Size MaxHardwareTextureSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Size MaxHardwareTextureSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.RenderCapability.MaxHardwareTextureSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MaxHardwareTextureSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Size MaxHardwareTextureSize { System::Windows::Size get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>기본 하드웨어 장치의 비트맵 생성에 대한 최대 너비와 높이를 가져옵니다.</summary>
        <value>하드웨어 비트맵 생성에 대한 최대 너비와 높이를 나타내는 <see cref="T:System.Windows.Size" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 장치가 여러 개 있는 경우 <xref:System.Windows.Media.RenderCapability.MaxHardwareTextureSize%2A> 에서 그 중 최소 크기를 반환 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.BitmapCache" />
      </Docs>
    </Member>
    <Member MemberName="MaxPixelShaderInstructionSlots">
      <MemberSignature Language="C#" Value="public static int MaxPixelShaderInstructionSlots (short majorVersionRequested, short minorVersionRequested);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 MaxPixelShaderInstructionSlots(int16 majorVersionRequested, int16 minorVersionRequested) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.RenderCapability.MaxPixelShaderInstructionSlots(System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MaxPixelShaderInstructionSlots (majorVersionRequested As Short, minorVersionRequested As Short) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int MaxPixelShaderInstructionSlots(short majorVersionRequested, short minorVersionRequested);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="majorVersionRequested" Type="System.Int16" />
        <Parameter Name="minorVersionRequested" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="majorVersionRequested">픽셀 셰이더의 주 버전입니다.</param>
        <param name="minorVersionRequested">픽셀 셰이더의 부 버전입니다.</param>
        <summary>현재 픽셀 셰이더 버전에서 지원되는 최대 명령 슬롯 수를 가져옵니다.</summary>
        <returns>픽셀 셰이더 2.0의 경우 96, 픽셀 셰이더 3.0의 경우 512 이상 또는 기타 버전 픽셀 셰이더의 경우 0입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 픽셀 셰이더 3.0에서 지 원하는 명령 슬롯 수가 달라 지지만 512 보다 크거나은 항상 있습니다.  
  
 픽셀 셰이더 2.0 및 3.0만 지원 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Effects.PixelShader" />
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.ShaderEffect" />
      </Docs>
    </Member>
    <Member MemberName="Tier">
      <MemberSignature Language="C#" Value="public static int Tier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 Tier" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.RenderCapability.Tier" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Tier As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int Tier { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 스레드에 대한 렌더링 계층을 나타내는 값을 가져옵니다.</summary>
        <value>상위 워드가 현재 스레드의 렌더링 계층에 해당하는 <see cref="T:System.Int32" /> 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  .NET Framework 4부터 렌더링 계층 1은 [!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)] 9.0 이상을 지원하는 그래픽 하드웨어만 포함하도록 재정의되었습니다. [!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)] 7 또는 8을 지원하는 그래픽 하드웨어는 이제 렌더링 계층 0으로 정의됩니다.  
  
 반환 값은 3 가지 값 중 하나입니다.  
  
|반환 값|렌더링 계층|노트|  
|------------------|--------------------|-----------|  
|0x00000000|0|장치에 응용 프로그램에 대해 그래픽 하드웨어 가속 없음 ´ ù. 모든 그래픽 기능에서 소프트웨어 가속을 사용합니다. [!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)] 버전 수준은 버전 9.0 미만입니다.|  
|0x00010000|1|그래픽 기능 대부분 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 필요한 시스템 리소스가 사용 가능 하며 사용 되지 않은 경우에 하드웨어 가속을 사용 합니다. 이 내용은 9.0 이상의 [!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)] 버전에 해당합니다.|  
|0x00020000|2|그래픽 기능 대부분 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 필요한 시스템 리소스가 모두 사용 하지 않은 경우 제공 된 하드웨어 가속을 사용 합니다. 이 내용은 9.0 이상의 [!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)] 버전에 해당합니다.|  
  
 다음 테이블에서는 렌더링 계층 1과 렌더링 계층 2에 대한 그래픽 하드웨어 요구 사항의 차이점을 보여줍니다.  
  
|기능|계층 1|계층 2|  
|-------------|------------|------------|  
|[!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)] 버전|9.0보다 크거나 같아야 합니다.|9.0보다 크거나 같아야 합니다.|  
|비디오 RAM|60MB보다 크거나 같아야 합니다.|120MB보다 크거나 같아야 합니다.|  
|픽셀 셰이더|버전 수준은 2.0 이상이어야 합니다.|버전 수준은 2.0 이상이어야 합니다.|  
|꼭짓점 셰이더|요구 사항이 없습니다.|버전 수준은 2.0 이상이어야 합니다.|  
|여러 질감 단위|요구 사항이 없습니다.|단위 수가 4 이상이어야 합니다.|  
  
 렌더링 계층에 대 한 정의에 대 한 자세한 내용은 참조 하십시오. [그래픽 렌더링 계층](~/docs/framework/wpf/advanced/graphics-rendering-tiers.md)합니다.  
  
 현재 스레드에 연결 된 없는 경우 <xref:System.Windows.Threading.Dispatcher> 개체를 자동으로 만들어집니다.  
  
   
  
## Examples  
 다음 예에서는 현재 스레드에 대 한 렌더링 계층을 반환 하는 방법을 보여 줍니다.  
  
 [!code-csharp[RenderOptions#RenderCapability1](~/samples/snippets/csharp/VS_Snippets_Wpf/RenderOptions/CSharp/Window1.xaml.cs#rendercapability1)]
 [!code-vb[RenderOptions#RenderCapability1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RenderOptions/visualbasic/window1.xaml.vb#rendercapability1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TierChanged">
      <MemberSignature Language="C#" Value="public static event EventHandler TierChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TierChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.RenderCapability.TierChanged" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event TierChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ TierChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 스레드의 <see cref="T:System.Windows.Threading.Dispatcher" /> 개체에 대해 렌더링 계층이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 현재 스레드에 연결 된 없는 경우 <xref:System.Windows.Threading.Dispatcher> 개체를 자동으로 만들어집니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>