<Type Name="VisualCollection" FullName="System.Windows.Media.VisualCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="19eeb062536a84069070c205aaddc936c33cd61d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30669497" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class VisualCollection : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit VisualCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.VisualCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class VisualCollection&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualCollection sealed : System::Collections::ICollection" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <see cref="T:System.Windows.Media.Visual" /> 개체의 정렬된 컬렉션을 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Windows.Media.VisualCollection> 컨텍스트 선호도 암시적으로 있습니다. 프로시저에 액세스 하려고 하는 경우는 <xref:System.Windows.Media.VisualCollection> 소유 하 고 있는 컨텍스트와 다른 컨텍스트를 <xref:System.Windows.Media.ContainerVisual>, 예외가 throw 됩니다.  
  
   
  
## Examples  
 만드는 방법을 보여 주는 다음 예제는 <xref:System.Windows.Media.VisualCollection> 에 구성원을 추가 하 고 있습니다.  
  
 [!code-csharp[DrawingVisualSample#100](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingVisualSample/CSharp/Window1.xaml.cs#100)]
 [!code-vb[DrawingVisualSample#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingVisualSample/visualbasic/window1.xaml.vb#100)]  
  
> [!NOTE]
>  전체 샘플을 참조 하십시오. [적중 테스트를 사용 하 여 DrawingVisuals 샘플](http://go.microsoft.com/fwlink/?LinkID=159994)합니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualCollection (System.Windows.Media.Visual parent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Media.Visual parent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.#ctor(System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parent As Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualCollection(System::Windows::Media::Visual ^ parent);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parent" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="parent">
          <see cref="T:System.Windows.Media.VisualCollection" />이 반환되는 시각적 부모 개체입니다.</param>
        <summary>
          <see cref="T:System.Windows.Media.VisualCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Windows::Media::Visual ^ visual);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual">
          <see cref="T:System.Windows.Media.Visual" />에 추가할 <see cref="T:System.Windows.Media.VisualCollection" />입니다.</param>
        <summary>
          <see cref="T:System.Windows.Media.Visual" />의 끝에 <see cref="T:System.Windows.Media.VisualCollection" />을 추가합니다.</summary>
        <returns>
          <paramref name="visual" />이 추가된 컬렉션의 인덱스입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 추가 <xref:System.Windows.Media.Visual> 값인 `null` 은 허용 하며 예외가 발생 하지 않습니다.  
  
 <xref:System.Windows.Media.VisualCollection.Add%2A> 메서드 소유자 인 부모 표시 간의 부모-자식 관계를 설정의 <xref:System.Windows.Media.VisualCollection>와 자식 `visual`합니다.  
  
 사용자 지정 클래스의 시각적 자식 개체의 기본 저장소 구현에 대 한 하위 수준 제어 강화 해야 할 경우 사용 하 여 고려는 <xref:System.Windows.Media.Visual.AddVisualChild%2A> 및 <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> 메서드. 사용자 지정 저장소 구현을 정의 해야 하 고 사용 하지 않는 이러한 메서드를 사용 하는 경우 <xref:System.Windows.Media.VisualCollection>합니다.  
  
   
  
## Examples  
 만드는 방법을 보여 주는 다음 예제는 <xref:System.Windows.Media.VisualCollection> 에 구성원을 추가 하 고 있습니다.  
  
 [!code-csharp[DrawingVisualSample#100](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingVisualSample/CSharp/Window1.xaml.cs#100)]
 [!code-vb[DrawingVisualSample#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingVisualSample/visualbasic/window1.xaml.vb#100)]  
  
> [!NOTE]
>  전체 샘플을 참조 하십시오. [적중 테스트를 사용 하 여 DrawingVisuals 샘플](http://go.microsoft.com/fwlink/?LinkID=159994)합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="T:System.ArgumentException" />이 루트 요소이면 <see cref="T:System.Windows.Media.Visual" />이 throw되는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Capacity">
      <MemberSignature Language="C#" Value="public int Capacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Capacity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualCollection.Capacity" />
      <MemberSignature Language="VB.NET" Value="Public Property Capacity As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Capacity { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Media.VisualCollection" />에 포함될 수 있는 요소의 수를 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Windows.Media.VisualCollection" />에 포함될 수 있는 요소의 수입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 값 <xref:System.Windows.Media.VisualCollection.Capacity%2A> 요소의 수가 하는 <xref:System.Windows.Media.VisualCollection> 저장할 수 있습니다. <xref:System.Windows.Media.VisualCollection.Count%2A> 에 실제로 시각 효과의 수는 <xref:System.Windows.Media.VisualCollection>합니다. <xref:System.Windows.Media.VisualCollection.Capacity%2A> 보다 크거나 같은 경우는 항상 <xref:System.Windows.Media.VisualCollection.Count%2A>합니다. 경우 <xref:System.Windows.Media.VisualCollection.Count%2A> 초과 <xref:System.Windows.Media.VisualCollection.Capacity%2A> 요소의 용량을 추가 하는 동안는 <xref:System.Windows.Media.VisualCollection> 증가 합니다. 기본적으로 <xref:System.Windows.Media.VisualCollection.Capacity%2A> 은 0입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="P:System.Windows.Media.VisualCollection.Capacity" />가 <see cref="P:System.Windows.Media.VisualCollection.Count" />보다 작은 값으로 설정되어 있습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Media.VisualCollection" />에서 모든 요소를 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.VisualCollection.Count%2A> 0으로 다시 설정 됩니다. 값은 <xref:System.Windows.Media.VisualCollection.Capacity%2A> 그대로 유지 됩니다. 용량을 다시 설정 하는 <xref:System.Windows.Media.VisualCollection>로 설정 된 <xref:System.Windows.Media.VisualCollection.Capacity%2A> 속성을 원하는 크기로 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.Contains(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Media::Visual ^ visual);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual">컬렉션에서 검색할 <see cref="T:System.Windows.Media.Visual" />입니다.</param>
        <summary>지정한 <see cref="T:System.Boolean" />이 컬렉션에 포함되어 있는지 여부를 나타내는 <see cref="T:System.Windows.Media.Visual" /> 값을 반환합니다.</summary>
        <returns>
          <paramref name="visual" />가 컬렉션에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 함수의 런타임 최악의 시나리오는 `O(n)`여기서 `n` 에 있는 항목의 수는 <xref:System.Windows.Media.VisualCollection>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>전달된 배열에 현재 컬렉션을 복사합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <see cref="T:System.Array" />에서 복사한 요소의 대상인 1차원 <see cref="T:System.Windows.Media.VisualCollection" />입니다.</param>
        <param name="index">
          <c>배열</c>에서 복사를 시작할 인덱스입니다. 이 인덱스는 0부터 시작합니다.</param>
        <summary>특정 배열 인덱스에서 시작하여 컬렉션의 항목을 배열에 복사합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Windows.Media.Visual[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Windows.Media.Visual[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.CopyTo(System.Windows.Media.Visual[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As Visual(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Windows::Media::Visual ^&gt; ^ array, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Windows.Media.Visual[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">0부터 시작하는 인덱스를 사용하는 <see cref="T:System.Windows.Media.Visual" /> 개체의 배열입니다.</param>
        <param name="index">
          <c>array</c>에서 복사를 시작할 인덱스입니다.</param>
        <summary>전달된 <see cref="T:System.Windows.Media.Visual" /> 배열에 현재 컬렉션을 복사합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컬렉션의 요소 수를 가져옵니다.</summary>
        <value>
          <see cref="T:System.Windows.Media.VisualCollection" />에 포함된 요소 수입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.VisualCollection.Count%2A> 에 실제로 있는 요소의 수가 고 <xref:System.Windows.Media.VisualCollection>합니다. <xref:System.Windows.Media.VisualCollection.Capacity%2A> 요소의 수가 하는 <xref:System.Windows.Media.VisualCollection> 저장할 수 있습니다.  
  
 <xref:System.Windows.Media.VisualCollection.Count%2A> 항상 보다 작거나 <xref:System.Windows.Media.VisualCollection.Capacity%2A>합니다. 경우 <xref:System.Windows.Media.VisualCollection.Count%2A> 초과 <xref:System.Windows.Media.VisualCollection.Capacity%2A> 요소를 추가 하는 동안 목록의 용량이 이전 요소를 복사 하 고 새 요소를 추가 하기 전에 내부 배열을 자동으로 다시 할당 하 여 두 배가 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Windows.Media.VisualCollection.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.VisualCollection/Enumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As VisualCollection.Enumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::VisualCollection::Enumerator GetEnumerator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.VisualCollection+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Media.VisualCollection" />을 반복할 수 있는 열거자를 검색합니다.</summary>
        <returns>컬렉션을 반복하는 데 사용할 수 있는 열거자입니다.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Collections.IEnumerable.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.IndexOf(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Windows::Media::Visual ^ visual);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual">
          <see cref="T:System.Windows.Media.Visual" />에서 찾을 <see cref="T:System.Windows.Media.VisualCollection" />입니다.</param>
        <summary>
          <see cref="T:System.Windows.Media.Visual" />의 인덱스(0부터 시작)를 반환합니다.</summary>
        <returns>
          <see cref="T:System.Windows.Media.Visual" />의 인덱스입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Windows.Media.Visual> 에 속하지 않는 <xref:System.Windows.Media.VisualCollection>,-1이 반환 됩니다. 경우 `null` 을 가진 첫 번째 항목의 인덱스 메서드에 전달 되며 `null` 반환 됩니다. Null 항목이 없으면-1이 반환 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Windows::Media::Visual ^ visual);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="index">값을 삽입해야 하는 0부터 시작하는 인덱스입니다.</param>
        <param name="visual">
          <see cref="T:System.Windows.Media.Visual" />에 삽입할 <see cref="T:System.Windows.Media.VisualCollection" />입니다.</param>
        <summary>
          <see cref="T:System.Windows.Media.VisualCollection" />의 지정된 인덱스에 요소를 삽입합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우 <xref:System.Windows.Media.VisualCollection.Count%2A> 이미 <xref:System.Windows.Media.VisualCollection.Capacity%2A>의 용량이 <xref:System.Windows.Media.VisualCollection> 전에 새 증가 <xref:System.Windows.Media.Visual> 삽입 됩니다. 경우 `index` 같으면 <xref:System.Windows.Media.VisualCollection.Count%2A>, `visual` 의 끝에 추가 <xref:System.Windows.Media.VisualCollection>합니다. 모든 기존 시각적 개체 보다 크거나 같은 `index` 새에 맞게을 향해 이동 <xref:System.Windows.Media.Visual>, 인덱스 값이 업데이트 됩니다.  
  
 <xref:System.Windows.Media.VisualCollection.Insert%2A> 메서드 소유자 인 부모 표시 간의 부모-자식 관계를 설정의 <xref:System.Windows.Media.VisualCollection>와 자식 `visual`합니다.  
  
 시각적 자식 개체의 기본 저장소 구현에 대 한 하위 수준 제어 강화 해야 할 경우 사용 하 여 고려는 <xref:System.Windows.Media.Visual.AddVisualChild%2A> 및 <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> 메서드. 사용자 지정 저장소 구현을 정의 하 고 사용 하지 마십시오 하 이러한 메서드를 사용 하는 경우 <xref:System.Windows.Media.VisualCollection>합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" />가 0보다 작거나 <see cref="P:System.Windows.Media.VisualCollection.Count" />보다 큰 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Media.VisualCollection" />이 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>
          <see cref="T:System.Windows.Media.VisualCollection" />이 읽기 전용인지 여부를 나타내는 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 항상 `false` 모든 <xref:System.Windows.Media.VisualCollection> 개체입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Media.VisualCollection" />에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되는지를 나타내는 값을 가져옵니다.</summary>
        <value>
          <see cref="T:System.Windows.Media.VisualCollection" />이 동기화되는지(스레드로부터 안전한지) 여부를 나타내는 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 항상 `false` 모든 <xref:System.Windows.Media.VisualCollection> 개체입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Visual this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Visual Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As Visual" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Visual ^ default[int] { System::Windows::Media::Visual ^ get(int index); void set(int index, System::Windows::Media::Visual ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Visual</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <see cref="T:System.Windows.Media.VisualCollection" />을 가져오거나 설정하기 시작할 <see cref="T:System.Windows.Media.Visual" />의 인덱스(0부터 시작)입니다.</param>
        <summary>
          <see cref="T:System.Windows.Media.Visual" />의 0부터 시작하는 인덱스 위치에 저장된 <see cref="T:System.Windows.Media.VisualCollection" />을 가져오거나 설정합니다.</summary>
        <value>
          <paramref name="index" />에 저장된 <see cref="T:System.Windows.Media.Visual" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 특정 액세스 하는 기능을 제공 <xref:System.Windows.Media.Visual> 에 <xref:System.Windows.Media.VisualCollection> 인덱스를 사용 하 여 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" />가 0보다 작거나 <paramref name="index" />가 <see cref="P:System.Windows.Media.VisualCollection.Count" />보다 크거나 같은 경우</exception>
        <exception cref="T:System.ArgumentException">새 자식 요소에 이미 부모가 있거나 지정한 인덱스의 값이 <see langword="null" />이 아닌 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.Remove(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Windows::Media::Visual ^ visual);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual">
          <see cref="T:System.Windows.Media.Visual" />에서 제거할 <see cref="T:System.Windows.Media.VisualCollection" />입니다.</param>
        <summary>
          <see cref="T:System.Windows.Media.Visual" />에서 지정한 <see cref="T:System.Windows.Media.VisualCollection" /> 개체를 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 제거 된 개체에 있는 시각적 개체가 빈 지점을를 향해 이동 하 고 인덱스 값 업데이트 됩니다. 경우 `visual` 은 `null`, 첫 번째 `null` 항목이 제거 됩니다. 제거는 `null` 항목은 컬렉션의 크기에 비례 합니다.  
  
 <xref:System.Windows.Media.VisualCollection.Remove%2A> 메서드 제거 소유자 인 부모 표시 간의 부모-자식 관계의는 <xref:System.Windows.Media.VisualCollection>와 자식 `visual`합니다.  
  
 시각적 자식 개체의 기본 저장소 구현에 대 한 하위 수준 제어 강화 해야 할 경우 사용 하 여 고려는 <xref:System.Windows.Media.Visual.AddVisualChild%2A> 및 <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> 메서드. 사용자 지정 저장소 구현을 정의 하 고 사용 하지 마십시오 하 이러한 메서드를 사용 하는 경우 <xref:System.Windows.Media.VisualCollection>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">제거할 표시의 인덱스(0부터 시작)입니다.</param>
        <summary>
          <see cref="T:System.Windows.Media.VisualCollection" />의 지정한 인덱스에서 시각적 개체를 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 제거 된 개체에 있는 시각적 개체가 빈 지점을를 향해 이동 하 고 인덱스 값 업데이트 됩니다.  
  
 <xref:System.Windows.Media.VisualCollection.RemoveAt%2A> 메서드 제거 소유자 인 부모 표시 간의 부모-자식 관계의는 <xref:System.Windows.Media.VisualCollection>와 자식 `visual`합니다.  
  
 시각적 자식 개체의 기본 저장소 구현에 대 한 하위 수준 제어 강화 해야 할 경우 사용 하 여 고려는 <xref:System.Windows.Media.Visual.AddVisualChild%2A> 및 <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> 메서드. 사용자 지정 저장소 구현을 정의 하 고 사용 하지 마십시오 하 이러한 메서드를 사용 하는 경우 <xref:System.Windows.Media.VisualCollection>합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" />가 0보다 작거나 <paramref name="index" />가 <see cref="P:System.Windows.Media.VisualCollection.Count" />보다 크거나 같은 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveRange">
      <MemberSignature Language="C#" Value="public void RemoveRange (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveRange(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.RemoveRange(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveRange (index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveRange(int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">제거할 요소 범위의 인덱스(0부터 시작)입니다.</param>
        <param name="count">제거할 요소의 수입니다.</param>
        <summary>
          <see cref="T:System.Windows.Media.VisualCollection" />에서 시각적 개체의 범위를 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 제거 된 개체는 시각적 개체는 비워진된 위치를 사용 하도록 이동 하 고 인덱스 값 업데이트 됩니다.  
  
 <xref:System.Windows.Media.VisualCollection.RemoveRange%2A> 메서드 제거 소유자 인 부모 표시 간의 부모-자식 관계의는 <xref:System.Windows.Media.VisualCollection>, 및 시각적 자식 범위입니다.  
  
 시각적 자식 개체의 기본 저장소 구현에 대 한 하위 수준 제어 강화 해야 할 경우 사용 하 여 고려는 <xref:System.Windows.Media.Visual.AddVisualChild%2A> 및 <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> 메서드. 사용자 지정 저장소 구현을 정의 하 고 사용 하지 마십시오 하 이러한 메서드를 사용 하는 경우 <xref:System.Windows.Media.VisualCollection>합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" />나 <paramref name="count" />가 0보다 작은 경우</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="index" /> 및 <paramref name="count" />가 <see cref="T:System.Windows.Media.VisualCollection" />에 있는 요소의 올바른 범위를 나타내지 않는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Media.VisualCollection" />에 대한 액세스를 동기화하는 데 사용할 수 있는 개체를 가져옵니다.</summary>
        <value>
          <see cref="T:System.Object" /> 형식의 값입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 멤버는 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 인프라를 지원하며 코드에서 직접 사용할 수 없습니다. 이 멤버에 대한 설명은 <see cref="M:System.Collections.IEnumerable.GetEnumerator" />를 참조하세요.</summary>
        <returns>컬렉션을 반복하는 데 사용할 수 있는 개체입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>