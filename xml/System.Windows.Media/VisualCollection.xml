<Type Name="VisualCollection" FullName="System.Windows.Media.VisualCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="442b2780016b5ad19f7356c677c98a6dd4ef6efa" />
    <Meta Name="ms.sourcegitcommit" Value="723b8a6d92667ba86fcda96190bad3b4a03283b3" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="11/09/2018" />
    <Meta Name="ms.locfileid" Value="51303672" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class VisualCollection : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit VisualCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.VisualCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class VisualCollection&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualCollection sealed : System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type VisualCollection = class&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="30e30-101">
        <see cref="T:System.Windows.Media.Visual" /> 개체의 정렬된 컬렉션을 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="30e30-101">Represents an ordered collection of <see cref="T:System.Windows.Media.Visual" /> objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30e30-102"><xref:System.Windows.Media.VisualCollection> 상황에 맞는 선호도 암시적인 합니다.</span><span class="sxs-lookup"><span data-stu-id="30e30-102">A <xref:System.Windows.Media.VisualCollection> has implied context affinity.</span></span> <span data-ttu-id="30e30-103">프로시저에 액세스 하려고 하는 경우는 <xref:System.Windows.Media.VisualCollection> 소유 하 고 있는 컨텍스트 이외의 다른 컨텍스트에서 <xref:System.Windows.Media.ContainerVisual>, 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="30e30-103">If a procedure attempts to access the <xref:System.Windows.Media.VisualCollection> from a different context than the context of the owning <xref:System.Windows.Media.ContainerVisual>, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30e30-104">다음 예제에서는 만드는 방법을 보여 줍니다는 <xref:System.Windows.Media.VisualCollection> 멤버를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="30e30-104">The following example shows how to create a <xref:System.Windows.Media.VisualCollection> and add members to it.</span></span>  
  
 [!code-csharp[DrawingVisualSample#100](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingVisualSample/CSharp/Window1.xaml.cs#100)]
 [!code-vb[DrawingVisualSample#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingVisualSample/visualbasic/window1.xaml.vb#100)]  
  
> [!NOTE]
>  <span data-ttu-id="30e30-105">전체 샘플을 참조 하세요 [DrawingVisuals 샘플을 사용 하 여 테스트 적중](http://go.microsoft.com/fwlink/?LinkID=159994)합니다.</span><span class="sxs-lookup"><span data-stu-id="30e30-105">For the complete sample, see [Hit Test Using DrawingVisuals Sample](http://go.microsoft.com/fwlink/?LinkID=159994).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualCollection (System.Windows.Media.Visual parent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Media.Visual parent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.#ctor(System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parent As Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualCollection(System::Windows::Media::Visual ^ parent);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.VisualCollection : System.Windows.Media.Visual -&gt; System.Windows.Media.VisualCollection" Usage="new System.Windows.Media.VisualCollection parent" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parent" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="parent">
          <span data-ttu-id="30e30-106">
            <see cref="T:System.Windows.Media.VisualCollection" />이 반환되는 시각적 부모 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e30-106">The parent visual object whose <see cref="T:System.Windows.Media.VisualCollection" /> is returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30e30-107">
            <see cref="T:System.Windows.Media.VisualCollection" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e30-107">Initializes a new instance of the <see cref="T:System.Windows.Media.VisualCollection" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Windows::Media::Visual ^ visual);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Windows.Media.Visual -&gt; int" Usage="visualCollection.Add visual" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual">
          <span data-ttu-id="30e30-108">
            <see cref="T:System.Windows.Media.Visual" />에 추가할 <see cref="T:System.Windows.Media.VisualCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e30-108">The <see cref="T:System.Windows.Media.Visual" /> to append to the <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30e30-109">
            <see cref="T:System.Windows.Media.Visual" />의 끝에 <see cref="T:System.Windows.Media.VisualCollection" />을 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e30-109">Appends a <see cref="T:System.Windows.Media.Visual" /> to the end of the <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30e30-110">
            <paramref name="visual" />이 추가된 컬렉션의 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e30-110">The index in the collection at which <paramref name="visual" /> was added.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30e30-111">추가 된 <xref:System.Windows.Media.Visual> 값인 `null` 허용 되 고 예외가 발생 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="30e30-111">Adding a <xref:System.Windows.Media.Visual> whose value is `null` is permitted and does not raise an exception.</span></span>  
  
 <span data-ttu-id="30e30-112"><xref:System.Windows.Media.VisualCollection.Add%2A> 메서드는 또한 소유자는 시각적 개체를 부모 간에 부모-자식 관계를 설정의 합니다 <xref:System.Windows.Media.VisualCollection>, 및 자식 `visual`합니다.</span><span class="sxs-lookup"><span data-stu-id="30e30-112">The <xref:System.Windows.Media.VisualCollection.Add%2A> method also sets up the parent-child relationship between the parent visual, which is the owner of the <xref:System.Windows.Media.VisualCollection>, and the child `visual`.</span></span>  
  
 <span data-ttu-id="30e30-113">사용자 지정 클래스의 시각적 자식 개체의 기본 저장소 구현에 대 한 큰 수준이 낮은 제어를 해야 하는 경우 사용을 고려 합니다 <xref:System.Windows.Media.Visual.AddVisualChild%2A> 고 <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="30e30-113">If you need greater low-level control over the underlying storage implementation of visual child objects of a custom class, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods.</span></span> <span data-ttu-id="30e30-114">사용자 고유의 저장소 구현을 정의 해야 하 고 사용 하지 않는 이러한 메서드를 사용 하는 경우 <xref:System.Windows.Media.VisualCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="30e30-114">When you use these methods, you must define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30e30-115">다음 예제에서는 만드는 방법을 보여 줍니다는 <xref:System.Windows.Media.VisualCollection> 멤버를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="30e30-115">The following example shows how to create a <xref:System.Windows.Media.VisualCollection> and add members to it.</span></span>  
  
 [!code-csharp[DrawingVisualSample#100](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingVisualSample/CSharp/Window1.xaml.cs#100)]
 [!code-vb[DrawingVisualSample#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingVisualSample/visualbasic/window1.xaml.vb#100)]  
  
> [!NOTE]
>  <span data-ttu-id="30e30-116">전체 샘플을 참조 하세요 [DrawingVisuals 샘플을 사용 하 여 테스트 적중](http://go.microsoft.com/fwlink/?LinkID=159994)합니다.</span><span class="sxs-lookup"><span data-stu-id="30e30-116">For the complete sample, see [Hit Test Using DrawingVisuals Sample](http://go.microsoft.com/fwlink/?LinkID=159994).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="30e30-117">
            <see cref="T:System.ArgumentException" />이 루트 요소이면 <see cref="T:System.Windows.Media.Visual" />이 throw되는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e30-117">An <see cref="T:System.ArgumentException" /> is thrown if the <see cref="T:System.Windows.Media.Visual" /> is a root element.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Capacity">
      <MemberSignature Language="C#" Value="public int Capacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Capacity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualCollection.Capacity" />
      <MemberSignature Language="VB.NET" Value="Public Property Capacity As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Capacity { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Capacity : int with get, set" Usage="System.Windows.Media.VisualCollection.Capacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="30e30-118">
            <see cref="T:System.Windows.Media.VisualCollection" />에 포함될 수 있는 요소의 수를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e30-118">Gets or sets the number of elements that the <see cref="T:System.Windows.Media.VisualCollection" /> can contain.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="30e30-119">
            <see cref="T:System.Windows.Media.VisualCollection" />에 포함될 수 있는 요소의 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e30-119">The number of elements that the <see cref="T:System.Windows.Media.VisualCollection" /> can contain.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30e30-120">값 <xref:System.Windows.Media.VisualCollection.Capacity%2A> 요소의 수는 <xref:System.Windows.Media.VisualCollection> 저장할 수 있는 합니다.</span><span class="sxs-lookup"><span data-stu-id="30e30-120">The value of <xref:System.Windows.Media.VisualCollection.Capacity%2A> is the number of elements that the <xref:System.Windows.Media.VisualCollection> is capable of storing.</span></span> <span data-ttu-id="30e30-121"><xref:System.Windows.Media.VisualCollection.Count%2A> 에 실제로 있는 시각적 개체의 수는 <xref:System.Windows.Media.VisualCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="30e30-121"><xref:System.Windows.Media.VisualCollection.Count%2A> is the number of visuals that are actually in the <xref:System.Windows.Media.VisualCollection>.</span></span> <span data-ttu-id="30e30-122"><xref:System.Windows.Media.VisualCollection.Capacity%2A> 항상 보다 크거나 같음 <xref:System.Windows.Media.VisualCollection.Count%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="30e30-122"><xref:System.Windows.Media.VisualCollection.Capacity%2A> is always greater than or equal to <xref:System.Windows.Media.VisualCollection.Count%2A>.</span></span> <span data-ttu-id="30e30-123">하는 경우 <xref:System.Windows.Media.VisualCollection.Count%2A> 초과 <xref:System.Windows.Media.VisualCollection.Capacity%2A> 용량의 요소를 추가 하는 동안는 <xref:System.Windows.Media.VisualCollection> 증가 합니다.</span><span class="sxs-lookup"><span data-stu-id="30e30-123">If <xref:System.Windows.Media.VisualCollection.Count%2A> exceeds <xref:System.Windows.Media.VisualCollection.Capacity%2A> while adding elements, the capacity of the <xref:System.Windows.Media.VisualCollection> is increased.</span></span> <span data-ttu-id="30e30-124">기본적으로 <xref:System.Windows.Media.VisualCollection.Capacity%2A> 은 0입니다.</span><span class="sxs-lookup"><span data-stu-id="30e30-124">By default <xref:System.Windows.Media.VisualCollection.Capacity%2A> is zero.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="30e30-125">
            <see cref="P:System.Windows.Media.VisualCollection.Capacity" />가 <see cref="P:System.Windows.Media.VisualCollection.Count" />보다 작은 값으로 설정되어 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e30-125">
              <see cref="P:System.Windows.Media.VisualCollection.Capacity" /> is set to a value that is less than <see cref="P:System.Windows.Media.VisualCollection.Count" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="visualCollection.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="30e30-126">
            <see cref="T:System.Windows.Media.VisualCollection" />에서 모든 요소를 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e30-126">Removes all elements from the <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30e30-127"><xref:System.Windows.Media.VisualCollection.Count%2A> 0으로 초기화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="30e30-127">The <xref:System.Windows.Media.VisualCollection.Count%2A> is reset to zero.</span></span> <span data-ttu-id="30e30-128">값을 <xref:System.Windows.Media.VisualCollection.Capacity%2A> 그대로 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="30e30-128">The value of the <xref:System.Windows.Media.VisualCollection.Capacity%2A> remains unchanged.</span></span> <span data-ttu-id="30e30-129">용량을 다시 설정 하는 <xref:System.Windows.Media.VisualCollection>설정의 <xref:System.Windows.Media.VisualCollection.Capacity%2A> 속성을 원하는 크기로 합니다.</span><span class="sxs-lookup"><span data-stu-id="30e30-129">To reset the capacity of the <xref:System.Windows.Media.VisualCollection>, set the <xref:System.Windows.Media.VisualCollection.Capacity%2A> property to the desired size.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.Contains(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Media::Visual ^ visual);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Windows.Media.Visual -&gt; bool" Usage="visualCollection.Contains visual" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual">
          <span data-ttu-id="30e30-130">컬렉션에서 검색할 <see cref="T:System.Windows.Media.Visual" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e30-130">The <see cref="T:System.Windows.Media.Visual" /> to search for in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30e30-131">지정한 <see cref="T:System.Boolean" />이 컬렉션에 포함되어 있는지 여부를 나타내는 <see cref="T:System.Windows.Media.Visual" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e30-131">Returns a <see cref="T:System.Boolean" /> value that indicates whether the specified <see cref="T:System.Windows.Media.Visual" /> is contained in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30e30-132">
            <paramref name="visual" />가 컬렉션에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e30-132">
              <see langword="true" /> if <paramref name="visual" /> is contained in the collection; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30e30-133">이 함수의 런타임 최악의 시나리오는 `O(n)`, 여기서 `n` 의 항목 수를 <xref:System.Windows.Media.VisualCollection>입니다.</span><span class="sxs-lookup"><span data-stu-id="30e30-133">The worst-case runtime scenario of this function is `O(n)`, where `n` is the number of items in the <xref:System.Windows.Media.VisualCollection>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="30e30-134">전달된 배열에 현재 컬렉션을 복사합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e30-134">Copies the current collection into the passed array.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="visualCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="30e30-135">
            <see cref="T:System.Array" />에서 복사한 요소의 대상인 1차원 <see cref="T:System.Windows.Media.VisualCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e30-135">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements that are copied from the <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="30e30-136">
            <c>배열</c>에서 복사를 시작할 인덱스입니다. 이 인덱스는 0부터 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e30-136">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30e30-137">특정 배열 인덱스에서 시작하여 컬렉션의 항목을 배열에 복사합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e30-137">Copies the items in the collection to an array, starting at a specific array index.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Windows.Media.Visual[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Windows.Media.Visual[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.CopyTo(System.Windows.Media.Visual[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As Visual(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Windows::Media::Visual ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Windows.Media.Visual[] * int -&gt; unit" Usage="visualCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Windows.Media.Visual[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="30e30-138">0부터 시작하는 인덱스를 사용하는 <see cref="T:System.Windows.Media.Visual" /> 개체의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e30-138">An array of <see cref="T:System.Windows.Media.Visual" /> objects (which must have zero-based indexing).</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="30e30-139">
            <c>array</c>에서 복사를 시작할 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e30-139">The index to start copying from within <c>array</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30e30-140">전달된 <see cref="T:System.Windows.Media.Visual" /> 배열에 현재 컬렉션을 복사합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e30-140">Copies the current collection into the passed <see cref="T:System.Windows.Media.Visual" /> array.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Media.VisualCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="30e30-141">컬렉션의 요소 수를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e30-141">Gets the number of elements in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="30e30-142">
            <see cref="T:System.Windows.Media.VisualCollection" />에 포함된 요소 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e30-142">The number of elements that the <see cref="T:System.Windows.Media.VisualCollection" /> contains.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30e30-143"><xref:System.Windows.Media.VisualCollection.Count%2A> 에 실제로 있는 요소의 수는 <xref:System.Windows.Media.VisualCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="30e30-143"><xref:System.Windows.Media.VisualCollection.Count%2A> is the number of elements that are actually in the <xref:System.Windows.Media.VisualCollection>.</span></span> <span data-ttu-id="30e30-144"><xref:System.Windows.Media.VisualCollection.Capacity%2A> 요소의 수는 <xref:System.Windows.Media.VisualCollection> 저장할 수 있는 합니다.</span><span class="sxs-lookup"><span data-stu-id="30e30-144"><xref:System.Windows.Media.VisualCollection.Capacity%2A> is the number of elements that the <xref:System.Windows.Media.VisualCollection> is capable of storing.</span></span>  
  
 <span data-ttu-id="30e30-145"><xref:System.Windows.Media.VisualCollection.Count%2A> 항상 보다 작거나 같음 <xref:System.Windows.Media.VisualCollection.Capacity%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="30e30-145"><xref:System.Windows.Media.VisualCollection.Count%2A> is always less than or equal to <xref:System.Windows.Media.VisualCollection.Capacity%2A>.</span></span> <span data-ttu-id="30e30-146">하는 경우 <xref:System.Windows.Media.VisualCollection.Count%2A> 초과 <xref:System.Windows.Media.VisualCollection.Capacity%2A> 요소를 추가 하는 동안 목록의 용량이 자동으로 이전 요소를 복사 하 고 새 요소를 추가 하기 전에 내부 배열을 재할당 하 여 두 배가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="30e30-146">If <xref:System.Windows.Media.VisualCollection.Count%2A> exceeds <xref:System.Windows.Media.VisualCollection.Capacity%2A> while adding elements, the capacity of the list is doubled by automatically reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Windows.Media.VisualCollection.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.VisualCollection/Enumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As VisualCollection.Enumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::VisualCollection::Enumerator GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Windows.Media.VisualCollection.Enumerator" Usage="visualCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.VisualCollection+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="30e30-147">
            <see cref="T:System.Windows.Media.VisualCollection" />을 반복할 수 있는 열거자를 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e30-147">Retrieves an enumerator that can iterate through the <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30e30-148">컬렉션을 반복하는 데 사용할 수 있는 열거자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e30-148">An enumerator that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Collections.IEnumerable.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.IndexOf(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Windows::Media::Visual ^ visual);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Windows.Media.Visual -&gt; int" Usage="visualCollection.IndexOf visual" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual">
          <span data-ttu-id="30e30-149">
            <see cref="T:System.Windows.Media.Visual" />에서 찾을 <see cref="T:System.Windows.Media.VisualCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e30-149">The <see cref="T:System.Windows.Media.Visual" /> to locate in the <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30e30-150">
            <see cref="T:System.Windows.Media.Visual" />의 인덱스(0부터 시작)를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e30-150">Returns the zero-based index of the <see cref="T:System.Windows.Media.Visual" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30e30-151">
            <see cref="T:System.Windows.Media.Visual" />의 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e30-151">The index of the <see cref="T:System.Windows.Media.Visual" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30e30-152">경우는 <xref:System.Windows.Media.Visual> 에 없는 경우는 <xref:System.Windows.Media.VisualCollection>,-1이 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="30e30-152">If the <xref:System.Windows.Media.Visual> is not in the <xref:System.Windows.Media.VisualCollection>, -1 is returned.</span></span> <span data-ttu-id="30e30-153">하는 경우 `null` 가 있는 첫 번째 항목의 인덱스 메서드에 전달 됩니다 `null` 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="30e30-153">If `null` is passed to the method, the index of the first entry that has `null` is returned.</span></span> <span data-ttu-id="30e30-154">Null 항목이 없으면-1이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="30e30-154">If there is no null entry, -1 is returned.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Windows::Media::Visual ^ visual);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * System.Windows.Media.Visual -&gt; unit" Usage="visualCollection.Insert (index, visual)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="30e30-155">값을 삽입해야 하는 0부터 시작하는 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e30-155">The zero-based index at which the value should be inserted.</span>
          </span>
        </param>
        <param name="visual">
          <span data-ttu-id="30e30-156">
            <see cref="T:System.Windows.Media.VisualCollection" />에 삽입할 <see cref="T:System.Windows.Media.Visual" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e30-156">The <see cref="T:System.Windows.Media.Visual" /> to insert into the <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30e30-157">
            <see cref="T:System.Windows.Media.VisualCollection" />의 지정된 인덱스에 요소를 삽입합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e30-157">Inserts an element into the <see cref="T:System.Windows.Media.VisualCollection" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30e30-158">경우 <xref:System.Windows.Media.VisualCollection.Count%2A> 가 이미 <xref:System.Windows.Media.VisualCollection.Capacity%2A>의 용량을 <xref:System.Windows.Media.VisualCollection> 새 전에 증가 <xref:System.Windows.Media.Visual> 삽입 됩니다.</span><span class="sxs-lookup"><span data-stu-id="30e30-158">If <xref:System.Windows.Media.VisualCollection.Count%2A> already equals <xref:System.Windows.Media.VisualCollection.Capacity%2A>, the capacity of the <xref:System.Windows.Media.VisualCollection> is increased before the new <xref:System.Windows.Media.Visual> is inserted.</span></span> <span data-ttu-id="30e30-159">하는 경우 `index` 값과 같음 <xref:System.Windows.Media.VisualCollection.Count%2A>를 `visual` 끝에 추가 됩니다 <xref:System.Windows.Media.VisualCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="30e30-159">If `index` is equal to <xref:System.Windows.Media.VisualCollection.Count%2A>, `visual` is added to the end of <xref:System.Windows.Media.VisualCollection>.</span></span> <span data-ttu-id="30e30-160">모든 기존 시각적 개체 보다 크거나 `index` 새에 맞게 이동 <xref:System.Windows.Media.Visual>을 인덱스 값이 업데이트 됩니다.</span><span class="sxs-lookup"><span data-stu-id="30e30-160">Any existing visual objects that are equal to or greater than `index` are shifted to accommodate the new <xref:System.Windows.Media.Visual>, and their index values are updated.</span></span>  
  
 <span data-ttu-id="30e30-161"><xref:System.Windows.Media.VisualCollection.Insert%2A> 메서드는 또한 소유자는 시각적 개체를 부모 간에 부모-자식 관계를 설정의 합니다 <xref:System.Windows.Media.VisualCollection>, 및 자식 `visual`합니다.</span><span class="sxs-lookup"><span data-stu-id="30e30-161">The <xref:System.Windows.Media.VisualCollection.Insert%2A> method also sets up the parent-child relationship between the parent visual, which is the owner of the <xref:System.Windows.Media.VisualCollection>, and the child `visual`.</span></span>  
  
 <span data-ttu-id="30e30-162">시각적 자식 개체의 기본 저장소 구현에 대 한 큰 수준이 낮은 제어를 해야 하는 경우 사용을 고려 합니다 <xref:System.Windows.Media.Visual.AddVisualChild%2A> 고 <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="30e30-162">If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods.</span></span> <span data-ttu-id="30e30-163">이러한 메서드를 사용 하는 경우 사용자 고유의 저장소 구현을 정의 사용 하지 않는 한 <xref:System.Windows.Media.VisualCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="30e30-163">When you use these methods, you define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="30e30-164">
            <paramref name="index" />가 0보다 작거나  <see cref="P:System.Windows.Media.VisualCollection.Count" />보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e30-164">
              <paramref name="index" /> is less than zero or greater than <see cref="P:System.Windows.Media.VisualCollection.Count" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.Media.VisualCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="30e30-165">
            <see cref="T:System.Windows.Media.VisualCollection" />이 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e30-165">Gets a value that indicates whether the <see cref="T:System.Windows.Media.VisualCollection" /> is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="30e30-166">
            <see cref="T:System.Windows.Media.VisualCollection" />이 읽기 전용인지 여부를 나타내는 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e30-166">The value that indicates whether the <see cref="T:System.Windows.Media.VisualCollection" /> is read-only.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30e30-167">이 속성은 항상 `false` 모든 <xref:System.Windows.Media.VisualCollection> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="30e30-167">This property is always `false` for all <xref:System.Windows.Media.VisualCollection> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Windows.Media.VisualCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="30e30-168">
            <see cref="T:System.Windows.Media.VisualCollection" />에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되는지를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e30-168">Gets a value that indicates whether access to the <see cref="T:System.Windows.Media.VisualCollection" /> is synchronized (thread-safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="30e30-169">
            <see cref="T:System.Windows.Media.VisualCollection" />이 동기화되는지(스레드로부터 안전한지) 여부를 나타내는 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e30-169">The value that indicates whether the <see cref="T:System.Windows.Media.VisualCollection" /> is synchronized (thread-safe).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30e30-170">이 속성은 항상 `false` 모든 <xref:System.Windows.Media.VisualCollection> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="30e30-170">This property is always `false` for all <xref:System.Windows.Media.VisualCollection> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Visual this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Visual Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As Visual" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Visual ^ default[int] { System::Windows::Media::Visual ^ get(int index); void set(int index, System::Windows::Media::Visual ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Windows.Media.Visual with get, set" Usage="System.Windows.Media.VisualCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Visual</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="30e30-171">
            <see cref="T:System.Windows.Media.VisualCollection" />을 가져오거나 설정하기 시작할 <see cref="T:System.Windows.Media.Visual" />의 인덱스(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e30-171">The zero-based index of the <see cref="T:System.Windows.Media.VisualCollection" /> from which to get or set the <see cref="T:System.Windows.Media.Visual" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30e30-172">
            <see cref="T:System.Windows.Media.Visual" />의 0부터 시작하는 인덱스 위치에 저장된 <see cref="T:System.Windows.Media.VisualCollection" />을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e30-172">Gets or sets the <see cref="T:System.Windows.Media.Visual" /> that is stored at the zero-based index of the <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="30e30-173">
            <paramref name="index" />에 저장된 <see cref="T:System.Windows.Media.Visual" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e30-173">The <see cref="T:System.Windows.Media.Visual" /> that is stored at <paramref name="index" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30e30-174">이 속성은 특정 액세스 하는 기능을 제공 <xref:System.Windows.Media.Visual> 에 <xref:System.Windows.Media.VisualCollection> 인덱스를 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="30e30-174">This property provides the ability to access a specific <xref:System.Windows.Media.Visual> in the <xref:System.Windows.Media.VisualCollection> by using an index.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="30e30-175">
            <paramref name="index" />가 0보다 작거나 <paramref name="index" />가 <see cref="P:System.Windows.Media.VisualCollection.Count" />보다 크거나 같은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e30-175">
              <paramref name="index" /> is less than zero, or <paramref name="index" /> is equal to or greater than <see cref="P:System.Windows.Media.VisualCollection.Count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="30e30-176">새 자식 요소에 이미 부모가 있거나 지정한 인덱스의 값이 <see langword="null" />이 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e30-176">The new child element already has a parent, or the value at the specified index is not <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.Remove(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Windows::Media::Visual ^ visual);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Windows.Media.Visual -&gt; unit" Usage="visualCollection.Remove visual" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual">
          <span data-ttu-id="30e30-177">
            <see cref="T:System.Windows.Media.Visual" />에서 제거할 <see cref="T:System.Windows.Media.VisualCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e30-177">The <see cref="T:System.Windows.Media.Visual" /> to remove from the <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30e30-178">
            <see cref="T:System.Windows.Media.Visual" />에서 지정한 <see cref="T:System.Windows.Media.VisualCollection" /> 개체를 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e30-178">Removes the specified <see cref="T:System.Windows.Media.Visual" /> object from the <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30e30-179">제거 된 개체는 시각적 개체에는 빈 지점을 이동 하 고 해당 인덱스 값 업데이트 됩니다.</span><span class="sxs-lookup"><span data-stu-id="30e30-179">The visual objects that follow the removed object are shifted to occupy the vacated position, and their index values are updated.</span></span> <span data-ttu-id="30e30-180">하는 경우 `visual` 됩니다 `null`, 첫 번째 `null` 항목이 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="30e30-180">If `visual` is `null`, the first `null` entry is removed.</span></span> <span data-ttu-id="30e30-181">제거를 `null` 항목 컬렉션의 크기에 비례 합니다.</span><span class="sxs-lookup"><span data-stu-id="30e30-181">Note that removing a `null` entry is linear in the size of the collection.</span></span>  
  
 <span data-ttu-id="30e30-182"><xref:System.Windows.Media.VisualCollection.Remove%2A> 메서드는 또한 소유자는 시각적 개체를 부모 간에 부모-자식 관계를 제거의 합니다 <xref:System.Windows.Media.VisualCollection>, 및 자식 `visual`합니다.</span><span class="sxs-lookup"><span data-stu-id="30e30-182">The <xref:System.Windows.Media.VisualCollection.Remove%2A> method also removes the parent-child relationship between the parent visual, which is the owner of the <xref:System.Windows.Media.VisualCollection>, and the child `visual`.</span></span>  
  
 <span data-ttu-id="30e30-183">시각적 자식 개체의 기본 저장소 구현에 대 한 큰 수준이 낮은 제어를 해야 하는 경우 사용을 고려 합니다 <xref:System.Windows.Media.Visual.AddVisualChild%2A> 고 <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="30e30-183">If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods.</span></span> <span data-ttu-id="30e30-184">이러한 메서드를 사용 하는 경우 사용자 고유의 저장소 구현을 정의 사용 하지 않는 한 <xref:System.Windows.Media.VisualCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="30e30-184">When you use these methods, you define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; unit" Usage="visualCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="30e30-185">제거할 표시의 인덱스(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e30-185">The zero-based index of the visual to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30e30-186">
            <see cref="T:System.Windows.Media.VisualCollection" />의 지정한 인덱스에서 시각적 개체를 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e30-186">Removes the visual object at the specified index in the <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30e30-187">제거 된 개체는 시각적 개체에는 빈 지점을 이동 하 고 해당 인덱스 값 업데이트 됩니다.</span><span class="sxs-lookup"><span data-stu-id="30e30-187">The visual objects that follow the removed object are shifted to occupy the vacated position, and their index values are updated.</span></span>  
  
 <span data-ttu-id="30e30-188"><xref:System.Windows.Media.VisualCollection.RemoveAt%2A> 메서드는 또한 소유자는 시각적 개체를 부모 간에 부모-자식 관계를 제거의 합니다 <xref:System.Windows.Media.VisualCollection>, 및 자식 `visual`합니다.</span><span class="sxs-lookup"><span data-stu-id="30e30-188">The <xref:System.Windows.Media.VisualCollection.RemoveAt%2A> method also removes the parent-child relationship between the parent visual, which is the owner of the <xref:System.Windows.Media.VisualCollection>, and the child `visual`.</span></span>  
  
 <span data-ttu-id="30e30-189">시각적 자식 개체의 기본 저장소 구현에 대 한 큰 수준이 낮은 제어를 해야 하는 경우 사용을 고려 합니다 <xref:System.Windows.Media.Visual.AddVisualChild%2A> 고 <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="30e30-189">If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods.</span></span> <span data-ttu-id="30e30-190">이러한 메서드를 사용 하는 경우 사용자 고유의 저장소 구현을 정의 사용 하지 않는 한 <xref:System.Windows.Media.VisualCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="30e30-190">When you use these methods, you define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="30e30-191">
            <paramref name="index" />가 0보다 작거나 <paramref name="index" />가 <see cref="P:System.Windows.Media.VisualCollection.Count" />보다 크거나 같은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e30-191">
              <paramref name="index" /> is less than zero, or <paramref name="index" /> is equal to or greater than <see cref="P:System.Windows.Media.VisualCollection.Count" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveRange">
      <MemberSignature Language="C#" Value="public void RemoveRange (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveRange(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.RemoveRange(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveRange (index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveRange(int index, int count);" />
      <MemberSignature Language="F#" Value="member this.RemoveRange : int * int -&gt; unit" Usage="visualCollection.RemoveRange (index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="30e30-192">제거할 요소 범위의 인덱스(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e30-192">The zero-based index of the range of elements to remove.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="30e30-193">제거할 요소의 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e30-193">The number of elements to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30e30-194">
            <see cref="T:System.Windows.Media.VisualCollection" />에서 시각적 개체의 범위를 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e30-194">Removes a range of visual objects from the <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30e30-195">제거 된 개체는 시각적 개체는 빈 지점을를 이동 하 고 해당 인덱스 값 업데이트 됩니다.</span><span class="sxs-lookup"><span data-stu-id="30e30-195">The visual objects that follow the removed objects are shifted to occupy the vacated positions, and their index values are updated.</span></span>  
  
 <span data-ttu-id="30e30-196">합니다 <xref:System.Windows.Media.VisualCollection.RemoveRange%2A> 메서드는 또한 소유자는 시각적 개체를 부모 간에 부모-자식 관계를 제거의 <xref:System.Windows.Media.VisualCollection>, 및 자식 시각적 개체의 범위입니다.</span><span class="sxs-lookup"><span data-stu-id="30e30-196">The <xref:System.Windows.Media.VisualCollection.RemoveRange%2A> method also removes the parent-child relationships between the parent visual, which is the owner of the <xref:System.Windows.Media.VisualCollection>, and the range of child visuals.</span></span>  
  
 <span data-ttu-id="30e30-197">시각적 자식 개체의 기본 저장소 구현에 대 한 큰 수준이 낮은 제어를 해야 하는 경우 사용을 고려 합니다 <xref:System.Windows.Media.Visual.AddVisualChild%2A> 고 <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="30e30-197">If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods.</span></span> <span data-ttu-id="30e30-198">이러한 메서드를 사용 하는 경우 사용자 고유의 저장소 구현을 정의 사용 하지 않는 한 <xref:System.Windows.Media.VisualCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="30e30-198">When you use these methods, you define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="30e30-199">
            <paramref name="index" />나 <paramref name="count" />가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e30-199">
              <paramref name="index" /> is less than zero or <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="30e30-200">
            <paramref name="index" /> 및 <paramref name="count" />가 <see cref="T:System.Windows.Media.VisualCollection" />에 있는 요소의 올바른 범위를 나타내지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e30-200">
              <paramref name="index" /> and <paramref name="count" /> do not refer to a valid range of elements in the <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Windows.Media.VisualCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="30e30-201">
            <see cref="T:System.Windows.Media.VisualCollection" />에 대한 액세스를 동기화하는 데 사용할 수 있는 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e30-201">Gets an object that can be used to synchronize access to the <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="30e30-202">
            <see cref="T:System.Object" /> 형식의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e30-202">A value of type <see cref="T:System.Object" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="30e30-203">이 멤버는 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 인프라를 지원하며 코드에서 직접 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e30-203">This member supports the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span>
          </span>
          <span data-ttu-id="30e30-204">이 멤버에 대한 설명은 <see cref="M:System.Collections.IEnumerable.GetEnumerator" />를 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e30-204">For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30e30-205">컬렉션을 반복하는 데 사용할 수 있는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e30-205">An object that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>