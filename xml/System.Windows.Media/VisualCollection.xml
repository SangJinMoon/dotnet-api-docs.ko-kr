<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="VisualCollection.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac519eeb062536a84069070c205aaddc936c33cd61d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">19eeb062536a84069070c205aaddc936c33cd61d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.VisualCollection">
          <source>Represents an ordered collection of <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> 개체의 정렬된 컬렉션을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.VisualCollection">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> has implied context affinity.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> 컨텍스트 선호도 암시적으로 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.VisualCollection">
          <source>If a procedure attempts to access the <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> from a different context than the context of the owning <ph id="ph2">&lt;xref:System.Windows.Media.ContainerVisual&gt;</ph>, an exception is thrown.</source>
          <target state="translated">프로시저에 액세스 하려고 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> 소유 하 고 있는 컨텍스트와 다른 컨텍스트를 <ph id="ph2">&lt;xref:System.Windows.Media.ContainerVisual&gt;</ph>, 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.VisualCollection">
          <source>The following example shows how to create a <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> and add members to it.</source>
          <target state="translated">만드는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> 에 구성원을 추가 하 고 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.VisualCollection">
          <source>For the complete sample, see <bpt id="p1">[</bpt>Hit Test Using DrawingVisuals Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=159994)</ept>.</source>
          <target state="translated">전체 샘플을 참조 하십시오. <bpt id="p1">[</bpt>적중 테스트를 사용 하 여 DrawingVisuals 샘플<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=159994)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.#ctor(System.Windows.Media.Visual)">
          <source>The parent visual object whose <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> is returned.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>이 반환되는 시각적 부모 개체입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.#ctor(System.Windows.Media.Visual)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> to append to the <ph id="ph2">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>에 추가할 <ph id="ph2">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)">
          <source>Appends a <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> to the end of the <ph id="ph2">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>의 끝에 <ph id="ph2">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>을 추가합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)">
          <source>The index in the collection at which <ph id="ph1">&lt;paramref name="visual" /&gt;</ph> was added.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="visual" /&gt;</ph>이 추가된 컬렉션의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)">
          <source>Adding a <ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph> whose value is <ph id="ph2">`null`</ph> is permitted and does not raise an exception.</source>
          <target state="translated">추가 <ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph> 값인 <ph id="ph2">`null`</ph> 은 허용 하며 예외가 발생 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Add%2A&gt;</ph> method also sets up the parent-child relationship between the parent visual, which is the owner of the <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>, and the child <ph id="ph3">`visual`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Add%2A&gt;</ph> 메서드 소유자 인 부모 표시 간의 부모-자식 관계를 설정의 <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>와 자식 <ph id="ph3">`visual`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)">
          <source>If you need greater low-level control over the underlying storage implementation of visual child objects of a custom class, consider using the <ph id="ph1">&lt;xref:System.Windows.Media.Visual.AddVisualChild%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Visual.RemoveVisualChild%2A&gt;</ph> methods.</source>
          <target state="translated">사용자 지정 클래스의 시각적 자식 개체의 기본 저장소 구현에 대 한 하위 수준 제어 강화 해야 할 경우 사용 하 여 고려는 <ph id="ph1">&lt;xref:System.Windows.Media.Visual.AddVisualChild%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Media.Visual.RemoveVisualChild%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)">
          <source>When you use these methods, you must define your own storage implementation, and do not use <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>.</source>
          <target state="translated">사용자 지정 저장소 구현을 정의 해야 하 고 사용 하지 않는 이러한 메서드를 사용 하는 경우 <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)">
          <source>The following example shows how to create a <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> and add members to it.</source>
          <target state="translated">만드는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> 에 구성원을 추가 하 고 있습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)">
          <source>For the complete sample, see <bpt id="p1">[</bpt>Hit Test Using DrawingVisuals Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=159994)</ept>.</source>
          <target state="translated">전체 샘플을 참조 하십시오. <bpt id="p1">[</bpt>적중 테스트를 사용 하 여 DrawingVisuals 샘플<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=159994)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ArgumentException" /&gt;</ph> is thrown if the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> is a root element.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ArgumentException" /&gt;</ph>이 루트 요소이면 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>이 throw되는 경우</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.VisualCollection.Capacity">
          <source>Gets or sets the number of elements that the <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> can contain.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>에 포함될 수 있는 요소의 수를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.VisualCollection.Capacity">
          <source>The number of elements that the <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> can contain.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>에 포함될 수 있는 요소의 수입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.VisualCollection.Capacity">
          <source>The value of <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> is capable of storing.</source>
          <target state="translated">값 <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph> 요소의 수가 하는 <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> 저장할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.VisualCollection.Capacity">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph> is the number of visuals that are actually in the <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph> 에 실제로 시각 효과의 수는 <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.VisualCollection.Capacity">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph> is always greater than or equal to <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph> 보다 크거나 같은 경우는 항상 <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.VisualCollection.Capacity">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph> exceeds <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph> while adding elements, the capacity of the <ph id="ph3">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> is increased.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph> 초과 <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph> 요소의 용량을 추가 하는 동안는 <ph id="ph3">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> 증가 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.VisualCollection.Capacity">
          <source>By default <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph> is zero.</source>
          <target state="translated">기본적으로 <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph> 은 0입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.VisualCollection.Capacity">
          <source><ph id="ph1">&lt;see cref="P:System.Windows.Media.VisualCollection.Capacity" /&gt;</ph> is set to a value that is less than <ph id="ph2">&lt;see cref="P:System.Windows.Media.VisualCollection.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Media.VisualCollection.Capacity" /&gt;</ph>가 <ph id="ph2">&lt;see cref="P:System.Windows.Media.VisualCollection.Count" /&gt;</ph>보다 작은 값으로 설정되어 있습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.Clear">
          <source>Removes all elements from the <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>에서 모든 요소를 제거합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Clear">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph> is reset to zero.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph> 0으로 다시 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Clear">
          <source>The value of the <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph> remains unchanged.</source>
          <target state="translated">값은 <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph> 그대로 유지 됩니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Clear">
          <source>To reset the capacity of the <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>, set the <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph> property to the desired size.</source>
          <target state="translated">용량을 다시 설정 하는 <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>로 설정 된 <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph> 속성을 원하는 크기로 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.Contains(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> to search for in the collection.</source>
          <target state="translated">컬렉션에서 검색할 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.Contains(System.Windows.Media.Visual)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that indicates whether the specified <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> is contained in the collection.</source>
          <target state="translated">지정한 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>이 컬렉션에 포함되어 있는지 여부를 나타내는 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.Contains(System.Windows.Media.Visual)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="visual" /&gt;</ph> is contained in the collection; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="visual" /&gt;</ph>가 컬렉션에 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Contains(System.Windows.Media.Visual)">
          <source>The worst-case runtime scenario of this function is <ph id="ph1">`O(n)`</ph>, where <ph id="ph2">`n`</ph> is the number of items in the <ph id="ph3">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>.</source>
          <target state="translated">이 함수의 런타임 최악의 시나리오는 <ph id="ph1">`O(n)`</ph>여기서 <ph id="ph2">`n`</ph> 에 있는 항목의 수는 <ph id="ph3">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.VisualCollection">
          <source>Copies the current collection into the passed array.</source>
          <target state="translated">전달된 배열에 현재 컬렉션을 복사합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.CopyTo(System.Array,System.Int32)">
          <source>The one-dimensional <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> that is the destination of the elements that are copied from the <ph id="ph2">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph>에서 복사한 요소의 대상인 1차원 <ph id="ph2">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>배열<ept id="p1">&lt;/c&gt;</ept>에서 복사를 시작할 인덱스입니다. 이 인덱스는 0부터 시작합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.CopyTo(System.Array,System.Int32)">
          <source>Copies the items in the collection to an array, starting at a specific array index.</source>
          <target state="translated">특정 배열 인덱스에서 시작하여 컬렉션의 항목을 배열에 복사합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.CopyTo(System.Windows.Media.Visual[],System.Int32)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> objects (which must have zero-based indexing).</source>
          <target state="translated">0부터 시작하는 인덱스를 사용하는 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> 개체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.CopyTo(System.Windows.Media.Visual[],System.Int32)">
          <source>The index to start copying from within <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept>에서 복사를 시작할 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.CopyTo(System.Windows.Media.Visual[],System.Int32)">
          <source>Copies the current collection into the passed <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> array.</source>
          <target state="translated">전달된 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> 배열에 현재 컬렉션을 복사합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.VisualCollection.Count">
          <source>Gets the number of elements in the collection.</source>
          <target state="translated">컬렉션의 요소 수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.VisualCollection.Count">
          <source>The number of elements that the <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> contains.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>에 포함된 요소 수입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.VisualCollection.Count">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph> is the number of elements that are actually in the <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph> 에 실제로 있는 요소의 수가 고 <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.VisualCollection.Count">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> is capable of storing.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph> 요소의 수가 하는 <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> 저장할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.VisualCollection.Count">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph> is always less than or equal to <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph> 항상 보다 작거나 <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.VisualCollection.Count">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph> exceeds <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph> while adding elements, the capacity of the list is doubled by automatically reallocating the internal array before copying the old elements and adding the new elements.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph> 초과 <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph> 요소를 추가 하는 동안 목록의 용량이 이전 요소를 복사 하 고 새 요소를 추가 하기 전에 내부 배열을 자동으로 다시 할당 하 여 두 배가 됩니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.GetEnumerator">
          <source>Retrieves an enumerator that can iterate through the <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>을 반복할 수 있는 열거자를 검색합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.GetEnumerator">
          <source>An enumerator that can be used to iterate through the collection.</source>
          <target state="translated">컬렉션을 반복하는 데 사용할 수 있는 열거자입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.IndexOf(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> to locate in the <ph id="ph2">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>에서 찾을 <ph id="ph2">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.IndexOf(System.Windows.Media.Visual)">
          <source>Returns the zero-based index of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>의 인덱스(0부터 시작)를 반환합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.IndexOf(System.Windows.Media.Visual)">
          <source>The index of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.IndexOf(System.Windows.Media.Visual)">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph> is not in the <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>, -1 is returned.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph> 에 속하지 않는 <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>,-1이 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.IndexOf(System.Windows.Media.Visual)">
          <source>If <ph id="ph1">`null`</ph> is passed to the method, the index of the first entry that has <ph id="ph2">`null`</ph> is returned.</source>
          <target state="translated">경우 <ph id="ph1">`null`</ph> 을 가진 첫 번째 항목의 인덱스 메서드에 전달 되며 <ph id="ph2">`null`</ph> 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.IndexOf(System.Windows.Media.Visual)">
          <source>If there is no null entry, -1 is returned.</source>
          <target state="translated">Null 항목이 없으면-1이 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)">
          <source>The zero-based index at which the value should be inserted.</source>
          <target state="translated">값을 삽입해야 하는 0부터 시작하는 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> to insert into the <ph id="ph2">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>에 삽입할 <ph id="ph2">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)">
          <source>Inserts an element into the <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> at the specified index.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>의 지정된 인덱스에 요소를 삽입합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph> already equals <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph>, the capacity of the <ph id="ph3">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> is increased before the new <ph id="ph4">&lt;xref:System.Windows.Media.Visual&gt;</ph> is inserted.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph> 이미 <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph>의 용량이 <ph id="ph3">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> 전에 새 증가 <ph id="ph4">&lt;xref:System.Windows.Media.Visual&gt;</ph> 삽입 됩니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)">
          <source>If <ph id="ph1">`index`</ph> is equal to <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph>, <ph id="ph3">`visual`</ph> is added to the end of <ph id="ph4">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>.</source>
          <target state="translated">경우 <ph id="ph1">`index`</ph> 같으면 <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph>, <ph id="ph3">`visual`</ph> 의 끝에 추가 <ph id="ph4">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)">
          <source>Any existing visual objects that are equal to or greater than <ph id="ph1">`index`</ph> are shifted to accommodate the new <ph id="ph2">&lt;xref:System.Windows.Media.Visual&gt;</ph>, and their index values are updated.</source>
          <target state="translated">모든 기존 시각적 개체 보다 크거나 같은 <ph id="ph1">`index`</ph> 새에 맞게을 향해 이동 <ph id="ph2">&lt;xref:System.Windows.Media.Visual&gt;</ph>, 인덱스 값이 업데이트 됩니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Insert%2A&gt;</ph> method also sets up the parent-child relationship between the parent visual, which is the owner of the <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>, and the child <ph id="ph3">`visual`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Insert%2A&gt;</ph> 메서드 소유자 인 부모 표시 간의 부모-자식 관계를 설정의 <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>와 자식 <ph id="ph3">`visual`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)">
          <source>If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <ph id="ph1">&lt;xref:System.Windows.Media.Visual.AddVisualChild%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Visual.RemoveVisualChild%2A&gt;</ph> methods.</source>
          <target state="translated">시각적 자식 개체의 기본 저장소 구현에 대 한 하위 수준 제어 강화 해야 할 경우 사용 하 여 고려는 <ph id="ph1">&lt;xref:System.Windows.Media.Visual.AddVisualChild%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Media.Visual.RemoveVisualChild%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)">
          <source>When you use these methods, you define your own storage implementation, and do not use <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>.</source>
          <target state="translated">사용자 지정 저장소 구현을 정의 하 고 사용 하지 마십시오 하 이러한 메서드를 사용 하는 경우 <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than <ph id="ph2">&lt;see cref="P:System.Windows.Media.VisualCollection.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph>가 0보다 작거나 <ph id="ph2">&lt;see cref="P:System.Windows.Media.VisualCollection.Count" /&gt;</ph>보다 큰 경우</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.VisualCollection.IsReadOnly">
          <source>Gets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>이 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.VisualCollection.IsReadOnly">
          <source>The value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>이 읽기 전용인지 여부를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.VisualCollection.IsReadOnly">
          <source>This property is always <ph id="ph1">`false`</ph> for all <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> objects.</source>
          <target state="translated">이 속성은 항상 <ph id="ph1">`false`</ph> 모든 <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.VisualCollection.IsSynchronized">
          <source>Gets a value that indicates whether access to the <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> is synchronized (thread-safe).</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되는지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.VisualCollection.IsSynchronized">
          <source>The value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> is synchronized (thread-safe).</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>이 동기화되는지(스레드로부터 안전한지) 여부를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.VisualCollection.IsSynchronized">
          <source>This property is always <ph id="ph1">`false`</ph> for all <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> objects.</source>
          <target state="translated">이 속성은 항상 <ph id="ph1">`false`</ph> 모든 <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.VisualCollection.Item(System.Int32)">
          <source>The zero-based index of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> from which to get or set the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>을 가져오거나 설정하기 시작할 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>의 인덱스(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.VisualCollection.Item(System.Int32)">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> that is stored at the zero-based index of the <ph id="ph2">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>의 0부터 시작하는 인덱스 위치에 저장된 <ph id="ph2">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.VisualCollection.Item(System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> that is stored at <ph id="ph2">&lt;paramref name="index" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="index" /&gt;</ph>에 저장된 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.VisualCollection.Item(System.Int32)">
          <source>This property provides the ability to access a specific <ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph> in the <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> by using an index.</source>
          <target state="translated">이 속성은 특정 액세스 하는 기능을 제공 <ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph> 에 <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> 인덱스를 사용 하 여 합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.VisualCollection.Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero, or <ph id="ph2">&lt;paramref name="index" /&gt;</ph> is equal to or greater than <ph id="ph3">&lt;see cref="P:System.Windows.Media.VisualCollection.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph>가 0보다 작거나 <ph id="ph2">&lt;paramref name="index" /&gt;</ph>가 <ph id="ph3">&lt;see cref="P:System.Windows.Media.VisualCollection.Count" /&gt;</ph>보다 크거나 같은 경우</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.VisualCollection.Item(System.Int32)">
          <source>The new child element already has a parent, or the value at the specified index is not <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">새 자식 요소에 이미 부모가 있거나 지정한 인덱스의 값이 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이 아닌 경우</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.Remove(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> to remove from the <ph id="ph2">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>에서 제거할 <ph id="ph2">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.Remove(System.Windows.Media.Visual)">
          <source>Removes the specified <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> object from the <ph id="ph2">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>에서 지정한 <ph id="ph2">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> 개체를 제거합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Remove(System.Windows.Media.Visual)">
          <source>The visual objects that follow the removed object are shifted to occupy the vacated position, and their index values are updated.</source>
          <target state="translated">제거 된 개체에 있는 시각적 개체가 빈 지점을를 향해 이동 하 고 인덱스 값 업데이트 됩니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Remove(System.Windows.Media.Visual)">
          <source>If <ph id="ph1">`visual`</ph> is <ph id="ph2">`null`</ph>, the first <ph id="ph3">`null`</ph> entry is removed.</source>
          <target state="translated">경우 <ph id="ph1">`visual`</ph> 은 <ph id="ph2">`null`</ph>, 첫 번째 <ph id="ph3">`null`</ph> 항목이 제거 됩니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Remove(System.Windows.Media.Visual)">
          <source>Note that removing a <ph id="ph1">`null`</ph> entry is linear in the size of the collection.</source>
          <target state="translated">제거는 <ph id="ph1">`null`</ph> 항목은 컬렉션의 크기에 비례 합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Remove(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Remove%2A&gt;</ph> method also removes the parent-child relationship between the parent visual, which is the owner of the <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>, and the child <ph id="ph3">`visual`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Remove%2A&gt;</ph> 메서드 제거 소유자 인 부모 표시 간의 부모-자식 관계의는 <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>와 자식 <ph id="ph3">`visual`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Remove(System.Windows.Media.Visual)">
          <source>If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <ph id="ph1">&lt;xref:System.Windows.Media.Visual.AddVisualChild%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Visual.RemoveVisualChild%2A&gt;</ph> methods.</source>
          <target state="translated">시각적 자식 개체의 기본 저장소 구현에 대 한 하위 수준 제어 강화 해야 할 경우 사용 하 여 고려는 <ph id="ph1">&lt;xref:System.Windows.Media.Visual.AddVisualChild%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Media.Visual.RemoveVisualChild%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Remove(System.Windows.Media.Visual)">
          <source>When you use these methods, you define your own storage implementation, and do not use <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>.</source>
          <target state="translated">사용자 지정 저장소 구현을 정의 하 고 사용 하지 마십시오 하 이러한 메서드를 사용 하는 경우 <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.RemoveAt(System.Int32)">
          <source>The zero-based index of the visual to remove.</source>
          <target state="translated">제거할 표시의 인덱스(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.RemoveAt(System.Int32)">
          <source>Removes the visual object at the specified index in the <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>의 지정한 인덱스에서 시각적 개체를 제거합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.RemoveAt(System.Int32)">
          <source>The visual objects that follow the removed object are shifted to occupy the vacated position, and their index values are updated.</source>
          <target state="translated">제거 된 개체에 있는 시각적 개체가 빈 지점을를 향해 이동 하 고 인덱스 값 업데이트 됩니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.RemoveAt(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.RemoveAt%2A&gt;</ph> method also removes the parent-child relationship between the parent visual, which is the owner of the <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>, and the child <ph id="ph3">`visual`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.RemoveAt%2A&gt;</ph> 메서드 제거 소유자 인 부모 표시 간의 부모-자식 관계의는 <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>와 자식 <ph id="ph3">`visual`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.RemoveAt(System.Int32)">
          <source>If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <ph id="ph1">&lt;xref:System.Windows.Media.Visual.AddVisualChild%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Visual.RemoveVisualChild%2A&gt;</ph> methods.</source>
          <target state="translated">시각적 자식 개체의 기본 저장소 구현에 대 한 하위 수준 제어 강화 해야 할 경우 사용 하 여 고려는 <ph id="ph1">&lt;xref:System.Windows.Media.Visual.AddVisualChild%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Media.Visual.RemoveVisualChild%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.RemoveAt(System.Int32)">
          <source>When you use these methods, you define your own storage implementation, and do not use <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>.</source>
          <target state="translated">사용자 지정 저장소 구현을 정의 하 고 사용 하지 마십시오 하 이러한 메서드를 사용 하는 경우 <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.RemoveAt(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero, or <ph id="ph2">&lt;paramref name="index" /&gt;</ph> is equal to or greater than <ph id="ph3">&lt;see cref="P:System.Windows.Media.VisualCollection.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph>가 0보다 작거나 <ph id="ph2">&lt;paramref name="index" /&gt;</ph>가 <ph id="ph3">&lt;see cref="P:System.Windows.Media.VisualCollection.Count" /&gt;</ph>보다 크거나 같은 경우</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.RemoveRange(System.Int32,System.Int32)">
          <source>The zero-based index of the range of elements to remove.</source>
          <target state="translated">제거할 요소 범위의 인덱스(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.RemoveRange(System.Int32,System.Int32)">
          <source>The number of elements to remove.</source>
          <target state="translated">제거할 요소의 수입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.RemoveRange(System.Int32,System.Int32)">
          <source>Removes a range of visual objects from the <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>에서 시각적 개체의 범위를 제거합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.RemoveRange(System.Int32,System.Int32)">
          <source>The visual objects that follow the removed objects are shifted to occupy the vacated positions, and their index values are updated.</source>
          <target state="translated">제거 된 개체는 시각적 개체는 비워진된 위치를 사용 하도록 이동 하 고 인덱스 값 업데이트 됩니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.RemoveRange(System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.RemoveRange%2A&gt;</ph> method also removes the parent-child relationships between the parent visual, which is the owner of the <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>, and the range of child visuals.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.RemoveRange%2A&gt;</ph> 메서드 제거 소유자 인 부모 표시 간의 부모-자식 관계의는 <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>, 및 시각적 자식 범위입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.RemoveRange(System.Int32,System.Int32)">
          <source>If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <ph id="ph1">&lt;xref:System.Windows.Media.Visual.AddVisualChild%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Visual.RemoveVisualChild%2A&gt;</ph> methods.</source>
          <target state="translated">시각적 자식 개체의 기본 저장소 구현에 대 한 하위 수준 제어 강화 해야 할 경우 사용 하 여 고려는 <ph id="ph1">&lt;xref:System.Windows.Media.Visual.AddVisualChild%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Media.Visual.RemoveVisualChild%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.RemoveRange(System.Int32,System.Int32)">
          <source>When you use these methods, you define your own storage implementation, and do not use <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>.</source>
          <target state="translated">사용자 지정 저장소 구현을 정의 하 고 사용 하지 마십시오 하 이러한 메서드를 사용 하는 경우 <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.RemoveRange(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph>나 <ph id="ph2">&lt;paramref name="count" /&gt;</ph>가 0보다 작은 경우</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.RemoveRange(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> do not refer to a valid range of elements in the <ph id="ph3">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 및 <ph id="ph2">&lt;paramref name="count" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>에 있는 요소의 올바른 범위를 나타내지 않는 경우</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.VisualCollection.SyncRoot">
          <source>Gets an object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>에 대한 액세스를 동기화하는 데 사용할 수 있는 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.VisualCollection.SyncRoot">
          <source>A value of type <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> 형식의 값입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>This member supports the <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">이 멤버는 <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> 인프라를 지원하며 코드에서 직접 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Collections.IEnumerable.GetEnumerator" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.Collections.IEnumerable.GetEnumerator" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>An object that can be used to iterate through the collection.</source>
          <target state="translated">컬렉션을 반복하는 데 사용할 수 있는 개체입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>