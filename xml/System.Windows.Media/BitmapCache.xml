<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="BitmapCache.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5aa2459498d7f6397af57a21d648de8ec248dcd93.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">aa2459498d7f6397af57a21d648de8ec248dcd93</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.BitmapCache">
          <source>Creates and caches a bitmap representation of a <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph>의 비트맵 표현을 만들어 캐시합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.BitmapCache">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache&gt;</ph> class to improve rendering performance of a complex <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph>.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache&gt;</ph> 복잡 한의 렌더링 성능을 개선 하기 위해 클래스 <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.BitmapCache">
          <source>Create a <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache&gt;</ph> and assign it to the <ph id="ph2">&lt;xref:System.Windows.UIElement.CacheMode%2A&gt;</ph> property of a <ph id="ph3">&lt;xref:System.Windows.UIElement&gt;</ph> to cache the element and its subtree as a bitmap in video memory.</source>
          <target state="translated">만들기는 <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache&gt;</ph> 에 할당 하는 <ph id="ph2">&lt;xref:System.Windows.UIElement.CacheMode%2A&gt;</ph> 속성의는 <ph id="ph3">&lt;xref:System.Windows.UIElement&gt;</ph> 비디오 메모리에서 비트맵으로 요소 및 해당 하위 트리를 캐시할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.BitmapCache">
          <source>This is useful when you need to animate, translate, or scale a <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> as quickly as possible.</source>
          <target state="translated">애니메이션 효과 줄, 번역 또는 크기를 조정 해야 할 때 유용는 <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> 최대한 빨리 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.BitmapCache">
          <source>This approach enables a tradeoff between performance and visual quality while content is cached.</source>
          <target state="translated">이 방법은 콘텐츠가 캐시 되 고 하는 동안 시각적 품질 및 성능 간의 균형을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.BitmapCache">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCacheBrush&gt;</ph> class to efficiently reuse a cached element.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCacheBrush&gt;</ph> 효율적으로 캐시 된 요소를 다시 사용 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.BitmapCache">
          <source>Set the <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.RenderAtScale%2A&gt;</ph> property to scale the bitmap cache.</source>
          <target state="translated">설정의 <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.RenderAtScale%2A&gt;</ph> 비트맵 캐시 크기를 조정 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.BitmapCache">
          <source>This is useful if an element will be zoomed, and you want the element to render more clearly than it would if the cache were simply generated at the element’s native resolution.</source>
          <target state="translated">요소가 확대/축소 및 캐시 된 요소의 기본 해상도에서 간단히 생성 된 경우 보다 더 명확 하 게 렌더링 하는 요소를 원하는 경우에 유용 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.BitmapCache">
          <source>Set the <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A&gt;</ph> property when the cache displays content that requires pixel-alignment to render correctly, such as ClearType text.</source>
          <target state="translated">설정의 <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A&gt;</ph> 캐시 ClearType 텍스트와 같은 올바르게 렌더링 하려면 픽셀 맞춤을 필요로 하는 콘텐츠를 표시할 때 속성입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.BitmapCache">
          <source>This property is ignored by the <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCacheBrush&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Media3D.Viewport2DVisual3D&gt;</ph> classes.</source>
          <target state="translated">이 속성이 무시 되는 <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCacheBrush&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Media.Media3D.Viewport2DVisual3D&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.BitmapCache">
          <source>Caching a control does not affect mouse-over behavior, so mouse-over hit testing operates as if it the bitmap were a live control.</source>
          <target state="translated">마우스를 위에 동작 영향을 주지 않습니다 컨트롤 캐싱은, 비트맵 것 처럼 작동 위로 마우스 적중 테스트 라이브 제어 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.BitmapCache">
          <source>Cache regeneration occurs only when the structure of the <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> or its subtree changes, or when the <ph id="ph2">&lt;xref:System.Windows.Media.CacheMode&gt;</ph> settings change.</source>
          <target state="translated">캐시의 재생성만 발생 때의 구조는 <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> 또는 해당 하위 트리가 변경 되거나는 <ph id="ph2">&lt;xref:System.Windows.Media.CacheMode&gt;</ph> 설정 변경 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.BitmapCache">
          <source>Setting the <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.RenderAtScale%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Media.BitmapCache.EnableClearType%2A&gt;</ph> properties causes cache regeneration.</source>
          <target state="translated">설정의 <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.RenderAtScale%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Windows.Media.BitmapCache.EnableClearType%2A&gt;</ph> 속성 하면 캐시가 재생성 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.BitmapCache">
          <source>Changes to the parent visual tree of the cached <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph>, such as transforms, scales, opacities, and effects, do not affect the cache.</source>
          <target state="translated">캐시 된 부모 시각적 트리에 변경 <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph>와 같은 변환, 배율, 불투명도, 및 효과 캐시에 영향을 주지 않습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.BitmapCache">
          <source>The cache functions when hardware acceleration is not available.</source>
          <target state="translated">하드웨어 가속을 사용할 수 없을 때 캐시 함수입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.BitmapCache">
          <source>In this case, the bitmap is rendered in software, and the maximum bitmap dimensions are 2048 x 2048.</source>
          <target state="translated">이 경우 비트맵 소프트웨어 렌더링 되 고 최대 비트맵 차원은 2048 x 2048입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.BitmapCache">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.RenderOptions&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.TextOptions&gt;</ph> do not propagate through a cached element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.RenderOptions&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Media.TextOptions&gt;</ph> 캐시 된 요소를 통해 전파 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.BitmapCache">
          <source>You may have to set these options again in child elements below the cache.</source>
          <target state="translated">캐시 아래의 자식 요소에 이러한 옵션을 다시 설정 해야 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.BitmapCache">
          <source>The following XAML shows how to cache a <ph id="ph1">&lt;xref:System.Windows.Controls.Canvas&gt;</ph> element.</source>
          <target state="translated">XAML은 다음 캐시 하는 방법 한 <ph id="ph1">&lt;xref:System.Windows.Controls.Canvas&gt;</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.BitmapCache">
          <source>For the complete code example, see <bpt id="p1">[</bpt>How to: Improve Rendering Performance by Caching an Element<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-improve-rendering-performance-by-caching-an-element.md)</ept>.</source>
          <target state="translated">전체 코드 예제를 보려면 <bpt id="p1">[</bpt>하는 방법: 요소를 캐시 하 여 렌더링 성능을 높이<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-improve-rendering-performance-by-caching-an-element.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.BitmapCache">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.BitmapCache" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.BitmapCache" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.BitmapCache.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.BitmapCache" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.BitmapCache" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.BitmapCache.#ctor(System.Double)">
          <source>A double that scales the bitmap.</source>
          <target state="translated">비트맵 배율을 지정하는 Double 값입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.BitmapCache.#ctor(System.Double)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.BitmapCache" /&gt;</ph> class with the specified scale.</source>
          <target state="translated">지정된 배율을 사용하여 <ph id="ph1">&lt;see cref="T:System.Windows.Media.BitmapCache" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.BitmapCache.#ctor(System.Double)">
          <source>The following XAML shows how to create and assign a <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache&gt;</ph> to a <ph id="ph2">&lt;xref:System.Windows.Controls.Canvas&gt;</ph> element.</source>
          <target state="translated">다음 XAML에서는 만들고 할당 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache&gt;</ph> 에 <ph id="ph2">&lt;xref:System.Windows.Controls.Canvas&gt;</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.BitmapCache.#ctor(System.Double)">
          <source>For the complete code example, see <bpt id="p1">[</bpt>How to: Improve Rendering Performance by Caching an Element<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-improve-rendering-performance-by-caching-an-element.md)</ept>.</source>
          <target state="translated">전체 코드 예제를 보려면 <bpt id="p1">[</bpt>하는 방법: 요소를 캐시 하 여 렌더링 성능을 높이<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/how-to-improve-rendering-performance-by-caching-an-element.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.BitmapCache.Clone">
          <source>Creates a modifiable clone of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.BitmapCache" /&gt;</ph>, making deep copies of the object's values.</source>
          <target state="translated">개체 값의 전체 복사본을 만들어 <ph id="ph1">&lt;see cref="T:System.Windows.Media.BitmapCache" /&gt;</ph>의 수정 가능한 복제본을 만듭니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.BitmapCache.Clone">
          <source>When copying the object's dependency properties, this method copies expressions (which might no longer resolve) but not animations or their current values.</source>
          <target state="translated">개체의 종속성 속성을 복사하는 경우 이 메서드는 더 이상 확인되지 않을 수도 있는 식을 복사하지만 애니메이션 또는 해당 현재 값은 복사하지 않습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.BitmapCache.Clone">
          <source>A modifiable clone of the current object.</source>
          <target state="translated">현재 개체의 수정 가능한 복제본입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.BitmapCache.Clone">
          <source>The cloned object's <ph id="ph1">&lt;see cref="P:System.Windows.Freezable.IsFrozen" /&gt;</ph> property is <ph id="ph2">&lt;see langword="false" /&gt;</ph> even if the source's <ph id="ph3">&lt;see cref="P:System.Windows.Freezable.IsFrozen" /&gt;</ph> property is <ph id="ph4">&lt;see langword="true." /&gt;</ph></source>
          <target state="translated">소스의 <ph id="ph3">&lt;see cref="P:System.Windows.Freezable.IsFrozen" /&gt;</ph> 속성이 <ph id="ph4">&lt;see langword="true." /&gt;</ph>인 경우에도 복제된 개체의 <ph id="ph1">&lt;see cref="P:System.Windows.Freezable.IsFrozen" /&gt;</ph> 속성은 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.BitmapCache.CloneCurrentValue">
          <source>Creates a modifiable clone (deep copy) of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.BitmapCache" /&gt;</ph> using its current values.</source>
          <target state="translated">현재 값을 사용하여 <ph id="ph1">&lt;see cref="T:System.Windows.Media.BitmapCache" /&gt;</ph>의 수정 가능한 복제본(전체 복사본)을 만듭니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.BitmapCache.CloneCurrentValue">
          <source>A modifiable clone of the current object.</source>
          <target state="translated">현재 개체의 수정 가능한 복제본입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.BitmapCache.CloneCurrentValue">
          <source>The cloned object's <ph id="ph1">&lt;see cref="P:System.Windows.Freezable.IsFrozen" /&gt;</ph> property is <ph id="ph2">&lt;see langword="false" /&gt;</ph> even if the source's <ph id="ph3">&lt;see cref="P:System.Windows.Freezable.IsFrozen" /&gt;</ph> property is <ph id="ph4">&lt;see langword="true." /&gt;</ph></source>
          <target state="translated">소스의 <ph id="ph3">&lt;see cref="P:System.Windows.Freezable.IsFrozen" /&gt;</ph> 속성이 <ph id="ph4">&lt;see langword="true." /&gt;</ph>인 경우에도 복제된 개체의 <ph id="ph1">&lt;see cref="P:System.Windows.Freezable.IsFrozen" /&gt;</ph> 속성은 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.BitmapCache.EnableClearType">
          <source>Gets or sets a value that indicates whether the bitmap is rendered with ClearType activated.</source>
          <target state="translated">비트맵이 ClearType을 활성화한 상태로 렌더링되는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.EnableClearType">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if ClearType is active; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">ClearType이 활성 상태이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.EnableClearType">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.EnableClearType">
          <source>Set the <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.EnableClearType%2A&gt;</ph> property to allow ClearType text to be rendered in the cache.</source>
          <target state="translated">설정의 <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.EnableClearType%2A&gt;</ph> 속성 ClearType 텍스트를 캐시에 렌더링할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.EnableClearType">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.EnableClearType%2A&gt;</ph> property is <ph id="ph2">`true`</ph>, your application must render all of its ClearType text on an opaque background.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.EnableClearType%2A&gt;</ph> 속성은 <ph id="ph2">`true`</ph>, 응용 프로그램은 불투명 배경에서 ClearType 텍스트의 모든 렌더링 해야 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.EnableClearType">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.EnableClearType%2A&gt;</ph> property is <ph id="ph2">`false`</ph>, text in the cache is rendered with grayscale antialiasing.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.EnableClearType%2A&gt;</ph> 속성은 <ph id="ph2">`false`</ph>, 회색조 앨리어싱 캐시에 텍스트를 렌더링 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.EnableClearType">
          <source>ClearType text requires correct pixel alignment of rendered characters, so you should set the <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">ClearType 텍스트 사용 하려면 올바른 픽셀 맞춤 렌더링 된 문자의 설정 해야 하므로 <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A&gt;</ph> 속성을 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.EnableClearType">
          <source>If you do not set this property, the content may not blend correctly.</source>
          <target state="translated">이 속성을 설정 하지 않는 경우 콘텐츠를 제대로 혼합할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.EnableClearType">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.EnableClearType%2A&gt;</ph> property when you know the cache is rendered on pixel boundaries, so it is safe to cache ClearType text.</source>
          <target state="translated">사용 하 여 <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.EnableClearType%2A&gt;</ph> ClearType 텍스트 캐시를 안전 하 게 되므로 픽셀 경계에 캐시를 알고 있는 경우 속성은 렌더링 됩니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.EnableClearType">
          <source>This situation occurs commonly in text-scrolling scenarios.</source>
          <target state="translated">이러한 경우 텍스트 스크롤 시나리오에서 일반적으로 발생 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="F:System.Windows.Media.BitmapCache.EnableClearTypeProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Media.BitmapCache.EnableClearType" /&gt;</ph> dependency property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Media.BitmapCache.EnableClearType" /&gt;</ph> 종속성 속성을 식별합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.BitmapCache.RenderAtScale">
          <source>Gets or sets a value that indicates the scale that is applied to the bitmap.</source>
          <target state="translated">비트맵에 적용되는 배율을 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.RenderAtScale">
          <source>The scale that is applied to the bitmap.</source>
          <target state="translated">비트맵에 적용되는 배율입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.RenderAtScale">
          <source>The default is 1.</source>
          <target state="translated">기본값은 1입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.RenderAtScale">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.RenderAtScale%2A&gt;</ph> property to render the <ph id="ph2">&lt;xref:System.Windows.Media.BitmapCache&gt;</ph> at a multiple of the normal bitmap size.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.RenderAtScale%2A&gt;</ph> 렌더링 하는 속성의 <ph id="ph2">&lt;xref:System.Windows.Media.BitmapCache&gt;</ph> 에 일반 비트맵 크기의 배수입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.RenderAtScale">
          <source>The normal size is determined by the local size of the element.</source>
          <target state="translated">보통 크기로 요소의 로컬 크기에 따라 결정 됩니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.RenderAtScale">
          <source>Values greater than 1 increase the resolution of the bitmap relative to the native resolution of the element, and values less than 1 decrease the resolution.</source>
          <target state="translated">요소의 기본 해상도 기준으로 비트맵의 해상도 증가 하는 1 보다 큰 값 및 값이 1 보다 작은 해상도 줄입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.RenderAtScale">
          <source>For example, if the <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.RenderAtScale%2A&gt;</ph> property is set to 2.0, and you apply a scale transform that enlarges the content by a factor of 2, the content will have the same visual quality as the same content with <ph id="ph2">&lt;xref:System.Windows.Media.BitmapCache.RenderAtScale%2A&gt;</ph> set to 1.0 and a transform scale of 1.</source>
          <target state="translated">예를 들어 경우는 <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.RenderAtScale%2A&gt;</ph> 2.0, 속성 및 2 배 콘텐츠를 확대 하는 크기 조정 변환을 적용할 콘텐츠는와 같은 내용으로 동일한 시각적 품질 <ph id="ph2">&lt;xref:System.Windows.Media.BitmapCache.RenderAtScale%2A&gt;</ph> 1.0 및 변환 배율을 1로 설정 합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.RenderAtScale">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.RenderAtScale%2A&gt;</ph> is set to 0, no bitmap is rendered.</source>
          <target state="translated">때 <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.RenderAtScale%2A&gt;</ph> 설정 된 비트맵이 없습니다 0으로 렌더링 됩니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.RenderAtScale">
          <source>Negative values are clamped to 0.</source>
          <target state="translated">음수 값은 0으로 고정 됩니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.RenderAtScale">
          <source>If you change this value, the cache is regenerated at the appropriate new resolution.</source>
          <target state="translated">이 값을 변경 하는 경우 적절 한 새 해상도에서 캐시 다시 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.RenderAtScale">
          <source>The following images show how the same content appears for different values of the <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.RenderAtScale%2A&gt;</ph> property.</source>
          <target state="translated">다음 그림은의 여러 다른 값에 대해 동일한 콘텐츠 표시 하는 방법을 보여는 <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.RenderAtScale%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.RenderAtScale">
          <source><bpt id="p1">**</bpt>RenderAtScale = 1<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>RenderAtScale = 1<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.RenderAtScale">
          <source><bpt id="p1">![</bpt>RenderAtScale &amp;#61; 1<ept id="p1">]</ept><bpt id="p2">(~/add/media/ndp-scale-1.png "</bpt>RenderAtScale = 1<ept id="p2">")</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>RenderAtScale &amp;#61; 1<ept id="p1">]</ept><bpt id="p2">(~/add/media/ndp-scale-1.png "</bpt>RenderAtScale = 1<ept id="p2">")</ept></target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.RenderAtScale">
          <source><bpt id="p1">**</bpt>RenderAtScale = 0.5<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>RenderAtScale = 0.5<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.RenderAtScale">
          <source><bpt id="p1">![</bpt>RenderAtScale &amp;#61; 0.5<ept id="p1">]</ept><bpt id="p2">(~/add/media/ndp-scale05.png "</bpt>RenderAtScale = 0.5<ept id="p2">")</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>RenderAtScale &amp;#61; 0.5<ept id="p1">]</ept><bpt id="p2">(~/add/media/ndp-scale05.png "</bpt>RenderAtScale = 0.5<ept id="p2">")</ept></target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.RenderAtScale">
          <source><bpt id="p1">**</bpt>RenderAtScale = 0.2<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>RenderAtScale = 0.2<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.RenderAtScale">
          <source><bpt id="p1">![</bpt>RenderAtScale &amp;#61; 0.2<ept id="p1">]</ept><bpt id="p2">(~/add/media/ndp-scale02.png "</bpt>RenderAtScale = 0.2<ept id="p2">")</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>RenderAtScale &amp;#61; 0.2<ept id="p1">]</ept><bpt id="p2">(~/add/media/ndp-scale02.png "</bpt>RenderAtScale 0.2 =<ept id="p2">")</ept></target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.RenderAtScale">
          <source>The following image shows a zoom transform that is applied to an ancestor of the cached element.</source>
          <target state="translated">다음 그림에는 캐시 된 요소의 상위 항목에 적용 되는 확대/축소 변환을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.RenderAtScale">
          <source>When the zoom is set to 1 and <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.RenderAtScale%2A&gt;</ph> is set to 1, the image quality is almost the same as when <ph id="ph2">&lt;xref:System.Windows.Media.BitmapCache.RenderAtScale%2A&gt;</ph> is set to 2.</source>
          <target state="translated">확대/축소를 1로 설정 된 경우 및 <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.RenderAtScale%2A&gt;</ph> 설정 된 경우와 거의 동일 이미지 품질은을 1로 <ph id="ph2">&lt;xref:System.Windows.Media.BitmapCache.RenderAtScale%2A&gt;</ph> 2로 설정 합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.RenderAtScale">
          <source>But when zoom is greater than 1, setting <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.RenderAtScale%2A&gt;</ph> to 2 will have better image quality.</source>
          <target state="translated">확대/축소 설정 1 보다 큰 경우 하지만 <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.RenderAtScale%2A&gt;</ph> 2에는 이미지 품질이 향상 합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.RenderAtScale">
          <source><bpt id="p1">**</bpt>RenderAtScale = 1.0<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>RenderAtScale = 1.0<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.RenderAtScale">
          <source><bpt id="p1">![</bpt>RenderAtScale &amp;#61; 1.0<ept id="p1">]</ept><bpt id="p2">(~/add/media/ndp-scale-10.png "</bpt>RenderAtScale = 1.0<ept id="p2">")</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>RenderAtScale &amp;#61; 1.0<ept id="p1">]</ept><bpt id="p2">(~/add/media/ndp-scale-10.png "</bpt>RenderAtScale = 1.0<ept id="p2">")</ept></target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.RenderAtScale">
          <source><bpt id="p1">**</bpt>RenderAtScale = 2.0<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>RenderAtScale = 2.0<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.RenderAtScale">
          <source><bpt id="p1">![</bpt>RenderAtScale &amp;#61; 2.0<ept id="p1">]</ept><bpt id="p2">(~/add/media/ndp-scale-20.png "</bpt>RenderAtScale = 2.0<ept id="p2">")</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>RenderAtScale &amp;#61; 2.0<ept id="p1">]</ept><bpt id="p2">(~/add/media/ndp-scale-20.png "</bpt>RenderAtScale = 2.0<ept id="p2">")</ept></target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="F:System.Windows.Media.BitmapCache.RenderAtScaleProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Media.BitmapCache.RenderAtScale" /&gt;</ph> dependency property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Media.BitmapCache.RenderAtScale" /&gt;</ph> 종속성 속성을 식별합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.BitmapCache.SnapsToDevicePixels">
          <source>Gets or sets a value that indicates whether the bitmap is rendered with pixel snapping.</source>
          <target state="translated">비트맵이 픽셀 맞추기를 사용하여 렌더링되는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.SnapsToDevicePixels">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if pixel snapping is active; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">픽셀 맞추기가 활성화되어 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.SnapsToDevicePixels">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.SnapsToDevicePixels">
          <source>Set the <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A&gt;</ph> property when the cache displays content that requires pixel-alignment to render correctly.</source>
          <target state="translated">설정의 <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A&gt;</ph> 캐시 올바르게 렌더링 픽셀 맞춤을 필요로 하는 콘텐츠를 표시할 때 속성입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.SnapsToDevicePixels">
          <source>This is the case for ClearType text.</source>
          <target state="translated">ClearType 텍스트의 경우 이것이입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.SnapsToDevicePixels">
          <source>If you set the <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.EnableClearType%2A&gt;</ph> property to <ph id="ph2">`true`</ph>, consider setting <ph id="ph3">&lt;xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A&gt;</ph> to <ph id="ph4">`true`</ph> to ensure proper rendering.</source>
          <target state="translated">설정 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.EnableClearType%2A&gt;</ph> 속성을 <ph id="ph2">`true`</ph>, 설정할 <ph id="ph3">&lt;xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A&gt;</ph> 를 <ph id="ph4">`true`</ph> 적절 한 렌더링 되도록 합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.SnapsToDevicePixels">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph>, you can move and scale the cached element by a fraction of a pixel, and bilinear filtering is applied.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A&gt;</ph> 속성이 <ph id="ph2">`false`</ph>, 이동 하 고 픽셀의 분수 하 여 캐시 된 요소를 확장할 수 있습니다 및 쌍선형 필터링이 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.SnapsToDevicePixels">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, the bitmap cache is aligned with pixel boundaries of the destination.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A&gt;</ph> 속성이 <ph id="ph2">`true`</ph>, 비트맵 캐시 대상의 픽셀 경계에 맞춰집니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.SnapsToDevicePixels">
          <source>If you move or scale the cached element by a fraction of a pixel, the bitmap snaps to the pixel grid.</source>
          <target state="translated">이동 하거나 픽셀의 소수점 하 여 캐시 된 요소를 확장할 경우 비트맵 픽셀 모눈에 맞춥니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.SnapsToDevicePixels">
          <source>In this case, the top-left corner of the bitmap is rounded up and snapped to the pixel grid, but the bottom-right corner is on a fractional pixel boundary.</source>
          <target state="translated">이 경우 비트맵의 왼쪽 위 모퉁이 반올림 하 고 픽셀 모눈에 맞춤은 있지만 오른쪽 아래 모서리에 소수 픽셀 경계 있습니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.BitmapCache.SnapsToDevicePixels">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A&gt;</ph> property is ignored by <ph id="ph2">&lt;xref:System.Windows.Media.BitmapCacheBrush&gt;</ph> and when used with a <ph id="ph3">&lt;xref:System.Windows.Media.Media3D.Viewport2DVisual3D&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A&gt;</ph> 속성이 무시 됩니다 <ph id="ph2">&lt;xref:System.Windows.Media.BitmapCacheBrush&gt;</ph> 함께 사용할 경우 한 <ph id="ph3">&lt;xref:System.Windows.Media.Media3D.Viewport2DVisual3D&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="F:System.Windows.Media.BitmapCache.SnapsToDevicePixelsProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Media.BitmapCache.SnapsToDevicePixels" /&gt;</ph> dependency property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Media.BitmapCache.SnapsToDevicePixels" /&gt;</ph> 종속성 속성을 식별합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>