<Type Name="StreamGeometryContext" FullName="System.Windows.Media.StreamGeometryContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a6f5cb4bb57ba2bec96f712ec8278bf9a384b78d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30669277" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class StreamGeometryContext : System.Windows.Threading.DispatcherObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit StreamGeometryContext extends System.Windows.Threading.DispatcherObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.StreamGeometryContext" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class StreamGeometryContext&#xA;Inherits DispatcherObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class StreamGeometryContext abstract : System::Windows::Threading::DispatcherObject, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Threading.DispatcherObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="a45f6-101">그리기 명령을 사용하여 기하 도형을 설명합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a45f6-101">Describes a geometry using drawing commands.</span>
      </span>
      <span data-ttu-id="a45f6-102">이 클래스는 <see cref="T:System.Windows.Media.StreamGeometry" /> 클래스와 함께 데이터 바인딩, 애니메이션 또는 수정을 지원하지 않는 간단한 도형을 만드는 데 사용됩니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a45f6-102">This class is used with the <see cref="T:System.Windows.Media.StreamGeometry" /> class to create a lightweight geometry that does not support data binding, animation, or modification.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
    <exception cref="T:System.InvalidOperationException">
      <span data-ttu-id="a45f6-103">
        <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> 메서드를 호출하여 그림을 시작하지 않고 세그먼트를 추가하려고 한 경우</span>
      <span class="sxs-lookup">
        <span data-stu-id="a45f6-103">An attempt was made to add a segment without starting a figure by calling the <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> method.</span>
      </span>
    </exception>
    <altmember cref="T:System.Windows.Media.StreamGeometry" />
    <altmember cref="T:System.Windows.Media.PathGeometry" />
  </Docs>
  <Members>
    <Member MemberName="ArcTo">
      <MemberSignature Language="C#" Value="public abstract void ArcTo (System.Windows.Point point, System.Windows.Size size, double rotationAngle, bool isLargeArc, System.Windows.Media.SweepDirection sweepDirection, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ArcTo(valuetype System.Windows.Point point, valuetype System.Windows.Size size, float64 rotationAngle, bool isLargeArc, valuetype System.Windows.Media.SweepDirection sweepDirection, bool isStroked, bool isSmoothJoin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.ArcTo(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ArcTo(System::Windows::Point point, System::Windows::Size size, double rotationAngle, bool isLargeArc, System::Windows::Media::SweepDirection sweepDirection, bool isStroked, bool isSmoothJoin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="size" Type="System.Windows.Size" />
        <Parameter Name="rotationAngle" Type="System.Double" />
        <Parameter Name="isLargeArc" Type="System.Boolean" />
        <Parameter Name="sweepDirection" Type="System.Windows.Media.SweepDirection" />
        <Parameter Name="isStroked" Type="System.Boolean" />
        <Parameter Name="isSmoothJoin" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="a45f6-104">호의 끝에 대한 대상 점입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a45f6-104">The destination point for the end of the arc.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="a45f6-105">반지름은 각을 그리는 데 사용되는 타원의 너비와 높이의 절반입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a45f6-105">The radii (half the width and half the height) of an oval whose perimeter is used to draw the angle.</span>
          </span>
          <span data-ttu-id="a45f6-106">타원이 모든 방향에서 매우 둥글면 호 또한 둥근 모양이 되고, 타원이 직선에 가까우면 호 또한 직선에 가까운 모양이 됩니다. 예를 들어, 너비와 높이가 매우 클 경우 매우 큰 타원이 그려지고 각의 곡률은 낮습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a45f6-106">If the oval is very rounded in all directions, the arc will be rounded, if it is nearly flat, so will the arc. For example, a very large width and height would represent a very large oval, which would give a slight curvature for the angle.</span>
          </span>
        </param>
        <param name="rotationAngle">
          <span data-ttu-id="a45f6-107">곡선을 지정하는 타원의 회전 각도입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a45f6-107">The rotation angle of the oval that specifies the curve.</span>
          </span>
          <span data-ttu-id="a45f6-108">이 매개 변수를 사용하여 호의 곡률을 회전할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a45f6-108">The curvature of the arc can be rotated with this parameter.</span>
          </span>
        </param>
        <param name="isLargeArc">
          <span data-ttu-id="a45f6-109">180도보다 큰 호를 그리려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a45f6-109">
              <see langword="true" /> to draw the arc greater than 180 degrees; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="sweepDirection">
          <span data-ttu-id="a45f6-110">호를 <see cref="F:System.Windows.Media.SweepDirection.Clockwise" /> 또는 <see cref="F:System.Windows.Media.SweepDirection.Counterclockwise" /> 방향으로 그리는지 여부를 나타내는 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a45f6-110">A value that indicates whether the arc is drawn in the <see cref="F:System.Windows.Media.SweepDirection.Clockwise" /> or <see cref="F:System.Windows.Media.SweepDirection.Counterclockwise" /> direction.</span>
          </span>
        </param>
        <param name="isStroked">
          <span data-ttu-id="a45f6-111">세그먼트를 렌더링하기 위해 <see cref="T:System.Windows.Media.Pen" />을 사용할 때 세그먼트에 스트로크를 설정하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a45f6-111">
              <see langword="true" /> to make the segment stroked when a <see cref="T:System.Windows.Media.Pen" /> is used to render the segment; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="isSmoothJoin">
          <span data-ttu-id="a45f6-112">
            <see cref="T:System.Windows.Media.Pen" />을 사용하여 스트로크를 설정할 때 이 세그먼트와 이전 세그먼트 간의 연결을 모퉁이로 처리하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a45f6-112">
              <see langword="true" /> to treat the join between this segment and the previous segment as a corner when stroked with a <see cref="T:System.Windows.Media.Pen" />; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a45f6-113">지정한 점에 호를 그립니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a45f6-113">Draws an arc to the specified point.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a45f6-114">이 메서드는 기준으로 이전 세그먼트의 끝점을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="a45f6-114">This method uses the end point of the previous segment as its starting point.</span></span> <span data-ttu-id="a45f6-115">지정 된 점을 사용 하 여 도형에 있는 첫 번째 세그먼트 인 경우는 <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> 시작 점으로 메서드.</span><span class="sxs-lookup"><span data-stu-id="a45f6-115">If this is the first segment in a figure, it uses the point specified by the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> method as its start point.</span></span>  
  
 <span data-ttu-id="a45f6-116">A <xref:System.Windows.Media.StreamGeometry> 포함 된 경우 직렬화 할 수 없습니다는 <xref:System.Windows.Media.Transform> 또는 비 스트로크 또는 채워지지 않은 세그먼트입니다.</span><span class="sxs-lookup"><span data-stu-id="a45f6-116">A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a45f6-117">다음 예제에서는를 사용 하 여 호를 그릴는 <xref:System.Windows.Media.StreamGeometryContext.ArcTo%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a45f6-117">The following example shows how to draw an arc using the <xref:System.Windows.Media.StreamGeometryContext.ArcTo%2A> method.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_procedural_snip#StreamGeometryArcToExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/CSharp/StreamGeometryArcToExample.cs#streamgeometryarctoexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryArcToExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/visualbasic/streamgeometryarctoexample.vb#streamgeometryarctoexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.BezierTo(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.QuadraticBezierTo(System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="BeginFigure">
      <MemberSignature Language="C#" Value="public abstract void BeginFigure (System.Windows.Point startPoint, bool isFilled, bool isClosed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginFigure(valuetype System.Windows.Point startPoint, bool isFilled, bool isClosed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub BeginFigure (startPoint As Point, isFilled As Boolean, isClosed As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void BeginFigure(System::Windows::Point startPoint, bool isFilled, bool isClosed);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPoint" Type="System.Windows.Point" />
        <Parameter Name="isFilled" Type="System.Boolean" />
        <Parameter Name="isClosed" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startPoint">
          <span data-ttu-id="a45f6-118">그림을 시작할 <see cref="T:System.Windows.Point" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a45f6-118">The <see cref="T:System.Windows.Point" /> where the figure begins.</span>
          </span>
        </param>
        <param name="isFilled">
          <span data-ttu-id="a45f6-119">이 그림에 포함된 영역을 적중 테스트, 렌더링 및 클리핑에 사용하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a45f6-119">
              <see langword="true" /> to use the area contained by this figure for hit-testing, rendering, and clipping; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="isClosed">
          <span data-ttu-id="a45f6-120">그림을 닫으려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a45f6-120">
              <see langword="true" /> to close the figure; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a45f6-121">예를 들어 두 개의 연결선을 그리는데 <c>isClosed</c>를 <see langword="false" />로 설정하면 그림이 두 선으로만 이루어지지만, <c>isClosed</c>를 <see langword="true" />로 설정하면 두 선이 닫혀 삼각형이 생성됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a45f6-121">For example, if two connecting lines are drawn, and <c>isClosed</c> is set to <see langword="false" />, the drawing will just be of two lines but if <c>isClosed</c> is set to <see langword="true" />, the two lines will be closed to create a triangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a45f6-122">새 그림에 대한 시작 지점을 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a45f6-122">Specifies the starting point for a new figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a45f6-123">이 메서드를 여러 번 호출 하 여이 내에서 여러 그림 (자체 포함 된 기 하 도형을)를 만들 수 있습니다 <xref:System.Windows.Media.StreamGeometryContext>합니다.</span><span class="sxs-lookup"><span data-stu-id="a45f6-123">By calling this method multiple times, you can create multiple figures (self-contained geometric shapes) within this <xref:System.Windows.Media.StreamGeometryContext>.</span></span>  
  
 <span data-ttu-id="a45f6-124">A <xref:System.Windows.Media.StreamGeometry> 포함 된 경우 직렬화 할 수 없습니다는 <xref:System.Windows.Media.Transform> 또는 비 스트로크 또는 채워지지 않은 세그먼트입니다.</span><span class="sxs-lookup"><span data-stu-id="a45f6-124">A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BezierTo">
      <MemberSignature Language="C#" Value="public abstract void BezierTo (System.Windows.Point point1, System.Windows.Point point2, System.Windows.Point point3, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BezierTo(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2, valuetype System.Windows.Point point3, bool isStroked, bool isSmoothJoin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.BezierTo(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub BezierTo (point1 As Point, point2 As Point, point3 As Point, isStroked As Boolean, isSmoothJoin As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void BezierTo(System::Windows::Point point1, System::Windows::Point point2, System::Windows::Point point3, bool isStroked, bool isSmoothJoin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
        <Parameter Name="point3" Type="System.Windows.Point" />
        <Parameter Name="isStroked" Type="System.Boolean" />
        <Parameter Name="isSmoothJoin" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point1">
          <span data-ttu-id="a45f6-125">곡선의 모양을 지정하는 데 사용되는 첫 번째 제어점입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a45f6-125">The first control point used to specify the shape of the curve.</span>
          </span>
        </param>
        <param name="point2">
          <span data-ttu-id="a45f6-126">곡선의 모양을 지정하는 데 사용되는 두 번째 제어점입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a45f6-126">The second control point used to specify the shape of the curve.</span>
          </span>
        </param>
        <param name="point3">
          <span data-ttu-id="a45f6-127">곡선의 끝에 대한 대상 점입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a45f6-127">The destination point for the end of the curve.</span>
          </span>
        </param>
        <param name="isStroked">
          <span data-ttu-id="a45f6-128">세그먼트를 렌더링하기 위해 <see cref="T:System.Windows.Media.Pen" />을 사용할 때 세그먼트에 스트로크를 설정하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a45f6-128">
              <see langword="true" /> to make the segment stroked when a <see cref="T:System.Windows.Media.Pen" /> is used to render the segment; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="isSmoothJoin">
          <span data-ttu-id="a45f6-129">
            <see cref="T:System.Windows.Media.Pen" />을 사용하여 스트로크를 설정할 때 이 세그먼트와 이전 세그먼트 간의 연결을 모퉁이로 처리하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a45f6-129">
              <see langword="true" /> to treat the join between this segment and the previous segment as a corner when stroked with a <see cref="T:System.Windows.Media.Pen" />; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a45f6-130">지정한 점에 3차원 곡선을 그립니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a45f6-130">Draws a Bezier curve to the specified point.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a45f6-131">입방 형 3 차원 곡선을 시작점, 끝점 및 두 개의 제어점에 의해 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a45f6-131">A cubic Bezier curve is defined by a start point, end point, and two control points.</span></span> <span data-ttu-id="a45f6-132">첫 번째 제어점 곡률은 세그먼트의 첫 번째 부분을 결정 하 고 두 번째 제어점 세그먼트의 두 번째 절반 곡률을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="a45f6-132">The first control point determines the curvature of the first half of the segment, and the second control point determines the curvature of the second half of the segment.</span></span>  
  
 <span data-ttu-id="a45f6-133">이 메서드는 기준으로 이전 세그먼트의 끝점을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="a45f6-133">This method uses the end point of the previous segment as its starting point.</span></span> <span data-ttu-id="a45f6-134">지정 된 점을 사용 하 여 도형에 있는 첫 번째 세그먼트 인 경우는 <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> 시작 점으로 메서드.</span><span class="sxs-lookup"><span data-stu-id="a45f6-134">If this is the first segment in a figure, it uses the point specified by the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> method as its start point.</span></span>  
  
 <span data-ttu-id="a45f6-135">A <xref:System.Windows.Media.StreamGeometry> 포함 된 경우 직렬화 할 수 없습니다는 <xref:System.Windows.Media.Transform> 또는 비 스트로크 또는 채워지지 않은 세그먼트입니다.</span><span class="sxs-lookup"><span data-stu-id="a45f6-135">A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a45f6-136">사용 하 여 베 지 어 곡선을 그리는 방법을 보여 주는 다음 예제는 <xref:System.Windows.Media.StreamGeometryContext.BezierTo%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a45f6-136">The following example shows how to draw a Bezier curve using the <xref:System.Windows.Media.StreamGeometryContext.BezierTo%2A> method.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_procedural_snip#StreamGeometryBezierToExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/CSharp/StreamGeometryBezierToExample.cs#streamgeometrybeziertoexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryBezierToExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/visualbasic/streamgeometrybeziertoexample.vb#streamgeometrybeziertoexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a45f6-137">
            <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> 메서드를 호출하여 그림을 시작하지 않고 세그먼트를 추가하려고 한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a45f6-137">An attempt was made to add a segment without starting a figure by calling the <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> method.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.ArcTo(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.QuadraticBezierTo(System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a45f6-138">렌더링할 수 있도록 이 컨텍스트를 닫고 해당 내용을 플러시합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a45f6-138">Closes this context and flushes its content so that it can be rendered.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a45f6-139">를 닫은 후에 컨텍스트를 수정할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="a45f6-139">Once closed, the context cannot be modified.</span></span> <span data-ttu-id="a45f6-140">해당 콘텐츠를 렌더링할 수 전에 컨텍스트를 닫아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="a45f6-140">The context must be closed before its content can be rendered.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="a45f6-141">이 컨텍스트가 이미 닫혔거나 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a45f6-141">This context has already been closed or disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LineTo">
      <MemberSignature Language="C#" Value="public abstract void LineTo (System.Windows.Point point, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LineTo(valuetype System.Windows.Point point, bool isStroked, bool isSmoothJoin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.LineTo(System.Windows.Point,System.Boolean,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void LineTo(System::Windows::Point point, bool isStroked, bool isSmoothJoin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="isStroked" Type="System.Boolean" />
        <Parameter Name="isSmoothJoin" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="a45f6-142">선의 끝에 대한 대상 점입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a45f6-142">The destination point for the end of the line.</span>
          </span>
        </param>
        <param name="isStroked">
          <span data-ttu-id="a45f6-143">세그먼트를 렌더링하기 위해 <see cref="T:System.Windows.Media.Pen" />을 사용할 때 세그먼트에 스트로크를 설정하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a45f6-143">
              <see langword="true" /> to make the segment stroked when a <see cref="T:System.Windows.Media.Pen" /> is used to render the segment; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="isSmoothJoin">
          <span data-ttu-id="a45f6-144">
            <see cref="T:System.Windows.Media.Pen" />을 사용하여 스트로크를 설정할 때 이 세그먼트와 이전 세그먼트 간의 연결을 모퉁이로 처리하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a45f6-144">
              <see langword="true" /> to treat the join between this segment and the previous segment as a corner when stroked with a <see cref="T:System.Windows.Media.Pen" />; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a45f6-145">지정한 <see cref="T:System.Windows.Point" />에 직선을 그립니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a45f6-145">Draws a straight line to the specified <see cref="T:System.Windows.Point" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a45f6-146">이 메서드는 기준으로 이전 세그먼트의 끝점을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="a45f6-146">This method uses the end point of the previous segment as its starting point.</span></span> <span data-ttu-id="a45f6-147">지정 된 점을 사용 하 여 도형에 있는 첫 번째 세그먼트 인 경우는 <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> 시작 점으로 메서드.</span><span class="sxs-lookup"><span data-stu-id="a45f6-147">If this is the first segment in a figure, it uses the point specified by the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> method as its start point.</span></span>  
  
 <span data-ttu-id="a45f6-148">A <xref:System.Windows.Media.StreamGeometry> 포함 된 경우 직렬화 할 수 없습니다는 <xref:System.Windows.Media.Transform> 또는 비 스트로크 또는 채워지지 않은 세그먼트입니다.</span><span class="sxs-lookup"><span data-stu-id="a45f6-148">A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a45f6-149">사용 하 여 삼각형을 그리는 방법을 보여 주는 다음 예제는 <xref:System.Windows.Media.StreamGeometryContext.LineTo%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a45f6-149">The following example shows how to draw a triangle using the <xref:System.Windows.Media.StreamGeometryContext.LineTo%2A> method.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_procedural_snip#StreamGeometryTriangleExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/CSharp/StreamGeometryTriangleExample.cs#streamgeometrytriangleexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryTriangleExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/visualbasic/streamgeometrytriangleexample.vb#streamgeometrytriangleexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a45f6-150">
            <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> 메서드를 호출하여 그림을 시작하지 않고 세그먼트를 추가하려고 한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a45f6-150">An attempt was made to add a segment without starting a figure by calling the <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> method.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyLineTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PolyBezierTo">
      <MemberSignature Language="C#" Value="public abstract void PolyBezierTo (System.Collections.Generic.IList&lt;System.Windows.Point&gt; points, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PolyBezierTo(class System.Collections.Generic.IList`1&lt;valuetype System.Windows.Point&gt; points, bool isStroked, bool isSmoothJoin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.PolyBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub PolyBezierTo (points As IList(Of Point), isStroked As Boolean, isSmoothJoin As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void PolyBezierTo(System::Collections::Generic::IList&lt;System::Windows::Point&gt; ^ points, bool isStroked, bool isSmoothJoin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Collections.Generic.IList&lt;System.Windows.Point&gt;" />
        <Parameter Name="isStroked" Type="System.Boolean" />
        <Parameter Name="isSmoothJoin" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="a45f6-151">하나 이상의 3차원 곡선에 대한 제어점과 대상 점을 지정하는 점의 목록입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a45f6-151">The list of points that specify control points and destination points for one or more Bezier curves.</span>
          </span>
          <span data-ttu-id="a45f6-152">이 목록의 점 수는 3의 배수여야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a45f6-152">The number of points in this list should be a multiple of three.</span>
          </span>
        </param>
        <param name="isStroked">
          <span data-ttu-id="a45f6-153">세그먼트를 렌더링하기 위해 <see cref="T:System.Windows.Media.Pen" />을 사용할 때 세그먼트에 스트로크를 설정하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a45f6-153">
              <see langword="true" /> to make the segment stroked when a <see cref="T:System.Windows.Media.Pen" /> is used to render the segment; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="isSmoothJoin">
          <span data-ttu-id="a45f6-154">
            <see cref="T:System.Windows.Media.Pen" />을 사용하여 스트로크를 설정할 때 이 세그먼트와 이전 세그먼트 간의 연결을 모퉁이로 처리하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a45f6-154">
              <see langword="true" /> to treat the join between this segment and the previous segment as a corner when stroked with a <see cref="T:System.Windows.Media.Pen" />; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a45f6-155">하나 이상의 연결된 3차원 곡선을 그립니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a45f6-155">Draws one or more connected Bezier curves.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a45f6-156">첫 번째 지점 `points` 첫 번째 제어점 지정 두 번째 제어점을 지정, 세 번째 점과 끝점을 지정 하 고, 다음 곡선의 첫째 제어점 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="a45f6-156">The first point in `points` specifies the first control point, the next specifies the second control point, the third point specifies the end point, the next point specifies the first control point of the next curve, and so on.</span></span>  
  
 <span data-ttu-id="a45f6-157">이 메서드는 기준으로 이전 세그먼트의 끝점을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="a45f6-157">This method uses the end point of the previous segment as its starting point.</span></span> <span data-ttu-id="a45f6-158">지정 된 점을 사용 하 여 도형에 있는 첫 번째 세그먼트 인 경우는 <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> 시작 점으로 메서드.</span><span class="sxs-lookup"><span data-stu-id="a45f6-158">If this is the first segment in a figure, it uses the point specified by the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> method as its start point.</span></span>  
  
 <span data-ttu-id="a45f6-159">A <xref:System.Windows.Media.StreamGeometry> 포함 된 경우 직렬화 할 수 없습니다는 <xref:System.Windows.Media.Transform> 또는 비 스트로크 또는 채워지지 않은 세그먼트입니다.</span><span class="sxs-lookup"><span data-stu-id="a45f6-159">A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a45f6-160">사용 하 여 연결 된 여러 베 지 어 곡선을 그리는 방법을 보여 주는 다음 예제는 <xref:System.Windows.Media.StreamGeometryContext.PolyBezierTo%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a45f6-160">The following example shows how to draw multiple connected Bezier curves using the <xref:System.Windows.Media.StreamGeometryContext.PolyBezierTo%2A> method.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_procedural_snip#StreamGeometryPolyBezierToExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/CSharp/StreamGeometryPolyBezierToExample.cs#streamgeometrypolybeziertoexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryPolyBezierToExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/visualbasic/streamgeometrypolybeziertoexample.vb#streamgeometrypolybeziertoexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a45f6-161">
            <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> 메서드를 호출하여 그림을 시작하지 않고 세그먼트를 추가하려고 한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a45f6-161">An attempt was made to add a segment without starting a figure by calling the <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> method.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.ArcTo(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.BezierTo(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.QuadraticBezierTo(System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PolyLineTo">
      <MemberSignature Language="C#" Value="public abstract void PolyLineTo (System.Collections.Generic.IList&lt;System.Windows.Point&gt; points, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PolyLineTo(class System.Collections.Generic.IList`1&lt;valuetype System.Windows.Point&gt; points, bool isStroked, bool isSmoothJoin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.PolyLineTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub PolyLineTo (points As IList(Of Point), isStroked As Boolean, isSmoothJoin As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void PolyLineTo(System::Collections::Generic::IList&lt;System::Windows::Point&gt; ^ points, bool isStroked, bool isSmoothJoin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Collections.Generic.IList&lt;System.Windows.Point&gt;" />
        <Parameter Name="isStroked" Type="System.Boolean" />
        <Parameter Name="isSmoothJoin" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="a45f6-162">연결된 하나 이상의 직선에 대한 대상 점을 지정하는 점 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a45f6-162">The collection of points that specify destination points for one or more connected straight lines.</span>
          </span>
        </param>
        <param name="isStroked">
          <span data-ttu-id="a45f6-163">세그먼트를 렌더링하기 위해 <see cref="T:System.Windows.Media.Pen" />을 사용할 때 세그먼트에 스트로크를 설정하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a45f6-163">
              <see langword="true" /> to make the segment stroked when a <see cref="T:System.Windows.Media.Pen" /> is used to render the segment; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="isSmoothJoin">
          <span data-ttu-id="a45f6-164">
            <see cref="T:System.Windows.Media.Pen" />을 사용하여 스트로크를 설정할 때 이 세그먼트와 이전 세그먼트 간의 연결을 모퉁이로 처리하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a45f6-164">
              <see langword="true" /> to treat the join between this segment and the previous segment as a corner when stroked with a <see cref="T:System.Windows.Media.Pen" />; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a45f6-165">연결된 하나 이상의 직선을 그립니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a45f6-165">Draws one or more connected straight lines.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a45f6-166">이 메서드는 기준으로 이전 세그먼트의 끝점을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="a45f6-166">This method uses the end point of the previous segment as its starting point.</span></span> <span data-ttu-id="a45f6-167">지정 된 점을 사용 하 여 도형에 있는 첫 번째 세그먼트 인 경우는 <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> 시작 점으로 메서드.</span><span class="sxs-lookup"><span data-stu-id="a45f6-167">If this is the first segment in a figure, it uses the point specified by the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> method as its start point.</span></span>  
  
 <span data-ttu-id="a45f6-168">A <xref:System.Windows.Media.StreamGeometry> 포함 된 경우 직렬화 할 수 없습니다는 <xref:System.Windows.Media.Transform> 또는 비 스트로크 또는 채워지지 않은 세그먼트입니다.</span><span class="sxs-lookup"><span data-stu-id="a45f6-168">A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a45f6-169">사용 하 여 삼각형을 그리는 방법을 보여 주는 다음 예제는 <xref:System.Windows.Media.StreamGeometryContext.PolyLineTo%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a45f6-169">The following example shows how to draw a triangle using the <xref:System.Windows.Media.StreamGeometryContext.PolyLineTo%2A> method.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_procedural_snip#StreamGeometryPolyLineToExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/CSharp/StreamGeometryPolyLineToExample.cs#streamgeometrypolylinetoexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryPolyLineToExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/visualbasic/streamgeometrypolylinetoexample.vb#streamgeometrypolylinetoexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a45f6-170">
            <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> 메서드를 호출하여 그림을 시작하지 않고 세그먼트를 추가하려고 한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a45f6-170">An attempt was made to add a segment without starting a figure by calling the <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> method.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.LineTo(System.Windows.Point,System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PolyQuadraticBezierTo">
      <MemberSignature Language="C#" Value="public abstract void PolyQuadraticBezierTo (System.Collections.Generic.IList&lt;System.Windows.Point&gt; points, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PolyQuadraticBezierTo(class System.Collections.Generic.IList`1&lt;valuetype System.Windows.Point&gt; points, bool isStroked, bool isSmoothJoin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub PolyQuadraticBezierTo (points As IList(Of Point), isStroked As Boolean, isSmoothJoin As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void PolyQuadraticBezierTo(System::Collections::Generic::IList&lt;System::Windows::Point&gt; ^ points, bool isStroked, bool isSmoothJoin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Collections.Generic.IList&lt;System.Windows.Point&gt;" />
        <Parameter Name="isStroked" Type="System.Boolean" />
        <Parameter Name="isSmoothJoin" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="a45f6-171">하나 이상의 정방형 3차원 곡선에 대한 제어점과 대상 점을 지정하는 점의 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a45f6-171">The collection of points that specify control points and destination points for one or more quadratic Bezier curves.</span>
          </span>
          <span data-ttu-id="a45f6-172">목록의 첫 번째 점이 곡선의 제어점을 지정하고, 다음 점이 대상 점을 지정하고, 그 다음 점이 다음 곡선의 제어점을 지정하는 방식으로 점이 지정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a45f6-172">The first point in the list specifies the curve's control point, the next point specifies the destination point, the next point specifies the control point of the next curve, and so on.</span>
          </span>
          <span data-ttu-id="a45f6-173">목록에 포함된 점 수는 짝수여야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a45f6-173">The list must contain an even number of points.</span>
          </span>
        </param>
        <param name="isStroked">
          <span data-ttu-id="a45f6-174">세그먼트를 렌더링하기 위해 <see cref="T:System.Windows.Media.Pen" />을 사용할 때 세그먼트에 스트로크를 설정하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a45f6-174">
              <see langword="true" /> to make the segment stroked when a <see cref="T:System.Windows.Media.Pen" /> is used to render the segment; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="isSmoothJoin">
          <span data-ttu-id="a45f6-175">
            <see cref="T:System.Windows.Media.Pen" />을 사용하여 스트로크를 설정할 때 이 세그먼트와 이전 세그먼트 간의 연결을 모퉁이로 처리하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a45f6-175">
              <see langword="true" /> to treat the join between this segment and the previous segment as a corner when stroked with a <see cref="T:System.Windows.Media.Pen" />; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a45f6-176">하나 이상의 연결된 정방형 3차원 곡선을 그립니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a45f6-176">Draws one or more connected quadratic Bezier curves.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a45f6-177">이 메서드는 기준으로 이전 세그먼트의 끝점을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="a45f6-177">This method uses the end point of the previous segment as its starting point.</span></span> <span data-ttu-id="a45f6-178">지정 된 점을 사용 하 여 도형에 있는 첫 번째 세그먼트 인 경우는 <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> 시작 점으로 메서드.</span><span class="sxs-lookup"><span data-stu-id="a45f6-178">If this is the first segment in a figure, it uses the point specified by the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> method as its start point.</span></span>  
  
 <span data-ttu-id="a45f6-179">A <xref:System.Windows.Media.StreamGeometry> 포함 된 경우 직렬화 할 수 없습니다는 <xref:System.Windows.Media.Transform> 또는 비 스트로크 또는 채워지지 않은 세그먼트입니다.</span><span class="sxs-lookup"><span data-stu-id="a45f6-179">A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a45f6-180">사용 하 여 여러 연결 된 정방형 베 지 어 곡선을 그리는 방법을 보여 주는 다음 예제는 <xref:System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a45f6-180">The following example shows how to draw multiple connected quadratic Bezier curves using the <xref:System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo%2A> method.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_procedural_snip#StreamGeometryPolyQuadraticBezierToExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/CSharp/StreamGeometryPolyQuadraticBezierToExample.cs#streamgeometrypolyquadraticbeziertoexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryPolyQuadraticBezierToExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/visualbasic/streamgeometrypolyquadraticbeziertoexample.vb#streamgeometrypolyquadraticbeziertoexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a45f6-181">
            <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> 메서드를 호출하여 그림을 시작하지 않고 세그먼트를 추가하려고 한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a45f6-181">An attempt was made to add a segment without starting a figure by calling the <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> method.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.ArcTo(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.BezierTo(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.QuadraticBezierTo(System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="QuadraticBezierTo">
      <MemberSignature Language="C#" Value="public abstract void QuadraticBezierTo (System.Windows.Point point1, System.Windows.Point point2, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void QuadraticBezierTo(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2, bool isStroked, bool isSmoothJoin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.QuadraticBezierTo(System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub QuadraticBezierTo (point1 As Point, point2 As Point, isStroked As Boolean, isSmoothJoin As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void QuadraticBezierTo(System::Windows::Point point1, System::Windows::Point point2, bool isStroked, bool isSmoothJoin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
        <Parameter Name="isStroked" Type="System.Boolean" />
        <Parameter Name="isSmoothJoin" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point1">
          <span data-ttu-id="a45f6-182">곡선의 모양을 지정하는 데 사용되는 제어점입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a45f6-182">The control point used to specify the shape of the curve.</span>
          </span>
        </param>
        <param name="point2">
          <span data-ttu-id="a45f6-183">곡선의 끝에 대한 대상 점입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a45f6-183">The destination point for the end of the curve.</span>
          </span>
        </param>
        <param name="isStroked">
          <span data-ttu-id="a45f6-184">세그먼트를 렌더링하기 위해 <see cref="T:System.Windows.Media.Pen" />을 사용할 때 세그먼트에 스트로크를 설정하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a45f6-184">
              <see langword="true" /> to make the segment stroked when a <see cref="T:System.Windows.Media.Pen" /> is used to render the segment; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="isSmoothJoin">
          <span data-ttu-id="a45f6-185">
            <see cref="T:System.Windows.Media.Pen" />을 사용하여 스트로크를 설정할 때 이 세그먼트와 이전 세그먼트 간의 연결을 모퉁이로 처리하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a45f6-185">
              <see langword="true" /> to treat the join between this segment and the previous segment as a corner when stroked with a <see cref="T:System.Windows.Media.Pen" />; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a45f6-186">정방형 3차원 곡선을 그립니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a45f6-186">Draws a quadratic Bezier curve.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a45f6-187">정방형 입방 형 3 차원 곡선을 두 개의 제어점을 사용 하는 입방 형 3 차원 곡선 달리 단일 제어 지점을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="a45f6-187">Unlike a cubic Bezier curve, which uses two control points, a quadratic cubic Bezier curve uses a single control point.</span></span>  
  
 <span data-ttu-id="a45f6-188">이 메서드는 기준으로 이전 세그먼트의 끝점을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="a45f6-188">This method uses the end point of the previous segment as its starting point.</span></span> <span data-ttu-id="a45f6-189">지정 된 점을 사용 하 여 도형에 있는 첫 번째 세그먼트 인 경우는 <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> 시작 점으로 메서드.</span><span class="sxs-lookup"><span data-stu-id="a45f6-189">If this is the first segment in a figure, it uses the point specified by the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> method as its start point.</span></span>  
  
 <span data-ttu-id="a45f6-190">A <xref:System.Windows.Media.StreamGeometry> 포함 된 경우 직렬화 할 수 없습니다는 <xref:System.Windows.Media.Transform> 또는 비 스트로크 또는 채워지지 않은 세그먼트입니다.</span><span class="sxs-lookup"><span data-stu-id="a45f6-190">A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a45f6-191">사용 하 여 정방형 베 지 어 곡선을 그리는 방법을 보여 주는 다음 예제는 <xref:System.Windows.Media.StreamGeometryContext.QuadraticBezierTo%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a45f6-191">The following example shows how to draw a quadratic Bezier curve using the <xref:System.Windows.Media.StreamGeometryContext.QuadraticBezierTo%2A> method.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_procedural_snip#StreamGeometryQuadraticBezierToExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/CSharp/StreamGeometryQuadraticBezierToExample.cs#streamgeometryquadraticbeziertoexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryQuadraticBezierToExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/visualbasic/streamgeometryquadraticbeziertoexample.vb#streamgeometryquadraticbeziertoexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a45f6-192">
            <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> 메서드를 호출하여 그림을 시작하지 않고 세그먼트를 추가하려고 한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a45f6-192">An attempt was made to add a segment without starting a figure by calling the <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> method.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.ArcTo(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.BezierTo(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a45f6-193">이 멤버는 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 인프라를 지원하며 코드에서 직접 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a45f6-193">This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>