<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SqlConnection.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-81070f4" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9d63614a-fd48-4a83-9dc4-ea1e401b6c15b8df9b2f68ef2e1eb172d5b45e4a920c51cb5e87.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b8df9b2f68ef2e1eb172d5b45e4a920c51cb5e87</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4b4804968da1dfdf71c501075a5b66957b54f2e8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/27/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlConnection">
          <source>Represents a connection to a SQL Server database.</source>
          <target state="translated">SQL Server 데이터베이스에 대한 연결을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlConnection">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>A <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> object represents a unique session to a SQL Server data source.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> 개체는 SQL Server 데이터 원본에 고유한 세션을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>With a client/server database system, it is equivalent to a network connection to the server.</source>
          <target state="translated">클라이언트/서버 데이터베이스 시스템 이므로 네트워크 연결 서버에 해당 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> is used together with <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> to increase performance when connecting to a Microsoft SQL Server database.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> 와 함께 사용 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> Microsoft SQL Server 데이터베이스에 연결할 때 성능을 향상 시키려면 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>For all third-party SQL Server products and other OLE DB-supported data sources, use <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph>.</source>
          <target state="translated">모든 공급 업체 SQL Server 제품 및 다른 OLE DB에서 지 원하는 데이터 원본에 대 한 사용 <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>When you create an instance of <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>, all properties are set to their initial values.</source>
          <target state="translated">인스턴스를 만들 때 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>, 모든 속성은 초기 값으로 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>For a list of these values, see the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> constructor.</source>
          <target state="translated">이러한 값의 목록에 대 한 참조는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>See <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph> for a list of the keywords in a connection string.</source>
          <target state="translated">참조 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph> 에 대 한 연결 문자열에서 키워드 목록입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>If the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> goes out of scope, it won't be closed.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> 늘어나고의 범위를 닫을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>Therefore, you must explicitly close the connection by calling <ph id="ph1">`Close`</ph> or <ph id="ph2">`Dispose`</ph>.</source>
          <target state="translated">따라서 명시적으로 닫아야 연결 호출 하 여 <ph id="ph1">`Close`</ph> 또는 <ph id="ph2">`Dispose`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source><ph id="ph1">`Close`</ph> and <ph id="ph2">`Dispose`</ph> are functionally equivalent.</source>
          <target state="translated"><ph id="ph1">`Close`</ph> 및 <ph id="ph2">`Dispose`</ph> 기능적으로 동일 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>If the connection pooling value <ph id="ph1">`Pooling`</ph> is set to <ph id="ph2">`true`</ph> or <ph id="ph3">`yes`</ph>, the underlying connection is returned back to the connection pool.</source>
          <target state="translated">연결 풀링 값 경우 <ph id="ph1">`Pooling`</ph> 로 설정 된 <ph id="ph2">`true`</ph> 또는 <ph id="ph3">`yes`</ph>, 기본 연결이 연결 풀으로 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>On the other hand, if <ph id="ph1">`Pooling`</ph> is set to <ph id="ph2">`false`</ph> or <ph id="ph3">`no`</ph>, the underlying connection to the server is actually closed.</source>
          <target state="translated">반면에 경우 <ph id="ph1">`Pooling`</ph> 로 설정 되어 <ph id="ph2">`false`</ph> 또는 <ph id="ph3">`no`</ph>, 원본 서버 연결을 사용 하는 실제로 해제 됩니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>Login and logout events will not be raised on the server when a connection is fetched from or returned to the connection pool, because the connection is not actually closed when it is returned to the connection pool.</source>
          <target state="translated">연결이 연결 풀에서 반환될 경우에는 실제로 해제된 것이 아니므로 연결이 연결 풀에서 반입되거나 연결 풀로 반환되는 경우 서버에서 로그인 및 로그아웃 이벤트가 발생하지 않습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>For more information, see <bpt id="p1">[</bpt>SQL Server Connection Pooling (ADO.NET)<ept id="p1">](~/docs/framework/data/adonet/sql-server-connection-pooling.md)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>SQL Server 연결 풀링(ADO.NET)<ept id="p1">](~/docs/framework/data/adonet/sql-server-connection-pooling.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>To ensure that connections are always closed, open the connection inside of a <ph id="ph1">`using`</ph> block, as shown in the following code fragment.</source>
          <target state="translated">연결이 닫혀 항상을 보장 하려면 내에서 연결을 열고는 <ph id="ph1">`using`</ph> 다음 코드 조각에 나와 있는 것 처럼 차단 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>Doing so ensures that the connection is automatically closed when the code exits the block.</source>
          <target state="translated">이렇게 하면 코드 블록을 종료 하면 연결이 자동으로 닫힙니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>To deploy high-performance applications, you must use connection pooling.</source>
          <target state="translated">고성능 응용 프로그램을 배포 하려면 연결 풀링을 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>When you use the .NET Framework Data Provider for SQL Server, you do not have to enable connection pooling because the provider manages this automatically, although you can modify some settings.</source>
          <target state="translated">.NET Framework Data Provider for SQL Server를 사용 하면 일부 설정을 수정할 수 있지만 공급자 자동으로 관리 하기 때문에 연결 풀링을 사용할 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>For more information, see <bpt id="p1">[</bpt>SQL Server Connection Pooling (ADO.NET)<ept id="p1">](~/docs/framework/data/adonet/sql-server-connection-pooling.md)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>SQL Server 연결 풀링(ADO.NET)<ept id="p1">](~/docs/framework/data/adonet/sql-server-connection-pooling.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>If a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlException&gt;</ph> is generated by the method executing a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> remains open when the severity level is 19 or less.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlException&gt;</ph> 메서드를 실행 하 여 생성 되는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> 심각도 19 이하인 경우 열린 상태를 유지 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>When the severity level is 20 or greater, the server ordinarily closes the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>.</source>
          <target state="translated">서버는 일반적으로 닫습니다 심각도 수준이 20 이상일 때는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>However, the user can reopen the connection and continue.</source>
          <target state="translated">그러나 사용자는 연결을 다시 열고 계속할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>An application that creates an instance of the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> object can require all direct and indirect callers to have sufficient permission to the code by setting declarative or imperative security demands.</source>
          <target state="translated">인스턴스를 생성 하는 응용 프로그램은 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> 개체 모든 직접 및 간접 호출자가 선언적 이거나 명령 보안 요청을 설정 하 여 코드에 충분 한 권한을 갖도록 요구할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> makes security demands using the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlClientPermission&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> 보안 요청을 사용 하 여 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlClientPermission&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>Users can verify that their code has sufficient permissions by using the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlClientPermissionAttribute&gt;</ph> object.</source>
          <target state="translated">사용자가 해당 코드를 사용 하 여 충분 한 권한이 있는지 확인할 수는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlClientPermissionAttribute&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>Users and administrators can also use the <bpt id="p1">[</bpt>Caspol.exe (Code Access Security Policy Tool)<ept id="p1">](~/docs/framework/tools/caspol-exe-code-access-security-policy-tool.md)</ept> to modify security policy at the machine, user, and enterprise levels.</source>
          <target state="translated">사용자와 관리자에도 사용할 수는 <bpt id="p1">[</bpt>Caspol.exe (코드 액세스 보안 정책 도구)<ept id="p1">](~/docs/framework/tools/caspol-exe-code-access-security-policy-tool.md)</ept> 컴퓨터, 사용자 및 엔터프라이즈 수준에서 보안 정책을 수정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>For more information, see <bpt id="p1">[</bpt>Security<ept id="p1">](http://msdn.microsoft.com/library/9a9621d7-8883-4a4f-a874-65e8e09e20a6)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>보안<ept id="p1">](http://msdn.microsoft.com/library/9a9621d7-8883-4a4f-a874-65e8e09e20a6)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>For an example demonstrating how to use security demands, see <bpt id="p1">[</bpt>Code Access Security and ADO.NET<ept id="p1">](~/docs/framework/data/adonet/code-access-security.md)</ept>.</source>
          <target state="translated">보안 요청을 사용 하는 방법을 보여 주는 예제를 참조 하십시오. <bpt id="p1">[</bpt>코드 액세스 보안 및 ADO.NET<ept id="p1">](~/docs/framework/data/adonet/code-access-security.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>For more information about handling warning and informational messages from the server, see <bpt id="p1">[</bpt>Connection Events<ept id="p1">](~/docs/framework/data/adonet/connection-events.md)</ept>.</source>
          <target state="translated">서버에서 경고 및 정보 메시지를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>연결 이벤트<ept id="p1">](~/docs/framework/data/adonet/connection-events.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>SQL Server engine errors and error messages are documented in SQL Server Books Online.</source>
          <target state="translated">SQL Server 엔진 오류 및 오류 메시지는 SQL Server 온라인 설명서에 설명 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>You can force TCP instead of shared memory.</source>
          <target state="translated">공유 메모리 대신 TCP를 강제로 수 있습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>You can do that by prefixing tcp: to the server name in the connection string or you can use localhost.</source>
          <target state="translated">Tcp를 접두사로 사용 하 여 할 수 있습니다: 연결에서 서버 이름에 문자열 하거나 사용할 수 있습니다 localhost입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> and a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> is opened and set as the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.Connection%2A&gt;</ph> for the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> 열리고으로 설정 된 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.Connection%2A&gt;</ph> 에 대 한는 <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>The example then calls <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A&gt;</ph>.</source>
          <target state="translated">이 예에서는 다음 호출 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>To accomplish this, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A&gt;</ph> is passed a connection string and a query string that is a <ph id="ph2">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph> INSERT statement.</source>
          <target state="translated">이 수행 하는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A&gt;</ph> 연결 문자열 및이 전달 되는 <ph id="ph2">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph> INSERT 문의 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>The connection is closed automatically when the code exits the using block.</source>
          <target state="translated">코드에서 사용 하 여 종료 될 때 연결이 자동으로 닫히면 블록입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlConnection">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.#ctor">
          <source>When a new instance of <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> is created, the read/write properties are set to the following initial values unless they are specifically set using their associated keywords in the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph> property.</source>
          <target state="translated">새 인스턴스가 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> 만들어지면 읽기/쓰기 속성의 관련된 키워드를 사용 하 여 구체적으로 설정 되어 있지 않으면 다음 초기 값으로 설정 됩니다는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.#ctor">
          <source>Properties</source>
          <target state="translated">속성</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.#ctor">
          <source>Initial value</source>
          <target state="translated">초기 값</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.#ctor">
          <source>empty string ("")</source>
          <target state="translated">빈 문자열 ("")</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.#ctor">
          <source>15</source>
          <target state="translated">15</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.#ctor">
          <source>empty string ("")</source>
          <target state="translated">빈 문자열 ("")</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.#ctor">
          <source>empty string ("")</source>
          <target state="translated">빈 문자열 ("")</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.#ctor">
          <source>You can change the value for these properties only by using the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph> property.</source>
          <target state="translated">사용 하 여 이러한 속성에 대 한 값을 변경할 수는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnectionStringBuilder&gt;</ph> class provides functionality for creating and managing the contents of connection strings.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnectionStringBuilder&gt;</ph> 클래스 만들고 연결 문자열의 내용을 관리 하기 위한 기능을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.#ctor">
          <source>The following example creates and opens a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.#ctor(System.String)">
          <source>The connection used to open the SQL Server database.</source>
          <target state="translated">SQL Server 데이터베이스를 여는 데 사용되는 연결입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> class when given a string that contains the connection string.</source>
          <target state="translated">연결 문자열을 포함한 문자열이 제공된 경우 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.#ctor(System.String)">
          <source>When a new instance of <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> is created, the read/write properties are set to the following initial values unless they are specifically set using their associated keywords in the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph> property.</source>
          <target state="translated">새 인스턴스가 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> 만들어지면 읽기/쓰기 속성의 관련된 키워드를 사용 하 여 구체적으로 설정 되어 있지 않으면 다음 초기 값으로 설정 됩니다는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.#ctor(System.String)">
          <source>Properties</source>
          <target state="translated">속성</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.#ctor(System.String)">
          <source>Initial value</source>
          <target state="translated">초기 값</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.#ctor(System.String)">
          <source>15</source>
          <target state="translated">15</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.#ctor(System.String)">
          <source>empty string ("")</source>
          <target state="translated">빈 문자열 ("")</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.#ctor(System.String)">
          <source>empty string ("")</source>
          <target state="translated">빈 문자열 ("")</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.#ctor(System.String)">
          <source>You can change the value for these properties only by using the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph> property.</source>
          <target state="translated">사용 하 여 이러한 속성에 대 한 값을 변경할 수는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.#ctor(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> class provides functionality for creating and managing the contents of connection strings.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> 클래스 만들고 연결 문자열의 내용을 관리 하기 위한 기능을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.#ctor(System.String)">
          <source>The following example creates and opens a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.#ctor(System.String,System.Data.SqlClient.SqlCredential)">
          <source>A connection string that does not use any of the following connection string keywords: <ph id="ph1">&lt;see langword="Integrated Security = true" /&gt;</ph>, <ph id="ph2">&lt;see langword="UserId" /&gt;</ph>, or <ph id="ph3">&lt;see langword="Password" /&gt;</ph>; or that does not use <ph id="ph4">&lt;see langword="ContextConnection = true" /&gt;</ph>.</source>
          <target state="translated">연결 문자열 키워드 <ph id="ph1">&lt;see langword="Integrated Security = true" /&gt;</ph>, <ph id="ph2">&lt;see langword="UserId" /&gt;</ph> 또는 <ph id="ph3">&lt;see langword="Password" /&gt;</ph>를 사용하지 않거나 <ph id="ph4">&lt;see langword="ContextConnection = true" /&gt;</ph>를 사용하지 않는 연결 문자열입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.#ctor(System.String,System.Data.SqlClient.SqlCredential)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> class given a connection string, that does not use <ph id="ph2">&lt;see langword="Integrated Security = true" /&gt;</ph> and a <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlCredential" /&gt;</ph> object that contains the user ID and password.</source>
          <target state="translated">연결 문자열이 지정되면 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다. 연결 문자열은 사용자 ID와 암호를 포함하는 <ph id="ph2">&lt;see langword="Integrated Security = true" /&gt;</ph> 및  <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlCredential" /&gt;</ph> 개체를 사용하지 않습니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlConnection.AccessToken">
          <source>Gets or sets the access token for the connection.</source>
          <target state="translated">연결용 액세스 토큰을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.AccessToken">
          <source>The access token for the connection.</source>
          <target state="translated">연결용 액세스 토큰입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlConnection">
          <source>Starts a database transaction.</source>
          <target state="translated">데이터베이스 트랜잭션을 시작합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction">
          <source>Starts a database transaction.</source>
          <target state="translated">데이터베이스 트랜잭션을 시작합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction">
          <source>An object representing the new transaction.</source>
          <target state="translated">새 트랜잭션을 나타내는 개체입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction">
          <source>This command maps to the SQL Server implementation of BEGIN TRANSACTION.</source>
          <target state="translated">이 명령은 BEGIN TRANSACTION의 SQL Server 구현에 매핑합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction">
          <source>You must explicitly commit or roll back the transaction using the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> method.</source>
          <target state="translated">명시적으로 커밋하거나 사용 하 여 트랜잭션을 롤백하는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction">
          <source>To make sure that the .NET Framework Data Provider for SQL Server transaction management model performs correctly, avoid using other transaction management models, such as the one provided by SQL Server.</source>
          <target state="translated">.NET Framework Data Provider for SQL Server 트랜잭션 관리 모델을 올바르게 수행 되었는지 확인, SQL Server에서 제공 하는 것과 같은 다른 트랜잭션 관리 모델을 사용 하지 마십시오.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction">
          <source>If you do not specify an isolation level, the default isolation level is used.</source>
          <target state="translated">격리 수준을 지정 하지 않으면 기본 격리 수준이 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction">
          <source>To specify an isolation level with the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph> method, use the overload that takes the <ph id="ph2">`iso`</ph> parameter (<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph>).</source>
          <target state="translated">와 격리 수준을 지정 하는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph> 메서드를 사용 하는 오버 로드를 사용 하 여는 <ph id="ph2">`iso`</ph> 매개 변수 (<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction">
          <source>The isolation level set for a transaction persists after the transaction is completed and until the connection is closed or disposed.</source>
          <target state="translated">트랜잭션에 대 한 설정 된 격리 수준 트랜잭션이 완료 되 고 연결이 닫히거나 삭제 될 때까지 유지 됩니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction">
          <source>Setting the isolation level to <bpt id="p1">**</bpt>Snapshot<ept id="p1">**</ept> in a database where the snapshot isolation level is not enabled does not throw an exception.</source>
          <target state="translated">격리 수준을 설정 <bpt id="p1">**</bpt>스냅숏<ept id="p1">**</ept> 스냅숏 격리 수준을 해제 되어 없는 데이터베이스에서 예외를 throw 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction">
          <source>The transaction will complete using the default isolation level.</source>
          <target state="translated">트랜잭션의 기본 격리 수준을 사용 하 여 완료 합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction">
          <source>If a transaction is started and a level 16 or higher error occurs on the server, the transaction will not be rolled back until the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader.Read%2A&gt;</ph> method is invoked.</source>
          <target state="translated">트랜잭션이 시작 되는 서버에서 수준 16 또는 더 높은 오류가 발생 하는 경우 트랜잭션이 롤백되지 것입니다 다시까지 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader.Read%2A&gt;</ph> 메서드가 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction">
          <source>No exception is thrown on <bpt id="p1">**</bpt>ExecuteReader<ept id="p1">**</ept>.</source>
          <target state="translated">예외가 발생 하지 않습니다 <bpt id="p1">**</bpt>ExecuteReader<ept id="p1">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction">
          <source>When your query returns a large amount of data and calls <ph id="ph1">`BeginTransaction`</ph>, a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlException&gt;</ph> is thrown because SQL Server does not allow parallel transactions when using MARS.</source>
          <target state="translated">쿼리가 많은 양의 데이터 및 호출을 반환 하는 경우 <ph id="ph1">`BeginTransaction`</ph>, <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlException&gt;</ph> SQL Server에서 MARS를 사용 하는 경우 병렬 트랜잭션은 허용 되지 않으므로 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction">
          <source>To avoid this problem, always associate a transaction with the command, the connection, or both before any readers are open.</source>
          <target state="translated">이 문제를 방지 하려면 항상 트랜잭션을와 연결 명령, 연결, 또는 둘 다 판독기를 열기 전에 합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction">
          <source>For more information on SQL Server transactions, see "Explicit Transactions" and "Coding Efficient Transactions" in SQL Server Books Online.</source>
          <target state="translated">SQL Server 트랜잭션에 대 한 자세한 내용은 "명시적 트랜잭션" 및 SQL Server 온라인 설명서의 "효율적인 트랜잭션 코딩"를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> and a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction">
          <source>It also demonstrates how to use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph>, a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> methods.</source>
          <target state="translated">사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction">
          <source>Parallel transactions are not allowed when using Multiple Active Result Sets (MARS).</source>
          <target state="translated">MARS(Multiple Active Result Sets)를 사용하는 경우 병렬 트랜잭션은 허용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction">
          <source>Parallel transactions are not supported.</source>
          <target state="translated">병렬 트랜잭션은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)">
          <source>The isolation level under which the transaction should run.</source>
          <target state="translated">트랜잭션이 실행되어야 하는 격리 수준입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)">
          <source>Starts a database transaction with the specified isolation level.</source>
          <target state="translated">지정된 격리 수준으로 데이터베이스 트랜잭션을 시작합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)">
          <source>An object representing the new transaction.</source>
          <target state="translated">새 트랜잭션을 나타내는 개체입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)">
          <source>This command maps to the SQL Server implementation of BEGIN TRANSACTION.</source>
          <target state="translated">이 명령은 BEGIN TRANSACTION의 SQL Server 구현에 매핑합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)">
          <source>You must explicitly commit or roll back the transaction using the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> method.</source>
          <target state="translated">명시적으로 커밋하거나 사용 하 여 트랜잭션을 롤백하는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)">
          <source>To make sure that the .NET Framework Data Provider for SQL Server transaction management model performs correctly, avoid using other transaction management models, such as the one provided by SQL Server.</source>
          <target state="translated">.NET Framework Data Provider for SQL Server 트랜잭션 관리 모델을 올바르게 수행 되었는지 확인, SQL Server에서 제공 하는 것과 같은 다른 트랜잭션 관리 모델을 사용 하지 마십시오.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)">
          <source>After a transaction is committed or rolled back, the isolation level of the transaction persists for all subsequent commands that are in autocommit mode (the SQL Server default).</source>
          <target state="translated">트랜잭션이 커밋 또는 롤백, 자동 커밋 모드 (SQL Server 기본값)에 있는 모든 후속 명령에 대 한 트랜잭션의 격리 수준이 유지 됩니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)">
          <source>This can produce unexpected results, such as an isolation level of REPEATABLE READ persisting and locking other users out of a row.</source>
          <target state="translated">유지 하 고 다른 사용자가 행 잠금 REPEATABLE READ 격리 수준이 같은 예상치 못한 결과가 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)">
          <source>To reset the isolation level to the default (READ COMMITTED), execute the <ph id="ph1">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph> SET TRANSACTION ISOLATION LEVEL READ COMMITTED statement, or call <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A?displayProperty=nameWithType&gt;</ph> followed immediately by <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">격리 수준 (READ COMMITTED) 기본값으로 다시 설정, 실행의 <ph id="ph1">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph> 트랜잭션 격리 수준 READ COMMITTED 설정 문 또는 호출 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A?displayProperty=nameWithType&gt;</ph> 즉시 올 <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)">
          <source>For more information on SQL Server isolation levels, see "Isolation Levels in the Database Engine" in SQL Server Books Online.</source>
          <target state="translated">SQL Server 격리 수준에 대 한 자세한 내용은 "격리 수준에서" 데이터베이스 엔진의 SQL Server 온라인 설명서를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)">
          <source>For more information on SQL Server transactions, see "Explicit Transactions" and "Coding Efficient Transactions" in SQL Server Books Online.</source>
          <target state="translated">SQL Server 트랜잭션에 대 한 자세한 내용은 "명시적 트랜잭션" 및 SQL Server 온라인 설명서의 "효율적인 트랜잭션 코딩"를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)">
          <source>When your query returns a large amount of data and calls <ph id="ph1">`BeginTransaction`</ph>, a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlException&gt;</ph> is thrown because SQL Server does not allow parallel transactions when using MARS.</source>
          <target state="translated">쿼리가 많은 양의 데이터 및 호출을 반환 하는 경우 <ph id="ph1">`BeginTransaction`</ph>, <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlException&gt;</ph> SQL Server에서 MARS를 사용 하는 경우 병렬 트랜잭션은 허용 되지 않으므로 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)">
          <source>To avoid this problem, always associate a transaction with the command, the connection, or both before any readers are open.</source>
          <target state="translated">이 문제를 방지 하려면 항상 트랜잭션을와 연결 명령, 연결, 또는 둘 다 판독기를 열기 전에 합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> and a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)">
          <source>It also demonstrates how to use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph>, a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> methods.</source>
          <target state="translated">사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)">
          <source>Parallel transactions are not allowed when using Multiple Active Result Sets (MARS).</source>
          <target state="translated">MARS(Multiple Active Result Sets)를 사용하는 경우 병렬 트랜잭션은 허용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)">
          <source>Parallel transactions are not supported.</source>
          <target state="translated">병렬 트랜잭션은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.String)">
          <source>The name of the transaction.</source>
          <target state="translated">트랜잭션 이름입니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.String)">
          <source>Starts a database transaction with the specified transaction name.</source>
          <target state="translated">지정된 트랜잭션 이름으로 데이터베이스 트랜잭션을 시작합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.String)">
          <source>An object representing the new transaction.</source>
          <target state="translated">새 트랜잭션을 나타내는 개체입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.String)">
          <source>This command maps to the SQL Server implementation of BEGIN TRANSACTION.</source>
          <target state="translated">이 명령은 BEGIN TRANSACTION의 SQL Server 구현에 매핑합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.String)">
          <source>The length of the <ph id="ph1">`transactionName`</ph> parameter must not exceed 32 characters; otherwise an exception will be thrown.</source>
          <target state="translated">길이 <ph id="ph1">`transactionName`</ph> 매개 변수는 32 자를 초과할 수 없습니다; 그렇지 않으면 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.String)">
          <source>The value in the <ph id="ph1">`transactionName`</ph> parameter can be used in later calls to <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> and in the <ph id="ph3">`savePoint`</ph> parameter of the <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlTransaction.Save%2A&gt;</ph> method.</source>
          <target state="translated">값은 <ph id="ph1">`transactionName`</ph> 에 대 한 후속 호출에서 매개 변수를 사용할 수 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> 및는 <ph id="ph3">`savePoint`</ph> 의 매개 변수는 <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlTransaction.Save%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.String)">
          <source>You must explicitly commit or roll back the transaction using the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> method.</source>
          <target state="translated">명시적으로 커밋하거나 사용 하 여 트랜잭션을 롤백하는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.String)">
          <source>To make sure that the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> Data Provider for SQL Server transaction management model performs correctly, avoid using other transaction management models, such as the one provided by SQL Server.</source>
          <target state="translated">있는지 확인 하기는 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> 데이터 공급자에 SQL Server 트랜잭션 관리 모델을 올바르게 수행 하지 않도록 SQL Server에서 제공 되는 것 등 다른 트랜잭션 관리 모델을 사용 하 여 합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.String)">
          <source>For more information on SQL Server transactions, see "Explicit Transactions" and "Coding Efficient Transactions" in SQL Server Books Online.</source>
          <target state="translated">SQL Server 트랜잭션에 대 한 자세한 내용은 "명시적 트랜잭션" 및 SQL Server 온라인 설명서의 "효율적인 트랜잭션 코딩"를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.String)">
          <source>When your query returns a large amount of data and calls <ph id="ph1">`BeginTransaction`</ph>, a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlException&gt;</ph> is thrown because SQL Server does not allow parallel transactions when using MARS.</source>
          <target state="translated">쿼리가 많은 양의 데이터 및 호출을 반환 하는 경우 <ph id="ph1">`BeginTransaction`</ph>, <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlException&gt;</ph> SQL Server에서 MARS를 사용 하는 경우 병렬 트랜잭션은 허용 되지 않으므로 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.String)">
          <source>To avoid this problem, always associate a transaction with the command, the connection, or both before any readers are open.</source>
          <target state="translated">이 문제를 방지 하려면 항상 트랜잭션을와 연결 명령, 연결, 또는 둘 다 판독기를 열기 전에 합니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> and a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.String)">
          <source>It also demonstrates how to use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph>, a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> methods.</source>
          <target state="translated">사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.String)">
          <source>Parallel transactions are not allowed when using Multiple Active Result Sets (MARS).</source>
          <target state="translated">MARS(Multiple Active Result Sets)를 사용하는 경우 병렬 트랜잭션은 허용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.String)">
          <source>Parallel transactions are not supported.</source>
          <target state="translated">병렬 트랜잭션은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)">
          <source>The isolation level under which the transaction should run.</source>
          <target state="translated">트랜잭션이 실행되어야 하는 격리 수준입니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)">
          <source>The name of the transaction.</source>
          <target state="translated">트랜잭션 이름입니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)">
          <source>Starts a database transaction with the specified isolation level and transaction name.</source>
          <target state="translated">지정된 격리 수준과 트랜잭션 이름으로 데이터베이스 트랜잭션을 시작합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)">
          <source>An object representing the new transaction.</source>
          <target state="translated">새 트랜잭션을 나타내는 개체입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)">
          <source>This command maps to the SQL Server implementation of BEGIN TRANSACTION.</source>
          <target state="translated">이 명령은 BEGIN TRANSACTION의 SQL Server 구현에 매핑합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)">
          <source>The value in the <ph id="ph1">`transactionName`</ph> parameter can be used in later calls to <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> and in the <ph id="ph3">`savePoint`</ph> parameter of the <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlTransaction.Save%2A&gt;</ph> method.</source>
          <target state="translated">값은 <ph id="ph1">`transactionName`</ph> 에 대 한 후속 호출에서 매개 변수를 사용할 수 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> 및는 <ph id="ph3">`savePoint`</ph> 의 매개 변수는 <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlTransaction.Save%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)">
          <source>You must explicitly commit or roll back the transaction using the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> method.</source>
          <target state="translated">명시적으로 커밋하거나 사용 하 여 트랜잭션을 롤백하는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)">
          <source>To make sure that the SQL Server transaction management model performs correctly, avoid using other transaction management models, such as the one provided by SQL Server.</source>
          <target state="translated">SQL Server 트랜잭션 관리 모델을 올바르게 수행 되었는지 확인, SQL Server에서 제공 하는 것과 같은 다른 트랜잭션 관리 모델을 사용 하지 마십시오.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)">
          <source>After a transaction is committed or rolled back, the isolation level of the transaction persists for all subsequent commands that are in autocommit mode (the SQL Server default).</source>
          <target state="translated">트랜잭션이 커밋 또는 롤백, 자동 커밋 모드 (SQL Server 기본값)에 있는 모든 후속 명령에 대 한 트랜잭션의 격리 수준이 유지 됩니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)">
          <source>This can produce unexpected results, such as an isolation level of REPEATABLE READ persisting and locking other users out of a row.</source>
          <target state="translated">유지 하 고 다른 사용자가 행 잠금 REPEATABLE READ 격리 수준이 같은 예상치 못한 결과가 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)">
          <source>To reset the isolation level to the default (READ COMMITTED), execute the <ph id="ph1">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph> SET TRANSACTION ISOLATION LEVEL READ COMMITTED statement, or call <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A?displayProperty=nameWithType&gt;</ph> followed immediately by <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">격리 수준 (READ COMMITTED) 기본값으로 다시 설정, 실행의 <ph id="ph1">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph> 트랜잭션 격리 수준 READ COMMITTED 설정 문 또는 호출 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A?displayProperty=nameWithType&gt;</ph> 즉시 올 <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)">
          <source>For more information on SQL Server isolation levels, see "Isolation Levels in the Database Engine" in SQL Server Books Online.</source>
          <target state="translated">SQL Server 격리 수준에 대 한 자세한 내용은 "격리 수준에서" 데이터베이스 엔진의 SQL Server 온라인 설명서를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)">
          <source>For more information on SQL Server transactions, see "Explicit Transactions" and "Coding Efficient Transactions" in SQL Server Books Online.</source>
          <target state="translated">SQL Server 트랜잭션에 대 한 자세한 내용은 "명시적 트랜잭션" 및 SQL Server 온라인 설명서의 "효율적인 트랜잭션 코딩"를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)">
          <source>When your query returns a large amount of data and calls <ph id="ph1">`BeginTransaction`</ph>, a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlException&gt;</ph> is thrown because SQL Server does not allow parallel transactions when using MARS.</source>
          <target state="translated">쿼리가 많은 양의 데이터 및 호출을 반환 하는 경우 <ph id="ph1">`BeginTransaction`</ph>, <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlException&gt;</ph> SQL Server에서 MARS를 사용 하는 경우 병렬 트랜잭션은 허용 되지 않으므로 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)">
          <source>To avoid this problem, always associate a transaction with the command, the connection, or both before any readers are open.</source>
          <target state="translated">이 문제를 방지 하려면 항상 트랜잭션을와 연결 명령, 연결, 또는 둘 다 판독기를 열기 전에 합니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> and a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)">
          <source>It also demonstrates how to use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph>, a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> methods.</source>
          <target state="translated">사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)">
          <source>Parallel transactions are not allowed when using Multiple Active Result Sets (MARS).</source>
          <target state="translated">MARS(Multiple Active Result Sets)를 사용하는 경우 병렬 트랜잭션은 허용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)">
          <source>Parallel transactions are not supported.</source>
          <target state="translated">병렬 트랜잭션은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.ChangeDatabase(System.String)">
          <source>The name of the database to use instead of the current database.</source>
          <target state="translated">현재 데이터베이스 대신 사용할 데이터베이스의 이름입니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.ChangeDatabase(System.String)">
          <source>Changes the current database for an open <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>.</source>
          <target state="translated">열려 있는 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>의 현재 데이터베이스를 변경합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.ChangeDatabase(System.String)">
          <source>The value supplied in the <ph id="ph1">`database`</ph> parameter must be a valid database name.</source>
          <target state="translated">제공 된 값이 고 <ph id="ph1">`database`</ph> 매개 변수는 올바른 데이터베이스 이름 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.ChangeDatabase(System.String)">
          <source>The <ph id="ph1">`database`</ph> parameter cannot contain a null value, an empty string, or a string with only blank characters.</source>
          <target state="translated"><ph id="ph1">`database`</ph> 매개 변수는 null 값, 빈 문자열 또는 공백 문자로 이루어진 문자열에 포함할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.ChangeDatabase(System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> and displays some of its read-only properties.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> 고 읽기 전용 속성 중 일부를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.ChangeDatabase(System.String)">
          <source>The database name is not valid.</source>
          <target state="translated">데이터베이스 이름이 올바르지 않은 경우</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.ChangeDatabase(System.String)">
          <source>The connection is not open.</source>
          <target state="translated">연결이 열려 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.ChangeDatabase(System.String)">
          <source>Cannot change the database.</source>
          <target state="translated">데이터베이스를 변경할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlConnection">
          <source>Changes the SQL Server password.</source>
          <target state="translated">SQL Server 암호를 변경합니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)">
          <source>The connection string that contains enough information to connect to the server that you want.</source>
          <target state="translated">원하는 서버에 연결하는 데 충분한 정보가 포함된 연결 문자열입니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)">
          <source>The connection string must contain the user ID and the current password.</source>
          <target state="translated">연결 문자열은 사용자 ID와 현재 암호를 포함해야 합니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)">
          <source>The new password to set.</source>
          <target state="translated">설정할 새 암호입니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)">
          <source>This password must comply with any password security policy set on the server, including minimum length, requirements for specific characters, and so on.</source>
          <target state="translated">이 암호는 서버에 설정된 최소 길이, 특정 문자 요구 사항 등의 암호 보안 정책을 따라야 합니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)">
          <source>Changes the SQL Server password for the user indicated in the connection string to the supplied new password.</source>
          <target state="translated">연결 문자열에 지정된 사용자의 SQL Server 암호를 제공된 새 암호로 변경합니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)">
          <source>When you are using SQL Server on Windows Server, developers can take advantage of functionality that lets the client application supply both the current and a new password in order to change the existing password.</source>
          <target state="translated">SQL Server를 Windows Server에서 사용 하는 경우 개발자 기존 암호를 변경 하기 위해 현재 데이터베이스와 새 암호를 제공 하는 클라이언트 응용 프로그램 수 있는 기능을 이용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)">
          <source>Applications can implement functionality such as prompting the user for a new password during initial login if the old one has expired, and this operation can be completed without administrator intervention.</source>
          <target state="translated">응용 프로그램 이전 기간이 만료 되 고 관리자의 개입 없이이 작업을 완료할 수 초기 로그인 하는 동안 새 암호를 사용자에 게 확인 하는 등의 기능을 구현할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ChangePassword%2A&gt;</ph> method changes the SQL Server password for the user indicated in the supplied <ph id="ph2">`connectionString`</ph> parameter to the value supplied in the <ph id="ph3">`newPassword`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ChangePassword%2A&gt;</ph> 메서드는 제공 된 변수에 지정 된 사용자에 대 한 SQL Server 암호 변경 <ph id="ph2">`connectionString`</ph> 에 제공 된 값으로 매개 변수는 <ph id="ph3">`newPassword`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)">
          <source>If the connection string includes the option for integrated security (that is, "Integrated Security=True" or the equivalent), an exception is thrown.</source>
          <target state="translated">연결 문자열 통합된 보안에 대 한 옵션을 포함 하는 경우 (즉, "통합된 보안 = True" 또는 해당), 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)">
          <source>To determine that the password has expired, calling the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Open%2A&gt;</ph> method raises a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlException&gt;</ph>.</source>
          <target state="translated">호출 암호가 만료 되었음을 확인 하는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Open%2A&gt;</ph> 메서드 발생 한 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)">
          <source>In order to indicate that the password that is contained within the connection string must be reset, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlException.Number%2A&gt;</ph> property for the exception contains the status value 18487 or 18488.</source>
          <target state="translated">연결 문자열 내에 포함 된 암호를 재설정 해야를 표시 하기 위해는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlException.Number%2A&gt;</ph> 속성 예외에 대 한 상태 값 18487 또는 18488이 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)">
          <source>The first value (18487) indicates that the password has expired and the second (18488) indicates that the password must be reset before logging in.</source>
          <target state="translated">첫 번째 값 (18487) 암호가 만료 된 암호 로그인 하기 전에 다시 설정 해야 합니다 (18488) 두 번째 나타냅니다 나타냅니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)">
          <source>This method opens its own connection to the server, requests the password change, and closes the connection as soon as it has completed.</source>
          <target state="translated">이 메서드는 서버에 자체 연결을 엽니다, 그리고 암호 변경 요청 및 완료 되는 즉시 연결을 닫습니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)">
          <source>This connection is not retrieved from, nor returned to, the SQL Server connection pool.</source>
          <target state="translated">이 연결에서 검색 되지 않았거나, SQL Server 연결 풀으로 반환 합니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)">
          <source>The following is a simple example of changing a password:</source>
          <target state="translated">다음은 간단한 예제 암호 변경입니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)">
          <source>The following console application demonstrates the issues involved in changing a user's password because the current password has expired.</source>
          <target state="translated">다음 콘솔 응용 프로그램의 현재 암호 만료 되었기 때문에 사용자의 암호를 변경 하는 것과 관련 된 문제를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)">
          <source>The connection string includes the option to use integrated security.</source>
          <target state="translated">연결 문자열에 통합 보안을 사용할 수 있는 옵션이 포함된 경우</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)">
          <source>Or</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="newPassword" /&gt;</ph> exceeds 128 characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="newPassword" /&gt;</ph>가 128자를 초과합니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)">
          <source>Either the <ph id="ph1">&lt;paramref name="connectionString" /&gt;</ph> or the <ph id="ph2">&lt;paramref name="newPassword" /&gt;</ph> parameter is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="connectionString" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="newPassword" /&gt;</ph> 매개 변수가 null인 경우</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.Data.SqlClient.SqlCredential,System.Security.SecureString)">
          <source>The connection string that contains enough information to connect to a server.</source>
          <target state="translated">서버에 연결하는 데 충분한 정보가 포함된 연결 문자열입니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.Data.SqlClient.SqlCredential,System.Security.SecureString)">
          <source>The connection string should not use any of the following connection string keywords: <ph id="ph1">&lt;see langword="Integrated Security = true" /&gt;</ph>, <ph id="ph2">&lt;see langword="UserId" /&gt;</ph>, or <ph id="ph3">&lt;see langword="Password" /&gt;</ph>; or <ph id="ph4">&lt;see langword="ContextConnection = true" /&gt;</ph>.</source>
          <target state="translated">연결 문자열에서는 <ph id="ph1">&lt;see langword="Integrated Security = true" /&gt;</ph>, <ph id="ph2">&lt;see langword="UserId" /&gt;</ph>, or <ph id="ph3">&lt;see langword="Password" /&gt;</ph> 또는 <ph id="ph4">&lt;see langword="ContextConnection = true" /&gt;</ph> 연결 문자열 키워드 중 하나를 사용해서는 안 됩니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.Data.SqlClient.SqlCredential,System.Security.SecureString)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCredential" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCredential" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.Data.SqlClient.SqlCredential,System.Security.SecureString)">
          <source>The new password.</source>
          <target state="translated">새 암호입니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.Data.SqlClient.SqlCredential,System.Security.SecureString)">
          <source><bpt id="p1">&lt;c&gt;</bpt>newSecurePassword<ept id="p1">&lt;/c&gt;</ept> must be read only.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>newSecurePassword<ept id="p1">&lt;/c&gt;</ept>는 읽기 전용이어야 합니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.Data.SqlClient.SqlCredential,System.Security.SecureString)">
          <source>The password must also comply with any password security policy set on the server (for example, minimum length and requirements for specific characters).</source>
          <target state="translated">암호는 서버에 설정된 최소 길이, 특정 문자 요구 사항 등의 암호 보안 정책도 따라야 합니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.Data.SqlClient.SqlCredential,System.Security.SecureString)">
          <source>Changes the SQL Server password for the user indicated in the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCredential" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCredential" /&gt;</ph> 개체에 지정된 사용자에 대한 SQL Server 암호를 변경합니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.Data.SqlClient.SqlCredential,System.Security.SecureString)">
          <source>The connection string contains any combination of <ph id="ph1">&lt;see langword="UserId" /&gt;</ph>, <ph id="ph2">&lt;see langword="Password" /&gt;</ph>, or <ph id="ph3">&lt;see langword="Integrated Security=true" /&gt;</ph>.</source>
          <target state="translated">연결 문자열에 <ph id="ph1">&lt;see langword="UserId" /&gt;</ph>, <ph id="ph2">&lt;see langword="Password" /&gt;</ph> 또는 <ph id="ph3">&lt;see langword="Integrated Security=true" /&gt;</ph>의 조합이 있습니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.Data.SqlClient.SqlCredential,System.Security.SecureString)">
          <source>The connection string contains <ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph>.</source>
          <target state="translated">연결 문자열에 <ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph>가 포함된 경우</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.Data.SqlClient.SqlCredential,System.Security.SecureString)">
          <source><ph id="ph1">&lt;paramref name="newSecurePassword" /&gt;</ph> is greater than 128 characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="newSecurePassword" /&gt;</ph>가 128자보다 긴 경우</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.Data.SqlClient.SqlCredential,System.Security.SecureString)">
          <source><ph id="ph1">&lt;paramref name="newSecurePassword" /&gt;</ph> is not read only.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="newSecurePassword" /&gt;</ph>가 읽기 전용이 아닙니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.Data.SqlClient.SqlCredential,System.Security.SecureString)">
          <source><ph id="ph1">&lt;paramref name="newSecurePassword" /&gt;</ph> is an empty string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="newSecurePassword" /&gt;</ph>이 빈 문자열인 경우</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.Data.SqlClient.SqlCredential,System.Security.SecureString)">
          <source>One of the parameters (<ph id="ph1">&lt;paramref name="connectionString" /&gt;</ph>, <ph id="ph2">&lt;paramref name="credential" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="newSecurePassword" /&gt;</ph>) is null.</source>
          <target state="translated">매개 변수(<ph id="ph1">&lt;paramref name="connectionString" /&gt;</ph>, <ph id="ph2">&lt;paramref name="credential" /&gt;</ph> 또는 <ph id="ph3">&lt;paramref name="newSecurePassword" /&gt;</ph>) 중 하나가 null인 경우</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.ClearAllPools">
          <source>Empties the connection pool.</source>
          <target state="translated">연결 풀을 비웁니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.ClearAllPools">
          <source><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ClearAllPools%2A&gt;</ph> resets (or empties) the connection pool.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ClearAllPools%2A&gt;</ph> 다시 설정 하거나 비웁니다 연결 풀.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.ClearAllPools">
          <source>If there are connections in use at the time of the call, they are marked appropriately and will be discarded (instead of being returned to the pool) when <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Close%2A&gt;</ph> is called on them.</source>
          <target state="translated">메서드를 호출할 때에서 사용 중인 연결 되어 있는 경우 적절 하 게 표시 되 고 (풀으로 반환 되 고) 대신 때 삭제 됩니다 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Close%2A&gt;</ph> 가 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.ClearPool(System.Data.SqlClient.SqlConnection)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> to be cleared from the pool.</source>
          <target state="translated">풀에서 지울 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.ClearPool(System.Data.SqlClient.SqlConnection)">
          <source>Empties the connection pool associated with the specified connection.</source>
          <target state="translated">지정된 연결과 관련된 연결 풀을 비웁니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.ClearPool(System.Data.SqlClient.SqlConnection)">
          <source><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ClearPool%2A&gt;</ph> clears the connection pool that is associated with the <ph id="ph2">`connection`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ClearPool%2A&gt;</ph> 연관 된 연결 풀 지웁니다는 <ph id="ph2">`connection`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.ClearPool(System.Data.SqlClient.SqlConnection)">
          <source>If additional connections associated with <ph id="ph1">`connection`</ph> are in use at the time of the call, they are marked appropriately and are discarded (instead of being returned to the pool) when <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.Close%2A&gt;</ph> is called on them.</source>
          <target state="translated">추가 연결에 연결 된 경우 <ph id="ph1">`connection`</ph> 는 메서드를 호출할 때에서 사용 중인, 표시 되 적절 하 게 고 될 때 (풀으로 반환 되 고) 대신 삭제 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.Close%2A&gt;</ph> 가 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlConnection.ClientConnectionId">
          <source>The connection ID of the most recent connection attempt, regardless of whether the attempt succeeded or failed.</source>
          <target state="translated">연결 시도 성공 또는 실패 여부와 관계없이 가장 최근에 연결 시도된 연결 ID입니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ClientConnectionId">
          <source>The connection ID of the most recent connection attempt.</source>
          <target state="translated">가장 최근에 연결 시도된 연결 ID입니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ClientConnectionId">
          <source><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ClientConnectionId%2A&gt;</ph> works regardless of which version of the server you connect to, but extended events logs and entry on connectivity ring buffer errors will not be present in <ph id="ph2">[!INCLUDE[sskatmai_r2](~/includes/sskatmai-r2-md.md)]</ph> and earlier.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ClientConnectionId%2A&gt;</ph> 연결 하는 서버의 버전에 관계 없이 작동 되지만 확장된 이벤트 로그 및 연결 링 버퍼 오류에 대 한 항목 수에 <ph id="ph2">[!INCLUDE[sskatmai_r2](~/includes/sskatmai-r2-md.md)]</ph> 및 이전 버전입니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ClientConnectionId">
          <source>You can locate the connection ID in the extended events log to see if the failure was on the server if the extended event for logging connection ID is enabled.</source>
          <target state="translated">연결 ID를 기록 하기 위한 확장된 이벤트가 사용 된 경우 서버에서 실패가 발생 하는 경우를 확인 하려면 확장된 이벤트 로그에서 연결 ID를 찾을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ClientConnectionId">
          <source>You can also locate the connection ID in the connection ring buffer (<bpt id="p1">[</bpt>Connectivity troubleshooting in SQL Server 2008 with the Connectivity Ring Buffer<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=207752)</ept>) for certain connection errors.</source>
          <target state="translated">연결 링 버퍼에서 연결 ID를 찾을 수도 있습니다 (<bpt id="p1">[</bpt>연결 링 버퍼를 사용 하 여 SQL Server 2008의 연결 문제 해결<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=207752)</ept>) 특정 연결 오류입니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ClientConnectionId">
          <source>If the connection ID is not in the connection ring buffer, you can assume a network error.</source>
          <target state="translated">연결 ID 연결 링 버퍼에 없는 경우에 네트워크 오류를 가정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.Close">
          <source>Closes the connection to the database.</source>
          <target state="translated">데이터베이스에 대한 연결을 닫습니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.Close">
          <source>This is the preferred method of closing any open connection.</source>
          <target state="translated">열린 연결을 닫기 위해 기본적으로 이 메서드를 사용합니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.Close">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Close%2A&gt;</ph> method rolls back any pending transactions.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Close%2A&gt;</ph> 메서드 보류 중인 트랜잭션을 모두 롤백합니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.Close">
          <source>It then releases the connection to the connection pool, or closes the connection if connection pooling is disabled.</source>
          <target state="translated">그런 다음 연결 풀에 대 한 연결을 해제 하거나 연결 풀링을 사용 하지 않도록 설정 하는 경우 연결을 닫습니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.Close">
          <source>Pending transactions started using <ph id="ph1">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph> are automatically rolled back when the connection is reset if connection pooling is enabled.</source>
          <target state="translated">보류 중인 트랜잭션을 사용 하 여 시작 <ph id="ph1">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph> 또는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph> 연결 풀링을 사용 하는 경우 해당 연결을 다시 때 자동으로 롤백됩니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.Close">
          <source>If connection pooling is off, the transaction is rolled back after <ph id="ph1">`SqlConnection.Close`</ph> is called.</source>
          <target state="translated">연결 풀링이 해제 되어 있으면 트랜잭션이 다시 후 <ph id="ph1">`SqlConnection.Close`</ph> 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.Close">
          <source>Transactions started through <ph id="ph1">&lt;xref:System.Transactions&gt;</ph> are controlled through the <ph id="ph2">`System.Transactions`</ph> infrastructure, and are not affected by <ph id="ph3">`SqlConnection.Close`</ph>.</source>
          <target state="translated">통해 시작 된 트랜잭션은 <ph id="ph1">&lt;xref:System.Transactions&gt;</ph> 를 통해 제어 되는 <ph id="ph2">`System.Transactions`</ph> 인프라 영향을 받지 <ph id="ph3">`SqlConnection.Close`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.Close">
          <source>An application can call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Close%2A&gt;</ph> more than one time.</source>
          <target state="translated">응용 프로그램에서 호출할 수 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Close%2A&gt;</ph> 한 번 이상.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.Close">
          <source>No exception is generated.</source>
          <target state="translated">예외가 생성 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.Close">
          <source>If the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> goes out of scope, it won't be closed.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> 늘어나고의 범위를 닫을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.Close">
          <source>Therefore, you must explicitly close the connection by calling <ph id="ph1">`Close`</ph> or <ph id="ph2">`Dispose`</ph>.</source>
          <target state="translated">따라서 명시적으로 닫아야 연결 호출 하 여 <ph id="ph1">`Close`</ph> 또는 <ph id="ph2">`Dispose`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.Close">
          <source><ph id="ph1">`Close`</ph> and <ph id="ph2">`Dispose`</ph> are functionally equivalent.</source>
          <target state="translated"><ph id="ph1">`Close`</ph> 및 <ph id="ph2">`Dispose`</ph> 기능적으로 동일 합니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.Close">
          <source>If the connection pooling value <ph id="ph1">`Pooling`</ph> is set to <ph id="ph2">`true`</ph> or <ph id="ph3">`yes`</ph>, the underlying connection is returned back to the connection pool.</source>
          <target state="translated">연결 풀링 값 경우 <ph id="ph1">`Pooling`</ph> 로 설정 된 <ph id="ph2">`true`</ph> 또는 <ph id="ph3">`yes`</ph>, 기본 연결이 연결 풀으로 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.Close">
          <source>On the other hand, if <ph id="ph1">`Pooling`</ph> is set to <ph id="ph2">`false`</ph> or <ph id="ph3">`no`</ph>, the underlying connection to the server is closed.</source>
          <target state="translated">반면에 경우 <ph id="ph1">`Pooling`</ph> 로 설정 된 <ph id="ph2">`false`</ph> 또는 <ph id="ph3">`no`</ph>, 기본 서버에 대 한 연결이 닫힙니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.Close">
          <source>Login and logout events will not be raised on the server when a connection is fetched from or returned to the connection pool, because the connection is not actually closed when it is returned to the connection pool.</source>
          <target state="translated">연결이 연결 풀에서 반환될 경우에는 실제로 해제된 것이 아니므로 연결이 연결 풀에서 반입되거나 연결 풀로 반환되는 경우 서버에서 로그인 및 로그아웃 이벤트가 발생하지 않습니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.Close">
          <source>For more information, see <bpt id="p1">[</bpt>SQL Server Connection Pooling (ADO.NET)<ept id="p1">](~/docs/framework/data/adonet/sql-server-connection-pooling.md)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>SQL Server 연결 풀링(ADO.NET)<ept id="p1">](~/docs/framework/data/adonet/sql-server-connection-pooling.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.Close">
          <source>Do not call <ph id="ph1">`Close`</ph> or <ph id="ph2">`Dispose`</ph> on a Connection, a DataReader, or any other managed object in the <ph id="ph3">`Finalize`</ph> method of your class.</source>
          <target state="translated">호출 하지 마십시오 <ph id="ph1">`Close`</ph> 또는 <ph id="ph2">`Dispose`</ph> 연결, DataReader, 또는 다른 관리 개체에는 <ph id="ph3">`Finalize`</ph> 클래스의 메서드로 합니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.Close">
          <source>In a finalizer, you should only release unmanaged resources that your class owns directly.</source>
          <target state="translated">종료자에서만 클래스에 직접 속한 관리 되지 않는 리소스를 해제 해야 합니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.Close">
          <source>If your class does not own any unmanaged resources, do not include a <ph id="ph1">`Finalize`</ph> method in your class definition.</source>
          <target state="translated">클래스에 관리되지 않는 리소스가 없는 경우 클래스 정의에 <ph id="ph1">`Finalize`</ph> 메서드를 포함하지 마세요.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.Close">
          <source>For more information, see <bpt id="p1">[</bpt>Garbage Collection<ept id="p1">](http://msdn.microsoft.com/library/22b6cb97-0c80-4eeb-a2cf-5ed7655e37f9)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>가비지 수집<ept id="p1">](http://msdn.microsoft.com/library/22b6cb97-0c80-4eeb-a2cf-5ed7655e37f9)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.Close">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>, opens it, displays some of its properties.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>, 열, 해당 속성의 일부를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.Close">
          <source>The connection is automatically closed at the end of the <ph id="ph1">`using`</ph> block.</source>
          <target state="translated">연결의 끝에 자동으로 닫혀는 <ph id="ph1">`using`</ph> 블록입니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.Close">
          <source>The connection-level error that occurred while opening the connection.</source>
          <target state="translated">연결을 여는 동안 발생한 연결 수준 오류입니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlConnection.ColumnEncryptionKeyCacheTtl">
          <source>Gets or sets the time-to-live for column encryption key entries in the column encryption key cache for the <bpt id="p1">[</bpt>Always Encrypted<ept id="p1">](/sql/relational-databases/security/encryption/always-encrypted-database-engine)</ept> feature.</source>
          <target state="translated"><bpt id="p1">[</bpt>항상 암호화<ept id="p1">](/sql/relational-databases/security/encryption/always-encrypted-database-engine)</ept> 기능에 대한 열 암호화 키 캐시에 있는 열 암호화 키 항목에 대한 Time-To-Live를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlConnection.ColumnEncryptionKeyCacheTtl">
          <source>The default value is 2 hours.</source>
          <target state="translated">기본값은 2시간입니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlConnection.ColumnEncryptionKeyCacheTtl">
          <source>0 means no caching at all.</source>
          <target state="translated">0은 캐싱이 전혀 수행되지 않음을 의미합니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ColumnEncryptionKeyCacheTtl">
          <source>The time interval.</source>
          <target state="translated">시간 간격입니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled">
          <source>Gets or sets a value that indicates whether query metadata caching is enabled (true) or not (false) for parameterized queries running against <bpt id="p1">[</bpt>Always Encrypted<ept id="p1">](/sql/relational-databases/security/encryption/always-encrypted-database-engine)</ept> enabled databases.</source>
          <target state="translated"><bpt id="p1">[</bpt>항상 암호화<ept id="p1">](/sql/relational-databases/security/encryption/always-encrypted-database-engine)</ept>가 설정된 데이터베이스에 대해 실행되는 매개 변수가 있는 쿼리에 대해 쿼리 메타데이터 캐싱이 사용되도록 설정(true)되는지 또는 사용되지 않도록 설정(false)되는지를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled">
          <source>The default value is true.</source>
          <target state="translated">기본값은 true입니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled">
          <source>Returns true if query metadata caching is enabled; otherwise false.</source>
          <target state="translated">쿼리 메타데이터 캐싱이 사용되도록 설정되면 true이고, 그렇지 않으면 false입니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled">
          <source>true is the default.</source>
          <target state="translated">기본값은 true입니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled">
          <source>For parameterized queries, SqlClient makes a roundtrip to SQL Server for parameter metadata, to see which parameter it needs to encrypt and how (which keys and algorithms should be used).</source>
          <target state="translated">매개 변수가 있는 쿼리에 대 한 SqlClient 왕복 SQL Server에 매개 변수 메타 데이터에 대 한 참조 되는 매개 변수를 암호화 해야 하 고 어떻게 (어떤 키 및 알고리즘을 사용 가능 해야) 합니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled">
          <source>If the application calls the same query multiple times, an extra roundtrip is made to the server each time, which degrades application performance.</source>
          <target state="translated">동일한 쿼리를 여러 번 호출 하는 응용 프로그램을 하는 경우에 응용 프로그램 성능이 저하 됩니다 때마다도 서버에 대 한 추가 왕복 수행 됩니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled">
          <source>With <bpt id="p1">**</bpt>ColumnEncryptionQueryMetadataCacheEnabled<ept id="p1">**</ept> set to true, if the same query is called multiple times, the roundtrip to the server will be made only once.</source>
          <target state="translated">와 <bpt id="p1">**</bpt>ColumnEncryptionQueryMetadataCacheEnabled<ept id="p1">**</ept> 동일한 쿼리를 여러 번 호출 되는 경우 true로 설정 하 고, 서버에 왕복 걸 수 한 번만 합니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled">
          <source>The cache has a non-configurable Max size parameter that is set to 2000 queries.</source>
          <target state="translated">캐시에는 구성할 수 없는 최대 크기 매개 변수를 2000 쿼리로 설정 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlConnection.ColumnEncryptionTrustedMasterKeyPaths">
          <source>Allows you to set a list of trusted key paths for a database server.</source>
          <target state="translated">데이터베이스 서버에 대한 신뢰할 수 있는 키 경로 목록을 설정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlConnection.ColumnEncryptionTrustedMasterKeyPaths">
          <source>If while processing an application query the driver receives a key path that is not on the list, the query will fail.</source>
          <target state="translated">응용 프로그램 쿼리를 처리하는 동안 드라이버가 목록에 없는 키 경로를 수신하면 쿼리가 실패합니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlConnection.ColumnEncryptionTrustedMasterKeyPaths">
          <source>This property provides additional protection against security attacks that involve a compromised SQL Server providing fake key paths, which may lead to leaking key store credentials.</source>
          <target state="translated">이 속성은 손상된 SQL Server가 가짜 키 경로를 제공하여 키 저장소 자격 증명이 누출되게 하는 보안 공격에 대해 추가적인 보호를 제공합니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ColumnEncryptionTrustedMasterKeyPaths">
          <source>The list of trusted master key paths for the column encryption.</source>
          <target state="translated">열 암호화를 위한 신뢰할 수 있는 마스터 키 경로의 목록입니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>Gets or sets the string used to open a SQL Server database.</source>
          <target state="translated">SQL Server 데이터베이스를 여는 데 사용되는 문자열을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>The connection string that includes the source database name, and other parameters needed to establish the initial connection.</source>
          <target state="translated">초기 연결을 설정하는 데 필요한 소스 데이터베이스 이름 및 다른 매개 변수를 포함하는 연결 문자열입니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>The default value is an empty string.</source>
          <target state="translated">기본값은 빈 문자열입니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph> is similar to an OLE DB connection string, but is not identical.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph> OLE DB 연결 문자열을 유사 하지만 일치 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>Unlike OLE DB or ADO, the connection string that is returned is the same as the user-set <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph>, minus security information if the Persist Security Info value is set to <ph id="ph2">`false`</ph> (default).</source>
          <target state="translated">반환 되는 연결 문자열은 사용자가 설정한 동일 OLE DB 또는 ADO와 달리 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph>, Persist Security Info 값으로 설정 되는 경우 보안 정보에서 뺀 <ph id="ph2">`false`</ph> (기본값).</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>The .NET Framework Data Provider for SQL Server does not persist or return the password in a connection string unless you set Persist Security Info to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">.NET Framework Data Provider for SQL Server를 유지 하지 않거나 보안 정보 유지를 설정 하지 않으면 연결 문자열에 암호를 반환 <ph id="ph1">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>You can use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph> property to connect to a database.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph> 속성을 데이터베이스에 연결 합니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>The following example illustrates a typical connection string.</source>
          <target state="translated">다음 예제에서는 일반적인 연결 문자열을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>Use the new <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnectionStringBuilder&gt;</ph> to construct valid connection strings at run time.</source>
          <target state="translated">새로운 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnectionStringBuilder&gt;</ph> 를 런타임에 유효한 연결 문자열을 생성 합니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>For more information, see <bpt id="p1">[</bpt>Connection String Builders<ept id="p1">](~/docs/framework/data/adonet/connection-string-builders.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>연결 문자열 작성기<ept id="p1">](~/docs/framework/data/adonet/connection-string-builders.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph> property can be set only when the connection is closed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph> 연결이 닫힌 경우에 속성을 설정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>Many of the connection string values have corresponding read-only properties.</source>
          <target state="translated">연결 문자열 값의 대부분에 해당 읽기 전용 속성입니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>When the connection string is set, these properties are updated, except when an error is detected.</source>
          <target state="translated">연결 문자열 설정 되 면 오류가 검색 될 경우를 제외 하 고 이러한 속성 업데이트 됩니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>In this case, none of the properties are updated.</source>
          <target state="translated">이 경우 어떤 속성도 업데이트 됩니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> properties return only those settings that are contained in the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> 속성에 포함 된 설정만 반환는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>To connect to a local computer, specify "(local)" for the server.</source>
          <target state="translated">를 로컬 컴퓨터에 연결 하려면 서버에 대 한 "(local)"을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>If a server name is not specified, a connection will be attempted to the default instance on the local computer.</source>
          <target state="translated">서버 이름을 지정 하지 않으면 로컬 컴퓨터의 기본 인스턴스에 대 한 연결을 시도 합니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>Resetting the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph> on a closed connection resets all connection string values (and related properties) including the password.</source>
          <target state="translated">다시 설정 하 여 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph> 닫힌된 연결에 암호가 포함 되는 모든 연결 문자열 값 (및 관련된 속성)을 기본값으로 다시 설정 합니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>For example, if you set a connection string that includes "Database= AdventureWorks", and then reset the connection string to "Data Source=myserver;Integrated Security=true", the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Database%2A&gt;</ph> property is no longer set to "AdventureWorks".</source>
          <target state="translated">예를 들어, 포함 된 연결 문자열을 설정 하는 경우 "데이터베이스 = AdventureWorks", 다음 연결 문자열을 다시 설정 하 고 "데이터 원본 = myserver; 통합된 보안 = true", <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Database%2A&gt;</ph> 속성이 더 이상 "AdventureWorks"로 설정 합니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>The connection string is parsed immediately after being set.</source>
          <target state="translated">설정 된 후 바로 연결 문자열 구문 분석 됩니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>If errors in syntax are found when parsing, a runtime exception, such as <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>, is generated.</source>
          <target state="translated">구문 분석할 때, 런타임 예외와 같은 구문에서 오류가 발견 되 면 <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>, 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>Other errors can be found only when an attempt is made to open the connection.</source>
          <target state="translated">연결 설정 하려고 시도 하는 경우에 다른 오류를 찾을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>The basic format of a connection string includes a series of keyword/value pairs separated by semicolons.</source>
          <target state="translated">연결 문자열의 기본 형식은 일련의 세미콜론으로 구분 하는 키워드/값 쌍을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>The equal sign (=) connects each keyword and its value.</source>
          <target state="translated">각 키워드와 해당 값은 등호(=)로 연결됩니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>To include values that contain a semicolon, single-quote character, or double-quote character, the value must be enclosed in double quotation marks.</source>
          <target state="translated">세미콜론, 작은따옴표 문자 또는 큰따옴표를 포함 하는 값에 포함 하려면 값을 큰따옴표로 묶어야 합니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>If the value contains both a semicolon and a double-quote character, the value can be enclosed in single quotation marks.</source>
          <target state="translated">세미콜론과 큰따옴표 문자를 모두 포함 된 값을 작은따옴표로 값을 묶을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>The single quotation mark is also useful if the value starts with a double-quote character.</source>
          <target state="translated">작은따옴표 값 큰따옴표 문자로 시작 하는 경우 도움이 됩니다.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>Conversely, the double quotation mark can be used if the value starts with a single quotation mark.</source>
          <target state="translated">반대로 값 시작 작은따옴표와 큰따옴표를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>If the value contains both single-quote and double-quote characters, the quotation mark character used to enclose the value must be doubled every time it occurs within the value.</source>
          <target state="translated">작은따옴표 및 큰따옴표 문자를 모두 포함 된 값, 값을 포함 하는 데 사용 하는 인용 부호 문자 값 내에서 발생할 때마다 배가 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>To include preceding or trailing spaces in the string value, the value must be enclosed in either single quotation marks or double quotation marks.</source>
          <target state="translated">문자열 값에 선행 또는 후행 공백을 포함 하려면 값 작은따옴표 또는 큰따옴표로 묶어야 합니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>Any leading or trailing spaces around integer, Boolean, or enumerated values are ignored, even if enclosed in quotation marks.</source>
          <target state="translated">따옴표에 포함 하는 경우에 정수, 부울 또는 열거 값 주위 선행 또는 후행 공백은 모두 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>However, spaces within a string literal keyword or value are preserved.</source>
          <target state="translated">그러나 문자열 리터럴 키워드 또는 값 내에 공백이 유지 됩니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>Single or double quotation marks may be used within a connection string without using delimiters (for example, Data Source= my'Server or Data Source= my"Server), unless a quotation mark character is the first or last character in the value.</source>
          <target state="translated">구분 기호를 사용 하지 않고 연결 문자열에서 작은따옴표 또는 큰따옴표를 사용할 수 있습니다 (예를 들어 데이터 원본 = my'Server 또는 데이터 원본 내 "Server =), 인용 부호 문자 값의 첫 번째 또는 마지막 문자는 하지 않는 한 합니다.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>Keywords are not case sensitive.</source>
          <target state="translated">키워드는 대/소문자 구분 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>The following table lists the valid names for keyword values within the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph>.</source>
          <target state="translated">다음 표에서 키워드 값 내에서 유효한 이름을 표시는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>The following list contains the valid names for connection pooling values within the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph>.</source>
          <target state="translated">다음 목록에는 연결 풀링 내 값의 유효한 이름이 포함 된 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>For more information, see <bpt id="p1">[</bpt>SQL Server Connection Pooling (ADO.NET)<ept id="p1">](~/docs/framework/data/adonet/sql-server-connection-pooling.md)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>SQL Server 연결 풀링(ADO.NET)<ept id="p1">](~/docs/framework/data/adonet/sql-server-connection-pooling.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>Connection Lifetime (or Load Balance Timeout)</source>
          <target state="translated">연결 수명 (또는 Load Balance Timeout)</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>Enlist</source>
          <target state="translated">Enlist</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>Max Pool Size</source>
          <target state="translated">Max Pool Size</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>Min Pool Size</source>
          <target state="translated">Min Pool Size</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>Pooling</source>
          <target state="translated">Pooling</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>When you are setting keyword or connection pooling values that require a Boolean value, you can use 'yes' instead of 'true', and 'no' instead of 'false'.</source>
          <target state="translated">키워드 또는 연결 풀링 부울 값을 필요로 하는 값을 설정 하는 경우 'true' 및 'false' 대신 ' 아니요' 대신 '예' 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>Integer values are represented as strings.</source>
          <target state="translated">정수 값은 문자열로 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>The .NET Framework Data Provider for SQL Server uses its own protocol to communicate with SQL Server.</source>
          <target state="translated">.NET Framework Data Provider for SQL Server SQL Server와 통신 하는 자체 프로토콜을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>Therefore, it does not support the use of an ODBC data source name (DSN) when connecting to SQL Server because it does not add an ODBC layer.</source>
          <target state="translated">따라서 것 지원 하지 않습니다는 ODBC 데이터 원본 이름 (DSN)의 사용은 ODBC 계층을 추가 하지 않기 때문에 SQL Server에 연결할 때.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>Universal data link (UDL) files are not supported for the .NET Framework Data Provider for SQL Server.</source>
          <target state="translated">유니버설 데이터 링크 (UDL) 파일에 대 한.NET Framework Data Provider for SQL Server 지원 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>In this release, the application should use caution when constructing a connection string based on user input (for example when retrieving user ID and password information from a dialog box, and appending it to the connection string).</source>
          <target state="translated">이 릴리스에서 사용자 입력 (예: 연결 문자열에 추가 하는 대화 상자에서 사용자 ID와 암호 정보를 검색할 때)에 따라 연결 문자열을 구성할 때 응용 프로그램 주의 기울여야 합니다.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>The application should make sure that a user cannot embed additional connection string parameters in these values (for example, entering a password as "validpassword;database=somedb" in an attempt to attach to a different database).</source>
          <target state="translated">응용 프로그램 해야 사용자가 이러한 값에 추가 연결 문자열 매개 변수를 포함할 수 없습니다 (예를 들어로 암호를 입력 "에서는 데이터베이스 수 없도록" 다른 데이터베이스에 연결 하기 위해).</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>If you need to construct connection strings based on user input, use the new <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnectionStringBuilder&gt;</ph>, which validates the connection string and helps to eliminate this problem.</source>
          <target state="translated">사용자 입력에 따라 연결 문자열을 생성 해야 할 경우 사용 하 여 새 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnectionStringBuilder&gt;</ph>, 연결 문자열의 유효성을 검사 하 고이 문제를 방지 하는 데 도움이 됩니다.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>See <bpt id="p1">[</bpt>Connection String Builders<ept id="p1">](~/docs/framework/data/adonet/connection-string-builders.md)</ept> for more information.</source>
          <target state="translated">참조 <bpt id="p1">[</bpt>연결 문자열 작성기<ept id="p1">](~/docs/framework/data/adonet/connection-string-builders.md)</ept> 자세한 정보에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> and sets the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph> property before opening the connection.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> 설정 하 고는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph> 연결을 열기 전에 속성입니다.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>An invalid connection string argument has been supplied, or a required connection string argument has not been supplied.</source>
          <target state="translated">잘못된 연결 문자열 인수를 제공했거나 필요한 연결 문자열 인수를 제공하지 않았습니다.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlConnection.ConnectionTimeout">
          <source>Gets the time to wait while trying to establish a connection before terminating the attempt and generating an error.</source>
          <target state="translated">시도를 종료하고 오류를 생성하기 전에 연결하는 동안 대기할 시간을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionTimeout">
          <source>The time (in seconds) to wait for a connection to open.</source>
          <target state="translated">연결이 열리기 전까지 대기할 시간(초)입니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionTimeout">
          <source>The default value is 15 seconds.</source>
          <target state="translated">기본값은 15초입니다.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionTimeout">
          <source>You can set the amount of time a connection waits to time out by using the <ph id="ph1">`Connect Timeout`</ph> or <ph id="ph2">`Connection Timeout`</ph> keywords in the connection string.</source>
          <target state="translated">사용 하 여 시간 제한 초과 연결 대기 시간을 설정할 수 있습니다는 <ph id="ph1">`Connect Timeout`</ph> 또는 <ph id="ph2">`Connection Timeout`</ph> 연결 문자열에서 키워드입니다.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionTimeout">
          <source>A value of 0 indicates no limit, and should be avoided in a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph> because an attempt to connect waits indefinitely.</source>
          <target state="translated">값 0은 제한 없음을 나타냄에 피해 야 합니다.는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph> 무기한 없음을 연결 합니다.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionTimeout">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> and sets the <ph id="ph2">`Connection Timeout`</ph> to 30 seconds in the connection string.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> 설정는 <ph id="ph2">`Connection Timeout`</ph> 연결 문자열에 30 초입니다.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionTimeout">
          <source>The code opens the connection and displays the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionTimeout%2A&gt;</ph> property in the console window.</source>
          <target state="translated">코드의 연결을 열고 표시는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionTimeout%2A&gt;</ph> 콘솔 창에는 속성입니다.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlConnection.ConnectionTimeout">
          <source>The value set is less than 0.</source>
          <target state="translated">설정한 값이 0보다 작은 경우</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.CreateCommand">
          <source>Creates and returns a <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object associated with the <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>과 연결된 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 개체를 만들고 반환합니다.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.CreateCommand">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlConnection.Credential">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCredential" /&gt;</ph> object for this connection.</source>
          <target state="translated">이 연결에 대해 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCredential" /&gt;</ph> 개체를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.Credential">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCredential" /&gt;</ph> object for this connection.</source>
          <target state="translated">이 연결에 대한 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCredential" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.Credential">
          <source><ph id="ph1">`Persist Security Info = true`</ph> is required to get the value of the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCredential&gt;</ph> object with <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection.Credential%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`Persist Security Info = true`</ph> 값을 가져올 하는 데 필요한는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCredential&gt;</ph> 개체 <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection.Credential%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.Credential">
          <source>The default value of <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Credential%2A&gt;</ph> is null.</source>
          <target state="translated">기본값 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Credential%2A&gt;</ph> null입니다.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.Credential">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception will be raised:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> 예외가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.Credential">
          <source>If <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Credential%2A&gt;</ph> is set on an open connection.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Credential%2A&gt;</ph> 열려 있는 연결에 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.Credential">
          <source>If <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Credential%2A&gt;</ph> is set when <ph id="ph2">`Context Connection=true`</ph>.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Credential%2A&gt;</ph> 때 설정 됩니다 <ph id="ph2">`Context Connection=true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.Credential">
          <source>If <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Credential%2A&gt;</ph> is set when <ph id="ph2">`Integrated Security = true`</ph>.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Credential%2A&gt;</ph> 때 설정 됩니다 <ph id="ph2">`Integrated Security = true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.Credential">
          <source>If <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Credential%2A&gt;</ph> is set when the connection string uses <ph id="ph2">`Password`</ph>.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Credential%2A&gt;</ph> 연결 문자열을 사용 하는 경우 설정 <ph id="ph2">`Password`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.Credential">
          <source>If <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Credential%2A&gt;</ph> is set when the connection string uses <ph id="ph2">`UserID`</ph>.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Credential%2A&gt;</ph> 연결 문자열을 사용 하는 경우 설정 <ph id="ph2">`UserID`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlConnection.Database">
          <source>Gets the name of the current database or the database to be used after a connection is opened.</source>
          <target state="translated">현재 데이터베이스 이름이나 연결이 열린 후 사용할 데이터베이스의 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.Database">
          <source>The name of the current database or the name of the database to be used after a connection is opened.</source>
          <target state="translated">현재 데이터베이스 이름이나 연결이 열린 후 사용할 데이터베이스의 이름입니다.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.Database">
          <source>The default value is an empty string.</source>
          <target state="translated">기본값은 빈 문자열입니다.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.Database">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Database%2A&gt;</ph> property updates dynamically.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Database%2A&gt;</ph> 속성을 동적으로 업데이트 합니다.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.Database">
          <source>If you change the current database using a <ph id="ph1">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph> statement or the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.ChangeDatabase%2A&gt;</ph> method, an informational message is sent and the property is updated automatically.</source>
          <target state="translated">사용 하 여 현재 데이터베이스를 변경 하는 경우는 <ph id="ph1">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph> 문 또는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.ChangeDatabase%2A&gt;</ph> 정보 메시지가 전송 되는 메서드와 속성을 자동으로 업데이트 됩니다.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.Database">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> and displays some of its read-only properties.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> 고 읽기 전용 속성 중 일부를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlConnection.DataSource">
          <source>Gets the name of the instance of SQL Server to which to connect.</source>
          <target state="translated">연결할 SQL Server 인스턴스의 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.DataSource">
          <source>The name of the instance of SQL Server to which to connect.</source>
          <target state="translated">연결할 SQL Server 인스턴스의 이름입니다.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.DataSource">
          <source>The default value is an empty string.</source>
          <target state="translated">기본값은 빈 문자열입니다.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.DataSource">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.DataSource%2A&gt;</ph> property returns <ph id="ph2">`null`</ph> if the connection string for the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> is "context connection=true".</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.DataSource%2A&gt;</ph> 속성에서 반환 <ph id="ph2">`null`</ph> 에 대 한 연결 문자열은 <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> 은 "컨텍스트 연결 = true"입니다.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.DataSource">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> and displays some of its read-only properties.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> 고 읽기 전용 속성 중 일부를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)">
          <source>A reference to an existing <ph id="ph1">&lt;see cref="T:System.EnterpriseServices.ITransaction" /&gt;</ph> in which to enlist.</source>
          <target state="translated">등록할 기존 <ph id="ph1">&lt;see cref="T:System.EnterpriseServices.ITransaction" /&gt;</ph>에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)">
          <source>Enlists in the specified transaction as a distributed transaction.</source>
          <target state="translated">지정된 트랜잭션에 분산 트랜잭션으로 참여합니다.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.EnlistTransaction%2A&gt;</ph> method to enlist in a distributed transaction.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.EnlistTransaction%2A&gt;</ph> 메서드를 분산된 트랜잭션에 참여 합니다.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)">
          <source>Because it enlists a connection in a <ph id="ph1">&lt;xref:System.Transactions.Transaction&gt;</ph> instance, <bpt id="p1">**</bpt>EnlistTransaction<ept id="p1">**</ept> takes advantage of functionality available in the <ph id="ph2">&lt;xref:System.Transactions&gt;</ph> namespace for managing distributed transactions, making it preferable to <bpt id="p2">**</bpt>EnlistDistributedTransaction<ept id="p2">**</ept> for this purpose.</source>
          <target state="translated">연결을 참여 하기 때문에 <ph id="ph1">&lt;xref:System.Transactions.Transaction&gt;</ph> 인스턴스에 <bpt id="p1">**</bpt>EnlistTransaction<ept id="p1">**</ept> 에서 사용할 수 있는 기능을 활용는 <ph id="ph2">&lt;xref:System.Transactions&gt;</ph> 분산 트랜잭션에서, 보다선호하는네임스페이스를관리하기위한<bpt id="p2">**</bpt> 참여가<ept id="p2">**</ept> 이 목적을 위해 합니다.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)">
          <source>For more information, see <bpt id="p1">[</bpt>Distributed Transactions<ept id="p1">](~/docs/framework/data/adonet/distributed-transactions.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>분산 트랜잭션<ept id="p1">](~/docs/framework/data/adonet/distributed-transactions.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)">
          <source>You can continue to enlist in an existing distributed transaction using the <bpt id="p1">**</bpt>EnlistDistributedTransaction<ept id="p1">**</ept> method if auto-enlistment is disabled.</source>
          <target state="translated">계속 사용 하 여 기존 분산된 트랜잭션에 참여할 수 있습니다는 <bpt id="p1">**</bpt>참여가<ept id="p1">**</ept> 메서드 자동 인 리스트 먼 트를 사용 하지 않도록 설정 합니다.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)">
          <source>Enlisting in an existing distributed transaction makes sure that, if the transaction is committed or rolled back, modifications made by the code at the data source are also committed or rolled back.</source>
          <target state="translated">기존 분산된 트랜잭션에 인 리스트 먼 트 하면 즉, 트랜잭션이 커밋되거나 롤백될 경우 데이터 소스에서 코드에 의해 수정 된도 트랜잭션이 커밋 또는 롤백됨.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)">
          <source><ph id="ph1">`EnlistDistributedTransaction`</ph> returns an exception if the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> has already started a transaction using <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`EnlistDistributedTransaction`</ph> 경우 예외를 반환 된 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> 이미 사용 하 여 트랜잭션을 시작 <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)">
          <source>However, if the transaction is a local transaction started at the data source (for example, by explicitly executing the BEGIN TRANSACTION statement using an <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object), <bpt id="p1">**</bpt>EnlistDistributedTransaction<ept id="p1">**</ept> rolls back the local transaction and enlists in the existing distributed transaction as requested.</source>
          <target state="translated">그러나 트랜잭션이 데이터 소스에서 시작 된 로컬 트랜잭션 인지 (명시적으로 사용 하 여 BEGIN TRANSACTION 문을 실행 하는 예를 들어 여는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> 개체), <bpt id="p1">**</bpt>참여가<ept id="p1">**</ept> 롤백합니다는 로컬 트랜잭션 요청한 대로 기존 분산된 트랜잭션에 참여 하 고 있습니다.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)">
          <source>You do not receive notice that the local transaction was rolled back, and are responsible for managing any local transactions not started using <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph>.</source>
          <target state="translated">로컬 트랜잭션이 롤백 되었습니다 및 사용 하 여 시작 되지 않는 모든 로컬 트랜잭션을 관리 해야 통지를 받지 않습니다 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.EnlistTransaction(System.Transactions.Transaction)">
          <source>A reference to an existing <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> in which to enlist.</source>
          <target state="translated">등록할 기존 <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph>에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.EnlistTransaction(System.Transactions.Transaction)">
          <source>Enlists in the specified transaction as a distributed transaction.</source>
          <target state="translated">지정된 트랜잭션에 분산 트랜잭션으로 참여합니다.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.EnlistTransaction(System.Transactions.Transaction)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.EnlistTransaction%2A&gt;</ph> method to enlist in a distributed transaction.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.EnlistTransaction%2A&gt;</ph> 메서드를 분산된 트랜잭션에 참여 합니다.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.EnlistTransaction(System.Transactions.Transaction)">
          <source>Because it enlists a connection in a <ph id="ph1">&lt;xref:System.Transactions.Transaction&gt;</ph> instance, <bpt id="p1">**</bpt>EnlistTransaction<ept id="p1">**</ept> takes advantage of functionality available in the <ph id="ph2">&lt;xref:System.Transactions&gt;</ph> namespace for managing distributed transactions, making it preferable to <bpt id="p2">**</bpt>EnlistDistributedTransaction<ept id="p2">**</ept>, which uses a <bpt id="p3">**</bpt>System.EnterpriseServices.ITransaction<ept id="p3">**</ept> object.</source>
          <target state="translated">연결을 참여 하기 때문에 <ph id="ph1">&lt;xref:System.Transactions.Transaction&gt;</ph> 인스턴스에 <bpt id="p1">**</bpt>EnlistTransaction<ept id="p1">**</ept> 에서 사용할 수 있는 기능을 활용는 <ph id="ph2">&lt;xref:System.Transactions&gt;</ph> 분산 트랜잭션에서, 보다선호하는네임스페이스를관리하기위한<bpt id="p2">**</bpt> 참여가<ept id="p2">**</ept>를 사용 하는 <bpt id="p3">**</bpt>System.EnterpriseServices.ITransaction<ept id="p3">**</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.EnlistTransaction(System.Transactions.Transaction)">
          <source>It also has slightly different semantics: once a connection is explicitly enlisted on a transaction, it cannot be unenlisted or enlisted in another transaction until the first transaction finishes.</source>
          <target state="translated">역시 약간 다른 의미 체계: 트랜잭션에 연결을 명시적으로 등록 된, 등록 취소 하거나 수 첫 번째 트랜잭션이 완료 될 때까지 다른 트랜잭션에 참여 합니다.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.EnlistTransaction(System.Transactions.Transaction)">
          <source>For more information about distributed transactions, see <bpt id="p1">[</bpt>Distributed Transactions<ept id="p1">](~/docs/framework/data/adonet/distributed-transactions.md)</ept>.</source>
          <target state="translated">분산된 트랜잭션에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>분산 트랜잭션을<ept id="p1">](~/docs/framework/data/adonet/distributed-transactions.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors" /&gt;</ph> 속성을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors" /&gt;</ph> property has been set; otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors" /&gt;</ph> 속성이 설정되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 연결되어 있지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors">
          <source>When you set <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors%2A&gt;</ph> to <ph id="ph2">`true`</ph>, errors that were previously treated as exceptions are now handled as <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection.InfoMessage&gt;</ph> events.</source>
          <target state="translated">설정 하는 경우 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors%2A&gt;</ph> 를 <ph id="ph2">`true`</ph>, 예외는 이제로 처리 되므로 이전에 처리 되어 오류 <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection.InfoMessage&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors">
          <source>All events fire immediately and are handled by the event handler.</source>
          <target state="translated">모든 이벤트는 즉시 발생 하 고 이벤트 처리기에 의해 처리 됩니다.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors">
          <source>If is <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors%2A&gt;</ph> is set to <ph id="ph2">`false`</ph>, then <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection.InfoMessage&gt;</ph> events are handled at the end of the procedure.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors%2A&gt;</ph> 로 설정 된 <ph id="ph2">`false`</ph>, 다음 <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection.InfoMessage&gt;</ph> 프로시저의 끝에 이벤트를 처리 합니다.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors">
          <source>An error with a severity level of 17 or above that causes the server to stop processing the command needs to be handled as an exception.</source>
          <target state="translated">심각도 수준이 17 이상인 명령을 처리를 중지 하도록 서버에 오류를 예외로 처리 해야 합니다.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors">
          <source>In this case, an exception is thrown regardless of how the error is handled in the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.InfoMessage&gt;</ph> event.</source>
          <target state="translated">이 경우 오류가 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.InfoMessage&gt;</ph> 이벤트에서 처리되는 방법과 상관없이 예외가 throw됩니다.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors">
          <source>For more information on working with events, see <bpt id="p1">[</bpt>Connection Events<ept id="p1">](~/docs/framework/data/adonet/connection-events.md)</ept>.</source>
          <target state="translated">작업 이벤트에 대 한 자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>연결 이벤트<ept id="p1">](~/docs/framework/data/adonet/connection-events.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors">
          <source>For more information on errors generated by the SQL Server engine, see SQL Server Books Online.</source>
          <target state="translated">SQL Server 엔진에 의해 생성 된 오류에 대 한 자세한 내용은 SQL Server 온라인 설명서를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlConnection">
          <source>Returns schema information for the data source of this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>의 데이터 소스에 대한 스키마 정보를 반환합니다.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>If you attempt to retrieve schema information for more than one versioned stored procedure, the schema for the latest one only is returned.</source>
          <target state="translated">둘 이상의 버전이 지정 된 저장된 프로시저에 대 한 스키마 정보를 검색 하려고 하면 최신에 대 한 스키마만 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>For more information on versioned stored procedures, see SQL Server Books Online.</source>
          <target state="translated">버전이 지정 된 저장된 프로시저에 대 한 자세한 내용은 SQL Server 온라인 설명서를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.GetSchema">
          <source>Returns schema information for the data source of this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>의 데이터 소스에 대한 스키마 정보를 반환합니다.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.GetSchema">
          <source>For more information about scheme, see <bpt id="p1">[</bpt>SQL Server Schema Collections<ept id="p1">](http://msdn.microsoft.com/library/ms254969.aspx)</ept>.</source>
          <target state="translated">구성표에 대한 자세한 내용은 <bpt id="p1">[</bpt>SQL Server 구성표 컬렉션<ept id="p1">](http://msdn.microsoft.com/library/ms254969.aspx)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.GetSchema">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> that contains schema information.</source>
          <target state="translated">스키마 정보를 포함하는 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String)">
          <source>Specifies the name of the schema to return.</source>
          <target state="translated">반환할 스키마의 이름을 지정합니다.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String)">
          <source>Returns schema information for the data source of this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> using the specified string for the schema name.</source>
          <target state="translated">스키마 이름에 대해 지정된 문자열을 사용하여 이 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>의 데이터 소스에 대한 스키마 정보를 반환합니다.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> that contains schema information.</source>
          <target state="translated">스키마 정보를 포함하는 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String)">
          <source>You may need the schema information of the database, tables or columns.</source>
          <target state="translated">데이터베이스, 테이블 또는 열의 스키마 정보가 필요할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String)">
          <source>This sample:</source>
          <target state="translated">이 샘플:</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String)">
          <source>Uses GetSchema to get schema information.</source>
          <target state="translated">GetSchema를 사용 하 여 스키마 정보를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String)">
          <source>Use schema restrictions to get the specified information.</source>
          <target state="translated">스키마 제한을 사용 하 여 지정 된 정보를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String)">
          <source>Gets schema information of the database, tables, and some columns.</source>
          <target state="translated">데이터베이스, 테이블 및 일부 열에 스키마 정보를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String)">
          <source>Before you run the sample, you need to create the sample database, using the following <ph id="ph1">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph>:</source>
          <target state="translated">샘플을 실행 하기 전에 필요한 샘플 데이터베이스를 만들려면 다음을 사용 하 여 <ph id="ph1">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph>:</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String)">
          <source><bpt id="p1">[</bpt>How to Get Schema Information from Database<ept id="p1">](http://code.msdn.microsoft.com/How-to-Get-Schema-b66d62e2)</ept> has C# and Visual Basic versions of this code sample in a Visual Studio project.</source>
          <target state="translated"><bpt id="p1">[</bpt>데이터베이스에서 스키마 정보 가져오기 방법<ept id="p1">](http://code.msdn.microsoft.com/How-to-Get-Schema-b66d62e2)</ept> Visual Studio 프로젝트에서에이 코드 샘플의 C# 및 Visual Basic 버전입니다.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String)">
          <source><ph id="ph1">&lt;paramref name="collectionName" /&gt;</ph> is specified as null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collectionName" /&gt;</ph>이 ull로 지정되었습니다.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String,System.String[])">
          <source>Specifies the name of the schema to return.</source>
          <target state="translated">반환할 스키마의 이름을 지정합니다.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String,System.String[])">
          <source>A set of restriction values for the requested schema.</source>
          <target state="translated">요청된 스키마에 대한 제한 값의 집합입니다.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String,System.String[])">
          <source>Returns schema information for the data source of this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> using the specified string for the schema name and the specified string array for the restriction values.</source>
          <target state="translated">스키마 이름에 대해 지정된 문자열과 제한 값에 대해 지정된 문자열 배열을 사용하여 이 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>의 데이터 소스에 대한 스키마 정보를 반환합니다.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String,System.String[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> that contains schema information.</source>
          <target state="translated">스키마 정보를 포함하는 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String,System.String[])">
          <source>The <ph id="ph1">`restrictionValues`</ph> parameter can supply <bpt id="p1">*</bpt>n<ept id="p1">*</ept> depth of values, which are specified by the restrictions collection for a specific collection.</source>
          <target state="translated"><ph id="ph1">`restrictionValues`</ph> 매개 변수 제공 <bpt id="p1">*</bpt>n<ept id="p1">*</ept> 수준의 특정 컬렉션에 대 한 제한 컬렉션에서 지정 된 값입니다.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String,System.String[])">
          <source>In order to set values on a given restriction, and not set the values of other restrictions, you need to set the preceding restrictions to <ph id="ph1">`null`</ph> and then put the appropriate value in for the restriction that you would like to specify a value for.</source>
          <target state="translated">특정된 제한에 값을 설정 하 고 다른 제한 값을 설정 하지 않으려면, 앞의 제한의을 설정 해야 <ph id="ph1">`null`</ph> 다음 값을 지정 하려면 원하는 제한에 적절 한 값을 입력 하 고 있습니다.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String,System.String[])">
          <source>An example of this is the "Tables" collection.</source>
          <target state="translated">이 예는 "Table" 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String,System.String[])">
          <source>If the "Tables" collection has three restrictions--database, owner, and table name--and you want to get back only the tables associated with the owner "Carl", you need to pass in the following values: null, "Carl".</source>
          <target state="translated">다음과 같은 값을 전달 해야 하는 "Table" 컬렉션에 세 가지 제한-데이터베이스, 소유자, 테이블 이름-얻을 소유자 "칼"와 연결 된 테이블에만 하도록 설정 하려는 경우: null, "칼"입니다.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String,System.String[])">
          <source>If a restriction value is not passed in, the default values are used for that restriction.</source>
          <target state="translated">에 제한 값이 전달 되지 않으면, 기본 값은 해당 제한에 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String,System.String[])">
          <source>This is the same mapping as passing in <ph id="ph1">`null`</ph>, which is different from passing in an empty string for the parameter value.</source>
          <target state="translated">이것은 전달 하는 대로 동일한 매핑을 <ph id="ph1">`null`</ph>, 매개 변수 값에 대 한 빈 문자열을 전달과에서는 다릅니다.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String,System.String[])">
          <source>In that case, the empty string ("") is considered to be the value for the specified parameter.</source>
          <target state="translated">그러면 빈 문자열 ("")의 지정된 된 매개 변수 값으로 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String,System.String[])">
          <source>For a code sample demonstrating <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.GetSchema%2A&gt;</ph>, see <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.GetSchema%2A&gt;</ph>.</source>
          <target state="translated">보여 주는 코드 샘플 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.GetSchema%2A&gt;</ph>, 참조 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.GetSchema%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String,System.String[])">
          <source><ph id="ph1">&lt;paramref name="collectionName" /&gt;</ph> is specified as null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collectionName" /&gt;</ph>이 ull로 지정되었습니다.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="E:System.Data.SqlClient.SqlConnection.InfoMessage">
          <source>Occurs when SQL Server returns a warning or informational message.</source>
          <target state="translated">SQL Server에서 경고나 정보 메시지를 반환할 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlConnection.InfoMessage">
          <source>Clients that want to process warnings or informational messages sent by the server should create an <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlInfoMessageEventHandler&gt;</ph> delegate to listen to this event.</source>
          <target state="translated">서버에서 보낸 정보 메시지를 처리 하는 클라이언트를 만들어야는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlInfoMessageEventHandler&gt;</ph> 이 이벤트를 수신 하는 대리자입니다.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlConnection.InfoMessage">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.InfoMessage&gt;</ph> event occurs when a message with a severity of 10 or less is returned by SQL Server.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.InfoMessage&gt;</ph> SQL Server에서 반환 되는 또는 이벤트 심각도 10 인 메시지를 받으면 발생 합니다.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlConnection.InfoMessage">
          <source>Messages that have a severity between 11 and 20 raise an error and messages that have a severity over 20 causes the connection to close.</source>
          <target state="translated">심각도 11에서 20 사이의 메시지는 오류 메시지와 심각도 20을 초과 연결을 닫습니다를 발생 시킵니다.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlConnection.InfoMessage">
          <source>For more information on SQL Server error levels, see "Database Engine Error Severities" in SQL Server Books Online.</source>
          <target state="translated">SQL Server 오류 수준에 대 한 자세한 내용은 SQL Server 온라인 설명서의 "데이터베이스 엔진 오류 심각도"를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlConnection.InfoMessage">
          <source>For more information and an example, see <bpt id="p1">[</bpt>Connection Events<ept id="p1">](~/docs/framework/data/adonet/connection-events.md)</ept>.</source>
          <target state="translated">자세한 내용 및 예제에 대 한 참조 <bpt id="p1">[</bpt>연결 이벤트<ept id="p1">](~/docs/framework/data/adonet/connection-events.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.Open">
          <source>Opens a database connection with the property settings specified by the <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlConnection.ConnectionString" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlConnection.ConnectionString" /&gt;</ph>로 지정된 속성 설정을 사용하여 데이터베이스 연결을 엽니다.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.Open">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> draws an open connection from the connection pool if one is available.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> 사용 가능한 경우 연결 풀에서 열려 있는 연결을 그립니다.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.Open">
          <source>Otherwise, it establishes a new connection to an instance of SQL Server.</source>
          <target state="translated">그렇지 않으면 SQL Server 인스턴스에 새 연결을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.Open">
          <source>If the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> goes out of scope, it is not closed.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> 늘어나고의 범위를 닫혀 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.Open">
          <source>Therefore, you must explicitly close the connection by calling <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Close%2A&gt;</ph>.</source>
          <target state="translated">따라서 명시적으로 닫아야 연결 호출 하 여 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Close%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.Open">
          <source>If you specify a port number other than 1433 when you are trying to connect to an instance of SQL Server and using a protocol other than TCP/IP, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Open%2A&gt;</ph> method fails.</source>
          <target state="translated">TCP/IP가 아닌 프로토콜을 사용 하 여 SQL Server의 인스턴스에 연결 하려는 경우 1433 이외의 포트 번호를 지정 하는 경우는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Open%2A&gt;</ph> 메서드가 실패 합니다.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.Open">
          <source>To specify a port number other than 1433, include "server=machinename,port number" in the connection string, and use the TCP/IP protocol.</source>
          <target state="translated">1433 이외의 포트 번호를 지정 하려면 포함 "서버 포트 번호 machinename =" 연결 문자열을 사용 하 여 TCP/IP 프로토콜에 있습니다.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.Open">
          <source>The .NET Framework Data Provider for SQL Server requires the Security permission with "Allows calls to unmanaged assemblies" enabled (<ph id="ph1">&lt;xref:System.Security.Permissions.SecurityPermission&gt;</ph> with <ph id="ph2">&lt;xref:System.Security.Permissions.SecurityPermissionFlag&gt;</ph> set to <ph id="ph3">`UnmanagedCode`</ph>) to open a <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> with SQL Debugging enabled.</source>
          <target state="translated">.NET Framework Data Provider for SQL Server 수 있는 관리 되지 않는 어셈블리에 "활성화 보안 권한이 필요 (<ph id="ph1">&lt;xref:System.Security.Permissions.SecurityPermission&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Security.Permissions.SecurityPermissionFlag&gt;</ph> 로 설정 <ph id="ph3">`UnmanagedCode`</ph>)를 열려면는 <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> SQL 디버깅을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.Open">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>, opens it, and displays some of its properties.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>, 열리고 해당 속성의 일부를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.Open">
          <source>The connection is automatically closed at the end of the <ph id="ph1">`using`</ph> block.</source>
          <target state="translated">연결의 끝에 자동으로 닫혀는 <ph id="ph1">`using`</ph> 블록입니다.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.Open">
          <source>Cannot open a connection without specifying a data source or server.</source>
          <target state="translated">데이터 원본이나 서버를 지정하지 않고 연결을 열 수 없습니다.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.Open">
          <source>or</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.Open">
          <source>The connection is already open.</source>
          <target state="translated">연결이 이미 열려 있습니다.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.Open">
          <source>A connection-level error occurred while opening the connection.</source>
          <target state="translated">연결을 여는 동안 발생한 연결 수준 오류입니다.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.Open">
          <source>If the <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlException.Number" /&gt;</ph> property contains the value 18487 or 18488, this indicates that the specified password has expired or must be reset.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlException.Number" /&gt;</ph> 속성에 값 18487 또는 18488이 포함되는 경우 지정된 암호가 만료되었거나 다시 설정해야 함을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.Open">
          <source>See the <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)" /&gt;</ph> method for more information.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)" /&gt;</ph> 메서드를 참조하세요.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.Open">
          <source>The <ph id="ph1">&lt;see langword="&amp;lt;system.data.localdb&amp;gt;" /&gt;</ph> tag in the app.config file has invalid or unknown elements.</source>
          <target state="translated">app.config 파일의 <ph id="ph1">&lt;see langword="&amp;lt;system.data.localdb&amp;gt;" /&gt;</ph> 태그가 잘못되었거나 알 수 없는 요소입니다.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.Open">
          <source>There are two entries with the same name in the <ph id="ph1">&lt;see langword="&amp;lt;localdbinstances&amp;gt;" /&gt;</ph> section.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="&amp;lt;localdbinstances&amp;gt;" /&gt;</ph> 섹션에 이름이 같은 2개의 항목이 있습니다.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)">
          <source>The cancellation instruction.</source>
          <target state="translated">취소 명령입니다.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)">
          <source>An asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlConnection.Open" /&gt;</ph>, which opens a database connection with the property settings specified by the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlConnection.ConnectionString" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlConnection.Open" /&gt;</ph>으로 지정된 속성 설정을 사용하여 데이터베이스 연결을 여는 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlConnection.ConnectionString" /&gt;</ph>의 비동기 버전입니다.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)">
          <source>The cancellation token can be used to request that the operation be abandoned before the connection timeout elapses.</source>
          <target state="translated">취소 토큰은 연결 제한 시간이 경과하기 전에 작업을 중단하는 요청에 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)">
          <source>Exceptions will be propagated via the returned Task.</source>
          <target state="translated">예외는 반환된 작업을 통해 전파됩니다.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)">
          <source>If the connection timeout time elapses without successfully connecting, the returned Task will be marked as faulted with an Exception.</source>
          <target state="translated">연결하지 못하고 연결 제한 시간이 경과하는 경우 반환된 작업이 예외와 함께 오류가 발생한 것으로 표시됩니다.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)">
          <source>The implementation returns a Task without blocking the calling thread for both pooled and non-pooled connections.</source>
          <target state="translated">구현은 풀링된 연결 및 풀링되지 않은 연결에 대한 호출 스레드를 차단하지 않고 Task를 반환합니다.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task)입니다.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)">
          <source>After calling <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.OpenAsync%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.State%2A&gt;</ph> must return <ph id="ph3">&lt;xref:System.Data.ConnectionState.Connecting&gt;</ph> until the returned <ph id="ph4">&lt;xref:System.Threading.Tasks.Task&gt;</ph> is completed.</source>
          <target state="translated">호출한 후 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.OpenAsync%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.State%2A&gt;</ph> 반환 해야 합니다 <ph id="ph3">&lt;xref:System.Data.ConnectionState.Connecting&gt;</ph> 반환 될 때까지 <ph id="ph4">&lt;xref:System.Threading.Tasks.Task&gt;</ph> 완료 됩니다.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)">
          <source>Then, if the connection was successful, <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.State%2A&gt;</ph> must return <ph id="ph2">&lt;xref:System.Data.ConnectionState.Open&gt;</ph>.</source>
          <target state="translated">그런 다음 연결이 성공적 이면 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.State%2A&gt;</ph> 반환 해야 <ph id="ph2">&lt;xref:System.Data.ConnectionState.Open&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)">
          <source>If the connection fails, <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.State%2A&gt;</ph> must return <ph id="ph2">&lt;xref:System.Data.ConnectionState.Closed&gt;</ph>.</source>
          <target state="translated">연결에 실패 하면 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.State%2A&gt;</ph> 반환 해야 <ph id="ph2">&lt;xref:System.Data.ConnectionState.Closed&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)">
          <source>A call to <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Close%2A&gt;</ph> will attempt to cancel or close the corresponding <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.OpenAsync%2A&gt;</ph> call.</source>
          <target state="translated">에 대 한 호출 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Close%2A&gt;</ph> 취소 하거나 해당 닫습니다는 하려고 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.OpenAsync%2A&gt;</ph> 호출 합니다.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)">
          <source>For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">SQL Server에 대 한.NET Framework Data Provider에서 비동기 프로그래밍에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>비동기 프로그래밍<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)" /&gt;</ph> more than once for the same instance before task completion.</source>
          <target state="translated">작업 완료 전에 동일한 인스턴스에 대해 <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)" /&gt;</ph>를 두 번 이상 호출</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph>가 연결 문자열에 지정되어 있습니다.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)">
          <source>A connection was not available from the connection pool before the connection time out elapsed.</source>
          <target state="translated">연결 시간 제한이 경과되기 전에 연결 풀에서 연결을 사용할 수 없었습니다.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)">
          <source>Any error returned by SQL Server that occurred while opening the connection.</source>
          <target state="translated">연결을 여는 동안 발생한 SQL Server에서 반환되는 오류입니다.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlConnection.PacketSize">
          <source>Gets the size (in bytes) of network packets used to communicate with an instance of SQL Server.</source>
          <target state="translated">SQL Server의 인스턴스와 통신하는 데 사용하는 네트워크 패킷의 크기(바이트)를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.PacketSize">
          <source>The size (in bytes) of network packets.</source>
          <target state="translated">네트워크 패킷의 크기(바이트)입니다.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.PacketSize">
          <source>The default value is 8000.</source>
          <target state="translated">기본값은 8000입니다.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.PacketSize">
          <source>If an application performs bulk copy operations, or sends or receives lots of text or image data, a packet size larger than the default may improve efficiency because it causes fewer network read and write operations.</source>
          <target state="translated">응용 프로그램에서는 대량 복사 작업을 수행 하거나 많은 양의 텍스트 또는 이미지 데이터를 받는, 하는 경우 보다 더 적은 네트워크 발생 하기 때문에 기본 효율성을 향상 시킬 수 있습니다 더 큰 패킷 크기를 읽기 / 쓰기 작업입니다.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.PacketSize">
          <source>If an application sends and receives small amounts of information, you can set the packet size to 512 bytes (using the Packet Size value in the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph>), which is sufficient for most data transfer operations.</source>
          <target state="translated">응용 프로그램이 보내는 적은 양의 정보를 받는 경우를 512 바이트로 패킷 크기를 설정할 수 있습니다 (의 패킷 크기 값을 사용 하는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph>), 대부분의 데이터 전송 작업에 충분 한 합니다.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.PacketSize">
          <source>For most applications, the default packet size is best.</source>
          <target state="translated">대부분의 응용 프로그램에 대 한 기본 패킷 크기가 좋습니다.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.PacketSize">
          <source><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.PacketSize%2A&gt;</ph> may be a value in the range of 512 and 32767 bytes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.PacketSize%2A&gt;</ph> 512에서 32767 바이트 범위의 값이 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.PacketSize">
          <source>An exception is generated if the value is outside this range.</source>
          <target state="translated">값이이 범위를 벗어나는 경우 예외가 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.PacketSize">
          <source>Setting the default value to a number greater than 8000 will cause the packets to use the MultiPage allocator on the instance of SQL Server instead of the much more efficient SinglePage allocator, reducing the overall scalability of the SQL Server.</source>
          <target state="translated">8000 다중 페이지 할당자를 사용 하 여 SQL Server의 전반적인 확장성을 줄이는 것이 보다 효율적 SinglePage 할당자를 대신 SQL Server의 인스턴스에 패킷을 보다 큰 수로 기본값을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.PacketSize">
          <source>For more information on how SQL Server uses memory, see <bpt id="p1">[</bpt>Memory Architecture<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=143705)</ept> in SQL Server Books Online.</source>
          <target state="translated">SQL Server 메모리를 사용 하는 방법에 대 한 자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>메모리 아키텍처<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=143705)</ept> SQL Server 온라인 설명서의 합니다.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.PacketSize">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>, including setting the <ph id="ph2">`Packet Size`</ph> to 512 in the connection string.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>, 설정을 포함 하는 <ph id="ph2">`Packet Size`</ph> 연결 문자열에는 512입니다.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.PacketSize">
          <source>It displays the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.PacketSize%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.ServerVersion%2A&gt;</ph> properties in the console window.</source>
          <target state="translated">표시는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.PacketSize%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.ServerVersion%2A&gt;</ph> 콘솔 창에서 속성입니다.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.RegisterColumnEncryptionKeyStoreProviders(System.Collections.Generic.IDictionary{System.String,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider})">
          <source>The custom providers</source>
          <target state="translated">사용자 지정 공급자</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.RegisterColumnEncryptionKeyStoreProviders(System.Collections.Generic.IDictionary{System.String,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider})">
          <source>Registers the column encryption key store providers.</source>
          <target state="translated">사용자 지정 암호화 키 저장소 공급자를 등록합니다.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.ResetStatistics">
          <source>If statistics gathering is enabled, all values are reset to zero.</source>
          <target state="translated">통계 수집을 활성화하면 모든 값이 0으로 다시 설정됩니다.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.ResetStatistics">
          <source>If statistics gathering is not enabled and this method is called, no error is thrown.</source>
          <target state="translated">통계 수집이 사용 되지 않으며이 메서드는, 오류가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.RetrieveStatistics">
          <source>Returns a name value pair collection of statistics at the point in time the method is called.</source>
          <target state="translated">메서드가 호출된 시점에서 통계의 이름 값 쌍 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.RetrieveStatistics">
          <source>Returns a reference of type <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Collections.DictionaryEntry" /&gt;</ph> items.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Collections.DictionaryEntry" /&gt;</ph> 항목에 대한 <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 형식의 참조를 반환합니다.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.RetrieveStatistics">
          <source>When this method is called, the values retrieved are those at the current point in time.</source>
          <target state="translated">이 메서드가 호출 되 면 검색 된 값 되 현재 시점 시간에서입니다.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.RetrieveStatistics">
          <source>If you continue using the connection, the values are incorrect.</source>
          <target state="translated">연결을 사용 하 여 작업을 계속 하면 값 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.RetrieveStatistics">
          <source>You need to re-execute the method to obtain the most current values.</source>
          <target state="translated">최신 값을 가져오는 메서드를 다시 실행 해야 합니다.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlConnection.ServerVersion">
          <source>Gets a string that contains the version of the instance of SQL Server to which the client is connected.</source>
          <target state="translated">클라이언트가 연결될 SQL Server 인스턴스의 버전을 포함한 문자열을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ServerVersion">
          <source>The version of the instance of SQL Server.</source>
          <target state="translated">SQL Server 인스턴스의 버전입니다.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ServerVersion">
          <source>The version is of the form <bpt id="p1">*</bpt>##.##.####<ept id="p1">*</ept>, where the first two digits are the major version, the next two digits are the minor version, and the last four digits are the release version.</source>
          <target state="translated">폼의 버전은 <bpt id="p1">*</bpt># #. # #. # # #<ept id="p1">*</ept>, 여기서 처음 두 자리는 주 버전, 다음 두 자리는 부 버전 및 마지막 4 자리는 릴리스 버전입니다.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ServerVersion">
          <source>The string is of the form <bpt id="p1">*</bpt>major.minor.build<ept id="p1">*</ept>, where major and minor are exactly two digits and build is exactly four digits.</source>
          <target state="translated">폼의 문자열은 <bpt id="p1">*</bpt>major.minor.build<ept id="p1">*</ept>여기서 주 및 부는 정확히 두 자리로 관리 빌드 정확히 네 자리로 합니다.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ServerVersion">
          <source><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ServerVersion%2A&gt;</ph> was called while the returned Task was not completed and the connection was not opened after a call to <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.OpenAsync%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.OpenAsync%2A&gt;</ph> 호출 후에 반환된 작업이 완료되지 않았고 연결이 열려 있지 않은 상태에서 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ServerVersion%2A&gt;</ph>이 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ServerVersion">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> and displays the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.ServerVersion%2A&gt;</ph> property.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> 표시는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.ServerVersion%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlConnection.ServerVersion">
          <source>The connection is closed.</source>
          <target state="translated">연결이 닫힌 경우</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlConnection.ServerVersion">
          <source><ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlConnection.ServerVersion" /&gt;</ph> was called while the returned Task was not completed and the connection was not opened after a call to <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)" /&gt;</ph> 호출 후에 반환된 작업이 완료되지 않았고 연결이 열려 있지 않은 상태에서 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlConnection.ServerVersion" /&gt;</ph>이 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlConnection.State">
          <source>Indicates the state of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> during the most recent network operation performed on the connection.</source>
          <target state="translated">연결에 수행된 최근 네트워크 작업 중 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>의 상태를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.State">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.ConnectionState" /&gt;</ph> enumeration.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.ConnectionState" /&gt;</ph> 열거형입니다.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.State">
          <source>Returns an <ph id="ph1">&lt;xref:System.Data.ConnectionState&gt;</ph> enumeration indicating the state of the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Data.ConnectionState&gt;</ph> 의 상태를 나타내는 열거는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.State">
          <source>Closing and reopening the connection will refresh the value of <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.State%2A&gt;</ph>.</source>
          <target state="translated">연결을 닫았다가의 값을 새로 고쳐집니다 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.State%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlConnection.StatisticsEnabled">
          <source>When set to <ph id="ph1">&lt;see langword="true" /&gt;</ph>, enables statistics gathering for the current connection.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>(으)로 설정하면 현재 연결에 대한 통계 수집이 사용하도록 설정됩니다.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.StatisticsEnabled">
          <source>Returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if statistics gathering is enabled; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">통계 수집이 사용하도록 설정된 경우 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 사용하도록 설정되지 않은 경우 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.StatisticsEnabled">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> is the default.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.StatisticsEnabled">
          <source>Enabling statistics gathering has a minor, but measurable effect on performance and therefore should be enabled only when it is required.</source>
          <target state="translated">통계 수집에 미치는 영향은 사소 하지만 측정 가능한 성능 및 따라서 설정할지 필요한 경우에 합니다.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.System#ICloneable#Clone">
          <source>Creates a new object that is a copy of the current instance.</source>
          <target state="translated">현재 인스턴스의 복사본인 새 개체를 만듭니다.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.System#ICloneable#Clone">
          <source>A new object that is a copy of this instance.</source>
          <target state="translated">이 인스턴스의 복사본인 새 개체입니다.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.System#ICloneable#Clone">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.System#ICloneable#Clone">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.ICloneable&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.ICloneable&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.System#ICloneable#Clone">
          <source>This member is only supported by the .NET Compact Framework.</source>
          <target state="translated">이 멤버는.NET Compact Framework에서만 지원 됩니다.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlConnection.WorkstationId">
          <source>Gets a string that identifies the database client.</source>
          <target state="translated">데이터베이스 클라이언트를 식별하는 문자열을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.WorkstationId">
          <source>A string that identifies the database client.</source>
          <target state="translated">데이터베이스 클라이언트를 식별하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.WorkstationId">
          <source>If not specified, the name of the client computer.</source>
          <target state="translated">지정하지 않으면 클라이언트 컴퓨터의 이름입니다.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.WorkstationId">
          <source>If neither is specified, the value is an empty string.</source>
          <target state="translated">어느 것도 지정하지 않으면 이 값은 빈 문자열입니다.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.WorkstationId">
          <source>The string typically contains the network name of the client.</source>
          <target state="translated">문자열에는 일반적으로 클라이언트의 네트워크 이름을 포함합니다.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.WorkstationId">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.WorkstationId%2A&gt;</ph> property corresponds to the <ph id="ph2">`Workstation ID`</ph> connection string property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.WorkstationId%2A&gt;</ph> 속성에 해당 하는 <ph id="ph2">`Workstation ID`</ph> 연결 문자열 속성입니다.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.WorkstationId">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> and displays the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.WorkstationId%2A&gt;</ph> property.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> 표시는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.WorkstationId%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>