<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ClientRuntime.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">73cd4428-9abd-4836-b1ef-ba70fe2e0b72e9234e992b800eba2c499f465ef25914ef249fa5.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e9234e992b800eba2c499f465ef25914ef249fa5</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Dispatcher.ClientRuntime">
          <source>Represents the insertion point for classes that extend the functionality of Windows Communication Foundation (WCF) client objects for all messages handled by a client application.</source>
          <target state="translated">클라이언트 응용 프로그램에서 처리하는 모든 메시지에 대한 WCF(Windows Communication Foundation) 클라이언트 개체 기능을 확장하는 클래스의 삽입 지점을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ClientRuntime">
          <source>WCF client objects, whether an extension of <ph id="ph1">&lt;xref:System.ServiceModel.ClientBase%601&gt;</ph> or of <ph id="ph2">&lt;xref:System.ServiceModel.IClientChannel&gt;</ph>, are used by <ph id="ph3">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> client applications to convert method calls into outbound messages and convert incoming messages to objects and pass them to the results of client methods.</source>
          <target state="translated">WCF 클라이언트 개체의 확장 하는지 여부를 <ph id="ph1">&lt;xref:System.ServiceModel.ClientBase%601&gt;</ph> 또는의 <ph id="ph2">&lt;xref:System.ServiceModel.IClientChannel&gt;</ph>에서 사용 <ph id="ph3">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> 클라이언트 응용 프로그램에 메서드 호출을 아웃 바운드 메시지로 변환 하 고 들어오는 메시지를 개체로 변환한 클라이언트 메서드의 결과를 전달 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ClientRuntime">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime&gt;</ph> class is an extensibility point to which you can add extension objects that intercept messages and extend client behavior across all operations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime&gt;</ph> 클래스는 메시지를 가로채서 모든 작업에서 클라이언트 동작을 확장하는 확장 개체를 추가할 수 있는 확장성 지점입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ClientRuntime">
          <source>Interception objects can process all messages in a particular contract, process only messages for particular operations, perform custom channel initialization, and implement other custom client application behavior.</source>
          <target state="translated">가로채기 개체는 특정 계약의 모든 메시지를 처리하고, 특정 작업의 메시지만 처리하며, 사용자 지정 채널 초기화를 수행하고, 다른 사용자 지정 클라이언트 응용 프로그램 동작을 구현할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ClientRuntime">
          <source>For an overview of client architecture, see <bpt id="p1">[</bpt>WCF Client Architecture<ept id="p1">](~/docs/framework/wcf/feature-details/client-architecture.md)</ept>.</source>
          <target state="translated">클라이언트 아키텍처의 개요를 참조 하십시오. <bpt id="p1">[</bpt>WCF 클라이언트 아키텍처<ept id="p1">](~/docs/framework/wcf/feature-details/client-architecture.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ClientRuntime">
          <source>For more information about client programming, see <bpt id="p1">[</bpt>Accessing Services Using a WCF Client<ept id="p1">](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md)</ept>.</source>
          <target state="translated">클라이언트 프로그래밍에 대 한 자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>WCF 클라이언트를 사용 하 여 액세스 서비스<ept id="p1">](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ClientRuntime">
          <source>For details about customizations and how to perform them, see <bpt id="p1">[</bpt>Extending Clients<ept id="p1">](~/docs/framework/wcf/extending/extending-clients.md)</ept>.</source>
          <target state="translated">사용자 지정 및을 수행 하는 방법에 대 한 세부 정보를 참조 하십시오. <bpt id="p1">[</bpt>클라이언트 확장<ept id="p1">](~/docs/framework/wcf/extending/extending-clients.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ClientRuntime">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.CallbackDispatchRuntime%2A&gt;</ph> property returns the dispatch run-time object for service-initiated callback operations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.CallbackDispatchRuntime%2A&gt;</ph> 속성은 서비스 개시 콜백 작업에 대한 디스패치 런타임 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ClientRuntime">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.OperationSelector%2A&gt;</ph> property accepts a custom operation selector object to control the routing of client messages.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.OperationSelector%2A&gt;</ph> 속성은 사용자 지정 작업 선택기 개체를 적용하여 클라이언트 메시지의 라우팅을 제어합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ClientRuntime">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.ChannelInitializers%2A&gt;</ph> property enables the addition of a channel initializer that can inspect or modify the client channel.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.ChannelInitializers%2A&gt;</ph> 속성을 사용하면 클라이언트 채널을 검사하거나 수정할 수 있는 채널 이니셜라이저를 추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ClientRuntime">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers%2A&gt;</ph> property can be used to display a visual prompt to enable a user to select credentials prior to opening the channel.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers%2A&gt;</ph> 속성을 사용하면 사용자가 채널을 열기 전에 자격 증명을 선택할 수 있도록 시각적 프롬프트를 표시할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ClientRuntime">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.Operations%2A&gt;</ph> property gets a collection of <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation&gt;</ph> objects to which you can add custom message interceptors that provide functionality specific to the messages of that operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.Operations%2A&gt;</ph> 속성은 해당 작업의 메시지에 특정한 기능을 제공하는 사용자 지정 메시지 인터셉터를 추가할 수 있는 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation&gt;</ph> 개체의 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ClientRuntime">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing%2A&gt;</ph> property enables an application to turn off some automatic addressing headers to directly control addressing.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing%2A&gt;</ph> 속성을 사용하면 응용 프로그램에서 일부 자동 주소 헤더를 비활성화하고 주소를 직접 제어할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ClientRuntime">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.MaxFaultSize%2A&gt;</ph> property enables the client to limit the size of fault messages that the client accepts.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.MaxFaultSize%2A&gt;</ph> 속성을 사용하면 클라이언트가 수락하는 오류 메시지의 크기를 제한할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ClientRuntime">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors%2A&gt;</ph> property gets a collection of <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IClientMessageInspector&gt;</ph> objects to which you can add custom message interceptors for all messages traveling through a client.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors%2A&gt;</ph> 속성은 클라이언트를 통해 이동하는 모든 메시지에 대한 사용자 지정 메시지 인터셉터를 추가할 수 있는 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IClientMessageInspector&gt;</ph> 개체 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ClientRuntime">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.UnhandledClientOperation%2A&gt;</ph> property returns the operation to which unexpected messages are passed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.UnhandledClientOperation%2A&gt;</ph> 속성은 예기치 않은 메시지가 전달되는 작업을 반환합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ClientRuntime">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.ValidateMustUnderstand%2A&gt;</ph> property informs the system whether it should confirm that SOAP headers marked as <ph id="ph2">`MustUnderstand`</ph> have, in fact, been understood.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.ValidateMustUnderstand%2A&gt;</ph> 속성은 <ph id="ph2">`MustUnderstand`</ph>로 표시된 SOAP 헤더가 실제로 인식되었음을 확인해야 하는지 여부를 시스템에 알려 줍니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ClientRuntime">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.Via%2A&gt;</ph> property sets the value of the destination of the message at the transport level to support intermediaries and other scenarios.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.Via%2A&gt;</ph> 속성은 중간 매개자와 기타 시나리오를 지원하도록 전송 수준에서 메시지 대상 값을 설정합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ClientRuntime">
          <source>In addition, there are a number of other properties that retrieve the client contract information:</source>
          <target state="translated">또한 클라이언트 계약 정보를 검색하는 몇 가지 속성이 있습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ClientRuntime">
          <source>If the client is a duplex client, the following properties also retrieve the client callback type and runtime:</source>
          <target state="translated">클라이언트가 이중 클라이언트인 경우 다음 속성도 클라이언트 형식과 런타임을 검색합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ClientRuntime">
          <source>In the following code example an <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType&gt;</ph> inserts a <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IClientMessageInspector?displayProperty=nameWithType&gt;</ph> into the client runtime by adding it to the <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors%2A&gt;</ph> property.</source>
          <target state="translated">다음 코드 예제에서 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType&gt;</ph>는 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IClientMessageInspector?displayProperty=nameWithType&gt;</ph>를 <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors%2A&gt;</ph> 속성에 추가하여 클라이언트 런타임에 삽입합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ClientRuntime">
          <source>The following code example shows a configuration file that loads the endpoint behavior into the client endpoint.</source>
          <target state="translated">다음 코드 예제에서는 끝점 동작을 클라이언트 끝점으로 로드하는 구성 파일을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.CallbackClientType">
          <source>Gets or sets the type of the callback contract associated with a duplex client.</source>
          <target state="translated">이중 클라이언트와 연결된 콜백 계약의 형식을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.CallbackClientType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> object that represents the callback contract associated with a duplex client.</source>
          <target state="translated">이중 계약과 연결된 콜백 계약을 나타내는 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.CallbackDispatchRuntime">
          <source>Gets the dispatch run-time that dispatches service-initiated operations.</source>
          <target state="translated">서비스 개시 작업을 디스패치하는 디스패치 런타임을 설정합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.CallbackDispatchRuntime">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.CallbackDispatchRuntime">
          <source>If the contract is a duplex contract, the dispatch behavior contains service-initiated operations; otherwise the dispatch behavior contains no operations.</source>
          <target state="translated">계약이 이중 계약이면 디스패치 동작에 서비스 개시 작업이 포함되지만, 그렇지 않으면 디스패치 동작에 작업이 포함되지 않습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.ChannelInitializers">
          <source>Gets a collection of channel initializer objects used to customize the channel associated with a client.</source>
          <target state="translated">클라이언트와 연결된 채널을 사용자 지정하는 데 사용되는 채널 이니셜라이저 개체 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.ChannelInitializers">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.IChannelInitializer" /&gt;</ph> implementations.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.IChannelInitializer" /&gt;</ph> 구현 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.ChannelInitializers">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.ChannelInitializers%2A&gt;</ph> property to add a custom <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IChannelInitializer&gt;</ph> object that can inspect the channel that is associated with a client on creation, register for events on the channel, and associate state with the channel by using <ph id="ph3">&lt;xref:System.ServiceModel.IExtension%601&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.ChannelInitializers%2A&gt;</ph> 속성을 사용하면 작성 시 클라이언트에 연결되는 채널을 가로채고, 채널에 대한 이벤트를 등록한 다음 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IChannelInitializer&gt;</ph>을 사용하여 채널에 상태를 연결할 수 있는 <ph id="ph3">&lt;xref:System.ServiceModel.IExtension%601&gt;</ph> 개체를 추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.ClientMessageInspectors">
          <source>Gets a collection of message inspector objects used to view or modify messages of a particular service operation.</source>
          <target state="translated">특정 서비스 작업의 메시지를 보거나 수정하는 데 사용되는 메시지 검사자 개체의 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.ClientMessageInspectors">
          <source>A collection of message inspector objects used to view or modify messages of a particular service operation.</source>
          <target state="translated">특정 서비스 작업의 메시지를 보거나 수정하는 데 사용되는 메시지 검사자 개체의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.ClientMessageInspectors">
          <source>ClientMessateInspectors is a thread safe collection.</source>
          <target state="translated">ClientMessateInspectors은 스레드로부터 안전한 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.ClientOperations">
          <source>Gets a collection of client operation objects used to attach extension objects that inspect or modify messages and behavior of a particular service operation.</source>
          <target state="translated">특정 서비스 작업의 동작과 메시지를 검사하고 수정하는 확장 개체를 연결하는 데 사용되는 클라이언트 작업 개체의 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.ClientOperations">
          <source>A collection of client operation objects used to attach extension objects that inspect or modify messages and behavior of a particular service operation.</source>
          <target state="translated">특정 서비스 작업의 동작과 메시지를 검사하고 수정하는 확장 개체를 연결하는 데 사용되는 클라이언트 작업 개체의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.ClientOperations">
          <source>ClientOperations is a thread safe collection.</source>
          <target state="translated">ClientOperations은 스레드로부터 안전한 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractClientType">
          <source>Gets or sets the type of the contract associated with a client.</source>
          <target state="translated">클라이언트와 연결된 계약의 형식을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractClientType">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> object that represents the contract associated with this client.</source>
          <target state="translated">이 클라이언트와 연결된 계약을 나타내는 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractName">
          <source>Gets the name of the contract associated with a client.</source>
          <target state="translated">클라이언트와 연결된 계약 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractName">
          <source>The contract name for a client.</source>
          <target state="translated">클라이언트에 대한 계약 이름입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractNamespace">
          <source>Gets the namespace of the contract associated with a client.</source>
          <target state="translated">클라이언트와 연결된 계약의 네임스페이스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractNamespace">
          <source>The namespace of the contract associated with a client.</source>
          <target state="translated">클라이언트와 연결된 계약의 네임스페이스입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers">
          <source>Gets a collection of an interactive channel initializer.</source>
          <target state="translated">대화형 채널 이니셜라이저의 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers">
          <source>A synchronized collection of type <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer" /&gt;</ph> 형식의 동기화된 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers">
          <source>For details about how to use interactive channel initializers, see <bpt id="p1">[</bpt>Accessing Services Using a WCF Client<ept id="p1">](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md)</ept>.</source>
          <target state="translated">대화형 채널 이니셜라이저를 사용 하는 방법에 대 한 세부 정보를 참조 하십시오. <bpt id="p1">[</bpt>WCF 클라이언트를 사용 하 여 액세스 서비스<ept id="p1">](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers">
          <source>The following code example shows the use of an endpoint behavior to insert an interactive channel initializer.</source>
          <target state="translated">다음 코드 예제에서는 대화형 채널 이니셜라이저를 삽입 하는 끝점 동작의 사용을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing">
          <source>Gets or sets a value that indicates whether the client adds addressing headers to request-reply messages.</source>
          <target state="translated">클라이언트에서 요청/응답 메시지에 주소 헤더를 추가하는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the client does not add any addressing headers; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">클라이언트가 주소 헤더를 추가하지 않으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing">
          <source>Set the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing%2A&gt;</ph> property to <ph id="ph2">`true`</ph> if you want to prevent the client from adding Message ID and Reply-To addressing headers to request/response messages so that your application can control these headers.</source>
          <target state="translated">응용 프로그램에서 헤더를 제어할 수 있도록 클라이언트가 메시지 ID 및 회신 대상 주소 헤더를 요청/응답 메시지에 추가하지 못하게 하려면 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing%2A&gt;</ph> 속성을 <ph id="ph2">`true`</ph>로 설정합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing">
          <source>If <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the client does not support request-reply operations over a duplex channel.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing%2A&gt;</ph>이 <ph id="ph2">`true`</ph>이면 클라이언트는 양방향 채널에 대한 요청/응답 작업을 지원하지 않습니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.MaxFaultSize">
          <source>Gets or sets the maximum fault size.</source>
          <target state="translated">최대 오류 크기를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.MaxFaultSize">
          <source>An integer representing the maximum fault size.</source>
          <target state="translated">최대 오류 크기를 나타내는 정수입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.MaxFaultSize">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.MaxFaultSize%2A&gt;</ph> property to limit the size of fault messages accepted by the client runtime.</source>
          <target state="translated">클라이언트 런타임에서 수락하는 오류 메시지의 크기를 제한하려면 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.MaxFaultSize%2A&gt;</ph> 속성을 사용합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors">
          <source>Gets a collection of message inspector implementations for a client.</source>
          <target state="translated">클라이언트에 대한 메시지 검사자 구현 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.IClientMessageInspector" /&gt;</ph> implementations.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.IClientMessageInspector" /&gt;</ph> 구현 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors%2A&gt;</ph> property to attach custom <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IClientMessageInspector&gt;</ph> implementations to inspect or modify all messages that flow through the client.</source>
          <target state="translated">클라이언트를 통해 이동하는 모든 메시지를 검사하거나 수정하려면 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors%2A&gt;</ph> 속성을 사용하여 사용자 지정 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IClientMessageInspector&gt;</ph> 구현을 연결합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors">
          <source>In the following code example an <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType&gt;</ph> inserts a <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IClientMessageInspector?displayProperty=nameWithType&gt;</ph> into the client runtime by adding it to the <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors%2A&gt;</ph> property.</source>
          <target state="translated">다음 코드 예제에서 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType&gt;</ph>는 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IClientMessageInspector?displayProperty=nameWithType&gt;</ph>를 <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors%2A&gt;</ph> 속성에 추가하여 클라이언트 런타임에 삽입합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors">
          <source>The following code example shows a configuration file that loads the endpoint behavior into the client endpoint.</source>
          <target state="translated">다음 코드 예제에서는 끝점 동작을 클라이언트 끝점으로 로드하는 구성 파일을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.MessageVersionNoneFaultsEnabled">
          <source>Gets or sets a value that indicates whether the MessageVersionNoneFaultsEnabled property is set.</source>
          <target state="translated">MessageVersionNoneFaultsEnabled 속성이 설정되었는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.MessageVersionNoneFaultsEnabled">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the MessageVersionNoneFaultsEnabled property is set; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">MessageVersionNoneFaultsEnabled 속성이 설정되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.Operations">
          <source>Gets a collection of client operations for a client.</source>
          <target state="translated">클라이언트에 대한 클라이언트 작업 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.Operations">
          <source>A synchronized collection of <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /&gt;</ph> 개체의 동기화된 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.Operations">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.Operations%2A&gt;</ph> property to get a collection of all client operations for this client that you can use to attach extension objects that inspect or modify messages and behavior scoped to a particular operation.</source>
          <target state="translated">특정 작업 범위의 메시지와 동작을 검사하거나 수정하는 확장 개체를 연결하는 데 사용할 수 있는 이 클라이언트의 모든 클라이언트 작업 컬렉션을 가져오려면 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.Operations%2A&gt;</ph> 속성을 사용합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.Operations">
          <source>For details, see <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation&gt;</ph>.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.Operations">
          <source>In the following code example an <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType&gt;</ph> inserts a <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IParameterInspector?displayProperty=nameWithType&gt;</ph> into the client runtime by adding it to each <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation&gt;</ph> in the <ph id="ph4">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.Operations%2A&gt;</ph> property.</source>
          <target state="translated">다음 코드 예제에서 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType&gt;</ph>는 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IParameterInspector?displayProperty=nameWithType&gt;</ph>를 <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation&gt;</ph> 속성의 각 <ph id="ph4">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.Operations%2A&gt;</ph>에 추가하여 클라이언트 런타임에 삽입합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.OperationSelector">
          <source>Gets or sets an <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.IClientOperationSelector" /&gt;</ph> implementation that can be used to select a <ph id="ph2">&lt;see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.IClientOperationSelector" /&gt;</ph>을 선택하는 데 사용할 수 있는 <ph id="ph2">&lt;see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /&gt;</ph> 구현을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.OperationSelector">
          <source>An <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.IClientOperationSelector" /&gt;</ph> object that selects a <ph id="ph2">&lt;see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.IClientOperationSelector" /&gt;</ph>을 선택하는 <ph id="ph2">&lt;see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.OperationSelector">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.OperationSelector%2A&gt;</ph> property to modify the selection of an operation when a client invokes a particular method.</source>
          <target state="translated">클라이언트가 특정 메서드를 호출할 때 작업 선택을 수정하려면 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.OperationSelector%2A&gt;</ph> 속성을 사용합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.OperationSelector">
          <source>The default algorithm is to use the name of the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Name%2A&gt;</ph> of the operation method as a key to find the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation&gt;</ph> in the <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.Operations%2A&gt;</ph> collection.</source>
          <target state="translated">기본 알고리즘은 작업 메서드의 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Name%2A&gt;</ph> 이름을 키로 사용하여 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation&gt;</ph> 컬렉션에서 <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.Operations%2A&gt;</ph>을 찾는 것입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.OperationSelector">
          <source>If no matching <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation&gt;</ph> object is found, the invocation is dispatched to the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation&gt;</ph> object returned from the <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.UnhandledClientOperation%2A&gt;</ph> property.</source>
          <target state="translated">일치하는 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation&gt;</ph> 개체가 없으면 호출은 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation&gt;</ph> 속성에서 반환되는 <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.UnhandledClientOperation%2A&gt;</ph> 개체에 디스패치됩니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.UnhandledClientOperation">
          <source>Gets the client operation for methods that do not have a corresponding <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /&gt;</ph> in the <ph id="ph2">&lt;see cref="P:System.ServiceModel.Dispatcher.ClientRuntime.Operations" /&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /&gt;</ph> 컬렉션에 해당 <ph id="ph2">&lt;see cref="P:System.ServiceModel.Dispatcher.ClientRuntime.Operations" /&gt;</ph>이 없는 메서드에 대한 클라이언트 작업을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.UnhandledClientOperation">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /&gt;</ph> that represents the method to which the current message contents are routed when the operation selector cannot find an operation that matches the message.</source>
          <target state="translated">작업 선택기에서 메시지와 일치하는 작업을 찾을 수 없을 때 현재 메시지 내용이 라우팅되는 메서드를 나타내는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.ValidateMustUnderstand">
          <source>Gets or sets a value that specifies whether the system or the application enforces SOAP <ph id="ph1">&lt;see langword="MustUnderstand" /&gt;</ph> header processing.</source>
          <target state="translated">SOAP <ph id="ph1">&lt;see langword="MustUnderstand" /&gt;</ph> 헤더 처리를 시스템에서 수행하는지 아니면 응용 프로그램에서 수행하는지를 지정하는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.ValidateMustUnderstand">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the system is to perform SOAP header <ph id="ph2">&lt;see langword="MustUnderstand" /&gt;</ph> processing; otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>, which indicates that the application performs this processing.</source>
          <target state="translated">시스템에서 SOAP 헤더 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 처리를 수행할 경우 <ph id="ph2">&lt;see langword="MustUnderstand" /&gt;</ph>이고, 응용 프로그램에서 이 처리를 수행할 경우 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.ValidateMustUnderstand">
          <source>The default value is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.ValidateMustUnderstand">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.ValidateMustUnderstand%2A&gt;</ph> property to turn off the enforced validation of arriving message headers.</source>
          <target state="translated">도착하는 메시지 헤더에 적용되는 유효성 검사를 해제하려면 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.ValidateMustUnderstand%2A&gt;</ph> 속성을 사용합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.ValidateMustUnderstand">
          <source>In normal execution, message headers are compared against the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageHeaders.UnderstoodHeaders%2A&gt;</ph> property to confirm that arriving headers are explicitly handled by the service.</source>
          <target state="translated">정상적인 실행에서는 메시지 헤더를 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageHeaders.UnderstoodHeaders%2A&gt;</ph> 속성과 비교하여 도착하는 헤더가 서비스에서 명시적으로 처리되는지를 확인합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.ValidateMustUnderstand">
          <source>Set this to <ph id="ph1">`false`</ph> to disable this checking.</source>
          <target state="translated">이 확인을 사용하지 않으려면 이 속성을 <ph id="ph1">`false`</ph>로 설정합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.ValidateMustUnderstand">
          <source>When set to <ph id="ph1">`false`</ph>, the application must check for headers marked with MustUnderstand="true" and return a fault if one or more of them were not understood.</source>
          <target state="translated"><ph id="ph1">`false`</ph>로 설정하면 응용 프로그램에서 MustUnderstand="true"로 표시된 헤더를 검사하여 인식되지 않은 헤더가 있을 경우 오류를 반환합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.ValidateMustUnderstand">
          <source>This is useful when the application is supposed to accept any returned SOAP messages (for example, when using typed or untyped messages) and perform custom header processing.</source>
          <target state="translated">이 기능은 형식화된 메시지 또는 형식화되지 않은 메시지를 사용할 경우와 같이 반환된 SOAP 메시지를 응용 프로그램에서 수락하고 사용자 지정 헤더 처리를 수행해야 할 때 유용합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.Via">
          <source>Gets or sets the transport address that is used to send messages through the client.</source>
          <target state="translated">클라이언트를 통해 메시지를 보내는 데 사용되는 전송 주소를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.Via">
          <source>A <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> that is the destination address for the transport.</source>
          <target state="translated">전송 대상 주소인 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.Via">
          <source>The default value is the <ph id="ph1">&lt;see cref="P:System.ServiceModel.EndpointAddress.Uri" /&gt;</ph> value of the client.</source>
          <target state="translated">기본값은 클라이언트의 <ph id="ph1">&lt;see cref="P:System.ServiceModel.EndpointAddress.Uri" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.Via">
          <source>Set the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.Via%2A&gt;</ph> property to specify a transport address for messages when the immediate destination of messages is not the client's <ph id="ph2">&lt;xref:System.ServiceModel.EndpointAddress.Uri%2A&gt;</ph>.</source>
          <target state="translated">클라이언트의 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.Via%2A&gt;</ph>가 메시지의 직접 대상이 아닐 경우 메시지의 전송 주소를 지정하려면 <ph id="ph2">&lt;xref:System.ServiceModel.EndpointAddress.Uri%2A&gt;</ph> 속성을 사용합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.Via">
          <source>This enables you to specify SOAP intermediaries and handle scenarios in which the value of the <ph id="ph1">&lt;xref:System.ServiceModel.EndpointAddress.Uri%2A&gt;</ph> property of the client is a logical name.</source>
          <target state="translated">이렇게 하면 SOAP 중간 매개자를 지정하고 클라이언트의 <ph id="ph1">&lt;xref:System.ServiceModel.EndpointAddress.Uri%2A&gt;</ph> 속성 값이 논리적 이름인 시나리오를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientRuntime.Via">
          <source>It is this value that the <ph id="ph1">&lt;xref:System.ServiceModel.Description.ClientViaBehavior?displayProperty=nameWithType&gt;</ph> sets from a configuration file.</source>
          <target state="translated">이 값은 <ph id="ph1">&lt;xref:System.ServiceModel.Description.ClientViaBehavior?displayProperty=nameWithType&gt;</ph>를 사용하여 구성 파일에서 설정합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>