<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IExtension`1.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">73cd4428-9abd-4836-b1ef-ba70fe2e0b725e23c364cd0eb8b30c490d766f998a5de4886ca7.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5e23c364cd0eb8b30c490d766f998a5de4886ca7</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.IExtension`1">
          <source>The object that participates in the custom behavior.</source>
          <target state="translated">사용자 지정 동작에 참여하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.IExtension`1">
          <source>Enables an object to extend another object through aggregation.</source>
          <target state="translated">집합체를 통해 개체에서 다른 개체를 확장할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.IExtension`1">
          <source>WCF allows you to extend <ph id="ph1">&lt;xref:System.ServiceModel.IExtensibleObject%601?displayProperty=nameWithType&gt;</ph> objects (the <ph id="ph2">&lt;xref:System.ServiceModel.IContextChannel?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.ServiceModel.InstanceContext?displayProperty=nameWithType&gt;</ph>, and <ph id="ph5">&lt;xref:System.ServiceModel.OperationContext?displayProperty=nameWithType&gt;</ph> classes) by adding a new state or behavior by using its extensible object pattern.</source>
          <target state="translated">WCF 확장할 수 있습니다. <ph id="ph1">&lt;xref:System.ServiceModel.IExtensibleObject%601?displayProperty=nameWithType&gt;</ph> 개체 (의 <ph id="ph2">&lt;xref:System.ServiceModel.IContextChannel?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.ServiceModel.InstanceContext?displayProperty=nameWithType&gt;</ph>, 및 <ph id="ph5">&lt;xref:System.ServiceModel.OperationContext?displayProperty=nameWithType&gt;</ph> 클래스) 확장 가능한 개체 패턴을 사용 하 여 새 상태나 동작을 추가 하 여 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.IExtension`1">
          <source>The extensible object pattern is used in WCF to either extend existing run-time classes with new functionality or to add new state features to an object.</source>
          <target state="translated">확장명 가능한 개체 패턴은 새 기능으로 기존 런타임 클래스를 확장 하거나 하거나 개체에 새 상태 기능을 추가 하려면 WCF에서 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.IExtension`1.Attach(`0)">
          <source>The extensible object that aggregates this extension.</source>
          <target state="translated">이 확장을 집계하는 확장명 가능한 개체입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.IExtension`1.Attach(`0)">
          <source>Enables an extension object to find out when it has been aggregated.</source>
          <target state="translated">확장명 개체가 집계된 시기를 확인할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.IExtension`1.Attach(`0)">
          <source>Called when the extension is added to the <ph id="ph1">&lt;see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" /&gt;</ph> property.</source>
          <target state="translated">확장이 <ph id="ph1">&lt;see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" /&gt;</ph> 속성에 추가되면 호출됩니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.IExtension`1.Attach(`0)">
          <source>Use this method to keep track of the <ph id="ph1">&lt;xref:System.ServiceModel.IExtensibleObject%601&gt;</ph> object to which the current instance of the extension belongs.</source>
          <target state="translated">확장의 현재 인스턴스가 속한 <ph id="ph1">&lt;xref:System.ServiceModel.IExtensibleObject%601&gt;</ph> 개체를 추적하려면 이 메서드를 사용합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.IExtension`1.Attach(`0)">
          <source>This call gives extensions a chance to handle events or inspect properties of their owner.</source>
          <target state="translated">이렇게 호출하면 확장에서 이벤트를 처리하고 소유자의 속성을 검사할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.IExtension`1.Attach(`0)">
          <source>The following example code shows how this method can be used to keep track of the <ph id="ph1">&lt;xref:System.ServiceModel.IExtensibleObject%601&gt;</ph> object to which the current instance of the extension belongs.</source>
          <target state="translated">다음 예제 코드에서는 확장의 현재 인스턴스가 속한 <ph id="ph1">&lt;xref:System.ServiceModel.IExtensibleObject%601&gt;</ph> 개체를 추적하기 위해 이 메서드를 사용할 수 있는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.IExtension`1.Detach(`0)">
          <source>The extensible object that aggregates this extension.</source>
          <target state="translated">이 확장을 집계하는 확장명 가능한 개체입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.IExtension`1.Detach(`0)">
          <source>Enables an object to find out when it is no longer aggregated.</source>
          <target state="translated">확장 개체가 더 이상 집계되지 않는 시기를 확인할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.IExtension`1.Detach(`0)">
          <source>Called when an extension is removed from the <ph id="ph1">&lt;see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" /&gt;</ph> property.</source>
          <target state="translated">확장이 <ph id="ph1">&lt;see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" /&gt;</ph> 속성에서 제거되면 호출됩니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.IExtension`1.Detach(`0)">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.IExtension%601.Detach%2A&gt;</ph> method to find out when the extension has been removed.</source>
          <target state="translated">확장이 제거된 시기를 확인하려면 <ph id="ph1">&lt;xref:System.ServiceModel.IExtension%601.Detach%2A&gt;</ph> 메서드를 사용합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.IExtension`1.Detach(`0)">
          <source>An extension can use this to unhook events on the extensible object.</source>
          <target state="translated">확장에서 이 메서드를 사용하여 확장 가능한 개체에서 이벤트를 언후크할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.IExtension`1.Detach(`0)">
          <source>An extension can also throw <ph id="ph1">&lt;xref:System.InvalidOperationException?displayProperty=nameWithType&gt;</ph> from this method to indicate that, once added, the extension cannot be removed.</source>
          <target state="translated">확장은 이 메서드의 <ph id="ph1">&lt;xref:System.InvalidOperationException?displayProperty=nameWithType&gt;</ph>을 throw하여 확장을 추가한 후에는 제거할 수 없음을 나타낼 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.IExtension`1.Detach(`0)">
          <source>Note that this method is not called when the owner object is disposed or closed.</source>
          <target state="translated">소유자 개체를 삭제하거나 닫으면 이 메서드가 호출되지 않습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.IExtension`1.Detach(`0)">
          <source>If needed, it is up to the extension or the code adding the extension to hook the appropriate <ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject?displayProperty=nameWithType&gt;</ph> events or implement the appropriate interfaces (for <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext?displayProperty=nameWithType&gt;</ph>) to observe the lifecycle of the owner.</source>
          <target state="translated">필요한 경우 확장이나 확장을 추가하는 코드에 따라 적절한 <ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject?displayProperty=nameWithType&gt;</ph> 이벤트를 후크하거나, <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext?displayProperty=nameWithType&gt;</ph>의 적절한 인터페이스를 구현하여 소유자의 수명을 확인할 수 있습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>