<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CollectionDataContractAttribute.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">73cd4428-9abd-4836-b1ef-ba70fe2e0b721eec2d1d599c216d78482035654dec1cc807f99f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1eec2d1d599c216d78482035654dec1cc807f99f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.CollectionDataContractAttribute">
          <source>When applied to a collection type, enables custom specification of the collection item elements.</source>
          <target state="translated">컬렉션 형식에 적용할 경우 컬렉션 항목 요소를 사용자 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.CollectionDataContractAttribute">
          <source>This attribute can be applied only to types that are recognized by the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph> as valid, serializable collections.</source>
          <target state="translated">이 특성은 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph>에서 serialize할 수 있는 유효한 컬렉션으로 인식한 형식에만 적용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.CollectionDataContractAttribute">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Serialization.CollectionDataContractAttribute&gt;</ph> is intended to ease interoperability when working with data from non-WCF providers and to control the exact shape of serialized instances.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Serialization.CollectionDataContractAttribute&gt;</ph> serialize 된 인스턴스의 정확한 모양을 제어 하 고 비 WCF 공급자의 데이터를에서 작업할 때 상호 운용성을 쉽게 하기 위한 것입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.CollectionDataContractAttribute">
          <source>To this end, the <ph id="ph1">&lt;xref:System.Runtime.Serialization.CollectionDataContractAttribute.ItemName%2A&gt;</ph> property enables you to control the names of the repeating items inside a collection.</source>
          <target state="translated">따라서 <ph id="ph1">&lt;xref:System.Runtime.Serialization.CollectionDataContractAttribute.ItemName%2A&gt;</ph> 속성을 사용하면 컬렉션 내의 반복 항목의 이름을 제어할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.CollectionDataContractAttribute">
          <source>This is especially useful when the provider does not use the XML element type name as the array item name, for example, if a provider uses "String" as an element type name instead of the XSD type name "string".</source>
          <target state="translated">이 기능은 공급자가 XSD 형식 이름인 "string" 대신에 "String"을 요소 형식 이름으로 사용하는 경우와 같이 공급자가 XML 요소 형식 이름을 배열 항목 이름으로 사용하지 않을 때 특히 유용합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.CollectionDataContractAttribute">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Serialization.CollectionDataContractAttribute&gt;</ph> is also intended to be used with dictionary types to handle keyed collections.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Runtime.Serialization.CollectionDataContractAttribute&gt;</ph>는 키 컬렉션을 처리하기 위해 사전 형식과 함께 사용됩니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.CollectionDataContractAttribute">
          <source>Dictionary types are classes that implement either the <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> or the <ph id="ph2">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph> interface, for example, the <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</source>
          <target state="translated">사전 형식은 <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph> 인터페이스(예: <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>)를 구현하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.CollectionDataContractAttribute">
          <source>Use the <ph id="ph1">&lt;xref:System.Runtime.Serialization.CollectionDataContractAttribute.KeyName%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.Serialization.CollectionDataContractAttribute.ValueName%2A&gt;</ph> properties to set custom names when using the <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Serialization.CollectionDataContractAttribute.KeyName%2A&gt;</ph> 클래스를 사용할 경우 사용자 지정 이름을 설정하려면 <ph id="ph2">&lt;xref:System.Runtime.Serialization.CollectionDataContractAttribute.ValueName%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> 속성을 사용합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.CollectionDataContractAttribute">
          <source>For more information about using the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph>, see <bpt id="p1">[</bpt>Using Data Contracts<ept id="p1">](~/docs/framework/wcf/feature-details/using-data-contracts.md)</ept>.</source>
          <target state="translated">사용 하는 방법에 대 한 자세한 내용은 <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph>, 참조 <bpt id="p1">[</bpt>를 사용 하 여 데이터 계약<ept id="p1">](~/docs/framework/wcf/feature-details/using-data-contracts.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.CollectionDataContractAttribute">
          <source>The following example applies the <ph id="ph1">&lt;xref:System.Runtime.Serialization.CollectionDataContractAttribute&gt;</ph> to a class that inherits from the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> class.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Runtime.Serialization.CollectionDataContractAttribute&gt;</ph> 클래스에서 상속된 클래스에 <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph>를 적용합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.CollectionDataContractAttribute">
          <source>The code sets the <ph id="ph1">&lt;xref:System.Runtime.Serialization.CollectionDataContractAttribute.Name%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.Serialization.CollectionDataContractAttribute.ItemName%2A&gt;</ph> properties to custom values.</source>
          <target state="translated">이 코드에서는 <ph id="ph1">&lt;xref:System.Runtime.Serialization.CollectionDataContractAttribute.Name%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Runtime.Serialization.CollectionDataContractAttribute.ItemName%2A&gt;</ph> 속성을 사용자 지정 값으로 설정합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.CollectionDataContractAttribute">
          <source>When the <bpt id="p1">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id="p1">](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept> is used to generate code for the client, the code resembles the following example.</source>
          <target state="translated">경우는 <bpt id="p1">[</bpt>ServiceModel Metadata 유틸리티 도구 (Svcutil.exe)<ept id="p1">](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept> 은 다음 예제와 유사한 코드는 클라이언트에 대 한 코드를 생성 하는 데 사용 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.CollectionDataContractAttribute">
          <source>Notice that the name of the class is changed, as well as the <ph id="ph1">&lt;xref:System.Runtime.Serialization.CollectionDataContractAttribute.ItemName%2A&gt;</ph>.</source>
          <target state="translated">클래스 이름은 <ph id="ph1">&lt;xref:System.Runtime.Serialization.CollectionDataContractAttribute.ItemName%2A&gt;</ph>과 함께 변경됩니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.CollectionDataContractAttribute">
          <source>When using generics, the type parameter name is used to create the resulting type name.</source>
          <target state="translated">제네릭을 사용할 때는 형식 매개 변수 이름을 사용하여 결과 형식 이름이 만들어집니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.CollectionDataContractAttribute.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.CollectionDataContractAttribute" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.CollectionDataContractAttribute" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.CollectionDataContractAttribute.IsItemNameSetExplicitly">
          <source>Gets whether <ph id="ph1">&lt;see cref="P:System.Runtime.Serialization.CollectionDataContractAttribute.ItemName" /&gt;</ph> has been explicitly set.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Runtime.Serialization.CollectionDataContractAttribute.ItemName" /&gt;</ph>이 명시적으로 설정되었는지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.CollectionDataContractAttribute.IsItemNameSetExplicitly">
          <source>Returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the item name has been explicitly set; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">반환 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 항목 이름에 설정 된 경우 명시적으로 그렇지 <ph id="ph2">&lt;see langword="false" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.CollectionDataContractAttribute.IsKeyNameSetExplicitly">
          <source>Gets whether <ph id="ph1">&lt;see cref="P:System.Runtime.Serialization.CollectionDataContractAttribute.KeyName" /&gt;</ph> has been explicitly set.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Runtime.Serialization.CollectionDataContractAttribute.KeyName" /&gt;</ph>이 명시적으로 설정되었는지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.CollectionDataContractAttribute.IsKeyNameSetExplicitly">
          <source>Returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the key name has been explicitly set; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">반환 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 키 이름에 설정 된 경우 명시적으로 그렇지 <ph id="ph2">&lt;see langword="false" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.CollectionDataContractAttribute.IsNameSetExplicitly">
          <source>Gets whether <ph id="ph1">&lt;see cref="P:System.Runtime.Serialization.CollectionDataContractAttribute.Name" /&gt;</ph> has been explicitly set.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Runtime.Serialization.CollectionDataContractAttribute.Name" /&gt;</ph>이 명시적으로 설정되었는지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.CollectionDataContractAttribute.IsNameSetExplicitly">
          <source>Returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the name has been explicitly set; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">반환 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 이름에 설정 된 경우 명시적으로 그렇지 <ph id="ph2">&lt;see langword="false" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.CollectionDataContractAttribute.IsNamespaceSetExplicitly">
          <source>Gets whether <ph id="ph1">&lt;see cref="P:System.Runtime.Serialization.CollectionDataContractAttribute.Namespace" /&gt;</ph> has been explicitly set.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Runtime.Serialization.CollectionDataContractAttribute.Namespace" /&gt;</ph>이 명시적으로 설정되었는지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.CollectionDataContractAttribute.IsNamespaceSetExplicitly">
          <source>Returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the item namespace has been explicitly set; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">반환 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 항목 네임 스페이스에 설정 된 경우 명시적으로 그렇지 <ph id="ph2">&lt;see langword="false" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.CollectionDataContractAttribute.IsReference">
          <source>Gets or sets a value that indicates whether to preserve object reference data.</source>
          <target state="translated">개체 참조 데이터를 유지할지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.CollectionDataContractAttribute.IsReference">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to keep object reference data; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">개체 참조 데이터를 유지하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.CollectionDataContractAttribute.IsReference">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.CollectionDataContractAttribute.IsReference">
          <source>The <ph id="ph1">`IsReference`</ph> setting does not apply to the elements of the collection.</source>
          <target state="translated"><ph id="ph1">`IsReference`</ph> 설정은 컬렉션의 요소에는 적용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.CollectionDataContractAttribute.IsReferenceSetExplicitly">
          <source>Gets whether reference has been explicitly set.</source>
          <target state="translated">참조가 명시적으로 설정되었는지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.CollectionDataContractAttribute.IsReferenceSetExplicitly">
          <source>Returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the reference has been explicitly set; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">반환 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 참조에 설정 된 경우 명시적으로 그렇지 <ph id="ph2">&lt;see langword="false" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.CollectionDataContractAttribute.IsValueNameSetExplicitly">
          <source>Gets whether <ph id="ph1">&lt;see cref="P:System.Runtime.Serialization.CollectionDataContractAttribute.ValueName" /&gt;</ph> has been explicitly set.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Runtime.Serialization.CollectionDataContractAttribute.ValueName" /&gt;</ph>이 명시적으로 설정되었는지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.CollectionDataContractAttribute.IsValueNameSetExplicitly">
          <source>Returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value name has been explicitly set; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">반환 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 값 이름에 설정 된 경우 명시적으로 그렇지 <ph id="ph2">&lt;see langword="false" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.CollectionDataContractAttribute.ItemName">
          <source>Gets or sets a custom name for a collection element.</source>
          <target state="translated">컬렉션 요소의 사용자 지정 이름을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.CollectionDataContractAttribute.ItemName">
          <source>The name to apply to collection elements.</source>
          <target state="translated">컬렉션 요소에 적용할 이름입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.CollectionDataContractAttribute.KeyName">
          <source>Gets or sets the custom name for a dictionary key name.</source>
          <target state="translated">사전 키 이름의 사용자 지정 이름을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.CollectionDataContractAttribute.KeyName">
          <source>The name to use instead of the default dictionary key name.</source>
          <target state="translated">기본 사전 키 이름 대신에 사용할 이름입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.CollectionDataContractAttribute.Name">
          <source>Gets or sets the data contract name for the collection type.</source>
          <target state="translated">컬렉션 형식의 데이터 계약 이름을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.CollectionDataContractAttribute.Name">
          <source>The data contract name for the collection type.</source>
          <target state="translated">컬렉션 형식의 데이터 계약 이름입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.CollectionDataContractAttribute.Namespace">
          <source>Gets or sets the namespace for the data contract.</source>
          <target state="translated">데이터 계약의 네임스페이스를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.CollectionDataContractAttribute.Namespace">
          <source>The namespace of the data contract.</source>
          <target state="translated">데이터 계약의 네임스페이스입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.CollectionDataContractAttribute.ValueName">
          <source>Gets or sets the custom name for a dictionary value name.</source>
          <target state="translated">사전 값 이름의 사용자 지정 이름을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.CollectionDataContractAttribute.ValueName">
          <source>The name to use instead of the default dictionary value name.</source>
          <target state="translated">기본 사전 값 이름 대신 사용할 이름입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>