<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MetadataImporter.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">73cd4428-9abd-4836-b1ef-ba70fe2e0b72a3a723198a4ad2a03956b8bc484957a70c328923.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a3a723198a4ad2a03956b8bc484957a70c328923</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Description.MetadataImporter">
          <source>Imports metadata into <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph> 개체로 메타데이터를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.MetadataImporter">
          <source>Use an implementation of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> abstract class to import service metadata.</source>
          <target state="translated">서비스 메타데이터를 가져오려면 <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> 추상 클래스의 구현을 사용합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.MetadataImporter">
          <source>Types that derive from the <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> class implement support for importing metadata formats that take advantage of the WS-Policy import logic in <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> 클래스에서 파생되는 형식은 <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph>에서 WS-Policy 가져오기 논리를 사용하는 메타데이터 형식 가져오기에 대한 지원을 구현합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.MetadataImporter">
          <source>A <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> implementation collects the policy expressions attached to the service metadata in a <ph id="ph2">&lt;xref:System.ServiceModel.Description.PolicyConversionContext?displayProperty=nameWithType&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> 구현에서는 <ph id="ph2">&lt;xref:System.ServiceModel.Description.PolicyConversionContext?displayProperty=nameWithType&gt;</ph> 개체의 서비스 메타데이터에 연결된 정책 식을 수집합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.MetadataImporter">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> then processes the policies as part of importing the metadata by calling the implementations of the <ph id="ph2">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=nameWithType&gt;</ph> interface in the <ph id="ph3">&lt;xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph>는 메타데이터를 가져올 때 <ph id="ph2">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=nameWithType&gt;</ph> 속성의 <ph id="ph3">&lt;xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=nameWithType&gt;</ph> 인터페이스 구현을 호출하여 정책을 처리합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.MetadataImporter">
          <source>You can add support for importing new policy assertions to a <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> by adding your own implementation of the <ph id="ph2">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=nameWithType&gt;</ph> interface to the <ph id="ph3">&lt;xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=nameWithType&gt;</ph> property on a <ph id="ph4">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> 인스턴스의 <ph id="ph2">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=nameWithType&gt;</ph> 속성에 <ph id="ph3">&lt;xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=nameWithType&gt;</ph> 인터페이스의 사용자 지정 구현을 추가하여 <ph id="ph4">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph>로 새 정책 어설션 가져오기에 대한 지원을 추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.MetadataImporter">
          <source>Alternatively, you can register your policy import extension in your application configuration file.</source>
          <target state="translated">또는 응용 프로그램 구성 파일에 정책 가져오기 확장을 등록할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.MetadataImporter">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType&gt;</ph> type is the implementation of the <ph id="ph2">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> abstract class included with WCF.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType&gt;</ph> 종류는의 구현에서 <ph id="ph2">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> 추상 WCF에 포함 된 클래스입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.MetadataImporter">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType&gt;</ph> type imports WSDL metadata with attached policies that are bundled in a <ph id="ph2">&lt;xref:System.ServiceModel.Description.MetadataSet?displayProperty=nameWithType&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType&gt;</ph> 형식은 <ph id="ph2">&lt;xref:System.ServiceModel.Description.MetadataSet?displayProperty=nameWithType&gt;</ph> 개체에 번들로 제공되는 연결된 정책과 함께 WSDL 메타데이터를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.MetadataImporter">
          <source>You can add support for importing WSDL extensions by implementing the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType&gt;</ph> interface and then adding your implementation to the <ph id="ph2">&lt;xref:System.ServiceModel.Description.WsdlImporter.WsdlImportExtensions%2A?displayProperty=nameWithType&gt;</ph> property on your <ph id="ph3">&lt;xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType&gt;</ph> 인터페이스를 구현한 다음 <ph id="ph2">&lt;xref:System.ServiceModel.Description.WsdlImporter.WsdlImportExtensions%2A?displayProperty=nameWithType&gt;</ph> 인스턴스의 <ph id="ph3">&lt;xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType&gt;</ph> 속성에 이 구현을 추가하여 WSDL 확장 가져오기에 대한 지원을 추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.MetadataImporter">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType&gt;</ph> can also load implementations of the <ph id="ph2">&lt;xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType&gt;</ph> interface registered in your application configuration file.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType&gt;</ph>에서 응용 프로그램 구성 파일에 등록된 <ph id="ph2">&lt;xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType&gt;</ph> 인터페이스의 구현을 로드할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.MetadataImporter">
          <source>Because the <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> constructor is internal, you cannot derive from <ph id="ph2">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> in this version.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> 생성자는 내부용이므로 이 버전의 <ph id="ph2">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph>에서 파생시킬 수 없습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.MetadataImporter">
          <source>The following example shows the use of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType&gt;</ph> derived class to import metadata using custom state, checking the <ph id="ph2">&lt;xref:System.ServiceModel.Description.MetadataImporter.Errors%2A&gt;</ph> property, compiling imported metadata to managed types and saving the result to a code file.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType&gt;</ph> 파생 클래스를 사용하여 메타데이터를 사용자 지정 상태로 가져온 다음, <ph id="ph2">&lt;xref:System.ServiceModel.Description.MetadataImporter.Errors%2A&gt;</ph> 속성을 검사하고, 가져온 메타데이터를 관리되는 형식으로 컴파일한 후 그 결과를 코드 파일로 저장하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Description.MetadataImporter.Errors">
          <source>Gets a value that indicates whether there were errors importing the metadata.</source>
          <target state="translated">메타데이터를 가져오는 과정에서 오류가 발생했는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.MetadataImporter.Errors">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.MetadataConversionError" /&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.MetadataConversionError" /&gt;</ph> 개체의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.MetadataImporter.Errors">
          <source>Always check the <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter.Errors%2A&gt;</ph> property after importing metadata and before using the metadata.</source>
          <target state="translated">메타데이터를 가져온 후와 메타데이터를 사용하기 전에 반드시 <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter.Errors%2A&gt;</ph> 속성을 확인하십시오.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.MetadataImporter.ImportAllContracts">
          <source>When overridden in a derived class, returns a collection of contracts imported from the metadata.</source>
          <target state="translated">파생 클래스에서 재정의되는 경우 메타데이터에서 가져온 계약 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.MetadataImporter.ImportAllContracts">
          <source>The contracts imported from the metadata.</source>
          <target state="translated">메타데이터에서 가져온 계약입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints">
          <source>When overridden in a derived class, returns all endpoints in the metadata.</source>
          <target state="translated">파생 클래스에서 재정의되는 경우 메타데이터의 모든 끝점을 반환합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph> objects that are published by a service.</source>
          <target state="translated">서비스에서 게시하는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph> 개체의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints%2A&gt;</ph> method to return all endpoints in the imported metadata.</source>
          <target state="translated">가져온 메타데이터의 모든 끝점을 반환하려면 <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints%2A&gt;</ph> 메서드를 구현합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints">
          <source>Metadata that has been imported as service endpoints cannot be used to create a runtime or export metadata because the imported endpoints contain no managed type information.</source>
          <target state="translated">가져온 끝점에 관리되는 형식 정보가 없기 때문에 서비스 끝점으로 가져온 메타데이터는 런타임 또는 내보내기 메타데이터를 만드는 데 사용될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints">
          <source>To use the metadata to create a client or service runtime or to generate metadata, you must first generate and compile code from the metadata and use that type information to create a new <ph id="ph1">&lt;xref:System.ServiceModel.Description.ContractDescription?displayProperty=nameWithType&gt;</ph> object using <ph id="ph2">&lt;xref:System.ServiceModel.Description.ContractDescription.GetContract%2A&gt;</ph>.</source>
          <target state="translated">메타데이터를 사용하여 클라이언트 또는 서비스 런타임을 만들거나 메타데이터를 생성하려면 먼저 메타데이터에서 코드를 생성하여 컴파일한 후 <ph id="ph1">&lt;xref:System.ServiceModel.Description.ContractDescription?displayProperty=nameWithType&gt;</ph>를 사용하여 해당 형식 정보로 새로운 <ph id="ph2">&lt;xref:System.ServiceModel.Description.ContractDescription.GetContract%2A&gt;</ph> 개체를 만들어야 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Description.MetadataImporter.KnownContracts">
          <source>Gets a dictionary of contracts by name that the importer knows about.</source>
          <target state="translated">가져오기에 알려진 이름을 기준으로 계약 사전을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.MetadataImporter.KnownContracts">
          <source>A dictionary of contracts listed by XML qualified name.</source>
          <target state="translated">정규화된 XML 이름으로 나열된 계약 사전입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.MetadataImporter.KnownContracts">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter.KnownContracts%2A&gt;</ph> property to add or remove contract descriptions and their associated XML names that the importer can reference.</source>
          <target state="translated">가져오기에서 참조할 수 있는 계약 설명과 연결된 XML 이름을 추가하거나 제거하려면 <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter.KnownContracts%2A&gt;</ph> 속성을 사용합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions">
          <source>Gets a collection of policy importers that the importer calls to process policy assertions.</source>
          <target state="translated">가져오기에서 정책 어설션을 처리하기 위해 호출하는 정책 가져오기 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions">
          <source>A collection of policy importers that the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.MetadataImporter" /&gt;</ph> uses to process policy assertions.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.MetadataImporter" /&gt;</ph>에서 정책 어설션을 처리하는 데 사용되는 정책 가져오기 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A&gt;</ph> property to add or remove policy importers that are invoked to process policy assertions in the metadata.</source>
          <target state="translated">메타데이터의 정책 어설션을 처리하기 위해 호출되는 정책 가져오기를 추가하거나 제거하려면 <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A&gt;</ph> 속성을 사용합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Description.MetadataImporter.State">
          <source>Gets or sets a collection of objects used in the importing of metadata.</source>
          <target state="translated">메타데이터 가져오기에 사용되는 개체 컬렉션을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.MetadataImporter.State">
          <source>A dictionary of objects keyed by type.</source>
          <target state="translated">형식이 키로 지정된 개체 사전입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.MetadataImporter.State">
          <source>Use the <ph id="ph1">`State`</ph> property to add or remove objects used in the importing of metadata.</source>
          <target state="translated">메타데이터 가져오기에 사용되는 개체를 추가하거나 제거하려면 <ph id="ph1">`State`</ph> 속성을 사용합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.MetadataImporter.State">
          <source>The following example shows the use of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter.State%2A&gt;</ph> property to add a custom <ph id="ph2">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter?displayProperty=nameWithType&gt;</ph> to import data structures in a particular way.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataImporter.State%2A&gt;</ph> 속성을 통해 사용자 지정 <ph id="ph2">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter?displayProperty=nameWithType&gt;</ph>를 추가함으로써 특정 방식으로 데이터 구조를 가져오는 방법을 보여 줍니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>